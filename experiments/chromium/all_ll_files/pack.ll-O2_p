; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/pack.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/pack.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLitePackParams = type { i32, i32 }
%"class.tflite::VectorOfTensors.68" = type { %"class.std::__1::vector.69", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { i64**, i64**, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i64** }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"class.std::__1::__compressed_pair.4" }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.tflite::RuntimeShape"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.tflite::RuntimeShape"** }
%"class.tflite::VectorOfTensors.57" = type { %"class.std::__1::vector.58", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { i32**, i32**, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i32** }
%"class.tflite::VectorOfTensors.46" = type { %"class.std::__1::vector.47", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i16**, i16**, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i16** }
%"class.tflite::VectorOfTensors.35" = type { %"class.std::__1::vector.36", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { i8**, i8**, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i8** }
%"class.tflite::VectorOfTensors.24" = type { %"class.std::__1::vector.25", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i8**, i8**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8** }
%"class.tflite::VectorOfTensors" = type { %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

@_ZZN6tflite3ops7builtin13Register_PACKEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin4pack12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin4pack12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [61 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/pack.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"data->values_count\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"NumDimensions(input0) >= data->axis\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"data->axis >= 0\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Type '%s' is not supported by pack.\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"HaveSameShapes(input0, input)\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"input0->type\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"input->params.zero_point\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"output->params.zero_point\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"input->params.scale\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"output->params.scale\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"axis >= 0\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin13Register_PACKEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin13Register_PACKEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin4pack12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLitePackParams**
  %5 = load %struct.TfLitePackParams*, %struct.TfLitePackParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %5, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %15 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %14, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %15(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %9, i32 %11) #9
  br label %228

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %18 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %17, align 8
  %19 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %24 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %23, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %24(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %20, i32 1) #9
  br label %228

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %25, %29
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %25 ]
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %5, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %34
  %45 = add nsw i32 %42, %40
  store i32 %45, i32* %41, align 4
  %46 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %34, %44
  %50 = phi i32 [ %39, %34 ], [ %48, %44 ]
  %51 = phi %struct.TfLiteIntArray* [ %37, %34 ], [ %46, %44 ]
  %52 = phi i32 [ %42, %34 ], [ %45, %44 ]
  %53 = icmp slt i32 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %56 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %55, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %56(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %228

57:                                               ; preds = %49
  %58 = icmp sgt i32 %52, -1
  br i1 %58, label %62, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %61 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %60, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %61(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %228

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %65 [
    i32 2, label %69
    i32 1, label %69
    i32 3, label %69
    i32 9, label %69
    i32 7, label %69
    i32 4, label %69
  ]

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %67 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %66, align 8
  %68 = tail call i8* @TfLiteTypeGetName(i32 %64) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %67(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i8* %68) #9
  br label %228

69:                                               ; preds = %62, %62, %62, %62, %62, %62
  %70 = icmp sgt i32 %9, 1
  br i1 %70, label %71, label %108

71:                                               ; preds = %69
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %77

73:                                               ; preds = %93
  %74 = load i32, i32* %10, align 4
  %75 = sext i32 %74 to i64
  %76 = icmp slt i64 %98, %75
  br i1 %76, label %77, label %106

77:                                               ; preds = %71, %73
  %78 = phi i64 [ 1, %71 ], [ %98, %73 ]
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %79, i64 0, i32 1, i64 %78
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %77
  %84 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %72, align 8
  %85 = sext i32 %81 to i64
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %84, i64 %85
  br label %87

87:                                               ; preds = %77, %83
  %88 = phi %struct.TfLiteTensor* [ %86, %83 ], [ null, %77 ]
  %89 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %35, %struct.TfLiteTensor* %88) #9
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %92 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %91, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %92(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0)) #9
  br label %228

93:                                               ; preds = %87
  %94 = load i32, i32* %63, align 8
  %95 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %94, %96
  %98 = add nuw nsw i64 %78, 1
  br i1 %97, label %73, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %88, i64 0, i32 0
  %101 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %102 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %101, align 8
  %103 = tail call i8* @TfLiteTypeGetName(i32 %94) #9
  %104 = load i32, i32* %100, align 8
  %105 = tail call i8* @TfLiteTypeGetName(i32 %104) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %102(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* %103, i8* %105) #9
  br label %228

106:                                              ; preds = %73
  %107 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  br label %108

108:                                              ; preds = %106, %69
  %109 = phi %struct.TfLiteIntArray* [ %107, %106 ], [ %51, %69 ]
  %110 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %40) #9
  %111 = icmp slt i32 %39, 0
  br i1 %111, label %132, label %112

112:                                              ; preds = %108
  %113 = zext i32 %40 to i64
  %114 = and i64 %113, 1
  %115 = icmp eq i32 %39, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = sub nsw i64 %113, %114
  br label %158

118:                                              ; preds = %158
  %119 = zext i32 %182 to i64
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i64 [ 0, %112 ], [ %185, %118 ]
  %122 = phi i64 [ 0, %112 ], [ %119, %118 ]
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %120
  %125 = load i32, i32* %41, align 4
  %126 = zext i32 %125 to i64
  %127 = icmp eq i64 %121, %126
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 %122
  %129 = select i1 %127, i32* %10, i32* %128
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %121
  store i32 %130, i32* %131, align 4
  br label %132

132:                                              ; preds = %124, %120, %108
  %133 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %17, align 8
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 1, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %139 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %138, align 8
  %140 = sext i32 %135 to i64
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %139, i64 %140
  br label %142

142:                                              ; preds = %132, %137
  %143 = phi %struct.TfLiteTensor* [ %141, %137 ], [ null, %132 ]
  %144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = load i32, i32* %63, align 8
  %147 = icmp eq i32 %145, %146
  br i1 %147, label %148, label %188

148:                                              ; preds = %142
  %149 = load i32, i32* %10, align 4
  %150 = icmp sgt i32 %149, 0
  br i1 %150, label %151, label %224

151:                                              ; preds = %148
  %152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %153 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %143, i64 0, i32 3, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %143, i64 0, i32 3, i32 0
  %157 = sext i32 %149 to i64
  br label %196

158:                                              ; preds = %158, %116
  %159 = phi i64 [ 0, %116 ], [ %185, %158 ]
  %160 = phi i32 [ 0, %116 ], [ %182, %158 ]
  %161 = phi i64 [ %117, %116 ], [ %186, %158 ]
  %162 = load i32, i32* %41, align 4
  %163 = zext i32 %162 to i64
  %164 = icmp eq i64 %159, %163
  %165 = zext i32 %160 to i64
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 %165
  %167 = select i1 %164, i32* %10, i32* %166
  %168 = xor i1 %164, true
  %169 = zext i1 %168 to i32
  %170 = add nuw nsw i32 %160, %169
  %171 = load i32, i32* %167, align 4
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %159
  store i32 %171, i32* %172, align 4
  %173 = or i64 %159, 1
  %174 = load i32, i32* %41, align 4
  %175 = zext i32 %174 to i64
  %176 = icmp eq i64 %173, %175
  %177 = zext i32 %170 to i64
  %178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 %177
  %179 = select i1 %176, i32* %10, i32* %178
  %180 = xor i1 %176, true
  %181 = zext i1 %180 to i32
  %182 = add nuw nsw i32 %170, %181
  %183 = load i32, i32* %179, align 4
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 %173
  store i32 %183, i32* %184, align 4
  %185 = add nuw nsw i64 %159, 2
  %186 = add i64 %161, -2
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %118, label %158

188:                                              ; preds = %142
  %189 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %190 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %189, align 8
  %191 = tail call i8* @TfLiteTypeGetName(i32 %145) #9
  %192 = load i32, i32* %63, align 8
  %193 = tail call i8* @TfLiteTypeGetName(i32 %192) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %190(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* %191, i8* %193) #9
  br label %228

194:                                              ; preds = %213
  %195 = icmp slt i64 %218, %157
  br i1 %195, label %196, label %224

196:                                              ; preds = %151, %194
  %197 = phi i64 [ 0, %151 ], [ %218, %194 ]
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %152, i64 0, i32 1, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = icmp slt i32 %199, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %196
  %202 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %153, align 8
  %203 = sext i32 %199 to i64
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %202, i64 %203
  br label %205

205:                                              ; preds = %196, %201
  %206 = phi %struct.TfLiteTensor* [ %204, %201 ], [ null, %196 ]
  %207 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 3, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, %155
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %212 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %211, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %212(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i32 %208, i32 %155) #9
  br label %228

213:                                              ; preds = %205
  %214 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 3, i32 0
  %215 = load float, float* %214, align 8
  %216 = load float, float* %156, align 8
  %217 = fcmp une float %215, %216
  %218 = add nuw nsw i64 %197, 1
  br i1 %217, label %219, label %194

219:                                              ; preds = %213
  %220 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %221 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %220, align 8
  %222 = fpext float %215 to double
  %223 = fpext float %216 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %221(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), double %222, double %223) #9
  br label %228

224:                                              ; preds = %194, %148
  %225 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %226 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %225, align 8
  %227 = tail call i32 %226(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %143, %struct.TfLiteIntArray* %110) #9
  br label %228

228:                                              ; preds = %219, %210, %90, %99, %54, %59, %65, %224, %188, %22, %13
  %229 = phi i32 [ 1, %13 ], [ 1, %22 ], [ 1, %65 ], [ 1, %59 ], [ 1, %54 ], [ 1, %188 ], [ %227, %224 ], [ 1, %99 ], [ 1, %90 ], [ 1, %210 ], [ 1, %219 ]
  ret i32 %229
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin4pack12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca %"class.tflite::VectorOfTensors.68", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::VectorOfTensors.57", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::VectorOfTensors.46", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::VectorOfTensors.35", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::VectorOfTensors.24", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::VectorOfTensors", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %16 = bitcast i8** %15 to %struct.TfLitePackParams**
  %17 = load %struct.TfLitePackParams*, %struct.TfLitePackParams** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 %26
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi %struct.TfLiteTensor* [ %27, %23 ], [ null, %2 ]
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %1823 [
    i32 1, label %32
    i32 3, label %333
    i32 9, label %627
    i32 7, label %921
    i32 2, label %1222
    i32 4, label %1522
  ]

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %40 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %39, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %40(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %1827

41:                                               ; preds = %32
  %42 = bitcast %"class.tflite::VectorOfTensors"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 72, i1 false) #9
  %43 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %44 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %43, align 8
  call void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %13, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %44) #9
  %45 = trunc i32 %36 to i8
  %46 = trunc i32 %34 to i16
  %47 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %13, i64 0, i32 2, i32 0, i32 0
  %48 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %13, i64 0, i32 0, i32 0, i32 0
  %49 = load float**, float*** %48, align 8
  %50 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #9
  %51 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %53, align 8, !alias.scope !2
  br label %82

54:                                               ; preds = %41
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %56 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %55, align 8, !noalias !2
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4, !noalias !2
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %56, i64 0, i32 1, i64 0
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %58, i32* %60, align 8, !alias.scope !2
  %61 = icmp sgt i32 %58, 5
  br i1 %61, label %62, label %69

62:                                               ; preds = %54
  %63 = sext i32 %58 to i64
  %64 = shl nsw i64 %63, 2
  %65 = call i8* @_Znam(i64 %64) #10, !noalias !2
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %67 = bitcast i32** %66 to i8**
  store i8* %65, i8** %67, align 8, !alias.scope !2
  %68 = bitcast i8* %65 to i32*
  br label %74

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %71 = bitcast %union.anon* %70 to i32*
  %72 = sext i32 %58 to i64
  %73 = shl nsw i64 %72, 2
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi i64 [ %64, %62 ], [ %73, %69 ]
  %76 = phi i32* [ %68, %62 ], [ %71, %69 ]
  %77 = bitcast i32* %76 to i8*
  %78 = bitcast i32* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %75, i1 false) #9
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %80 = bitcast %union.TfLitePtrUnion* %79 to float**
  %81 = load float*, float** %80, align 8
  br label %82

82:                                               ; preds = %74, %52
  %83 = phi i32 [ %58, %74 ], [ 0, %52 ]
  %84 = phi float* [ %81, %74 ], [ null, %52 ]
  %85 = shl i32 %36, 24
  %86 = ashr exact i32 %85, 24
  %87 = icmp sgt i8 %45, 0
  br i1 %87, label %88, label %117

88:                                               ; preds = %82
  %89 = icmp sgt i32 %83, 5
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %91 = getelementptr inbounds %union.anon, %union.anon* %90, i64 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = bitcast %union.anon* %90 to [5 x i32]*
  %94 = zext i32 %86 to i64
  %95 = add nsw i64 %94, -1
  %96 = and i64 %94, 3
  %97 = icmp ult i64 %95, 3
  br i1 %97, label %100, label %98

98:                                               ; preds = %88
  %99 = sub nsw i64 %94, %96
  br label %137

100:                                              ; preds = %137, %88
  %101 = phi i32 [ undef, %88 ], [ %163, %137 ]
  %102 = phi i64 [ 0, %88 ], [ %164, %137 ]
  %103 = phi i32 [ 1, %88 ], [ %163, %137 ]
  %104 = icmp eq i64 %96, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %100, %105
  %106 = phi i64 [ %114, %105 ], [ %102, %100 ]
  %107 = phi i32 [ %113, %105 ], [ %103, %100 ]
  %108 = phi i64 [ %115, %105 ], [ %96, %100 ]
  %109 = getelementptr inbounds i32, i32* %92, i64 %106
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 0, i64 %106
  %111 = select i1 %89, i32* %109, i32* %110
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %107
  %114 = add nuw nsw i64 %106, 1
  %115 = add i64 %108, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %105, !llvm.loop !5

117:                                              ; preds = %100, %105, %82
  %118 = phi i32 [ 1, %82 ], [ %101, %100 ], [ %113, %105 ]
  %119 = add nsw i32 %86, 1
  %120 = icmp slt i32 %119, %83
  br i1 %120, label %121, label %184

121:                                              ; preds = %117
  %122 = icmp sgt i32 %83, 5
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %124 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = bitcast %union.anon* %123 to [5 x i32]*
  %127 = sext i8 %45 to i64
  %128 = add nsw i64 %127, 1
  %129 = xor i32 %86, -1
  %130 = add i32 %83, %129
  %131 = add i32 %83, -2
  %132 = sub i32 %131, %86
  %133 = and i32 %130, 3
  %134 = icmp ult i32 %132, 3
  br i1 %134, label %167, label %135

135:                                              ; preds = %121
  %136 = sub i32 %130, %133
  br label %198

137:                                              ; preds = %137, %98
  %138 = phi i64 [ 0, %98 ], [ %164, %137 ]
  %139 = phi i32 [ 1, %98 ], [ %163, %137 ]
  %140 = phi i64 [ %99, %98 ], [ %165, %137 ]
  %141 = getelementptr inbounds i32, i32* %92, i64 %138
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 0, i64 %138
  %143 = select i1 %89, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = or i64 %138, 1
  %147 = getelementptr inbounds i32, i32* %92, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 0, i64 %146
  %149 = select i1 %89, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = or i64 %138, 2
  %153 = getelementptr inbounds i32, i32* %92, i64 %152
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 0, i64 %152
  %155 = select i1 %89, i32* %153, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = or i64 %138, 3
  %159 = getelementptr inbounds i32, i32* %92, i64 %158
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 0, i64 %158
  %161 = select i1 %89, i32* %159, i32* %160
  %162 = load i32, i32* %161, align 4
  %163 = mul nsw i32 %162, %157
  %164 = add nuw nsw i64 %138, 4
  %165 = add i64 %140, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %100, label %137

167:                                              ; preds = %198, %121
  %168 = phi i32 [ undef, %121 ], [ %224, %198 ]
  %169 = phi i64 [ %128, %121 ], [ %225, %198 ]
  %170 = phi i32 [ 1, %121 ], [ %224, %198 ]
  %171 = icmp eq i32 %133, 0
  br i1 %171, label %184, label %172

172:                                              ; preds = %167, %172
  %173 = phi i64 [ %181, %172 ], [ %169, %167 ]
  %174 = phi i32 [ %180, %172 ], [ %170, %167 ]
  %175 = phi i32 [ %182, %172 ], [ %133, %167 ]
  %176 = getelementptr inbounds i32, i32* %125, i64 %173
  %177 = getelementptr inbounds [5 x i32], [5 x i32]* %126, i64 0, i64 %173
  %178 = select i1 %122, i32* %176, i32* %177
  %179 = load i32, i32* %178, align 4
  %180 = mul nsw i32 %179, %174
  %181 = add i64 %173, 1
  %182 = add i32 %175, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %172, !llvm.loop !7

184:                                              ; preds = %167, %172, %117
  %185 = phi i32 [ 1, %117 ], [ %168, %167 ], [ %180, %172 ]
  %186 = icmp eq i16 %46, 0
  br i1 %186, label %279, label %187

187:                                              ; preds = %184
  %188 = icmp sgt i32 %118, 0
  %189 = sext i32 %185 to i64
  %190 = shl nsw i64 %189, 2
  %191 = and i32 %34, 65535
  %192 = zext i32 %191 to i64
  %193 = zext i32 %118 to i64
  %194 = and i64 %193, 1
  %195 = icmp eq i32 %118, 1
  %196 = sub nsw i64 %193, %194
  %197 = icmp eq i64 %194, 0
  br label %228

198:                                              ; preds = %198, %135
  %199 = phi i64 [ %128, %135 ], [ %225, %198 ]
  %200 = phi i32 [ 1, %135 ], [ %224, %198 ]
  %201 = phi i32 [ %136, %135 ], [ %226, %198 ]
  %202 = getelementptr inbounds i32, i32* %125, i64 %199
  %203 = getelementptr inbounds [5 x i32], [5 x i32]* %126, i64 0, i64 %199
  %204 = select i1 %122, i32* %202, i32* %203
  %205 = load i32, i32* %204, align 4
  %206 = mul nsw i32 %205, %200
  %207 = add i64 %199, 1
  %208 = getelementptr inbounds i32, i32* %125, i64 %207
  %209 = getelementptr inbounds [5 x i32], [5 x i32]* %126, i64 0, i64 %207
  %210 = select i1 %122, i32* %208, i32* %209
  %211 = load i32, i32* %210, align 4
  %212 = mul nsw i32 %211, %206
  %213 = add i64 %199, 2
  %214 = getelementptr inbounds i32, i32* %125, i64 %213
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %126, i64 0, i64 %213
  %216 = select i1 %122, i32* %214, i32* %215
  %217 = load i32, i32* %216, align 4
  %218 = mul nsw i32 %217, %212
  %219 = add i64 %199, 3
  %220 = getelementptr inbounds i32, i32* %125, i64 %219
  %221 = getelementptr inbounds [5 x i32], [5 x i32]* %126, i64 0, i64 %219
  %222 = select i1 %122, i32* %220, i32* %221
  %223 = load i32, i32* %222, align 4
  %224 = mul nsw i32 %223, %218
  %225 = add i64 %199, 4
  %226 = add i32 %201, -4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %167, label %198

228:                                              ; preds = %247, %187
  %229 = phi i64 [ 0, %187 ], [ %248, %247 ]
  br i1 %188, label %230, label %247

230:                                              ; preds = %228
  %231 = getelementptr inbounds float*, float** %49, i64 %229
  %232 = trunc i64 %229 to i32
  br i1 %195, label %233, label %250

233:                                              ; preds = %250, %230
  %234 = phi i64 [ 0, %230 ], [ %276, %250 ]
  br i1 %197, label %247, label %235

235:                                              ; preds = %233
  %236 = load float*, float** %231, align 8
  %237 = mul nsw i64 %234, %189
  %238 = getelementptr inbounds float, float* %236, i64 %237
  %239 = trunc i64 %234 to i32
  %240 = mul i32 %191, %239
  %241 = add nuw i32 %240, %232
  %242 = mul i32 %241, %185
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float* %84, i64 %243
  %245 = bitcast float* %244 to i8*
  %246 = bitcast float* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %190, i1 false) #9
  br label %247

247:                                              ; preds = %235, %233, %228
  %248 = add nuw nsw i64 %229, 1
  %249 = icmp eq i64 %248, %192
  br i1 %249, label %279, label %228

250:                                              ; preds = %230, %250
  %251 = phi i64 [ %276, %250 ], [ 0, %230 ]
  %252 = phi i64 [ %277, %250 ], [ %196, %230 ]
  %253 = load float*, float** %231, align 8
  %254 = mul nsw i64 %251, %189
  %255 = getelementptr inbounds float, float* %253, i64 %254
  %256 = trunc i64 %251 to i32
  %257 = mul i32 %191, %256
  %258 = add nuw i32 %257, %232
  %259 = mul i32 %258, %185
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds float, float* %84, i64 %260
  %262 = bitcast float* %261 to i8*
  %263 = bitcast float* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %262, i8* align 4 %263, i64 %190, i1 false) #9
  %264 = or i64 %251, 1
  %265 = load float*, float** %231, align 8
  %266 = mul nsw i64 %264, %189
  %267 = getelementptr inbounds float, float* %265, i64 %266
  %268 = trunc i64 %264 to i32
  %269 = mul i32 %191, %268
  %270 = add nuw i32 %269, %232
  %271 = mul i32 %270, %185
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float, float* %84, i64 %272
  %274 = bitcast float* %273 to i8*
  %275 = bitcast float* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 %190, i1 false) #9
  %276 = add nuw nsw i64 %251, 2
  %277 = add i64 %252, -2
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %233, label %250

279:                                              ; preds = %247, %184
  %280 = icmp sgt i32 %83, 5
  br i1 %280, label %281, label %287

281:                                              ; preds = %279
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %283 = load i32*, i32** %282, align 8
  %284 = icmp eq i32* %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %281
  %286 = bitcast i32* %283 to i8*
  call void @_ZdaPv(i8* %286) #10
  br label %287

287:                                              ; preds = %285, %281, %279
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #9
  %288 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %47, align 8
  %289 = icmp eq %"class.tflite::RuntimeShape"** %288, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %287
  %291 = ptrtoint %"class.tflite::RuntimeShape"** %288 to i64
  %292 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %13, i64 0, i32 2, i32 0, i32 1
  %293 = bitcast %"class.tflite::RuntimeShape"*** %292 to i64*
  store i64 %291, i64* %293, align 8
  %294 = bitcast %"class.tflite::RuntimeShape"** %288 to i8*
  call void @_ZdlPv(i8* %294) #10
  br label %295

295:                                              ; preds = %290, %287
  %296 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %13, i64 0, i32 1
  %297 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %296, i64 0, i32 0, i32 0
  %298 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %297, align 8
  %299 = icmp eq %"class.tflite::RuntimeShape"* %298, null
  br i1 %299, label %324, label %300

300:                                              ; preds = %295
  %301 = bitcast %"class.tflite::RuntimeShape"* %298 to i8*
  %302 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %13, i64 0, i32 1, i32 0, i32 1
  %303 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %302, align 8
  %304 = icmp eq %"class.tflite::RuntimeShape"* %303, %298
  br i1 %304, label %322, label %305

305:                                              ; preds = %300, %317
  %306 = phi %"class.tflite::RuntimeShape"* [ %307, %317 ], [ %303, %300 ]
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 -1
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %307, i64 0, i32 0
  %309 = load i32, i32* %308, align 8
  %310 = icmp sgt i32 %309, 5
  br i1 %310, label %311, label %317

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 -1, i32 1, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = icmp eq i32* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %311
  %316 = bitcast i32* %313 to i8*
  call void @_ZdaPv(i8* %316) #10
  br label %317

317:                                              ; preds = %315, %311, %305
  %318 = icmp eq %"class.tflite::RuntimeShape"* %307, %298
  br i1 %318, label %319, label %305

319:                                              ; preds = %317
  %320 = bitcast %"class.std::__1::vector.2"* %296 to i8**
  %321 = load i8*, i8** %320, align 8
  br label %322

322:                                              ; preds = %319, %300
  %323 = phi i8* [ %321, %319 ], [ %301, %300 ]
  store %"class.tflite::RuntimeShape"* %298, %"class.tflite::RuntimeShape"** %302, align 8
  call void @_ZdlPv(i8* %323) #10
  br label %324

324:                                              ; preds = %322, %295
  %325 = load float**, float*** %48, align 8
  %326 = icmp eq float** %325, null
  br i1 %326, label %332, label %327

327:                                              ; preds = %324
  %328 = ptrtoint float** %325 to i64
  %329 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %13, i64 0, i32 0, i32 0, i32 1
  %330 = bitcast float*** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = bitcast float** %325 to i8*
  call void @_ZdlPv(i8* %331) #10
  br label %332

332:                                              ; preds = %327, %324
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #9
  br label %1827

333:                                              ; preds = %28
  %334 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = icmp sgt i32 %337, -1
  br i1 %338, label %342, label %339

339:                                              ; preds = %333
  %340 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %341 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %340, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %341(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %1827

342:                                              ; preds = %333
  %343 = bitcast %"class.tflite::VectorOfTensors.24"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %343) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 -86, i64 72, i1 false) #9
  %344 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %345 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %344, align 8
  call void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"* nonnull %11, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %345) #9
  %346 = trunc i32 %337 to i8
  %347 = trunc i32 %335 to i16
  %348 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %11, i64 0, i32 2, i32 0, i32 0
  %349 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %11, i64 0, i32 0, i32 0, i32 0
  %350 = load i8**, i8*** %349, align 8
  %351 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %351) #9
  %352 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %352, label %353, label %355

353:                                              ; preds = %342
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %354, align 8, !alias.scope !8
  br label %383

355:                                              ; preds = %342
  %356 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %357 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %356, align 8, !noalias !8
  %358 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %357, i64 0, i32 0
  %359 = load i32, i32* %358, align 4, !noalias !8
  %360 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %357, i64 0, i32 1, i64 0
  %361 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %359, i32* %361, align 8, !alias.scope !8
  %362 = icmp sgt i32 %359, 5
  br i1 %362, label %363, label %370

363:                                              ; preds = %355
  %364 = sext i32 %359 to i64
  %365 = shl nsw i64 %364, 2
  %366 = call i8* @_Znam(i64 %365) #10, !noalias !8
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %368 = bitcast i32** %367 to i8**
  store i8* %366, i8** %368, align 8, !alias.scope !8
  %369 = bitcast i8* %366 to i32*
  br label %375

370:                                              ; preds = %355
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %372 = bitcast %union.anon* %371 to i32*
  %373 = sext i32 %359 to i64
  %374 = shl nsw i64 %373, 2
  br label %375

375:                                              ; preds = %370, %363
  %376 = phi i64 [ %365, %363 ], [ %374, %370 ]
  %377 = phi i32* [ %369, %363 ], [ %372, %370 ]
  %378 = bitcast i32* %377 to i8*
  %379 = bitcast i32* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %378, i8* align 4 %379, i64 %376, i1 false) #9
  %380 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %381 = bitcast %union.TfLitePtrUnion* %380 to i8**
  %382 = load i8*, i8** %381, align 8
  br label %383

383:                                              ; preds = %375, %353
  %384 = phi i32 [ %359, %375 ], [ 0, %353 ]
  %385 = phi i8* [ %382, %375 ], [ null, %353 ]
  %386 = shl i32 %337, 24
  %387 = ashr exact i32 %386, 24
  %388 = icmp sgt i8 %346, 0
  br i1 %388, label %389, label %418

389:                                              ; preds = %383
  %390 = icmp sgt i32 %384, 5
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %392 = getelementptr inbounds %union.anon, %union.anon* %391, i64 0, i32 0
  %393 = load i32*, i32** %392, align 8
  %394 = bitcast %union.anon* %391 to [5 x i32]*
  %395 = zext i32 %387 to i64
  %396 = add nsw i64 %395, -1
  %397 = and i64 %395, 3
  %398 = icmp ult i64 %396, 3
  br i1 %398, label %401, label %399

399:                                              ; preds = %389
  %400 = sub nsw i64 %395, %397
  br label %438

401:                                              ; preds = %438, %389
  %402 = phi i32 [ undef, %389 ], [ %464, %438 ]
  %403 = phi i64 [ 0, %389 ], [ %465, %438 ]
  %404 = phi i32 [ 1, %389 ], [ %464, %438 ]
  %405 = icmp eq i64 %397, 0
  br i1 %405, label %418, label %406

406:                                              ; preds = %401, %406
  %407 = phi i64 [ %415, %406 ], [ %403, %401 ]
  %408 = phi i32 [ %414, %406 ], [ %404, %401 ]
  %409 = phi i64 [ %416, %406 ], [ %397, %401 ]
  %410 = getelementptr inbounds i32, i32* %393, i64 %407
  %411 = getelementptr inbounds [5 x i32], [5 x i32]* %394, i64 0, i64 %407
  %412 = select i1 %390, i32* %410, i32* %411
  %413 = load i32, i32* %412, align 4
  %414 = mul nsw i32 %413, %408
  %415 = add nuw nsw i64 %407, 1
  %416 = add i64 %409, -1
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %406, !llvm.loop !11

418:                                              ; preds = %401, %406, %383
  %419 = phi i32 [ 1, %383 ], [ %402, %401 ], [ %414, %406 ]
  %420 = add nsw i32 %387, 1
  %421 = icmp slt i32 %420, %384
  br i1 %421, label %422, label %485

422:                                              ; preds = %418
  %423 = icmp sgt i32 %384, 5
  %424 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %425 = getelementptr inbounds %union.anon, %union.anon* %424, i64 0, i32 0
  %426 = load i32*, i32** %425, align 8
  %427 = bitcast %union.anon* %424 to [5 x i32]*
  %428 = sext i8 %346 to i64
  %429 = add nsw i64 %428, 1
  %430 = xor i32 %387, -1
  %431 = add i32 %384, %430
  %432 = add i32 %384, -2
  %433 = sub i32 %432, %387
  %434 = and i32 %431, 3
  %435 = icmp ult i32 %433, 3
  br i1 %435, label %468, label %436

436:                                              ; preds = %422
  %437 = sub i32 %431, %434
  br label %498

438:                                              ; preds = %438, %399
  %439 = phi i64 [ 0, %399 ], [ %465, %438 ]
  %440 = phi i32 [ 1, %399 ], [ %464, %438 ]
  %441 = phi i64 [ %400, %399 ], [ %466, %438 ]
  %442 = getelementptr inbounds i32, i32* %393, i64 %439
  %443 = getelementptr inbounds [5 x i32], [5 x i32]* %394, i64 0, i64 %439
  %444 = select i1 %390, i32* %442, i32* %443
  %445 = load i32, i32* %444, align 4
  %446 = mul nsw i32 %445, %440
  %447 = or i64 %439, 1
  %448 = getelementptr inbounds i32, i32* %393, i64 %447
  %449 = getelementptr inbounds [5 x i32], [5 x i32]* %394, i64 0, i64 %447
  %450 = select i1 %390, i32* %448, i32* %449
  %451 = load i32, i32* %450, align 4
  %452 = mul nsw i32 %451, %446
  %453 = or i64 %439, 2
  %454 = getelementptr inbounds i32, i32* %393, i64 %453
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %394, i64 0, i64 %453
  %456 = select i1 %390, i32* %454, i32* %455
  %457 = load i32, i32* %456, align 4
  %458 = mul nsw i32 %457, %452
  %459 = or i64 %439, 3
  %460 = getelementptr inbounds i32, i32* %393, i64 %459
  %461 = getelementptr inbounds [5 x i32], [5 x i32]* %394, i64 0, i64 %459
  %462 = select i1 %390, i32* %460, i32* %461
  %463 = load i32, i32* %462, align 4
  %464 = mul nsw i32 %463, %458
  %465 = add nuw nsw i64 %439, 4
  %466 = add i64 %441, -4
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %401, label %438

468:                                              ; preds = %498, %422
  %469 = phi i32 [ undef, %422 ], [ %524, %498 ]
  %470 = phi i64 [ %429, %422 ], [ %525, %498 ]
  %471 = phi i32 [ 1, %422 ], [ %524, %498 ]
  %472 = icmp eq i32 %434, 0
  br i1 %472, label %485, label %473

473:                                              ; preds = %468, %473
  %474 = phi i64 [ %482, %473 ], [ %470, %468 ]
  %475 = phi i32 [ %481, %473 ], [ %471, %468 ]
  %476 = phi i32 [ %483, %473 ], [ %434, %468 ]
  %477 = getelementptr inbounds i32, i32* %426, i64 %474
  %478 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %474
  %479 = select i1 %423, i32* %477, i32* %478
  %480 = load i32, i32* %479, align 4
  %481 = mul nsw i32 %480, %475
  %482 = add i64 %474, 1
  %483 = add i32 %476, -1
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %473, !llvm.loop !12

485:                                              ; preds = %468, %473, %418
  %486 = phi i32 [ 1, %418 ], [ %469, %468 ], [ %481, %473 ]
  %487 = icmp eq i16 %347, 0
  br i1 %487, label %573, label %488

488:                                              ; preds = %485
  %489 = icmp sgt i32 %419, 0
  %490 = sext i32 %486 to i64
  %491 = and i32 %335, 65535
  %492 = zext i32 %491 to i64
  %493 = zext i32 %419 to i64
  %494 = and i64 %493, 1
  %495 = icmp eq i32 %419, 1
  %496 = sub nsw i64 %493, %494
  %497 = icmp eq i64 %494, 0
  br label %528

498:                                              ; preds = %498, %436
  %499 = phi i64 [ %429, %436 ], [ %525, %498 ]
  %500 = phi i32 [ 1, %436 ], [ %524, %498 ]
  %501 = phi i32 [ %437, %436 ], [ %526, %498 ]
  %502 = getelementptr inbounds i32, i32* %426, i64 %499
  %503 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %499
  %504 = select i1 %423, i32* %502, i32* %503
  %505 = load i32, i32* %504, align 4
  %506 = mul nsw i32 %505, %500
  %507 = add i64 %499, 1
  %508 = getelementptr inbounds i32, i32* %426, i64 %507
  %509 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %507
  %510 = select i1 %423, i32* %508, i32* %509
  %511 = load i32, i32* %510, align 4
  %512 = mul nsw i32 %511, %506
  %513 = add i64 %499, 2
  %514 = getelementptr inbounds i32, i32* %426, i64 %513
  %515 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %513
  %516 = select i1 %423, i32* %514, i32* %515
  %517 = load i32, i32* %516, align 4
  %518 = mul nsw i32 %517, %512
  %519 = add i64 %499, 3
  %520 = getelementptr inbounds i32, i32* %426, i64 %519
  %521 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %519
  %522 = select i1 %423, i32* %520, i32* %521
  %523 = load i32, i32* %522, align 4
  %524 = mul nsw i32 %523, %518
  %525 = add i64 %499, 4
  %526 = add i32 %501, -4
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %468, label %498

528:                                              ; preds = %545, %488
  %529 = phi i64 [ 0, %488 ], [ %546, %545 ]
  br i1 %489, label %530, label %545

530:                                              ; preds = %528
  %531 = getelementptr inbounds i8*, i8** %350, i64 %529
  %532 = trunc i64 %529 to i32
  br i1 %495, label %533, label %548

533:                                              ; preds = %548, %530
  %534 = phi i64 [ 0, %530 ], [ %570, %548 ]
  br i1 %497, label %545, label %535

535:                                              ; preds = %533
  %536 = load i8*, i8** %531, align 8
  %537 = mul nsw i64 %534, %490
  %538 = getelementptr inbounds i8, i8* %536, i64 %537
  %539 = trunc i64 %534 to i32
  %540 = mul i32 %491, %539
  %541 = add nuw i32 %540, %532
  %542 = mul i32 %541, %486
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds i8, i8* %385, i64 %543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %544, i8* align 1 %538, i64 %490, i1 false) #9
  br label %545

545:                                              ; preds = %535, %533, %528
  %546 = add nuw nsw i64 %529, 1
  %547 = icmp eq i64 %546, %492
  br i1 %547, label %573, label %528

548:                                              ; preds = %530, %548
  %549 = phi i64 [ %570, %548 ], [ 0, %530 ]
  %550 = phi i64 [ %571, %548 ], [ %496, %530 ]
  %551 = load i8*, i8** %531, align 8
  %552 = mul nsw i64 %549, %490
  %553 = getelementptr inbounds i8, i8* %551, i64 %552
  %554 = trunc i64 %549 to i32
  %555 = mul i32 %491, %554
  %556 = add nuw i32 %555, %532
  %557 = mul i32 %556, %486
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i8, i8* %385, i64 %558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %559, i8* align 1 %553, i64 %490, i1 false) #9
  %560 = or i64 %549, 1
  %561 = load i8*, i8** %531, align 8
  %562 = mul nsw i64 %560, %490
  %563 = getelementptr inbounds i8, i8* %561, i64 %562
  %564 = trunc i64 %560 to i32
  %565 = mul i32 %491, %564
  %566 = add nuw i32 %565, %532
  %567 = mul i32 %566, %486
  %568 = sext i32 %567 to i64
  %569 = getelementptr inbounds i8, i8* %385, i64 %568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %569, i8* align 1 %563, i64 %490, i1 false) #9
  %570 = add nuw nsw i64 %549, 2
  %571 = add i64 %550, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %533, label %548

573:                                              ; preds = %545, %485
  %574 = icmp sgt i32 %384, 5
  br i1 %574, label %575, label %581

575:                                              ; preds = %573
  %576 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %577 = load i32*, i32** %576, align 8
  %578 = icmp eq i32* %577, null
  br i1 %578, label %581, label %579

579:                                              ; preds = %575
  %580 = bitcast i32* %577 to i8*
  call void @_ZdaPv(i8* %580) #10
  br label %581

581:                                              ; preds = %579, %575, %573
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %351) #9
  %582 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %348, align 8
  %583 = icmp eq %"class.tflite::RuntimeShape"** %582, null
  br i1 %583, label %589, label %584

584:                                              ; preds = %581
  %585 = ptrtoint %"class.tflite::RuntimeShape"** %582 to i64
  %586 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %11, i64 0, i32 2, i32 0, i32 1
  %587 = bitcast %"class.tflite::RuntimeShape"*** %586 to i64*
  store i64 %585, i64* %587, align 8
  %588 = bitcast %"class.tflite::RuntimeShape"** %582 to i8*
  call void @_ZdlPv(i8* %588) #10
  br label %589

589:                                              ; preds = %584, %581
  %590 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %11, i64 0, i32 1
  %591 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %590, i64 0, i32 0, i32 0
  %592 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %591, align 8
  %593 = icmp eq %"class.tflite::RuntimeShape"* %592, null
  br i1 %593, label %618, label %594

594:                                              ; preds = %589
  %595 = bitcast %"class.tflite::RuntimeShape"* %592 to i8*
  %596 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %11, i64 0, i32 1, i32 0, i32 1
  %597 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %596, align 8
  %598 = icmp eq %"class.tflite::RuntimeShape"* %597, %592
  br i1 %598, label %616, label %599

599:                                              ; preds = %594, %611
  %600 = phi %"class.tflite::RuntimeShape"* [ %601, %611 ], [ %597, %594 ]
  %601 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %600, i64 -1
  %602 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %601, i64 0, i32 0
  %603 = load i32, i32* %602, align 8
  %604 = icmp sgt i32 %603, 5
  br i1 %604, label %605, label %611

605:                                              ; preds = %599
  %606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %600, i64 -1, i32 1, i32 0
  %607 = load i32*, i32** %606, align 8
  %608 = icmp eq i32* %607, null
  br i1 %608, label %611, label %609

609:                                              ; preds = %605
  %610 = bitcast i32* %607 to i8*
  call void @_ZdaPv(i8* %610) #10
  br label %611

611:                                              ; preds = %609, %605, %599
  %612 = icmp eq %"class.tflite::RuntimeShape"* %601, %592
  br i1 %612, label %613, label %599

613:                                              ; preds = %611
  %614 = bitcast %"class.std::__1::vector.2"* %590 to i8**
  %615 = load i8*, i8** %614, align 8
  br label %616

616:                                              ; preds = %613, %594
  %617 = phi i8* [ %615, %613 ], [ %595, %594 ]
  store %"class.tflite::RuntimeShape"* %592, %"class.tflite::RuntimeShape"** %596, align 8
  call void @_ZdlPv(i8* %617) #10
  br label %618

618:                                              ; preds = %616, %589
  %619 = load i8**, i8*** %349, align 8
  %620 = icmp eq i8** %619, null
  br i1 %620, label %626, label %621

621:                                              ; preds = %618
  %622 = ptrtoint i8** %619 to i64
  %623 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %11, i64 0, i32 0, i32 0, i32 1
  %624 = bitcast i8*** %623 to i64*
  store i64 %622, i64* %624, align 8
  %625 = bitcast i8** %619 to i8*
  call void @_ZdlPv(i8* %625) #10
  br label %626

626:                                              ; preds = %621, %618
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %343) #9
  br label %1827

627:                                              ; preds = %28
  %628 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  %630 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 1
  %631 = load i32, i32* %630, align 4
  %632 = icmp sgt i32 %631, -1
  br i1 %632, label %636, label %633

633:                                              ; preds = %627
  %634 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %635 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %634, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %635(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %1827

636:                                              ; preds = %627
  %637 = bitcast %"class.tflite::VectorOfTensors.35"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %637) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %637, i8 -86, i64 72, i1 false) #9
  %638 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %639 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %638, align 8
  call void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.35"* nonnull %9, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %639) #9
  %640 = trunc i32 %631 to i8
  %641 = trunc i32 %629 to i16
  %642 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %9, i64 0, i32 2, i32 0, i32 0
  %643 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %9, i64 0, i32 0, i32 0, i32 0
  %644 = load i8**, i8*** %643, align 8
  %645 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %645) #9
  %646 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %646, label %647, label %649

647:                                              ; preds = %636
  %648 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %648, align 8, !alias.scope !13
  br label %677

649:                                              ; preds = %636
  %650 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %651 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %650, align 8, !noalias !13
  %652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %651, i64 0, i32 0
  %653 = load i32, i32* %652, align 4, !noalias !13
  %654 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %651, i64 0, i32 1, i64 0
  %655 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %653, i32* %655, align 8, !alias.scope !13
  %656 = icmp sgt i32 %653, 5
  br i1 %656, label %657, label %664

657:                                              ; preds = %649
  %658 = sext i32 %653 to i64
  %659 = shl nsw i64 %658, 2
  %660 = call i8* @_Znam(i64 %659) #10, !noalias !13
  %661 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %662 = bitcast i32** %661 to i8**
  store i8* %660, i8** %662, align 8, !alias.scope !13
  %663 = bitcast i8* %660 to i32*
  br label %669

664:                                              ; preds = %649
  %665 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %666 = bitcast %union.anon* %665 to i32*
  %667 = sext i32 %653 to i64
  %668 = shl nsw i64 %667, 2
  br label %669

669:                                              ; preds = %664, %657
  %670 = phi i64 [ %659, %657 ], [ %668, %664 ]
  %671 = phi i32* [ %663, %657 ], [ %666, %664 ]
  %672 = bitcast i32* %671 to i8*
  %673 = bitcast i32* %654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %672, i8* align 4 %673, i64 %670, i1 false) #9
  %674 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %675 = bitcast %union.TfLitePtrUnion* %674 to i8**
  %676 = load i8*, i8** %675, align 8
  br label %677

677:                                              ; preds = %669, %647
  %678 = phi i32 [ %653, %669 ], [ 0, %647 ]
  %679 = phi i8* [ %676, %669 ], [ null, %647 ]
  %680 = shl i32 %631, 24
  %681 = ashr exact i32 %680, 24
  %682 = icmp sgt i8 %640, 0
  br i1 %682, label %683, label %712

683:                                              ; preds = %677
  %684 = icmp sgt i32 %678, 5
  %685 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %686 = getelementptr inbounds %union.anon, %union.anon* %685, i64 0, i32 0
  %687 = load i32*, i32** %686, align 8
  %688 = bitcast %union.anon* %685 to [5 x i32]*
  %689 = zext i32 %681 to i64
  %690 = add nsw i64 %689, -1
  %691 = and i64 %689, 3
  %692 = icmp ult i64 %690, 3
  br i1 %692, label %695, label %693

693:                                              ; preds = %683
  %694 = sub nsw i64 %689, %691
  br label %732

695:                                              ; preds = %732, %683
  %696 = phi i32 [ undef, %683 ], [ %758, %732 ]
  %697 = phi i64 [ 0, %683 ], [ %759, %732 ]
  %698 = phi i32 [ 1, %683 ], [ %758, %732 ]
  %699 = icmp eq i64 %691, 0
  br i1 %699, label %712, label %700

700:                                              ; preds = %695, %700
  %701 = phi i64 [ %709, %700 ], [ %697, %695 ]
  %702 = phi i32 [ %708, %700 ], [ %698, %695 ]
  %703 = phi i64 [ %710, %700 ], [ %691, %695 ]
  %704 = getelementptr inbounds i32, i32* %687, i64 %701
  %705 = getelementptr inbounds [5 x i32], [5 x i32]* %688, i64 0, i64 %701
  %706 = select i1 %684, i32* %704, i32* %705
  %707 = load i32, i32* %706, align 4
  %708 = mul nsw i32 %707, %702
  %709 = add nuw nsw i64 %701, 1
  %710 = add i64 %703, -1
  %711 = icmp eq i64 %710, 0
  br i1 %711, label %712, label %700, !llvm.loop !16

712:                                              ; preds = %695, %700, %677
  %713 = phi i32 [ 1, %677 ], [ %696, %695 ], [ %708, %700 ]
  %714 = add nsw i32 %681, 1
  %715 = icmp slt i32 %714, %678
  br i1 %715, label %716, label %779

716:                                              ; preds = %712
  %717 = icmp sgt i32 %678, 5
  %718 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %719 = getelementptr inbounds %union.anon, %union.anon* %718, i64 0, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = bitcast %union.anon* %718 to [5 x i32]*
  %722 = sext i8 %640 to i64
  %723 = add nsw i64 %722, 1
  %724 = xor i32 %681, -1
  %725 = add i32 %678, %724
  %726 = add i32 %678, -2
  %727 = sub i32 %726, %681
  %728 = and i32 %725, 3
  %729 = icmp ult i32 %727, 3
  br i1 %729, label %762, label %730

730:                                              ; preds = %716
  %731 = sub i32 %725, %728
  br label %792

732:                                              ; preds = %732, %693
  %733 = phi i64 [ 0, %693 ], [ %759, %732 ]
  %734 = phi i32 [ 1, %693 ], [ %758, %732 ]
  %735 = phi i64 [ %694, %693 ], [ %760, %732 ]
  %736 = getelementptr inbounds i32, i32* %687, i64 %733
  %737 = getelementptr inbounds [5 x i32], [5 x i32]* %688, i64 0, i64 %733
  %738 = select i1 %684, i32* %736, i32* %737
  %739 = load i32, i32* %738, align 4
  %740 = mul nsw i32 %739, %734
  %741 = or i64 %733, 1
  %742 = getelementptr inbounds i32, i32* %687, i64 %741
  %743 = getelementptr inbounds [5 x i32], [5 x i32]* %688, i64 0, i64 %741
  %744 = select i1 %684, i32* %742, i32* %743
  %745 = load i32, i32* %744, align 4
  %746 = mul nsw i32 %745, %740
  %747 = or i64 %733, 2
  %748 = getelementptr inbounds i32, i32* %687, i64 %747
  %749 = getelementptr inbounds [5 x i32], [5 x i32]* %688, i64 0, i64 %747
  %750 = select i1 %684, i32* %748, i32* %749
  %751 = load i32, i32* %750, align 4
  %752 = mul nsw i32 %751, %746
  %753 = or i64 %733, 3
  %754 = getelementptr inbounds i32, i32* %687, i64 %753
  %755 = getelementptr inbounds [5 x i32], [5 x i32]* %688, i64 0, i64 %753
  %756 = select i1 %684, i32* %754, i32* %755
  %757 = load i32, i32* %756, align 4
  %758 = mul nsw i32 %757, %752
  %759 = add nuw nsw i64 %733, 4
  %760 = add i64 %735, -4
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %695, label %732

762:                                              ; preds = %792, %716
  %763 = phi i32 [ undef, %716 ], [ %818, %792 ]
  %764 = phi i64 [ %723, %716 ], [ %819, %792 ]
  %765 = phi i32 [ 1, %716 ], [ %818, %792 ]
  %766 = icmp eq i32 %728, 0
  br i1 %766, label %779, label %767

767:                                              ; preds = %762, %767
  %768 = phi i64 [ %776, %767 ], [ %764, %762 ]
  %769 = phi i32 [ %775, %767 ], [ %765, %762 ]
  %770 = phi i32 [ %777, %767 ], [ %728, %762 ]
  %771 = getelementptr inbounds i32, i32* %720, i64 %768
  %772 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %768
  %773 = select i1 %717, i32* %771, i32* %772
  %774 = load i32, i32* %773, align 4
  %775 = mul nsw i32 %774, %769
  %776 = add i64 %768, 1
  %777 = add i32 %770, -1
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %767, !llvm.loop !17

779:                                              ; preds = %762, %767, %712
  %780 = phi i32 [ 1, %712 ], [ %763, %762 ], [ %775, %767 ]
  %781 = icmp eq i16 %641, 0
  br i1 %781, label %867, label %782

782:                                              ; preds = %779
  %783 = icmp sgt i32 %713, 0
  %784 = sext i32 %780 to i64
  %785 = and i32 %629, 65535
  %786 = zext i32 %785 to i64
  %787 = zext i32 %713 to i64
  %788 = and i64 %787, 1
  %789 = icmp eq i32 %713, 1
  %790 = sub nsw i64 %787, %788
  %791 = icmp eq i64 %788, 0
  br label %822

792:                                              ; preds = %792, %730
  %793 = phi i64 [ %723, %730 ], [ %819, %792 ]
  %794 = phi i32 [ 1, %730 ], [ %818, %792 ]
  %795 = phi i32 [ %731, %730 ], [ %820, %792 ]
  %796 = getelementptr inbounds i32, i32* %720, i64 %793
  %797 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %793
  %798 = select i1 %717, i32* %796, i32* %797
  %799 = load i32, i32* %798, align 4
  %800 = mul nsw i32 %799, %794
  %801 = add i64 %793, 1
  %802 = getelementptr inbounds i32, i32* %720, i64 %801
  %803 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %801
  %804 = select i1 %717, i32* %802, i32* %803
  %805 = load i32, i32* %804, align 4
  %806 = mul nsw i32 %805, %800
  %807 = add i64 %793, 2
  %808 = getelementptr inbounds i32, i32* %720, i64 %807
  %809 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %807
  %810 = select i1 %717, i32* %808, i32* %809
  %811 = load i32, i32* %810, align 4
  %812 = mul nsw i32 %811, %806
  %813 = add i64 %793, 3
  %814 = getelementptr inbounds i32, i32* %720, i64 %813
  %815 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %813
  %816 = select i1 %717, i32* %814, i32* %815
  %817 = load i32, i32* %816, align 4
  %818 = mul nsw i32 %817, %812
  %819 = add i64 %793, 4
  %820 = add i32 %795, -4
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %762, label %792

822:                                              ; preds = %839, %782
  %823 = phi i64 [ 0, %782 ], [ %840, %839 ]
  br i1 %783, label %824, label %839

824:                                              ; preds = %822
  %825 = getelementptr inbounds i8*, i8** %644, i64 %823
  %826 = trunc i64 %823 to i32
  br i1 %789, label %827, label %842

827:                                              ; preds = %842, %824
  %828 = phi i64 [ 0, %824 ], [ %864, %842 ]
  br i1 %791, label %839, label %829

829:                                              ; preds = %827
  %830 = load i8*, i8** %825, align 8
  %831 = mul nsw i64 %828, %784
  %832 = getelementptr inbounds i8, i8* %830, i64 %831
  %833 = trunc i64 %828 to i32
  %834 = mul i32 %785, %833
  %835 = add nuw i32 %834, %826
  %836 = mul i32 %835, %780
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds i8, i8* %679, i64 %837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %838, i8* align 1 %832, i64 %784, i1 false) #9
  br label %839

839:                                              ; preds = %829, %827, %822
  %840 = add nuw nsw i64 %823, 1
  %841 = icmp eq i64 %840, %786
  br i1 %841, label %867, label %822

842:                                              ; preds = %824, %842
  %843 = phi i64 [ %864, %842 ], [ 0, %824 ]
  %844 = phi i64 [ %865, %842 ], [ %790, %824 ]
  %845 = load i8*, i8** %825, align 8
  %846 = mul nsw i64 %843, %784
  %847 = getelementptr inbounds i8, i8* %845, i64 %846
  %848 = trunc i64 %843 to i32
  %849 = mul i32 %785, %848
  %850 = add nuw i32 %849, %826
  %851 = mul i32 %850, %780
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds i8, i8* %679, i64 %852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %853, i8* align 1 %847, i64 %784, i1 false) #9
  %854 = or i64 %843, 1
  %855 = load i8*, i8** %825, align 8
  %856 = mul nsw i64 %854, %784
  %857 = getelementptr inbounds i8, i8* %855, i64 %856
  %858 = trunc i64 %854 to i32
  %859 = mul i32 %785, %858
  %860 = add nuw i32 %859, %826
  %861 = mul i32 %860, %780
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds i8, i8* %679, i64 %862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %863, i8* align 1 %857, i64 %784, i1 false) #9
  %864 = add nuw nsw i64 %843, 2
  %865 = add i64 %844, -2
  %866 = icmp eq i64 %865, 0
  br i1 %866, label %827, label %842

867:                                              ; preds = %839, %779
  %868 = icmp sgt i32 %678, 5
  br i1 %868, label %869, label %875

869:                                              ; preds = %867
  %870 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %871 = load i32*, i32** %870, align 8
  %872 = icmp eq i32* %871, null
  br i1 %872, label %875, label %873

873:                                              ; preds = %869
  %874 = bitcast i32* %871 to i8*
  call void @_ZdaPv(i8* %874) #10
  br label %875

875:                                              ; preds = %873, %869, %867
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %645) #9
  %876 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %642, align 8
  %877 = icmp eq %"class.tflite::RuntimeShape"** %876, null
  br i1 %877, label %883, label %878

878:                                              ; preds = %875
  %879 = ptrtoint %"class.tflite::RuntimeShape"** %876 to i64
  %880 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %9, i64 0, i32 2, i32 0, i32 1
  %881 = bitcast %"class.tflite::RuntimeShape"*** %880 to i64*
  store i64 %879, i64* %881, align 8
  %882 = bitcast %"class.tflite::RuntimeShape"** %876 to i8*
  call void @_ZdlPv(i8* %882) #10
  br label %883

883:                                              ; preds = %878, %875
  %884 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %9, i64 0, i32 1
  %885 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %884, i64 0, i32 0, i32 0
  %886 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %885, align 8
  %887 = icmp eq %"class.tflite::RuntimeShape"* %886, null
  br i1 %887, label %912, label %888

888:                                              ; preds = %883
  %889 = bitcast %"class.tflite::RuntimeShape"* %886 to i8*
  %890 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %9, i64 0, i32 1, i32 0, i32 1
  %891 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %890, align 8
  %892 = icmp eq %"class.tflite::RuntimeShape"* %891, %886
  br i1 %892, label %910, label %893

893:                                              ; preds = %888, %905
  %894 = phi %"class.tflite::RuntimeShape"* [ %895, %905 ], [ %891, %888 ]
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %894, i64 -1
  %896 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %895, i64 0, i32 0
  %897 = load i32, i32* %896, align 8
  %898 = icmp sgt i32 %897, 5
  br i1 %898, label %899, label %905

899:                                              ; preds = %893
  %900 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %894, i64 -1, i32 1, i32 0
  %901 = load i32*, i32** %900, align 8
  %902 = icmp eq i32* %901, null
  br i1 %902, label %905, label %903

903:                                              ; preds = %899
  %904 = bitcast i32* %901 to i8*
  call void @_ZdaPv(i8* %904) #10
  br label %905

905:                                              ; preds = %903, %899, %893
  %906 = icmp eq %"class.tflite::RuntimeShape"* %895, %886
  br i1 %906, label %907, label %893

907:                                              ; preds = %905
  %908 = bitcast %"class.std::__1::vector.2"* %884 to i8**
  %909 = load i8*, i8** %908, align 8
  br label %910

910:                                              ; preds = %907, %888
  %911 = phi i8* [ %909, %907 ], [ %889, %888 ]
  store %"class.tflite::RuntimeShape"* %886, %"class.tflite::RuntimeShape"** %890, align 8
  call void @_ZdlPv(i8* %911) #10
  br label %912

912:                                              ; preds = %910, %883
  %913 = load i8**, i8*** %643, align 8
  %914 = icmp eq i8** %913, null
  br i1 %914, label %920, label %915

915:                                              ; preds = %912
  %916 = ptrtoint i8** %913 to i64
  %917 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %9, i64 0, i32 0, i32 0, i32 1
  %918 = bitcast i8*** %917 to i64*
  store i64 %916, i64* %918, align 8
  %919 = bitcast i8** %913 to i8*
  call void @_ZdlPv(i8* %919) #10
  br label %920

920:                                              ; preds = %915, %912
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %637) #9
  br label %1827

921:                                              ; preds = %28
  %922 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 0
  %923 = load i32, i32* %922, align 4
  %924 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 1
  %925 = load i32, i32* %924, align 4
  %926 = icmp sgt i32 %925, -1
  br i1 %926, label %930, label %927

927:                                              ; preds = %921
  %928 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %929 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %928, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %929(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %1827

930:                                              ; preds = %921
  %931 = bitcast %"class.tflite::VectorOfTensors.46"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %931) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %931, i8 -86, i64 72, i1 false) #9
  %932 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %933 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %932, align 8
  call void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.46"* nonnull %7, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %933) #9
  %934 = trunc i32 %925 to i8
  %935 = trunc i32 %923 to i16
  %936 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %7, i64 0, i32 2, i32 0, i32 0
  %937 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %7, i64 0, i32 0, i32 0, i32 0
  %938 = load i16**, i16*** %937, align 8
  %939 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %939) #9
  %940 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %940, label %941, label %943

941:                                              ; preds = %930
  %942 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %942, align 8, !alias.scope !18
  br label %971

943:                                              ; preds = %930
  %944 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %945 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %944, align 8, !noalias !18
  %946 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %945, i64 0, i32 0
  %947 = load i32, i32* %946, align 4, !noalias !18
  %948 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %945, i64 0, i32 1, i64 0
  %949 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %947, i32* %949, align 8, !alias.scope !18
  %950 = icmp sgt i32 %947, 5
  br i1 %950, label %951, label %958

951:                                              ; preds = %943
  %952 = sext i32 %947 to i64
  %953 = shl nsw i64 %952, 2
  %954 = call i8* @_Znam(i64 %953) #10, !noalias !18
  %955 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %956 = bitcast i32** %955 to i8**
  store i8* %954, i8** %956, align 8, !alias.scope !18
  %957 = bitcast i8* %954 to i32*
  br label %963

958:                                              ; preds = %943
  %959 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %960 = bitcast %union.anon* %959 to i32*
  %961 = sext i32 %947 to i64
  %962 = shl nsw i64 %961, 2
  br label %963

963:                                              ; preds = %958, %951
  %964 = phi i64 [ %953, %951 ], [ %962, %958 ]
  %965 = phi i32* [ %957, %951 ], [ %960, %958 ]
  %966 = bitcast i32* %965 to i8*
  %967 = bitcast i32* %948 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %966, i8* align 4 %967, i64 %964, i1 false) #9
  %968 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %969 = bitcast %union.TfLitePtrUnion* %968 to i16**
  %970 = load i16*, i16** %969, align 8
  br label %971

971:                                              ; preds = %963, %941
  %972 = phi i32 [ %947, %963 ], [ 0, %941 ]
  %973 = phi i16* [ %970, %963 ], [ null, %941 ]
  %974 = shl i32 %925, 24
  %975 = ashr exact i32 %974, 24
  %976 = icmp sgt i8 %934, 0
  br i1 %976, label %977, label %1006

977:                                              ; preds = %971
  %978 = icmp sgt i32 %972, 5
  %979 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %980 = getelementptr inbounds %union.anon, %union.anon* %979, i64 0, i32 0
  %981 = load i32*, i32** %980, align 8
  %982 = bitcast %union.anon* %979 to [5 x i32]*
  %983 = zext i32 %975 to i64
  %984 = add nsw i64 %983, -1
  %985 = and i64 %983, 3
  %986 = icmp ult i64 %984, 3
  br i1 %986, label %989, label %987

987:                                              ; preds = %977
  %988 = sub nsw i64 %983, %985
  br label %1026

989:                                              ; preds = %1026, %977
  %990 = phi i32 [ undef, %977 ], [ %1052, %1026 ]
  %991 = phi i64 [ 0, %977 ], [ %1053, %1026 ]
  %992 = phi i32 [ 1, %977 ], [ %1052, %1026 ]
  %993 = icmp eq i64 %985, 0
  br i1 %993, label %1006, label %994

994:                                              ; preds = %989, %994
  %995 = phi i64 [ %1003, %994 ], [ %991, %989 ]
  %996 = phi i32 [ %1002, %994 ], [ %992, %989 ]
  %997 = phi i64 [ %1004, %994 ], [ %985, %989 ]
  %998 = getelementptr inbounds i32, i32* %981, i64 %995
  %999 = getelementptr inbounds [5 x i32], [5 x i32]* %982, i64 0, i64 %995
  %1000 = select i1 %978, i32* %998, i32* %999
  %1001 = load i32, i32* %1000, align 4
  %1002 = mul nsw i32 %1001, %996
  %1003 = add nuw nsw i64 %995, 1
  %1004 = add i64 %997, -1
  %1005 = icmp eq i64 %1004, 0
  br i1 %1005, label %1006, label %994, !llvm.loop !21

1006:                                             ; preds = %989, %994, %971
  %1007 = phi i32 [ 1, %971 ], [ %990, %989 ], [ %1002, %994 ]
  %1008 = add nsw i32 %975, 1
  %1009 = icmp slt i32 %1008, %972
  br i1 %1009, label %1010, label %1073

1010:                                             ; preds = %1006
  %1011 = icmp sgt i32 %972, 5
  %1012 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %1013 = getelementptr inbounds %union.anon, %union.anon* %1012, i64 0, i32 0
  %1014 = load i32*, i32** %1013, align 8
  %1015 = bitcast %union.anon* %1012 to [5 x i32]*
  %1016 = sext i8 %934 to i64
  %1017 = add nsw i64 %1016, 1
  %1018 = xor i32 %975, -1
  %1019 = add i32 %972, %1018
  %1020 = add i32 %972, -2
  %1021 = sub i32 %1020, %975
  %1022 = and i32 %1019, 3
  %1023 = icmp ult i32 %1021, 3
  br i1 %1023, label %1056, label %1024

1024:                                             ; preds = %1010
  %1025 = sub i32 %1019, %1022
  br label %1087

1026:                                             ; preds = %1026, %987
  %1027 = phi i64 [ 0, %987 ], [ %1053, %1026 ]
  %1028 = phi i32 [ 1, %987 ], [ %1052, %1026 ]
  %1029 = phi i64 [ %988, %987 ], [ %1054, %1026 ]
  %1030 = getelementptr inbounds i32, i32* %981, i64 %1027
  %1031 = getelementptr inbounds [5 x i32], [5 x i32]* %982, i64 0, i64 %1027
  %1032 = select i1 %978, i32* %1030, i32* %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = mul nsw i32 %1033, %1028
  %1035 = or i64 %1027, 1
  %1036 = getelementptr inbounds i32, i32* %981, i64 %1035
  %1037 = getelementptr inbounds [5 x i32], [5 x i32]* %982, i64 0, i64 %1035
  %1038 = select i1 %978, i32* %1036, i32* %1037
  %1039 = load i32, i32* %1038, align 4
  %1040 = mul nsw i32 %1039, %1034
  %1041 = or i64 %1027, 2
  %1042 = getelementptr inbounds i32, i32* %981, i64 %1041
  %1043 = getelementptr inbounds [5 x i32], [5 x i32]* %982, i64 0, i64 %1041
  %1044 = select i1 %978, i32* %1042, i32* %1043
  %1045 = load i32, i32* %1044, align 4
  %1046 = mul nsw i32 %1045, %1040
  %1047 = or i64 %1027, 3
  %1048 = getelementptr inbounds i32, i32* %981, i64 %1047
  %1049 = getelementptr inbounds [5 x i32], [5 x i32]* %982, i64 0, i64 %1047
  %1050 = select i1 %978, i32* %1048, i32* %1049
  %1051 = load i32, i32* %1050, align 4
  %1052 = mul nsw i32 %1051, %1046
  %1053 = add nuw nsw i64 %1027, 4
  %1054 = add i64 %1029, -4
  %1055 = icmp eq i64 %1054, 0
  br i1 %1055, label %989, label %1026

1056:                                             ; preds = %1087, %1010
  %1057 = phi i32 [ undef, %1010 ], [ %1113, %1087 ]
  %1058 = phi i64 [ %1017, %1010 ], [ %1114, %1087 ]
  %1059 = phi i32 [ 1, %1010 ], [ %1113, %1087 ]
  %1060 = icmp eq i32 %1022, 0
  br i1 %1060, label %1073, label %1061

1061:                                             ; preds = %1056, %1061
  %1062 = phi i64 [ %1070, %1061 ], [ %1058, %1056 ]
  %1063 = phi i32 [ %1069, %1061 ], [ %1059, %1056 ]
  %1064 = phi i32 [ %1071, %1061 ], [ %1022, %1056 ]
  %1065 = getelementptr inbounds i32, i32* %1014, i64 %1062
  %1066 = getelementptr inbounds [5 x i32], [5 x i32]* %1015, i64 0, i64 %1062
  %1067 = select i1 %1011, i32* %1065, i32* %1066
  %1068 = load i32, i32* %1067, align 4
  %1069 = mul nsw i32 %1068, %1063
  %1070 = add i64 %1062, 1
  %1071 = add i32 %1064, -1
  %1072 = icmp eq i32 %1071, 0
  br i1 %1072, label %1073, label %1061, !llvm.loop !22

1073:                                             ; preds = %1056, %1061, %1006
  %1074 = phi i32 [ 1, %1006 ], [ %1057, %1056 ], [ %1069, %1061 ]
  %1075 = icmp eq i16 %935, 0
  br i1 %1075, label %1168, label %1076

1076:                                             ; preds = %1073
  %1077 = icmp sgt i32 %1007, 0
  %1078 = sext i32 %1074 to i64
  %1079 = shl nsw i64 %1078, 1
  %1080 = and i32 %923, 65535
  %1081 = zext i32 %1080 to i64
  %1082 = zext i32 %1007 to i64
  %1083 = and i64 %1082, 1
  %1084 = icmp eq i32 %1007, 1
  %1085 = sub nsw i64 %1082, %1083
  %1086 = icmp eq i64 %1083, 0
  br label %1117

1087:                                             ; preds = %1087, %1024
  %1088 = phi i64 [ %1017, %1024 ], [ %1114, %1087 ]
  %1089 = phi i32 [ 1, %1024 ], [ %1113, %1087 ]
  %1090 = phi i32 [ %1025, %1024 ], [ %1115, %1087 ]
  %1091 = getelementptr inbounds i32, i32* %1014, i64 %1088
  %1092 = getelementptr inbounds [5 x i32], [5 x i32]* %1015, i64 0, i64 %1088
  %1093 = select i1 %1011, i32* %1091, i32* %1092
  %1094 = load i32, i32* %1093, align 4
  %1095 = mul nsw i32 %1094, %1089
  %1096 = add i64 %1088, 1
  %1097 = getelementptr inbounds i32, i32* %1014, i64 %1096
  %1098 = getelementptr inbounds [5 x i32], [5 x i32]* %1015, i64 0, i64 %1096
  %1099 = select i1 %1011, i32* %1097, i32* %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = mul nsw i32 %1100, %1095
  %1102 = add i64 %1088, 2
  %1103 = getelementptr inbounds i32, i32* %1014, i64 %1102
  %1104 = getelementptr inbounds [5 x i32], [5 x i32]* %1015, i64 0, i64 %1102
  %1105 = select i1 %1011, i32* %1103, i32* %1104
  %1106 = load i32, i32* %1105, align 4
  %1107 = mul nsw i32 %1106, %1101
  %1108 = add i64 %1088, 3
  %1109 = getelementptr inbounds i32, i32* %1014, i64 %1108
  %1110 = getelementptr inbounds [5 x i32], [5 x i32]* %1015, i64 0, i64 %1108
  %1111 = select i1 %1011, i32* %1109, i32* %1110
  %1112 = load i32, i32* %1111, align 4
  %1113 = mul nsw i32 %1112, %1107
  %1114 = add i64 %1088, 4
  %1115 = add i32 %1090, -4
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1056, label %1087

1117:                                             ; preds = %1136, %1076
  %1118 = phi i64 [ 0, %1076 ], [ %1137, %1136 ]
  br i1 %1077, label %1119, label %1136

1119:                                             ; preds = %1117
  %1120 = getelementptr inbounds i16*, i16** %938, i64 %1118
  %1121 = trunc i64 %1118 to i32
  br i1 %1084, label %1122, label %1139

1122:                                             ; preds = %1139, %1119
  %1123 = phi i64 [ 0, %1119 ], [ %1165, %1139 ]
  br i1 %1086, label %1136, label %1124

1124:                                             ; preds = %1122
  %1125 = load i16*, i16** %1120, align 8
  %1126 = mul nsw i64 %1123, %1078
  %1127 = getelementptr inbounds i16, i16* %1125, i64 %1126
  %1128 = trunc i64 %1123 to i32
  %1129 = mul i32 %1080, %1128
  %1130 = add nuw i32 %1129, %1121
  %1131 = mul i32 %1130, %1074
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds i16, i16* %973, i64 %1132
  %1134 = bitcast i16* %1133 to i8*
  %1135 = bitcast i16* %1127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1134, i8* align 2 %1135, i64 %1079, i1 false) #9
  br label %1136

1136:                                             ; preds = %1124, %1122, %1117
  %1137 = add nuw nsw i64 %1118, 1
  %1138 = icmp eq i64 %1137, %1081
  br i1 %1138, label %1168, label %1117

1139:                                             ; preds = %1119, %1139
  %1140 = phi i64 [ %1165, %1139 ], [ 0, %1119 ]
  %1141 = phi i64 [ %1166, %1139 ], [ %1085, %1119 ]
  %1142 = load i16*, i16** %1120, align 8
  %1143 = mul nsw i64 %1140, %1078
  %1144 = getelementptr inbounds i16, i16* %1142, i64 %1143
  %1145 = trunc i64 %1140 to i32
  %1146 = mul i32 %1080, %1145
  %1147 = add nuw i32 %1146, %1121
  %1148 = mul i32 %1147, %1074
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds i16, i16* %973, i64 %1149
  %1151 = bitcast i16* %1150 to i8*
  %1152 = bitcast i16* %1144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1151, i8* align 2 %1152, i64 %1079, i1 false) #9
  %1153 = or i64 %1140, 1
  %1154 = load i16*, i16** %1120, align 8
  %1155 = mul nsw i64 %1153, %1078
  %1156 = getelementptr inbounds i16, i16* %1154, i64 %1155
  %1157 = trunc i64 %1153 to i32
  %1158 = mul i32 %1080, %1157
  %1159 = add nuw i32 %1158, %1121
  %1160 = mul i32 %1159, %1074
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds i16, i16* %973, i64 %1161
  %1163 = bitcast i16* %1162 to i8*
  %1164 = bitcast i16* %1156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1163, i8* align 2 %1164, i64 %1079, i1 false) #9
  %1165 = add nuw nsw i64 %1140, 2
  %1166 = add i64 %1141, -2
  %1167 = icmp eq i64 %1166, 0
  br i1 %1167, label %1122, label %1139

1168:                                             ; preds = %1136, %1073
  %1169 = icmp sgt i32 %972, 5
  br i1 %1169, label %1170, label %1176

1170:                                             ; preds = %1168
  %1171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1172 = load i32*, i32** %1171, align 8
  %1173 = icmp eq i32* %1172, null
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1170
  %1175 = bitcast i32* %1172 to i8*
  call void @_ZdaPv(i8* %1175) #10
  br label %1176

1176:                                             ; preds = %1174, %1170, %1168
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %939) #9
  %1177 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %936, align 8
  %1178 = icmp eq %"class.tflite::RuntimeShape"** %1177, null
  br i1 %1178, label %1184, label %1179

1179:                                             ; preds = %1176
  %1180 = ptrtoint %"class.tflite::RuntimeShape"** %1177 to i64
  %1181 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %7, i64 0, i32 2, i32 0, i32 1
  %1182 = bitcast %"class.tflite::RuntimeShape"*** %1181 to i64*
  store i64 %1180, i64* %1182, align 8
  %1183 = bitcast %"class.tflite::RuntimeShape"** %1177 to i8*
  call void @_ZdlPv(i8* %1183) #10
  br label %1184

1184:                                             ; preds = %1179, %1176
  %1185 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %7, i64 0, i32 1
  %1186 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1185, i64 0, i32 0, i32 0
  %1187 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1186, align 8
  %1188 = icmp eq %"class.tflite::RuntimeShape"* %1187, null
  br i1 %1188, label %1213, label %1189

1189:                                             ; preds = %1184
  %1190 = bitcast %"class.tflite::RuntimeShape"* %1187 to i8*
  %1191 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %7, i64 0, i32 1, i32 0, i32 1
  %1192 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1191, align 8
  %1193 = icmp eq %"class.tflite::RuntimeShape"* %1192, %1187
  br i1 %1193, label %1211, label %1194

1194:                                             ; preds = %1189, %1206
  %1195 = phi %"class.tflite::RuntimeShape"* [ %1196, %1206 ], [ %1192, %1189 ]
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1195, i64 -1
  %1197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1196, i64 0, i32 0
  %1198 = load i32, i32* %1197, align 8
  %1199 = icmp sgt i32 %1198, 5
  br i1 %1199, label %1200, label %1206

1200:                                             ; preds = %1194
  %1201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1195, i64 -1, i32 1, i32 0
  %1202 = load i32*, i32** %1201, align 8
  %1203 = icmp eq i32* %1202, null
  br i1 %1203, label %1206, label %1204

1204:                                             ; preds = %1200
  %1205 = bitcast i32* %1202 to i8*
  call void @_ZdaPv(i8* %1205) #10
  br label %1206

1206:                                             ; preds = %1204, %1200, %1194
  %1207 = icmp eq %"class.tflite::RuntimeShape"* %1196, %1187
  br i1 %1207, label %1208, label %1194

1208:                                             ; preds = %1206
  %1209 = bitcast %"class.std::__1::vector.2"* %1185 to i8**
  %1210 = load i8*, i8** %1209, align 8
  br label %1211

1211:                                             ; preds = %1208, %1189
  %1212 = phi i8* [ %1210, %1208 ], [ %1190, %1189 ]
  store %"class.tflite::RuntimeShape"* %1187, %"class.tflite::RuntimeShape"** %1191, align 8
  call void @_ZdlPv(i8* %1212) #10
  br label %1213

1213:                                             ; preds = %1211, %1184
  %1214 = load i16**, i16*** %937, align 8
  %1215 = icmp eq i16** %1214, null
  br i1 %1215, label %1221, label %1216

1216:                                             ; preds = %1213
  %1217 = ptrtoint i16** %1214 to i64
  %1218 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %7, i64 0, i32 0, i32 0, i32 1
  %1219 = bitcast i16*** %1218 to i64*
  store i64 %1217, i64* %1219, align 8
  %1220 = bitcast i16** %1214 to i8*
  call void @_ZdlPv(i8* %1220) #10
  br label %1221

1221:                                             ; preds = %1216, %1213
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %931) #9
  br label %1827

1222:                                             ; preds = %28
  %1223 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 0
  %1224 = load i32, i32* %1223, align 4
  %1225 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 1
  %1226 = load i32, i32* %1225, align 4
  %1227 = icmp sgt i32 %1226, -1
  br i1 %1227, label %1231, label %1228

1228:                                             ; preds = %1222
  %1229 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1230 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1229, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1230(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %1827

1231:                                             ; preds = %1222
  %1232 = bitcast %"class.tflite::VectorOfTensors.57"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1232) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1232, i8 -86, i64 72, i1 false) #9
  %1233 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1234 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1233, align 8
  call void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.57"* nonnull %5, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1234) #9
  %1235 = trunc i32 %1226 to i8
  %1236 = trunc i32 %1224 to i16
  %1237 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %5, i64 0, i32 2, i32 0, i32 0
  %1238 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %5, i64 0, i32 0, i32 0, i32 0
  %1239 = load i32**, i32*** %1238, align 8
  %1240 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1240) #9
  %1241 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %1241, label %1242, label %1244

1242:                                             ; preds = %1231
  %1243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %1243, align 8, !alias.scope !23
  br label %1271

1244:                                             ; preds = %1231
  %1245 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %1246 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1245, align 8, !noalias !23
  %1247 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1246, i64 0, i32 0
  %1248 = load i32, i32* %1247, align 4, !noalias !23
  %1249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1246, i64 0, i32 1, i64 0
  %1250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %1248, i32* %1250, align 8, !alias.scope !23
  %1251 = icmp sgt i32 %1248, 5
  br i1 %1251, label %1252, label %1259

1252:                                             ; preds = %1244
  %1253 = sext i32 %1248 to i64
  %1254 = shl nsw i64 %1253, 2
  %1255 = call i8* @_Znam(i64 %1254) #10, !noalias !23
  %1256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %1257 = bitcast i32** %1256 to i8**
  store i8* %1255, i8** %1257, align 8, !alias.scope !23
  %1258 = bitcast i8* %1255 to i32*
  br label %1264

1259:                                             ; preds = %1244
  %1260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %1261 = bitcast %union.anon* %1260 to i32*
  %1262 = sext i32 %1248 to i64
  %1263 = shl nsw i64 %1262, 2
  br label %1264

1264:                                             ; preds = %1259, %1252
  %1265 = phi i64 [ %1254, %1252 ], [ %1263, %1259 ]
  %1266 = phi i32* [ %1258, %1252 ], [ %1261, %1259 ]
  %1267 = bitcast i32* %1266 to i8*
  %1268 = bitcast i32* %1249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1267, i8* align 4 %1268, i64 %1265, i1 false) #9
  %1269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1, i32 0
  %1270 = load i32*, i32** %1269, align 8
  br label %1271

1271:                                             ; preds = %1264, %1242
  %1272 = phi i32 [ %1248, %1264 ], [ 0, %1242 ]
  %1273 = phi i32* [ %1270, %1264 ], [ null, %1242 ]
  %1274 = shl i32 %1226, 24
  %1275 = ashr exact i32 %1274, 24
  %1276 = icmp sgt i8 %1235, 0
  br i1 %1276, label %1277, label %1306

1277:                                             ; preds = %1271
  %1278 = icmp sgt i32 %1272, 5
  %1279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %1280 = getelementptr inbounds %union.anon, %union.anon* %1279, i64 0, i32 0
  %1281 = load i32*, i32** %1280, align 8
  %1282 = bitcast %union.anon* %1279 to [5 x i32]*
  %1283 = zext i32 %1275 to i64
  %1284 = add nsw i64 %1283, -1
  %1285 = and i64 %1283, 3
  %1286 = icmp ult i64 %1284, 3
  br i1 %1286, label %1289, label %1287

1287:                                             ; preds = %1277
  %1288 = sub nsw i64 %1283, %1285
  br label %1326

1289:                                             ; preds = %1326, %1277
  %1290 = phi i32 [ undef, %1277 ], [ %1352, %1326 ]
  %1291 = phi i64 [ 0, %1277 ], [ %1353, %1326 ]
  %1292 = phi i32 [ 1, %1277 ], [ %1352, %1326 ]
  %1293 = icmp eq i64 %1285, 0
  br i1 %1293, label %1306, label %1294

1294:                                             ; preds = %1289, %1294
  %1295 = phi i64 [ %1303, %1294 ], [ %1291, %1289 ]
  %1296 = phi i32 [ %1302, %1294 ], [ %1292, %1289 ]
  %1297 = phi i64 [ %1304, %1294 ], [ %1285, %1289 ]
  %1298 = getelementptr inbounds i32, i32* %1281, i64 %1295
  %1299 = getelementptr inbounds [5 x i32], [5 x i32]* %1282, i64 0, i64 %1295
  %1300 = select i1 %1278, i32* %1298, i32* %1299
  %1301 = load i32, i32* %1300, align 4
  %1302 = mul nsw i32 %1301, %1296
  %1303 = add nuw nsw i64 %1295, 1
  %1304 = add i64 %1297, -1
  %1305 = icmp eq i64 %1304, 0
  br i1 %1305, label %1306, label %1294, !llvm.loop !26

1306:                                             ; preds = %1289, %1294, %1271
  %1307 = phi i32 [ 1, %1271 ], [ %1290, %1289 ], [ %1302, %1294 ]
  %1308 = add nsw i32 %1275, 1
  %1309 = icmp slt i32 %1308, %1272
  br i1 %1309, label %1310, label %1373

1310:                                             ; preds = %1306
  %1311 = icmp sgt i32 %1272, 5
  %1312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %1313 = getelementptr inbounds %union.anon, %union.anon* %1312, i64 0, i32 0
  %1314 = load i32*, i32** %1313, align 8
  %1315 = bitcast %union.anon* %1312 to [5 x i32]*
  %1316 = sext i8 %1235 to i64
  %1317 = add nsw i64 %1316, 1
  %1318 = xor i32 %1275, -1
  %1319 = add i32 %1272, %1318
  %1320 = add i32 %1272, -2
  %1321 = sub i32 %1320, %1275
  %1322 = and i32 %1319, 3
  %1323 = icmp ult i32 %1321, 3
  br i1 %1323, label %1356, label %1324

1324:                                             ; preds = %1310
  %1325 = sub i32 %1319, %1322
  br label %1387

1326:                                             ; preds = %1326, %1287
  %1327 = phi i64 [ 0, %1287 ], [ %1353, %1326 ]
  %1328 = phi i32 [ 1, %1287 ], [ %1352, %1326 ]
  %1329 = phi i64 [ %1288, %1287 ], [ %1354, %1326 ]
  %1330 = getelementptr inbounds i32, i32* %1281, i64 %1327
  %1331 = getelementptr inbounds [5 x i32], [5 x i32]* %1282, i64 0, i64 %1327
  %1332 = select i1 %1278, i32* %1330, i32* %1331
  %1333 = load i32, i32* %1332, align 4
  %1334 = mul nsw i32 %1333, %1328
  %1335 = or i64 %1327, 1
  %1336 = getelementptr inbounds i32, i32* %1281, i64 %1335
  %1337 = getelementptr inbounds [5 x i32], [5 x i32]* %1282, i64 0, i64 %1335
  %1338 = select i1 %1278, i32* %1336, i32* %1337
  %1339 = load i32, i32* %1338, align 4
  %1340 = mul nsw i32 %1339, %1334
  %1341 = or i64 %1327, 2
  %1342 = getelementptr inbounds i32, i32* %1281, i64 %1341
  %1343 = getelementptr inbounds [5 x i32], [5 x i32]* %1282, i64 0, i64 %1341
  %1344 = select i1 %1278, i32* %1342, i32* %1343
  %1345 = load i32, i32* %1344, align 4
  %1346 = mul nsw i32 %1345, %1340
  %1347 = or i64 %1327, 3
  %1348 = getelementptr inbounds i32, i32* %1281, i64 %1347
  %1349 = getelementptr inbounds [5 x i32], [5 x i32]* %1282, i64 0, i64 %1347
  %1350 = select i1 %1278, i32* %1348, i32* %1349
  %1351 = load i32, i32* %1350, align 4
  %1352 = mul nsw i32 %1351, %1346
  %1353 = add nuw nsw i64 %1327, 4
  %1354 = add i64 %1329, -4
  %1355 = icmp eq i64 %1354, 0
  br i1 %1355, label %1289, label %1326

1356:                                             ; preds = %1387, %1310
  %1357 = phi i32 [ undef, %1310 ], [ %1413, %1387 ]
  %1358 = phi i64 [ %1317, %1310 ], [ %1414, %1387 ]
  %1359 = phi i32 [ 1, %1310 ], [ %1413, %1387 ]
  %1360 = icmp eq i32 %1322, 0
  br i1 %1360, label %1373, label %1361

1361:                                             ; preds = %1356, %1361
  %1362 = phi i64 [ %1370, %1361 ], [ %1358, %1356 ]
  %1363 = phi i32 [ %1369, %1361 ], [ %1359, %1356 ]
  %1364 = phi i32 [ %1371, %1361 ], [ %1322, %1356 ]
  %1365 = getelementptr inbounds i32, i32* %1314, i64 %1362
  %1366 = getelementptr inbounds [5 x i32], [5 x i32]* %1315, i64 0, i64 %1362
  %1367 = select i1 %1311, i32* %1365, i32* %1366
  %1368 = load i32, i32* %1367, align 4
  %1369 = mul nsw i32 %1368, %1363
  %1370 = add i64 %1362, 1
  %1371 = add i32 %1364, -1
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1373, label %1361, !llvm.loop !27

1373:                                             ; preds = %1356, %1361, %1306
  %1374 = phi i32 [ 1, %1306 ], [ %1357, %1356 ], [ %1369, %1361 ]
  %1375 = icmp eq i16 %1236, 0
  br i1 %1375, label %1468, label %1376

1376:                                             ; preds = %1373
  %1377 = icmp sgt i32 %1307, 0
  %1378 = sext i32 %1374 to i64
  %1379 = shl nsw i64 %1378, 2
  %1380 = and i32 %1224, 65535
  %1381 = zext i32 %1380 to i64
  %1382 = zext i32 %1307 to i64
  %1383 = and i64 %1382, 1
  %1384 = icmp eq i32 %1307, 1
  %1385 = sub nsw i64 %1382, %1383
  %1386 = icmp eq i64 %1383, 0
  br label %1417

1387:                                             ; preds = %1387, %1324
  %1388 = phi i64 [ %1317, %1324 ], [ %1414, %1387 ]
  %1389 = phi i32 [ 1, %1324 ], [ %1413, %1387 ]
  %1390 = phi i32 [ %1325, %1324 ], [ %1415, %1387 ]
  %1391 = getelementptr inbounds i32, i32* %1314, i64 %1388
  %1392 = getelementptr inbounds [5 x i32], [5 x i32]* %1315, i64 0, i64 %1388
  %1393 = select i1 %1311, i32* %1391, i32* %1392
  %1394 = load i32, i32* %1393, align 4
  %1395 = mul nsw i32 %1394, %1389
  %1396 = add i64 %1388, 1
  %1397 = getelementptr inbounds i32, i32* %1314, i64 %1396
  %1398 = getelementptr inbounds [5 x i32], [5 x i32]* %1315, i64 0, i64 %1396
  %1399 = select i1 %1311, i32* %1397, i32* %1398
  %1400 = load i32, i32* %1399, align 4
  %1401 = mul nsw i32 %1400, %1395
  %1402 = add i64 %1388, 2
  %1403 = getelementptr inbounds i32, i32* %1314, i64 %1402
  %1404 = getelementptr inbounds [5 x i32], [5 x i32]* %1315, i64 0, i64 %1402
  %1405 = select i1 %1311, i32* %1403, i32* %1404
  %1406 = load i32, i32* %1405, align 4
  %1407 = mul nsw i32 %1406, %1401
  %1408 = add i64 %1388, 3
  %1409 = getelementptr inbounds i32, i32* %1314, i64 %1408
  %1410 = getelementptr inbounds [5 x i32], [5 x i32]* %1315, i64 0, i64 %1408
  %1411 = select i1 %1311, i32* %1409, i32* %1410
  %1412 = load i32, i32* %1411, align 4
  %1413 = mul nsw i32 %1412, %1407
  %1414 = add i64 %1388, 4
  %1415 = add i32 %1390, -4
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1356, label %1387

1417:                                             ; preds = %1436, %1376
  %1418 = phi i64 [ 0, %1376 ], [ %1437, %1436 ]
  br i1 %1377, label %1419, label %1436

1419:                                             ; preds = %1417
  %1420 = getelementptr inbounds i32*, i32** %1239, i64 %1418
  %1421 = trunc i64 %1418 to i32
  br i1 %1384, label %1422, label %1439

1422:                                             ; preds = %1439, %1419
  %1423 = phi i64 [ 0, %1419 ], [ %1465, %1439 ]
  br i1 %1386, label %1436, label %1424

1424:                                             ; preds = %1422
  %1425 = load i32*, i32** %1420, align 8
  %1426 = mul nsw i64 %1423, %1378
  %1427 = getelementptr inbounds i32, i32* %1425, i64 %1426
  %1428 = trunc i64 %1423 to i32
  %1429 = mul i32 %1380, %1428
  %1430 = add nuw i32 %1429, %1421
  %1431 = mul i32 %1430, %1374
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds i32, i32* %1273, i64 %1432
  %1434 = bitcast i32* %1433 to i8*
  %1435 = bitcast i32* %1427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1434, i8* align 4 %1435, i64 %1379, i1 false) #9
  br label %1436

1436:                                             ; preds = %1424, %1422, %1417
  %1437 = add nuw nsw i64 %1418, 1
  %1438 = icmp eq i64 %1437, %1381
  br i1 %1438, label %1468, label %1417

1439:                                             ; preds = %1419, %1439
  %1440 = phi i64 [ %1465, %1439 ], [ 0, %1419 ]
  %1441 = phi i64 [ %1466, %1439 ], [ %1385, %1419 ]
  %1442 = load i32*, i32** %1420, align 8
  %1443 = mul nsw i64 %1440, %1378
  %1444 = getelementptr inbounds i32, i32* %1442, i64 %1443
  %1445 = trunc i64 %1440 to i32
  %1446 = mul i32 %1380, %1445
  %1447 = add nuw i32 %1446, %1421
  %1448 = mul i32 %1447, %1374
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds i32, i32* %1273, i64 %1449
  %1451 = bitcast i32* %1450 to i8*
  %1452 = bitcast i32* %1444 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1451, i8* align 4 %1452, i64 %1379, i1 false) #9
  %1453 = or i64 %1440, 1
  %1454 = load i32*, i32** %1420, align 8
  %1455 = mul nsw i64 %1453, %1378
  %1456 = getelementptr inbounds i32, i32* %1454, i64 %1455
  %1457 = trunc i64 %1453 to i32
  %1458 = mul i32 %1380, %1457
  %1459 = add nuw i32 %1458, %1421
  %1460 = mul i32 %1459, %1374
  %1461 = sext i32 %1460 to i64
  %1462 = getelementptr inbounds i32, i32* %1273, i64 %1461
  %1463 = bitcast i32* %1462 to i8*
  %1464 = bitcast i32* %1456 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1463, i8* align 4 %1464, i64 %1379, i1 false) #9
  %1465 = add nuw nsw i64 %1440, 2
  %1466 = add i64 %1441, -2
  %1467 = icmp eq i64 %1466, 0
  br i1 %1467, label %1422, label %1439

1468:                                             ; preds = %1436, %1373
  %1469 = icmp sgt i32 %1272, 5
  br i1 %1469, label %1470, label %1476

1470:                                             ; preds = %1468
  %1471 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %1472 = load i32*, i32** %1471, align 8
  %1473 = icmp eq i32* %1472, null
  br i1 %1473, label %1476, label %1474

1474:                                             ; preds = %1470
  %1475 = bitcast i32* %1472 to i8*
  call void @_ZdaPv(i8* %1475) #10
  br label %1476

1476:                                             ; preds = %1474, %1470, %1468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1240) #9
  %1477 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1237, align 8
  %1478 = icmp eq %"class.tflite::RuntimeShape"** %1477, null
  br i1 %1478, label %1484, label %1479

1479:                                             ; preds = %1476
  %1480 = ptrtoint %"class.tflite::RuntimeShape"** %1477 to i64
  %1481 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %5, i64 0, i32 2, i32 0, i32 1
  %1482 = bitcast %"class.tflite::RuntimeShape"*** %1481 to i64*
  store i64 %1480, i64* %1482, align 8
  %1483 = bitcast %"class.tflite::RuntimeShape"** %1477 to i8*
  call void @_ZdlPv(i8* %1483) #10
  br label %1484

1484:                                             ; preds = %1479, %1476
  %1485 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %5, i64 0, i32 1
  %1486 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1485, i64 0, i32 0, i32 0
  %1487 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1486, align 8
  %1488 = icmp eq %"class.tflite::RuntimeShape"* %1487, null
  br i1 %1488, label %1513, label %1489

1489:                                             ; preds = %1484
  %1490 = bitcast %"class.tflite::RuntimeShape"* %1487 to i8*
  %1491 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %5, i64 0, i32 1, i32 0, i32 1
  %1492 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1491, align 8
  %1493 = icmp eq %"class.tflite::RuntimeShape"* %1492, %1487
  br i1 %1493, label %1511, label %1494

1494:                                             ; preds = %1489, %1506
  %1495 = phi %"class.tflite::RuntimeShape"* [ %1496, %1506 ], [ %1492, %1489 ]
  %1496 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1495, i64 -1
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1496, i64 0, i32 0
  %1498 = load i32, i32* %1497, align 8
  %1499 = icmp sgt i32 %1498, 5
  br i1 %1499, label %1500, label %1506

1500:                                             ; preds = %1494
  %1501 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1495, i64 -1, i32 1, i32 0
  %1502 = load i32*, i32** %1501, align 8
  %1503 = icmp eq i32* %1502, null
  br i1 %1503, label %1506, label %1504

1504:                                             ; preds = %1500
  %1505 = bitcast i32* %1502 to i8*
  call void @_ZdaPv(i8* %1505) #10
  br label %1506

1506:                                             ; preds = %1504, %1500, %1494
  %1507 = icmp eq %"class.tflite::RuntimeShape"* %1496, %1487
  br i1 %1507, label %1508, label %1494

1508:                                             ; preds = %1506
  %1509 = bitcast %"class.std::__1::vector.2"* %1485 to i8**
  %1510 = load i8*, i8** %1509, align 8
  br label %1511

1511:                                             ; preds = %1508, %1489
  %1512 = phi i8* [ %1510, %1508 ], [ %1490, %1489 ]
  store %"class.tflite::RuntimeShape"* %1487, %"class.tflite::RuntimeShape"** %1491, align 8
  call void @_ZdlPv(i8* %1512) #10
  br label %1513

1513:                                             ; preds = %1511, %1484
  %1514 = load i32**, i32*** %1238, align 8
  %1515 = icmp eq i32** %1514, null
  br i1 %1515, label %1521, label %1516

1516:                                             ; preds = %1513
  %1517 = ptrtoint i32** %1514 to i64
  %1518 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %5, i64 0, i32 0, i32 0, i32 1
  %1519 = bitcast i32*** %1518 to i64*
  store i64 %1517, i64* %1519, align 8
  %1520 = bitcast i32** %1514 to i8*
  call void @_ZdlPv(i8* %1520) #10
  br label %1521

1521:                                             ; preds = %1516, %1513
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1232) #9
  br label %1827

1522:                                             ; preds = %28
  %1523 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 0
  %1524 = load i32, i32* %1523, align 4
  %1525 = getelementptr inbounds %struct.TfLitePackParams, %struct.TfLitePackParams* %17, i64 0, i32 1
  %1526 = load i32, i32* %1525, align 4
  %1527 = icmp sgt i32 %1526, -1
  br i1 %1527, label %1531, label %1528

1528:                                             ; preds = %1522
  %1529 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1530 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1529, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1530(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %1827

1531:                                             ; preds = %1522
  %1532 = bitcast %"class.tflite::VectorOfTensors.68"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1532) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1532, i8 -86, i64 72, i1 false) #9
  %1533 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1534 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1533, align 8
  call void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.68"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1534) #9
  %1535 = trunc i32 %1526 to i8
  %1536 = trunc i32 %1524 to i16
  %1537 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %3, i64 0, i32 2, i32 0, i32 0
  %1538 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %3, i64 0, i32 0, i32 0, i32 0
  %1539 = load i64**, i64*** %1538, align 8
  %1540 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1540) #9
  %1541 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %1541, label %1542, label %1544

1542:                                             ; preds = %1531
  %1543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %1543, align 8, !alias.scope !28
  br label %1572

1544:                                             ; preds = %1531
  %1545 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %1546 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1545, align 8, !noalias !28
  %1547 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1546, i64 0, i32 0
  %1548 = load i32, i32* %1547, align 4, !noalias !28
  %1549 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1546, i64 0, i32 1, i64 0
  %1550 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %1548, i32* %1550, align 8, !alias.scope !28
  %1551 = icmp sgt i32 %1548, 5
  br i1 %1551, label %1552, label %1559

1552:                                             ; preds = %1544
  %1553 = sext i32 %1548 to i64
  %1554 = shl nsw i64 %1553, 2
  %1555 = call i8* @_Znam(i64 %1554) #10, !noalias !28
  %1556 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %1557 = bitcast i32** %1556 to i8**
  store i8* %1555, i8** %1557, align 8, !alias.scope !28
  %1558 = bitcast i8* %1555 to i32*
  br label %1564

1559:                                             ; preds = %1544
  %1560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %1561 = bitcast %union.anon* %1560 to i32*
  %1562 = sext i32 %1548 to i64
  %1563 = shl nsw i64 %1562, 2
  br label %1564

1564:                                             ; preds = %1559, %1552
  %1565 = phi i64 [ %1554, %1552 ], [ %1563, %1559 ]
  %1566 = phi i32* [ %1558, %1552 ], [ %1561, %1559 ]
  %1567 = bitcast i32* %1566 to i8*
  %1568 = bitcast i32* %1549 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1567, i8* align 4 %1568, i64 %1565, i1 false) #9
  %1569 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %1570 = bitcast %union.TfLitePtrUnion* %1569 to i64**
  %1571 = load i64*, i64** %1570, align 8
  br label %1572

1572:                                             ; preds = %1564, %1542
  %1573 = phi i32 [ %1548, %1564 ], [ 0, %1542 ]
  %1574 = phi i64* [ %1571, %1564 ], [ null, %1542 ]
  %1575 = shl i32 %1526, 24
  %1576 = ashr exact i32 %1575, 24
  %1577 = icmp sgt i8 %1535, 0
  br i1 %1577, label %1578, label %1607

1578:                                             ; preds = %1572
  %1579 = icmp sgt i32 %1573, 5
  %1580 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %1581 = getelementptr inbounds %union.anon, %union.anon* %1580, i64 0, i32 0
  %1582 = load i32*, i32** %1581, align 8
  %1583 = bitcast %union.anon* %1580 to [5 x i32]*
  %1584 = zext i32 %1576 to i64
  %1585 = add nsw i64 %1584, -1
  %1586 = and i64 %1584, 3
  %1587 = icmp ult i64 %1585, 3
  br i1 %1587, label %1590, label %1588

1588:                                             ; preds = %1578
  %1589 = sub nsw i64 %1584, %1586
  br label %1627

1590:                                             ; preds = %1627, %1578
  %1591 = phi i32 [ undef, %1578 ], [ %1653, %1627 ]
  %1592 = phi i64 [ 0, %1578 ], [ %1654, %1627 ]
  %1593 = phi i32 [ 1, %1578 ], [ %1653, %1627 ]
  %1594 = icmp eq i64 %1586, 0
  br i1 %1594, label %1607, label %1595

1595:                                             ; preds = %1590, %1595
  %1596 = phi i64 [ %1604, %1595 ], [ %1592, %1590 ]
  %1597 = phi i32 [ %1603, %1595 ], [ %1593, %1590 ]
  %1598 = phi i64 [ %1605, %1595 ], [ %1586, %1590 ]
  %1599 = getelementptr inbounds i32, i32* %1582, i64 %1596
  %1600 = getelementptr inbounds [5 x i32], [5 x i32]* %1583, i64 0, i64 %1596
  %1601 = select i1 %1579, i32* %1599, i32* %1600
  %1602 = load i32, i32* %1601, align 4
  %1603 = mul nsw i32 %1602, %1597
  %1604 = add nuw nsw i64 %1596, 1
  %1605 = add i64 %1598, -1
  %1606 = icmp eq i64 %1605, 0
  br i1 %1606, label %1607, label %1595, !llvm.loop !31

1607:                                             ; preds = %1590, %1595, %1572
  %1608 = phi i32 [ 1, %1572 ], [ %1591, %1590 ], [ %1603, %1595 ]
  %1609 = add nsw i32 %1576, 1
  %1610 = icmp slt i32 %1609, %1573
  br i1 %1610, label %1611, label %1674

1611:                                             ; preds = %1607
  %1612 = icmp sgt i32 %1573, 5
  %1613 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %1614 = getelementptr inbounds %union.anon, %union.anon* %1613, i64 0, i32 0
  %1615 = load i32*, i32** %1614, align 8
  %1616 = bitcast %union.anon* %1613 to [5 x i32]*
  %1617 = sext i8 %1535 to i64
  %1618 = add nsw i64 %1617, 1
  %1619 = xor i32 %1576, -1
  %1620 = add i32 %1573, %1619
  %1621 = add i32 %1573, -2
  %1622 = sub i32 %1621, %1576
  %1623 = and i32 %1620, 3
  %1624 = icmp ult i32 %1622, 3
  br i1 %1624, label %1657, label %1625

1625:                                             ; preds = %1611
  %1626 = sub i32 %1620, %1623
  br label %1688

1627:                                             ; preds = %1627, %1588
  %1628 = phi i64 [ 0, %1588 ], [ %1654, %1627 ]
  %1629 = phi i32 [ 1, %1588 ], [ %1653, %1627 ]
  %1630 = phi i64 [ %1589, %1588 ], [ %1655, %1627 ]
  %1631 = getelementptr inbounds i32, i32* %1582, i64 %1628
  %1632 = getelementptr inbounds [5 x i32], [5 x i32]* %1583, i64 0, i64 %1628
  %1633 = select i1 %1579, i32* %1631, i32* %1632
  %1634 = load i32, i32* %1633, align 4
  %1635 = mul nsw i32 %1634, %1629
  %1636 = or i64 %1628, 1
  %1637 = getelementptr inbounds i32, i32* %1582, i64 %1636
  %1638 = getelementptr inbounds [5 x i32], [5 x i32]* %1583, i64 0, i64 %1636
  %1639 = select i1 %1579, i32* %1637, i32* %1638
  %1640 = load i32, i32* %1639, align 4
  %1641 = mul nsw i32 %1640, %1635
  %1642 = or i64 %1628, 2
  %1643 = getelementptr inbounds i32, i32* %1582, i64 %1642
  %1644 = getelementptr inbounds [5 x i32], [5 x i32]* %1583, i64 0, i64 %1642
  %1645 = select i1 %1579, i32* %1643, i32* %1644
  %1646 = load i32, i32* %1645, align 4
  %1647 = mul nsw i32 %1646, %1641
  %1648 = or i64 %1628, 3
  %1649 = getelementptr inbounds i32, i32* %1582, i64 %1648
  %1650 = getelementptr inbounds [5 x i32], [5 x i32]* %1583, i64 0, i64 %1648
  %1651 = select i1 %1579, i32* %1649, i32* %1650
  %1652 = load i32, i32* %1651, align 4
  %1653 = mul nsw i32 %1652, %1647
  %1654 = add nuw nsw i64 %1628, 4
  %1655 = add i64 %1630, -4
  %1656 = icmp eq i64 %1655, 0
  br i1 %1656, label %1590, label %1627

1657:                                             ; preds = %1688, %1611
  %1658 = phi i32 [ undef, %1611 ], [ %1714, %1688 ]
  %1659 = phi i64 [ %1618, %1611 ], [ %1715, %1688 ]
  %1660 = phi i32 [ 1, %1611 ], [ %1714, %1688 ]
  %1661 = icmp eq i32 %1623, 0
  br i1 %1661, label %1674, label %1662

1662:                                             ; preds = %1657, %1662
  %1663 = phi i64 [ %1671, %1662 ], [ %1659, %1657 ]
  %1664 = phi i32 [ %1670, %1662 ], [ %1660, %1657 ]
  %1665 = phi i32 [ %1672, %1662 ], [ %1623, %1657 ]
  %1666 = getelementptr inbounds i32, i32* %1615, i64 %1663
  %1667 = getelementptr inbounds [5 x i32], [5 x i32]* %1616, i64 0, i64 %1663
  %1668 = select i1 %1612, i32* %1666, i32* %1667
  %1669 = load i32, i32* %1668, align 4
  %1670 = mul nsw i32 %1669, %1664
  %1671 = add i64 %1663, 1
  %1672 = add i32 %1665, -1
  %1673 = icmp eq i32 %1672, 0
  br i1 %1673, label %1674, label %1662, !llvm.loop !32

1674:                                             ; preds = %1657, %1662, %1607
  %1675 = phi i32 [ 1, %1607 ], [ %1658, %1657 ], [ %1670, %1662 ]
  %1676 = icmp eq i16 %1536, 0
  br i1 %1676, label %1769, label %1677

1677:                                             ; preds = %1674
  %1678 = icmp sgt i32 %1608, 0
  %1679 = sext i32 %1675 to i64
  %1680 = shl nsw i64 %1679, 3
  %1681 = and i32 %1524, 65535
  %1682 = zext i32 %1681 to i64
  %1683 = zext i32 %1608 to i64
  %1684 = and i64 %1683, 1
  %1685 = icmp eq i32 %1608, 1
  %1686 = sub nsw i64 %1683, %1684
  %1687 = icmp eq i64 %1684, 0
  br label %1718

1688:                                             ; preds = %1688, %1625
  %1689 = phi i64 [ %1618, %1625 ], [ %1715, %1688 ]
  %1690 = phi i32 [ 1, %1625 ], [ %1714, %1688 ]
  %1691 = phi i32 [ %1626, %1625 ], [ %1716, %1688 ]
  %1692 = getelementptr inbounds i32, i32* %1615, i64 %1689
  %1693 = getelementptr inbounds [5 x i32], [5 x i32]* %1616, i64 0, i64 %1689
  %1694 = select i1 %1612, i32* %1692, i32* %1693
  %1695 = load i32, i32* %1694, align 4
  %1696 = mul nsw i32 %1695, %1690
  %1697 = add i64 %1689, 1
  %1698 = getelementptr inbounds i32, i32* %1615, i64 %1697
  %1699 = getelementptr inbounds [5 x i32], [5 x i32]* %1616, i64 0, i64 %1697
  %1700 = select i1 %1612, i32* %1698, i32* %1699
  %1701 = load i32, i32* %1700, align 4
  %1702 = mul nsw i32 %1701, %1696
  %1703 = add i64 %1689, 2
  %1704 = getelementptr inbounds i32, i32* %1615, i64 %1703
  %1705 = getelementptr inbounds [5 x i32], [5 x i32]* %1616, i64 0, i64 %1703
  %1706 = select i1 %1612, i32* %1704, i32* %1705
  %1707 = load i32, i32* %1706, align 4
  %1708 = mul nsw i32 %1707, %1702
  %1709 = add i64 %1689, 3
  %1710 = getelementptr inbounds i32, i32* %1615, i64 %1709
  %1711 = getelementptr inbounds [5 x i32], [5 x i32]* %1616, i64 0, i64 %1709
  %1712 = select i1 %1612, i32* %1710, i32* %1711
  %1713 = load i32, i32* %1712, align 4
  %1714 = mul nsw i32 %1713, %1708
  %1715 = add i64 %1689, 4
  %1716 = add i32 %1691, -4
  %1717 = icmp eq i32 %1716, 0
  br i1 %1717, label %1657, label %1688

1718:                                             ; preds = %1737, %1677
  %1719 = phi i64 [ 0, %1677 ], [ %1738, %1737 ]
  br i1 %1678, label %1720, label %1737

1720:                                             ; preds = %1718
  %1721 = getelementptr inbounds i64*, i64** %1539, i64 %1719
  %1722 = trunc i64 %1719 to i32
  br i1 %1685, label %1723, label %1740

1723:                                             ; preds = %1740, %1720
  %1724 = phi i64 [ 0, %1720 ], [ %1766, %1740 ]
  br i1 %1687, label %1737, label %1725

1725:                                             ; preds = %1723
  %1726 = load i64*, i64** %1721, align 8
  %1727 = mul nsw i64 %1724, %1679
  %1728 = getelementptr inbounds i64, i64* %1726, i64 %1727
  %1729 = trunc i64 %1724 to i32
  %1730 = mul i32 %1681, %1729
  %1731 = add nuw i32 %1730, %1722
  %1732 = mul i32 %1731, %1675
  %1733 = sext i32 %1732 to i64
  %1734 = getelementptr inbounds i64, i64* %1574, i64 %1733
  %1735 = bitcast i64* %1734 to i8*
  %1736 = bitcast i64* %1728 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1735, i8* align 8 %1736, i64 %1680, i1 false) #9
  br label %1737

1737:                                             ; preds = %1725, %1723, %1718
  %1738 = add nuw nsw i64 %1719, 1
  %1739 = icmp eq i64 %1738, %1682
  br i1 %1739, label %1769, label %1718

1740:                                             ; preds = %1720, %1740
  %1741 = phi i64 [ %1766, %1740 ], [ 0, %1720 ]
  %1742 = phi i64 [ %1767, %1740 ], [ %1686, %1720 ]
  %1743 = load i64*, i64** %1721, align 8
  %1744 = mul nsw i64 %1741, %1679
  %1745 = getelementptr inbounds i64, i64* %1743, i64 %1744
  %1746 = trunc i64 %1741 to i32
  %1747 = mul i32 %1681, %1746
  %1748 = add nuw i32 %1747, %1722
  %1749 = mul i32 %1748, %1675
  %1750 = sext i32 %1749 to i64
  %1751 = getelementptr inbounds i64, i64* %1574, i64 %1750
  %1752 = bitcast i64* %1751 to i8*
  %1753 = bitcast i64* %1745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1752, i8* align 8 %1753, i64 %1680, i1 false) #9
  %1754 = or i64 %1741, 1
  %1755 = load i64*, i64** %1721, align 8
  %1756 = mul nsw i64 %1754, %1679
  %1757 = getelementptr inbounds i64, i64* %1755, i64 %1756
  %1758 = trunc i64 %1754 to i32
  %1759 = mul i32 %1681, %1758
  %1760 = add nuw i32 %1759, %1722
  %1761 = mul i32 %1760, %1675
  %1762 = sext i32 %1761 to i64
  %1763 = getelementptr inbounds i64, i64* %1574, i64 %1762
  %1764 = bitcast i64* %1763 to i8*
  %1765 = bitcast i64* %1757 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1764, i8* align 8 %1765, i64 %1680, i1 false) #9
  %1766 = add nuw nsw i64 %1741, 2
  %1767 = add i64 %1742, -2
  %1768 = icmp eq i64 %1767, 0
  br i1 %1768, label %1723, label %1740

1769:                                             ; preds = %1737, %1674
  %1770 = icmp sgt i32 %1573, 5
  br i1 %1770, label %1771, label %1777

1771:                                             ; preds = %1769
  %1772 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %1773 = load i32*, i32** %1772, align 8
  %1774 = icmp eq i32* %1773, null
  br i1 %1774, label %1777, label %1775

1775:                                             ; preds = %1771
  %1776 = bitcast i32* %1773 to i8*
  call void @_ZdaPv(i8* %1776) #10
  br label %1777

1777:                                             ; preds = %1775, %1771, %1769
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1540) #9
  %1778 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1537, align 8
  %1779 = icmp eq %"class.tflite::RuntimeShape"** %1778, null
  br i1 %1779, label %1785, label %1780

1780:                                             ; preds = %1777
  %1781 = ptrtoint %"class.tflite::RuntimeShape"** %1778 to i64
  %1782 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %3, i64 0, i32 2, i32 0, i32 1
  %1783 = bitcast %"class.tflite::RuntimeShape"*** %1782 to i64*
  store i64 %1781, i64* %1783, align 8
  %1784 = bitcast %"class.tflite::RuntimeShape"** %1778 to i8*
  call void @_ZdlPv(i8* %1784) #10
  br label %1785

1785:                                             ; preds = %1780, %1777
  %1786 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %3, i64 0, i32 1
  %1787 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1786, i64 0, i32 0, i32 0
  %1788 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1787, align 8
  %1789 = icmp eq %"class.tflite::RuntimeShape"* %1788, null
  br i1 %1789, label %1814, label %1790

1790:                                             ; preds = %1785
  %1791 = bitcast %"class.tflite::RuntimeShape"* %1788 to i8*
  %1792 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %3, i64 0, i32 1, i32 0, i32 1
  %1793 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1792, align 8
  %1794 = icmp eq %"class.tflite::RuntimeShape"* %1793, %1788
  br i1 %1794, label %1812, label %1795

1795:                                             ; preds = %1790, %1807
  %1796 = phi %"class.tflite::RuntimeShape"* [ %1797, %1807 ], [ %1793, %1790 ]
  %1797 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1796, i64 -1
  %1798 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1797, i64 0, i32 0
  %1799 = load i32, i32* %1798, align 8
  %1800 = icmp sgt i32 %1799, 5
  br i1 %1800, label %1801, label %1807

1801:                                             ; preds = %1795
  %1802 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1796, i64 -1, i32 1, i32 0
  %1803 = load i32*, i32** %1802, align 8
  %1804 = icmp eq i32* %1803, null
  br i1 %1804, label %1807, label %1805

1805:                                             ; preds = %1801
  %1806 = bitcast i32* %1803 to i8*
  call void @_ZdaPv(i8* %1806) #10
  br label %1807

1807:                                             ; preds = %1805, %1801, %1795
  %1808 = icmp eq %"class.tflite::RuntimeShape"* %1797, %1788
  br i1 %1808, label %1809, label %1795

1809:                                             ; preds = %1807
  %1810 = bitcast %"class.std::__1::vector.2"* %1786 to i8**
  %1811 = load i8*, i8** %1810, align 8
  br label %1812

1812:                                             ; preds = %1809, %1790
  %1813 = phi i8* [ %1811, %1809 ], [ %1791, %1790 ]
  store %"class.tflite::RuntimeShape"* %1788, %"class.tflite::RuntimeShape"** %1792, align 8
  call void @_ZdlPv(i8* %1813) #10
  br label %1814

1814:                                             ; preds = %1812, %1785
  %1815 = load i64**, i64*** %1538, align 8
  %1816 = icmp eq i64** %1815, null
  br i1 %1816, label %1822, label %1817

1817:                                             ; preds = %1814
  %1818 = ptrtoint i64** %1815 to i64
  %1819 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %3, i64 0, i32 0, i32 0, i32 1
  %1820 = bitcast i64*** %1819 to i64*
  store i64 %1818, i64* %1820, align 8
  %1821 = bitcast i64** %1815 to i8*
  call void @_ZdlPv(i8* %1821) #10
  br label %1822

1822:                                             ; preds = %1817, %1814
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1532) #9
  br label %1827

1823:                                             ; preds = %28
  %1824 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1825 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1824, align 8
  %1826 = tail call i8* @TfLiteTypeGetName(i32 %31) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %1825(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i8* %1826) #9
  br label %1827

1827:                                             ; preds = %1822, %1528, %1521, %1228, %1221, %927, %920, %633, %626, %339, %332, %38, %1823
  %1828 = phi i32 [ 1, %1823 ], [ 0, %332 ], [ 1, %38 ], [ 0, %626 ], [ 1, %339 ], [ 0, %920 ], [ 1, %633 ], [ 0, %1221 ], [ 1, %927 ], [ 0, %1521 ], [ 1, %1228 ], [ 0, %1822 ], [ 1, %1528 ]
  ret i32 %1828
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast float*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to float**
  %22 = getelementptr inbounds float*, float** %21, i64 %10
  %23 = ptrtoint float** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast float*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to float**
  %94 = load float*, float** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi float* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint float* %96 to i64
  %98 = load float**, float*** %62, align 8
  %99 = load float**, float*** %11, align 8
  %100 = icmp ult float** %98, %99
  %101 = ptrtoint float** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast float** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds float*, float** %98, i64 1
  %105 = ptrtoint float** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint float** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to float**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi float** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds float*, float** %134, i64 %110
  %136 = getelementptr inbounds float*, float** %134, i64 %133
  %137 = ptrtoint float** %136 to i64
  %138 = bitcast float** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds float*, float** %135, i64 1
  %140 = ptrtoint float** %139 to i64
  %141 = load float**, float*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint float** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds float*, float** %135, i64 %146
  %148 = ptrtoint float** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast float** %147 to i8*
  %152 = bitcast float** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #9
  %153 = load float**, float*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi float** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq float** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast float** %155 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !33
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !33
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !33
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !33
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #10, !noalias !33
  store i8* %171, i8** %70, align 8, !alias.scope !33
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #9
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #10
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #9
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #10
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #10
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #9
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #10
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.tflite::RuntimeShape"*
  br i1 %10, label %12, label %93

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.tflite::RuntimeShape"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.tflite::RuntimeShape"*
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %20
  %25 = ptrtoint %"class.tflite::RuntimeShape"* %24 to i64
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %1
  %27 = ptrtoint %"class.tflite::RuntimeShape"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.tflite::RuntimeShape"*
  %29 = icmp eq %"class.tflite::RuntimeShape"* %28, %11
  br i1 %29, label %69, label %30

30:                                               ; preds = %17, %50
  %31 = phi %"class.tflite::RuntimeShape"* [ %62, %50 ], [ %24, %17 ]
  %32 = phi %"class.tflite::RuntimeShape"* [ %33, %50 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = icmp sgt i32 %36, 5
  br i1 %37, label %38, label %45

38:                                               ; preds = %30
  %39 = sext i32 %36 to i64
  %40 = shl nsw i64 %39, 2
  %41 = tail call i8* @_Znam(i64 %40) #10
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1, i32 0
  %43 = bitcast i32** %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = bitcast i8* %41 to i32*
  br label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1
  %47 = bitcast %union.anon* %46 to i32*
  %48 = sext i32 %36 to i64
  %49 = shl nsw i64 %48, 2
  br label %50

50:                                               ; preds = %45, %38
  %51 = phi i64 [ %40, %38 ], [ %49, %45 ]
  %52 = phi i32* [ %44, %38 ], [ %47, %45 ]
  %53 = bitcast i32* %52 to i8*
  %54 = load i32, i32* %35, align 8
  %55 = icmp sgt i32 %54, 5
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1, i32 1
  %57 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %union.anon* %56 to i32*
  %60 = select i1 %55, i32* %58, i32* %59
  %61 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %61, i64 %51, i1 false) #9
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1
  %63 = icmp eq %"class.tflite::RuntimeShape"* %33, %11
  br i1 %63, label %64, label %30

64:                                               ; preds = %50
  %65 = ptrtoint %"class.tflite::RuntimeShape"* %62 to i64
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %13, align 8
  %68 = inttoptr i64 %66 to %"class.tflite::RuntimeShape"*
  br label %69

69:                                               ; preds = %17, %64
  %70 = phi %"class.tflite::RuntimeShape"* [ %68, %64 ], [ %28, %17 ]
  %71 = phi %"class.tflite::RuntimeShape"* [ %67, %64 ], [ %11, %17 ]
  %72 = phi i64 [ %65, %64 ], [ %25, %17 ]
  %73 = phi i64 [ %66, %64 ], [ %18, %17 ]
  store i64 %72, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %74 = icmp eq %"class.tflite::RuntimeShape"* %71, %70
  br i1 %74, label %89, label %75

75:                                               ; preds = %69, %87
  %76 = phi %"class.tflite::RuntimeShape"* [ %77, %87 ], [ %71, %69 ]
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 5
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1, i32 1, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i32* %83 to i8*
  tail call void @_ZdaPv(i8* %86) #10
  br label %87

87:                                               ; preds = %85, %81, %75
  %88 = icmp eq %"class.tflite::RuntimeShape"* %77, %70
  br i1 %88, label %89, label %75

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %73, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %92) #10
  br label %93

93:                                               ; preds = %91, %89, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"*, %"class.tflite::RuntimeShape"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.tflite::RuntimeShape"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.tflite::RuntimeShape"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %35
  %39 = ptrtoint %"class.tflite::RuntimeShape"* %38 to i64
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = icmp sgt i32 %42, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = sext i32 %42 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %42 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = load i32, i32* %41, align 8
  %61 = icmp sgt i32 %60, 5
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %union.anon, %union.anon* %62, i64 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = bitcast %union.anon* %62 to i32*
  %66 = select i1 %61, i32* %64, i32* %65
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %67, i64 %57, i1 false) #9
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 1
  %69 = ptrtoint %"class.tflite::RuntimeShape"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %70, align 8
  %72 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  %73 = icmp eq %"class.tflite::RuntimeShape"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %56
  %75 = ptrtoint %"class.tflite::RuntimeShape"* %71 to i64
  br label %113

76:                                               ; preds = %56, %96
  %77 = phi %"class.tflite::RuntimeShape"* [ %108, %96 ], [ %37, %56 ]
  %78 = phi %"class.tflite::RuntimeShape"* [ %79, %96 ], [ %72, %56 ]
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 0
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %91

84:                                               ; preds = %76
  %85 = sext i32 %82 to i64
  %86 = shl nsw i64 %85, 2
  %87 = tail call i8* @_Znam(i64 %86) #10
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1, i32 0
  %89 = bitcast i32** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast i8* %87 to i32*
  br label %96

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1
  %93 = bitcast %union.anon* %92 to i32*
  %94 = sext i32 %82 to i64
  %95 = shl nsw i64 %94, 2
  br label %96

96:                                               ; preds = %91, %84
  %97 = phi i64 [ %86, %84 ], [ %95, %91 ]
  %98 = phi i32* [ %90, %84 ], [ %93, %91 ]
  %99 = bitcast i32* %98 to i8*
  %100 = load i32, i32* %81, align 8
  %101 = icmp sgt i32 %100, 5
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1, i32 1
  %103 = getelementptr inbounds %union.anon, %union.anon* %102, i64 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = bitcast %union.anon* %102 to i32*
  %106 = select i1 %101, i32* %104, i32* %105
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %107, i64 %97, i1 false) #9
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1
  %109 = icmp eq %"class.tflite::RuntimeShape"* %79, %71
  br i1 %109, label %110, label %76

110:                                              ; preds = %96
  %111 = load i64, i64* %6, align 8
  %112 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  br label %113

113:                                              ; preds = %74, %110
  %114 = phi %"class.tflite::RuntimeShape"* [ %71, %74 ], [ %112, %110 ]
  %115 = phi %"class.tflite::RuntimeShape"* [ %37, %74 ], [ %108, %110 ]
  %116 = phi i64 [ %75, %74 ], [ %111, %110 ]
  %117 = ptrtoint %"class.tflite::RuntimeShape"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %69, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"class.tflite::RuntimeShape"*
  %119 = icmp eq %"class.tflite::RuntimeShape"* %114, %118
  br i1 %119, label %134, label %120

120:                                              ; preds = %113, %132
  %121 = phi %"class.tflite::RuntimeShape"* [ %122, %132 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %122, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 5
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1, i32 1, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = bitcast i32* %128 to i8*
  tail call void @_ZdaPv(i8* %131) #10
  br label %132

132:                                              ; preds = %130, %126, %120
  %133 = icmp eq %"class.tflite::RuntimeShape"* %122, %118
  br i1 %133, label %134, label %120

134:                                              ; preds = %132, %113
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %137) #10
  br label %138

138:                                              ; preds = %134, %136
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #9
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !36
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !36
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !36
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !36
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #10, !noalias !36
  store i8* %171, i8** %70, align 8, !alias.scope !36
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #9
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #10
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #9
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #10
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #10
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #9
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #10
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.35"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.35"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.35"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.35"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.35", %"class.tflite::VectorOfTensors.35"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.35"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #9
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !39
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !39
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !39
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !39
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #10, !noalias !39
  store i8* %171, i8** %70, align 8, !alias.scope !39
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #9
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #10
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #9
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #10
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #10
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #9
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #10
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.46"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.46"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i16*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.46"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to i16**
  %22 = getelementptr inbounds i16*, i16** %21, i64 %10
  %23 = ptrtoint i16** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.46"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i16*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.46", %"class.tflite::VectorOfTensors.46"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i16**
  %94 = load i16*, i16** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i16* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i16* %96 to i64
  %98 = load i16**, i16*** %62, align 8
  %99 = load i16**, i16*** %11, align 8
  %100 = icmp ult i16** %98, %99
  %101 = ptrtoint i16** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i16** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i16*, i16** %98, i64 1
  %105 = ptrtoint i16** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i16** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.46"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to i16**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i16** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i16*, i16** %134, i64 %110
  %136 = getelementptr inbounds i16*, i16** %134, i64 %133
  %137 = ptrtoint i16** %136 to i64
  %138 = bitcast i16** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i16*, i16** %135, i64 1
  %140 = ptrtoint i16** %139 to i64
  %141 = load i16**, i16*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i16** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i16*, i16** %135, i64 %146
  %148 = ptrtoint i16** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i16** %147 to i8*
  %152 = bitcast i16** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #9
  %153 = load i16**, i16*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i16** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i16** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i16** %155 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !42
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !42
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !42
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !42
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #10, !noalias !42
  store i8* %171, i8** %70, align 8, !alias.scope !42
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #9
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #10
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #9
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #10
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #10
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #9
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #10
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.57"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.57"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.57"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to i32**
  %22 = getelementptr inbounds i32*, i32** %21, i64 %10
  %23 = ptrtoint i32** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.57"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %220

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i32*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %217
  br i1 %59, label %77, label %220

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.57", %"class.tflite::VectorOfTensors.57"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %221

83:                                               ; preds = %217, %60
  %84 = phi i64 [ 0, %60 ], [ %218, %217 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %94

94:                                               ; preds = %83, %91
  %95 = phi i32* [ %93, %91 ], [ null, %83 ]
  %96 = ptrtoint i32* %95 to i64
  %97 = load i32**, i32*** %62, align 8
  %98 = load i32**, i32*** %11, align 8
  %99 = icmp ult i32** %97, %98
  %100 = ptrtoint i32** %98 to i64
  br i1 %99, label %101, label %105

101:                                              ; preds = %94
  %102 = bitcast i32** %97 to i64*
  store i64 %96, i64* %102, align 8
  %103 = getelementptr inbounds i32*, i32** %97, i64 1
  %104 = ptrtoint i32** %103 to i64
  store i64 %104, i64* %63, align 8
  br label %158

105:                                              ; preds = %94
  %106 = ptrtoint i32** %97 to i64
  %107 = load i64, i64* %13, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.tflite::VectorOfTensors.57"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #11
  unreachable

114:                                              ; preds = %105
  %115 = sub i64 %100, %107
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %110
  %121 = select i1 %120, i64 %110, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #11
  unreachable

126:                                              ; preds = %123, %114
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %114 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #10
  %130 = bitcast i8* %129 to i32**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i32** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds i32*, i32** %133, i64 %109
  %135 = getelementptr inbounds i32*, i32** %133, i64 %132
  %136 = ptrtoint i32** %135 to i64
  %137 = bitcast i32** %134 to i64*
  store i64 %96, i64* %137, align 8
  %138 = getelementptr inbounds i32*, i32** %134, i64 1
  %139 = ptrtoint i32** %138 to i64
  %140 = load i32**, i32*** %64, align 8
  %141 = load i64, i64* %63, align 8
  %142 = ptrtoint i32** %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i32*, i32** %134, i64 %145
  %147 = ptrtoint i32** %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %131
  %150 = bitcast i32** %146 to i8*
  %151 = bitcast i32** %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %143, i1 false) #9
  %152 = load i32**, i32*** %64, align 8
  br label %153

153:                                              ; preds = %149, %131
  %154 = phi i32** [ %140, %131 ], [ %152, %149 ]
  store i64 %147, i64* %13, align 8
  store i64 %139, i64* %63, align 8
  store i64 %136, i64* %12, align 8
  %155 = icmp eq i32** %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast i32** %154 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %158

158:                                              ; preds = %101, %153, %156
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %159, label %160

159:                                              ; preds = %158
  store i32 0, i32* %66, align 8, !alias.scope !45
  br label %176

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !45
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !45
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  store i32 %164, i32* %66, align 8, !alias.scope !45
  %166 = icmp sgt i32 %164, 5
  %167 = sext i32 %164 to i64
  %168 = shl nsw i64 %167, 2
  br i1 %166, label %169, label %172

169:                                              ; preds = %160
  %170 = call i8* @_Znam(i64 %168) #10, !noalias !45
  store i8* %170, i8** %70, align 8, !alias.scope !45
  %171 = bitcast i8* %170 to i32*
  br label %172

172:                                              ; preds = %160, %169
  %173 = phi i32* [ %171, %169 ], [ %68, %160 ]
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %168, i1 false) #9
  br label %176

176:                                              ; preds = %159, %172
  %177 = phi i32 [ 0, %159 ], [ %164, %172 ]
  %178 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %180 = icmp ult %"class.tflite::RuntimeShape"* %178, %179
  br i1 %180, label %181, label %207

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 0
  store i32 %177, i32* %182, align 8
  %183 = icmp sgt i32 %177, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %181
  %185 = sext i32 %177 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #10
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %177 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = load i32, i32* %66, align 8
  %201 = icmp sgt i32 %200, 5
  %202 = load i32*, i32** %73, align 8
  %203 = select i1 %201, i32* %202, i32* %68
  %204 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %204, i64 %197, i1 false) #9
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 1
  %206 = ptrtoint %"class.tflite::RuntimeShape"* %205 to i64
  store i64 %206, i64* %74, align 8
  br label %209

207:                                              ; preds = %176
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %208 = load i32, i32* %66, align 8
  br label %209

209:                                              ; preds = %196, %207
  %210 = phi i32 [ %200, %196 ], [ %208, %207 ]
  %211 = icmp sgt i32 %210, 5
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = load i32*, i32** %69, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %212
  %216 = bitcast i32* %213 to i8*
  call void @_ZdaPv(i8* %216) #10
  br label %217

217:                                              ; preds = %209, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %218 = add nuw nsw i64 %84, 1
  %219 = icmp eq i64 %218, %75
  br i1 %219, label %76, label %83

220:                                              ; preds = %287, %58, %76
  ret void

221:                                              ; preds = %287, %77
  %222 = phi i64 [ 0, %77 ], [ %288, %287 ]
  %223 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %223, i64 %222
  %225 = ptrtoint %"class.tflite::RuntimeShape"* %224 to i64
  %226 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %228 = icmp ult %"class.tflite::RuntimeShape"** %226, %227
  %229 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  br i1 %228, label %230, label %234

230:                                              ; preds = %221
  %231 = bitcast %"class.tflite::RuntimeShape"** %226 to i64*
  store i64 %225, i64* %231, align 8
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %226, i64 1
  %233 = ptrtoint %"class.tflite::RuntimeShape"** %232 to i64
  store i64 %233, i64* %80, align 8
  br label %287

234:                                              ; preds = %221
  %235 = ptrtoint %"class.tflite::RuntimeShape"** %226 to i64
  %236 = load i64, i64* %32, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = add nsw i64 %238, 1
  %240 = icmp ugt i64 %239, 2305843009213693951
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %242) #11
  unreachable

243:                                              ; preds = %234
  %244 = sub i64 %229, %236
  %245 = ashr exact i64 %244, 3
  %246 = icmp ult i64 %245, 1152921504606846975
  br i1 %246, label %247, label %255

247:                                              ; preds = %243
  %248 = ashr exact i64 %244, 2
  %249 = icmp ult i64 %248, %239
  %250 = select i1 %249, i64 %239, i64 %248
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %260, label %252

252:                                              ; preds = %247
  %253 = icmp ugt i64 %250, 2305843009213693951
  br i1 %253, label %254, label %255

254:                                              ; preds = %252
  call void @abort() #11
  unreachable

255:                                              ; preds = %252, %243
  %256 = phi i64 [ %250, %252 ], [ 2305843009213693951, %243 ]
  %257 = shl i64 %256, 3
  %258 = call i8* @_Znwm(i64 %257) #10
  %259 = bitcast i8* %258 to %"class.tflite::RuntimeShape"**
  br label %260

260:                                              ; preds = %255, %247
  %261 = phi i64 [ %256, %255 ], [ 0, %247 ]
  %262 = phi %"class.tflite::RuntimeShape"** [ %259, %255 ], [ null, %247 ]
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %238
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %261
  %265 = ptrtoint %"class.tflite::RuntimeShape"** %264 to i64
  %266 = bitcast %"class.tflite::RuntimeShape"** %263 to i64*
  store i64 %225, i64* %266, align 8
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 1
  %268 = ptrtoint %"class.tflite::RuntimeShape"** %267 to i64
  %269 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %270 = load i64, i64* %80, align 8
  %271 = ptrtoint %"class.tflite::RuntimeShape"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = sub nsw i64 0, %273
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %274
  %276 = ptrtoint %"class.tflite::RuntimeShape"** %275 to i64
  %277 = icmp sgt i64 %272, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %260
  %279 = bitcast %"class.tflite::RuntimeShape"** %275 to i8*
  %280 = bitcast %"class.tflite::RuntimeShape"** %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 %272, i1 false) #9
  %281 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %282

282:                                              ; preds = %278, %260
  %283 = phi %"class.tflite::RuntimeShape"** [ %269, %260 ], [ %281, %278 ]
  store i64 %276, i64* %32, align 8
  store i64 %268, i64* %80, align 8
  store i64 %265, i64* %30, align 8
  %284 = icmp eq %"class.tflite::RuntimeShape"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.tflite::RuntimeShape"** %283 to i8*
  call void @_ZdlPv(i8* %286) #10
  br label %287

287:                                              ; preds = %230, %282, %285
  %288 = add nuw nsw i64 %222, 1
  %289 = icmp eq i64 %288, %82
  br i1 %289, label %220, label %221
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.68"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.68"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i64*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.68"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to i64**
  %22 = getelementptr inbounds i64*, i64** %21, i64 %10
  %23 = ptrtoint i64** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.68"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i64*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.68", %"class.tflite::VectorOfTensors.68"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i64**
  %94 = load i64*, i64** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i64* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = load i64**, i64*** %62, align 8
  %99 = load i64**, i64*** %11, align 8
  %100 = icmp ult i64** %98, %99
  %101 = ptrtoint i64** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i64** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i64*, i64** %98, i64 1
  %105 = ptrtoint i64** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i64** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.68"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to i64**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i64** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i64*, i64** %134, i64 %110
  %136 = getelementptr inbounds i64*, i64** %134, i64 %133
  %137 = ptrtoint i64** %136 to i64
  %138 = bitcast i64** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i64*, i64** %135, i64 1
  %140 = ptrtoint i64** %139 to i64
  %141 = load i64**, i64*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i64** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i64*, i64** %135, i64 %146
  %148 = ptrtoint i64** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i64** %147 to i8*
  %152 = bitcast i64** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #9
  %153 = load i64**, i64*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i64** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i64** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i64** %155 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !48
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !48
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !48
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !48
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #10, !noalias !48
  store i8* %171, i8** %70, align 8, !alias.scope !48
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #9
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #10
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #9
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #10
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #10
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #9
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #10
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!15 = distinct !{!15, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !6}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = distinct !{!21, !6}
!22 = distinct !{!22, !6}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = distinct !{!26, !6}
!27 = distinct !{!27, !6}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!30 = distinct !{!30, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!31 = distinct !{!31, !6}
!32 = distinct !{!32, !6}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!35 = distinct !{!35, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!38 = distinct !{!38, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!44 = distinct !{!44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!50 = distinct !{!50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
