; ModuleID = '../../ui/views/controls/textfield/textfield_model.cc'
source_filename = "../../ui/views/controls/textfield/textfield_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.views::TextfieldModel::Delegate" = type { i32 (...)** }
%"class.views::TextfieldModel" = type { i32 (...)**, %"class.views::TextfieldModel::Delegate"*, %"class.std::__1::unique_ptr", %"class.gfx::Range", %"class.std::__1::list", %"class.std::__1::__list_iterator" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::RenderText"* }
%"class.gfx::RenderText" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.15", %"class.gfx::BreakList.25", %"class.gfx::BreakList.35", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.15", %"class.gfx::BreakList.25", %"class.gfx::BreakList.35", %"struct.std::__1::array", %"class.std::__1::vector.55", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.63", %"class.gfx::BreakList.70", %"class.std::__1::unique_ptr.79", float, i32, %"class.absl::optional.97", i8, [7 x i8] }>
%"class.gfx::FontList" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.gfx::SelectionModel" = type <{ %"class.gfx::Range", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.gfx::Range"* }
%"class.gfx::BreakList" = type { %"class.std::__1::vector.8", i64 }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.gfx::BreakList.15" = type { %"class.std::__1::vector.16", i64 }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair.18"*, %"struct.std::__1::pair.18"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.18" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.18"* }
%"class.gfx::BreakList.25" = type { %"class.std::__1::vector.26", i64 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair.28"*, %"struct.std::__1::pair.28"*, %"class.std::__1::__compressed_pair.30" }
%"struct.std::__1::pair.28" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::pair.28"* }
%"class.gfx::BreakList.35" = type { %"class.std::__1::vector.36", i64 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.std::__1::pair.38"*, %"struct.std::__1::pair.38"*, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::pair.38" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::pair.38"* }
%"struct.std::__1::array" = type { [4 x %"class.gfx::BreakList.45"] }
%"class.gfx::BreakList.45" = type { %"class.std::__1::vector.46", i64 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.std::__1::pair.48"*, %"struct.std::__1::pair.48"*, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::pair.48" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::pair.48"* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"*, %"class.std::__1::__compressed_pair.57" }
%"struct.gfx::internal::TextToDisplayIndex" = type { i64, i64 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.gfx::internal::TextToDisplayIndex"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.62 }
%union.anon.62 = type { i8 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.65" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::BreakList.70" = type { %"class.std::__1::vector.71", i64 }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.std::__1::pair.73"*, %"struct.std::__1::pair.73"*, %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::pair.73" = type { i64, i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::pair.73"* }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.gfx::internal::ShapedText"* }
%"class.gfx::internal::ShapedText" = type { %"class.std::__1::vector.82" }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*, %"class.std::__1::__compressed_pair.91" }
%"struct.gfx::internal::Line" = type <{ %"class.std::__1::vector.84", %"class.gfx::SizeF", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"*, %"class.std::__1::__compressed_pair.86" }
%"struct.gfx::internal::LineSegment" = type { %"class.gfx::RangeF", %"class.gfx::Range", i64 }
%"class.gfx::RangeF" = type { float, float }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.gfx::internal::LineSegment"* }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.gfx::internal::Line"* }
%"class.absl::optional.97" = type { %"class.absl::optional_internal::optional_data.98" }
%"class.absl::optional_internal::optional_data.98" = type { %"class.absl::optional_internal::optional_data_base.99" }
%"class.absl::optional_internal::optional_data_base.99" = type { %"class.absl::optional_internal::optional_data_dtor_base.100" }
%"class.absl::optional_internal::optional_data_dtor_base.100" = type { i8, %union.anon.101 }
%union.anon.101 = type { i32 }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.105" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.views::internal::Edit" = type { i32 (...)**, i32, i32, %"class.std::__1::vector.113", %"class.std::__1::vector.120", %"class.gfx::Range", %"class.std::__1::vector", i8, i64, %"class.std::__1::basic_string", i64 }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { i64*, i64*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::allocator" = type { i8 }
%"class.views::internal::InsertEdit" = type { %"class.views::internal::Edit" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.views::internal::Edit"* }
%"class.views::internal::ReplaceEdit" = type { %"class.views::internal::Edit" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.views::internal::DeleteEdit" = type { %"class.views::internal::Edit" }
%"class.ui::ScopedClipboardWriter" = type { %"class.base::flat_map", %"class.std::__1::vector.138", i32, %class.SkBitmap, i8, %"class.std::__1::unique_ptr.181" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.std::__1::pair.132"*, %"struct.std::__1::pair.132"*, %"class.std::__1::__compressed_pair.133" }
%"struct.std::__1::pair.132" = type opaque
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::pair.132"* }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"struct.ui::Clipboard::PlatformRepresentation"*, %"struct.ui::Clipboard::PlatformRepresentation"*, %"class.std::__1::__compressed_pair.168" }
%"struct.ui::Clipboard::PlatformRepresentation" = type { %"class.std::__1::basic_string.140", %"class.mojo_base::BigBuffer" }
%"class.std::__1::basic_string.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.143 }
%union.anon.143 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.149", i64, %"class.absl::optional.155" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { i8* }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.ui::Clipboard::PlatformRepresentation"* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.180 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.173, i32, i32 }
%class.sk_sp.173 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.175" }
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.180 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.ui::DataTransferEndpoint"* }
%"class.ui::DataTransferEndpoint" = type <{ i32, [4 x i8], %"class.absl::optional.184", i8, [7 x i8] }>
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.189" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.140", %"class.std::__1::basic_string.140", i16, [6 x i8] }>
%"class.absl::optional.189" = type { %"class.absl::optional_internal::optional_data.190" }
%"class.absl::optional_internal::optional_data.190" = type { %"class.absl::optional_internal::optional_data_base.191" }
%"class.absl::optional_internal::optional_data_base.191" = type { %"class.absl::optional_internal::optional_data_dtor_base.192" }
%"class.absl::optional_internal::optional_data_dtor_base.192" = type { i8, %union.anon.193 }
%union.anon.193 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.ui::Clipboard" = type { i32 (...)** }
%"struct.ui::CompositionText" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.197", %"class.gfx::Range" }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*, %"class.std::__1::__compressed_pair.206" }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.199" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"class.std::__1::basic_string.140"*, %"class.std::__1::basic_string.140"*, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.std::__1::basic_string.140"* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.ui::ImeTextSpan"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN5views8internal4Edit4UndoEPNS_14TextfieldModelE = comdat any

$_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE5eraseEmm = comdat any

$_ZNSt3__111make_uniqueIN5views8internal10DeleteEditEJRbRNS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS9_ISB_EEEERNS5_ImNS9_ImEEEERKN3gfx5RangeERKNS5_ISJ_NS9_ISJ_EEEERKbRmEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5views8internal11ReplaceEditEJRNS2_9MergeTypeERNS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENSA_ISC_EEEERNS6_ImNSA_ImEEEERKN3gfx5RangeERKNS6_ISK_NSA_ISK_EEEERKbRmRKSC_ST_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN5views14TextfieldModel8Delegate13OnTextChangedEv = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_ = comdat any

$_ZN5views8internal4Edit12MergeReplaceEPKS1_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPKmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZN5views8internal10InsertEditC2EbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEm = comdat any

$_ZN5views8internal4EditC2ENS1_4TypeENS0_9MergeTypeENSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEENS5_ImNS9_ImEEEEN3gfx5RangeENS5_ISH_NS9_ISH_EEEEbmRKSB_m = comdat any

$_ZN5views8internal4EditD2Ev = comdat any

$_ZN5views8internal10InsertEditD0Ev = comdat any

$_ZN5views8internal10InsertEdit7DoMergeEPKNS0_4EditE = comdat any

$_ZN5views8internal4EditD0Ev = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN5views8internal10DeleteEditC2EbNSt3__16vectorINS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS7_IS9_EEEENS3_ImNS7_ImEEEEN3gfx5RangeENS3_ISF_NS7_ISF_EEEEbm = comdat any

$_ZN5views8internal10DeleteEditD0Ev = comdat any

$_ZN5views8internal10DeleteEdit7DoMergeEPKNS0_4EditE = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZN5views8internal11ReplaceEditC2ENS0_9MergeTypeENSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS4_ImNS8_ImEEEEN3gfx5RangeENS4_ISG_NS8_ISG_EEEEbmRKSA_m = comdat any

$_ZN5views8internal11ReplaceEditD0Ev = comdat any

$_ZN5views8internal11ReplaceEdit7DoMergeEPKNS0_4EditE = comdat any

$_ZTVN5views8internal10InsertEditE = comdat any

$_ZTVN5views8internal4EditE = comdat any

$_ZTVN5views8internal10DeleteEditE = comdat any

$_ZTVN5views8internal11ReplaceEditE = comdat any

@_ZTVN5views14TextfieldModelE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::TextfieldModel"*)* @_ZN5views14TextfieldModelD2Ev to i8*), i8* bitcast (void (%"class.views::TextfieldModel"*)* @_ZN5views14TextfieldModelD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2
@_ZTVN5views14TextfieldModel8DelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.views::TextfieldModel::Delegate"*)* @_ZN5views14TextfieldModel8Delegate13OnTextChangedEv to i8*), i8* bitcast (void (%"class.views::TextfieldModel::Delegate"*)* @_ZN5views14TextfieldModel8DelegateD2Ev to i8*), i8* bitcast (void (%"class.views::TextfieldModel::Delegate"*)* @_ZN5views14TextfieldModel8DelegateD0Ev to i8*)] }, align 8
@_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"Type::kReplace == edit->type_\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"../../ui/views/controls/textfield/textfield_model.cc\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"1U == edit->old_text_starts_.size()\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"0U == edit->old_text_starts_[0]\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"0U == edit->new_text_start_\00", align 1
@.ref.tmp = private constant [1 x i64] zeroinitializer, align 8
@_ZTVN5views8internal10InsertEditE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::internal::Edit"*)* @_ZN5views8internal4EditD2Ev to i8*), i8* bitcast (void (%"class.views::internal::InsertEdit"*)* @_ZN5views8internal10InsertEditD0Ev to i8*), i8* bitcast (i1 (%"class.views::internal::InsertEdit"*, %"class.views::internal::Edit"*)* @_ZN5views8internal10InsertEdit7DoMergeEPKNS0_4EditE to i8*)] }, comdat, align 8
@_ZTVN5views8internal4EditE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::internal::Edit"*)* @_ZN5views8internal4EditD2Ev to i8*), i8* bitcast (void (%"class.views::internal::Edit"*)* @_ZN5views8internal4EditD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5views8internal10DeleteEditE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::internal::Edit"*)* @_ZN5views8internal4EditD2Ev to i8*), i8* bitcast (void (%"class.views::internal::DeleteEdit"*)* @_ZN5views8internal10DeleteEditD0Ev to i8*), i8* bitcast (i1 (%"class.views::internal::DeleteEdit"*, %"class.views::internal::Edit"*)* @_ZN5views8internal10DeleteEdit7DoMergeEPKNS0_4EditE to i8*)] }, comdat, align 8
@_ZTVN5views8internal11ReplaceEditE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::internal::Edit"*)* @_ZN5views8internal4EditD2Ev to i8*), i8* bitcast (void (%"class.views::internal::ReplaceEdit"*)* @_ZN5views8internal11ReplaceEditD0Ev to i8*), i8* bitcast (i1 (%"class.views::internal::ReplaceEdit"*, %"class.views::internal::Edit"*)* @_ZN5views8internal11ReplaceEdit7DoMergeEPKNS0_4EditE to i8*)] }, comdat, align 8

@_ZN5views14TextfieldModel8DelegateD1Ev = hidden unnamed_addr alias void (%"class.views::TextfieldModel::Delegate"*), void (%"class.views::TextfieldModel::Delegate"*)* @_ZN5views14TextfieldModel8DelegateD2Ev
@_ZN5views14TextfieldModelC1EPNS0_8DelegateE = hidden unnamed_addr alias void (%"class.views::TextfieldModel"*, %"class.views::TextfieldModel::Delegate"*), void (%"class.views::TextfieldModel"*, %"class.views::TextfieldModel::Delegate"*)* @_ZN5views14TextfieldModelC2EPNS0_8DelegateE
@_ZN5views14TextfieldModelD1Ev = hidden unnamed_addr alias void (%"class.views::TextfieldModel"*), void (%"class.views::TextfieldModel"*)* @_ZN5views14TextfieldModelD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views14TextfieldModel8DelegateD2Ev(%"class.views::TextfieldModel::Delegate"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel8DelegateD0Ev(%"class.views::TextfieldModel::Delegate"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModelC2EPNS0_8DelegateE(%"class.views::TextfieldModel"*, %"class.views::TextfieldModel::Delegate"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views14TextfieldModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 1
  store %"class.views::TextfieldModel::Delegate"* %1, %"class.views::TextfieldModel::Delegate"** %4, align 8
  %5 = tail call %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() #19
  %6 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.gfx::RenderText"* %5, %"class.gfx::RenderText"** %6, align 8
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %14, align 8
  ret void
}

declare %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModelD2Ev(%"class.views::TextfieldModel"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views14TextfieldModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %41, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  store i64 0, i64* %4, align 8
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %9, %10
  br i1 %24, label %41, label %25

25:                                               ; preds = %7, %38
  %26 = phi %"struct.std::__1::__list_node_base"* [ %28, %38 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 1
  %30 = bitcast %"struct.std::__1::__list_node_base"* %29 to %"class.views::internal::Edit"**
  %31 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %30, align 8
  store %"class.views::internal::Edit"* null, %"class.views::internal::Edit"** %30, align 8
  %32 = icmp eq %"class.views::internal::Edit"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.views::internal::Edit"* %31 to void (%"class.views::internal::Edit"*)***
  %35 = load void (%"class.views::internal::Edit"*)**, void (%"class.views::internal::Edit"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %35, i64 1
  %37 = load void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %36, align 8
  tail call void %37(%"class.views::internal::Edit"* nonnull %31) #19
  br label %38

38:                                               ; preds = %33, %25
  %39 = bitcast %"struct.std::__1::__list_node_base"* %26 to i8*
  tail call void @_ZdlPv(i8* %39) #20
  %40 = icmp eq %"struct.std::__1::__list_node_base"* %28, %10
  br i1 %40, label %41, label %25

41:                                               ; preds = %38, %1, %7
  %42 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  store %"struct.std::__1::__list_node_base"* %42, %"struct.std::__1::__list_node_base"** %43, align 8
  %44 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %45 = bitcast %"class.gfx::Range"* %44 to i64*
  store i64 -1, i64* %45, align 8
  %46 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %47 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %46, align 8
  tail call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %47, %"class.gfx::Range"* dereferenceable(8) %44) #19
  %48 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0
  %49 = load i64, i64* %4, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %85, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %48, i64 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %48, i64 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %56, i64 0, i32 1
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 0
  %61 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %61, i64 0, i32 1
  %63 = bitcast %"struct.std::__1::__list_node_base"** %62 to i64*
  store i64 %59, i64* %63, align 8
  %64 = bitcast %"struct.std::__1::__list_node_base"* %53 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64**
  %67 = load i64*, i64** %66, align 8
  store i64 %65, i64* %67, align 8
  store i64 0, i64* %4, align 8
  %68 = icmp eq %"struct.std::__1::__list_node_base"* %53, %54
  br i1 %68, label %85, label %69

69:                                               ; preds = %51, %82
  %70 = phi %"struct.std::__1::__list_node_base"* [ %72, %82 ], [ %53, %51 ]
  %71 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %70, i64 0, i32 1
  %72 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %70, i64 1
  %74 = bitcast %"struct.std::__1::__list_node_base"* %73 to %"class.views::internal::Edit"**
  %75 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %74, align 8
  store %"class.views::internal::Edit"* null, %"class.views::internal::Edit"** %74, align 8
  %76 = icmp eq %"class.views::internal::Edit"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %69
  %78 = bitcast %"class.views::internal::Edit"* %75 to void (%"class.views::internal::Edit"*)***
  %79 = load void (%"class.views::internal::Edit"*)**, void (%"class.views::internal::Edit"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %79, i64 1
  %81 = load void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %80, align 8
  tail call void %81(%"class.views::internal::Edit"* nonnull %75) #19
  br label %82

82:                                               ; preds = %77, %69
  %83 = bitcast %"struct.std::__1::__list_node_base"* %70 to i8*
  tail call void @_ZdlPv(i8* %83) #20
  %84 = icmp eq %"struct.std::__1::__list_node_base"* %72, %54
  br i1 %84, label %85, label %69

85:                                               ; preds = %82, %41, %51
  %86 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %46, align 8
  store %"class.gfx::RenderText"* null, %"class.gfx::RenderText"** %46, align 8
  %87 = icmp eq %"class.gfx::RenderText"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.gfx::RenderText"* %86 to void (%"class.gfx::RenderText"*)***
  %90 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %90, i64 1
  %92 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %91, align 8
  tail call void %92(%"class.gfx::RenderText"* nonnull %86) #19
  br label %93

93:                                               ; preds = %85, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel16ClearEditHistoryEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %40, label %24

24:                                               ; preds = %6, %37
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %37 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.views::internal::Edit"**
  %30 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %29, align 8
  store %"class.views::internal::Edit"* null, %"class.views::internal::Edit"** %29, align 8
  %31 = icmp eq %"class.views::internal::Edit"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.views::internal::Edit"* %30 to void (%"class.views::internal::Edit"*)***
  %34 = load void (%"class.views::internal::Edit"*)**, void (%"class.views::internal::Edit"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %34, i64 1
  %36 = load void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %35, align 8
  tail call void %36(%"class.views::internal::Edit"* nonnull %30) #19
  br label %37

37:                                               ; preds = %32, %24
  %38 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %38) #20
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %39, label %40, label %24

40:                                               ; preds = %37, %1, %6
  %41 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  store %"struct.std::__1::__list_node_base"* %41, %"struct.std::__1::__list_node_base"** %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel16ClearCompositionEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %3 = bitcast %"class.gfx::Range"* %2 to i64*
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %4, align 8
  tail call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %5, %"class.gfx::Range"* dereferenceable(8) %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModelD0Ev(%"class.views::TextfieldModel"*) unnamed_addr #3 align 2 {
  tail call void @_ZN5views14TextfieldModelD2Ev(%"class.views::TextfieldModel"* %0) #19
  %2 = bitcast %"class.views::TextfieldModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEm(%"class.views::TextfieldModel"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi i1 [ true, %10 ], [ false, %3 ]
  %14 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %15, i64 0, i32 3
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %57

34:                                               ; preds = %12
  %35 = icmp eq i64 %24, 0
  br i1 %35, label %90, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %40 = select i1 %28, i16* %38, i16* %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %44 = select i1 %20, i16* %42, i16* %43
  br label %45

45:                                               ; preds = %52, %36
  %46 = phi i64 [ %53, %52 ], [ %24, %36 ]
  %47 = phi i16* [ %55, %52 ], [ %40, %36 ]
  %48 = phi i16* [ %54, %52 ], [ %44, %36 ]
  %49 = load i16, i16* %48, align 2
  %50 = load i16, i16* %47, align 2
  %51 = icmp eq i16 %50, %49
  br i1 %51, label %52, label %57

52:                                               ; preds = %45
  %53 = add i64 %46, -1
  %54 = getelementptr inbounds i16, i16* %48, i64 1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %90, label %45

57:                                               ; preds = %45, %12
  br i1 %13, label %58, label %65

58:                                               ; preds = %57
  %59 = tail call zeroext i1 @_ZN5views14TextfieldModel4UndoEv(%"class.views::TextfieldModel"* %0)
  %60 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %14, align 8
  %61 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %60, i64 0, i32 3
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  br label %65

65:                                               ; preds = %58, %57
  %66 = phi i8 [ %64, %58 ], [ %19, %57 ]
  %67 = phi %"class.gfx::RenderText"* [ %60, %58 ], [ %15, %57 ]
  %68 = select i1 %13, i32 0, i32 2
  %69 = icmp slt i8 %66, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %67, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  br label %75

73:                                               ; preds = %65
  %74 = zext i8 %66 to i64
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi i64 [ %72, %70 ], [ %74, %73 ]
  %77 = trunc i64 %76 to i32
  %78 = tail call i8* @_Znwm(i64 8) #20
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %78, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 8
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"class.gfx::Range"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %"class.gfx::Range"** %79 to i64*
  %85 = bitcast i8* %78 to i32*
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %78, i64 4
  %87 = bitcast i8* %86 to i32*
  store i32 %77, i32* %87, align 4
  %88 = ptrtoint i8* %81 to i64
  store i64 %88, i64* %84, align 8
  call void @_ZN5views14TextfieldModel23ExecuteAndRecordReplaceENS_8internal9MergeTypeENSt3__16vectorIN3gfx5RangeENS3_9allocatorIS6_EEEEmRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENS7_IDsEEEEm(%"class.views::TextfieldModel"* %0, i32 %68, %"class.std::__1::vector"* nonnull %4, i64 %2, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0)
  %89 = ptrtoint i8* %78 to i64
  store i64 %89, i64* %84, align 8
  tail call void @_ZdlPv(i8* nonnull %78) #20
  br label %90

90:                                               ; preds = %52, %75, %34
  %91 = load i32, i32* %5, align 4
  %92 = load i32, i32* %7, align 4
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0) #19
  br label %96

96:                                               ; preds = %90, %94
  %97 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %14, align 8
  tail call void @_ZN3gfx10RenderText14ClearSelectionEv(%"class.gfx::RenderText"* %97) #19
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14TextfieldModel18HasCompositionTextEv(%"class.views::TextfieldModel"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #19
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %4, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %6, i64 0, i32 3
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %10, %13
  %15 = select i1 %14, i32 %10, i32 %13
  %16 = icmp ult i32 %10, %13
  %17 = select i1 %16, i32 %10, i32 %13
  %18 = sub i32 %15, %17
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* dereferenceable(24) %7, i64 %11, i64 %19, %"class.std::__1::allocator"* dereferenceable(1) %20) #19
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %12, align 4
  %23 = icmp ugt i32 %21, %22
  %24 = select i1 %23, i32 %21, i32 %22
  %25 = icmp ult i32 %21, %22
  %26 = select i1 %25, i32 %21, i32 %22
  %27 = sub i32 %24, %26
  %28 = call i8* @_Znwm(i64 144) #20
  %29 = bitcast i8* %28 to %"class.views::internal::InsertEdit"*
  %30 = zext i32 %21 to i64
  call void @_ZN5views8internal10InsertEditC2EbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEm(%"class.views::internal::InsertEdit"* nonnull %29, i1 zeroext false, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i64 %30) #19
  %31 = bitcast i8* %28 to %"class.views::internal::Edit"*
  call void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"* %0, %"class.views::internal::Edit"* nonnull %31)
  %32 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %4, align 8
  %33 = load i32, i32* %12, align 4
  %34 = zext i32 %33 to i64
  call void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"* %32, i64 %34) #19
  %35 = bitcast %"class.gfx::Range"* %8 to i64*
  store i64 -1, i64* %35, align 8
  %36 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %4, align 8
  call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %36, %"class.gfx::Range"* dereferenceable(8) %8) #19
  %37 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 1
  %38 = load %"class.views::TextfieldModel::Delegate"*, %"class.views::TextfieldModel::Delegate"** %37, align 8
  %39 = icmp eq %"class.views::TextfieldModel::Delegate"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %1
  %41 = bitcast %"class.views::TextfieldModel::Delegate"* %38 to void (%"class.views::TextfieldModel::Delegate"*)***
  %42 = load void (%"class.views::TextfieldModel::Delegate"*)**, void (%"class.views::TextfieldModel::Delegate"*)*** %41, align 8
  %43 = load void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %42, align 8
  call void %43(%"class.views::TextfieldModel::Delegate"* nonnull %38) #19
  br label %44

44:                                               ; preds = %1, %40
  %45 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #20
  br label %52

52:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #19
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel4UndoEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %282, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %9, %7
  br i1 %10, label %282, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %18

18:                                               ; preds = %11, %17
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #19
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %23, align 8
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %25, i64 0, i32 3
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %18
  %32 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 24, i1 false) #19
  br label %208

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, 11
  br i1 %38, label %39, label %44

39:                                               ; preds = %33
  %40 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %41 = trunc i64 %37 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  store i8 %41, i8* %43, align 1
  br label %59

44:                                               ; preds = %33
  %45 = icmp ugt i64 %37, 9223372036854775791
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %47) #18
  unreachable

48:                                               ; preds = %44
  %49 = add nuw nsw i64 %37, 8
  %50 = and i64 %49, -8
  %51 = icmp slt i64 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  tail call void @abort() #18
  unreachable

53:                                               ; preds = %48
  %54 = shl i64 %50, 1
  %55 = tail call i8* @_Znwm(i64 %54) #20
  %56 = bitcast i8* %55 to i16*
  %57 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  store i8* %55, i8** %57, align 8
  %58 = or i64 %50, -9223372036854775808
  store i64 %58, i64* %22, align 8
  store i64 %37, i64* %21, align 8
  br label %59

59:                                               ; preds = %53, %39
  %60 = phi i16* [ %40, %39 ], [ %56, %53 ]
  %61 = add nuw nsw i64 %37, 1
  %62 = add i64 %37, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %37, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %35, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %35, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %35, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %35, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !2
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %35, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !2
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !5, !noalias !2
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %35, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !5, !noalias !2
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !5, !noalias !2
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %35, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !2
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !2
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !5, !noalias !2
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !7

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %35, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !2
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !2
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !5, !noalias !2
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !5, !noalias !2
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !9

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %35, %64 ], [ %35, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !11

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !12

206:                                              ; preds = %171, %176, %151
  %207 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %23, align 8
  br label %208

208:                                              ; preds = %206, %31
  %209 = phi %"class.gfx::RenderText"* [ %207, %206 ], [ %25, %31 ]
  %210 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %209, i64 0, i32 11, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5
  %213 = bitcast %"class.std::__1::__list_iterator"* %212 to %"struct.std::__1::__list_node"**
  %214 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %213, align 8
  %215 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %214, i64 0, i32 1, i32 0, i32 0, i32 0
  %216 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %215, align 8
  %217 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %216, i64 0, i32 2
  store i32 0, i32* %217, align 4
  %218 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %213, align 8
  %219 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %218, i64 0, i32 1, i32 0, i32 0, i32 0
  %220 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %219, align 8
  tail call void @_ZN5views8internal4Edit4UndoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* %220, %"class.views::TextfieldModel"* %0)
  %221 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %222 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %212, i64 0, i32 0
  %224 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %223, align 8
  %225 = icmp eq %"struct.std::__1::__list_node_base"* %224, %222
  br i1 %225, label %226, label %227

226:                                              ; preds = %208
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %8, align 8
  br label %231

227:                                              ; preds = %208
  %228 = bitcast %"struct.std::__1::__list_node_base"* %224 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.std::__1::__list_iterator"* %212 to i64*
  store i64 %229, i64* %230, align 8
  br label %231

231:                                              ; preds = %227, %226
  %232 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %23, align 8
  %233 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %232, i64 0, i32 3
  %234 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %234, i64 0, i32 1, i32 1
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = load i64, i64* %21, align 8
  %239 = zext i8 %236 to i64
  %240 = select i1 %237, i64 %238, i64 %239
  %241 = bitcast %"class.std::__1::basic_string"* %233 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  %245 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %232, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = zext i8 %243 to i64
  %248 = select i1 %244, i64 %246, i64 %247
  %249 = icmp eq i64 %240, %248
  br i1 %249, label %250, label %276

250:                                              ; preds = %231
  %251 = icmp eq i64 %240, 0
  br i1 %251, label %272, label %252

252:                                              ; preds = %250
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i16*, i16** %253, align 8
  %255 = bitcast %"class.std::__1::basic_string"* %233 to i16*
  %256 = select i1 %244, i16* %254, i16* %255
  %257 = load i16*, i16** %20, align 8
  %258 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %259 = select i1 %237, i16* %257, i16* %258
  br label %260

260:                                              ; preds = %267, %252
  %261 = phi i64 [ %268, %267 ], [ %240, %252 ]
  %262 = phi i16* [ %270, %267 ], [ %256, %252 ]
  %263 = phi i16* [ %269, %267 ], [ %259, %252 ]
  %264 = load i16, i16* %263, align 2
  %265 = load i16, i16* %262, align 2
  %266 = icmp eq i16 %265, %264
  br i1 %266, label %267, label %276

267:                                              ; preds = %260
  %268 = add i64 %261, -1
  %269 = getelementptr inbounds i16, i16* %263, i64 1
  %270 = getelementptr inbounds i16, i16* %262, i64 1
  %271 = icmp eq i64 %268, 0
  br i1 %271, label %272, label %260

272:                                              ; preds = %267, %250
  %273 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %232, i64 0, i32 11, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp ne i32 %211, %274
  br label %276

276:                                              ; preds = %260, %231, %272
  %277 = phi i1 [ %275, %272 ], [ true, %231 ], [ true, %260 ]
  br i1 %237, label %278, label %281

278:                                              ; preds = %276
  %279 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %280 = load i8*, i8** %279, align 8
  tail call void @_ZdlPv(i8* %280) #20
  br label %281

281:                                              ; preds = %276, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #19
  br label %282

282:                                              ; preds = %6, %1, %281
  %283 = phi i1 [ %277, %281 ], [ false, %6 ], [ false, %1 ]
  ret i1 %283
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel23ExecuteAndRecordReplaceENS_8internal9MergeTypeENSt3__16vectorIN3gfx5RangeENS3_9allocatorIS6_EEEEmRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENS7_IDsEEEEm(%"class.views::TextfieldModel"*, i32, %"class.std::__1::vector"* nocapture readonly, i64, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #3 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::vector.113", align 8
  %12 = alloca %"class.std::__1::vector.120", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  store i32 %1, i32* %7, align 4
  store i64 %3, i64* %8, align 8
  store i64 %5, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #19
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.gfx::Range"*, %"class.gfx::Range"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %17, %19
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %10, align 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %23 = load %"class.gfx::Range"*, %"class.gfx::Range"** %22, align 8
  tail call fastcc void @"_ZNSt3__16__sortIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEvT0_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %23) #19
  %24 = bitcast %"class.std::__1::vector.113"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #19
  %25 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #19
  %28 = bitcast %"class.std::__1::vector.120"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #19
  %29 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #19
  %32 = load %"class.gfx::Range"*, %"class.gfx::Range"** %14, align 8
  %33 = load %"class.gfx::Range"*, %"class.gfx::Range"** %22, align 8
  %34 = icmp eq %"class.gfx::Range"* %32, %33
  br i1 %34, label %45, label %35

35:                                               ; preds = %6
  %36 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %37 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"** %26 to i64*
  %39 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %42 = bitcast i64** %30 to i64*
  %43 = bitcast %"class.std::__1::vector.120"* %12 to i64*
  %44 = bitcast i64** %31 to i64*
  br label %83

45:                                               ; preds = %156, %6
  %46 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %47 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %46, align 8
  %48 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %47, i64 0, i32 11, i32 0
  %49 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %47, i64 0, i32 11, i32 1
  %50 = call %"class.views::internal::ReplaceEdit"* @_ZNSt3__111make_uniqueIN5views8internal11ReplaceEditEJRNS2_9MergeTypeERNS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENSA_ISC_EEEERNS6_ImNSA_ImEEEERKN3gfx5RangeERKNS6_ISK_NSA_ISK_EEEERKbRmRKSC_ST_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %7, %"class.std::__1::vector.113"* nonnull dereferenceable(24) %11, %"class.std::__1::vector.120"* nonnull dereferenceable(24) %12, %"class.gfx::Range"* dereferenceable(8) %48, %"class.std::__1::vector"* dereferenceable(24) %49, i8* nonnull dereferenceable(1) %10, i64* nonnull dereferenceable(8) %8, %"class.std::__1::basic_string"* dereferenceable(24) %4, i64* nonnull dereferenceable(8) %9)
  %51 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %50, i64 0, i32 0
  call void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* %51, %"class.views::TextfieldModel"* %0)
  call void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"* %0, %"class.views::internal::Edit"* %51)
  %52 = load i64*, i64** %29, align 8
  %53 = icmp eq i64* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %45
  %55 = ptrtoint i64* %52 to i64
  %56 = bitcast i64** %30 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast i64* %52 to i8*
  call void @_ZdlPv(i8* %57) #20
  br label %58

58:                                               ; preds = %45, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #19
  %59 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %60 = icmp eq %"class.std::__1::basic_string"* %59, null
  br i1 %60, label %82, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %64 = icmp eq %"class.std::__1::basic_string"* %63, %59
  br i1 %64, label %80, label %65

65:                                               ; preds = %61, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %59
  br i1 %76, label %77, label %65

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.113"* %11 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %61
  %81 = phi i8* [ %79, %77 ], [ %62, %61 ]
  store %"class.std::__1::basic_string"* %59, %"class.std::__1::basic_string"** %26, align 8
  call void @_ZdlPv(i8* %81) #20
  br label %82

82:                                               ; preds = %58, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #19
  ret void

83:                                               ; preds = %35, %156
  %84 = phi %"class.gfx::Range"* [ %32, %35 ], [ %157, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #19
  %85 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %37, align 8, !noalias !13
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %13, %"class.gfx::RenderText"* %85, %"class.gfx::Range"* dereferenceable(8) %84) #19
  %86 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %88 = icmp ult %"class.std::__1::basic_string"* %86, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %83
  %90 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %36, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #19
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 1
  %92 = ptrtoint %"class.std::__1::basic_string"* %91 to i64
  store i64 %92, i64* %38, align 8
  br label %98

93:                                               ; preds = %83
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.113"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #19
  %94 = load i8, i8* %40, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %93
  %97 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %97) #20
  br label %98

98:                                               ; preds = %89, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #19
  %99 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %84, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %84, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp ult i32 %100, %102
  %104 = select i1 %103, i32 %100, i32 %102
  %105 = zext i32 %104 to i64
  %106 = load i64*, i64** %30, align 8
  %107 = load i64*, i64** %31, align 8
  %108 = icmp ult i64* %106, %107
  %109 = ptrtoint i64* %107 to i64
  br i1 %108, label %110, label %113

110:                                              ; preds = %98
  store i64 %105, i64* %106, align 8
  %111 = getelementptr inbounds i64, i64* %106, i64 1
  %112 = ptrtoint i64* %111 to i64
  store i64 %112, i64* %42, align 8
  br label %156

113:                                              ; preds = %98
  %114 = ptrtoint i64* %106 to i64
  %115 = load i64, i64* %43, align 8
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 3
  %118 = add nsw i64 %117, 1
  %119 = icmp ugt i64 %118, 2305843009213693951
  br i1 %119, label %120, label %122

120:                                              ; preds = %113
  %121 = bitcast %"class.std::__1::vector.120"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %121) #18
  unreachable

122:                                              ; preds = %113
  %123 = sub i64 %109, %115
  %124 = ashr exact i64 %123, 3
  %125 = icmp ult i64 %124, 1152921504606846975
  br i1 %125, label %126, label %134

126:                                              ; preds = %122
  %127 = ashr exact i64 %123, 2
  %128 = icmp ult i64 %127, %118
  %129 = select i1 %128, i64 %118, i64 %127
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %139, label %131

131:                                              ; preds = %126
  %132 = icmp ugt i64 %129, 2305843009213693951
  br i1 %132, label %133, label %134

133:                                              ; preds = %131
  call void @abort() #18
  unreachable

134:                                              ; preds = %131, %122
  %135 = phi i64 [ %129, %131 ], [ 2305843009213693951, %122 ]
  %136 = shl i64 %135, 3
  %137 = call i8* @_Znwm(i64 %136) #20
  %138 = bitcast i8* %137 to i64*
  br label %139

139:                                              ; preds = %134, %126
  %140 = phi i64 [ %135, %134 ], [ 0, %126 ]
  %141 = phi i8* [ %137, %134 ], [ null, %126 ]
  %142 = phi i64* [ %138, %134 ], [ null, %126 ]
  %143 = getelementptr inbounds i64, i64* %142, i64 %117
  %144 = getelementptr inbounds i64, i64* %142, i64 %140
  %145 = ptrtoint i64* %144 to i64
  store i64 %105, i64* %143, align 8
  %146 = getelementptr inbounds i64, i64* %143, i64 1
  %147 = ptrtoint i64* %146 to i64
  %148 = ptrtoint i64* %142 to i64
  %149 = icmp sgt i64 %116, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %139
  %151 = inttoptr i64 %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %151, i64 %116, i1 false) #19
  br label %152

152:                                              ; preds = %150, %139
  store i64 %148, i64* %43, align 8
  store i64 %147, i64* %42, align 8
  store i64 %145, i64* %44, align 8
  %153 = icmp eq i64 %115, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %115 to i8*
  call void @_ZdlPv(i8* %155) #20
  br label %156

156:                                              ; preds = %110, %152, %154
  %157 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %84, i64 1
  %158 = icmp eq %"class.gfx::Range"* %157, %33
  br i1 %158, label %45, label %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel14ClearSelectionEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %10, align 8
  tail call void @_ZN3gfx10RenderText14ClearSelectionEv(%"class.gfx::RenderText"* %11) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel6AppendERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.views::TextfieldModel"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %12, i64 0, i32 11, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = tail call i32 @_ZN3gfx10RenderText30GetVisualDirectionOfLogicalEndEv(%"class.gfx::RenderText"* %12) #19
  %17 = load i32, i32* %3, align 4
  %18 = load i32, i32* %5, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %10
  %21 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0) #19
  br label %22

22:                                               ; preds = %10, %20
  %23 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  tail call void @_ZN3gfx10RenderText10MoveCursorENS_9BreakTypeENS_21VisualCursorDirectionENS_17SelectionBehaviorE(%"class.gfx::RenderText"* %23, i32 2, i32 %16, i32 3) #19
  tail call void @_ZN5views14TextfieldModel18InsertTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false) #19
  %24 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  tail call void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"* %24, i64 %15) #19
  %25 = load i32, i32* %3, align 4
  %26 = load i32, i32* %5, align 4
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0) #19
  br label %30

30:                                               ; preds = %22, %28
  %31 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  tail call void @_ZN3gfx10RenderText14ClearSelectionEv(%"class.gfx::RenderText"* %31) #19
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5views14TextfieldModel17GetCursorPositionEv(%"class.views::TextfieldModel"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %3, i64 0, i32 11, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel10MoveCursorEN3gfx9BreakTypeENS1_21VisualCursorDirectionENS1_17SelectionBehaviorE(%"class.views::TextfieldModel"*, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %12

12:                                               ; preds = %4, %10
  %13 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  tail call void @_ZN3gfx10RenderText10MoveCursorENS_9BreakTypeENS_21VisualCursorDirectionENS_17SelectionBehaviorE(%"class.gfx::RenderText"* %14, i32 %1, i32 %2, i32 %3) #19
  ret void
}

declare i32 @_ZN3gfx10RenderText30GetVisualDirectionOfLogicalEndEv(%"class.gfx::RenderText"*) local_unnamed_addr #4

declare void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel6DeleteEb(%"class.views::TextfieldModel"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Range"*
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %131

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #19
  %21 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %4, %"class.gfx::RenderText"* %21) #19
  %22 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  %23 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  %24 = icmp eq %"class.gfx::Range"* %22, %23
  br i1 %24, label %35, label %27

25:                                               ; preds = %27
  %26 = icmp eq %"class.gfx::Range"* %34, %23
  br i1 %26, label %35, label %27

27:                                               ; preds = %16, %25
  %28 = phi %"class.gfx::Range"* [ %34, %25 ], [ %22, %16 ]
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 1
  br i1 %33, label %25, label %35

35:                                               ; preds = %27, %25, %16
  %36 = phi i1 [ false, %16 ], [ true, %27 ], [ false, %25 ]
  %37 = icmp eq %"class.gfx::Range"* %22, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = ptrtoint %"class.gfx::Range"* %22 to i64
  %40 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"class.gfx::Range"* %22 to i8*
  call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #19
  br i1 %36, label %43, label %76

43:                                               ; preds = %42
  br i1 %1, label %44, label %64

44:                                               ; preds = %43
  %45 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #19
  %46 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8, !noalias !16
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %46, i64 0, i32 11, i32 0
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.gfx::RenderText"* %46, %"class.gfx::Range"* dereferenceable(8) %47) #19
  %48 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to i8*) acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54, !prof !19

50:                                               ; preds = %44
  %51 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #19
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  br label %54

54:                                               ; preds = %44, %50, %53
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #19
  %56 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #20
  br label %63

63:                                               ; preds = %54, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #19
  br label %64

64:                                               ; preds = %63, %43
  %65 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65)
  %66 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %3, %"class.gfx::RenderText"* %66) #19
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %3, i1 zeroext false) #19
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %68 = load %"class.gfx::Range"*, %"class.gfx::Range"** %67, align 8
  %69 = icmp eq %"class.gfx::Range"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = ptrtoint %"class.gfx::Range"* %68 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %73 = bitcast %"class.gfx::Range"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = bitcast %"class.gfx::Range"* %68 to i8*
  call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65)
  br label %131

76:                                               ; preds = %42
  %77 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  %78 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %77, i64 0, i32 11, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %77, i64 0, i32 3
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %77, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  br label %91

89:                                               ; preds = %76
  %90 = zext i8 %84 to i64
  br label %91

91:                                               ; preds = %86, %89
  %92 = phi i64 [ %88, %86 ], [ %90, %89 ]
  %93 = icmp ugt i64 %92, %80
  br i1 %93, label %94, label %131

94:                                               ; preds = %91
  %95 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %77, i64 %80, i32 1) #19
  %96 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #19
  %97 = bitcast i64* %6 to i32*
  %98 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %7, i64 0, i32 1
  %99 = trunc i64 %95 to i32
  store i32 %79, i32* %97, align 8
  store i32 %99, i32* %98, align 4
  br i1 %1, label %100, label %119

100:                                              ; preds = %94
  %101 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #19
  %102 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8, !noalias !20
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.gfx::RenderText"* %102, %"class.gfx::Range"* nonnull dereferenceable(8) %7) #19
  %103 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to i8*) acquire, align 8
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %109, !prof !19

105:                                              ; preds = %100
  %106 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #19
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  br label %109

109:                                              ; preds = %100, %105, %108
  %110 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #19
  %111 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %111, i64 0, i32 1, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #20
  br label %118

118:                                              ; preds = %109, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #19
  br label %119

119:                                              ; preds = %118, %94
  %120 = load i64, i64* %6, align 8
  %121 = call i8* @_Znwm(i64 8) #20
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %123 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %121, i8** %123, align 8
  %124 = getelementptr inbounds i8, i8* %121, i64 8
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"class.gfx::Range"** %125 to i8**
  store i8* %124, i8** %126, align 8
  %127 = bitcast %"class.gfx::Range"** %122 to i64*
  %128 = bitcast i8* %121 to i64*
  store i64 %120, i64* %128, align 4
  %129 = ptrtoint i8* %124 to i64
  store i64 %129, i64* %127, align 8
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %9, i1 zeroext true)
  %130 = ptrtoint i8* %121 to i64
  store i64 %130, i64* %127, align 8
  call void @_ZdlPv(i8* nonnull %121) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #19
  br label %131

131:                                              ; preds = %119, %91, %75, %15
  %132 = phi i1 [ true, %15 ], [ true, %75 ], [ true, %119 ], [ false, %91 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %4 = bitcast %"class.gfx::Range"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  store i64 -1, i64* %4, align 8
  %9 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %9, align 8
  tail call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %10, %"class.gfx::Range"* dereferenceable(8) %3) #19
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %9, align 8
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %15, i64 0, i32 3
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %22, i64 24, i1 false) #19
  br label %196

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %31 = trunc i64 %27 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1
  br label %49

34:                                               ; preds = %23
  %35 = icmp ugt i64 %27, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #18
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #18
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #20
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  store i64 %48, i64* %13, align 8
  store i64 %27, i64* %12, align 8
  br label %49

49:                                               ; preds = %43, %29
  %50 = phi i16* [ %30, %29 ], [ %46, %43 ]
  %51 = add nuw nsw i64 %27, 1
  %52 = add i64 %27, 1
  %53 = icmp ult i64 %52, 16
  br i1 %53, label %143, label %54

54:                                               ; preds = %49
  %55 = add i64 %27, 1
  %56 = getelementptr i16, i16* %50, i64 %55
  %57 = getelementptr i16, i16* %25, i64 %55
  %58 = icmp ult i16* %50, %57
  %59 = icmp ult i16* %25, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %54
  %62 = and i64 %52, -16
  %63 = sub i64 %51, %62
  %64 = getelementptr i16, i16* %25, i64 %62
  %65 = getelementptr i16, i16* %50, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = getelementptr i16, i16* %50, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !23
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !23
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !26, !noalias !23
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !26, !noalias !23
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %25, i64 %86
  %88 = getelementptr i16, i16* %50, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !23
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !23
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !26, !noalias !23
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !26, !noalias !23
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %25, i64 %97
  %99 = getelementptr i16, i16* %50, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !23
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !23
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !26, !noalias !23
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !26, !noalias !23
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %25, i64 %108
  %110 = getelementptr i16, i16* %50, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !23
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !23
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !26, !noalias !23
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !26, !noalias !23
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !28

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %25, i64 %126
  %129 = getelementptr i16, i16* %50, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !23
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !23
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !26, !noalias !23
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !26, !noalias !23
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !29

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %52, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %54, %49
  %144 = phi i64 [ %51, %54 ], [ %51, %49 ], [ %63, %141 ]
  %145 = phi i16* [ %25, %54 ], [ %25, %49 ], [ %64, %141 ]
  %146 = phi i16* [ %50, %54 ], [ %50, %49 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !30

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !31

196:                                              ; preds = %161, %166, %141, %21
  %197 = and i64 %5, 4294967295
  %198 = icmp ugt i32 %6, %8
  %199 = select i1 %198, i64 %5, i64 %7
  %200 = icmp ult i32 %6, %8
  %201 = select i1 %200, i64 %5, i64 %7
  %202 = sub i64 %199, %201
  %203 = and i64 %202, 4294967295
  %204 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE5eraseEmm(%"class.std::__1::basic_string"* nonnull %2, i64 %197, i64 %203)
  %205 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %9, align 8
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %205, %"class.std::__1::basic_string"* dereferenceable(24) %204) #19
  %206 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 1
  %207 = load %"class.views::TextfieldModel::Delegate"*, %"class.views::TextfieldModel::Delegate"** %206, align 8
  %208 = icmp eq %"class.views::TextfieldModel::Delegate"* %207, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %196
  %210 = bitcast %"class.views::TextfieldModel::Delegate"* %207 to void (%"class.views::TextfieldModel::Delegate"*)***
  %211 = load void (%"class.views::TextfieldModel::Delegate"*)**, void (%"class.views::TextfieldModel::Delegate"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %211, i64 1
  %213 = load void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %212, align 8
  call void %213(%"class.views::TextfieldModel::Delegate"* nonnull %207) #19
  br label %214

214:                                              ; preds = %196, %209
  %215 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %9, align 8
  call void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"* %215, i64 %197) #19
  %216 = load %"class.views::TextfieldModel::Delegate"*, %"class.views::TextfieldModel::Delegate"** %206, align 8
  %217 = icmp eq %"class.views::TextfieldModel::Delegate"* %216, null
  br i1 %217, label %222, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.views::TextfieldModel::Delegate"* %216 to void (%"class.views::TextfieldModel::Delegate"*)***
  %220 = load void (%"class.views::TextfieldModel::Delegate"*)**, void (%"class.views::TextfieldModel::Delegate"*)*** %219, align 8
  %221 = load void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %220, align 8
  call void %221(%"class.views::TextfieldModel::Delegate"* nonnull %216) #19
  br label %222

222:                                              ; preds = %214, %218
  %223 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %222
  %228 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #20
  br label %230

230:                                              ; preds = %222, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views14TextfieldModel12HasSelectionEb(%"class.views::TextfieldModel"* nocapture readonly, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  br i1 %1, label %4, label %12

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %5, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %6, i64 0, i32 11, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %6, i64 0, i32 11, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %8, %10
  br label %40

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %16, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %3, %"class.gfx::RenderText"* %18) #19
  %19 = load %"class.gfx::Range"*, %"class.gfx::Range"** %14, align 8
  %20 = load %"class.gfx::Range"*, %"class.gfx::Range"** %15, align 8
  %21 = icmp eq %"class.gfx::Range"* %19, %20
  br i1 %21, label %32, label %24

22:                                               ; preds = %24
  %23 = icmp eq %"class.gfx::Range"* %31, %20
  br i1 %23, label %32, label %24

24:                                               ; preds = %12, %22
  %25 = phi %"class.gfx::Range"* [ %31, %22 ], [ %19, %12 ]
  %26 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  %31 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %25, i64 1
  br i1 %30, label %22, label %32

32:                                               ; preds = %22, %24, %12
  %33 = phi i1 [ false, %12 ], [ false, %22 ], [ true, %24 ]
  %34 = icmp eq %"class.gfx::Range"* %19, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = ptrtoint %"class.gfx::Range"* %19 to i64
  %37 = bitcast %"class.gfx::Range"** %15 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.gfx::Range"* %19 to i8*
  call void @_ZdlPv(i8* %38) #20
  br label %39

39:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #19
  br label %40

40:                                               ; preds = %39, %4
  %41 = phi i1 [ %11, %4 ], [ %33, %39 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views14TextfieldModel15GetSelectedTextEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::TextfieldModel"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %4, i64 0, i32 11, i32 0
  tail call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %4, %"class.gfx::Range"* dereferenceable(8) %5) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel15DeleteSelectionEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %3, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %2, %"class.gfx::RenderText"* %4) #19
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %2, i1 zeroext false)
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.gfx::Range"*, %"class.gfx::Range"** %5, align 8
  %7 = icmp eq %"class.gfx::Range"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.gfx::Range"* %6 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"class.gfx::Range"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.gfx::Range"* %6 to i8*
  call void @_ZdlPv(i8* %12) #20
  br label %13

13:                                               ; preds = %1, %8
  ret void
}

declare i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"*, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE(%"class.std::__1::basic_string"* noalias sret, %"class.views::TextfieldModel"* nocapture readonly, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %4, align 8
  tail call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* sret %0, %"class.gfx::RenderText"* %5, %"class.gfx::Range"* dereferenceable(8) %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"*, %"class.std::__1::vector"* nocapture readonly, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::vector.113", align 8
  %7 = alloca %"class.std::__1::vector.120", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = zext i1 %2 to i8
  store i8 %11, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #19
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.gfx::Range"*, %"class.gfx::Range"** %12, align 8
  %14 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %15, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %5, align 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %21 = load %"class.gfx::Range"*, %"class.gfx::Range"** %20, align 8
  tail call fastcc void @"_ZNSt3__16__sortIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEvT0_SC_T_"(%"class.gfx::Range"* %13, %"class.gfx::Range"* %21) #19
  %22 = bitcast %"class.std::__1::vector.113"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #19
  %23 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %6, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #19
  %26 = bitcast %"class.std::__1::vector.120"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #19
  %27 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #19
  %30 = load %"class.gfx::Range"*, %"class.gfx::Range"** %12, align 8
  %31 = load %"class.gfx::Range"*, %"class.gfx::Range"** %20, align 8
  %32 = icmp eq %"class.gfx::Range"* %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %3
  %34 = ptrtoint %"class.gfx::Range"* %30 to i64
  %35 = ptrtoint %"class.gfx::Range"* %31 to i64
  br label %52

36:                                               ; preds = %3
  %37 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %38 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %40 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %43 = bitcast i64** %28 to i64*
  %44 = bitcast %"class.std::__1::vector.120"* %7 to i64*
  %45 = bitcast i64** %29 to i64*
  br label %187

46:                                               ; preds = %260
  %47 = bitcast %"class.gfx::Range"** %20 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = inttoptr i64 %50 to %"class.gfx::Range"*
  br label %52

52:                                               ; preds = %33, %46
  %53 = phi %"class.gfx::Range"* [ %51, %46 ], [ %30, %33 ]
  %54 = phi i64 [ %50, %46 ], [ %34, %33 ]
  %55 = phi i64 [ %48, %46 ], [ %35, %33 ]
  %56 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #19
  store i64 -6148914691236517206, i64* %9, align 8
  %57 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %57, align 8
  %59 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %58, i64 0, i32 11, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #19
  %63 = sub i64 %55, %54
  %64 = ashr exact i64 %63, 3
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %148, label %66

66:                                               ; preds = %52
  %67 = icmp ugt i64 %64, 2305843009213693951
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %69) #18
  unreachable

70:                                               ; preds = %66
  %71 = call i8* @_Znwm(i64 %63) #20
  %72 = bitcast i8* %71 to %"class.gfx::Range"*
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %74 = bitcast %"class.gfx::Range"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %72, i64 %64
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %76, %"class.gfx::Range"** %77, align 8
  %78 = bitcast %"class.gfx::Range"** %73 to i64*
  %79 = ptrtoint i8* %71 to i64
  %80 = ptrtoint %"class.gfx::Range"* %53 to i64
  %81 = sub i64 %55, %80
  %82 = icmp sgt i64 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %70
  %84 = lshr exact i64 %81, 3
  %85 = bitcast %"class.gfx::Range"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %85, i64 %81, i1 false) #19
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %72, i64 %84
  %87 = ptrtoint %"class.gfx::Range"* %86 to i64
  br label %88

88:                                               ; preds = %70, %83
  %89 = phi i64 [ %87, %83 ], [ %79, %70 ]
  store i64 %89, i64* %78, align 8
  %90 = inttoptr i64 %89 to %"class.gfx::Range"*
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %92 = icmp eq %"class.gfx::Range"* %72, %90
  br i1 %92, label %143, label %93

93:                                               ; preds = %88
  %94 = icmp ne i32 %60, 0
  %95 = icmp eq i32 %60, 0
  br label %96

96:                                               ; preds = %131, %93
  %97 = phi i64 [ 0, %93 ], [ %140, %131 ]
  %98 = phi %"class.gfx::Range"* [ %72, %93 ], [ %141, %131 ]
  %99 = bitcast %"class.gfx::Range"* %98 to i64*
  %100 = load i64, i64* %99, align 4
  %101 = trunc i64 %100 to i32
  %102 = lshr i64 %100, 32
  %103 = trunc i64 %102 to i32
  %104 = icmp ult i32 %101, %103
  %105 = select i1 %104, i32 %101, i32 %103
  %106 = icmp ugt i32 %101, %103
  %107 = select i1 %106, i32 %101, i32 %103
  %108 = icmp ugt i32 %107, %60
  %109 = select i1 %108, i32 %60, i32 %107
  %110 = icmp ult i32 %105, %109
  br i1 %110, label %131, label %111

111:                                              ; preds = %96
  %112 = and i64 %102, %100
  %113 = icmp eq i64 %112, 4294967295
  %114 = icmp ne i32 %105, 0
  %115 = or i1 %113, %114
  %116 = icmp ult i32 %107, %60
  %117 = or i1 %116, %115
  br i1 %117, label %123, label %118

118:                                              ; preds = %111
  %119 = icmp ne i32 %107, %60
  %120 = icmp eq i32 %101, %103
  %121 = xor i1 %94, %120
  %122 = or i1 %121, %119
  br i1 %122, label %131, label %123

123:                                              ; preds = %118, %111
  %124 = or i1 %113, %108
  br i1 %124, label %130, label %125

125:                                              ; preds = %123
  %126 = icmp ne i32 %107, %60
  %127 = icmp ne i32 %101, %103
  %128 = xor i1 %95, %127
  %129 = or i1 %128, %126
  br i1 %129, label %131, label %130

130:                                              ; preds = %125, %123
  br label %131

131:                                              ; preds = %130, %125, %118, %96
  %132 = phi i32 [ -1, %130 ], [ %105, %96 ], [ 0, %118 ], [ %105, %125 ]
  %133 = phi i32 [ -1, %130 ], [ %109, %96 ], [ %109, %118 ], [ %107, %125 ]
  %134 = icmp ugt i32 %132, %133
  %135 = select i1 %134, i32 %132, i32 %133
  %136 = icmp ult i32 %132, %133
  %137 = select i1 %136, i32 %132, i32 %133
  %138 = sub i32 %135, %137
  %139 = zext i32 %138 to i64
  %140 = add i64 %97, %139
  %141 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %98, i64 1
  %142 = icmp eq %"class.gfx::Range"* %141, %90
  br i1 %142, label %143, label %96

143:                                              ; preds = %131, %88
  %144 = phi i64 [ 0, %88 ], [ %140, %131 ]
  %145 = ptrtoint i8* %71 to i64
  %146 = bitcast %"class.gfx::Range"** %91 to i64*
  store i64 %145, i64* %146, align 8
  call void @_ZdlPv(i8* nonnull %71) #20
  %147 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %57, align 8
  br label %148

148:                                              ; preds = %52, %143
  %149 = phi i64 [ %144, %143 ], [ 0, %52 ]
  %150 = phi %"class.gfx::RenderText"* [ %147, %143 ], [ %58, %52 ]
  %151 = sub i64 %61, %149
  store i64 %151, i64* %9, align 8
  %152 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %150, i64 0, i32 11, i32 0
  %153 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %150, i64 0, i32 11, i32 1
  %154 = call %"class.views::internal::DeleteEdit"* @_ZNSt3__111make_uniqueIN5views8internal10DeleteEditEJRbRNS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS9_ISB_EEEERNS5_ImNS9_ImEEEERKN3gfx5RangeERKNS5_ISJ_NS9_ISJ_EEEERKbRmEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i8* nonnull dereferenceable(1) %4, %"class.std::__1::vector.113"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.120"* nonnull dereferenceable(24) %7, %"class.gfx::Range"* dereferenceable(8) %152, %"class.std::__1::vector"* dereferenceable(24) %153, i8* nonnull dereferenceable(1) %5, i64* nonnull dereferenceable(8) %9)
  %155 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %154, i64 0, i32 0
  call void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* %155, %"class.views::TextfieldModel"* %0)
  call void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"* %0, %"class.views::internal::Edit"* %155)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #19
  %156 = load i64*, i64** %27, align 8
  %157 = icmp eq i64* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %148
  %159 = ptrtoint i64* %156 to i64
  %160 = bitcast i64** %28 to i64*
  store i64 %159, i64* %160, align 8
  %161 = bitcast i64* %156 to i8*
  call void @_ZdlPv(i8* %161) #20
  br label %162

162:                                              ; preds = %148, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #19
  %163 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %164 = icmp eq %"class.std::__1::basic_string"* %163, null
  br i1 %164, label %186, label %165

165:                                              ; preds = %162
  %166 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  %167 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %168 = icmp eq %"class.std::__1::basic_string"* %167, %163
  br i1 %168, label %184, label %169

169:                                              ; preds = %165, %179
  %170 = phi %"class.std::__1::basic_string"* [ %171, %179 ], [ %167, %165 ]
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 -1
  %172 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %172, i64 0, i32 1, i32 1
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %169
  %177 = bitcast %"class.std::__1::basic_string"* %171 to i8**
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #20
  br label %179

179:                                              ; preds = %176, %169
  %180 = icmp eq %"class.std::__1::basic_string"* %171, %163
  br i1 %180, label %181, label %169

181:                                              ; preds = %179
  %182 = bitcast %"class.std::__1::vector.113"* %6 to i8**
  %183 = load i8*, i8** %182, align 8
  br label %184

184:                                              ; preds = %181, %165
  %185 = phi i8* [ %183, %181 ], [ %166, %165 ]
  store %"class.std::__1::basic_string"* %163, %"class.std::__1::basic_string"** %24, align 8
  call void @_ZdlPv(i8* %185) #20
  br label %186

186:                                              ; preds = %162, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #19
  ret void

187:                                              ; preds = %36, %260
  %188 = phi %"class.gfx::Range"* [ %30, %36 ], [ %261, %260 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #19
  %189 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %38, align 8, !noalias !32
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.gfx::RenderText"* %189, %"class.gfx::Range"* dereferenceable(8) %188) #19
  %190 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %191 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %192 = icmp ult %"class.std::__1::basic_string"* %190, %191
  br i1 %192, label %193, label %197

193:                                              ; preds = %187
  %194 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* nonnull align 8 %37, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #19
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 1
  %196 = ptrtoint %"class.std::__1::basic_string"* %195 to i64
  store i64 %196, i64* %39, align 8
  br label %202

197:                                              ; preds = %187
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.113"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #19
  %198 = load i8, i8* %41, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %197
  %201 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %201) #20
  br label %202

202:                                              ; preds = %193, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #19
  %203 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %188, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %188, i64 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = icmp ult i32 %204, %206
  %208 = select i1 %207, i32 %204, i32 %206
  %209 = zext i32 %208 to i64
  %210 = load i64*, i64** %28, align 8
  %211 = load i64*, i64** %29, align 8
  %212 = icmp ult i64* %210, %211
  %213 = ptrtoint i64* %211 to i64
  br i1 %212, label %214, label %217

214:                                              ; preds = %202
  store i64 %209, i64* %210, align 8
  %215 = getelementptr inbounds i64, i64* %210, i64 1
  %216 = ptrtoint i64* %215 to i64
  store i64 %216, i64* %43, align 8
  br label %260

217:                                              ; preds = %202
  %218 = ptrtoint i64* %210 to i64
  %219 = load i64, i64* %44, align 8
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = add nsw i64 %221, 1
  %223 = icmp ugt i64 %222, 2305843009213693951
  br i1 %223, label %224, label %226

224:                                              ; preds = %217
  %225 = bitcast %"class.std::__1::vector.120"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %225) #18
  unreachable

226:                                              ; preds = %217
  %227 = sub i64 %213, %219
  %228 = ashr exact i64 %227, 3
  %229 = icmp ult i64 %228, 1152921504606846975
  br i1 %229, label %230, label %238

230:                                              ; preds = %226
  %231 = ashr exact i64 %227, 2
  %232 = icmp ult i64 %231, %222
  %233 = select i1 %232, i64 %222, i64 %231
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %230
  %236 = icmp ugt i64 %233, 2305843009213693951
  br i1 %236, label %237, label %238

237:                                              ; preds = %235
  call void @abort() #18
  unreachable

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %233, %235 ], [ 2305843009213693951, %226 ]
  %240 = shl i64 %239, 3
  %241 = call i8* @_Znwm(i64 %240) #20
  %242 = bitcast i8* %241 to i64*
  br label %243

243:                                              ; preds = %238, %230
  %244 = phi i64 [ %239, %238 ], [ 0, %230 ]
  %245 = phi i8* [ %241, %238 ], [ null, %230 ]
  %246 = phi i64* [ %242, %238 ], [ null, %230 ]
  %247 = getelementptr inbounds i64, i64* %246, i64 %221
  %248 = getelementptr inbounds i64, i64* %246, i64 %244
  %249 = ptrtoint i64* %248 to i64
  store i64 %209, i64* %247, align 8
  %250 = getelementptr inbounds i64, i64* %247, i64 1
  %251 = ptrtoint i64* %250 to i64
  %252 = ptrtoint i64* %246 to i64
  %253 = icmp sgt i64 %220, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %243
  %255 = inttoptr i64 %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %255, i64 %220, i1 false) #19
  br label %256

256:                                              ; preds = %254, %243
  store i64 %252, i64* %44, align 8
  store i64 %251, i64* %43, align 8
  store i64 %249, i64* %45, align 8
  %257 = icmp eq i64 %219, 0
  br i1 %257, label %260, label %258

258:                                              ; preds = %256
  %259 = inttoptr i64 %219 to i8*
  call void @_ZdlPv(i8* %259) #20
  br label %260

260:                                              ; preds = %214, %256, %258
  %261 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %188, i64 1
  %262 = icmp eq %"class.gfx::Range"* %261, %31
  br i1 %262, label %46, label %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel9BackspaceEb(%"class.views::TextfieldModel"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Range"*
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %118

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #19
  %21 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %4, %"class.gfx::RenderText"* %21) #19
  %22 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  %23 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  %24 = icmp eq %"class.gfx::Range"* %22, %23
  br i1 %24, label %35, label %27

25:                                               ; preds = %27
  %26 = icmp eq %"class.gfx::Range"* %34, %23
  br i1 %26, label %35, label %27

27:                                               ; preds = %16, %25
  %28 = phi %"class.gfx::Range"* [ %34, %25 ], [ %22, %16 ]
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 1
  br i1 %33, label %25, label %35

35:                                               ; preds = %27, %25, %16
  %36 = phi i1 [ false, %16 ], [ true, %27 ], [ false, %25 ]
  %37 = icmp eq %"class.gfx::Range"* %22, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = ptrtoint %"class.gfx::Range"* %22 to i64
  %40 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"class.gfx::Range"* %22 to i8*
  call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #19
  br i1 %36, label %43, label %76

43:                                               ; preds = %42
  br i1 %1, label %44, label %64

44:                                               ; preds = %43
  %45 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #19
  %46 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8, !noalias !35
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %46, i64 0, i32 11, i32 0
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.gfx::RenderText"* %46, %"class.gfx::Range"* dereferenceable(8) %47) #19
  %48 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to i8*) acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54, !prof !19

50:                                               ; preds = %44
  %51 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #19
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  br label %54

54:                                               ; preds = %44, %50, %53
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #19
  %56 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #20
  br label %63

63:                                               ; preds = %54, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #19
  br label %64

64:                                               ; preds = %63, %43
  %65 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65)
  %66 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %3, %"class.gfx::RenderText"* %66) #19
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %3, i1 zeroext false) #19
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %68 = load %"class.gfx::Range"*, %"class.gfx::Range"** %67, align 8
  %69 = icmp eq %"class.gfx::Range"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = ptrtoint %"class.gfx::Range"* %68 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %73 = bitcast %"class.gfx::Range"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = bitcast %"class.gfx::Range"* %68 to i8*
  call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65)
  br label %118

76:                                               ; preds = %42
  %77 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  %78 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %77, i64 0, i32 11, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %118, label %81

81:                                               ; preds = %76
  %82 = zext i32 %79 to i64
  %83 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #19
  %84 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %77, i64 0, i32 3
  %85 = call i64 @_ZN5views13PlatformStyle22RangeToDeleteBackwardsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24) %84, i64 %82) #19
  store i64 %85, i64* %6, align 8
  br i1 %1, label %86, label %106

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #19
  %88 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8, !noalias !38
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.gfx::RenderText"* %88, %"class.gfx::Range"* nonnull dereferenceable(8) %7) #19
  %89 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to i8*) acquire, align 8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %95, !prof !19

91:                                               ; preds = %86
  %92 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #19
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  br label %95

95:                                               ; preds = %86, %91, %94
  %96 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #19
  %97 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #20
  br label %104

104:                                              ; preds = %95, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #19
  %105 = load i64, i64* %6, align 8
  br label %106

106:                                              ; preds = %104, %81
  %107 = phi i64 [ %105, %104 ], [ %85, %81 ]
  %108 = call i8* @_Znwm(i64 8) #20
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %108, i8** %110, align 8
  %111 = getelementptr inbounds i8, i8* %108, i64 8
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast %"class.gfx::Range"** %112 to i8**
  store i8* %111, i8** %113, align 8
  %114 = bitcast %"class.gfx::Range"** %109 to i64*
  %115 = bitcast i8* %108 to i64*
  store i64 %107, i64* %115, align 4
  %116 = ptrtoint i8* %111 to i64
  store i64 %116, i64* %114, align 8
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %9, i1 zeroext true)
  %117 = ptrtoint i8* %108 to i64
  store i64 %117, i64* %114, align 8
  call void @_ZdlPv(i8* nonnull %108) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #19
  br label %118

118:                                              ; preds = %106, %76, %75, %15
  %119 = phi i1 [ true, %15 ], [ true, %75 ], [ true, %106 ], [ false, %76 ]
  ret i1 %119
}

declare i64 @_ZN5views13PlatformStyle22RangeToDeleteBackwardsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #4

declare void @_ZN3gfx10RenderText10MoveCursorENS_9BreakTypeENS_21VisualCursorDirectionENS_17SelectionBehaviorE(%"class.gfx::RenderText"*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel12MoveCursorToERKN3gfx14SelectionModelE(%"class.views::TextfieldModel"*, %"class.gfx::SelectionModel"* dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.gfx::Range", align 4
  %4 = alloca %"class.gfx::SelectionModel", align 8
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  %12 = bitcast %"class.gfx::Range"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #19
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %15, align 8
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %16, i64 0, i32 11, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %18, i32* %13, align 4
  store i32 %20, i32* %14, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %10
  %23 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %16, %"class.gfx::Range"* nonnull dereferenceable(8) %3, i1 zeroext true) #19
  br label %30

24:                                               ; preds = %10
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.gfx::SelectionModel"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #19
  %27 = getelementptr inbounds %"class.gfx::SelectionModel", %"class.gfx::SelectionModel"* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %4, i64 %25, i32 %28) #19
  %29 = call zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"* %16, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %4) #19
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #19
  br label %30

30:                                               ; preds = %24, %22
  %31 = phi i1 [ %29, %24 ], [ %23, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #19
  br label %36

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %33, align 8
  %35 = tail call zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"* %34, %"class.gfx::SelectionModel"* dereferenceable(40) %1) #19
  br label %36

36:                                               ; preds = %32, %30
  %37 = phi i1 [ %31, %30 ], [ %35, %32 ]
  ret i1 %37
}

declare zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"*, %"class.gfx::Range"* dereferenceable(8), i1 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"*, %"class.gfx::SelectionModel"* dereferenceable(40)) local_unnamed_addr #4

declare void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"*, i64, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel12MoveCursorToEm(%"class.views::TextfieldModel"*, i64) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.gfx::SelectionModel", align 8
  %4 = bitcast %"class.gfx::SelectionModel"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  call void @_ZN3gfx14SelectionModelC1EmNS_22LogicalCursorDirectionE(%"class.gfx::SelectionModel"* nonnull %3, i64 %1, i32 1) #19
  %5 = call zeroext i1 @_ZN5views14TextfieldModel12MoveCursorToERKN3gfx14SelectionModelE(%"class.views::TextfieldModel"* %0, %"class.gfx::SelectionModel"* nonnull dereferenceable(40) %3)
  call void @_ZN3gfx14SelectionModelD1Ev(%"class.gfx::SelectionModel"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel12MoveCursorToERKN3gfx5PointEb(%"class.views::TextfieldModel"*, %"class.gfx::Point"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.gfx::Point", align 4
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  %15 = bitcast %"class.gfx::Point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 0
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = call zeroext i1 @_ZN3gfx10RenderText17MoveCursorToPointERKNS_5PointEbS3_(%"class.gfx::RenderText"* %14, %"class.gfx::Point"* dereferenceable(8) %1, i1 zeroext %2, %"class.gfx::Point"* nonnull dereferenceable(8) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret i1 %18
}

declare zeroext i1 @_ZN3gfx10RenderText17MoveCursorToPointERKNS_5PointEbS3_(%"class.gfx::RenderText"*, %"class.gfx::Point"* dereferenceable(8), i1 zeroext, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel11SelectRangeERKN3gfx5RangeEb(%"class.views::TextfieldModel"*, %"class.gfx::Range"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %11

11:                                               ; preds = %3, %9
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %12, align 8
  %14 = tail call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %13, %"class.gfx::Range"* dereferenceable(8) %1, i1 zeroext %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel20SelectSelectionModelERKN3gfx14SelectionModelE(%"class.views::TextfieldModel"*, %"class.gfx::SelectionModel"* dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"* %12, %"class.gfx::SelectionModel"* dereferenceable(40) %1) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel9SelectAllEb(%"class.views::TextfieldModel"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  tail call void @_ZN3gfx10RenderText9SelectAllEb(%"class.gfx::RenderText"* %12, i1 zeroext %1) #19
  ret void
}

declare void @_ZN3gfx10RenderText9SelectAllEb(%"class.gfx::RenderText"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel10SelectWordEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %10, align 8
  tail call void @_ZN3gfx10RenderText10SelectWordEv(%"class.gfx::RenderText"* %11) #19
  ret void
}

declare void @_ZN3gfx10RenderText10SelectWordEv(%"class.gfx::RenderText"*) local_unnamed_addr #4

declare void @_ZN3gfx10RenderText14ClearSelectionEv(%"class.gfx::RenderText"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel7CanUndoEv(%"class.views::TextfieldModel"*) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = icmp ne %"struct.std::__1::__list_node_base"* %8, %6
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel7CanRedoEv(%"class.views::TextfieldModel"*) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 1
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = icmp ne %"struct.std::__1::__list_node_base"* %12, %8
  br label %14

14:                                               ; preds = %5, %10, %1
  %15 = phi i1 [ false, %1 ], [ true, %5 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal4Edit4UndoEPNS_14TextfieldModelE(%"class.views::internal::Edit"*, %"class.views::TextfieldModel"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.113", align 8
  %4 = alloca %"class.std::__1::vector.120", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.std::__1::vector.113"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector.113"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"* nonnull %3, %"class.std::__1::vector.113"* dereferenceable(24) %9)
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %11, %12
  br i1 %13, label %34, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %16 = icmp ugt %"class.std::__1::basic_string"* %15, %11
  br i1 %16, label %17, label %34

17:                                               ; preds = %14, %17
  %18 = phi %"class.std::__1::basic_string"* [ %32, %17 ], [ %15, %14 ]
  %19 = phi %"class.std::__1::basic_string"* [ %18, %17 ], [ %12, %14 ]
  %20 = phi %"class.std::__1::basic_string"* [ %31, %17 ], [ %11, %14 ]
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #19
  %28 = bitcast %"class.std::__1::basic_string"* %18 to i64*
  store i64 %22, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 -1
  %33 = icmp ult %"class.std::__1::basic_string"* %31, %32
  br i1 %33, label %17, label %34

34:                                               ; preds = %17, %2, %14
  %35 = bitcast %"class.std::__1::vector.120"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #19
  %36 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #19
  %40 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 1
  %41 = bitcast i64** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.120"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %81, label %48

48:                                               ; preds = %34
  %49 = icmp ugt i64 %46, 2305843009213693951
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.120"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %51) #18
  unreachable

52:                                               ; preds = %48
  %53 = call i8* @_Znwm(i64 %45) #20
  %54 = bitcast i8* %53 to i64*
  %55 = bitcast i64** %37 to i8**
  store i8* %53, i8** %55, align 8
  %56 = bitcast %"class.std::__1::vector.120"* %4 to i8**
  store i8* %53, i8** %56, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 %46
  store i64* %57, i64** %38, align 8
  %58 = bitcast i64** %37 to i64*
  %59 = ptrtoint i8* %53 to i64
  %60 = icmp sgt i64 %45, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %52
  %62 = lshr exact i64 %45, 3
  %63 = inttoptr i64 %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 %63, i64 %45, i1 false) #19
  %64 = getelementptr inbounds i64, i64* %54, i64 %62
  %65 = ptrtoint i64* %64 to i64
  br label %66

66:                                               ; preds = %52, %61
  %67 = phi i64 [ %65, %61 ], [ %59, %52 ]
  store i64 %67, i64* %58, align 8
  %68 = inttoptr i64 %67 to i64*
  %69 = icmp eq i64* %54, %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i64, i64* %68, i64 -1
  %72 = icmp ugt i64* %71, %54
  br i1 %72, label %73, label %81

73:                                               ; preds = %70, %73
  %74 = phi i64* [ %79, %73 ], [ %71, %70 ]
  %75 = phi i64* [ %78, %73 ], [ %54, %70 ]
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %74, align 8
  store i64 %77, i64* %75, align 8
  store i64 %76, i64* %74, align 8
  %78 = getelementptr inbounds i64, i64* %75, i64 1
  %79 = getelementptr inbounds i64, i64* %74, i64 -1
  %80 = icmp ult i64* %78, %79
  br i1 %80, label %73, label %81

81:                                               ; preds = %73, %34, %66, %70
  %82 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #19
  %83 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 10
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  br label %96

94:                                               ; preds = %81
  %95 = zext i8 %89 to i64
  br label %96

96:                                               ; preds = %91, %94
  %97 = phi i64 [ %93, %91 ], [ %95, %94 ]
  %98 = add i64 %97, %84
  %99 = trunc i64 %98 to i32
  %100 = call i8* @_Znwm(i64 8) #20
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %102 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %100, i8** %102, align 8
  %103 = getelementptr inbounds i8, i8* %100, i64 8
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"class.gfx::Range"** %104 to i8**
  store i8* %103, i8** %105, align 8
  %106 = bitcast %"class.gfx::Range"** %101 to i64*
  %107 = bitcast i8* %100 to i32*
  store i32 %85, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %100, i64 4
  %109 = bitcast i8* %108 to i32*
  store i32 %99, i32* %109, align 4
  %110 = ptrtoint i8* %103 to i64
  store i64 %110, i64* %106, align 8
  %111 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 5
  %112 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 6
  call void @_ZN5views14TextfieldModel10ModifyTextERKNSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEERKNS2_INS1_12basic_stringIDsNS1_11char_traitsIDsEENS5_IDsEEEENS5_ISE_EEEERKNS2_ImNS5_ImEEEERKS4_S9_(%"class.views::TextfieldModel"* %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.113"* nonnull dereferenceable(24) %3, %"class.std::__1::vector.120"* nonnull dereferenceable(24) %4, %"class.gfx::Range"* dereferenceable(8) %111, %"class.std::__1::vector"* dereferenceable(24) %112)
  call void @_ZdlPv(i8* nonnull %100) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #19
  %113 = load i64*, i64** %36, align 8
  %114 = icmp eq i64* %113, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %96
  %116 = ptrtoint i64* %113 to i64
  %117 = bitcast i64** %37 to i64*
  store i64 %116, i64* %117, align 8
  %118 = bitcast i64* %113 to i8*
  call void @_ZdlPv(i8* %118) #20
  br label %119

119:                                              ; preds = %96, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #19
  %120 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %121 = icmp eq %"class.std::__1::basic_string"* %120, null
  br i1 %121, label %143, label %122

122:                                              ; preds = %119
  %123 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %125 = icmp eq %"class.std::__1::basic_string"* %124, %120
  br i1 %125, label %141, label %126

126:                                              ; preds = %122, %136
  %127 = phi %"class.std::__1::basic_string"* [ %128, %136 ], [ %124, %122 ]
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 -1
  %129 = bitcast %"class.std::__1::basic_string"* %128 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %129, i64 0, i32 1, i32 1
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %126
  %134 = bitcast %"class.std::__1::basic_string"* %128 to i8**
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #20
  br label %136

136:                                              ; preds = %133, %126
  %137 = icmp eq %"class.std::__1::basic_string"* %128, %120
  br i1 %137, label %138, label %126

138:                                              ; preds = %136
  %139 = bitcast %"class.std::__1::vector.113"* %3 to i8**
  %140 = load i8*, i8** %139, align 8
  br label %141

141:                                              ; preds = %138, %122
  %142 = phi i8* [ %140, %138 ], [ %123, %122 ]
  store %"class.std::__1::basic_string"* %120, %"class.std::__1::basic_string"** %8, align 8
  call void @_ZdlPv(i8* %142) #20
  br label %143

143:                                              ; preds = %119, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel4RedoEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %289, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 1
  %13 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__list_node_base"* %13, %9
  br i1 %14, label %289, label %15

15:                                               ; preds = %11, %6
  %16 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  %22 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %23 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %15, %21
  %25 = phi %"struct.std::__1::__list_node_base"* [ %8, %15 ], [ %23, %21 ]
  %26 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5
  %27 = icmp eq %"struct.std::__1::__list_node_base"* %25, %9
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::__list_node_base"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.std::__1::__list_node_base"** %7 to i64*
  store i64 %31, i64* %32, align 8
  br label %38

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %35 = bitcast %"struct.std::__1::__list_node_base"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::__list_iterator"* %26 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %33, %28
  %39 = phi i64 [ %36, %33 ], [ %31, %28 ]
  %40 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #19
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false)
  %46 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %44, align 8
  %47 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %46, i64 0, i32 3
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %38
  %53 = inttoptr i64 %39 to %"struct.std::__1::__list_node"*
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %54, i64 24, i1 false) #19
  br label %232

55:                                               ; preds = %38
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %46, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, 11
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %63 = trunc i64 %59 to i8
  %64 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  store i8 %63, i8* %65, align 1
  br label %81

66:                                               ; preds = %55
  %67 = icmp ugt i64 %59, 9223372036854775791
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %69) #18
  unreachable

70:                                               ; preds = %66
  %71 = add nuw nsw i64 %59, 8
  %72 = and i64 %71, -8
  %73 = icmp slt i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @abort() #18
  unreachable

75:                                               ; preds = %70
  %76 = shl i64 %72, 1
  %77 = tail call i8* @_Znwm(i64 %76) #20
  %78 = bitcast i8* %77 to i16*
  %79 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  store i8* %77, i8** %79, align 8
  %80 = or i64 %72, -9223372036854775808
  store i64 %80, i64* %43, align 8
  store i64 %59, i64* %42, align 8
  br label %81

81:                                               ; preds = %75, %61
  %82 = phi i16* [ %62, %61 ], [ %78, %75 ]
  %83 = add nuw nsw i64 %59, 1
  %84 = add i64 %59, 1
  %85 = icmp ult i64 %84, 16
  br i1 %85, label %175, label %86

86:                                               ; preds = %81
  %87 = add i64 %59, 1
  %88 = getelementptr i16, i16* %82, i64 %87
  %89 = getelementptr i16, i16* %57, i64 %87
  %90 = icmp ult i16* %82, %89
  %91 = icmp ult i16* %57, %88
  %92 = and i1 %90, %91
  br i1 %92, label %175, label %93

93:                                               ; preds = %86
  %94 = and i64 %84, -16
  %95 = sub i64 %83, %94
  %96 = getelementptr i16, i16* %57, i64 %94
  %97 = getelementptr i16, i16* %82, i64 %94
  %98 = add i64 %94, -16
  %99 = lshr exact i64 %98, 4
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 3
  %102 = icmp ult i64 %98, 48
  br i1 %102, label %154, label %103

103:                                              ; preds = %93
  %104 = sub nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %151, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %152, %105 ]
  %108 = getelementptr i16, i16* %57, i64 %106
  %109 = getelementptr i16, i16* %82, i64 %106
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !41
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !41
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !44, !noalias !41
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !44, !noalias !41
  %118 = or i64 %106, 16
  %119 = getelementptr i16, i16* %57, i64 %118
  %120 = getelementptr i16, i16* %82, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !41
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !41
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !44, !noalias !41
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !44, !noalias !41
  %129 = or i64 %106, 32
  %130 = getelementptr i16, i16* %57, i64 %129
  %131 = getelementptr i16, i16* %82, i64 %129
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !41
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !41
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !44, !noalias !41
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !44, !noalias !41
  %140 = or i64 %106, 48
  %141 = getelementptr i16, i16* %57, i64 %140
  %142 = getelementptr i16, i16* %82, i64 %140
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !41
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !41
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !44, !noalias !41
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !44, !noalias !41
  %151 = add i64 %106, 64
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !46

154:                                              ; preds = %105, %93
  %155 = phi i64 [ 0, %93 ], [ %151, %105 ]
  %156 = icmp eq i64 %101, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %170, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %171, %157 ], [ %101, %154 ]
  %160 = getelementptr i16, i16* %57, i64 %158
  %161 = getelementptr i16, i16* %82, i64 %158
  %162 = bitcast i16* %160 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !41
  %164 = getelementptr i16, i16* %160, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !41
  %167 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %167, align 2, !alias.scope !44, !noalias !41
  %168 = getelementptr i16, i16* %161, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %169, align 2, !alias.scope !44, !noalias !41
  %170 = add i64 %158, 16
  %171 = add i64 %159, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %157, !llvm.loop !47

173:                                              ; preds = %157, %154
  %174 = icmp eq i64 %84, %94
  br i1 %174, label %228, label %175

175:                                              ; preds = %173, %86, %81
  %176 = phi i64 [ %83, %86 ], [ %83, %81 ], [ %95, %173 ]
  %177 = phi i16* [ %57, %86 ], [ %57, %81 ], [ %96, %173 ]
  %178 = phi i16* [ %82, %86 ], [ %82, %81 ], [ %97, %173 ]
  %179 = add i64 %176, -1
  %180 = and i64 %176, 7
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %193, label %182

182:                                              ; preds = %175, %182
  %183 = phi i64 [ %188, %182 ], [ %176, %175 ]
  %184 = phi i16* [ %190, %182 ], [ %177, %175 ]
  %185 = phi i16* [ %189, %182 ], [ %178, %175 ]
  %186 = phi i64 [ %191, %182 ], [ %180, %175 ]
  %187 = load i16, i16* %184, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %183, -1
  %189 = getelementptr inbounds i16, i16* %185, i64 1
  %190 = getelementptr inbounds i16, i16* %184, i64 1
  %191 = add i64 %186, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %182, !llvm.loop !48

193:                                              ; preds = %182, %175
  %194 = phi i64 [ %176, %175 ], [ %188, %182 ]
  %195 = phi i16* [ %177, %175 ], [ %190, %182 ]
  %196 = phi i16* [ %178, %175 ], [ %189, %182 ]
  %197 = icmp ult i64 %179, 7
  br i1 %197, label %228, label %198

198:                                              ; preds = %193, %198
  %199 = phi i64 [ %224, %198 ], [ %194, %193 ]
  %200 = phi i16* [ %226, %198 ], [ %195, %193 ]
  %201 = phi i16* [ %225, %198 ], [ %196, %193 ]
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = getelementptr inbounds i16, i16* %201, i64 1
  %204 = getelementptr inbounds i16, i16* %200, i64 1
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %201, i64 2
  %207 = getelementptr inbounds i16, i16* %200, i64 2
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %201, i64 3
  %210 = getelementptr inbounds i16, i16* %200, i64 3
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %201, i64 4
  %213 = getelementptr inbounds i16, i16* %200, i64 4
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %201, i64 5
  %216 = getelementptr inbounds i16, i16* %200, i64 5
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %201, i64 6
  %219 = getelementptr inbounds i16, i16* %200, i64 6
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = getelementptr inbounds i16, i16* %201, i64 7
  %222 = getelementptr inbounds i16, i16* %200, i64 7
  %223 = load i16, i16* %222, align 2
  store i16 %223, i16* %221, align 2
  %224 = add i64 %199, -8
  %225 = getelementptr inbounds i16, i16* %201, i64 8
  %226 = getelementptr inbounds i16, i16* %200, i64 8
  %227 = icmp eq i64 %224, 0
  br i1 %227, label %228, label %198, !llvm.loop !49

228:                                              ; preds = %193, %198, %173
  %229 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %44, align 8
  %230 = bitcast %"class.std::__1::__list_iterator"* %26 to %"struct.std::__1::__list_node"**
  %231 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %230, align 8
  br label %232

232:                                              ; preds = %228, %52
  %233 = phi %"struct.std::__1::__list_node"* [ %231, %228 ], [ %53, %52 ]
  %234 = phi %"class.gfx::RenderText"* [ %229, %228 ], [ %46, %52 ]
  %235 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %234, i64 0, i32 11, i32 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %233, i64 0, i32 1, i32 0, i32 0, i32 0
  %238 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %237, align 8
  tail call void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* %238, %"class.views::TextfieldModel"* %0)
  %239 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %44, align 8
  %240 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %239, i64 0, i32 3
  %241 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  %245 = load i64, i64* %42, align 8
  %246 = zext i8 %243 to i64
  %247 = select i1 %244, i64 %245, i64 %246
  %248 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %248, i64 0, i32 1, i32 1
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  %252 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %239, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = zext i8 %250 to i64
  %255 = select i1 %251, i64 %253, i64 %254
  %256 = icmp eq i64 %247, %255
  br i1 %256, label %257, label %283

257:                                              ; preds = %232
  %258 = icmp eq i64 %247, 0
  br i1 %258, label %279, label %259

259:                                              ; preds = %257
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load i16*, i16** %260, align 8
  %262 = bitcast %"class.std::__1::basic_string"* %240 to i16*
  %263 = select i1 %251, i16* %261, i16* %262
  %264 = load i16*, i16** %41, align 8
  %265 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %266 = select i1 %244, i16* %264, i16* %265
  br label %267

267:                                              ; preds = %274, %259
  %268 = phi i64 [ %275, %274 ], [ %247, %259 ]
  %269 = phi i16* [ %277, %274 ], [ %263, %259 ]
  %270 = phi i16* [ %276, %274 ], [ %266, %259 ]
  %271 = load i16, i16* %270, align 2
  %272 = load i16, i16* %269, align 2
  %273 = icmp eq i16 %272, %271
  br i1 %273, label %274, label %283

274:                                              ; preds = %267
  %275 = add i64 %268, -1
  %276 = getelementptr inbounds i16, i16* %270, i64 1
  %277 = getelementptr inbounds i16, i16* %269, i64 1
  %278 = icmp eq i64 %275, 0
  br i1 %278, label %279, label %267

279:                                              ; preds = %274, %257
  %280 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %239, i64 0, i32 11, i32 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = icmp ne i32 %236, %281
  br label %283

283:                                              ; preds = %267, %232, %279
  %284 = phi i1 [ %282, %279 ], [ true, %232 ], [ true, %267 ]
  br i1 %244, label %285, label %288

285:                                              ; preds = %283
  %286 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %287 = load i8*, i8** %286, align 8
  tail call void @_ZdlPv(i8* %287) #20
  br label %288

288:                                              ; preds = %283, %285
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #19
  br label %289

289:                                              ; preds = %11, %1, %288
  %290 = phi i1 [ %284, %288 ], [ false, %11 ], [ false, %1 ]
  ret i1 %290
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"*, %"class.views::TextfieldModel"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector.113", align 8
  %5 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %6 = alloca %"class.std::__1::vector.120", align 8
  %7 = alloca %"class.gfx::Range", align 4
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #19
  %13 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.113"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = bitcast %"class.gfx::Range"** %11 to i64*
  %23 = bitcast %"class.std::__1::vector"* %3 to i64*
  %24 = bitcast %"class.gfx::Range"** %12 to i64*
  br label %451

25:                                               ; preds = %531, %2
  %26 = bitcast %"class.std::__1::vector.113"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #19
  %27 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #19
  %28 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %34, i64 24, i1 false) #19
  br label %210

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %39, 11
  br i1 %40, label %41, label %46

41:                                               ; preds = %35
  %42 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to i16*
  %43 = trunc i64 %39 to i8
  %44 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  store i8 %43, i8* %45, align 1
  br label %63

46:                                               ; preds = %35
  %47 = icmp ugt i64 %39, 9223372036854775791
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #18
  unreachable

50:                                               ; preds = %46
  %51 = add nuw nsw i64 %39, 8
  %52 = and i64 %51, -8
  %53 = icmp slt i64 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  tail call void @abort() #18
  unreachable

55:                                               ; preds = %50
  %56 = shl i64 %52, 1
  %57 = tail call i8* @_Znwm(i64 %56) #20
  %58 = bitcast i8* %57 to i16*
  %59 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to i8**
  store i8* %57, i8** %59, align 8
  %60 = or i64 %52, -9223372036854775808
  %61 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %62, align 8
  br label %63

63:                                               ; preds = %55, %41
  %64 = phi i16* [ %42, %41 ], [ %58, %55 ]
  %65 = add nuw nsw i64 %39, 1
  %66 = add i64 %39, 1
  %67 = icmp ult i64 %66, 16
  br i1 %67, label %157, label %68

68:                                               ; preds = %63
  %69 = add i64 %39, 1
  %70 = getelementptr i16, i16* %64, i64 %69
  %71 = getelementptr i16, i16* %37, i64 %69
  %72 = icmp ult i16* %64, %71
  %73 = icmp ult i16* %37, %70
  %74 = and i1 %72, %73
  br i1 %74, label %157, label %75

75:                                               ; preds = %68
  %76 = and i64 %66, -16
  %77 = sub i64 %65, %76
  %78 = getelementptr i16, i16* %37, i64 %76
  %79 = getelementptr i16, i16* %64, i64 %76
  %80 = add i64 %76, -16
  %81 = lshr exact i64 %80, 4
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 3
  %84 = icmp ult i64 %80, 48
  br i1 %84, label %136, label %85

85:                                               ; preds = %75
  %86 = sub nsw i64 %82, %83
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ 0, %85 ], [ %133, %87 ]
  %89 = phi i64 [ %86, %85 ], [ %134, %87 ]
  %90 = getelementptr i16, i16* %37, i64 %88
  %91 = getelementptr i16, i16* %64, i64 %88
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !50
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !50
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !53, !noalias !50
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !53, !noalias !50
  %100 = or i64 %88, 16
  %101 = getelementptr i16, i16* %37, i64 %100
  %102 = getelementptr i16, i16* %64, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !50
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !50
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !53, !noalias !50
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !53, !noalias !50
  %111 = or i64 %88, 32
  %112 = getelementptr i16, i16* %37, i64 %111
  %113 = getelementptr i16, i16* %64, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !50
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !50
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !53, !noalias !50
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !53, !noalias !50
  %122 = or i64 %88, 48
  %123 = getelementptr i16, i16* %37, i64 %122
  %124 = getelementptr i16, i16* %64, i64 %122
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !50
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !50
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !53, !noalias !50
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !53, !noalias !50
  %133 = add i64 %88, 64
  %134 = add i64 %89, -4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %87, !llvm.loop !55

136:                                              ; preds = %87, %75
  %137 = phi i64 [ 0, %75 ], [ %133, %87 ]
  %138 = icmp eq i64 %83, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %152, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %153, %139 ], [ %83, %136 ]
  %142 = getelementptr i16, i16* %37, i64 %140
  %143 = getelementptr i16, i16* %64, i64 %140
  %144 = bitcast i16* %142 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !50
  %146 = getelementptr i16, i16* %142, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !50
  %149 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %149, align 2, !alias.scope !53, !noalias !50
  %150 = getelementptr i16, i16* %143, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %151, align 2, !alias.scope !53, !noalias !50
  %152 = add i64 %140, 16
  %153 = add i64 %141, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %139, !llvm.loop !56

155:                                              ; preds = %139, %136
  %156 = icmp eq i64 %66, %76
  br i1 %156, label %210, label %157

157:                                              ; preds = %155, %68, %63
  %158 = phi i64 [ %65, %68 ], [ %65, %63 ], [ %77, %155 ]
  %159 = phi i16* [ %37, %68 ], [ %37, %63 ], [ %78, %155 ]
  %160 = phi i16* [ %64, %68 ], [ %64, %63 ], [ %79, %155 ]
  %161 = add i64 %158, -1
  %162 = and i64 %158, 7
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %175, label %164

164:                                              ; preds = %157, %164
  %165 = phi i64 [ %170, %164 ], [ %158, %157 ]
  %166 = phi i16* [ %172, %164 ], [ %159, %157 ]
  %167 = phi i16* [ %171, %164 ], [ %160, %157 ]
  %168 = phi i64 [ %173, %164 ], [ %162, %157 ]
  %169 = load i16, i16* %166, align 2
  store i16 %169, i16* %167, align 2
  %170 = add i64 %165, -1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = getelementptr inbounds i16, i16* %166, i64 1
  %173 = add i64 %168, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %164, !llvm.loop !57

175:                                              ; preds = %164, %157
  %176 = phi i64 [ %158, %157 ], [ %170, %164 ]
  %177 = phi i16* [ %159, %157 ], [ %172, %164 ]
  %178 = phi i16* [ %160, %157 ], [ %171, %164 ]
  %179 = icmp ult i64 %161, 7
  br i1 %179, label %210, label %180

180:                                              ; preds = %175, %180
  %181 = phi i64 [ %206, %180 ], [ %176, %175 ]
  %182 = phi i16* [ %208, %180 ], [ %177, %175 ]
  %183 = phi i16* [ %207, %180 ], [ %178, %175 ]
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %183, align 2
  %185 = getelementptr inbounds i16, i16* %183, i64 1
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %183, i64 2
  %189 = getelementptr inbounds i16, i16* %182, i64 2
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %183, i64 3
  %192 = getelementptr inbounds i16, i16* %182, i64 3
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %183, i64 4
  %195 = getelementptr inbounds i16, i16* %182, i64 4
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %183, i64 5
  %198 = getelementptr inbounds i16, i16* %182, i64 5
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %183, i64 6
  %201 = getelementptr inbounds i16, i16* %182, i64 6
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %183, i64 7
  %204 = getelementptr inbounds i16, i16* %182, i64 7
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = add i64 %181, -8
  %207 = getelementptr inbounds i16, i16* %183, i64 8
  %208 = getelementptr inbounds i16, i16* %182, i64 8
  %209 = icmp eq i64 %206, 0
  br i1 %209, label %210, label %180, !llvm.loop !58

210:                                              ; preds = %175, %180, %155, %33
  %211 = tail call i8* @_Znwm(i64 24) #20
  %212 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %4, i64 0, i32 0, i32 1
  %213 = bitcast %"class.std::__1::basic_string"** %212 to i8**
  store i8* %211, i8** %213, align 8
  %214 = bitcast %"class.std::__1::vector.113"* %4 to i8**
  store i8* %211, i8** %214, align 8
  %215 = getelementptr inbounds i8, i8* %211, i64 24
  %216 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %217 = bitcast %"class.std::__1::basic_string"** %216 to i8**
  store i8* %215, i8** %217, align 8
  %218 = bitcast %"class.std::__1::basic_string"** %212 to i64*
  %219 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %219, i64 0, i32 1, i32 1
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %210
  %224 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %211, i8* nonnull align 8 %224, i64 24, i1 false) #19
  br label %404

225:                                              ; preds = %210
  %226 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i16*, i16** %226, align 8
  %228 = bitcast i16* %227 to i8*
  %229 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp ult i64 %230, 11
  br i1 %231, label %232, label %235

232:                                              ; preds = %225
  %233 = trunc i64 %230 to i8
  %234 = getelementptr inbounds i8, i8* %211, i64 23
  store i8 %233, i8* %234, align 1
  br label %253

235:                                              ; preds = %225
  %236 = icmp ugt i64 %230, 9223372036854775791
  br i1 %236, label %237, label %239

237:                                              ; preds = %235
  %238 = bitcast i8* %211 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %238) #18
  unreachable

239:                                              ; preds = %235
  %240 = add nuw nsw i64 %230, 8
  %241 = and i64 %240, -8
  %242 = icmp slt i64 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %239
  call void @abort() #18
  unreachable

244:                                              ; preds = %239
  %245 = shl i64 %241, 1
  %246 = call i8* @_Znwm(i64 %245) #20
  %247 = bitcast i8* %211 to i8**
  store i8* %246, i8** %247, align 8
  %248 = or i64 %241, -9223372036854775808
  %249 = getelementptr inbounds i8, i8* %211, i64 16
  %250 = bitcast i8* %249 to i64*
  store i64 %248, i64* %250, align 8
  %251 = getelementptr inbounds i8, i8* %211, i64 8
  %252 = bitcast i8* %251 to i64*
  store i64 %230, i64* %252, align 8
  br label %253

253:                                              ; preds = %244, %232
  %254 = phi i8* [ %211, %232 ], [ %246, %244 ]
  %255 = bitcast i8* %254 to i16*
  %256 = add nuw nsw i64 %230, 1
  %257 = add i64 %230, 1
  %258 = icmp ult i64 %257, 16
  br i1 %258, label %351, label %259

259:                                              ; preds = %253
  %260 = shl i64 %230, 1
  %261 = add i64 %260, 2
  %262 = getelementptr i8, i8* %254, i64 %261
  %263 = add i64 %230, 1
  %264 = getelementptr i16, i16* %227, i64 %263
  %265 = bitcast i16* %264 to i8*
  %266 = icmp ult i8* %254, %265
  %267 = icmp ugt i8* %262, %228
  %268 = and i1 %266, %267
  br i1 %268, label %351, label %269

269:                                              ; preds = %259
  %270 = and i64 %257, -16
  %271 = sub i64 %256, %270
  %272 = getelementptr i16, i16* %227, i64 %270
  %273 = getelementptr i16, i16* %255, i64 %270
  %274 = add i64 %270, -16
  %275 = lshr exact i64 %274, 4
  %276 = add nuw nsw i64 %275, 1
  %277 = and i64 %276, 3
  %278 = icmp ult i64 %274, 48
  br i1 %278, label %330, label %279

279:                                              ; preds = %269
  %280 = sub nsw i64 %276, %277
  br label %281

281:                                              ; preds = %281, %279
  %282 = phi i64 [ 0, %279 ], [ %327, %281 ]
  %283 = phi i64 [ %280, %279 ], [ %328, %281 ]
  %284 = getelementptr i16, i16* %227, i64 %282
  %285 = getelementptr i16, i16* %255, i64 %282
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !59
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !59
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !62, !noalias !59
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !62, !noalias !59
  %294 = or i64 %282, 16
  %295 = getelementptr i16, i16* %227, i64 %294
  %296 = getelementptr i16, i16* %255, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !59
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !59
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !62, !noalias !59
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !62, !noalias !59
  %305 = or i64 %282, 32
  %306 = getelementptr i16, i16* %227, i64 %305
  %307 = getelementptr i16, i16* %255, i64 %305
  %308 = bitcast i16* %306 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !59
  %310 = getelementptr i16, i16* %306, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !59
  %313 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %313, align 2, !alias.scope !62, !noalias !59
  %314 = getelementptr i16, i16* %307, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %315, align 2, !alias.scope !62, !noalias !59
  %316 = or i64 %282, 48
  %317 = getelementptr i16, i16* %227, i64 %316
  %318 = getelementptr i16, i16* %255, i64 %316
  %319 = bitcast i16* %317 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !59
  %321 = getelementptr i16, i16* %317, i64 8
  %322 = bitcast i16* %321 to <8 x i16>*
  %323 = load <8 x i16>, <8 x i16>* %322, align 2, !alias.scope !59
  %324 = bitcast i16* %318 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %324, align 2, !alias.scope !62, !noalias !59
  %325 = getelementptr i16, i16* %318, i64 8
  %326 = bitcast i16* %325 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %326, align 2, !alias.scope !62, !noalias !59
  %327 = add i64 %282, 64
  %328 = add i64 %283, -4
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %281, !llvm.loop !64

330:                                              ; preds = %281, %269
  %331 = phi i64 [ 0, %269 ], [ %327, %281 ]
  %332 = icmp eq i64 %277, 0
  br i1 %332, label %349, label %333

333:                                              ; preds = %330, %333
  %334 = phi i64 [ %346, %333 ], [ %331, %330 ]
  %335 = phi i64 [ %347, %333 ], [ %277, %330 ]
  %336 = getelementptr i16, i16* %227, i64 %334
  %337 = getelementptr i16, i16* %255, i64 %334
  %338 = bitcast i16* %336 to <8 x i16>*
  %339 = load <8 x i16>, <8 x i16>* %338, align 2, !alias.scope !59
  %340 = getelementptr i16, i16* %336, i64 8
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !59
  %343 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %339, <8 x i16>* %343, align 2, !alias.scope !62, !noalias !59
  %344 = getelementptr i16, i16* %337, i64 8
  %345 = bitcast i16* %344 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %345, align 2, !alias.scope !62, !noalias !59
  %346 = add i64 %334, 16
  %347 = add i64 %335, -1
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %333, !llvm.loop !65

349:                                              ; preds = %333, %330
  %350 = icmp eq i64 %257, %270
  br i1 %350, label %404, label %351

351:                                              ; preds = %349, %259, %253
  %352 = phi i64 [ %256, %259 ], [ %256, %253 ], [ %271, %349 ]
  %353 = phi i16* [ %227, %259 ], [ %227, %253 ], [ %272, %349 ]
  %354 = phi i16* [ %255, %259 ], [ %255, %253 ], [ %273, %349 ]
  %355 = add i64 %352, -1
  %356 = and i64 %352, 7
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %369, label %358

358:                                              ; preds = %351, %358
  %359 = phi i64 [ %364, %358 ], [ %352, %351 ]
  %360 = phi i16* [ %366, %358 ], [ %353, %351 ]
  %361 = phi i16* [ %365, %358 ], [ %354, %351 ]
  %362 = phi i64 [ %367, %358 ], [ %356, %351 ]
  %363 = load i16, i16* %360, align 2
  store i16 %363, i16* %361, align 2
  %364 = add i64 %359, -1
  %365 = getelementptr inbounds i16, i16* %361, i64 1
  %366 = getelementptr inbounds i16, i16* %360, i64 1
  %367 = add i64 %362, -1
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %369, label %358, !llvm.loop !66

369:                                              ; preds = %358, %351
  %370 = phi i64 [ %352, %351 ], [ %364, %358 ]
  %371 = phi i16* [ %353, %351 ], [ %366, %358 ]
  %372 = phi i16* [ %354, %351 ], [ %365, %358 ]
  %373 = icmp ult i64 %355, 7
  br i1 %373, label %404, label %374

374:                                              ; preds = %369, %374
  %375 = phi i64 [ %400, %374 ], [ %370, %369 ]
  %376 = phi i16* [ %402, %374 ], [ %371, %369 ]
  %377 = phi i16* [ %401, %374 ], [ %372, %369 ]
  %378 = load i16, i16* %376, align 2
  store i16 %378, i16* %377, align 2
  %379 = getelementptr inbounds i16, i16* %377, i64 1
  %380 = getelementptr inbounds i16, i16* %376, i64 1
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = getelementptr inbounds i16, i16* %377, i64 2
  %383 = getelementptr inbounds i16, i16* %376, i64 2
  %384 = load i16, i16* %383, align 2
  store i16 %384, i16* %382, align 2
  %385 = getelementptr inbounds i16, i16* %377, i64 3
  %386 = getelementptr inbounds i16, i16* %376, i64 3
  %387 = load i16, i16* %386, align 2
  store i16 %387, i16* %385, align 2
  %388 = getelementptr inbounds i16, i16* %377, i64 4
  %389 = getelementptr inbounds i16, i16* %376, i64 4
  %390 = load i16, i16* %389, align 2
  store i16 %390, i16* %388, align 2
  %391 = getelementptr inbounds i16, i16* %377, i64 5
  %392 = getelementptr inbounds i16, i16* %376, i64 5
  %393 = load i16, i16* %392, align 2
  store i16 %393, i16* %391, align 2
  %394 = getelementptr inbounds i16, i16* %377, i64 6
  %395 = getelementptr inbounds i16, i16* %376, i64 6
  %396 = load i16, i16* %395, align 2
  store i16 %396, i16* %394, align 2
  %397 = getelementptr inbounds i16, i16* %377, i64 7
  %398 = getelementptr inbounds i16, i16* %376, i64 7
  %399 = load i16, i16* %398, align 2
  store i16 %399, i16* %397, align 2
  %400 = add i64 %375, -8
  %401 = getelementptr inbounds i16, i16* %377, i64 8
  %402 = getelementptr inbounds i16, i16* %376, i64 8
  %403 = icmp eq i64 %400, 0
  br i1 %403, label %404, label %374, !llvm.loop !67

404:                                              ; preds = %369, %374, %349, %223
  %405 = getelementptr inbounds i8, i8* %211, i64 24
  %406 = bitcast i8* %405 to %"class.std::__1::basic_string"*
  %407 = ptrtoint i8* %405 to i64
  store i64 %407, i64* %218, align 8
  %408 = bitcast %"class.std::__1::vector.120"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %408) #19
  %409 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 10
  %410 = load i64, i64* %409, align 8
  %411 = call i8* @_Znwm(i64 8) #20
  %412 = bitcast i8* %411 to i64*
  %413 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %6, i64 0, i32 0, i32 1
  %414 = bitcast %"class.std::__1::vector.120"* %6 to i8**
  store i8* %411, i8** %414, align 8
  %415 = getelementptr inbounds i8, i8* %411, i64 8
  %416 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %417 = bitcast i64** %416 to i8**
  store i8* %415, i8** %417, align 8
  %418 = bitcast i64** %413 to i64*
  store i64 %410, i64* %412, align 8
  %419 = ptrtoint i8* %415 to i64
  store i64 %419, i64* %418, align 8
  %420 = bitcast %"class.gfx::Range"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #19
  %421 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 8
  %422 = load i64, i64* %421, align 8
  %423 = trunc i64 %422 to i32
  %424 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %7, i64 0, i32 0
  store i32 %423, i32* %424, align 4
  %425 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %7, i64 0, i32 1
  store i32 %423, i32* %425, align 4
  %426 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 0, i64 24, i1 false) #19
  call void @_ZN5views14TextfieldModel10ModifyTextERKNSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEERKNS2_INS1_12basic_stringIDsNS1_11char_traitsIDsEENS5_IDsEEEENS5_ISE_EEEERKNS2_ImNS5_ImEEEERKS4_S9_(%"class.views::TextfieldModel"* %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %3, %"class.std::__1::vector.113"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.120"* nonnull dereferenceable(24) %6, %"class.gfx::Range"* nonnull dereferenceable(8) %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #19
  call void @_ZdlPv(i8* nonnull %411) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %408) #19
  %427 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %4, i64 0, i32 0, i32 0
  %428 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %427, align 8
  %429 = icmp eq %"class.std::__1::basic_string"* %428, null
  %430 = bitcast %"class.std::__1::basic_string"* %428 to i8*
  br i1 %429, label %446, label %431

431:                                              ; preds = %404
  %432 = icmp eq %"class.std::__1::basic_string"* %428, %406
  br i1 %432, label %445, label %433

433:                                              ; preds = %431, %443
  %434 = phi %"class.std::__1::basic_string"* [ %435, %443 ], [ %406, %431 ]
  %435 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %434, i64 -1
  %436 = bitcast %"class.std::__1::basic_string"* %435 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %437 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %436, i64 0, i32 1, i32 1
  %438 = load i8, i8* %437, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %440, label %443

440:                                              ; preds = %433
  %441 = bitcast %"class.std::__1::basic_string"* %435 to i8**
  %442 = load i8*, i8** %441, align 8
  call void @_ZdlPv(i8* %442) #20
  br label %443

443:                                              ; preds = %440, %433
  %444 = icmp eq %"class.std::__1::basic_string"* %435, %428
  br i1 %444, label %445, label %433

445:                                              ; preds = %443, %431
  store %"class.std::__1::basic_string"* %428, %"class.std::__1::basic_string"** %212, align 8
  call void @_ZdlPv(i8* %430) #20
  br label %446

446:                                              ; preds = %404, %445
  %447 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %448 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %447, i64 0, i32 1, i32 1
  %449 = load i8, i8* %448, align 1
  %450 = icmp slt i8 %449, 0
  br i1 %450, label %540, label %543

451:                                              ; preds = %20, %531
  %452 = phi i64 [ 0, %20 ], [ %532, %531 ]
  %453 = phi %"class.gfx::Range"* [ null, %20 ], [ %533, %531 ]
  %454 = phi i64 [ %18, %20 ], [ %536, %531 ]
  %455 = phi i64 [ 0, %20 ], [ %534, %531 ]
  %456 = inttoptr i64 %454 to %"class.std::__1::basic_string"*
  %457 = load i64*, i64** %21, align 8
  %458 = getelementptr inbounds i64, i64* %457, i64 %455
  %459 = load i64, i64* %458, align 8
  %460 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %456, i64 %455
  %461 = bitcast %"class.std::__1::basic_string"* %460 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %461, i64 0, i32 1, i32 1
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %451
  %466 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %456, i64 %455, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %467 = load i64, i64* %466, align 8
  br label %470

468:                                              ; preds = %451
  %469 = zext i8 %463 to i64
  br label %470

470:                                              ; preds = %465, %468
  %471 = phi i64 [ %467, %465 ], [ %469, %468 ]
  %472 = add i64 %471, %459
  %473 = load %"class.gfx::Range"*, %"class.gfx::Range"** %12, align 8
  %474 = icmp ult %"class.gfx::Range"* %453, %473
  %475 = ptrtoint %"class.gfx::Range"* %473 to i64
  br i1 %474, label %476, label %483

476:                                              ; preds = %470
  %477 = trunc i64 %459 to i32
  %478 = trunc i64 %472 to i32
  %479 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %453, i64 0, i32 0
  store i32 %477, i32* %479, align 4
  %480 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %453, i64 0, i32 1
  store i32 %478, i32* %480, align 4
  %481 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %453, i64 1
  %482 = ptrtoint %"class.gfx::Range"* %481 to i64
  store i64 %482, i64* %22, align 8
  br label %531

483:                                              ; preds = %470
  %484 = load i64, i64* %23, align 8
  %485 = sub i64 %452, %484
  %486 = ashr exact i64 %485, 3
  %487 = add nsw i64 %486, 1
  %488 = icmp ugt i64 %487, 2305843009213693951
  br i1 %488, label %489, label %491

489:                                              ; preds = %483
  %490 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %490) #18
  unreachable

491:                                              ; preds = %483
  %492 = sub i64 %475, %484
  %493 = ashr exact i64 %492, 3
  %494 = icmp ult i64 %493, 1152921504606846975
  br i1 %494, label %495, label %503

495:                                              ; preds = %491
  %496 = ashr exact i64 %492, 2
  %497 = icmp ult i64 %496, %487
  %498 = select i1 %497, i64 %487, i64 %496
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %509, label %500

500:                                              ; preds = %495
  %501 = icmp ugt i64 %498, 2305843009213693951
  br i1 %501, label %502, label %503

502:                                              ; preds = %500
  tail call void @abort() #18
  unreachable

503:                                              ; preds = %500, %491
  %504 = phi i64 [ %498, %500 ], [ 2305843009213693951, %491 ]
  %505 = shl i64 %504, 3
  %506 = tail call i8* @_Znwm(i64 %505) #20
  %507 = bitcast i8* %506 to %"class.gfx::Range"*
  %508 = load i64, i64* %458, align 8
  br label %509

509:                                              ; preds = %503, %495
  %510 = phi i64 [ %508, %503 ], [ %459, %495 ]
  %511 = phi i64 [ %504, %503 ], [ 0, %495 ]
  %512 = phi i8* [ %506, %503 ], [ null, %495 ]
  %513 = phi %"class.gfx::Range"* [ %507, %503 ], [ null, %495 ]
  %514 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %513, i64 %486
  %515 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %513, i64 %511
  %516 = ptrtoint %"class.gfx::Range"* %515 to i64
  %517 = trunc i64 %510 to i32
  %518 = trunc i64 %472 to i32
  %519 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %514, i64 0, i32 0
  store i32 %517, i32* %519, align 4
  %520 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %513, i64 %486, i32 1
  store i32 %518, i32* %520, align 4
  %521 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %514, i64 1
  %522 = ptrtoint %"class.gfx::Range"* %521 to i64
  %523 = ptrtoint %"class.gfx::Range"* %513 to i64
  %524 = icmp sgt i64 %485, 0
  br i1 %524, label %525, label %527

525:                                              ; preds = %509
  %526 = inttoptr i64 %484 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %512, i8* align 4 %526, i64 %485, i1 false) #19
  br label %527

527:                                              ; preds = %525, %509
  store i64 %523, i64* %23, align 8
  store i64 %522, i64* %22, align 8
  store i64 %516, i64* %24, align 8
  %528 = icmp eq i64 %484, 0
  br i1 %528, label %531, label %529

529:                                              ; preds = %527
  %530 = inttoptr i64 %484 to i8*
  tail call void @_ZdlPv(i8* %530) #20
  br label %531

531:                                              ; preds = %529, %527, %476
  %532 = phi i64 [ %522, %529 ], [ %522, %527 ], [ %482, %476 ]
  %533 = phi %"class.gfx::Range"* [ %521, %529 ], [ %521, %527 ], [ %481, %476 ]
  %534 = add nuw i64 %455, 1
  %535 = load i64, i64* %15, align 8
  %536 = load i64, i64* %17, align 8
  %537 = sub i64 %535, %536
  %538 = sdiv exact i64 %537, 24
  %539 = icmp ult i64 %534, %538
  br i1 %539, label %451, label %25

540:                                              ; preds = %446
  %541 = bitcast [1 x %"class.std::__1::basic_string"]* %5 to i8**
  %542 = load i8*, i8** %541, align 8
  call void @_ZdlPv(i8* %542) #20
  br label %543

543:                                              ; preds = %446, %540
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #19
  %544 = load %"class.gfx::Range"*, %"class.gfx::Range"** %10, align 8
  %545 = icmp eq %"class.gfx::Range"* %544, null
  br i1 %545, label %550, label %546

546:                                              ; preds = %543
  %547 = ptrtoint %"class.gfx::Range"* %544 to i64
  %548 = bitcast %"class.gfx::Range"** %11 to i64*
  store i64 %547, i64* %548, align 8
  %549 = bitcast %"class.gfx::Range"* %544 to i8*
  call void @_ZdlPv(i8* %549) #20
  br label %550

550:                                              ; preds = %543, %546
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel3CutEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.ui::ScopedClipboardWriter", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %46

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %12, i64 0, i32 11, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %12, i64 0, i32 11, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %46, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %12, i64 0, i32 33
  %20 = load i8, i8* %19, align 8, !range !68
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %46

22:                                               ; preds = %18
  %23 = bitcast %"class.ui::ScopedClipboardWriter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %23) #19
  call void @_ZN2ui21ScopedClipboardWriterC1ENS_15ClipboardBufferENSt3__110unique_ptrINS_20DataTransferEndpointENS2_14default_deleteIS4_EEEE(%"class.ui::ScopedClipboardWriter"* nonnull %3, i32 0, %"class.ui::DataTransferEndpoint"* null) #19
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #19
  %25 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8, !noalias !69
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %25, i64 0, i32 11, i32 0
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::RenderText"* %25, %"class.gfx::Range"* dereferenceable(8) %26) #19
  call void @_ZN2ui21ScopedClipboardWriter9WriteTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::ScopedClipboardWriter"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #20
  br label %34

34:                                               ; preds = %22, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #19
  call void @_ZN2ui21ScopedClipboardWriterD1Ev(%"class.ui::ScopedClipboardWriter"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %23) #19
  %35 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %36 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %2, %"class.gfx::RenderText"* %36) #19
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %2, i1 zeroext false) #19
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %38 = load %"class.gfx::Range"*, %"class.gfx::Range"** %37, align 8
  %39 = icmp eq %"class.gfx::Range"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = ptrtoint %"class.gfx::Range"* %38 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %43 = bitcast %"class.gfx::Range"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.gfx::Range"* %38 to i8*
  call void @_ZdlPv(i8* %44) #20
  br label %45

45:                                               ; preds = %34, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  br label %46

46:                                               ; preds = %18, %10, %1, %45
  %47 = phi i1 [ true, %45 ], [ false, %18 ], [ false, %10 ], [ false, %1 ]
  ret i1 %47
}

declare void @_ZN2ui21ScopedClipboardWriterC1ENS_15ClipboardBufferENSt3__110unique_ptrINS_20DataTransferEndpointENS2_14default_deleteIS4_EEEE(%"class.ui::ScopedClipboardWriter"*, i32, %"class.ui::DataTransferEndpoint"*) unnamed_addr #4

declare void @_ZN2ui21ScopedClipboardWriter9WriteTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::ScopedClipboardWriter"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui21ScopedClipboardWriterD1Ev(%"class.ui::ScopedClipboardWriter"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel4CopyEv(%"class.views::TextfieldModel"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.ui::ScopedClipboardWriter", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %34

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %11, i64 0, i32 11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %11, i64 0, i32 11, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %34, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %11, i64 0, i32 33
  %19 = load i8, i8* %18, align 8, !range !68
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %17
  %22 = bitcast %"class.ui::ScopedClipboardWriter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %22) #19
  call void @_ZN2ui21ScopedClipboardWriterC1ENS_15ClipboardBufferENSt3__110unique_ptrINS_20DataTransferEndpointENS2_14default_deleteIS4_EEEE(%"class.ui::ScopedClipboardWriter"* nonnull %2, i32 0, %"class.ui::DataTransferEndpoint"* null) #19
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #19
  %24 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %10, align 8, !noalias !72
  %25 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %24, i64 0, i32 11, i32 0
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::RenderText"* %24, %"class.gfx::Range"* dereferenceable(8) %25) #19
  call void @_ZN2ui21ScopedClipboardWriter9WriteTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::ScopedClipboardWriter"* nonnull %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #19
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #20
  br label %33

33:                                               ; preds = %21, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #19
  call void @_ZN2ui21ScopedClipboardWriterD1Ev(%"class.ui::ScopedClipboardWriter"* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %22) #19
  br label %34

34:                                               ; preds = %17, %9, %1, %33
  %35 = phi i1 [ true, %33 ], [ false, %17 ], [ false, %9 ], [ false, %1 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel5PasteEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #19
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #19
  %6 = tail call %"class.ui::Clipboard"* @_ZN2ui9Clipboard19GetForCurrentThreadEv() #19
  %7 = bitcast %"class.ui::Clipboard"* %6 to void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)***
  %8 = load void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)**, void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)*, void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)** %8, i64 22
  %10 = load void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)*, void (%"class.ui::Clipboard"*, i32, %"class.ui::DataTransferEndpoint"*, %"class.std::__1::basic_string"*)** %9, align 8
  call void %10(%"class.ui::Clipboard"* %6, i32 0, %"class.ui::DataTransferEndpoint"* null, %"class.std::__1::basic_string"* nonnull %2) #19
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i64, i64* %5, align 8
  %16 = zext i8 %13 to i64
  %17 = select i1 %14, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %39, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  %22 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %21, i64 0, i32 44
  %23 = load i8, i8* %22, align 4, !range !68
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = load i16*, i16** %4, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %28 = select i1 %14, i16* %26, i16* %27
  %29 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %28, i64 %17, i32 3, %"class.std::__1::basic_string"* nonnull %2) #19
  %30 = load i8, i8* %12, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i64, i64* %5, align 8
  %33 = zext i8 %30 to i64
  %34 = select i1 %31, i64 %32, i64 %33
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string"* nonnull %2, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0)) #19
  br label %38

38:                                               ; preds = %25, %36, %19
  call void @_ZN5views14TextfieldModel18InsertTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i1 zeroext false)
  br label %39

39:                                               ; preds = %38, %1
  %40 = phi i1 [ false, %1 ], [ true, %38 ]
  %41 = load i8, i8* %12, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #20
  br label %46

46:                                               ; preds = %39, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #19
  ret i1 %40
}

declare %"class.ui::Clipboard"* @_ZN2ui9Clipboard19GetForCurrentThreadEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel18InsertTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  %11 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %12, i64 0, i32 11, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = tail call i8* @_Znwm(i64 144) #20
  %17 = bitcast i8* %16 to %"class.views::internal::InsertEdit"*
  tail call void @_ZN5views8internal10InsertEditC2EbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEm(%"class.views::internal::InsertEdit"* nonnull %17, i1 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %15) #19
  %18 = bitcast i8* %16 to %"class.views::internal::Edit"*
  tail call void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* nonnull %18, %"class.views::TextfieldModel"* %0) #19
  tail call void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"* %0, %"class.views::internal::Edit"* nonnull %18) #19
  br label %56

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #19
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false) #19
  %24 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %23, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %4, %"class.gfx::RenderText"* %24) #19
  %25 = load %"class.gfx::Range"*, %"class.gfx::Range"** %21, align 8
  %26 = load %"class.gfx::Range"*, %"class.gfx::Range"** %22, align 8
  %27 = icmp eq %"class.gfx::Range"* %25, %26
  br i1 %27, label %38, label %30

28:                                               ; preds = %30
  %29 = icmp eq %"class.gfx::Range"* %37, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %19, %28
  %31 = phi %"class.gfx::Range"* [ %37, %28 ], [ %25, %19 ]
  %32 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  %37 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %31, i64 1
  br i1 %36, label %28, label %38

38:                                               ; preds = %30, %28, %19
  %39 = phi i1 [ false, %19 ], [ true, %30 ], [ false, %28 ]
  %40 = icmp eq %"class.gfx::Range"* %25, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = ptrtoint %"class.gfx::Range"* %25 to i64
  %43 = bitcast %"class.gfx::Range"** %22 to i64*
  store i64 %42, i64* %43, align 8
  %44 = bitcast %"class.gfx::Range"* %25 to i8*
  call void @_ZdlPv(i8* %44) #20
  br label %45

45:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #19
  br i1 %39, label %46, label %48

46:                                               ; preds = %45
  %47 = zext i1 %2 to i32
  call void @_ZN5views14TextfieldModel32ExecuteAndRecordReplaceSelectionENS_8internal9MergeTypeERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.views::TextfieldModel"* %0, i32 %47, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  br label %56

48:                                               ; preds = %45
  %49 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %23, align 8
  %50 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %49, i64 0, i32 11, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = call i8* @_Znwm(i64 144) #20
  %54 = bitcast i8* %53 to %"class.views::internal::InsertEdit"*
  call void @_ZN5views8internal10InsertEditC2EbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEm(%"class.views::internal::InsertEdit"* nonnull %54, i1 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %52) #19
  %55 = bitcast i8* %53 to %"class.views::internal::Edit"*
  call void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* nonnull %55, %"class.views::TextfieldModel"* %0) #19
  call void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"* %0, %"class.views::internal::Edit"* nonnull %55) #19
  br label %56

56:                                               ; preds = %46, %48, %10
  ret void
}

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel9TransposeEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.gfx::Range", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %319

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #19
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false) #19
  %18 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %2, %"class.gfx::RenderText"* %18) #19
  %19 = load %"class.gfx::Range"*, %"class.gfx::Range"** %15, align 8
  %20 = load %"class.gfx::Range"*, %"class.gfx::Range"** %16, align 8
  %21 = icmp eq %"class.gfx::Range"* %19, %20
  br i1 %21, label %32, label %24

22:                                               ; preds = %24
  %23 = icmp eq %"class.gfx::Range"* %31, %20
  br i1 %23, label %32, label %24

24:                                               ; preds = %13, %22
  %25 = phi %"class.gfx::Range"* [ %31, %22 ], [ %19, %13 ]
  %26 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  %31 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %25, i64 1
  br i1 %30, label %22, label %32

32:                                               ; preds = %24, %22, %13
  %33 = phi i1 [ false, %13 ], [ true, %24 ], [ false, %22 ]
  %34 = icmp eq %"class.gfx::Range"* %19, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = ptrtoint %"class.gfx::Range"* %19 to i64
  %37 = bitcast %"class.gfx::Range"** %16 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.gfx::Range"* %19 to i8*
  call void @_ZdlPv(i8* %38) #20
  br label %39

39:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #19
  br i1 %33, label %319, label %40

40:                                               ; preds = %39
  %41 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8
  %42 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %41, i64 0, i32 11, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %41, i64 %44, i32 1) #19
  %46 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8
  %47 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %46, i64 %44, i32 0) #19
  %48 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8
  %49 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %48, i64 0, i32 3
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %48, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  br label %59

57:                                               ; preds = %40
  %58 = zext i8 %52 to i64
  br label %59

59:                                               ; preds = %54, %57
  %60 = phi i64 [ %56, %54 ], [ %58, %57 ]
  %61 = icmp eq i64 %60, %44
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %48, i64 %47, i32 0) #19
  %64 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8
  br label %65

65:                                               ; preds = %62, %59
  %66 = phi %"class.gfx::RenderText"* [ %64, %62 ], [ %48, %59 ]
  %67 = phi i64 [ %47, %62 ], [ %44, %59 ]
  %68 = phi i64 [ %63, %62 ], [ %47, %59 ]
  %69 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %66, i64 0, i32 3
  %70 = call i64 @_ZN3gfx18UTF16IndexToOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%"class.std::__1::basic_string"* dereferenceable(24) %69, i64 %68, i64 %45) #19
  %71 = icmp eq i64 %70, 2
  br i1 %71, label %72, label %319

72:                                               ; preds = %65
  %73 = bitcast %"class.gfx::Range"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #19
  %74 = trunc i64 %68 to i32
  %75 = trunc i64 %45 to i32
  %76 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 0
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 1
  store i32 %75, i32* %77, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %10, align 4
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %72
  %82 = call i32 @_ZN5views14TextfieldModel22ConfirmCompositionTextEv(%"class.views::TextfieldModel"* %0) #19
  br label %83

83:                                               ; preds = %72, %81
  %84 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8
  %85 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %84, %"class.gfx::Range"* nonnull dereferenceable(8) %3, i1 zeroext true) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #19
  %86 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #19
  %87 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 24, i1 false)
  %88 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %17, align 8, !noalias !75
  %89 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %88, i64 0, i32 11, i32 0
  call void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::RenderText"* %88, %"class.gfx::Range"* dereferenceable(8) %89) #19
  %90 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #19
  %91 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #19
  %93 = sub i64 %67, %68
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 %93, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %94) #19
  %95 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #19
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 0, i64 %93, %"class.std::__1::allocator"* nonnull dereferenceable(1) %94) #19
  %96 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1, !noalias !78
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i16*, i16** %100, align 8, !noalias !78
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8, !noalias !78
  %104 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %105 = zext i8 %98 to i64
  %106 = select i1 %99, i16* %101, i16* %104
  %107 = select i1 %99, i64 %103, i64 %105
  %108 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1, !noalias !78
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %119

112:                                              ; preds = %83
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %114 = load i64, i64* %113, align 8, !noalias !78
  %115 = and i64 %114, 9223372036854775807
  %116 = add nsw i64 %115, -1
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8, !noalias !78
  br label %121

119:                                              ; preds = %83
  %120 = zext i8 %110 to i64
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i64 [ %116, %112 ], [ 10, %119 ]
  %123 = phi i64 [ %118, %112 ], [ %120, %119 ]
  %124 = sub i64 %122, %123
  %125 = icmp ult i64 %124, %107
  br i1 %125, label %287, label %126

126:                                              ; preds = %121
  %127 = icmp eq i64 %107, 0
  br i1 %127, label %290, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i16*, i16** %129, align 8, !noalias !78
  %131 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %132 = select i1 %111, i16* %130, i16* %131
  %133 = getelementptr inbounds i16, i16* %132, i64 %123
  %134 = icmp ult i64 %107, 16
  br i1 %134, label %224, label %135

135:                                              ; preds = %128
  %136 = add i64 %107, %123
  %137 = getelementptr i16, i16* %132, i64 %136
  %138 = getelementptr i16, i16* %106, i64 %107
  %139 = icmp ult i16* %133, %138
  %140 = icmp ult i16* %106, %137
  %141 = and i1 %139, %140
  br i1 %141, label %224, label %142

142:                                              ; preds = %135
  %143 = and i64 %107, -16
  %144 = sub i64 %107, %143
  %145 = getelementptr i16, i16* %106, i64 %143
  %146 = getelementptr i16, i16* %133, i64 %143
  %147 = add i64 %143, -16
  %148 = lshr exact i64 %147, 4
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp ult i64 %147, 48
  br i1 %151, label %203, label %152

152:                                              ; preds = %142
  %153 = sub nsw i64 %149, %150
  br label %154

154:                                              ; preds = %154, %152
  %155 = phi i64 [ 0, %152 ], [ %200, %154 ]
  %156 = phi i64 [ %153, %152 ], [ %201, %154 ]
  %157 = getelementptr i16, i16* %106, i64 %155
  %158 = getelementptr i16, i16* %133, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !81, !noalias !78
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !81, !noalias !78
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !84, !noalias !86
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !84, !noalias !86
  %167 = or i64 %155, 16
  %168 = getelementptr i16, i16* %106, i64 %167
  %169 = getelementptr i16, i16* %133, i64 %167
  %170 = bitcast i16* %168 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !81, !noalias !78
  %172 = getelementptr i16, i16* %168, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !81, !noalias !78
  %175 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !84, !noalias !86
  %176 = getelementptr i16, i16* %169, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %177, align 2, !alias.scope !84, !noalias !86
  %178 = or i64 %155, 32
  %179 = getelementptr i16, i16* %106, i64 %178
  %180 = getelementptr i16, i16* %133, i64 %178
  %181 = bitcast i16* %179 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !81, !noalias !78
  %183 = getelementptr i16, i16* %179, i64 8
  %184 = bitcast i16* %183 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !81, !noalias !78
  %186 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %186, align 2, !alias.scope !84, !noalias !86
  %187 = getelementptr i16, i16* %180, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %188, align 2, !alias.scope !84, !noalias !86
  %189 = or i64 %155, 48
  %190 = getelementptr i16, i16* %106, i64 %189
  %191 = getelementptr i16, i16* %133, i64 %189
  %192 = bitcast i16* %190 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !81, !noalias !78
  %194 = getelementptr i16, i16* %190, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !81, !noalias !78
  %197 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %197, align 2, !alias.scope !84, !noalias !86
  %198 = getelementptr i16, i16* %191, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %199, align 2, !alias.scope !84, !noalias !86
  %200 = add i64 %155, 64
  %201 = add i64 %156, -4
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %154, !llvm.loop !87

203:                                              ; preds = %154, %142
  %204 = phi i64 [ 0, %142 ], [ %200, %154 ]
  %205 = icmp eq i64 %150, 0
  br i1 %205, label %222, label %206

206:                                              ; preds = %203, %206
  %207 = phi i64 [ %219, %206 ], [ %204, %203 ]
  %208 = phi i64 [ %220, %206 ], [ %150, %203 ]
  %209 = getelementptr i16, i16* %106, i64 %207
  %210 = getelementptr i16, i16* %133, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2, !alias.scope !81, !noalias !78
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2, !alias.scope !81, !noalias !78
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2, !alias.scope !84, !noalias !86
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2, !alias.scope !84, !noalias !86
  %219 = add i64 %207, 16
  %220 = add i64 %208, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %206, !llvm.loop !88

222:                                              ; preds = %206, %203
  %223 = icmp eq i64 %107, %143
  br i1 %223, label %277, label %224

224:                                              ; preds = %222, %135, %128
  %225 = phi i64 [ %107, %135 ], [ %107, %128 ], [ %144, %222 ]
  %226 = phi i16* [ %106, %135 ], [ %106, %128 ], [ %145, %222 ]
  %227 = phi i16* [ %133, %135 ], [ %133, %128 ], [ %146, %222 ]
  %228 = add i64 %225, -1
  %229 = and i64 %225, 7
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %242, label %231

231:                                              ; preds = %224, %231
  %232 = phi i64 [ %237, %231 ], [ %225, %224 ]
  %233 = phi i16* [ %239, %231 ], [ %226, %224 ]
  %234 = phi i16* [ %238, %231 ], [ %227, %224 ]
  %235 = phi i64 [ %240, %231 ], [ %229, %224 ]
  %236 = load i16, i16* %233, align 2, !noalias !78
  store i16 %236, i16* %234, align 2, !noalias !78
  %237 = add i64 %232, -1
  %238 = getelementptr inbounds i16, i16* %234, i64 1
  %239 = getelementptr inbounds i16, i16* %233, i64 1
  %240 = add i64 %235, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %231, !llvm.loop !89

242:                                              ; preds = %231, %224
  %243 = phi i64 [ %225, %224 ], [ %237, %231 ]
  %244 = phi i16* [ %226, %224 ], [ %239, %231 ]
  %245 = phi i16* [ %227, %224 ], [ %238, %231 ]
  %246 = icmp ult i64 %228, 7
  br i1 %246, label %277, label %247

247:                                              ; preds = %242, %247
  %248 = phi i64 [ %273, %247 ], [ %243, %242 ]
  %249 = phi i16* [ %275, %247 ], [ %244, %242 ]
  %250 = phi i16* [ %274, %247 ], [ %245, %242 ]
  %251 = load i16, i16* %249, align 2, !noalias !78
  store i16 %251, i16* %250, align 2, !noalias !78
  %252 = getelementptr inbounds i16, i16* %250, i64 1
  %253 = getelementptr inbounds i16, i16* %249, i64 1
  %254 = load i16, i16* %253, align 2, !noalias !78
  store i16 %254, i16* %252, align 2, !noalias !78
  %255 = getelementptr inbounds i16, i16* %250, i64 2
  %256 = getelementptr inbounds i16, i16* %249, i64 2
  %257 = load i16, i16* %256, align 2, !noalias !78
  store i16 %257, i16* %255, align 2, !noalias !78
  %258 = getelementptr inbounds i16, i16* %250, i64 3
  %259 = getelementptr inbounds i16, i16* %249, i64 3
  %260 = load i16, i16* %259, align 2, !noalias !78
  store i16 %260, i16* %258, align 2, !noalias !78
  %261 = getelementptr inbounds i16, i16* %250, i64 4
  %262 = getelementptr inbounds i16, i16* %249, i64 4
  %263 = load i16, i16* %262, align 2, !noalias !78
  store i16 %263, i16* %261, align 2, !noalias !78
  %264 = getelementptr inbounds i16, i16* %250, i64 5
  %265 = getelementptr inbounds i16, i16* %249, i64 5
  %266 = load i16, i16* %265, align 2, !noalias !78
  store i16 %266, i16* %264, align 2, !noalias !78
  %267 = getelementptr inbounds i16, i16* %250, i64 6
  %268 = getelementptr inbounds i16, i16* %249, i64 6
  %269 = load i16, i16* %268, align 2, !noalias !78
  store i16 %269, i16* %267, align 2, !noalias !78
  %270 = getelementptr inbounds i16, i16* %250, i64 7
  %271 = getelementptr inbounds i16, i16* %249, i64 7
  %272 = load i16, i16* %271, align 2, !noalias !78
  store i16 %272, i16* %270, align 2, !noalias !78
  %273 = add i64 %248, -8
  %274 = getelementptr inbounds i16, i16* %250, i64 8
  %275 = getelementptr inbounds i16, i16* %249, i64 8
  %276 = icmp eq i64 %273, 0
  br i1 %276, label %277, label %247, !llvm.loop !90

277:                                              ; preds = %242, %247, %222
  %278 = add i64 %123, %107
  %279 = load i8, i8* %109, align 1, !noalias !78
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %278, i64* %282, align 8, !noalias !78
  br label %285

283:                                              ; preds = %277
  %284 = trunc i64 %278 to i8
  store i8 %284, i8* %109, align 1, !noalias !78
  br label %285

285:                                              ; preds = %283, %281
  %286 = getelementptr inbounds i16, i16* %132, i64 %278
  store i16 0, i16* %286, align 2, !noalias !78
  br label %290

287:                                              ; preds = %121
  %288 = add i64 %123, %107
  %289 = sub i64 %288, %122
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %6, i64 %122, i64 %289, i64 %123, i64 %123, i64 0, i64 %107, i16* %106) #19, !noalias !78
  br label %290

290:                                              ; preds = %126, %285, %287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %91, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #19, !noalias !78
  %291 = load i8, i8* %97, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #19
  br label %302

294:                                              ; preds = %290
  %295 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %296 = load i8*, i8** %295, align 8
  call void @_ZdlPv(i8* %296) #20
  %297 = load i8, i8* %109, align 1
  %298 = icmp slt i8 %297, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #19
  br i1 %298, label %299, label %302

299:                                              ; preds = %294
  %300 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %301 = load i8*, i8** %300, align 8
  call void @_ZdlPv(i8* %301) #20
  br label %302

302:                                              ; preds = %293, %294, %299
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #19
  call void @_ZN5views14TextfieldModel18InsertTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i1 zeroext false)
  %303 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %302
  %308 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #20
  br label %310

310:                                              ; preds = %302, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #19
  %311 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %312 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %311, i64 0, i32 1, i32 1
  %313 = load i8, i8* %312, align 1
  %314 = icmp slt i8 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %310
  %316 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %317 = load i8*, i8** %316, align 8
  call void @_ZdlPv(i8* %317) #20
  br label %318

318:                                              ; preds = %310, %315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #19
  br label %319

319:                                              ; preds = %1, %318, %65, %39
  %320 = phi i1 [ false, %39 ], [ false, %1 ], [ true, %318 ], [ false, %65 ]
  ret i1 %320
}

declare i64 @_ZN3gfx18UTF16IndexToOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views14TextfieldModel4YankEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !19

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = load i8, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 23), align 1
  %11 = icmp slt i8 %10, 0
  %12 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 8) to i64*), align 8
  %13 = zext i8 %10 to i64
  %14 = select i1 %11, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %43

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #19
  %21 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %2, %"class.gfx::RenderText"* %21) #19
  %22 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  %23 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  %24 = icmp eq %"class.gfx::Range"* %22, %23
  br i1 %24, label %35, label %27

25:                                               ; preds = %27
  %26 = icmp eq %"class.gfx::Range"* %34, %23
  br i1 %26, label %35, label %27

27:                                               ; preds = %16, %25
  %28 = phi %"class.gfx::Range"* [ %34, %25 ], [ %22, %16 ]
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 1
  br i1 %33, label %25, label %35

35:                                               ; preds = %27, %25, %16
  %36 = phi i1 [ false, %16 ], [ true, %27 ], [ false, %25 ]
  %37 = icmp eq %"class.gfx::Range"* %22, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = ptrtoint %"class.gfx::Range"* %22 to i64
  %40 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"class.gfx::Range"* %22 to i8*
  call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #19
  br i1 %36, label %43, label %44

43:                                               ; preds = %42, %9
  call void @_ZN5views14TextfieldModel18InsertTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::basic_string"* dereferenceable(24) bitcast (%"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to %"class.std::__1::basic_string"*), i1 zeroext false)
  br label %44

44:                                               ; preds = %42, %43
  %45 = phi i1 [ true, %43 ], [ false, %42 ]
  ret i1 %45
}

declare void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* sret, %"class.gfx::RenderText"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel37DeletePrimarySelectionAndInsertTextAtERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEm(%"class.views::TextfieldModel"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %11

11:                                               ; preds = %3, %10
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %12, align 8
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %13, i64 0, i32 11, i32 0
  %15 = bitcast %"class.gfx::Range"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = tail call i8* @_Znwm(i64 8) #20
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.gfx::Range"** %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = bitcast %"class.gfx::Range"** %18 to i64*
  %24 = bitcast i8* %17 to i64*
  store i64 %16, i64* %24, align 4
  %25 = ptrtoint i8* %20 to i64
  store i64 %25, i64* %23, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = add i64 %33, %2
  call void @_ZN5views14TextfieldModel23ExecuteAndRecordReplaceENS_8internal9MergeTypeENSt3__16vectorIN3gfx5RangeENS3_9allocatorIS6_EEEEmRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENS7_IDsEEEEm(%"class.views::TextfieldModel"* %0, i32 0, %"class.std::__1::vector"* nonnull %4, i64 %34, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %2)
  tail call void @_ZdlPv(i8* nonnull %17) #20
  ret void
}

declare void @_ZNK3gfx10RenderText16GetTextFromRangeERKNS_5RangeE(%"class.std::__1::basic_string"* sret, %"class.gfx::RenderText"*, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views14TextfieldModel12GetTextRangeEPN3gfx5RangeE(%"class.views::TextfieldModel"* nocapture readonly, %"class.gfx::Range"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %4, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %2
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = bitcast %"class.gfx::Range"* %1 to i64*
  %18 = shl i64 %16, 32
  store i64 %18, i64* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel18SetCompositionTextERKN2ui15CompositionTextE(%"class.views::TextfieldModel"*, %"struct.ui::CompositionText"* dereferenceable(56)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.gfx::Range", align 4
  %4 = alloca %"class.gfx::Range", align 4
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Range"*
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %55

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #19
  %21 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %6, %"class.gfx::RenderText"* %21) #19
  %22 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  %23 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  %24 = icmp eq %"class.gfx::Range"* %22, %23
  br i1 %24, label %35, label %27

25:                                               ; preds = %27
  %26 = icmp eq %"class.gfx::Range"* %34, %23
  br i1 %26, label %35, label %27

27:                                               ; preds = %16, %25
  %28 = phi %"class.gfx::Range"* [ %34, %25 ], [ %22, %16 ]
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 1
  br i1 %33, label %25, label %35

35:                                               ; preds = %27, %25, %16
  %36 = phi i1 [ false, %16 ], [ true, %27 ], [ false, %25 ]
  %37 = icmp eq %"class.gfx::Range"* %22, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = ptrtoint %"class.gfx::Range"* %22 to i64
  %40 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"class.gfx::Range"* %22 to i8*
  call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #19
  br i1 %36, label %43, label %55

43:                                               ; preds = %42
  %44 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44)
  %45 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %20, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %5, %"class.gfx::RenderText"* %45) #19
  call void @_ZN5views14TextfieldModel22ExecuteAndRecordDeleteENSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::vector"* nonnull %5, i1 zeroext false) #19
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %47 = load %"class.gfx::Range"*, %"class.gfx::Range"** %46, align 8
  %48 = icmp eq %"class.gfx::Range"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint %"class.gfx::Range"* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %52 = bitcast %"class.gfx::Range"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.gfx::Range"* %47 to i8*
  call void @_ZdlPv(i8* %53) #20
  br label %54

54:                                               ; preds = %43, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44)
  br label %55

55:                                               ; preds = %42, %54, %15
  %56 = bitcast %"struct.ui::CompositionText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i64 %61, i64 %62
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %374, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %66, align 8
  %68 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %67, i64 0, i32 11, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #19
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %67, i64 0, i32 3
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 24, i1 false)
  %78 = load i8, i8* %76, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %65
  %81 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %81, i64 24, i1 false) #19
  br label %259

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %67, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %86, 11
  br i1 %87, label %88, label %93

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %90 = trunc i64 %86 to i8
  %91 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  store i8 %90, i8* %92, align 1
  br label %108

93:                                               ; preds = %82
  %94 = icmp ugt i64 %86, 9223372036854775791
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %96) #18
  unreachable

97:                                               ; preds = %93
  %98 = add nuw nsw i64 %86, 8
  %99 = and i64 %98, -8
  %100 = icmp slt i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  call void @abort() #18
  unreachable

102:                                              ; preds = %97
  %103 = shl i64 %99, 1
  %104 = call i8* @_Znwm(i64 %103) #20
  %105 = bitcast i8* %104 to i16*
  %106 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  store i8* %104, i8** %106, align 8
  %107 = or i64 %99, -9223372036854775808
  store i64 %107, i64* %73, align 8
  store i64 %86, i64* %72, align 8
  br label %108

108:                                              ; preds = %102, %88
  %109 = phi i16* [ %89, %88 ], [ %105, %102 ]
  %110 = add nuw nsw i64 %86, 1
  %111 = add i64 %86, 1
  %112 = icmp ult i64 %111, 16
  br i1 %112, label %202, label %113

113:                                              ; preds = %108
  %114 = add i64 %86, 1
  %115 = getelementptr i16, i16* %109, i64 %114
  %116 = getelementptr i16, i16* %84, i64 %114
  %117 = icmp ult i16* %109, %116
  %118 = icmp ult i16* %84, %115
  %119 = and i1 %117, %118
  br i1 %119, label %202, label %120

120:                                              ; preds = %113
  %121 = and i64 %111, -16
  %122 = sub i64 %110, %121
  %123 = getelementptr i16, i16* %84, i64 %121
  %124 = getelementptr i16, i16* %109, i64 %121
  %125 = add i64 %121, -16
  %126 = lshr exact i64 %125, 4
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp ult i64 %125, 48
  br i1 %129, label %181, label %130

130:                                              ; preds = %120
  %131 = sub nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %178, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %179, %132 ]
  %135 = getelementptr i16, i16* %84, i64 %133
  %136 = getelementptr i16, i16* %109, i64 %133
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !91
  %139 = getelementptr i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !91
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !94, !noalias !91
  %143 = getelementptr i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !94, !noalias !91
  %145 = or i64 %133, 16
  %146 = getelementptr i16, i16* %84, i64 %145
  %147 = getelementptr i16, i16* %109, i64 %145
  %148 = bitcast i16* %146 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !91
  %150 = getelementptr i16, i16* %146, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !91
  %153 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %153, align 2, !alias.scope !94, !noalias !91
  %154 = getelementptr i16, i16* %147, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %155, align 2, !alias.scope !94, !noalias !91
  %156 = or i64 %133, 32
  %157 = getelementptr i16, i16* %84, i64 %156
  %158 = getelementptr i16, i16* %109, i64 %156
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !91
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !91
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !94, !noalias !91
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !94, !noalias !91
  %167 = or i64 %133, 48
  %168 = getelementptr i16, i16* %84, i64 %167
  %169 = getelementptr i16, i16* %109, i64 %167
  %170 = bitcast i16* %168 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !91
  %172 = getelementptr i16, i16* %168, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !91
  %175 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !94, !noalias !91
  %176 = getelementptr i16, i16* %169, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %177, align 2, !alias.scope !94, !noalias !91
  %178 = add i64 %133, 64
  %179 = add i64 %134, -4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %132, !llvm.loop !96

181:                                              ; preds = %132, %120
  %182 = phi i64 [ 0, %120 ], [ %178, %132 ]
  %183 = icmp eq i64 %128, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %197, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %198, %184 ], [ %128, %181 ]
  %187 = getelementptr i16, i16* %84, i64 %185
  %188 = getelementptr i16, i16* %109, i64 %185
  %189 = bitcast i16* %187 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !91
  %191 = getelementptr i16, i16* %187, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !91
  %194 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %190, <8 x i16>* %194, align 2, !alias.scope !94, !noalias !91
  %195 = getelementptr i16, i16* %188, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %196, align 2, !alias.scope !94, !noalias !91
  %197 = add i64 %185, 16
  %198 = add i64 %186, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %184, !llvm.loop !97

200:                                              ; preds = %184, %181
  %201 = icmp eq i64 %111, %121
  br i1 %201, label %255, label %202

202:                                              ; preds = %200, %113, %108
  %203 = phi i64 [ %110, %113 ], [ %110, %108 ], [ %122, %200 ]
  %204 = phi i16* [ %84, %113 ], [ %84, %108 ], [ %123, %200 ]
  %205 = phi i16* [ %109, %113 ], [ %109, %108 ], [ %124, %200 ]
  %206 = add i64 %203, -1
  %207 = and i64 %203, 7
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %220, label %209

209:                                              ; preds = %202, %209
  %210 = phi i64 [ %215, %209 ], [ %203, %202 ]
  %211 = phi i16* [ %217, %209 ], [ %204, %202 ]
  %212 = phi i16* [ %216, %209 ], [ %205, %202 ]
  %213 = phi i64 [ %218, %209 ], [ %207, %202 ]
  %214 = load i16, i16* %211, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %210, -1
  %216 = getelementptr inbounds i16, i16* %212, i64 1
  %217 = getelementptr inbounds i16, i16* %211, i64 1
  %218 = add i64 %213, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %209, !llvm.loop !98

220:                                              ; preds = %209, %202
  %221 = phi i64 [ %203, %202 ], [ %215, %209 ]
  %222 = phi i16* [ %204, %202 ], [ %217, %209 ]
  %223 = phi i16* [ %205, %202 ], [ %216, %209 ]
  %224 = icmp ult i64 %206, 7
  br i1 %224, label %255, label %225

225:                                              ; preds = %220, %225
  %226 = phi i64 [ %251, %225 ], [ %221, %220 ]
  %227 = phi i16* [ %253, %225 ], [ %222, %220 ]
  %228 = phi i16* [ %252, %225 ], [ %223, %220 ]
  %229 = load i16, i16* %227, align 2
  store i16 %229, i16* %228, align 2
  %230 = getelementptr inbounds i16, i16* %228, i64 1
  %231 = getelementptr inbounds i16, i16* %227, i64 1
  %232 = load i16, i16* %231, align 2
  store i16 %232, i16* %230, align 2
  %233 = getelementptr inbounds i16, i16* %228, i64 2
  %234 = getelementptr inbounds i16, i16* %227, i64 2
  %235 = load i16, i16* %234, align 2
  store i16 %235, i16* %233, align 2
  %236 = getelementptr inbounds i16, i16* %228, i64 3
  %237 = getelementptr inbounds i16, i16* %227, i64 3
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %228, i64 4
  %240 = getelementptr inbounds i16, i16* %227, i64 4
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %228, i64 5
  %243 = getelementptr inbounds i16, i16* %227, i64 5
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds i16, i16* %228, i64 6
  %246 = getelementptr inbounds i16, i16* %227, i64 6
  %247 = load i16, i16* %246, align 2
  store i16 %247, i16* %245, align 2
  %248 = getelementptr inbounds i16, i16* %228, i64 7
  %249 = getelementptr inbounds i16, i16* %227, i64 7
  %250 = load i16, i16* %249, align 2
  store i16 %250, i16* %248, align 2
  %251 = add i64 %226, -8
  %252 = getelementptr inbounds i16, i16* %228, i64 8
  %253 = getelementptr inbounds i16, i16* %227, i64 8
  %254 = icmp eq i64 %251, 0
  br i1 %254, label %255, label %225, !llvm.loop !99

255:                                              ; preds = %220, %225, %200
  %256 = load i8, i8* %57, align 1
  %257 = load i64, i64* %60, align 8
  %258 = zext i8 %256 to i64
  br label %259

259:                                              ; preds = %255, %80
  %260 = phi i64 [ %258, %255 ], [ %62, %80 ]
  %261 = phi i64 [ %257, %255 ], [ %61, %80 ]
  %262 = phi i8 [ %256, %255 ], [ %58, %80 ]
  %263 = icmp slt i8 %262, 0
  %264 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load i16*, i16** %264, align 8
  %266 = bitcast %"struct.ui::CompositionText"* %1 to i16*
  %267 = select i1 %263, i16* %265, i16* %266
  %268 = select i1 %263, i64 %261, i64 %260
  %269 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %7, i64 %70, i16* %267, i64 %268) #19
  %270 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %66, align 8
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %270, %"class.std::__1::basic_string"* dereferenceable(24) %269) #19
  %271 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 1
  %272 = load %"class.views::TextfieldModel::Delegate"*, %"class.views::TextfieldModel::Delegate"** %271, align 8
  %273 = icmp eq %"class.views::TextfieldModel::Delegate"* %272, null
  br i1 %273, label %279, label %274

274:                                              ; preds = %259
  %275 = bitcast %"class.views::TextfieldModel::Delegate"* %272 to void (%"class.views::TextfieldModel::Delegate"*)***
  %276 = load void (%"class.views::TextfieldModel::Delegate"*)**, void (%"class.views::TextfieldModel::Delegate"*)*** %275, align 8
  %277 = getelementptr inbounds void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %276, i64 1
  %278 = load void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %277, align 8
  call void %278(%"class.views::TextfieldModel::Delegate"* nonnull %272) #19
  br label %279

279:                                              ; preds = %259, %274
  %280 = load i8, i8* %57, align 1
  %281 = icmp slt i8 %280, 0
  %282 = load i64, i64* %60, align 8
  %283 = zext i8 %280 to i64
  %284 = select i1 %281, i64 %282, i64 %283
  %285 = trunc i64 %284 to i32
  %286 = add i32 %69, %285
  %287 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %288 = bitcast %"class.gfx::Range"* %287 to i64*
  %289 = zext i32 %286 to i64
  %290 = shl nuw i64 %289, 32
  %291 = or i64 %290, %70
  store i64 %291, i64* %288, align 8
  %292 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1
  %293 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 1
  %294 = bitcast %"struct.ui::ImeTextSpan"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.std::__1::vector.197"* %292 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = icmp eq i64 %295, %297
  br i1 %298, label %306, label %299

299:                                              ; preds = %279
  %300 = inttoptr i64 %297 to %"struct.ui::ImeTextSpan"*
  %301 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %300, i64 0, i32 4
  %302 = load i32, i32* %301, align 8
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %306, label %304

304:                                              ; preds = %299
  %305 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %66, align 8
  call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %305, %"class.gfx::Range"* dereferenceable(8) %287) #19
  br label %309

306:                                              ; preds = %299, %279
  %307 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %66, align 8
  %308 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #19
  store i64 -1, i64* %8, align 8
  call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %307, %"class.gfx::Range"* nonnull dereferenceable(8) %9) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #19
  br label %309

309:                                              ; preds = %306, %304
  %310 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 0
  %311 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %310, align 8
  %312 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %293, align 8
  %313 = icmp eq %"struct.ui::ImeTextSpan"* %311, %312
  br i1 %313, label %327, label %314

314:                                              ; preds = %309, %319
  %315 = phi %"struct.ui::ImeTextSpan"* [ %320, %319 ], [ %311, %309 ]
  %316 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %315, i64 0, i32 4
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 2
  br i1 %318, label %322, label %319

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %315, i64 1
  %321 = icmp eq %"struct.ui::ImeTextSpan"* %320, %312
  br i1 %321, label %327, label %314

322:                                              ; preds = %314
  %323 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %315, i64 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %315, i64 0, i32 2
  %326 = load i32, i32* %325, align 8
  br label %327

327:                                              ; preds = %319, %309, %322
  %328 = phi i32 [ %326, %322 ], [ -1, %309 ], [ -1, %319 ]
  %329 = phi i32 [ %324, %322 ], [ -1, %309 ], [ -1, %319 ]
  %330 = and i32 %329, %328
  %331 = icmp eq i32 %330, -1
  br i1 %331, label %344, label %332

332:                                              ; preds = %327
  %333 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %66, align 8
  %334 = icmp ult i32 %329, %328
  %335 = select i1 %334, i32 %329, i32 %328
  %336 = icmp ugt i32 %329, %328
  %337 = select i1 %336, i32 %329, i32 %328
  %338 = bitcast %"class.gfx::Range"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #19
  %339 = add i32 %335, %69
  %340 = add i32 %337, %69
  %341 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 0
  store i32 %339, i32* %341, align 4
  %342 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 1
  store i32 %340, i32* %342, align 4
  %343 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %333, %"class.gfx::Range"* nonnull dereferenceable(8) %3, i1 zeroext true) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #19
  br label %365

344:                                              ; preds = %327
  %345 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %346, %348
  %350 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %66, align 8
  br i1 %349, label %362, label %351

351:                                              ; preds = %344
  %352 = icmp ult i32 %346, %348
  %353 = select i1 %352, i32 %346, i32 %348
  %354 = icmp ugt i32 %346, %348
  %355 = select i1 %354, i32 %346, i32 %348
  %356 = bitcast %"class.gfx::Range"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #19
  %357 = add i32 %353, %69
  %358 = add i32 %355, %69
  %359 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 0
  store i32 %357, i32* %359, align 4
  %360 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 1
  store i32 %358, i32* %360, align 4
  %361 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %350, %"class.gfx::Range"* nonnull dereferenceable(8) %4, i1 zeroext true) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #19
  br label %365

362:                                              ; preds = %344
  %363 = zext i32 %346 to i64
  %364 = add nuw nsw i64 %363, %70
  call void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"* %350, i64 %364) #19
  br label %365

365:                                              ; preds = %351, %362, %332
  %366 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %367 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %366, i64 0, i32 1, i32 1
  %368 = load i8, i8* %367, align 1
  %369 = icmp slt i8 %368, 0
  br i1 %369, label %370, label %373

370:                                              ; preds = %365
  %371 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %372 = load i8*, i8** %371, align 8
  call void @_ZdlPv(i8* %372) #20
  br label %373

373:                                              ; preds = %365, %370
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #19
  br label %374

374:                                              ; preds = %55, %373
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel17SetRenderTextTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.views::TextfieldModel"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %3, align 8
  tail call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 1
  %6 = load %"class.views::TextfieldModel::Delegate"*, %"class.views::TextfieldModel::Delegate"** %5, align 8
  %7 = icmp eq %"class.views::TextfieldModel::Delegate"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.views::TextfieldModel::Delegate"* %6 to void (%"class.views::TextfieldModel::Delegate"*)***
  %10 = load void (%"class.views::TextfieldModel::Delegate"*)**, void (%"class.views::TextfieldModel::Delegate"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %10, i64 1
  %12 = load void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %11, align 8
  tail call void %12(%"class.views::TextfieldModel::Delegate"* nonnull %6) #19
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"*, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel30SetCompositionFromExistingTextERKN3gfx5RangeE(%"class.views::TextfieldModel"*, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %8, align 8
  br i1 %7, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %9, i64 0, i32 3
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %21

19:                                               ; preds = %10
  %20 = zext i8 %14 to i64
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i64 [ %18, %16 ], [ %20, %19 ]
  %23 = trunc i64 %22 to i32
  %24 = and i32 %6, %4
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i32 %4, %6
  %28 = select i1 %27, i32 %4, i32 %6
  %29 = icmp ugt i32 %28, %23
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = icmp eq i32 %28, %23
  %32 = icmp eq i32 %23, 0
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %30, %2, %21, %26
  %35 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %36 = bitcast %"class.gfx::Range"* %35 to i64*
  store i64 -1, i64* %36, align 8
  br label %42

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %39 = bitcast %"class.gfx::Range"* %1 to i64*
  %40 = bitcast %"class.gfx::Range"* %38 to i64*
  %41 = load i64, i64* %39, align 4
  store i64 %41, i64* %40, align 8
  br label %42

42:                                               ; preds = %37, %34
  %43 = phi %"class.gfx::Range"* [ %1, %37 ], [ %35, %34 ]
  tail call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %9, %"class.gfx::Range"* dereferenceable(8) %43) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"*, %"class.views::internal::Edit"*) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"class.views::internal::Edit"* %1 to i64
  tail call void @_ZN5views14TextfieldModel16ClearRedoHistoryEv(%"class.views::TextfieldModel"* %0)
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %4, i64 0, i32 0
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %8, %6
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 1
  %12 = bitcast %"struct.std::__1::__list_node_base"* %11 to %"class.views::internal::Edit"**
  %13 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %12, align 8
  %14 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN5views8internal4Edit12MergeReplaceEPKS1_(%"class.views::internal::Edit"* %13, %"class.views::internal::Edit"* %1) #19
  br label %64

22:                                               ; preds = %17, %10
  %23 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %13, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %36

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %"class.views::internal::Edit"* %13 to i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)***
  %32 = load i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)**, i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)*, i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)** %32, i64 2
  %34 = load i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)*, i1 (%"class.views::internal::Edit"*, %"class.views::internal::Edit"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.views::internal::Edit"* %13, %"class.views::internal::Edit"* %1) #19
  br i1 %35, label %64, label %36

36:                                               ; preds = %2, %22, %26, %30
  %37 = tail call i8* @_Znwm(i64 24) #20, !noalias !100
  %38 = bitcast i8* %37 to %"struct.std::__1::__list_node_base"**
  %39 = getelementptr inbounds i8, i8* %37, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %3, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 8
  %42 = bitcast i8* %41 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %6, %"struct.std::__1::__list_node_base"** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %43, align 8
  store %"struct.std::__1::__list_node_base"* %44, %"struct.std::__1::__list_node_base"** %38, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i8**
  store i8* %37, i8** %46, align 8
  %47 = bitcast %"class.std::__1::list"* %5 to i8**
  store i8* %37, i8** %47, align 8
  %48 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %52 = icmp eq %"struct.std::__1::__list_node_base"* %51, %6
  br i1 %52, label %53, label %59

53:                                               ; preds = %36
  %54 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  store i64 %56, i64* %58, align 8
  br label %71

59:                                               ; preds = %36
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %51, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::__list_iterator"* %4 to i64*
  store i64 %62, i64* %63, align 8
  br label %71

64:                                               ; preds = %21, %30
  %65 = icmp eq %"class.views::internal::Edit"* %1, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %64
  %67 = bitcast %"class.views::internal::Edit"* %1 to void (%"class.views::internal::Edit"*)***
  %68 = load void (%"class.views::internal::Edit"*)**, void (%"class.views::internal::Edit"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %68, i64 1
  %70 = load void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %69, align 8
  tail call void %70(%"class.views::internal::Edit"* nonnull %1) #19
  br label %71

71:                                               ; preds = %59, %53, %64, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE5eraseEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %3
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp ult i64 %14, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %17) #18
  unreachable

18:                                               ; preds = %13
  switch i64 %2, label %29 [
    i64 -1, label %19
    i64 0, label %370
  ]

19:                                               ; preds = %18
  br i1 %7, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds i16, i16* %22, i64 %1
  store i16 0, i16* %23, align 2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %24, align 8
  br label %370

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %27 = getelementptr inbounds i16, i16* %26, i64 %1
  store i16 0, i16* %27, align 2
  %28 = trunc i64 %1 to i8
  store i8 %28, i8* %5, align 1
  br label %370

29:                                               ; preds = %18
  br i1 %7, label %30, label %35

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %38

35:                                               ; preds = %29
  %36 = zext i8 %6 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %32, %30 ], [ %36, %35 ]
  %40 = phi i16* [ %34, %30 ], [ %37, %35 ]
  %41 = sub i64 %39, %1
  %42 = icmp ult i64 %41, %2
  %43 = select i1 %42, i64 %41, i64 %2
  %44 = sub i64 %41, %43
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %360, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds i16, i16* %40, i64 %1
  %48 = getelementptr inbounds i16, i16* %47, i64 %43
  %49 = icmp sgt i64 %43, 0
  br i1 %49, label %50, label %194

50:                                               ; preds = %46
  %51 = icmp ult i64 %44, 16
  br i1 %51, label %141, label %52

52:                                               ; preds = %50
  %53 = sub i64 %39, %43
  %54 = getelementptr i16, i16* %40, i64 %53
  %55 = getelementptr i16, i16* %40, i64 %39
  %56 = icmp ult i16* %47, %55
  %57 = icmp ult i16* %48, %54
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %52
  %60 = and i64 %44, -16
  %61 = sub i64 %44, %60
  %62 = getelementptr i16, i16* %48, i64 %60
  %63 = getelementptr i16, i16* %47, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %48, i64 %72
  %75 = getelementptr i16, i16* %47, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !103
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !103
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !106, !noalias !103
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !106, !noalias !103
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %48, i64 %84
  %86 = getelementptr i16, i16* %47, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !103
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !103
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !106, !noalias !103
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !106, !noalias !103
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %48, i64 %95
  %97 = getelementptr i16, i16* %47, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !103
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !103
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !106, !noalias !103
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !106, !noalias !103
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %48, i64 %106
  %108 = getelementptr i16, i16* %47, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !103
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !103
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !106, !noalias !103
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !106, !noalias !103
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !108

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %48, i64 %124
  %127 = getelementptr i16, i16* %47, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !103
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !103
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !106, !noalias !103
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !106, !noalias !103
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !109

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %44, %60
  br i1 %140, label %360, label %141

141:                                              ; preds = %139, %52, %50
  %142 = phi i64 [ %44, %52 ], [ %44, %50 ], [ %61, %139 ]
  %143 = phi i16* [ %48, %52 ], [ %48, %50 ], [ %62, %139 ]
  %144 = phi i16* [ %47, %52 ], [ %47, %50 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !110

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %360, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %360, label %164, !llvm.loop !111

194:                                              ; preds = %46
  %195 = icmp slt i64 %43, 0
  br i1 %195, label %196, label %360

196:                                              ; preds = %194
  %197 = getelementptr inbounds i16, i16* %48, i64 %44
  %198 = getelementptr inbounds i16, i16* %47, i64 %44
  %199 = icmp ult i64 %44, 16
  br i1 %199, label %307, label %200

200:                                              ; preds = %196
  %201 = add i64 %39, -1
  %202 = sub i64 %201, %1
  %203 = sub i64 %202, %43
  %204 = sub i64 %201, %43
  %205 = getelementptr i16, i16* %40, i64 %204
  %206 = ptrtoint i16* %205 to i64
  %207 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %203, i64 2)
  %208 = extractvalue { i64, i1 } %207, 0
  %209 = extractvalue { i64, i1 } %207, 1
  %210 = icmp ugt i64 %208, %206
  %211 = or i1 %210, %209
  %212 = add i64 %39, -1
  %213 = getelementptr i16, i16* %40, i64 %212
  %214 = ptrtoint i16* %213 to i64
  %215 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %203, i64 2)
  %216 = extractvalue { i64, i1 } %215, 0
  %217 = extractvalue { i64, i1 } %215, 1
  %218 = icmp ugt i64 %216, %214
  %219 = or i1 %218, %217
  %220 = or i1 %211, %219
  br i1 %220, label %307, label %221

221:                                              ; preds = %200
  %222 = add i64 %43, %1
  %223 = getelementptr i16, i16* %40, i64 %222
  %224 = icmp ult i16* %47, %197
  %225 = icmp ult i16* %223, %198
  %226 = and i1 %224, %225
  br i1 %226, label %307, label %227

227:                                              ; preds = %221
  %228 = and i64 %44, -16
  %229 = sub i64 %44, %228
  %230 = sub i64 0, %228
  %231 = getelementptr i16, i16* %197, i64 %230
  %232 = sub i64 0, %228
  %233 = getelementptr i16, i16* %198, i64 %232
  %234 = add i64 %228, -16
  %235 = lshr exact i64 %234, 4
  %236 = add nuw nsw i64 %235, 1
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %234, 0
  br i1 %238, label %285, label %239

239:                                              ; preds = %227
  %240 = sub nuw nsw i64 %236, %237
  %241 = getelementptr i16, i16* %197, i64 -1
  %242 = getelementptr i16, i16* %198, i64 -1
  %243 = getelementptr i16, i16* %197, i64 -1
  %244 = getelementptr i16, i16* %198, i64 -1
  br label %245

245:                                              ; preds = %245, %239
  %246 = phi i64 [ 0, %239 ], [ %280, %245 ]
  %247 = phi i64 [ %240, %239 ], [ %281, %245 ]
  %248 = sub i64 0, %246
  %249 = sub i64 0, %246
  %250 = getelementptr inbounds i16, i16* %242, i64 %249
  %251 = getelementptr inbounds i16, i16* %241, i64 %248
  %252 = getelementptr inbounds i16, i16* %251, i64 -7
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !112
  %255 = getelementptr inbounds i16, i16* %251, i64 -8
  %256 = getelementptr inbounds i16, i16* %255, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !112
  %259 = getelementptr inbounds i16, i16* %250, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %260, align 2, !alias.scope !115, !noalias !112
  %261 = getelementptr inbounds i16, i16* %250, i64 -8
  %262 = getelementptr inbounds i16, i16* %261, i64 -7
  %263 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %263, align 2, !alias.scope !115, !noalias !112
  %264 = sub nuw nsw i64 -16, %246
  %265 = sub nuw nsw i64 -16, %246
  %266 = getelementptr inbounds i16, i16* %244, i64 %265
  %267 = getelementptr inbounds i16, i16* %243, i64 %264
  %268 = getelementptr inbounds i16, i16* %267, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !112
  %271 = getelementptr inbounds i16, i16* %267, i64 -8
  %272 = getelementptr inbounds i16, i16* %271, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !112
  %275 = getelementptr inbounds i16, i16* %266, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %276, align 2, !alias.scope !115, !noalias !112
  %277 = getelementptr inbounds i16, i16* %266, i64 -8
  %278 = getelementptr inbounds i16, i16* %277, i64 -7
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %279, align 2, !alias.scope !115, !noalias !112
  %280 = add i64 %246, 32
  %281 = add i64 %247, -2
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %245, !llvm.loop !117

283:                                              ; preds = %245
  %284 = sub nuw nsw i64 -32, %246
  br label %285

285:                                              ; preds = %283, %227
  %286 = phi i64 [ 0, %227 ], [ %284, %283 ]
  %287 = icmp eq i64 %237, 0
  br i1 %287, label %305, label %288

288:                                              ; preds = %285
  %289 = getelementptr i16, i16* %197, i64 -1
  %290 = getelementptr i16, i16* %198, i64 -1
  %291 = getelementptr inbounds i16, i16* %290, i64 %286
  %292 = getelementptr inbounds i16, i16* %289, i64 %286
  %293 = getelementptr inbounds i16, i16* %292, i64 -7
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !112
  %296 = getelementptr inbounds i16, i16* %292, i64 -8
  %297 = getelementptr inbounds i16, i16* %296, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !112
  %300 = getelementptr inbounds i16, i16* %291, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %301, align 2, !alias.scope !115, !noalias !112
  %302 = getelementptr inbounds i16, i16* %291, i64 -8
  %303 = getelementptr inbounds i16, i16* %302, i64 -7
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %304, align 2, !alias.scope !115, !noalias !112
  br label %305

305:                                              ; preds = %285, %288
  %306 = icmp eq i64 %44, %228
  br i1 %306, label %360, label %307

307:                                              ; preds = %305, %221, %200, %196
  %308 = phi i64 [ %44, %221 ], [ %44, %200 ], [ %44, %196 ], [ %229, %305 ]
  %309 = phi i16* [ %197, %221 ], [ %197, %200 ], [ %197, %196 ], [ %231, %305 ]
  %310 = phi i16* [ %198, %221 ], [ %198, %200 ], [ %198, %196 ], [ %233, %305 ]
  %311 = add i64 %308, -1
  %312 = and i64 %308, 7
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %325, label %314

314:                                              ; preds = %307, %314
  %315 = phi i64 [ %322, %314 ], [ %308, %307 ]
  %316 = phi i16* [ %320, %314 ], [ %309, %307 ]
  %317 = phi i16* [ %319, %314 ], [ %310, %307 ]
  %318 = phi i64 [ %323, %314 ], [ %312, %307 ]
  %319 = getelementptr inbounds i16, i16* %317, i64 -1
  %320 = getelementptr inbounds i16, i16* %316, i64 -1
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = add i64 %315, -1
  %323 = add i64 %318, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %314, !llvm.loop !118

325:                                              ; preds = %314, %307
  %326 = phi i64 [ %308, %307 ], [ %322, %314 ]
  %327 = phi i16* [ %309, %307 ], [ %320, %314 ]
  %328 = phi i16* [ %310, %307 ], [ %319, %314 ]
  %329 = icmp ult i64 %311, 7
  br i1 %329, label %360, label %330

330:                                              ; preds = %325, %330
  %331 = phi i64 [ %358, %330 ], [ %326, %325 ]
  %332 = phi i16* [ %356, %330 ], [ %327, %325 ]
  %333 = phi i16* [ %355, %330 ], [ %328, %325 ]
  %334 = getelementptr inbounds i16, i16* %333, i64 -1
  %335 = getelementptr inbounds i16, i16* %332, i64 -1
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %333, i64 -2
  %338 = getelementptr inbounds i16, i16* %332, i64 -2
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %333, i64 -3
  %341 = getelementptr inbounds i16, i16* %332, i64 -3
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %333, i64 -4
  %344 = getelementptr inbounds i16, i16* %332, i64 -4
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %333, i64 -5
  %347 = getelementptr inbounds i16, i16* %332, i64 -5
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %333, i64 -6
  %350 = getelementptr inbounds i16, i16* %332, i64 -6
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %333, i64 -7
  %353 = getelementptr inbounds i16, i16* %332, i64 -7
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %333, i64 -8
  %356 = getelementptr inbounds i16, i16* %332, i64 -8
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = add i64 %331, -8
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %330, !llvm.loop !119

360:                                              ; preds = %325, %330, %159, %164, %305, %139, %194, %38
  %361 = sub i64 %39, %43
  %362 = load i8, i8* %5, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %361, i64* %365, align 8
  br label %368

366:                                              ; preds = %360
  %367 = trunc i64 %361 to i8
  store i8 %367, i8* %5, align 1
  br label %368

368:                                              ; preds = %366, %364
  %369 = getelementptr inbounds i16, i16* %40, i64 %361
  store i16 0, i16* %369, align 2
  br label %370

370:                                              ; preds = %18, %368, %25, %20
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5views14TextfieldModel23GetCompositionTextRangeEPN3gfx5RangeE(%"class.views::TextfieldModel"* nocapture readonly, %"class.gfx::Range"* nocapture) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %4 = bitcast %"class.gfx::Range"* %3 to i64*
  %5 = bitcast %"class.gfx::Range"* %1 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel22ExecuteAndRecordInsertERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %4, align 8
  %6 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %5, i64 0, i32 11, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = tail call i8* @_Znwm(i64 144) #20
  %10 = bitcast i8* %9 to %"class.views::internal::InsertEdit"*
  tail call void @_ZN5views8internal10InsertEditC2EbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEm(%"class.views::internal::InsertEdit"* nonnull %10, i1 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %8) #19
  %11 = bitcast i8* %9 to %"class.views::internal::Edit"*
  tail call void @_ZN5views8internal4Edit4RedoEPNS_14TextfieldModelE(%"class.views::internal::Edit"* nonnull %11, %"class.views::TextfieldModel"* %0)
  tail call void @_ZN5views14TextfieldModel21AddOrMergeEditHistoryENSt3__110unique_ptrINS_8internal4EditENS1_14default_deleteIS4_EEEE(%"class.views::TextfieldModel"* %0, %"class.views::internal::Edit"* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel32ExecuteAndRecordReplaceSelectionENS_8internal9MergeTypeERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.views::TextfieldModel"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #19
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %10, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %4, %"class.gfx::RenderText"* %12) #19
  %13 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %10, align 8
  %14 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %13, i64 0, i32 11, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #19
  %18 = bitcast %"class.gfx::Range"** %9 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %109, label %25

25:                                               ; preds = %3
  %26 = icmp ugt i64 %23, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %28) #18
  unreachable

29:                                               ; preds = %25
  %30 = call i8* @_Znwm(i64 %22) #20
  %31 = bitcast i8* %30 to %"class.gfx::Range"*
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %33 = bitcast %"class.gfx::Range"** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %31, i64 %23
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %35, %"class.gfx::Range"** %36, align 8
  %37 = bitcast %"class.gfx::Range"** %32 to i64*
  %38 = ptrtoint i8* %30 to i64
  %39 = icmp sgt i64 %22, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %29
  %41 = lshr exact i64 %22, 3
  %42 = inttoptr i64 %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %42, i64 %22, i1 false) #19
  %43 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %31, i64 %41
  %44 = ptrtoint %"class.gfx::Range"* %43 to i64
  br label %45

45:                                               ; preds = %29, %40
  %46 = phi i64 [ %44, %40 ], [ %38, %29 ]
  store i64 %46, i64* %37, align 8
  %47 = inttoptr i64 %46 to %"class.gfx::Range"*
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %49 = icmp eq %"class.gfx::Range"* %31, %47
  br i1 %49, label %100, label %50

50:                                               ; preds = %45
  %51 = icmp ne i32 %15, 0
  %52 = icmp eq i32 %15, 0
  br label %53

53:                                               ; preds = %88, %50
  %54 = phi i64 [ 0, %50 ], [ %97, %88 ]
  %55 = phi %"class.gfx::Range"* [ %31, %50 ], [ %98, %88 ]
  %56 = bitcast %"class.gfx::Range"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %58, %60
  %62 = select i1 %61, i32 %58, i32 %60
  %63 = icmp ugt i32 %58, %60
  %64 = select i1 %63, i32 %58, i32 %60
  %65 = icmp ugt i32 %64, %15
  %66 = select i1 %65, i32 %15, i32 %64
  %67 = icmp ult i32 %62, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %53
  %69 = and i64 %59, %57
  %70 = icmp eq i64 %69, 4294967295
  %71 = icmp ne i32 %62, 0
  %72 = or i1 %70, %71
  %73 = icmp ult i32 %64, %15
  %74 = or i1 %73, %72
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = icmp ne i32 %64, %15
  %77 = icmp eq i32 %58, %60
  %78 = xor i1 %51, %77
  %79 = or i1 %78, %76
  br i1 %79, label %88, label %80

80:                                               ; preds = %75, %68
  %81 = or i1 %70, %65
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = icmp ne i32 %64, %15
  %84 = icmp ne i32 %58, %60
  %85 = xor i1 %52, %84
  %86 = or i1 %85, %83
  br i1 %86, label %88, label %87

87:                                               ; preds = %82, %80
  br label %88

88:                                               ; preds = %87, %82, %75, %53
  %89 = phi i32 [ -1, %87 ], [ %62, %53 ], [ 0, %75 ], [ %62, %82 ]
  %90 = phi i32 [ -1, %87 ], [ %66, %53 ], [ %66, %75 ], [ %64, %82 ]
  %91 = icmp ugt i32 %89, %90
  %92 = select i1 %91, i32 %89, i32 %90
  %93 = icmp ult i32 %89, %90
  %94 = select i1 %93, i32 %89, i32 %90
  %95 = sub i32 %92, %94
  %96 = zext i32 %95 to i64
  %97 = add i64 %54, %96
  %98 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %55, i64 1
  %99 = icmp eq %"class.gfx::Range"* %98, %47
  br i1 %99, label %100, label %53

100:                                              ; preds = %88, %45
  %101 = phi i64 [ 0, %45 ], [ %97, %88 ]
  %102 = sub i64 %16, %101
  %103 = ptrtoint i8* %30 to i64
  %104 = bitcast %"class.gfx::Range"** %48 to i64*
  store i64 %103, i64* %104, align 8
  call void @_ZdlPv(i8* nonnull %30) #20
  %105 = load i64, i64* %18, align 8
  %106 = load i64, i64* %20, align 8
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 3
  br label %109

109:                                              ; preds = %3, %100
  %110 = phi i64 [ %102, %100 ], [ %16, %3 ]
  %111 = phi i64 [ %108, %100 ], [ 0, %3 ]
  %112 = phi i64 [ %107, %100 ], [ 0, %3 ]
  %113 = phi i64 [ %106, %100 ], [ %21, %3 ]
  %114 = phi i64 [ %105, %100 ], [ %19, %3 ]
  %115 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %115, i64 0, i32 1, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = zext i8 %117 to i64
  %122 = select i1 %118, i64 %120, i64 %121
  %123 = add i64 %122, %110
  %124 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 24, i1 false) #19
  %125 = icmp eq i64 %112, 0
  br i1 %125, label %149, label %126

126:                                              ; preds = %109
  %127 = icmp ugt i64 %111, 2305843009213693951
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %129) #18
  unreachable

130:                                              ; preds = %126
  %131 = call i8* @_Znwm(i64 %112) #20
  %132 = bitcast i8* %131 to %"class.gfx::Range"*
  %133 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %134 = bitcast %"class.gfx::Range"** %133 to i8**
  store i8* %131, i8** %134, align 8
  %135 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %131, i8** %135, align 8
  %136 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %132, i64 %111
  %137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %136, %"class.gfx::Range"** %137, align 8
  %138 = bitcast %"class.gfx::Range"** %133 to i64*
  %139 = ptrtoint i8* %131 to i64
  %140 = sub i64 %114, %113
  %141 = icmp sgt i64 %140, 0
  br i1 %141, label %142, label %147

142:                                              ; preds = %130
  %143 = lshr exact i64 %140, 3
  %144 = inttoptr i64 %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %131, i8* align 4 %144, i64 %140, i1 false) #19
  %145 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %132, i64 %143
  %146 = ptrtoint %"class.gfx::Range"* %145 to i64
  br label %147

147:                                              ; preds = %142, %130
  %148 = phi i64 [ %146, %142 ], [ %139, %130 ]
  store i64 %148, i64* %138, align 8
  br label %149

149:                                              ; preds = %109, %147
  call void @_ZN5views14TextfieldModel23ExecuteAndRecordReplaceENS_8internal9MergeTypeENSt3__16vectorIN3gfx5RangeENS3_9allocatorIS6_EEEEmRKNS3_12basic_stringIDsNS3_11char_traitsIDsEENS7_IDsEEEEm(%"class.views::TextfieldModel"* %0, i32 %1, %"class.std::__1::vector"* nonnull %6, i64 %123, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %110)
  %150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %151 = load %"class.gfx::Range"*, %"class.gfx::Range"** %150, align 8
  %152 = icmp eq %"class.gfx::Range"* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint %"class.gfx::Range"* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %156 = bitcast %"class.gfx::Range"** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast %"class.gfx::Range"* %151 to i8*
  call void @_ZdlPv(i8* %157) #20
  br label %158

158:                                              ; preds = %149, %153
  %159 = load %"class.gfx::Range"*, %"class.gfx::Range"** %8, align 8
  %160 = icmp eq %"class.gfx::Range"* %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %158
  %162 = ptrtoint %"class.gfx::Range"* %159 to i64
  store i64 %162, i64* %18, align 8
  %163 = bitcast %"class.gfx::Range"* %159 to i8*
  call void @_ZdlPv(i8* %163) #20
  br label %164

164:                                              ; preds = %158, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel19ReplaceTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.gfx::Range", align 4
  %6 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @_ZN5views14TextfieldModel21CancelCompositionTextEv(%"class.views::TextfieldModel"* %0)
  br label %58

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #19
  %17 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %16, align 8
  call void @_ZNK3gfx10RenderText16GetAllSelectionsEv(%"class.std::__1::vector"* nonnull sret %4, %"class.gfx::RenderText"* %17) #19
  %18 = load %"class.gfx::Range"*, %"class.gfx::Range"** %14, align 8
  %19 = load %"class.gfx::Range"*, %"class.gfx::Range"** %15, align 8
  %20 = icmp eq %"class.gfx::Range"* %18, %19
  br i1 %20, label %31, label %23

21:                                               ; preds = %23
  %22 = icmp eq %"class.gfx::Range"* %30, %19
  br i1 %22, label %31, label %23

23:                                               ; preds = %12, %21
  %24 = phi %"class.gfx::Range"* [ %30, %21 ], [ %18, %12 ]
  %25 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  %30 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %24, i64 1
  br i1 %29, label %21, label %31

31:                                               ; preds = %23, %21, %12
  %32 = phi i1 [ false, %12 ], [ true, %23 ], [ false, %21 ]
  %33 = icmp eq %"class.gfx::Range"* %18, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = ptrtoint %"class.gfx::Range"* %18 to i64
  %36 = bitcast %"class.gfx::Range"** %15 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.gfx::Range"* %18 to i8*
  call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #19
  br i1 %32, label %58, label %39

39:                                               ; preds = %38
  %40 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %16, align 8
  %41 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %40, i64 0, i32 11, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = call i64 @_ZNK3gfx10RenderText23IndexOfAdjacentGraphemeEmNS_22LogicalCursorDirectionE(%"class.gfx::RenderText"* %40, i64 %43, i32 1) #19
  %45 = load i32, i32* %41, align 4
  %46 = zext i32 %45 to i64
  %47 = icmp eq i64 %44, %46
  %48 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %16, align 8
  br i1 %47, label %49, label %52

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %40, i64 0, i32 11
  %51 = call zeroext i1 @_ZN3gfx10RenderText12SetSelectionERKNS_14SelectionModelE(%"class.gfx::RenderText"* %48, %"class.gfx::SelectionModel"* dereferenceable(40) %50) #19
  br label %58

52:                                               ; preds = %39
  %53 = bitcast %"class.gfx::Range"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #19
  %54 = trunc i64 %44 to i32
  %55 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %5, i64 0, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %5, i64 0, i32 1
  store i32 %45, i32* %56, align 4
  %57 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %48, %"class.gfx::Range"* nonnull dereferenceable(8) %5, i1 zeroext true) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #19
  br label %58

58:                                               ; preds = %49, %52, %38, %11
  call void @_ZN5views14TextfieldModel18InsertTextInternalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.views::TextfieldModel"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel16ClearRedoHistoryEv(%"class.views::TextfieldModel"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %4 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0
  %6 = icmp eq %"struct.std::__1::__list_node_base"* %4, %5
  br i1 %6, label %84, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %9, %5
  br i1 %10, label %11, label %47

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %45, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %4, i64 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = bitcast %"struct.std::__1::__list_node_base"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64**
  %28 = load i64*, i64** %27, align 8
  store i64 %26, i64* %28, align 8
  store i64 0, i64* %12, align 8
  br label %29

29:                                               ; preds = %15, %42
  %30 = phi %"struct.std::__1::__list_node_base"* [ %32, %42 ], [ %4, %15 ]
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__list_node_base"* %33 to %"class.views::internal::Edit"**
  %35 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %34, align 8
  store %"class.views::internal::Edit"* null, %"class.views::internal::Edit"** %34, align 8
  %36 = icmp eq %"class.views::internal::Edit"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.views::internal::Edit"* %35 to void (%"class.views::internal::Edit"*)***
  %39 = load void (%"class.views::internal::Edit"*)**, void (%"class.views::internal::Edit"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %39, i64 1
  %41 = load void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %40, align 8
  tail call void %41(%"class.views::internal::Edit"* nonnull %35) #19
  br label %42

42:                                               ; preds = %37, %29
  %43 = bitcast %"struct.std::__1::__list_node_base"* %30 to i8*
  tail call void @_ZdlPv(i8* %43) #20
  %44 = icmp eq %"struct.std::__1::__list_node_base"* %32, %5
  br i1 %44, label %45, label %29

45:                                               ; preds = %42, %11
  %46 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 5, i32 0
  store %"struct.std::__1::__list_node_base"* %5, %"struct.std::__1::__list_node_base"** %46, align 8
  br label %84

47:                                               ; preds = %7
  %48 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 1
  %49 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__list_node_base"* %49, %5
  br i1 %50, label %84, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 0
  %58 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 1
  %60 = bitcast %"struct.std::__1::__list_node_base"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = bitcast %"struct.std::__1::__list_node_base"* %49 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64**
  %64 = load i64*, i64** %63, align 8
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br label %66

66:                                               ; preds = %81, %51
  %67 = phi %"struct.std::__1::__list_node_base"* [ %49, %51 ], [ %69, %81 ]
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = load i64, i64* %65, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %65, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 1
  %73 = bitcast %"struct.std::__1::__list_node_base"* %72 to %"class.views::internal::Edit"**
  %74 = load %"class.views::internal::Edit"*, %"class.views::internal::Edit"** %73, align 8
  store %"class.views::internal::Edit"* null, %"class.views::internal::Edit"** %73, align 8
  %75 = icmp eq %"class.views::internal::Edit"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %66
  %77 = bitcast %"class.views::internal::Edit"* %74 to void (%"class.views::internal::Edit"*)***
  %78 = load void (%"class.views::internal::Edit"*)**, void (%"class.views::internal::Edit"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %78, i64 1
  %80 = load void (%"class.views::internal::Edit"*)*, void (%"class.views::internal::Edit"*)** %79, align 8
  tail call void %80(%"class.views::internal::Edit"* nonnull %74) #19
  br label %81

81:                                               ; preds = %76, %66
  %82 = bitcast %"struct.std::__1::__list_node_base"* %67 to i8*
  tail call void @_ZdlPv(i8* %82) #20
  %83 = icmp eq %"struct.std::__1::__list_node_base"* %69, %5
  br i1 %83, label %84, label %66

84:                                               ; preds = %81, %47, %1, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.views::internal::DeleteEdit"* @_ZNSt3__111make_uniqueIN5views8internal10DeleteEditEJRbRNS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS9_ISB_EEEERNS5_ImNS9_ImEEEERKN3gfx5RangeERKNS5_ISJ_NS9_ISJ_EEEERKbRmEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i8* dereferenceable(1), %"class.std::__1::vector.113"* dereferenceable(24), %"class.std::__1::vector.120"* dereferenceable(24), %"class.gfx::Range"* dereferenceable(8), %"class.std::__1::vector"* dereferenceable(24), i8* dereferenceable(1), i64* dereferenceable(8)) local_unnamed_addr #11 comdat {
  %8 = alloca %"class.std::__1::vector.113", align 8
  %9 = alloca %"class.std::__1::vector.120", align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = tail call i8* @_Znwm(i64 144) #20
  %12 = bitcast i8* %11 to %"class.views::internal::DeleteEdit"*
  %13 = load i8, i8* %0, align 1, !range !68
  %14 = icmp ne i8 %13, 0
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"* nonnull %8, %"class.std::__1::vector.113"* dereferenceable(24) %1)
  %15 = bitcast %"class.std::__1::vector.120"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #19
  %16 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %2, i64 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.120"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %7
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.120"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #18
  unreachable

28:                                               ; preds = %24
  %29 = call i8* @_Znwm(i64 %21) #20
  %30 = bitcast i8* %29 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %9, i64 0, i32 0, i32 1
  %32 = bitcast i64** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector.120"* %9 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds i64, i64* %30, i64 %22
  %35 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %34, i64** %35, align 8
  %36 = bitcast i64** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp sgt i64 %21, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %28
  %40 = lshr exact i64 %21, 3
  %41 = inttoptr i64 %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %41, i64 %21, i1 false) #19
  %42 = getelementptr inbounds i64, i64* %30, i64 %40
  %43 = ptrtoint i64* %42 to i64
  br label %44

44:                                               ; preds = %39, %28
  %45 = phi i64 [ %43, %39 ], [ %37, %28 ]
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %7, %44
  %47 = bitcast %"class.gfx::Range"* %3 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #19
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %51 = bitcast %"class.gfx::Range"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector"* %4 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %80, label %58

58:                                               ; preds = %46
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %61) #18
  unreachable

62:                                               ; preds = %58
  %63 = call i8* @_Znwm(i64 %55) #20
  %64 = bitcast i8* %63 to %"class.gfx::Range"*
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %66 = bitcast %"class.gfx::Range"** %65 to i8**
  store i8* %63, i8** %66, align 8
  %67 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %63, i8** %67, align 8
  %68 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %64, i64 %56
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %68, %"class.gfx::Range"** %69, align 8
  %70 = bitcast %"class.gfx::Range"** %65 to i64*
  %71 = ptrtoint i8* %63 to i64
  %72 = icmp sgt i64 %55, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %62
  %74 = lshr exact i64 %55, 3
  %75 = inttoptr i64 %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 %75, i64 %55, i1 false) #19
  %76 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %64, i64 %74
  %77 = ptrtoint %"class.gfx::Range"* %76 to i64
  br label %78

78:                                               ; preds = %73, %62
  %79 = phi i64 [ %77, %73 ], [ %71, %62 ]
  store i64 %79, i64* %70, align 8
  br label %80

80:                                               ; preds = %46, %78
  %81 = load i8, i8* %5, align 1, !range !68
  %82 = icmp ne i8 %81, 0
  %83 = load i64, i64* %6, align 8
  call void @_ZN5views8internal10DeleteEditC2EbNSt3__16vectorINS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS7_IS9_EEEENS3_ImNS7_ImEEEEN3gfx5RangeENS3_ISF_NS7_ISF_EEEEbm(%"class.views::internal::DeleteEdit"* nonnull %12, i1 zeroext %14, %"class.std::__1::vector.113"* nonnull %8, %"class.std::__1::vector.120"* nonnull %9, i64 %48, %"class.std::__1::vector"* nonnull %10, i1 zeroext %82, i64 %83)
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %85 = load %"class.gfx::Range"*, %"class.gfx::Range"** %84, align 8
  %86 = icmp eq %"class.gfx::Range"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %80
  %88 = ptrtoint %"class.gfx::Range"* %85 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %90 = bitcast %"class.gfx::Range"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast %"class.gfx::Range"* %85 to i8*
  call void @_ZdlPv(i8* %91) #20
  br label %92

92:                                               ; preds = %80, %87
  %93 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %9, i64 0, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = icmp eq i64* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i64* %94 to i64
  %98 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %9, i64 0, i32 0, i32 1
  %99 = bitcast i64** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast i64* %94 to i8*
  call void @_ZdlPv(i8* %100) #20
  br label %101

101:                                              ; preds = %92, %96
  %102 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %8, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %102, align 8
  %104 = icmp eq %"class.std::__1::basic_string"* %103, null
  br i1 %104, label %127, label %105

105:                                              ; preds = %101
  %106 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  %107 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %8, i64 0, i32 0, i32 1
  %108 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %107, align 8
  %109 = icmp eq %"class.std::__1::basic_string"* %108, %103
  br i1 %109, label %125, label %110

110:                                              ; preds = %105, %120
  %111 = phi %"class.std::__1::basic_string"* [ %112, %120 ], [ %108, %105 ]
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 -1
  %113 = bitcast %"class.std::__1::basic_string"* %112 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %110
  %118 = bitcast %"class.std::__1::basic_string"* %112 to i8**
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #20
  br label %120

120:                                              ; preds = %117, %110
  %121 = icmp eq %"class.std::__1::basic_string"* %112, %103
  br i1 %121, label %122, label %110

122:                                              ; preds = %120
  %123 = bitcast %"class.std::__1::vector.113"* %8 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %105
  %126 = phi i8* [ %124, %122 ], [ %106, %105 ]
  store %"class.std::__1::basic_string"* %103, %"class.std::__1::basic_string"** %107, align 8
  call void @_ZdlPv(i8* %126) #20
  br label %127

127:                                              ; preds = %101, %125
  ret %"class.views::internal::DeleteEdit"* %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.views::internal::ReplaceEdit"* @_ZNSt3__111make_uniqueIN5views8internal11ReplaceEditEJRNS2_9MergeTypeERNS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENSA_ISC_EEEERNS6_ImNSA_ImEEEERKN3gfx5RangeERKNS6_ISK_NSA_ISK_EEEERKbRmRKSC_ST_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.std::__1::vector.113"* dereferenceable(24), %"class.std::__1::vector.120"* dereferenceable(24), %"class.gfx::Range"* dereferenceable(8), %"class.std::__1::vector"* dereferenceable(24), i8* dereferenceable(1), i64* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), i64* dereferenceable(8)) local_unnamed_addr #11 comdat {
  %10 = alloca %"class.std::__1::vector.113", align 8
  %11 = alloca %"class.std::__1::vector.120", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = tail call i8* @_Znwm(i64 144) #20
  %14 = bitcast i8* %13 to %"class.views::internal::ReplaceEdit"*
  %15 = load i32, i32* %0, align 4
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"* nonnull %10, %"class.std::__1::vector.113"* dereferenceable(24) %1)
  %16 = bitcast %"class.std::__1::vector.120"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #19
  %17 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %2, i64 0, i32 0, i32 1
  %18 = bitcast i64** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.120"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %9
  %26 = icmp ugt i64 %23, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.120"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %28) #18
  unreachable

29:                                               ; preds = %25
  %30 = call i8* @_Znwm(i64 %22) #20
  %31 = bitcast i8* %30 to i64*
  %32 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %11, i64 0, i32 0, i32 1
  %33 = bitcast i64** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector.120"* %11 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds i64, i64* %31, i64 %23
  %36 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %35, i64** %36, align 8
  %37 = bitcast i64** %32 to i64*
  %38 = ptrtoint i8* %30 to i64
  %39 = icmp sgt i64 %22, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %29
  %41 = lshr exact i64 %22, 3
  %42 = inttoptr i64 %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %42, i64 %22, i1 false) #19
  %43 = getelementptr inbounds i64, i64* %31, i64 %41
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %40, %29
  %46 = phi i64 [ %44, %40 ], [ %38, %29 ]
  store i64 %46, i64* %37, align 8
  br label %47

47:                                               ; preds = %9, %45
  %48 = bitcast %"class.gfx::Range"* %3 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #19
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %52 = bitcast %"class.gfx::Range"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector"* %4 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %81, label %59

59:                                               ; preds = %47
  %60 = icmp ugt i64 %57, 2305843009213693951
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %62) #18
  unreachable

63:                                               ; preds = %59
  %64 = call i8* @_Znwm(i64 %56) #20
  %65 = bitcast i8* %64 to %"class.gfx::Range"*
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %67 = bitcast %"class.gfx::Range"** %66 to i8**
  store i8* %64, i8** %67, align 8
  %68 = bitcast %"class.std::__1::vector"* %12 to i8**
  store i8* %64, i8** %68, align 8
  %69 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %65, i64 %57
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %69, %"class.gfx::Range"** %70, align 8
  %71 = bitcast %"class.gfx::Range"** %66 to i64*
  %72 = ptrtoint i8* %64 to i64
  %73 = icmp sgt i64 %56, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %63
  %75 = lshr exact i64 %56, 3
  %76 = inttoptr i64 %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 %76, i64 %56, i1 false) #19
  %77 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %65, i64 %75
  %78 = ptrtoint %"class.gfx::Range"* %77 to i64
  br label %79

79:                                               ; preds = %74, %63
  %80 = phi i64 [ %78, %74 ], [ %72, %63 ]
  store i64 %80, i64* %71, align 8
  br label %81

81:                                               ; preds = %47, %79
  %82 = load i8, i8* %5, align 1, !range !68
  %83 = icmp ne i8 %82, 0
  %84 = load i64, i64* %6, align 8
  %85 = load i64, i64* %8, align 8
  call void @_ZN5views8internal11ReplaceEditC2ENS0_9MergeTypeENSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS4_ImNS8_ImEEEEN3gfx5RangeENS4_ISG_NS8_ISG_EEEEbmRKSA_m(%"class.views::internal::ReplaceEdit"* nonnull %14, i32 %15, %"class.std::__1::vector.113"* nonnull %10, %"class.std::__1::vector.120"* nonnull %11, i64 %49, %"class.std::__1::vector"* nonnull %12, i1 zeroext %83, i64 %84, %"class.std::__1::basic_string"* dereferenceable(24) %7, i64 %85)
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %87 = load %"class.gfx::Range"*, %"class.gfx::Range"** %86, align 8
  %88 = icmp eq %"class.gfx::Range"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %81
  %90 = ptrtoint %"class.gfx::Range"* %87 to i64
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %92 = bitcast %"class.gfx::Range"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"class.gfx::Range"* %87 to i8*
  call void @_ZdlPv(i8* %93) #20
  br label %94

94:                                               ; preds = %81, %89
  %95 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %11, i64 0, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i64* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %11, i64 0, i32 0, i32 1
  %101 = bitcast i64** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i64* %96 to i8*
  call void @_ZdlPv(i8* %102) #20
  br label %103

103:                                              ; preds = %94, %98
  %104 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %10, i64 0, i32 0, i32 0
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %106 = icmp eq %"class.std::__1::basic_string"* %105, null
  br i1 %106, label %129, label %107

107:                                              ; preds = %103
  %108 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %109 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %10, i64 0, i32 0, i32 1
  %110 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %109, align 8
  %111 = icmp eq %"class.std::__1::basic_string"* %110, %105
  br i1 %111, label %127, label %112

112:                                              ; preds = %107, %122
  %113 = phi %"class.std::__1::basic_string"* [ %114, %122 ], [ %110, %107 ]
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 -1
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %115, i64 0, i32 1, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::basic_string"* %114 to i8**
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #20
  br label %122

122:                                              ; preds = %119, %112
  %123 = icmp eq %"class.std::__1::basic_string"* %114, %105
  br i1 %123, label %124, label %112

124:                                              ; preds = %122
  %125 = bitcast %"class.std::__1::vector.113"* %10 to i8**
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %124, %107
  %128 = phi i8* [ %126, %124 ], [ %108, %107 ]
  store %"class.std::__1::basic_string"* %105, %"class.std::__1::basic_string"** %109, align 8
  call void @_ZdlPv(i8* %128) #20
  br label %129

129:                                              ; preds = %103, %127
  ret %"class.views::internal::ReplaceEdit"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel10ModifyTextERKNSt3__16vectorIN3gfx5RangeENS1_9allocatorIS4_EEEERKNS2_INS1_12basic_stringIDsNS1_11char_traitsIDsEENS5_IDsEEEENS5_ISE_EEEERKNS2_ImNS5_ImEEEERKS4_S9_(%"class.views::TextfieldModel"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.113"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.120"* nocapture readonly dereferenceable(24), %"class.gfx::Range"* dereferenceable(8), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Range"*
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  %16 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %15, i64 0, i32 3
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %6
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %22, i64 24, i1 false) #19
  br label %198

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %31 = trunc i64 %27 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1
  br label %49

34:                                               ; preds = %23
  %35 = icmp ugt i64 %27, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #18
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #18
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #20
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  store i64 %48, i64* %12, align 8
  store i64 %27, i64* %11, align 8
  br label %49

49:                                               ; preds = %43, %29
  %50 = phi i16* [ %30, %29 ], [ %46, %43 ]
  %51 = add nuw nsw i64 %27, 1
  %52 = add i64 %27, 1
  %53 = icmp ult i64 %52, 16
  br i1 %53, label %143, label %54

54:                                               ; preds = %49
  %55 = add i64 %27, 1
  %56 = getelementptr i16, i16* %50, i64 %55
  %57 = getelementptr i16, i16* %25, i64 %55
  %58 = icmp ult i16* %50, %57
  %59 = icmp ult i16* %25, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %54
  %62 = and i64 %52, -16
  %63 = sub i64 %51, %62
  %64 = getelementptr i16, i16* %25, i64 %62
  %65 = getelementptr i16, i16* %50, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = getelementptr i16, i16* %50, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !120
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !120
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !123, !noalias !120
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !123, !noalias !120
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %25, i64 %86
  %88 = getelementptr i16, i16* %50, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !120
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !120
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !123, !noalias !120
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !123, !noalias !120
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %25, i64 %97
  %99 = getelementptr i16, i16* %50, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !120
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !120
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !123, !noalias !120
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !123, !noalias !120
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %25, i64 %108
  %110 = getelementptr i16, i16* %50, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !120
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !120
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !123, !noalias !120
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !123, !noalias !120
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !125

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %25, i64 %126
  %129 = getelementptr i16, i16* %50, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !120
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !120
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !123, !noalias !120
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !123, !noalias !120
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !126

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %52, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %54, %49
  %144 = phi i64 [ %51, %54 ], [ %51, %49 ], [ %63, %141 ]
  %145 = phi i16* [ %25, %54 ], [ %25, %49 ], [ %64, %141 ]
  %146 = phi i16* [ %50, %54 ], [ %50, %49 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !127

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !128

196:                                              ; preds = %161, %166, %141
  %197 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  br label %198

198:                                              ; preds = %196, %21
  %199 = phi %"class.gfx::RenderText"* [ %197, %196 ], [ %15, %21 ]
  %200 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 3
  %201 = bitcast %"class.gfx::Range"* %200 to i64*
  store i64 -1, i64* %201, align 8
  tail call void @_ZN3gfx10RenderText19SetCompositionRangeERKNS_5RangeE(%"class.gfx::RenderText"* %199, %"class.gfx::Range"* dereferenceable(8) %200) #19
  %202 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %203 = load %"class.gfx::Range"*, %"class.gfx::Range"** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %205 = load %"class.gfx::Range"*, %"class.gfx::Range"** %204, align 8
  %206 = icmp eq %"class.gfx::Range"* %203, %205
  br i1 %206, label %207, label %216

207:                                              ; preds = %216, %198
  %208 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %2, i64 0, i32 0, i32 1
  %209 = bitcast %"class.std::__1::basic_string"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.std::__1::vector.113"* %2 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = icmp eq i64 %210, %212
  br i1 %213, label %233, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %3, i64 0, i32 0, i32 0
  br label %250

216:                                              ; preds = %198, %216
  %217 = phi %"class.gfx::Range"* [ %231, %216 ], [ %203, %198 ]
  %218 = bitcast %"class.gfx::Range"* %217 to i64*
  %219 = load i64, i64* %218, align 4
  %220 = trunc i64 %219 to i32
  %221 = lshr i64 %219, 32
  %222 = trunc i64 %221 to i32
  %223 = and i64 %219, 4294967295
  %224 = icmp ugt i32 %220, %222
  %225 = select i1 %224, i64 %219, i64 %221
  %226 = icmp ult i32 %220, %222
  %227 = select i1 %226, i64 %219, i64 %221
  %228 = sub i64 %225, %227
  %229 = and i64 %228, 4294967295
  %230 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE5eraseEmm(%"class.std::__1::basic_string"* nonnull %7, i64 %223, i64 %229)
  %231 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %217, i64 1
  %232 = icmp eq %"class.gfx::Range"* %231, %205
  br i1 %232, label %207, label %216

233:                                              ; preds = %250, %207
  %234 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %234, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #19
  %235 = getelementptr inbounds %"class.views::TextfieldModel", %"class.views::TextfieldModel"* %0, i64 0, i32 1
  %236 = load %"class.views::TextfieldModel::Delegate"*, %"class.views::TextfieldModel::Delegate"** %235, align 8
  %237 = icmp eq %"class.views::TextfieldModel::Delegate"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %233
  %239 = bitcast %"class.views::TextfieldModel::Delegate"* %236 to void (%"class.views::TextfieldModel::Delegate"*)***
  %240 = load void (%"class.views::TextfieldModel::Delegate"*)**, void (%"class.views::TextfieldModel::Delegate"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %240, i64 1
  %242 = load void (%"class.views::TextfieldModel::Delegate"*)*, void (%"class.views::TextfieldModel::Delegate"*)** %241, align 8
  call void %242(%"class.views::TextfieldModel::Delegate"* nonnull %236) #19
  br label %243

243:                                              ; preds = %233, %238
  %244 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %245, %247
  %249 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  br i1 %248, label %277, label %279

250:                                              ; preds = %214, %250
  %251 = phi i64 [ %212, %214 ], [ %273, %250 ]
  %252 = phi i64 [ 0, %214 ], [ %271, %250 ]
  %253 = inttoptr i64 %251 to %"class.std::__1::basic_string"*
  %254 = load i64*, i64** %215, align 8
  %255 = getelementptr inbounds i64, i64* %254, i64 %252
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %253, i64 %252
  %258 = bitcast %"class.std::__1::basic_string"* %257 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %258, i64 0, i32 1, i32 1
  %260 = load i8, i8* %259, align 1
  %261 = icmp slt i8 %260, 0
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i16*, i16** %262, align 8
  %264 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %253, i64 %252, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.std::__1::basic_string"* %257 to i16*
  %267 = zext i8 %260 to i64
  %268 = select i1 %261, i16* %263, i16* %266
  %269 = select i1 %261, i64 %265, i64 %267
  %270 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %7, i64 %256, i16* %268, i64 %269) #19
  %271 = add nuw i64 %252, 1
  %272 = load i64, i64* %209, align 8
  %273 = load i64, i64* %211, align 8
  %274 = sub i64 %272, %273
  %275 = sdiv exact i64 %274, 24
  %276 = icmp ult i64 %271, %275
  br i1 %276, label %250, label %233

277:                                              ; preds = %243
  %278 = zext i32 %245 to i64
  call void @_ZN3gfx10RenderText17SetCursorPositionEm(%"class.gfx::RenderText"* %249, i64 %278) #19
  br label %281

279:                                              ; preds = %243
  %280 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %249, %"class.gfx::Range"* dereferenceable(8) %4, i1 zeroext true) #19
  br label %281

281:                                              ; preds = %279, %277
  %282 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %283 = load %"class.gfx::Range"*, %"class.gfx::Range"** %282, align 8
  %284 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %285 = load %"class.gfx::Range"*, %"class.gfx::Range"** %284, align 8
  %286 = icmp eq %"class.gfx::Range"* %283, %285
  br i1 %286, label %291, label %287

287:                                              ; preds = %281
  %288 = bitcast i64* %8 to i8*
  %289 = bitcast i64* %8 to i32*
  %290 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %9, i64 0, i32 1
  br label %300

291:                                              ; preds = %300, %281
  %292 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %292, i64 0, i32 1, i32 1
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %291
  %297 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %298 = load i8*, i8** %297, align 8
  call void @_ZdlPv(i8* %298) #20
  br label %299

299:                                              ; preds = %291, %296
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #19
  ret void

300:                                              ; preds = %287, %300
  %301 = phi %"class.gfx::Range"* [ %283, %287 ], [ %306, %300 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #19
  store i32 -1431655766, i32* %289, align 8
  store i32 -1431655766, i32* %290, align 4
  %302 = bitcast %"class.gfx::Range"* %301 to i64*
  %303 = load i64, i64* %302, align 4
  store i64 %303, i64* %8, align 8
  %304 = load %"class.gfx::RenderText"*, %"class.gfx::RenderText"** %13, align 8
  %305 = call zeroext i1 @_ZN3gfx10RenderText11SelectRangeERKNS_5RangeEb(%"class.gfx::RenderText"* %304, %"class.gfx::Range"* nonnull dereferenceable(8) %9, i1 zeroext false) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #19
  %306 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %301, i64 1
  %307 = icmp eq %"class.gfx::Range"* %306, %285
  br i1 %307, label %291, label %300
}

declare void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14TextfieldModel15ClearKillBufferEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 24, i1 false) #19
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !19

5:                                                ; preds = %0
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer) #19
  br label %9

9:                                                ; preds = %0, %5, %8
  %10 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZN5views12_GLOBAL__N_113GetKillBufferEvE11kill_buffer to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #19
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #20
  br label %18

18:                                               ; preds = %9, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #19
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14TextfieldModel8Delegate13OnTextChangedEv(%"class.views::TextfieldModel::Delegate"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !129
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !129
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !132, !noalias !129
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !132, !noalias !129
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !129
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !129
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !132, !noalias !129
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !132, !noalias !129
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !129
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !129
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !132, !noalias !129
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !132, !noalias !129
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !129
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !129
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !132, !noalias !129
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !132, !noalias !129
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !134

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !129
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !129
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !132, !noalias !129
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !132, !noalias !129
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !135

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !136

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !137

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #18
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #18
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #20
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !138
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !138
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !141, !noalias !138
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !141, !noalias !138
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !138
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !138
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !141, !noalias !138
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !141, !noalias !138
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !138
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !138
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !141, !noalias !138
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !141, !noalias !138
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !138
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !138
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !141, !noalias !138
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !141, !noalias !138
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !143

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !138
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !138
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !141, !noalias !138
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !141, !noalias !138
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !144

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !145

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !146

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !147
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !147
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !150, !noalias !147
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !150, !noalias !147
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !147
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !147
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !150, !noalias !147
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !150, !noalias !147
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !147
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !147
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !150, !noalias !147
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !150, !noalias !147
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !147
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !147
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !150, !noalias !147
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !150, !noalias !147
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !152

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !147
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !147
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !150, !noalias !147
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !150, !noalias !147
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !153

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !154

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !155

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #19
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #3 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #18
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #18
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #20
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !156
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !156
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !159, !noalias !156
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !159, !noalias !156
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !156
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !156
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !159, !noalias !156
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !159, !noalias !156
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !156
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !156
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !159, !noalias !156
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !159, !noalias !156
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !156
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !156
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !159, !noalias !156
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !159, !noalias !156
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !161

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !156
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !156
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !159, !noalias !156
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !159, !noalias !156
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !162

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !163

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !164

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !165

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !166

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !167

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !169
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !169
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !172, !noalias !169
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !172, !noalias !169
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !169
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !169
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !172, !noalias !169
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !172, !noalias !169
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !169
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !169
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !172, !noalias !169
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !172, !noalias !169
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !169
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !169
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !172, !noalias !169
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !172, !noalias !169
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !174

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !169
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !169
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !172, !noalias !169
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !172, !noalias !169
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !175

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !176

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !177

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #20
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"*, %"class.std::__1::vector.113"* dereferenceable(24)) unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.113"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #19
  %4 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.113"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %226, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.113"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #18
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #20
  %18 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  %19 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.113"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %27 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.std::__1::basic_string"* %25, %26
  br i1 %29, label %224, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  br label %32

32:                                               ; preds = %218, %30
  %33 = phi %"class.std::__1::basic_string"* [ %220, %218 ], [ %31, %30 ]
  %34 = phi %"class.std::__1::basic_string"* [ %219, %218 ], [ %25, %30 ]
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #19
  br label %218

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, 11
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::basic_string"* %33 to i16*
  %50 = trunc i64 %46 to i8
  %51 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  store i8 %50, i8* %52, align 1
  br label %70

53:                                               ; preds = %42
  %54 = icmp ugt i64 %46, 9223372036854775791
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::basic_string"* %33 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %56) #18
  unreachable

57:                                               ; preds = %53
  %58 = add nuw nsw i64 %46, 8
  %59 = and i64 %58, -8
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  tail call void @abort() #18
  unreachable

62:                                               ; preds = %57
  %63 = shl i64 %59, 1
  %64 = tail call i8* @_Znwm(i64 %63) #20
  %65 = bitcast i8* %64 to i16*
  %66 = bitcast %"class.std::__1::basic_string"* %33 to i8**
  store i8* %64, i8** %66, align 8
  %67 = or i64 %59, -9223372036854775808
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %69, align 8
  br label %70

70:                                               ; preds = %62, %48
  %71 = phi i16* [ %49, %48 ], [ %65, %62 ]
  %72 = add nuw nsw i64 %46, 1
  %73 = add i64 %46, 1
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %165, label %75

75:                                               ; preds = %70
  %76 = getelementptr i16, i16* %71, i64 1
  %77 = getelementptr i16, i16* %76, i64 %46
  %78 = getelementptr i16, i16* %44, i64 1
  %79 = getelementptr i16, i16* %78, i64 %46
  %80 = icmp ult i16* %71, %79
  %81 = icmp ult i16* %44, %77
  %82 = and i1 %80, %81
  br i1 %82, label %165, label %83

83:                                               ; preds = %75
  %84 = and i64 %73, -16
  %85 = sub i64 %72, %84
  %86 = getelementptr i16, i16* %44, i64 %84
  %87 = getelementptr i16, i16* %71, i64 %84
  %88 = add i64 %84, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %83
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %44, i64 %96
  %99 = getelementptr i16, i16* %71, i64 %96
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !178
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !178
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !181, !noalias !178
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !181, !noalias !178
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %44, i64 %108
  %110 = getelementptr i16, i16* %71, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !178
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !178
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !181, !noalias !178
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !181, !noalias !178
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %44, i64 %119
  %121 = getelementptr i16, i16* %71, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !178
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !178
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !181, !noalias !178
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !181, !noalias !178
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %44, i64 %130
  %132 = getelementptr i16, i16* %71, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !178
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !178
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !181, !noalias !178
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !181, !noalias !178
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !183

144:                                              ; preds = %95, %83
  %145 = phi i64 [ 0, %83 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %44, i64 %148
  %151 = getelementptr i16, i16* %71, i64 %148
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !178
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !178
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !181, !noalias !178
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !181, !noalias !178
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !184

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %73, %84
  br i1 %164, label %218, label %165

165:                                              ; preds = %163, %75, %70
  %166 = phi i64 [ %72, %75 ], [ %72, %70 ], [ %85, %163 ]
  %167 = phi i16* [ %44, %75 ], [ %44, %70 ], [ %86, %163 ]
  %168 = phi i16* [ %71, %75 ], [ %71, %70 ], [ %87, %163 ]
  %169 = add i64 %166, -1
  %170 = and i64 %166, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %165, %172
  %173 = phi i64 [ %178, %172 ], [ %166, %165 ]
  %174 = phi i16* [ %180, %172 ], [ %167, %165 ]
  %175 = phi i16* [ %179, %172 ], [ %168, %165 ]
  %176 = phi i64 [ %181, %172 ], [ %170, %165 ]
  %177 = load i16, i16* %174, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %173, -1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = getelementptr inbounds i16, i16* %174, i64 1
  %181 = add i64 %176, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !185

183:                                              ; preds = %172, %165
  %184 = phi i64 [ %166, %165 ], [ %178, %172 ]
  %185 = phi i16* [ %167, %165 ], [ %180, %172 ]
  %186 = phi i16* [ %168, %165 ], [ %179, %172 ]
  %187 = icmp ult i64 %169, 7
  br i1 %187, label %218, label %188

188:                                              ; preds = %183, %188
  %189 = phi i64 [ %214, %188 ], [ %184, %183 ]
  %190 = phi i16* [ %216, %188 ], [ %185, %183 ]
  %191 = phi i16* [ %215, %188 ], [ %186, %183 ]
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = getelementptr inbounds i16, i16* %191, i64 1
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %191, i64 2
  %197 = getelementptr inbounds i16, i16* %190, i64 2
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %191, i64 3
  %200 = getelementptr inbounds i16, i16* %190, i64 3
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %191, i64 4
  %203 = getelementptr inbounds i16, i16* %190, i64 4
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %191, i64 5
  %206 = getelementptr inbounds i16, i16* %190, i64 5
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %191, i64 6
  %209 = getelementptr inbounds i16, i16* %190, i64 6
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %191, i64 7
  %212 = getelementptr inbounds i16, i16* %190, i64 7
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %189, -8
  %215 = getelementptr inbounds i16, i16* %191, i64 8
  %216 = getelementptr inbounds i16, i16* %190, i64 8
  %217 = icmp eq i64 %214, 0
  br i1 %217, label %218, label %188, !llvm.loop !186

218:                                              ; preds = %183, %188, %163, %39
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %221 = icmp eq %"class.std::__1::basic_string"* %219, %26
  br i1 %221, label %222, label %32

222:                                              ; preds = %218
  %223 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  br label %224

224:                                              ; preds = %16, %222
  %225 = phi i64 [ %28, %16 ], [ %223, %222 ]
  store i64 %225, i64* %27, align 8
  br label %226

226:                                              ; preds = %2, %224
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #15

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEvT0_SC_T_"(%"class.gfx::Range"*, %"class.gfx::Range"*) unnamed_addr #3 {
  br label %3

3:                                                ; preds = %343, %2
  %4 = phi %"class.gfx::Range"* [ %1, %2 ], [ %313, %343 ]
  %5 = phi %"class.gfx::Range"* [ %0, %2 ], [ %15, %343 ]
  %6 = ptrtoint %"class.gfx::Range"* %4 to i64
  %7 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1, i32 1
  %10 = bitcast %"class.gfx::Range"* %7 to i64*
  %11 = ptrtoint %"class.gfx::Range"* %4 to i64
  br label %12

12:                                               ; preds = %352, %3
  %13 = phi %"class.gfx::Range"* [ %5, %3 ], [ %353, %352 ]
  br label %14

14:                                               ; preds = %242, %12
  %15 = phi %"class.gfx::Range"* [ %13, %12 ], [ %223, %242 ]
  %16 = ptrtoint %"class.gfx::Range"* %15 to i64
  %17 = sub i64 %6, %16
  %18 = ashr exact i64 %17, 3
  switch i64 %18, label %102 [
    i64 0, label %356
    i64 1, label %356
    i64 2, label %19
    i64 3, label %39
    i64 4, label %43
    i64 5, label %96
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1
  %21 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %22, %24
  %26 = select i1 %25, i32 %22, i32 %24
  %27 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp ult i32 %28, %30
  %32 = select i1 %31, i32 %28, i32 %30
  %33 = icmp ugt i32 %26, %32
  br i1 %33, label %34, label %356

34:                                               ; preds = %19
  %35 = bitcast %"class.gfx::Range"* %15 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = bitcast %"class.gfx::Range"* %20 to i64*
  %38 = load i64, i64* %37, align 4
  store i64 %38, i64* %35, align 4
  store i64 %36, i64* %37, align 4
  br label %356

39:                                               ; preds = %14
  %40 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1
  %41 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1
  %42 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %40, %"class.gfx::Range"* %41)
  br label %356

43:                                               ; preds = %14
  %44 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1
  %45 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 2
  %46 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1
  %47 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %44, %"class.gfx::Range"* %45) #19
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %46, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %49, %51
  %53 = select i1 %52, i32 %49, i32 %51
  %54 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %45, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 2, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  %59 = select i1 %58, i32 %55, i32 %57
  %60 = icmp ugt i32 %53, %59
  br i1 %60, label %61, label %356

61:                                               ; preds = %43
  %62 = bitcast %"class.gfx::Range"* %45 to i64*
  %63 = load i64, i64* %62, align 4
  %64 = bitcast %"class.gfx::Range"* %46 to i64*
  %65 = load i64, i64* %64, align 4
  store i64 %65, i64* %62, align 4
  store i64 %63, i64* %64, align 4
  %66 = load i32, i32* %54, align 4
  %67 = load i32, i32* %56, align 4
  %68 = icmp ult i32 %66, %67
  %69 = select i1 %68, i32 %66, i32 %67
  %70 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %44, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp ult i32 %71, %73
  %75 = select i1 %74, i32 %71, i32 %73
  %76 = icmp ugt i32 %69, %75
  br i1 %76, label %77, label %356

77:                                               ; preds = %61
  %78 = bitcast %"class.gfx::Range"* %44 to i64*
  %79 = load i64, i64* %78, align 4
  %80 = load i64, i64* %62, align 4
  store i64 %80, i64* %78, align 4
  store i64 %79, i64* %62, align 4
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = icmp ult i32 %81, %83
  %85 = select i1 %84, i32 %81, i32 %83
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp ult i32 %87, %89
  %91 = select i1 %90, i32 %87, i32 %89
  %92 = icmp ugt i32 %85, %91
  br i1 %92, label %93, label %356

93:                                               ; preds = %77
  %94 = bitcast %"class.gfx::Range"* %15 to i64*
  %95 = load i64, i64* %94, align 4
  store i64 %80, i64* %94, align 4
  store i64 %95, i64* %78, align 4
  br label %356

96:                                               ; preds = %14
  %97 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1
  %98 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 2
  %99 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 3
  %100 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 -1
  %101 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %97, %"class.gfx::Range"* %98, %"class.gfx::Range"* %99, %"class.gfx::Range"* %100)
  br label %356

102:                                              ; preds = %14
  %103 = icmp slt i64 %17, 248
  br i1 %103, label %104, label %156

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 2
  %106 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1
  %107 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %106, %"class.gfx::Range"* %105) #19
  %108 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 3
  %109 = icmp eq %"class.gfx::Range"* %108, %4
  br i1 %109, label %356, label %110

110:                                              ; preds = %104, %153
  %111 = phi %"class.gfx::Range"* [ %154, %153 ], [ %108, %104 ]
  %112 = phi %"class.gfx::Range"* [ %111, %153 ], [ %105, %104 ]
  %113 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %111, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %111, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp ult i32 %114, %116
  %118 = select i1 %117, i32 %114, i32 %116
  %119 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %112, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = icmp ult i32 %120, %122
  %124 = select i1 %123, i32 %120, i32 %122
  %125 = icmp ugt i32 %118, %124
  br i1 %125, label %126, label %153

126:                                              ; preds = %110
  %127 = bitcast %"class.gfx::Range"* %111 to i64*
  %128 = load i64, i64* %127, align 4
  %129 = trunc i64 %128 to i32
  %130 = lshr i64 %128, 32
  %131 = trunc i64 %130 to i32
  %132 = icmp ult i32 %129, %131
  %133 = select i1 %132, i32 %129, i32 %131
  br label %134

134:                                              ; preds = %141, %126
  %135 = phi %"class.gfx::Range"* [ %111, %126 ], [ %136, %141 ]
  %136 = phi %"class.gfx::Range"* [ %112, %126 ], [ %142, %141 ]
  %137 = bitcast %"class.gfx::Range"* %136 to i64*
  %138 = bitcast %"class.gfx::Range"* %135 to i64*
  %139 = load i64, i64* %137, align 4
  store i64 %139, i64* %138, align 4
  %140 = icmp eq %"class.gfx::Range"* %136, %15
  br i1 %140, label %150, label %141

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %136, i64 -1
  %143 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %142, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %136, i64 -1, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = icmp ult i32 %144, %146
  %148 = select i1 %147, i32 %144, i32 %146
  %149 = icmp ugt i32 %133, %148
  br i1 %149, label %134, label %150

150:                                              ; preds = %134, %141
  %151 = phi %"class.gfx::Range"* [ %136, %141 ], [ %15, %134 ]
  %152 = bitcast %"class.gfx::Range"* %151 to i64*
  store i64 %128, i64* %152, align 4
  br label %153

153:                                              ; preds = %150, %110
  %154 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %111, i64 1
  %155 = icmp eq %"class.gfx::Range"* %154, %4
  br i1 %155, label %356, label %110

156:                                              ; preds = %102
  %157 = icmp sgt i64 %17, 7992
  %158 = sdiv i64 %18, 2
  %159 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 %158
  br i1 %157, label %160, label %165

160:                                              ; preds = %156
  %161 = sdiv i64 %18, 4
  %162 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 %161
  %163 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %159, i64 %161
  %164 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %162, %"class.gfx::Range"* %159, %"class.gfx::Range"* %163, %"class.gfx::Range"* %7)
  br label %167

165:                                              ; preds = %156
  %166 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %159, %"class.gfx::Range"* %7)
  br label %167

167:                                              ; preds = %165, %160
  %168 = phi i32 [ %164, %160 ], [ %166, %165 ]
  %169 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = icmp ult i32 %170, %172
  %174 = select i1 %173, i32 %170, i32 %172
  %175 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %159, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 %158, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp ult i32 %176, %178
  %180 = select i1 %179, i32 %176, i32 %178
  %181 = icmp ugt i32 %174, %180
  br i1 %181, label %263, label %182

182:                                              ; preds = %167, %249
  %183 = phi %"class.gfx::Range"* [ %184, %249 ], [ %7, %167 ]
  %184 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %183, i64 -1
  %185 = icmp eq %"class.gfx::Range"* %15, %184
  br i1 %185, label %186, label %249

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1
  %188 = load i32, i32* %8, align 4
  %189 = load i32, i32* %9, align 4
  %190 = icmp ult i32 %188, %189
  %191 = select i1 %190, i32 %188, i32 %189
  %192 = icmp ugt i32 %174, %191
  br i1 %192, label %212, label %193

193:                                              ; preds = %186
  %194 = icmp eq %"class.gfx::Range"* %187, %7
  br i1 %194, label %356, label %195

195:                                              ; preds = %193, %209
  %196 = phi %"class.gfx::Range"* [ %210, %209 ], [ %187, %193 ]
  %197 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %196, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = icmp ult i32 %198, %200
  %202 = select i1 %201, i32 %198, i32 %200
  %203 = icmp ugt i32 %174, %202
  br i1 %203, label %204, label %209

204:                                              ; preds = %195
  %205 = bitcast %"class.gfx::Range"* %196 to i64*
  %206 = load i64, i64* %205, align 4
  %207 = load i64, i64* %10, align 4
  store i64 %207, i64* %205, align 4
  store i64 %206, i64* %10, align 4
  %208 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %196, i64 1
  br label %212

209:                                              ; preds = %195
  %210 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %196, i64 1
  %211 = icmp eq %"class.gfx::Range"* %210, %7
  br i1 %211, label %356, label %195

212:                                              ; preds = %204, %186
  %213 = phi %"class.gfx::Range"* [ %187, %186 ], [ %208, %204 ]
  %214 = icmp eq %"class.gfx::Range"* %213, %7
  br i1 %214, label %356, label %215

215:                                              ; preds = %212, %244
  %216 = phi %"class.gfx::Range"* [ %231, %244 ], [ %213, %212 ]
  %217 = phi %"class.gfx::Range"* [ %234, %244 ], [ %7, %212 ]
  %218 = load i32, i32* %169, align 4
  %219 = load i32, i32* %171, align 4
  %220 = icmp ult i32 %218, %219
  %221 = select i1 %220, i32 %218, i32 %219
  br label %222

222:                                              ; preds = %222, %215
  %223 = phi %"class.gfx::Range"* [ %216, %215 ], [ %231, %222 ]
  %224 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %223, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %223, i64 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = icmp ult i32 %225, %227
  %229 = select i1 %228, i32 %225, i32 %227
  %230 = icmp ugt i32 %221, %229
  %231 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %223, i64 1
  br i1 %230, label %232, label %222

232:                                              ; preds = %222, %232
  %233 = phi %"class.gfx::Range"* [ %234, %232 ], [ %217, %222 ]
  %234 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %233, i64 -1
  %235 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %234, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %233, i64 -1, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = icmp ult i32 %236, %238
  %240 = select i1 %239, i32 %236, i32 %238
  %241 = icmp ugt i32 %221, %240
  br i1 %241, label %232, label %242

242:                                              ; preds = %232
  %243 = icmp ult %"class.gfx::Range"* %223, %234
  br i1 %243, label %244, label %14

244:                                              ; preds = %242
  %245 = bitcast %"class.gfx::Range"* %223 to i64*
  %246 = load i64, i64* %245, align 4
  %247 = bitcast %"class.gfx::Range"* %234 to i64*
  %248 = load i64, i64* %247, align 4
  store i64 %248, i64* %245, align 4
  store i64 %246, i64* %247, align 4
  br label %215

249:                                              ; preds = %182
  %250 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %184, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %183, i64 -1, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = icmp ult i32 %251, %253
  %255 = select i1 %254, i32 %251, i32 %253
  %256 = icmp ugt i32 %255, %180
  br i1 %256, label %257, label %182

257:                                              ; preds = %249
  %258 = bitcast %"class.gfx::Range"* %15 to i64*
  %259 = load i64, i64* %258, align 4
  %260 = bitcast %"class.gfx::Range"* %184 to i64*
  %261 = load i64, i64* %260, align 4
  store i64 %261, i64* %258, align 4
  store i64 %259, i64* %260, align 4
  %262 = add i32 %168, 1
  br label %263

263:                                              ; preds = %167, %257
  %264 = phi i32 [ %262, %257 ], [ %168, %167 ]
  %265 = phi %"class.gfx::Range"* [ %184, %257 ], [ %7, %167 ]
  %266 = ptrtoint %"class.gfx::Range"* %15 to i64
  %267 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %15, i64 1
  %268 = icmp ult %"class.gfx::Range"* %267, %265
  br i1 %268, label %269, label %310

269:                                              ; preds = %263, %302
  %270 = phi %"class.gfx::Range"* [ %309, %302 ], [ %159, %263 ]
  %271 = phi i32 [ %307, %302 ], [ %264, %263 ]
  %272 = phi %"class.gfx::Range"* [ %289, %302 ], [ %267, %263 ]
  %273 = phi %"class.gfx::Range"* [ %292, %302 ], [ %265, %263 ]
  %274 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %270, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %270, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = icmp ult i32 %275, %277
  %279 = select i1 %278, i32 %275, i32 %277
  br label %280

280:                                              ; preds = %280, %269
  %281 = phi %"class.gfx::Range"* [ %272, %269 ], [ %289, %280 ]
  %282 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %281, i64 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = icmp ult i32 %283, %285
  %287 = select i1 %286, i32 %283, i32 %285
  %288 = icmp ugt i32 %287, %279
  %289 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %281, i64 1
  br i1 %288, label %280, label %290

290:                                              ; preds = %280, %290
  %291 = phi %"class.gfx::Range"* [ %292, %290 ], [ %273, %280 ]
  %292 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %291, i64 -1
  %293 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %292, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %291, i64 -1, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = icmp ult i32 %294, %296
  %298 = select i1 %297, i32 %294, i32 %296
  %299 = icmp ugt i32 %298, %279
  br i1 %299, label %300, label %290

300:                                              ; preds = %290
  %301 = icmp ugt %"class.gfx::Range"* %281, %292
  br i1 %301, label %310, label %302

302:                                              ; preds = %300
  %303 = bitcast %"class.gfx::Range"* %281 to i64*
  %304 = load i64, i64* %303, align 4
  %305 = bitcast %"class.gfx::Range"* %292 to i64*
  %306 = load i64, i64* %305, align 4
  store i64 %306, i64* %303, align 4
  store i64 %304, i64* %305, align 4
  %307 = add i32 %271, 1
  %308 = icmp eq %"class.gfx::Range"* %270, %281
  %309 = select i1 %308, %"class.gfx::Range"* %292, %"class.gfx::Range"* %270
  br label %269

310:                                              ; preds = %300, %263
  %311 = phi %"class.gfx::Range"* [ %159, %263 ], [ %270, %300 ]
  %312 = phi i32 [ %264, %263 ], [ %271, %300 ]
  %313 = phi %"class.gfx::Range"* [ %267, %263 ], [ %281, %300 ]
  %314 = icmp eq %"class.gfx::Range"* %313, %311
  br i1 %314, label %335, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %311, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %311, i64 0, i32 1
  %319 = load i32, i32* %318, align 4
  %320 = icmp ult i32 %317, %319
  %321 = select i1 %320, i32 %317, i32 %319
  %322 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %313, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %313, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp ult i32 %323, %325
  %327 = select i1 %326, i32 %323, i32 %325
  %328 = icmp ugt i32 %321, %327
  br i1 %328, label %329, label %335

329:                                              ; preds = %315
  %330 = bitcast %"class.gfx::Range"* %313 to i64*
  %331 = load i64, i64* %330, align 4
  %332 = bitcast %"class.gfx::Range"* %311 to i64*
  %333 = load i64, i64* %332, align 4
  store i64 %333, i64* %330, align 4
  store i64 %331, i64* %332, align 4
  %334 = add i32 %312, 1
  br label %335

335:                                              ; preds = %310, %329, %315
  %336 = phi i32 [ %334, %329 ], [ %312, %315 ], [ %312, %310 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %345

338:                                              ; preds = %335
  %339 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEbT0_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %313)
  %340 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %313, i64 1
  %341 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEbT0_SC_T_"(%"class.gfx::Range"* %340, %"class.gfx::Range"* %4)
  br i1 %341, label %342, label %344

342:                                              ; preds = %338
  br i1 %339, label %356, label %343

343:                                              ; preds = %342, %354
  br label %3

344:                                              ; preds = %338
  br i1 %339, label %352, label %345

345:                                              ; preds = %344, %335
  %346 = ptrtoint %"class.gfx::Range"* %313 to i64
  %347 = sub i64 %346, %266
  %348 = sub i64 %11, %346
  %349 = icmp slt i64 %347, %348
  br i1 %349, label %350, label %354

350:                                              ; preds = %345
  tail call fastcc void @"_ZNSt3__16__sortIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEvT0_SC_T_"(%"class.gfx::Range"* %15, %"class.gfx::Range"* %313)
  %351 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %313, i64 1
  br label %352

352:                                              ; preds = %350, %344
  %353 = phi %"class.gfx::Range"* [ %340, %344 ], [ %351, %350 ]
  br label %12

354:                                              ; preds = %345
  %355 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %313, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEvT0_SC_T_"(%"class.gfx::Range"* %355, %"class.gfx::Range"* %4)
  br label %343

356:                                              ; preds = %342, %212, %14, %14, %193, %209, %153, %104, %93, %77, %61, %43, %19, %34, %39, %96
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* nocapture, %"class.gfx::Range"* nocapture, %"class.gfx::Range"* nocapture) unnamed_addr #10 {
  %4 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %5, %7
  %9 = select i1 %8, i32 %5, i32 %7
  %10 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %11, %13
  %15 = select i1 %14, i32 %11, i32 %13
  %16 = icmp ugt i32 %9, %15
  %17 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %18, %20
  %22 = select i1 %21, i32 %18, i32 %20
  %23 = icmp ugt i32 %22, %9
  br i1 %16, label %43, label %24

24:                                               ; preds = %3
  br i1 %23, label %25, label %65

25:                                               ; preds = %24
  %26 = bitcast %"class.gfx::Range"* %1 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = bitcast %"class.gfx::Range"* %2 to i64*
  %29 = load i64, i64* %28, align 4
  store i64 %29, i64* %26, align 4
  store i64 %27, i64* %28, align 4
  %30 = load i32, i32* %4, align 4
  %31 = load i32, i32* %6, align 4
  %32 = icmp ult i32 %30, %31
  %33 = select i1 %32, i32 %30, i32 %31
  %34 = load i32, i32* %10, align 4
  %35 = load i32, i32* %12, align 4
  %36 = icmp ult i32 %34, %35
  %37 = select i1 %36, i32 %34, i32 %35
  %38 = icmp ugt i32 %33, %37
  br i1 %38, label %39, label %65

39:                                               ; preds = %25
  %40 = bitcast %"class.gfx::Range"* %0 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = load i64, i64* %26, align 4
  store i64 %42, i64* %40, align 4
  store i64 %41, i64* %26, align 4
  br label %65

43:                                               ; preds = %3
  %44 = bitcast %"class.gfx::Range"* %0 to i64*
  %45 = load i64, i64* %44, align 4
  br i1 %23, label %46, label %49

46:                                               ; preds = %43
  %47 = bitcast %"class.gfx::Range"* %2 to i64*
  %48 = load i64, i64* %47, align 4
  store i64 %48, i64* %44, align 4
  store i64 %45, i64* %47, align 4
  br label %65

49:                                               ; preds = %43
  %50 = bitcast %"class.gfx::Range"* %1 to i64*
  %51 = load i64, i64* %50, align 4
  store i64 %51, i64* %44, align 4
  store i64 %45, i64* %50, align 4
  %52 = load i32, i32* %17, align 4
  %53 = load i32, i32* %19, align 4
  %54 = icmp ult i32 %52, %53
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = trunc i64 %45 to i32
  %57 = lshr i64 %45, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp ult i32 %56, %58
  %60 = select i1 %59, i32 %56, i32 %58
  %61 = icmp ugt i32 %55, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %49
  %63 = bitcast %"class.gfx::Range"* %2 to i64*
  %64 = load i64, i64* %63, align 4
  store i64 %64, i64* %50, align 4
  store i64 %45, i64* %63, align 4
  br label %65

65:                                               ; preds = %49, %62, %25, %39, %24, %46
  %66 = phi i32 [ 1, %46 ], [ 0, %24 ], [ 2, %39 ], [ 1, %25 ], [ 2, %62 ], [ 1, %49 ]
  ret i32 %66
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Range"* nocapture, %"class.gfx::Range"* nocapture, %"class.gfx::Range"* nocapture, %"class.gfx::Range"* nocapture, %"class.gfx::Range"* nocapture) unnamed_addr #10 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %0, %"class.gfx::Range"* %1, %"class.gfx::Range"* %2) #19
  %7 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %8, %10
  %12 = select i1 %11, i32 %8, i32 %10
  %13 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %14, %16
  %18 = select i1 %17, i32 %14, i32 %16
  %19 = icmp ugt i32 %12, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %5
  %21 = bitcast %"class.gfx::Range"* %2 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = bitcast %"class.gfx::Range"* %3 to i64*
  %24 = load i64, i64* %23, align 4
  store i64 %24, i64* %21, align 4
  store i64 %22, i64* %23, align 4
  %25 = add i32 %6, 1
  %26 = load i32, i32* %13, align 4
  %27 = load i32, i32* %15, align 4
  %28 = icmp ult i32 %26, %27
  %29 = select i1 %28, i32 %26, i32 %27
  %30 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %31, %33
  %35 = select i1 %34, i32 %31, i32 %33
  %36 = icmp ugt i32 %29, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %20
  %38 = bitcast %"class.gfx::Range"* %1 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = load i64, i64* %21, align 4
  store i64 %40, i64* %38, align 4
  store i64 %39, i64* %21, align 4
  %41 = add i32 %6, 2
  %42 = load i32, i32* %30, align 4
  %43 = load i32, i32* %32, align 4
  %44 = icmp ult i32 %42, %43
  %45 = select i1 %44, i32 %42, i32 %43
  %46 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %47, %49
  %51 = select i1 %50, i32 %47, i32 %49
  %52 = icmp ugt i32 %45, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %37
  %54 = bitcast %"class.gfx::Range"* %0 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = load i64, i64* %38, align 4
  store i64 %56, i64* %54, align 4
  store i64 %55, i64* %38, align 4
  %57 = add i32 %6, 3
  br label %58

58:                                               ; preds = %5, %20, %37, %53
  %59 = phi i32 [ %57, %53 ], [ %41, %37 ], [ %25, %20 ], [ %6, %5 ]
  %60 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp ult i32 %61, %63
  %65 = select i1 %64, i32 %61, i32 %63
  %66 = load i32, i32* %7, align 4
  %67 = load i32, i32* %9, align 4
  %68 = icmp ult i32 %66, %67
  %69 = select i1 %68, i32 %66, i32 %67
  %70 = icmp ugt i32 %65, %69
  br i1 %70, label %71, label %123

71:                                               ; preds = %58
  %72 = bitcast %"class.gfx::Range"* %3 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = bitcast %"class.gfx::Range"* %4 to i64*
  %75 = load i64, i64* %74, align 4
  store i64 %75, i64* %72, align 4
  store i64 %73, i64* %74, align 4
  %76 = add i32 %59, 1
  %77 = load i32, i32* %7, align 4
  %78 = load i32, i32* %9, align 4
  %79 = icmp ult i32 %77, %78
  %80 = select i1 %79, i32 %77, i32 %78
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %15, align 4
  %83 = icmp ult i32 %81, %82
  %84 = select i1 %83, i32 %81, i32 %82
  %85 = icmp ugt i32 %80, %84
  br i1 %85, label %86, label %123

86:                                               ; preds = %71
  %87 = bitcast %"class.gfx::Range"* %2 to i64*
  %88 = load i64, i64* %87, align 4
  %89 = load i64, i64* %72, align 4
  store i64 %89, i64* %87, align 4
  store i64 %88, i64* %72, align 4
  %90 = add i32 %59, 2
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %15, align 4
  %93 = icmp ult i32 %91, %92
  %94 = select i1 %93, i32 %91, i32 %92
  %95 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp ult i32 %96, %98
  %100 = select i1 %99, i32 %96, i32 %98
  %101 = icmp ugt i32 %94, %100
  br i1 %101, label %102, label %123

102:                                              ; preds = %86
  %103 = bitcast %"class.gfx::Range"* %1 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = load i64, i64* %87, align 4
  store i64 %105, i64* %103, align 4
  store i64 %104, i64* %87, align 4
  %106 = add i32 %59, 3
  %107 = load i32, i32* %95, align 4
  %108 = load i32, i32* %97, align 4
  %109 = icmp ult i32 %107, %108
  %110 = select i1 %109, i32 %107, i32 %108
  %111 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp ult i32 %112, %114
  %116 = select i1 %115, i32 %112, i32 %114
  %117 = icmp ugt i32 %110, %116
  br i1 %117, label %118, label %123

118:                                              ; preds = %102
  %119 = bitcast %"class.gfx::Range"* %0 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = load i64, i64* %103, align 4
  store i64 %121, i64* %119, align 4
  store i64 %120, i64* %103, align 4
  %122 = add i32 %59, 4
  br label %123

123:                                              ; preds = %71, %102, %118, %86, %58
  %124 = phi i32 [ %122, %118 ], [ %106, %102 ], [ %90, %86 ], [ %76, %71 ], [ %59, %58 ]
  ret i32 %124
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEbT0_SC_T_"(%"class.gfx::Range"*, %"class.gfx::Range"*) unnamed_addr #3 {
  %3 = ptrtoint %"class.gfx::Range"* %1 to i64
  %4 = ptrtoint %"class.gfx::Range"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %90 [
    i64 0, label %149
    i64 1, label %149
    i64 2, label %7
    i64 3, label %27
    i64 4, label %31
    i64 5, label %84
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 -1
  %9 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 -1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  %14 = select i1 %13, i32 %10, i32 %12
  %15 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ult i32 %16, %18
  %20 = select i1 %19, i32 %16, i32 %18
  %21 = icmp ugt i32 %14, %20
  br i1 %21, label %22, label %149

22:                                               ; preds = %7
  %23 = bitcast %"class.gfx::Range"* %0 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = bitcast %"class.gfx::Range"* %8 to i64*
  %26 = load i64, i64* %25, align 4
  store i64 %26, i64* %23, align 4
  store i64 %24, i64* %25, align 4
  br label %149

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 1
  %29 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 -1
  %30 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %0, %"class.gfx::Range"* %28, %"class.gfx::Range"* %29)
  br label %149

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 1
  %33 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 2
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 -1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %0, %"class.gfx::Range"* %32, %"class.gfx::Range"* %33) #19
  %36 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %34, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 -1, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %37, %39
  %41 = select i1 %40, i32 %37, i32 %39
  %42 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 2, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %43, %45
  %47 = select i1 %46, i32 %43, i32 %45
  %48 = icmp ugt i32 %41, %47
  br i1 %48, label %49, label %149

49:                                               ; preds = %31
  %50 = bitcast %"class.gfx::Range"* %33 to i64*
  %51 = load i64, i64* %50, align 4
  %52 = bitcast %"class.gfx::Range"* %34 to i64*
  %53 = load i64, i64* %52, align 4
  store i64 %53, i64* %50, align 4
  store i64 %51, i64* %52, align 4
  %54 = load i32, i32* %42, align 4
  %55 = load i32, i32* %44, align 4
  %56 = icmp ult i32 %54, %55
  %57 = select i1 %56, i32 %54, i32 %55
  %58 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %32, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 1, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp ult i32 %59, %61
  %63 = select i1 %62, i32 %59, i32 %61
  %64 = icmp ugt i32 %57, %63
  br i1 %64, label %65, label %149

65:                                               ; preds = %49
  %66 = bitcast %"class.gfx::Range"* %32 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = load i64, i64* %50, align 4
  store i64 %68, i64* %66, align 4
  store i64 %67, i64* %50, align 4
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp ult i32 %69, %71
  %73 = select i1 %72, i32 %69, i32 %71
  %74 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %75, %77
  %79 = select i1 %78, i32 %75, i32 %77
  %80 = icmp ugt i32 %73, %79
  br i1 %80, label %81, label %149

81:                                               ; preds = %65
  %82 = bitcast %"class.gfx::Range"* %0 to i64*
  %83 = load i64, i64* %82, align 4
  store i64 %68, i64* %82, align 4
  store i64 %83, i64* %66, align 4
  br label %149

84:                                               ; preds = %2
  %85 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 1
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 2
  %87 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 3
  %88 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 -1
  %89 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_SC_SC_T_"(%"class.gfx::Range"* %0, %"class.gfx::Range"* %85, %"class.gfx::Range"* %86, %"class.gfx::Range"* %87, %"class.gfx::Range"* %88)
  br label %149

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 2
  %92 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 1
  %93 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN12_GLOBAL__N_112order_rangesEPNS_6vectorIN3gfx5RangeENS_9allocatorIS4_EEEEE3$_1PS4_EEjT0_SC_SC_T_"(%"class.gfx::Range"* %0, %"class.gfx::Range"* %92, %"class.gfx::Range"* %91)
  %94 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %0, i64 3
  %95 = icmp eq %"class.gfx::Range"* %94, %1
  br i1 %95, label %149, label %96

96:                                               ; preds = %90, %142
  %97 = phi %"class.gfx::Range"* [ %144, %142 ], [ %94, %90 ]
  %98 = phi i32 [ %143, %142 ], [ 0, %90 ]
  %99 = phi %"class.gfx::Range"* [ %97, %142 ], [ %91, %90 ]
  %100 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %97, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %97, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp ult i32 %101, %103
  %105 = select i1 %104, i32 %101, i32 %103
  %106 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %99, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp ult i32 %107, %109
  %111 = select i1 %110, i32 %107, i32 %109
  %112 = icmp ugt i32 %105, %111
  br i1 %112, label %113, label %142

113:                                              ; preds = %96
  %114 = bitcast %"class.gfx::Range"* %97 to i64*
  %115 = load i64, i64* %114, align 4
  %116 = trunc i64 %115 to i32
  %117 = lshr i64 %115, 32
  %118 = trunc i64 %117 to i32
  %119 = icmp ult i32 %116, %118
  %120 = select i1 %119, i32 %116, i32 %118
  br label %121

121:                                              ; preds = %128, %113
  %122 = phi %"class.gfx::Range"* [ %97, %113 ], [ %123, %128 ]
  %123 = phi %"class.gfx::Range"* [ %99, %113 ], [ %129, %128 ]
  %124 = bitcast %"class.gfx::Range"* %123 to i64*
  %125 = bitcast %"class.gfx::Range"* %122 to i64*
  %126 = load i64, i64* %124, align 4
  store i64 %126, i64* %125, align 4
  %127 = icmp eq %"class.gfx::Range"* %123, %0
  br i1 %127, label %137, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %123, i64 -1
  %130 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %129, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %123, i64 -1, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = icmp ult i32 %131, %133
  %135 = select i1 %134, i32 %131, i32 %133
  %136 = icmp ugt i32 %120, %135
  br i1 %136, label %121, label %137

137:                                              ; preds = %121, %128
  %138 = phi %"class.gfx::Range"* [ %123, %128 ], [ %0, %121 ]
  %139 = bitcast %"class.gfx::Range"* %138 to i64*
  store i64 %115, i64* %139, align 4
  %140 = add i32 %98, 1
  %141 = icmp eq i32 %140, 8
  br i1 %141, label %146, label %142

142:                                              ; preds = %137, %96
  %143 = phi i32 [ %140, %137 ], [ %98, %96 ]
  %144 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %97, i64 1
  %145 = icmp eq %"class.gfx::Range"* %144, %1
  br i1 %145, label %149, label %96

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %97, i64 1
  %148 = icmp eq %"class.gfx::Range"* %147, %1
  br label %149

149:                                              ; preds = %142, %146, %90, %81, %65, %49, %31, %7, %22, %2, %2, %84, %27
  %150 = phi i1 [ true, %84 ], [ true, %27 ], [ true, %2 ], [ true, %2 ], [ true, %22 ], [ true, %7 ], [ true, %31 ], [ true, %49 ], [ true, %65 ], [ true, %81 ], [ true, %90 ], [ %148, %146 ], [ true, %142 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal4Edit12MergeReplaceEPKS1_(%"class.views::internal::Edit"*, %"class.views::internal::Edit"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %17 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 1
  %20 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = load i32, i32* %19, align 4
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %18, align 8
  br label %34

24:                                               ; preds = %2
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 2) #19
  %26 = load i32, i32* %19, align 4
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %26) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* %25, i8* %27) #19
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %29, i8** %18, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 149, %"class.logging::CheckOpResult"* nonnull %7) #19
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #19
  br label %34

34:                                               ; preds = %23, %24, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  %35 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #19
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 4
  %38 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 4, i32 0, i32 1
  %39 = bitcast i64** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.120"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp eq i64 %43, 8
  br i1 %45, label %46, label %47

46:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %36, align 8
  br label %57

47:                                               ; preds = %34
  %48 = ashr exact i64 %43, 3
  %49 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #19
  %50 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %48) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i8* %49, i8* %50) #19
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %52, i8** %36, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 150, %"class.logging::CheckOpResult"* nonnull %9) #19
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  br label %57

57:                                               ; preds = %46, %47, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #19
  %58 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #19
  %59 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %37, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  store i8* null, i8** %59, align 8
  br label %75

66:                                               ; preds = %57
  %67 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #19
  %68 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %62) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* %67, i8* %68) #19
  %69 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  store i8* %70, i8** %59, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 151, %"class.logging::CheckOpResult"* nonnull %11) #19
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #19
  br label %75

75:                                               ; preds = %65, %66, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #19
  %76 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #19
  %77 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %77, align 8
  %78 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 10
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  store i8* null, i8** %77, align 8
  br label %92

83:                                               ; preds = %75
  %84 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #19
  %85 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %79) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i8* %84, i8* %85) #19
  %86 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  store i8* %87, i8** %77, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 152, %"class.logging::CheckOpResult"* nonnull %13) #19
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #19
  br label %92

92:                                               ; preds = %82, %83, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #19
  %93 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #19
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %97 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 3, i32 0, i32 0
  %98 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false)
  %99 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %97, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %92
  %105 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %105, i64 24, i1 false) #19
  br label %279

106:                                              ; preds = %92
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i16*, i16** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = icmp ult i64 %110, 11
  br i1 %111, label %112, label %117

112:                                              ; preds = %106
  %113 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %114 = trunc i64 %110 to i8
  %115 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %115, i64 0, i32 1, i32 1
  store i8 %114, i8* %116, align 1
  br label %132

117:                                              ; preds = %106
  %118 = icmp ugt i64 %110, 9223372036854775791
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %120) #18
  unreachable

121:                                              ; preds = %117
  %122 = add nuw nsw i64 %110, 8
  %123 = and i64 %122, -8
  %124 = icmp slt i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  call void @abort() #18
  unreachable

126:                                              ; preds = %121
  %127 = shl i64 %123, 1
  %128 = call i8* @_Znwm(i64 %127) #20
  %129 = bitcast i8* %128 to i16*
  %130 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  store i8* %128, i8** %130, align 8
  %131 = or i64 %123, -9223372036854775808
  store i64 %131, i64* %96, align 8
  store i64 %110, i64* %95, align 8
  br label %132

132:                                              ; preds = %126, %112
  %133 = phi i16* [ %113, %112 ], [ %129, %126 ]
  %134 = add nuw nsw i64 %110, 1
  %135 = add i64 %110, 1
  %136 = icmp ult i64 %135, 16
  br i1 %136, label %226, label %137

137:                                              ; preds = %132
  %138 = add i64 %110, 1
  %139 = getelementptr i16, i16* %133, i64 %138
  %140 = getelementptr i16, i16* %108, i64 %138
  %141 = icmp ult i16* %133, %140
  %142 = icmp ult i16* %108, %139
  %143 = and i1 %141, %142
  br i1 %143, label %226, label %144

144:                                              ; preds = %137
  %145 = and i64 %135, -16
  %146 = sub i64 %134, %145
  %147 = getelementptr i16, i16* %108, i64 %145
  %148 = getelementptr i16, i16* %133, i64 %145
  %149 = add i64 %145, -16
  %150 = lshr exact i64 %149, 4
  %151 = add nuw nsw i64 %150, 1
  %152 = and i64 %151, 3
  %153 = icmp ult i64 %149, 48
  br i1 %153, label %205, label %154

154:                                              ; preds = %144
  %155 = sub nsw i64 %151, %152
  br label %156

156:                                              ; preds = %156, %154
  %157 = phi i64 [ 0, %154 ], [ %202, %156 ]
  %158 = phi i64 [ %155, %154 ], [ %203, %156 ]
  %159 = getelementptr i16, i16* %108, i64 %157
  %160 = getelementptr i16, i16* %133, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !187
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !187
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !190, !noalias !187
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !190, !noalias !187
  %169 = or i64 %157, 16
  %170 = getelementptr i16, i16* %108, i64 %169
  %171 = getelementptr i16, i16* %133, i64 %169
  %172 = bitcast i16* %170 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !187
  %174 = getelementptr i16, i16* %170, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !187
  %177 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %177, align 2, !alias.scope !190, !noalias !187
  %178 = getelementptr i16, i16* %171, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %179, align 2, !alias.scope !190, !noalias !187
  %180 = or i64 %157, 32
  %181 = getelementptr i16, i16* %108, i64 %180
  %182 = getelementptr i16, i16* %133, i64 %180
  %183 = bitcast i16* %181 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !187
  %185 = getelementptr i16, i16* %181, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2, !alias.scope !187
  %188 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %188, align 2, !alias.scope !190, !noalias !187
  %189 = getelementptr i16, i16* %182, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %187, <8 x i16>* %190, align 2, !alias.scope !190, !noalias !187
  %191 = or i64 %157, 48
  %192 = getelementptr i16, i16* %108, i64 %191
  %193 = getelementptr i16, i16* %133, i64 %191
  %194 = bitcast i16* %192 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !187
  %196 = getelementptr i16, i16* %192, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !187
  %199 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %199, align 2, !alias.scope !190, !noalias !187
  %200 = getelementptr i16, i16* %193, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %201, align 2, !alias.scope !190, !noalias !187
  %202 = add i64 %157, 64
  %203 = add i64 %158, -4
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %156, !llvm.loop !192

205:                                              ; preds = %156, %144
  %206 = phi i64 [ 0, %144 ], [ %202, %156 ]
  %207 = icmp eq i64 %152, 0
  br i1 %207, label %224, label %208

208:                                              ; preds = %205, %208
  %209 = phi i64 [ %221, %208 ], [ %206, %205 ]
  %210 = phi i64 [ %222, %208 ], [ %152, %205 ]
  %211 = getelementptr i16, i16* %108, i64 %209
  %212 = getelementptr i16, i16* %133, i64 %209
  %213 = bitcast i16* %211 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !187
  %215 = getelementptr i16, i16* %211, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2, !alias.scope !187
  %218 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %218, align 2, !alias.scope !190, !noalias !187
  %219 = getelementptr i16, i16* %212, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %220, align 2, !alias.scope !190, !noalias !187
  %221 = add i64 %209, 16
  %222 = add i64 %210, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %208, !llvm.loop !193

224:                                              ; preds = %208, %205
  %225 = icmp eq i64 %135, %145
  br i1 %225, label %279, label %226

226:                                              ; preds = %224, %137, %132
  %227 = phi i64 [ %134, %137 ], [ %134, %132 ], [ %146, %224 ]
  %228 = phi i16* [ %108, %137 ], [ %108, %132 ], [ %147, %224 ]
  %229 = phi i16* [ %133, %137 ], [ %133, %132 ], [ %148, %224 ]
  %230 = add i64 %227, -1
  %231 = and i64 %227, 7
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %244, label %233

233:                                              ; preds = %226, %233
  %234 = phi i64 [ %239, %233 ], [ %227, %226 ]
  %235 = phi i16* [ %241, %233 ], [ %228, %226 ]
  %236 = phi i16* [ %240, %233 ], [ %229, %226 ]
  %237 = phi i64 [ %242, %233 ], [ %231, %226 ]
  %238 = load i16, i16* %235, align 2
  store i16 %238, i16* %236, align 2
  %239 = add i64 %234, -1
  %240 = getelementptr inbounds i16, i16* %236, i64 1
  %241 = getelementptr inbounds i16, i16* %235, i64 1
  %242 = add i64 %237, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %233, !llvm.loop !194

244:                                              ; preds = %233, %226
  %245 = phi i64 [ %227, %226 ], [ %239, %233 ]
  %246 = phi i16* [ %228, %226 ], [ %241, %233 ]
  %247 = phi i16* [ %229, %226 ], [ %240, %233 ]
  %248 = icmp ult i64 %230, 7
  br i1 %248, label %279, label %249

249:                                              ; preds = %244, %249
  %250 = phi i64 [ %275, %249 ], [ %245, %244 ]
  %251 = phi i16* [ %277, %249 ], [ %246, %244 ]
  %252 = phi i16* [ %276, %249 ], [ %247, %244 ]
  %253 = load i16, i16* %251, align 2
  store i16 %253, i16* %252, align 2
  %254 = getelementptr inbounds i16, i16* %252, i64 1
  %255 = getelementptr inbounds i16, i16* %251, i64 1
  %256 = load i16, i16* %255, align 2
  store i16 %256, i16* %254, align 2
  %257 = getelementptr inbounds i16, i16* %252, i64 2
  %258 = getelementptr inbounds i16, i16* %251, i64 2
  %259 = load i16, i16* %258, align 2
  store i16 %259, i16* %257, align 2
  %260 = getelementptr inbounds i16, i16* %252, i64 3
  %261 = getelementptr inbounds i16, i16* %251, i64 3
  %262 = load i16, i16* %261, align 2
  store i16 %262, i16* %260, align 2
  %263 = getelementptr inbounds i16, i16* %252, i64 4
  %264 = getelementptr inbounds i16, i16* %251, i64 4
  %265 = load i16, i16* %264, align 2
  store i16 %265, i16* %263, align 2
  %266 = getelementptr inbounds i16, i16* %252, i64 5
  %267 = getelementptr inbounds i16, i16* %251, i64 5
  %268 = load i16, i16* %267, align 2
  store i16 %268, i16* %266, align 2
  %269 = getelementptr inbounds i16, i16* %252, i64 6
  %270 = getelementptr inbounds i16, i16* %251, i64 6
  %271 = load i16, i16* %270, align 2
  store i16 %271, i16* %269, align 2
  %272 = getelementptr inbounds i16, i16* %252, i64 7
  %273 = getelementptr inbounds i16, i16* %251, i64 7
  %274 = load i16, i16* %273, align 2
  store i16 %274, i16* %272, align 2
  %275 = add i64 %250, -8
  %276 = getelementptr inbounds i16, i16* %252, i64 8
  %277 = getelementptr inbounds i16, i16* %251, i64 8
  %278 = icmp eq i64 %275, 0
  br i1 %278, label %279, label %249, !llvm.loop !195

279:                                              ; preds = %244, %249, %224, %104
  %280 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 10
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9
  %283 = bitcast %"class.std::__1::basic_string"* %282 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %284 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %283, i64 0, i32 1, i32 1
  %285 = load i8, i8* %284, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %279
  %288 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  br label %292

290:                                              ; preds = %279
  %291 = zext i8 %285 to i64
  br label %292

292:                                              ; preds = %287, %290
  %293 = phi i64 [ %289, %287 ], [ %291, %290 ]
  %294 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE5eraseEmm(%"class.std::__1::basic_string"* nonnull %15, i64 %281, i64 %293)
  %295 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3
  %296 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3, i32 0, i32 1
  %297 = bitcast %"class.std::__1::basic_string"** %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = bitcast %"class.std::__1::vector.113"* %295 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = sub i64 %298, %300
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %308, label %303

303:                                              ; preds = %292
  %304 = inttoptr i64 %300 to %"class.std::__1::basic_string"*
  %305 = sdiv exact i64 %301, 24
  %306 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 0
  %307 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %295, i64 0, i32 0, i32 0
  br label %496

308:                                              ; preds = %496, %292
  %309 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 2
  store i32 0, i32* %309, align 4
  %310 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %310) #19
  %311 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %16, i64 0, i64 0
  %312 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %312, i64 0, i32 1, i32 1
  %314 = load i8, i8* %313, align 1
  %315 = icmp slt i8 %314, 0
  br i1 %315, label %317, label %316

316:                                              ; preds = %308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %310, i8* nonnull align 8 %93, i64 24, i1 false) #19
  br label %490

317:                                              ; preds = %308
  %318 = load i16*, i16** %94, align 8
  %319 = load i64, i64* %95, align 8
  %320 = icmp ult i64 %319, 11
  br i1 %320, label %321, label %326

321:                                              ; preds = %317
  %322 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to i16*
  %323 = trunc i64 %319 to i8
  %324 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %324, i64 0, i32 1, i32 1
  store i8 %323, i8* %325, align 1
  br label %343

326:                                              ; preds = %317
  %327 = icmp ugt i64 %319, 9223372036854775791
  br i1 %327, label %328, label %330

328:                                              ; preds = %326
  %329 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %329) #18
  unreachable

330:                                              ; preds = %326
  %331 = add nuw nsw i64 %319, 8
  %332 = and i64 %331, -8
  %333 = icmp slt i64 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %330
  call void @abort() #18
  unreachable

335:                                              ; preds = %330
  %336 = shl i64 %332, 1
  %337 = call i8* @_Znwm(i64 %336) #20
  %338 = bitcast i8* %337 to i16*
  %339 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to i8**
  store i8* %337, i8** %339, align 8
  %340 = or i64 %332, -9223372036854775808
  %341 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %16, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %340, i64* %341, align 8
  %342 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %16, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %319, i64* %342, align 8
  br label %343

343:                                              ; preds = %335, %321
  %344 = phi i16* [ %322, %321 ], [ %338, %335 ]
  %345 = add nuw nsw i64 %319, 1
  %346 = add i64 %319, 1
  %347 = icmp ult i64 %346, 16
  br i1 %347, label %437, label %348

348:                                              ; preds = %343
  %349 = add i64 %319, 1
  %350 = getelementptr i16, i16* %344, i64 %349
  %351 = getelementptr i16, i16* %318, i64 %349
  %352 = icmp ult i16* %344, %351
  %353 = icmp ult i16* %318, %350
  %354 = and i1 %352, %353
  br i1 %354, label %437, label %355

355:                                              ; preds = %348
  %356 = and i64 %346, -16
  %357 = sub i64 %345, %356
  %358 = getelementptr i16, i16* %318, i64 %356
  %359 = getelementptr i16, i16* %344, i64 %356
  %360 = add i64 %356, -16
  %361 = lshr exact i64 %360, 4
  %362 = add nuw nsw i64 %361, 1
  %363 = and i64 %362, 3
  %364 = icmp ult i64 %360, 48
  br i1 %364, label %416, label %365

365:                                              ; preds = %355
  %366 = sub nsw i64 %362, %363
  br label %367

367:                                              ; preds = %367, %365
  %368 = phi i64 [ 0, %365 ], [ %413, %367 ]
  %369 = phi i64 [ %366, %365 ], [ %414, %367 ]
  %370 = getelementptr i16, i16* %318, i64 %368
  %371 = getelementptr i16, i16* %344, i64 %368
  %372 = bitcast i16* %370 to <8 x i16>*
  %373 = load <8 x i16>, <8 x i16>* %372, align 2, !alias.scope !196
  %374 = getelementptr i16, i16* %370, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  %376 = load <8 x i16>, <8 x i16>* %375, align 2, !alias.scope !196
  %377 = bitcast i16* %371 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %377, align 2, !alias.scope !199, !noalias !196
  %378 = getelementptr i16, i16* %371, i64 8
  %379 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %376, <8 x i16>* %379, align 2, !alias.scope !199, !noalias !196
  %380 = or i64 %368, 16
  %381 = getelementptr i16, i16* %318, i64 %380
  %382 = getelementptr i16, i16* %344, i64 %380
  %383 = bitcast i16* %381 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !196
  %385 = getelementptr i16, i16* %381, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !196
  %388 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %384, <8 x i16>* %388, align 2, !alias.scope !199, !noalias !196
  %389 = getelementptr i16, i16* %382, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %390, align 2, !alias.scope !199, !noalias !196
  %391 = or i64 %368, 32
  %392 = getelementptr i16, i16* %318, i64 %391
  %393 = getelementptr i16, i16* %344, i64 %391
  %394 = bitcast i16* %392 to <8 x i16>*
  %395 = load <8 x i16>, <8 x i16>* %394, align 2, !alias.scope !196
  %396 = getelementptr i16, i16* %392, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !196
  %399 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %399, align 2, !alias.scope !199, !noalias !196
  %400 = getelementptr i16, i16* %393, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %398, <8 x i16>* %401, align 2, !alias.scope !199, !noalias !196
  %402 = or i64 %368, 48
  %403 = getelementptr i16, i16* %318, i64 %402
  %404 = getelementptr i16, i16* %344, i64 %402
  %405 = bitcast i16* %403 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !196
  %407 = getelementptr i16, i16* %403, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  %409 = load <8 x i16>, <8 x i16>* %408, align 2, !alias.scope !196
  %410 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %406, <8 x i16>* %410, align 2, !alias.scope !199, !noalias !196
  %411 = getelementptr i16, i16* %404, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %409, <8 x i16>* %412, align 2, !alias.scope !199, !noalias !196
  %413 = add i64 %368, 64
  %414 = add i64 %369, -4
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %367, !llvm.loop !201

416:                                              ; preds = %367, %355
  %417 = phi i64 [ 0, %355 ], [ %413, %367 ]
  %418 = icmp eq i64 %363, 0
  br i1 %418, label %435, label %419

419:                                              ; preds = %416, %419
  %420 = phi i64 [ %432, %419 ], [ %417, %416 ]
  %421 = phi i64 [ %433, %419 ], [ %363, %416 ]
  %422 = getelementptr i16, i16* %318, i64 %420
  %423 = getelementptr i16, i16* %344, i64 %420
  %424 = bitcast i16* %422 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !196
  %426 = getelementptr i16, i16* %422, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  %428 = load <8 x i16>, <8 x i16>* %427, align 2, !alias.scope !196
  %429 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %425, <8 x i16>* %429, align 2, !alias.scope !199, !noalias !196
  %430 = getelementptr i16, i16* %423, i64 8
  %431 = bitcast i16* %430 to <8 x i16>*
  store <8 x i16> %428, <8 x i16>* %431, align 2, !alias.scope !199, !noalias !196
  %432 = add i64 %420, 16
  %433 = add i64 %421, -1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %419, !llvm.loop !202

435:                                              ; preds = %419, %416
  %436 = icmp eq i64 %346, %356
  br i1 %436, label %490, label %437

437:                                              ; preds = %435, %348, %343
  %438 = phi i64 [ %345, %348 ], [ %345, %343 ], [ %357, %435 ]
  %439 = phi i16* [ %318, %348 ], [ %318, %343 ], [ %358, %435 ]
  %440 = phi i16* [ %344, %348 ], [ %344, %343 ], [ %359, %435 ]
  %441 = add i64 %438, -1
  %442 = and i64 %438, 7
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %455, label %444

444:                                              ; preds = %437, %444
  %445 = phi i64 [ %450, %444 ], [ %438, %437 ]
  %446 = phi i16* [ %452, %444 ], [ %439, %437 ]
  %447 = phi i16* [ %451, %444 ], [ %440, %437 ]
  %448 = phi i64 [ %453, %444 ], [ %442, %437 ]
  %449 = load i16, i16* %446, align 2
  store i16 %449, i16* %447, align 2
  %450 = add i64 %445, -1
  %451 = getelementptr inbounds i16, i16* %447, i64 1
  %452 = getelementptr inbounds i16, i16* %446, i64 1
  %453 = add i64 %448, -1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %455, label %444, !llvm.loop !203

455:                                              ; preds = %444, %437
  %456 = phi i64 [ %438, %437 ], [ %450, %444 ]
  %457 = phi i16* [ %439, %437 ], [ %452, %444 ]
  %458 = phi i16* [ %440, %437 ], [ %451, %444 ]
  %459 = icmp ult i64 %441, 7
  br i1 %459, label %490, label %460

460:                                              ; preds = %455, %460
  %461 = phi i64 [ %486, %460 ], [ %456, %455 ]
  %462 = phi i16* [ %488, %460 ], [ %457, %455 ]
  %463 = phi i16* [ %487, %460 ], [ %458, %455 ]
  %464 = load i16, i16* %462, align 2
  store i16 %464, i16* %463, align 2
  %465 = getelementptr inbounds i16, i16* %463, i64 1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = load i16, i16* %466, align 2
  store i16 %467, i16* %465, align 2
  %468 = getelementptr inbounds i16, i16* %463, i64 2
  %469 = getelementptr inbounds i16, i16* %462, i64 2
  %470 = load i16, i16* %469, align 2
  store i16 %470, i16* %468, align 2
  %471 = getelementptr inbounds i16, i16* %463, i64 3
  %472 = getelementptr inbounds i16, i16* %462, i64 3
  %473 = load i16, i16* %472, align 2
  store i16 %473, i16* %471, align 2
  %474 = getelementptr inbounds i16, i16* %463, i64 4
  %475 = getelementptr inbounds i16, i16* %462, i64 4
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %474, align 2
  %477 = getelementptr inbounds i16, i16* %463, i64 5
  %478 = getelementptr inbounds i16, i16* %462, i64 5
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %463, i64 6
  %481 = getelementptr inbounds i16, i16* %462, i64 6
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %463, i64 7
  %484 = getelementptr inbounds i16, i16* %462, i64 7
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = add i64 %461, -8
  %487 = getelementptr inbounds i16, i16* %463, i64 8
  %488 = getelementptr inbounds i16, i16* %462, i64 8
  %489 = icmp eq i64 %486, 0
  br i1 %489, label %490, label %460, !llvm.loop !204

490:                                              ; preds = %455, %460, %435, %316
  %491 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %16, i64 0, i64 1
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.113"* %295, %"class.std::__1::basic_string"* nonnull %311, %"class.std::__1::basic_string"* %491) #19
  %492 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %493 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %492, i64 0, i32 1, i32 1
  %494 = load i8, i8* %493, align 1
  %495 = icmp slt i8 %494, 0
  br i1 %495, label %520, label %523

496:                                              ; preds = %518, %303
  %497 = phi %"class.std::__1::basic_string"* [ %304, %303 ], [ %519, %518 ]
  %498 = phi i64 [ %305, %303 ], [ %499, %518 ]
  %499 = add i64 %498, -1
  %500 = load i64*, i64** %306, align 8
  %501 = getelementptr inbounds i64, i64* %500, i64 %499
  %502 = load i64, i64* %501, align 8
  %503 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %497, i64 %499
  %504 = bitcast %"class.std::__1::basic_string"* %503 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %505 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %504, i64 0, i32 1, i32 1
  %506 = load i8, i8* %505, align 1
  %507 = icmp slt i8 %506, 0
  %508 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %503, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load i16*, i16** %508, align 8
  %510 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %497, i64 %499, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %511 = load i64, i64* %510, align 8
  %512 = bitcast %"class.std::__1::basic_string"* %503 to i16*
  %513 = zext i8 %506 to i64
  %514 = select i1 %507, i16* %509, i16* %512
  %515 = select i1 %507, i64 %511, i64 %513
  %516 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %15, i64 %502, i16* %514, i64 %515) #19
  %517 = icmp eq i64 %499, 0
  br i1 %517, label %308, label %518

518:                                              ; preds = %496
  %519 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %307, align 8
  br label %496

520:                                              ; preds = %490
  %521 = bitcast [1 x %"class.std::__1::basic_string"]* %16 to i8**
  %522 = load i8*, i8** %521, align 8
  call void @_ZdlPv(i8* %522) #20
  br label %523

523:                                              ; preds = %490, %520
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %310) #19
  %524 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPKmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.120"* %524, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @.ref.tmp, i64 0, i64 0), i64* getelementptr inbounds ([1 x i64], [1 x i64]* @.ref.tmp, i64 1, i64 0)) #19
  %525 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 7
  store i8 0, i8* %525, align 8
  %526 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 8
  %527 = load i64, i64* %526, align 8
  %528 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 8
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 9
  %530 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %282, %"class.std::__1::basic_string"* dereferenceable(24) %529)
  store i64 0, i64* %280, align 8
  %531 = load i8, i8* %313, align 1
  %532 = icmp slt i8 %531, 0
  br i1 %532, label %533, label %536

533:                                              ; preds = %523
  %534 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %535 = load i8*, i8** %534, align 8
  call void @_ZdlPv(i8* %535) #20
  br label %536

536:                                              ; preds = %523, %533
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #19
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.113"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.113"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #19
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #19
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #18
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #18
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #20
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !205
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !205
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !208, !noalias !205
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !208, !noalias !205
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !205
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !205
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !208, !noalias !205
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !208, !noalias !205
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !205
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !205
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !208, !noalias !205
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !208, !noalias !205
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !205
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !205
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !208, !noalias !205
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !208, !noalias !205
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !210

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !205
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !205
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !208, !noalias !205
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !208, !noalias !205
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !211

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !212

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !213

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #20
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #20
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.113"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #20
  %275 = bitcast %"class.std::__1::vector.113"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #19
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.113"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #18
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #20
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.113"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #19
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #18
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #18
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #20
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !214
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !214
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !217, !noalias !214
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !217, !noalias !214
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !214
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !214
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !217, !noalias !214
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !217, !noalias !214
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !214
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !214
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !217, !noalias !214
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !217, !noalias !214
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !214
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !214
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !217, !noalias !214
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !217, !noalias !214
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !219

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !214
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !214
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !217, !noalias !214
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !217, !noalias !214
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !220

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !221

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !222

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPKmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.120"*, i64*, i64*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.120"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #19
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #19
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector.120"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #19
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.120"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #18
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.120"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #18
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.120"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #19
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"*, i64, i16*, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #18
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !223
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !223
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !226, !noalias !223
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !226, !noalias !223
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !223
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !223
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !226, !noalias !223
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !226, !noalias !223
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !223
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !223
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !226, !noalias !223
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !226, !noalias !223
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !223
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !223
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !226, !noalias !223
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !226, !noalias !223
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !228

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !223
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !223
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !226, !noalias !223
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !226, !noalias !223
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !229

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !230

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !231

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !232
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !232
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !235, !noalias !232
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !235, !noalias !232
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !232
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !232
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !235, !noalias !232
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !235, !noalias !232
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !237

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !232
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !232
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !235, !noalias !232
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !235, !noalias !232
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !238

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !239

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !240
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !240
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !243, !noalias !240
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !243, !noalias !240
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !240
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !240
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !243, !noalias !240
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !243, !noalias !240
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !240
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !240
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !243, !noalias !240
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !243, !noalias !240
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !240
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !240
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !243, !noalias !240
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !243, !noalias !240
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !245

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !240
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !240
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !243, !noalias !240
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !243, !noalias !240
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !246

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !247

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !248

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !249
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !249
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !252, !noalias !249
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !252, !noalias !249
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !249
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !249
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !252, !noalias !249
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !252, !noalias !249
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !254

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !249
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !249
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !252, !noalias !249
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !252, !noalias !249
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !255

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !256

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string"*, i16*) local_unnamed_addr #3 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !257
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !257
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !260, !noalias !257
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !260, !noalias !257
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !257
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !257
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !260, !noalias !257
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !260, !noalias !257
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !257
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !257
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !260, !noalias !257
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !260, !noalias !257
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !257
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !257
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !260, !noalias !257
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !260, !noalias !257
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !262

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !257
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !257
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !260, !noalias !257
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !260, !noalias !257
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !263

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !264

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !265

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !266
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !266
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !269, !noalias !266
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !269, !noalias !266
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !266
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !266
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !269, !noalias !266
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !269, !noalias !266
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !271

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !266
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !266
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !269, !noalias !266
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !269, !noalias !266
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !272

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !273

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !274
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !274
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !277, !noalias !274
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !277, !noalias !274
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !274
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !274
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !277, !noalias !274
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !277, !noalias !274
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !274
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !274
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !277, !noalias !274
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !277, !noalias !274
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !274
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !274
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !277, !noalias !274
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !277, !noalias !274
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !279

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !274
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !274
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !277, !noalias !274
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !277, !noalias !274
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !280

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !281

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !282

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !283
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !283
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !286, !noalias !283
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !286, !noalias !283
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !283
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !283
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !286, !noalias !283
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !286, !noalias !283
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !288

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !283
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !283
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !286, !noalias !283
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !286, !noalias !283
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !289

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !290

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #19
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !291
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !291
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !294, !noalias !291
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !294, !noalias !291
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !291
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !291
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !294, !noalias !291
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !294, !noalias !291
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !291
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !291
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !294, !noalias !291
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !294, !noalias !291
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !291
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !291
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !294, !noalias !291
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !294, !noalias !291
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !296

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !291
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !291
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !294, !noalias !291
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !294, !noalias !291
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !297

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !298

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !299

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !300
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !300
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !303, !noalias !300
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !303, !noalias !300
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !300
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !300
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !303, !noalias !300
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !303, !noalias !300
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !305

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !300
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !300
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !303, !noalias !300
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !303, !noalias !300
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !306

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !307

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #19
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #18
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #18
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #18
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #20
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !308
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !308
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !311, !noalias !308
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !311, !noalias !308
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !308
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !308
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !311, !noalias !308
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !311, !noalias !308
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !308
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !308
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !311, !noalias !308
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !311, !noalias !308
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !308
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !308
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !311, !noalias !308
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !311, !noalias !308
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !313

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !308
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !308
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !311, !noalias !308
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !311, !noalias !308
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !314

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !315

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !316

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal10InsertEditC2EbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEm(%"class.views::internal::InsertEdit"*, i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), i64) unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.std::__1::vector.113", align 8
  %6 = alloca %"class.std::__1::vector.120", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0
  %9 = zext i1 %1 to i32
  %10 = bitcast %"class.std::__1::vector.113"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #19
  %11 = bitcast %"class.std::__1::vector.120"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #19
  %12 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #19
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = add i64 %20, %3
  %22 = and i64 %3, 4294967295
  %23 = shl i64 %3, 32
  %24 = or i64 %23, %22
  call void @_ZN5views8internal4EditC2ENS1_4TypeENS0_9MergeTypeENSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEENS5_ImNS9_ImEEEEN3gfx5RangeENS5_ISH_NS9_ISH_EEEEbmRKSB_m(%"class.views::internal::Edit"* %8, i32 0, i32 %9, %"class.std::__1::vector.113"* nonnull %5, %"class.std::__1::vector.120"* nonnull %6, i64 %24, %"class.std::__1::vector"* nonnull %7, i1 zeroext false, i64 %21, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %3)
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %26 = load %"class.gfx::Range"*, %"class.gfx::Range"** %25, align 8
  %27 = icmp eq %"class.gfx::Range"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %4
  %29 = ptrtoint %"class.gfx::Range"* %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %31 = bitcast %"class.gfx::Range"** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.gfx::Range"* %26 to i8*
  call void @_ZdlPv(i8* %32) #20
  br label %33

33:                                               ; preds = %4, %28
  %34 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %6, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint i64* %35 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %6, i64 0, i32 0, i32 1
  %40 = bitcast i64** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast i64* %35 to i8*
  call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %33, %37
  %43 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %5, i64 0, i32 0, i32 0
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %48 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %5, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, %44
  br i1 %50, label %66, label %51

51:                                               ; preds = %46, %61
  %52 = phi %"class.std::__1::basic_string"* [ %53, %61 ], [ %49, %46 ]
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 -1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::basic_string"* %53 to i8**
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #20
  br label %61

61:                                               ; preds = %58, %51
  %62 = icmp eq %"class.std::__1::basic_string"* %53, %44
  br i1 %62, label %63, label %51

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector.113"* %5 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %46
  %67 = phi i8* [ %65, %63 ], [ %47, %46 ]
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %48, align 8
  call void @_ZdlPv(i8* %67) #20
  br label %68

68:                                               ; preds = %42, %66
  %69 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views8internal10InsertEditE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal4EditC2ENS1_4TypeENS0_9MergeTypeENSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEENS5_ImNS9_ImEEEEN3gfx5RangeENS5_ISH_NS9_ISH_EEEEbmRKSB_m(%"class.views::internal::Edit"*, i32, i32, %"class.std::__1::vector.113"*, %"class.std::__1::vector.120"*, i64, %"class.std::__1::vector"*, i1 zeroext, i64, %"class.std::__1::basic_string"* dereferenceable(24), i64) unnamed_addr #3 comdat align 2 {
  %12 = zext i1 %7 to i8
  %13 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views8internal4EditE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 1
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 2
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"* %16, %"class.std::__1::vector.113"* dereferenceable(24) %3)
  %17 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4
  %18 = bitcast %"class.std::__1::vector.120"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #19
  %19 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.120"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %11
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.120"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #18
  unreachable

31:                                               ; preds = %27
  %32 = tail call i8* @_Znwm(i64 %24) #20
  %33 = bitcast i8* %32 to i64*
  %34 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 1
  %35 = bitcast i64** %34 to i8**
  store i8* %32, i8** %35, align 8
  %36 = bitcast %"class.std::__1::vector.120"* %17 to i8**
  store i8* %32, i8** %36, align 8
  %37 = getelementptr inbounds i64, i64* %33, i64 %25
  %38 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64* %37, i64** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %4, i64 0, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %20, align 8
  %42 = bitcast i64** %34 to i64*
  %43 = ptrtoint i8* %32 to i64
  %44 = ptrtoint i64* %40 to i64
  %45 = sub i64 %41, %44
  %46 = icmp sgt i64 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %31
  %48 = lshr exact i64 %45, 3
  %49 = bitcast i64* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %49, i64 %45, i1 false) #19
  %50 = getelementptr inbounds i64, i64* %33, i64 %48
  %51 = ptrtoint i64* %50 to i64
  br label %52

52:                                               ; preds = %47, %31
  %53 = phi i64 [ %51, %47 ], [ %43, %31 ]
  store i64 %53, i64* %42, align 8
  br label %54

54:                                               ; preds = %11, %52
  %55 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 5
  %56 = bitcast %"class.gfx::Range"* %55 to i64*
  store i64 %5, i64* %56, align 8
  %57 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 6
  %58 = bitcast %"class.std::__1::vector"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #19
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %60 = bitcast %"class.gfx::Range"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector"* %6 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %54
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %57 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #18
  unreachable

71:                                               ; preds = %67
  %72 = tail call i8* @_Znwm(i64 %64) #20
  %73 = bitcast i8* %72 to %"class.gfx::Range"*
  %74 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 6, i32 0, i32 1
  %75 = bitcast %"class.gfx::Range"** %74 to i8**
  store i8* %72, i8** %75, align 8
  %76 = bitcast %"class.std::__1::vector"* %57 to i8**
  store i8* %72, i8** %76, align 8
  %77 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %73, i64 %65
  %78 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %77, %"class.gfx::Range"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %80 = load %"class.gfx::Range"*, %"class.gfx::Range"** %79, align 8
  %81 = load i64, i64* %60, align 8
  %82 = bitcast %"class.gfx::Range"** %74 to i64*
  %83 = ptrtoint i8* %72 to i64
  %84 = ptrtoint %"class.gfx::Range"* %80 to i64
  %85 = sub i64 %81, %84
  %86 = icmp sgt i64 %85, 0
  br i1 %86, label %87, label %92

87:                                               ; preds = %71
  %88 = lshr exact i64 %85, 3
  %89 = bitcast %"class.gfx::Range"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* align 4 %89, i64 %85, i1 false) #19
  %90 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %73, i64 %88
  %91 = ptrtoint %"class.gfx::Range"* %90 to i64
  br label %92

92:                                               ; preds = %87, %71
  %93 = phi i64 [ %91, %87 ], [ %83, %71 ]
  store i64 %93, i64* %82, align 8
  br label %94

94:                                               ; preds = %54, %92
  %95 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 7
  store i8 %12, i8* %95, align 8
  %96 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 8
  store i64 %8, i64* %96, align 8
  %97 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9
  %98 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #19
  br label %280

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i16*, i16** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp ult i64 %109, 11
  br i1 %110, label %111, label %116

111:                                              ; preds = %105
  %112 = bitcast %"class.std::__1::basic_string"* %97 to i16*
  %113 = trunc i64 %109 to i8
  %114 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %114, i64 0, i32 1, i32 1
  store i8 %113, i8* %115, align 1
  br label %133

116:                                              ; preds = %105
  %117 = icmp ugt i64 %109, 9223372036854775791
  br i1 %117, label %118, label %120

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::basic_string"* %97 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %119) #18
  unreachable

120:                                              ; preds = %116
  %121 = add nuw nsw i64 %109, 8
  %122 = and i64 %121, -8
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  tail call void @abort() #18
  unreachable

125:                                              ; preds = %120
  %126 = shl i64 %122, 1
  %127 = tail call i8* @_Znwm(i64 %126) #20
  %128 = bitcast i8* %127 to i16*
  %129 = bitcast %"class.std::__1::basic_string"* %97 to i8**
  store i8* %127, i8** %129, align 8
  %130 = or i64 %122, -9223372036854775808
  %131 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %109, i64* %132, align 8
  br label %133

133:                                              ; preds = %125, %111
  %134 = phi i16* [ %112, %111 ], [ %128, %125 ]
  %135 = add nuw nsw i64 %109, 1
  %136 = add i64 %109, 1
  %137 = icmp ult i64 %136, 16
  br i1 %137, label %227, label %138

138:                                              ; preds = %133
  %139 = add i64 %109, 1
  %140 = getelementptr i16, i16* %134, i64 %139
  %141 = getelementptr i16, i16* %107, i64 %139
  %142 = icmp ult i16* %134, %141
  %143 = icmp ult i16* %107, %140
  %144 = and i1 %142, %143
  br i1 %144, label %227, label %145

145:                                              ; preds = %138
  %146 = and i64 %136, -16
  %147 = sub i64 %135, %146
  %148 = getelementptr i16, i16* %107, i64 %146
  %149 = getelementptr i16, i16* %134, i64 %146
  %150 = add i64 %146, -16
  %151 = lshr exact i64 %150, 4
  %152 = add nuw nsw i64 %151, 1
  %153 = and i64 %152, 3
  %154 = icmp ult i64 %150, 48
  br i1 %154, label %206, label %155

155:                                              ; preds = %145
  %156 = sub nsw i64 %152, %153
  br label %157

157:                                              ; preds = %157, %155
  %158 = phi i64 [ 0, %155 ], [ %203, %157 ]
  %159 = phi i64 [ %156, %155 ], [ %204, %157 ]
  %160 = getelementptr i16, i16* %107, i64 %158
  %161 = getelementptr i16, i16* %134, i64 %158
  %162 = bitcast i16* %160 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !317
  %164 = getelementptr i16, i16* %160, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !317
  %167 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %167, align 2, !alias.scope !320, !noalias !317
  %168 = getelementptr i16, i16* %161, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %169, align 2, !alias.scope !320, !noalias !317
  %170 = or i64 %158, 16
  %171 = getelementptr i16, i16* %107, i64 %170
  %172 = getelementptr i16, i16* %134, i64 %170
  %173 = bitcast i16* %171 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !317
  %175 = getelementptr i16, i16* %171, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !317
  %178 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %178, align 2, !alias.scope !320, !noalias !317
  %179 = getelementptr i16, i16* %172, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %180, align 2, !alias.scope !320, !noalias !317
  %181 = or i64 %158, 32
  %182 = getelementptr i16, i16* %107, i64 %181
  %183 = getelementptr i16, i16* %134, i64 %181
  %184 = bitcast i16* %182 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !317
  %186 = getelementptr i16, i16* %182, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !317
  %189 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %189, align 2, !alias.scope !320, !noalias !317
  %190 = getelementptr i16, i16* %183, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %191, align 2, !alias.scope !320, !noalias !317
  %192 = or i64 %158, 48
  %193 = getelementptr i16, i16* %107, i64 %192
  %194 = getelementptr i16, i16* %134, i64 %192
  %195 = bitcast i16* %193 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !317
  %197 = getelementptr i16, i16* %193, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !317
  %200 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %200, align 2, !alias.scope !320, !noalias !317
  %201 = getelementptr i16, i16* %194, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %202, align 2, !alias.scope !320, !noalias !317
  %203 = add i64 %158, 64
  %204 = add i64 %159, -4
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %157, !llvm.loop !322

206:                                              ; preds = %157, %145
  %207 = phi i64 [ 0, %145 ], [ %203, %157 ]
  %208 = icmp eq i64 %153, 0
  br i1 %208, label %225, label %209

209:                                              ; preds = %206, %209
  %210 = phi i64 [ %222, %209 ], [ %207, %206 ]
  %211 = phi i64 [ %223, %209 ], [ %153, %206 ]
  %212 = getelementptr i16, i16* %107, i64 %210
  %213 = getelementptr i16, i16* %134, i64 %210
  %214 = bitcast i16* %212 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2, !alias.scope !317
  %216 = getelementptr i16, i16* %212, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !317
  %219 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %219, align 2, !alias.scope !320, !noalias !317
  %220 = getelementptr i16, i16* %213, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %221, align 2, !alias.scope !320, !noalias !317
  %222 = add i64 %210, 16
  %223 = add i64 %211, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %209, !llvm.loop !323

225:                                              ; preds = %209, %206
  %226 = icmp eq i64 %136, %146
  br i1 %226, label %280, label %227

227:                                              ; preds = %225, %138, %133
  %228 = phi i64 [ %135, %138 ], [ %135, %133 ], [ %147, %225 ]
  %229 = phi i16* [ %107, %138 ], [ %107, %133 ], [ %148, %225 ]
  %230 = phi i16* [ %134, %138 ], [ %134, %133 ], [ %149, %225 ]
  %231 = add i64 %228, -1
  %232 = and i64 %228, 7
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %245, label %234

234:                                              ; preds = %227, %234
  %235 = phi i64 [ %240, %234 ], [ %228, %227 ]
  %236 = phi i16* [ %242, %234 ], [ %229, %227 ]
  %237 = phi i16* [ %241, %234 ], [ %230, %227 ]
  %238 = phi i64 [ %243, %234 ], [ %232, %227 ]
  %239 = load i16, i16* %236, align 2
  store i16 %239, i16* %237, align 2
  %240 = add i64 %235, -1
  %241 = getelementptr inbounds i16, i16* %237, i64 1
  %242 = getelementptr inbounds i16, i16* %236, i64 1
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %234, !llvm.loop !324

245:                                              ; preds = %234, %227
  %246 = phi i64 [ %228, %227 ], [ %240, %234 ]
  %247 = phi i16* [ %229, %227 ], [ %242, %234 ]
  %248 = phi i16* [ %230, %227 ], [ %241, %234 ]
  %249 = icmp ult i64 %231, 7
  br i1 %249, label %280, label %250

250:                                              ; preds = %245, %250
  %251 = phi i64 [ %276, %250 ], [ %246, %245 ]
  %252 = phi i16* [ %278, %250 ], [ %247, %245 ]
  %253 = phi i16* [ %277, %250 ], [ %248, %245 ]
  %254 = load i16, i16* %252, align 2
  store i16 %254, i16* %253, align 2
  %255 = getelementptr inbounds i16, i16* %253, i64 1
  %256 = getelementptr inbounds i16, i16* %252, i64 1
  %257 = load i16, i16* %256, align 2
  store i16 %257, i16* %255, align 2
  %258 = getelementptr inbounds i16, i16* %253, i64 2
  %259 = getelementptr inbounds i16, i16* %252, i64 2
  %260 = load i16, i16* %259, align 2
  store i16 %260, i16* %258, align 2
  %261 = getelementptr inbounds i16, i16* %253, i64 3
  %262 = getelementptr inbounds i16, i16* %252, i64 3
  %263 = load i16, i16* %262, align 2
  store i16 %263, i16* %261, align 2
  %264 = getelementptr inbounds i16, i16* %253, i64 4
  %265 = getelementptr inbounds i16, i16* %252, i64 4
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %253, i64 5
  %268 = getelementptr inbounds i16, i16* %252, i64 5
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %253, i64 6
  %271 = getelementptr inbounds i16, i16* %252, i64 6
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %253, i64 7
  %274 = getelementptr inbounds i16, i16* %252, i64 7
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = add i64 %251, -8
  %277 = getelementptr inbounds i16, i16* %253, i64 8
  %278 = getelementptr inbounds i16, i16* %252, i64 8
  %279 = icmp eq i64 %276, 0
  br i1 %279, label %280, label %250, !llvm.loop !325

280:                                              ; preds = %245, %250, %225, %102
  %281 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 10
  store i64 %10, i64* %281, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal4EditD2Ev(%"class.views::internal::Edit"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views8internal4EditE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 9
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.gfx::Range"*, %"class.gfx::Range"** %12, align 8
  %14 = icmp eq %"class.gfx::Range"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.gfx::Range"* %13 to i64
  %17 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 6, i32 0, i32 1
  %18 = bitcast %"class.gfx::Range"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.gfx::Range"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint i64* %22 to i64
  %26 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 4, i32 0, i32 1
  %27 = bitcast i64** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast i64* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %36 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %32
  br i1 %38, label %54, label %39

39:                                               ; preds = %34, %49
  %40 = phi %"class.std::__1::basic_string"* [ %41, %49 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 -1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::basic_string"* %41 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #20
  br label %49

49:                                               ; preds = %46, %39
  %50 = icmp eq %"class.std::__1::basic_string"* %41, %32
  br i1 %50, label %51, label %39

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector.113"* %30 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  store %"class.std::__1::basic_string"* %32, %"class.std::__1::basic_string"** %36, align 8
  tail call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %29, %54
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal10InsertEditD0Ev(%"class.views::internal::InsertEdit"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0
  tail call void @_ZN5views8internal4EditD2Ev(%"class.views::internal::Edit"* %2) #19
  %3 = bitcast %"class.views::internal::InsertEdit"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5views8internal10InsertEdit7DoMergeEPKNS0_4EditE(%"class.views::internal::InsertEdit"*, %"class.views::internal::Edit"*) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %224

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 10
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 9
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %6
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = add i64 %20, %8
  %22 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %25, label %224

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 9
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i16* %32, i16* %35
  %38 = select i1 %30, i64 %34, i64 %36
  br i1 %13, label %39, label %46

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 9223372036854775807
  %43 = add nsw i64 %42, -1
  %44 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %25
  %47 = zext i8 %12 to i64
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i64 [ %43, %39 ], [ 10, %46 ]
  %50 = phi i64 [ %45, %39 ], [ %47, %46 ]
  %51 = sub i64 %49, %50
  %52 = icmp ult i64 %51, %38
  br i1 %52, label %217, label %53

53:                                               ; preds = %48
  %54 = icmp eq i64 %38, 0
  br i1 %54, label %220, label %55

55:                                               ; preds = %53
  br i1 %13, label %56, label %59

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  br label %61

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi i16* [ %58, %56 ], [ %60, %59 ]
  %63 = getelementptr inbounds i16, i16* %62, i64 %50
  %64 = icmp ult i64 %38, 16
  br i1 %64, label %154, label %65

65:                                               ; preds = %61
  %66 = add i64 %38, %50
  %67 = getelementptr i16, i16* %62, i64 %66
  %68 = getelementptr i16, i16* %37, i64 %38
  %69 = icmp ult i16* %63, %68
  %70 = icmp ult i16* %37, %67
  %71 = and i1 %69, %70
  br i1 %71, label %154, label %72

72:                                               ; preds = %65
  %73 = and i64 %38, -16
  %74 = sub i64 %38, %73
  %75 = getelementptr i16, i16* %37, i64 %73
  %76 = getelementptr i16, i16* %63, i64 %73
  %77 = add i64 %73, -16
  %78 = lshr exact i64 %77, 4
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 3
  %81 = icmp ult i64 %77, 48
  br i1 %81, label %133, label %82

82:                                               ; preds = %72
  %83 = sub nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %130, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %131, %84 ]
  %87 = getelementptr i16, i16* %37, i64 %85
  %88 = getelementptr i16, i16* %63, i64 %85
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !326
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !326
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !329, !noalias !326
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !329, !noalias !326
  %97 = or i64 %85, 16
  %98 = getelementptr i16, i16* %37, i64 %97
  %99 = getelementptr i16, i16* %63, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !326
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !326
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !329, !noalias !326
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !329, !noalias !326
  %108 = or i64 %85, 32
  %109 = getelementptr i16, i16* %37, i64 %108
  %110 = getelementptr i16, i16* %63, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !326
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !326
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !329, !noalias !326
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !329, !noalias !326
  %119 = or i64 %85, 48
  %120 = getelementptr i16, i16* %37, i64 %119
  %121 = getelementptr i16, i16* %63, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !326
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !326
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !329, !noalias !326
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !329, !noalias !326
  %130 = add i64 %85, 64
  %131 = add i64 %86, -4
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %84, !llvm.loop !331

133:                                              ; preds = %84, %72
  %134 = phi i64 [ 0, %72 ], [ %130, %84 ]
  %135 = icmp eq i64 %80, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %149, %136 ], [ %134, %133 ]
  %138 = phi i64 [ %150, %136 ], [ %80, %133 ]
  %139 = getelementptr i16, i16* %37, i64 %137
  %140 = getelementptr i16, i16* %63, i64 %137
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !326
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !326
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !329, !noalias !326
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !329, !noalias !326
  %149 = add i64 %137, 16
  %150 = add i64 %138, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %136, !llvm.loop !332

152:                                              ; preds = %136, %133
  %153 = icmp eq i64 %38, %73
  br i1 %153, label %207, label %154

154:                                              ; preds = %152, %65, %61
  %155 = phi i64 [ %38, %65 ], [ %38, %61 ], [ %74, %152 ]
  %156 = phi i16* [ %37, %65 ], [ %37, %61 ], [ %75, %152 ]
  %157 = phi i16* [ %63, %65 ], [ %63, %61 ], [ %76, %152 ]
  %158 = add i64 %155, -1
  %159 = and i64 %155, 7
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %154, %161
  %162 = phi i64 [ %167, %161 ], [ %155, %154 ]
  %163 = phi i16* [ %169, %161 ], [ %156, %154 ]
  %164 = phi i16* [ %168, %161 ], [ %157, %154 ]
  %165 = phi i64 [ %170, %161 ], [ %159, %154 ]
  %166 = load i16, i16* %163, align 2
  store i16 %166, i16* %164, align 2
  %167 = add i64 %162, -1
  %168 = getelementptr inbounds i16, i16* %164, i64 1
  %169 = getelementptr inbounds i16, i16* %163, i64 1
  %170 = add i64 %165, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %161, !llvm.loop !333

172:                                              ; preds = %161, %154
  %173 = phi i64 [ %155, %154 ], [ %167, %161 ]
  %174 = phi i16* [ %156, %154 ], [ %169, %161 ]
  %175 = phi i16* [ %157, %154 ], [ %168, %161 ]
  %176 = icmp ult i64 %158, 7
  br i1 %176, label %207, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %203, %177 ], [ %173, %172 ]
  %179 = phi i16* [ %205, %177 ], [ %174, %172 ]
  %180 = phi i16* [ %204, %177 ], [ %175, %172 ]
  %181 = load i16, i16* %179, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %180, i64 1
  %183 = getelementptr inbounds i16, i16* %179, i64 1
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %180, i64 2
  %186 = getelementptr inbounds i16, i16* %179, i64 2
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %180, i64 3
  %189 = getelementptr inbounds i16, i16* %179, i64 3
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %180, i64 4
  %192 = getelementptr inbounds i16, i16* %179, i64 4
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %180, i64 5
  %195 = getelementptr inbounds i16, i16* %179, i64 5
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %180, i64 6
  %198 = getelementptr inbounds i16, i16* %179, i64 6
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %180, i64 7
  %201 = getelementptr inbounds i16, i16* %179, i64 7
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = add i64 %178, -8
  %204 = getelementptr inbounds i16, i16* %180, i64 8
  %205 = getelementptr inbounds i16, i16* %179, i64 8
  %206 = icmp eq i64 %203, 0
  br i1 %206, label %207, label %177, !llvm.loop !334

207:                                              ; preds = %172, %177, %152
  %208 = add i64 %50, %38
  %209 = load i8, i8* %11, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %208, i64* %212, align 8
  br label %215

213:                                              ; preds = %207
  %214 = trunc i64 %208 to i8
  store i8 %214, i8* %11, align 1
  br label %215

215:                                              ; preds = %213, %211
  %216 = getelementptr inbounds i16, i16* %62, i64 %208
  store i16 0, i16* %216, align 2
  br label %220

217:                                              ; preds = %48
  %218 = add i64 %50, %38
  %219 = sub i64 %218, %49
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %9, i64 %49, i64 %219, i64 %50, i64 %50, i64 0, i64 %38, i16* %37) #19
  br label %220

220:                                              ; preds = %53, %215, %217
  %221 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 8
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"class.views::internal::InsertEdit", %"class.views::internal::InsertEdit"* %0, i64 0, i32 0, i32 8
  store i64 %222, i64* %223, align 8
  br label %224

224:                                              ; preds = %2, %19, %220
  %225 = phi i1 [ true, %220 ], [ false, %19 ], [ false, %2 ]
  ret i1 %225
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal4EditD0Ev(%"class.views::internal::Edit"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.113"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.113"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.113"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #19
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #19
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #20
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal10DeleteEditC2EbNSt3__16vectorINS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS7_IS9_EEEENS3_ImNS7_ImEEEEN3gfx5RangeENS3_ISF_NS7_ISF_EEEEbm(%"class.views::internal::DeleteEdit"*, i1 zeroext, %"class.std::__1::vector.113"*, %"class.std::__1::vector.120"*, i64, %"class.std::__1::vector"*, i1 zeroext, i64) unnamed_addr #3 comdat align 2 {
  %9 = alloca %"class.std::__1::vector.113", align 8
  %10 = alloca %"class.std::__1::vector.120", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0
  %14 = zext i1 %1 to i32
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"* nonnull %9, %"class.std::__1::vector.113"* dereferenceable(24) %2)
  %15 = bitcast %"class.std::__1::vector.120"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #19
  %16 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %3, i64 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.120"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %8
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.120"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #18
  unreachable

28:                                               ; preds = %24
  %29 = call i8* @_Znwm(i64 %21) #20
  %30 = bitcast i8* %29 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %10, i64 0, i32 0, i32 1
  %32 = bitcast i64** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector.120"* %10 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds i64, i64* %30, i64 %22
  %35 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %34, i64** %35, align 8
  %36 = bitcast i64** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp sgt i64 %21, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %28
  %40 = lshr exact i64 %21, 3
  %41 = inttoptr i64 %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %41, i64 %21, i1 false) #19
  %42 = getelementptr inbounds i64, i64* %30, i64 %40
  %43 = ptrtoint i64* %42 to i64
  br label %44

44:                                               ; preds = %39, %28
  %45 = phi i64 [ %43, %39 ], [ %37, %28 ]
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %8, %44
  %47 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #19
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %49 = bitcast %"class.gfx::Range"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %5 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 3
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %78, label %56

56:                                               ; preds = %46
  %57 = icmp ugt i64 %54, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #18
  unreachable

60:                                               ; preds = %56
  %61 = call i8* @_Znwm(i64 %53) #20
  %62 = bitcast i8* %61 to %"class.gfx::Range"*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %64 = bitcast %"class.gfx::Range"** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %62, i64 %54
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %66, %"class.gfx::Range"** %67, align 8
  %68 = bitcast %"class.gfx::Range"** %63 to i64*
  %69 = ptrtoint i8* %61 to i64
  %70 = icmp sgt i64 %53, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %60
  %72 = lshr exact i64 %53, 3
  %73 = inttoptr i64 %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %73, i64 %53, i1 false) #19
  %74 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %62, i64 %72
  %75 = ptrtoint %"class.gfx::Range"* %74 to i64
  br label %76

76:                                               ; preds = %71, %60
  %77 = phi i64 [ %75, %71 ], [ %69, %60 ]
  store i64 %77, i64* %68, align 8
  br label %78

78:                                               ; preds = %46, %76
  %79 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #19
  call void @_ZN5views8internal4EditC2ENS1_4TypeENS0_9MergeTypeENSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEENS5_ImNS9_ImEEEEN3gfx5RangeENS5_ISH_NS9_ISH_EEEEbmRKSB_m(%"class.views::internal::Edit"* %13, i32 1, i32 %14, %"class.std::__1::vector.113"* nonnull %9, %"class.std::__1::vector.120"* nonnull %10, i64 %4, %"class.std::__1::vector"* nonnull %11, i1 zeroext %6, i64 %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i64 0)
  %80 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #20
  br label %87

87:                                               ; preds = %78, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #19
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %89 = load %"class.gfx::Range"*, %"class.gfx::Range"** %88, align 8
  %90 = icmp eq %"class.gfx::Range"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = ptrtoint %"class.gfx::Range"* %89 to i64
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %94 = bitcast %"class.gfx::Range"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.gfx::Range"* %89 to i8*
  call void @_ZdlPv(i8* %95) #20
  br label %96

96:                                               ; preds = %87, %91
  %97 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %10, i64 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i64* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %10, i64 0, i32 0, i32 1
  %103 = bitcast i64** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i64* %98 to i8*
  call void @_ZdlPv(i8* %104) #20
  br label %105

105:                                              ; preds = %96, %100
  %106 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %9, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %106, align 8
  %108 = icmp eq %"class.std::__1::basic_string"* %107, null
  br i1 %108, label %131, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.std::__1::basic_string"* %107 to i8*
  %111 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %9, i64 0, i32 0, i32 1
  %112 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %111, align 8
  %113 = icmp eq %"class.std::__1::basic_string"* %112, %107
  br i1 %113, label %129, label %114

114:                                              ; preds = %109, %124
  %115 = phi %"class.std::__1::basic_string"* [ %116, %124 ], [ %112, %109 ]
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 -1
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::basic_string"* %116 to i8**
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #20
  br label %124

124:                                              ; preds = %121, %114
  %125 = icmp eq %"class.std::__1::basic_string"* %116, %107
  br i1 %125, label %126, label %114

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::vector.113"* %9 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %109
  %130 = phi i8* [ %128, %126 ], [ %110, %109 ]
  store %"class.std::__1::basic_string"* %107, %"class.std::__1::basic_string"** %111, align 8
  call void @_ZdlPv(i8* %130) #20
  br label %131

131:                                              ; preds = %105, %129
  %132 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views8internal10DeleteEditE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal10DeleteEditD0Ev(%"class.views::internal::DeleteEdit"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0
  tail call void @_ZN5views8internal4EditD2Ev(%"class.views::internal::Edit"* %2) #19
  %3 = bitcast %"class.views::internal::DeleteEdit"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5views8internal10DeleteEdit7DoMergeEPKNS0_4EditE(%"class.views::internal::DeleteEdit"*, %"class.views::internal::Edit"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %266

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 7
  %9 = load i8, i8* %8, align 8, !range !68
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !68
  %13 = icmp ne i8 %12, 0
  br i1 %10, label %55, label %14

14:                                               ; preds = %7
  br i1 %13, label %15, label %266

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 4, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %33

31:                                               ; preds = %15
  %32 = zext i8 %26 to i64
  br label %33

33:                                               ; preds = %28, %31
  %34 = phi i64 [ %30, %28 ], [ %32, %31 ]
  %35 = add i64 %34, %21
  %36 = icmp eq i64 %18, %35
  br i1 %36, label %37, label %266

37:                                               ; preds = %33
  store i64 %21, i64* %17, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #19
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %40 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %39, %"class.std::__1::basic_string"* dereferenceable(24) %41)
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #20
  br label %50

50:                                               ; preds = %47, %37
  %51 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %38, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #19
  %52 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 8
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 8
  store i64 %53, i64* %54, align 8
  br label %266

55:                                               ; preds = %7
  br i1 %13, label %266, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 4, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %59, %62
  br i1 %63, label %64, label %266

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8
  %67 = getelementptr inbounds %"class.views::internal::DeleteEdit", %"class.views::internal::DeleteEdit"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::basic_string"* %66 to i16*
  %78 = zext i8 %71 to i64
  %79 = select i1 %72, i16* %74, i16* %77
  %80 = select i1 %72, i64 %76, i64 %78
  %81 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = and i64 %87, 9223372036854775807
  %89 = add nsw i64 %88, -1
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  br label %94

92:                                               ; preds = %64
  %93 = zext i8 %83 to i64
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i64 [ %89, %85 ], [ 10, %92 ]
  %96 = phi i64 [ %91, %85 ], [ %93, %92 ]
  %97 = sub i64 %95, %96
  %98 = icmp ult i64 %97, %80
  br i1 %98, label %263, label %99

99:                                               ; preds = %94
  %100 = icmp eq i64 %80, 0
  br i1 %100, label %266, label %101

101:                                              ; preds = %99
  br i1 %84, label %102, label %105

102:                                              ; preds = %101
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  br label %107

105:                                              ; preds = %101
  %106 = bitcast %"class.std::__1::basic_string"* %68 to i16*
  br label %107

107:                                              ; preds = %105, %102
  %108 = phi i16* [ %104, %102 ], [ %106, %105 ]
  %109 = getelementptr inbounds i16, i16* %108, i64 %96
  %110 = icmp ult i64 %80, 16
  br i1 %110, label %200, label %111

111:                                              ; preds = %107
  %112 = add i64 %80, %96
  %113 = getelementptr i16, i16* %108, i64 %112
  %114 = getelementptr i16, i16* %79, i64 %80
  %115 = icmp ult i16* %109, %114
  %116 = icmp ult i16* %79, %113
  %117 = and i1 %115, %116
  br i1 %117, label %200, label %118

118:                                              ; preds = %111
  %119 = and i64 %80, -16
  %120 = sub i64 %80, %119
  %121 = getelementptr i16, i16* %79, i64 %119
  %122 = getelementptr i16, i16* %109, i64 %119
  %123 = add i64 %119, -16
  %124 = lshr exact i64 %123, 4
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 3
  %127 = icmp ult i64 %123, 48
  br i1 %127, label %179, label %128

128:                                              ; preds = %118
  %129 = sub nsw i64 %125, %126
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i64 [ 0, %128 ], [ %176, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %177, %130 ]
  %133 = getelementptr i16, i16* %79, i64 %131
  %134 = getelementptr i16, i16* %109, i64 %131
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !335
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !335
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !338, !noalias !335
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !338, !noalias !335
  %143 = or i64 %131, 16
  %144 = getelementptr i16, i16* %79, i64 %143
  %145 = getelementptr i16, i16* %109, i64 %143
  %146 = bitcast i16* %144 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !335
  %148 = getelementptr i16, i16* %144, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !335
  %151 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !338, !noalias !335
  %152 = getelementptr i16, i16* %145, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !338, !noalias !335
  %154 = or i64 %131, 32
  %155 = getelementptr i16, i16* %79, i64 %154
  %156 = getelementptr i16, i16* %109, i64 %154
  %157 = bitcast i16* %155 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !335
  %159 = getelementptr i16, i16* %155, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !335
  %162 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %162, align 2, !alias.scope !338, !noalias !335
  %163 = getelementptr i16, i16* %156, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %164, align 2, !alias.scope !338, !noalias !335
  %165 = or i64 %131, 48
  %166 = getelementptr i16, i16* %79, i64 %165
  %167 = getelementptr i16, i16* %109, i64 %165
  %168 = bitcast i16* %166 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !335
  %170 = getelementptr i16, i16* %166, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !335
  %173 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %173, align 2, !alias.scope !338, !noalias !335
  %174 = getelementptr i16, i16* %167, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %175, align 2, !alias.scope !338, !noalias !335
  %176 = add i64 %131, 64
  %177 = add i64 %132, -4
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %130, !llvm.loop !340

179:                                              ; preds = %130, %118
  %180 = phi i64 [ 0, %118 ], [ %176, %130 ]
  %181 = icmp eq i64 %126, 0
  br i1 %181, label %198, label %182

182:                                              ; preds = %179, %182
  %183 = phi i64 [ %195, %182 ], [ %180, %179 ]
  %184 = phi i64 [ %196, %182 ], [ %126, %179 ]
  %185 = getelementptr i16, i16* %79, i64 %183
  %186 = getelementptr i16, i16* %109, i64 %183
  %187 = bitcast i16* %185 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !335
  %189 = getelementptr i16, i16* %185, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !335
  %192 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %192, align 2, !alias.scope !338, !noalias !335
  %193 = getelementptr i16, i16* %186, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %194, align 2, !alias.scope !338, !noalias !335
  %195 = add i64 %183, 16
  %196 = add i64 %184, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %182, !llvm.loop !341

198:                                              ; preds = %182, %179
  %199 = icmp eq i64 %80, %119
  br i1 %199, label %253, label %200

200:                                              ; preds = %198, %111, %107
  %201 = phi i64 [ %80, %111 ], [ %80, %107 ], [ %120, %198 ]
  %202 = phi i16* [ %79, %111 ], [ %79, %107 ], [ %121, %198 ]
  %203 = phi i16* [ %109, %111 ], [ %109, %107 ], [ %122, %198 ]
  %204 = add i64 %201, -1
  %205 = and i64 %201, 7
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %218, label %207

207:                                              ; preds = %200, %207
  %208 = phi i64 [ %213, %207 ], [ %201, %200 ]
  %209 = phi i16* [ %215, %207 ], [ %202, %200 ]
  %210 = phi i16* [ %214, %207 ], [ %203, %200 ]
  %211 = phi i64 [ %216, %207 ], [ %205, %200 ]
  %212 = load i16, i16* %209, align 2
  store i16 %212, i16* %210, align 2
  %213 = add i64 %208, -1
  %214 = getelementptr inbounds i16, i16* %210, i64 1
  %215 = getelementptr inbounds i16, i16* %209, i64 1
  %216 = add i64 %211, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %207, !llvm.loop !342

218:                                              ; preds = %207, %200
  %219 = phi i64 [ %201, %200 ], [ %213, %207 ]
  %220 = phi i16* [ %202, %200 ], [ %215, %207 ]
  %221 = phi i16* [ %203, %200 ], [ %214, %207 ]
  %222 = icmp ult i64 %204, 7
  br i1 %222, label %253, label %223

223:                                              ; preds = %218, %223
  %224 = phi i64 [ %249, %223 ], [ %219, %218 ]
  %225 = phi i16* [ %251, %223 ], [ %220, %218 ]
  %226 = phi i16* [ %250, %223 ], [ %221, %218 ]
  %227 = load i16, i16* %225, align 2
  store i16 %227, i16* %226, align 2
  %228 = getelementptr inbounds i16, i16* %226, i64 1
  %229 = getelementptr inbounds i16, i16* %225, i64 1
  %230 = load i16, i16* %229, align 2
  store i16 %230, i16* %228, align 2
  %231 = getelementptr inbounds i16, i16* %226, i64 2
  %232 = getelementptr inbounds i16, i16* %225, i64 2
  %233 = load i16, i16* %232, align 2
  store i16 %233, i16* %231, align 2
  %234 = getelementptr inbounds i16, i16* %226, i64 3
  %235 = getelementptr inbounds i16, i16* %225, i64 3
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 2
  %237 = getelementptr inbounds i16, i16* %226, i64 4
  %238 = getelementptr inbounds i16, i16* %225, i64 4
  %239 = load i16, i16* %238, align 2
  store i16 %239, i16* %237, align 2
  %240 = getelementptr inbounds i16, i16* %226, i64 5
  %241 = getelementptr inbounds i16, i16* %225, i64 5
  %242 = load i16, i16* %241, align 2
  store i16 %242, i16* %240, align 2
  %243 = getelementptr inbounds i16, i16* %226, i64 6
  %244 = getelementptr inbounds i16, i16* %225, i64 6
  %245 = load i16, i16* %244, align 2
  store i16 %245, i16* %243, align 2
  %246 = getelementptr inbounds i16, i16* %226, i64 7
  %247 = getelementptr inbounds i16, i16* %225, i64 7
  %248 = load i16, i16* %247, align 2
  store i16 %248, i16* %246, align 2
  %249 = add i64 %224, -8
  %250 = getelementptr inbounds i16, i16* %226, i64 8
  %251 = getelementptr inbounds i16, i16* %225, i64 8
  %252 = icmp eq i64 %249, 0
  br i1 %252, label %253, label %223, !llvm.loop !343

253:                                              ; preds = %218, %223, %198
  %254 = add i64 %96, %80
  %255 = load i8, i8* %82, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %254, i64* %258, align 8
  br label %261

259:                                              ; preds = %253
  %260 = trunc i64 %254 to i8
  store i8 %260, i8* %82, align 1
  br label %261

261:                                              ; preds = %259, %257
  %262 = getelementptr inbounds i16, i16* %108, i64 %254
  store i16 0, i16* %262, align 2
  br label %266

263:                                              ; preds = %94
  %264 = add i64 %96, %80
  %265 = sub i64 %264, %95
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %68, i64 %95, i64 %265, i64 %96, i64 %96, i64 0, i64 %80, i16* %79) #19
  br label %266

266:                                              ; preds = %263, %261, %99, %50, %55, %56, %14, %33, %2
  %267 = phi i1 [ false, %2 ], [ false, %33 ], [ false, %14 ], [ false, %56 ], [ false, %55 ], [ true, %50 ], [ true, %99 ], [ true, %261 ], [ true, %263 ]
  ret i1 %267
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #19
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #18
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #18
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #20
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !344
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !344
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !347, !noalias !344
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !347, !noalias !344
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !344
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !344
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !347, !noalias !344
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !347, !noalias !344
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !344
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !344
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !347, !noalias !344
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !347, !noalias !344
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !344
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !344
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !347, !noalias !344
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !347, !noalias !344
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !349

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !344
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !344
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !347, !noalias !344
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !347, !noalias !344
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !350

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !351

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !352

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !353
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !353
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !356, !noalias !353
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !356, !noalias !353
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !353
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !353
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !356, !noalias !353
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !356, !noalias !353
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !353
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !353
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !356, !noalias !353
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !356, !noalias !353
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !353
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !353
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !356, !noalias !353
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !356, !noalias !353
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !358

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !353
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !353
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !356, !noalias !353
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !356, !noalias !353
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !359

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !360

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !361

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #19
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal11ReplaceEditC2ENS0_9MergeTypeENSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS4_ImNS8_ImEEEEN3gfx5RangeENS4_ISG_NS8_ISG_EEEEbmRKSA_m(%"class.views::internal::ReplaceEdit"*, i32, %"class.std::__1::vector.113"*, %"class.std::__1::vector.120"*, i64, %"class.std::__1::vector"*, i1 zeroext, i64, %"class.std::__1::basic_string"* dereferenceable(24), i64) unnamed_addr #3 comdat align 2 {
  %11 = alloca %"class.std::__1::vector.113", align 8
  %12 = alloca %"class.std::__1::vector.120", align 8
  %13 = alloca %"class.std::__1::vector", align 8
  %14 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.113"* nonnull %11, %"class.std::__1::vector.113"* dereferenceable(24) %2)
  %15 = bitcast %"class.std::__1::vector.120"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #19
  %16 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %3, i64 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.120"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %10
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.120"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #18
  unreachable

28:                                               ; preds = %24
  %29 = call i8* @_Znwm(i64 %21) #20
  %30 = bitcast i8* %29 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 1
  %32 = bitcast i64** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector.120"* %12 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds i64, i64* %30, i64 %22
  %35 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %34, i64** %35, align 8
  %36 = bitcast i64** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp sgt i64 %21, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %28
  %40 = lshr exact i64 %21, 3
  %41 = inttoptr i64 %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %41, i64 %21, i1 false) #19
  %42 = getelementptr inbounds i64, i64* %30, i64 %40
  %43 = ptrtoint i64* %42 to i64
  br label %44

44:                                               ; preds = %39, %28
  %45 = phi i64 [ %43, %39 ], [ %37, %28 ]
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %10, %44
  %47 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #19
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %49 = bitcast %"class.gfx::Range"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %5 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 3
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %78, label %56

56:                                               ; preds = %46
  %57 = icmp ugt i64 %54, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #18
  unreachable

60:                                               ; preds = %56
  %61 = call i8* @_Znwm(i64 %53) #20
  %62 = bitcast i8* %61 to %"class.gfx::Range"*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %64 = bitcast %"class.gfx::Range"** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %62, i64 %54
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %66, %"class.gfx::Range"** %67, align 8
  %68 = bitcast %"class.gfx::Range"** %63 to i64*
  %69 = ptrtoint i8* %61 to i64
  %70 = icmp sgt i64 %53, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %60
  %72 = lshr exact i64 %53, 3
  %73 = inttoptr i64 %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %73, i64 %53, i1 false) #19
  %74 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %62, i64 %72
  %75 = ptrtoint %"class.gfx::Range"* %74 to i64
  br label %76

76:                                               ; preds = %71, %60
  %77 = phi i64 [ %75, %71 ], [ %69, %60 ]
  store i64 %77, i64* %68, align 8
  br label %78

78:                                               ; preds = %46, %76
  call void @_ZN5views8internal4EditC2ENS1_4TypeENS0_9MergeTypeENSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEENS5_ImNS9_ImEEEEN3gfx5RangeENS5_ISH_NS9_ISH_EEEEbmRKSB_m(%"class.views::internal::Edit"* %14, i32 2, i32 %1, %"class.std::__1::vector.113"* nonnull %11, %"class.std::__1::vector.120"* nonnull %12, i64 %4, %"class.std::__1::vector"* nonnull %13, i1 zeroext %6, i64 %7, %"class.std::__1::basic_string"* dereferenceable(24) %8, i64 %9)
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %80 = load %"class.gfx::Range"*, %"class.gfx::Range"** %79, align 8
  %81 = icmp eq %"class.gfx::Range"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = ptrtoint %"class.gfx::Range"* %80 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %85 = bitcast %"class.gfx::Range"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast %"class.gfx::Range"* %80 to i8*
  call void @_ZdlPv(i8* %86) #20
  br label %87

87:                                               ; preds = %78, %82
  %88 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = icmp eq i64* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = ptrtoint i64* %89 to i64
  %93 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %12, i64 0, i32 0, i32 1
  %94 = bitcast i64** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast i64* %89 to i8*
  call void @_ZdlPv(i8* %95) #20
  br label %96

96:                                               ; preds = %87, %91
  %97 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 0
  %98 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %97, align 8
  %99 = icmp eq %"class.std::__1::basic_string"* %98, null
  br i1 %99, label %122, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %102 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 1
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %102, align 8
  %104 = icmp eq %"class.std::__1::basic_string"* %103, %98
  br i1 %104, label %120, label %105

105:                                              ; preds = %100, %115
  %106 = phi %"class.std::__1::basic_string"* [ %107, %115 ], [ %103, %100 ]
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 -1
  %108 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %105
  %113 = bitcast %"class.std::__1::basic_string"* %107 to i8**
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #20
  br label %115

115:                                              ; preds = %112, %105
  %116 = icmp eq %"class.std::__1::basic_string"* %107, %98
  br i1 %116, label %117, label %105

117:                                              ; preds = %115
  %118 = bitcast %"class.std::__1::vector.113"* %11 to i8**
  %119 = load i8*, i8** %118, align 8
  br label %120

120:                                              ; preds = %117, %100
  %121 = phi i8* [ %119, %117 ], [ %101, %100 ]
  store %"class.std::__1::basic_string"* %98, %"class.std::__1::basic_string"** %102, align 8
  call void @_ZdlPv(i8* %121) #20
  br label %122

122:                                              ; preds = %96, %120
  %123 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views8internal11ReplaceEditE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views8internal11ReplaceEditD0Ev(%"class.views::internal::ReplaceEdit"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0
  tail call void @_ZN5views8internal4EditD2Ev(%"class.views::internal::Edit"* %2) #19
  %3 = bitcast %"class.views::internal::ReplaceEdit"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5views8internal11ReplaceEdit7DoMergeEPKNS0_4EditE(%"class.views::internal::ReplaceEdit"*, %"class.views::internal::Edit"*) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %456, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.113"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %14, 1
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %456, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 10
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 9
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %30

28:                                               ; preds = %17
  %29 = zext i8 %23 to i64
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i64 [ %27, %25 ], [ %29, %28 ]
  %32 = add i64 %31, %19
  %33 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 10
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %36, label %456

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 4, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 4, i32 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %53, label %42

42:                                               ; preds = %36
  br i1 %24, label %43, label %46

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %42
  %47 = zext i8 %23 to i64
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %50 = add i64 %49, %19
  %51 = load i64, i64* %38, align 8
  %52 = icmp eq i64 %50, %51
  br i1 %52, label %53, label %456

53:                                               ; preds = %48, %36
  %54 = icmp eq i64 %13, 24
  br i1 %54, label %55, label %255

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %58 = inttoptr i64 %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = inttoptr i64 %12 to i16*
  %67 = zext i8 %60 to i64
  %68 = select i1 %61, i16* %63, i16* %66
  %69 = select i1 %61, i64 %65, i64 %67
  %70 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %55
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 9223372036854775807
  %78 = add nsw i64 %77, -1
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  br label %83

81:                                               ; preds = %55
  %82 = zext i8 %72 to i64
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i64 [ %78, %74 ], [ 10, %81 ]
  %85 = phi i64 [ %80, %74 ], [ %82, %81 ]
  %86 = sub i64 %84, %85
  %87 = icmp ult i64 %86, %69
  br i1 %87, label %252, label %88

88:                                               ; preds = %83
  %89 = icmp eq i64 %69, 0
  br i1 %89, label %255, label %90

90:                                               ; preds = %88
  br i1 %73, label %91, label %94

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i16*, i16** %92, align 8
  br label %96

94:                                               ; preds = %90
  %95 = bitcast %"class.std::__1::basic_string"* %57 to i16*
  br label %96

96:                                               ; preds = %94, %91
  %97 = phi i16* [ %93, %91 ], [ %95, %94 ]
  %98 = getelementptr inbounds i16, i16* %97, i64 %85
  %99 = icmp ult i64 %69, 16
  br i1 %99, label %189, label %100

100:                                              ; preds = %96
  %101 = add i64 %69, %85
  %102 = getelementptr i16, i16* %97, i64 %101
  %103 = getelementptr i16, i16* %68, i64 %69
  %104 = icmp ult i16* %98, %103
  %105 = icmp ult i16* %68, %102
  %106 = and i1 %104, %105
  br i1 %106, label %189, label %107

107:                                              ; preds = %100
  %108 = and i64 %69, -16
  %109 = sub i64 %69, %108
  %110 = getelementptr i16, i16* %68, i64 %108
  %111 = getelementptr i16, i16* %98, i64 %108
  %112 = add i64 %108, -16
  %113 = lshr exact i64 %112, 4
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp ult i64 %112, 48
  br i1 %116, label %168, label %117

117:                                              ; preds = %107
  %118 = sub nsw i64 %114, %115
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %165, %119 ]
  %121 = phi i64 [ %118, %117 ], [ %166, %119 ]
  %122 = getelementptr i16, i16* %68, i64 %120
  %123 = getelementptr i16, i16* %98, i64 %120
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !362
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !362
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !365, !noalias !362
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !365, !noalias !362
  %132 = or i64 %120, 16
  %133 = getelementptr i16, i16* %68, i64 %132
  %134 = getelementptr i16, i16* %98, i64 %132
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !362
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !362
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !365, !noalias !362
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !365, !noalias !362
  %143 = or i64 %120, 32
  %144 = getelementptr i16, i16* %68, i64 %143
  %145 = getelementptr i16, i16* %98, i64 %143
  %146 = bitcast i16* %144 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !362
  %148 = getelementptr i16, i16* %144, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !362
  %151 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !365, !noalias !362
  %152 = getelementptr i16, i16* %145, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !365, !noalias !362
  %154 = or i64 %120, 48
  %155 = getelementptr i16, i16* %68, i64 %154
  %156 = getelementptr i16, i16* %98, i64 %154
  %157 = bitcast i16* %155 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !362
  %159 = getelementptr i16, i16* %155, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !362
  %162 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %162, align 2, !alias.scope !365, !noalias !362
  %163 = getelementptr i16, i16* %156, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %164, align 2, !alias.scope !365, !noalias !362
  %165 = add i64 %120, 64
  %166 = add i64 %121, -4
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %119, !llvm.loop !367

168:                                              ; preds = %119, %107
  %169 = phi i64 [ 0, %107 ], [ %165, %119 ]
  %170 = icmp eq i64 %115, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %168, %171
  %172 = phi i64 [ %184, %171 ], [ %169, %168 ]
  %173 = phi i64 [ %185, %171 ], [ %115, %168 ]
  %174 = getelementptr i16, i16* %68, i64 %172
  %175 = getelementptr i16, i16* %98, i64 %172
  %176 = bitcast i16* %174 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !362
  %178 = getelementptr i16, i16* %174, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !362
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %181, align 2, !alias.scope !365, !noalias !362
  %182 = getelementptr i16, i16* %175, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %183, align 2, !alias.scope !365, !noalias !362
  %184 = add i64 %172, 16
  %185 = add i64 %173, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %171, !llvm.loop !368

187:                                              ; preds = %171, %168
  %188 = icmp eq i64 %69, %108
  br i1 %188, label %242, label %189

189:                                              ; preds = %187, %100, %96
  %190 = phi i64 [ %69, %100 ], [ %69, %96 ], [ %109, %187 ]
  %191 = phi i16* [ %68, %100 ], [ %68, %96 ], [ %110, %187 ]
  %192 = phi i16* [ %98, %100 ], [ %98, %96 ], [ %111, %187 ]
  %193 = add i64 %190, -1
  %194 = and i64 %190, 7
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %207, label %196

196:                                              ; preds = %189, %196
  %197 = phi i64 [ %202, %196 ], [ %190, %189 ]
  %198 = phi i16* [ %204, %196 ], [ %191, %189 ]
  %199 = phi i16* [ %203, %196 ], [ %192, %189 ]
  %200 = phi i64 [ %205, %196 ], [ %194, %189 ]
  %201 = load i16, i16* %198, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %197, -1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = getelementptr inbounds i16, i16* %198, i64 1
  %205 = add i64 %200, -1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %196, !llvm.loop !369

207:                                              ; preds = %196, %189
  %208 = phi i64 [ %190, %189 ], [ %202, %196 ]
  %209 = phi i16* [ %191, %189 ], [ %204, %196 ]
  %210 = phi i16* [ %192, %189 ], [ %203, %196 ]
  %211 = icmp ult i64 %193, 7
  br i1 %211, label %242, label %212

212:                                              ; preds = %207, %212
  %213 = phi i64 [ %238, %212 ], [ %208, %207 ]
  %214 = phi i16* [ %240, %212 ], [ %209, %207 ]
  %215 = phi i16* [ %239, %212 ], [ %210, %207 ]
  %216 = load i16, i16* %214, align 2
  store i16 %216, i16* %215, align 2
  %217 = getelementptr inbounds i16, i16* %215, i64 1
  %218 = getelementptr inbounds i16, i16* %214, i64 1
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %215, i64 2
  %221 = getelementptr inbounds i16, i16* %214, i64 2
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %215, i64 3
  %224 = getelementptr inbounds i16, i16* %214, i64 3
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %215, i64 4
  %227 = getelementptr inbounds i16, i16* %214, i64 4
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %215, i64 5
  %230 = getelementptr inbounds i16, i16* %214, i64 5
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %215, i64 6
  %233 = getelementptr inbounds i16, i16* %214, i64 6
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %215, i64 7
  %236 = getelementptr inbounds i16, i16* %214, i64 7
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = add i64 %213, -8
  %239 = getelementptr inbounds i16, i16* %215, i64 8
  %240 = getelementptr inbounds i16, i16* %214, i64 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %242, label %212, !llvm.loop !370

242:                                              ; preds = %207, %212, %187
  %243 = add i64 %85, %69
  %244 = load i8, i8* %71, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %243, i64* %247, align 8
  br label %250

248:                                              ; preds = %242
  %249 = trunc i64 %243 to i8
  store i8 %249, i8* %71, align 1
  br label %250

250:                                              ; preds = %248, %246
  %251 = getelementptr inbounds i16, i16* %97, i64 %243
  store i16 0, i16* %251, align 2
  br label %255

252:                                              ; preds = %83
  %253 = add i64 %85, %69
  %254 = sub i64 %253, %84
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %57, i64 %84, i64 %254, i64 %85, i64 %85, i64 0, i64 %69, i16* %68) #19
  br label %255

255:                                              ; preds = %252, %250, %88, %53
  %256 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 9
  %257 = bitcast %"class.std::__1::basic_string"* %256 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %257, i64 0, i32 1, i32 1
  %259 = load i8, i8* %258, align 1
  %260 = icmp slt i8 %259, 0
  %261 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load i16*, i16** %261, align 8
  %263 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.std::__1::basic_string"* %256 to i16*
  %266 = zext i8 %259 to i64
  %267 = select i1 %260, i16* %262, i16* %265
  %268 = select i1 %260, i64 %264, i64 %266
  %269 = load i8, i8* %22, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %278

271:                                              ; preds = %255
  %272 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %273 = load i64, i64* %272, align 8
  %274 = and i64 %273, 9223372036854775807
  %275 = add nsw i64 %274, -1
  %276 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  br label %280

278:                                              ; preds = %255
  %279 = zext i8 %269 to i64
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i64 [ %275, %271 ], [ 10, %278 ]
  %282 = phi i64 [ %277, %271 ], [ %279, %278 ]
  %283 = sub i64 %281, %282
  %284 = icmp ult i64 %283, %268
  br i1 %284, label %449, label %285

285:                                              ; preds = %280
  %286 = icmp eq i64 %268, 0
  br i1 %286, label %452, label %287

287:                                              ; preds = %285
  br i1 %270, label %288, label %291

288:                                              ; preds = %287
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i16*, i16** %289, align 8
  br label %293

291:                                              ; preds = %287
  %292 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  br label %293

293:                                              ; preds = %291, %288
  %294 = phi i16* [ %290, %288 ], [ %292, %291 ]
  %295 = getelementptr inbounds i16, i16* %294, i64 %282
  %296 = icmp ult i64 %268, 16
  br i1 %296, label %386, label %297

297:                                              ; preds = %293
  %298 = add i64 %268, %282
  %299 = getelementptr i16, i16* %294, i64 %298
  %300 = getelementptr i16, i16* %267, i64 %268
  %301 = icmp ult i16* %295, %300
  %302 = icmp ult i16* %267, %299
  %303 = and i1 %301, %302
  br i1 %303, label %386, label %304

304:                                              ; preds = %297
  %305 = and i64 %268, -16
  %306 = sub i64 %268, %305
  %307 = getelementptr i16, i16* %267, i64 %305
  %308 = getelementptr i16, i16* %295, i64 %305
  %309 = add i64 %305, -16
  %310 = lshr exact i64 %309, 4
  %311 = add nuw nsw i64 %310, 1
  %312 = and i64 %311, 3
  %313 = icmp ult i64 %309, 48
  br i1 %313, label %365, label %314

314:                                              ; preds = %304
  %315 = sub nsw i64 %311, %312
  br label %316

316:                                              ; preds = %316, %314
  %317 = phi i64 [ 0, %314 ], [ %362, %316 ]
  %318 = phi i64 [ %315, %314 ], [ %363, %316 ]
  %319 = getelementptr i16, i16* %267, i64 %317
  %320 = getelementptr i16, i16* %295, i64 %317
  %321 = bitcast i16* %319 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !371
  %323 = getelementptr i16, i16* %319, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  %325 = load <8 x i16>, <8 x i16>* %324, align 2, !alias.scope !371
  %326 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %326, align 2, !alias.scope !374, !noalias !371
  %327 = getelementptr i16, i16* %320, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %325, <8 x i16>* %328, align 2, !alias.scope !374, !noalias !371
  %329 = or i64 %317, 16
  %330 = getelementptr i16, i16* %267, i64 %329
  %331 = getelementptr i16, i16* %295, i64 %329
  %332 = bitcast i16* %330 to <8 x i16>*
  %333 = load <8 x i16>, <8 x i16>* %332, align 2, !alias.scope !371
  %334 = getelementptr i16, i16* %330, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  %336 = load <8 x i16>, <8 x i16>* %335, align 2, !alias.scope !371
  %337 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %333, <8 x i16>* %337, align 2, !alias.scope !374, !noalias !371
  %338 = getelementptr i16, i16* %331, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  store <8 x i16> %336, <8 x i16>* %339, align 2, !alias.scope !374, !noalias !371
  %340 = or i64 %317, 32
  %341 = getelementptr i16, i16* %267, i64 %340
  %342 = getelementptr i16, i16* %295, i64 %340
  %343 = bitcast i16* %341 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !371
  %345 = getelementptr i16, i16* %341, i64 8
  %346 = bitcast i16* %345 to <8 x i16>*
  %347 = load <8 x i16>, <8 x i16>* %346, align 2, !alias.scope !371
  %348 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %344, <8 x i16>* %348, align 2, !alias.scope !374, !noalias !371
  %349 = getelementptr i16, i16* %342, i64 8
  %350 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %347, <8 x i16>* %350, align 2, !alias.scope !374, !noalias !371
  %351 = or i64 %317, 48
  %352 = getelementptr i16, i16* %267, i64 %351
  %353 = getelementptr i16, i16* %295, i64 %351
  %354 = bitcast i16* %352 to <8 x i16>*
  %355 = load <8 x i16>, <8 x i16>* %354, align 2, !alias.scope !371
  %356 = getelementptr i16, i16* %352, i64 8
  %357 = bitcast i16* %356 to <8 x i16>*
  %358 = load <8 x i16>, <8 x i16>* %357, align 2, !alias.scope !371
  %359 = bitcast i16* %353 to <8 x i16>*
  store <8 x i16> %355, <8 x i16>* %359, align 2, !alias.scope !374, !noalias !371
  %360 = getelementptr i16, i16* %353, i64 8
  %361 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %361, align 2, !alias.scope !374, !noalias !371
  %362 = add i64 %317, 64
  %363 = add i64 %318, -4
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %365, label %316, !llvm.loop !376

365:                                              ; preds = %316, %304
  %366 = phi i64 [ 0, %304 ], [ %362, %316 ]
  %367 = icmp eq i64 %312, 0
  br i1 %367, label %384, label %368

368:                                              ; preds = %365, %368
  %369 = phi i64 [ %381, %368 ], [ %366, %365 ]
  %370 = phi i64 [ %382, %368 ], [ %312, %365 ]
  %371 = getelementptr i16, i16* %267, i64 %369
  %372 = getelementptr i16, i16* %295, i64 %369
  %373 = bitcast i16* %371 to <8 x i16>*
  %374 = load <8 x i16>, <8 x i16>* %373, align 2, !alias.scope !371
  %375 = getelementptr i16, i16* %371, i64 8
  %376 = bitcast i16* %375 to <8 x i16>*
  %377 = load <8 x i16>, <8 x i16>* %376, align 2, !alias.scope !371
  %378 = bitcast i16* %372 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %378, align 2, !alias.scope !374, !noalias !371
  %379 = getelementptr i16, i16* %372, i64 8
  %380 = bitcast i16* %379 to <8 x i16>*
  store <8 x i16> %377, <8 x i16>* %380, align 2, !alias.scope !374, !noalias !371
  %381 = add i64 %369, 16
  %382 = add i64 %370, -1
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %368, !llvm.loop !377

384:                                              ; preds = %368, %365
  %385 = icmp eq i64 %268, %305
  br i1 %385, label %439, label %386

386:                                              ; preds = %384, %297, %293
  %387 = phi i64 [ %268, %297 ], [ %268, %293 ], [ %306, %384 ]
  %388 = phi i16* [ %267, %297 ], [ %267, %293 ], [ %307, %384 ]
  %389 = phi i16* [ %295, %297 ], [ %295, %293 ], [ %308, %384 ]
  %390 = add i64 %387, -1
  %391 = and i64 %387, 7
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %404, label %393

393:                                              ; preds = %386, %393
  %394 = phi i64 [ %399, %393 ], [ %387, %386 ]
  %395 = phi i16* [ %401, %393 ], [ %388, %386 ]
  %396 = phi i16* [ %400, %393 ], [ %389, %386 ]
  %397 = phi i64 [ %402, %393 ], [ %391, %386 ]
  %398 = load i16, i16* %395, align 2
  store i16 %398, i16* %396, align 2
  %399 = add i64 %394, -1
  %400 = getelementptr inbounds i16, i16* %396, i64 1
  %401 = getelementptr inbounds i16, i16* %395, i64 1
  %402 = add i64 %397, -1
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %393, !llvm.loop !378

404:                                              ; preds = %393, %386
  %405 = phi i64 [ %387, %386 ], [ %399, %393 ]
  %406 = phi i16* [ %388, %386 ], [ %401, %393 ]
  %407 = phi i16* [ %389, %386 ], [ %400, %393 ]
  %408 = icmp ult i64 %390, 7
  br i1 %408, label %439, label %409

409:                                              ; preds = %404, %409
  %410 = phi i64 [ %435, %409 ], [ %405, %404 ]
  %411 = phi i16* [ %437, %409 ], [ %406, %404 ]
  %412 = phi i16* [ %436, %409 ], [ %407, %404 ]
  %413 = load i16, i16* %411, align 2
  store i16 %413, i16* %412, align 2
  %414 = getelementptr inbounds i16, i16* %412, i64 1
  %415 = getelementptr inbounds i16, i16* %411, i64 1
  %416 = load i16, i16* %415, align 2
  store i16 %416, i16* %414, align 2
  %417 = getelementptr inbounds i16, i16* %412, i64 2
  %418 = getelementptr inbounds i16, i16* %411, i64 2
  %419 = load i16, i16* %418, align 2
  store i16 %419, i16* %417, align 2
  %420 = getelementptr inbounds i16, i16* %412, i64 3
  %421 = getelementptr inbounds i16, i16* %411, i64 3
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %420, align 2
  %423 = getelementptr inbounds i16, i16* %412, i64 4
  %424 = getelementptr inbounds i16, i16* %411, i64 4
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %412, i64 5
  %427 = getelementptr inbounds i16, i16* %411, i64 5
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %412, i64 6
  %430 = getelementptr inbounds i16, i16* %411, i64 6
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %412, i64 7
  %433 = getelementptr inbounds i16, i16* %411, i64 7
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = add i64 %410, -8
  %436 = getelementptr inbounds i16, i16* %412, i64 8
  %437 = getelementptr inbounds i16, i16* %411, i64 8
  %438 = icmp eq i64 %435, 0
  br i1 %438, label %439, label %409, !llvm.loop !379

439:                                              ; preds = %404, %409, %384
  %440 = add i64 %282, %268
  %441 = load i8, i8* %22, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %439
  %444 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %440, i64* %444, align 8
  br label %447

445:                                              ; preds = %439
  %446 = trunc i64 %440 to i8
  store i8 %446, i8* %22, align 1
  br label %447

447:                                              ; preds = %445, %443
  %448 = getelementptr inbounds i16, i16* %294, i64 %440
  store i16 0, i16* %448, align 2
  br label %452

449:                                              ; preds = %280
  %450 = add i64 %282, %268
  %451 = sub i64 %450, %281
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %20, i64 %281, i64 %451, i64 %282, i64 %282, i64 0, i64 %268, i16* %267) #19
  br label %452

452:                                              ; preds = %285, %447, %449
  %453 = getelementptr inbounds %"class.views::internal::Edit", %"class.views::internal::Edit"* %1, i64 0, i32 8
  %454 = load i64, i64* %453, align 8
  %455 = getelementptr inbounds %"class.views::internal::ReplaceEdit", %"class.views::internal::ReplaceEdit"* %0, i64 0, i32 0, i32 8
  store i64 %454, i64* %455, align 8
  br label %456

456:                                              ; preds = %2, %6, %30, %48, %452
  %457 = phi i1 [ true, %452 ], [ false, %48 ], [ false, %30 ], [ false, %6 ], [ false, %2 ]
  ret i1 %457
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #17

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind }
attributes #16 = { nounwind readnone }
attributes #17 = { nounwind readnone speculatable }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind }
attributes #20 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE: argument 0"}
!15 = distinct !{!15, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5views14TextfieldModel15GetSelectedTextEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5views14TextfieldModel15GetSelectedTextEv"}
!19 = !{!"branch_weights", i32 1, i32 1048575}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE: argument 0"}
!22 = distinct !{!22, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE: argument 0"}
!34 = distinct !{!34, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5views14TextfieldModel15GetSelectedTextEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5views14TextfieldModel15GetSelectedTextEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE: argument 0"}
!40 = distinct !{!40, !"_ZNK5views14TextfieldModel16GetTextFromRangeERKN3gfx5RangeE"}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !8}
!68 = !{i8 0, i8 2}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5views14TextfieldModel15GetSelectedTextEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5views14TextfieldModel15GetSelectedTextEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5views14TextfieldModel15GetSelectedTextEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5views14TextfieldModel15GetSelectedTextEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5views14TextfieldModel15GetSelectedTextEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5views14TextfieldModel15GetSelectedTextEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!80 = distinct !{!80, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = !{!79, !82}
!87 = distinct !{!87, !8}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !8}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !8}
!97 = distinct !{!97, !10}
!98 = distinct !{!98, !10}
!99 = distinct !{!99, !8}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNSt3__14listINS_10unique_ptrIN5views8internal4EditENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__14listINS_10unique_ptrIN5views8internal4EditENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !8}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !10}
!111 = distinct !{!111, !8}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !8}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !8}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !8}
!126 = distinct !{!126, !10}
!127 = distinct !{!127, !10}
!128 = distinct !{!128, !8}
!129 = !{!130}
!130 = distinct !{!130, !131}
!131 = distinct !{!131, !"LVerDomain"}
!132 = !{!133}
!133 = distinct !{!133, !131}
!134 = distinct !{!134, !8}
!135 = distinct !{!135, !10}
!136 = distinct !{!136, !10}
!137 = distinct !{!137, !8}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !8}
!144 = distinct !{!144, !10}
!145 = distinct !{!145, !10}
!146 = distinct !{!146, !8}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !8}
!153 = distinct !{!153, !10}
!154 = distinct !{!154, !10}
!155 = distinct !{!155, !8}
!156 = !{!157}
!157 = distinct !{!157, !158}
!158 = distinct !{!158, !"LVerDomain"}
!159 = !{!160}
!160 = distinct !{!160, !158}
!161 = distinct !{!161, !8}
!162 = distinct !{!162, !10}
!163 = distinct !{!163, !10}
!164 = distinct !{!164, !8}
!165 = distinct !{!165, !8}
!166 = distinct !{!166, !10}
!167 = distinct !{!167, !168, !8}
!168 = !{!"llvm.loop.unroll.runtime.disable"}
!169 = !{!170}
!170 = distinct !{!170, !171}
!171 = distinct !{!171, !"LVerDomain"}
!172 = !{!173}
!173 = distinct !{!173, !171}
!174 = distinct !{!174, !8}
!175 = distinct !{!175, !10}
!176 = distinct !{!176, !10}
!177 = distinct !{!177, !8}
!178 = !{!179}
!179 = distinct !{!179, !180}
!180 = distinct !{!180, !"LVerDomain"}
!181 = !{!182}
!182 = distinct !{!182, !180}
!183 = distinct !{!183, !8}
!184 = distinct !{!184, !10}
!185 = distinct !{!185, !10}
!186 = distinct !{!186, !8}
!187 = !{!188}
!188 = distinct !{!188, !189}
!189 = distinct !{!189, !"LVerDomain"}
!190 = !{!191}
!191 = distinct !{!191, !189}
!192 = distinct !{!192, !8}
!193 = distinct !{!193, !10}
!194 = distinct !{!194, !10}
!195 = distinct !{!195, !8}
!196 = !{!197}
!197 = distinct !{!197, !198}
!198 = distinct !{!198, !"LVerDomain"}
!199 = !{!200}
!200 = distinct !{!200, !198}
!201 = distinct !{!201, !8}
!202 = distinct !{!202, !10}
!203 = distinct !{!203, !10}
!204 = distinct !{!204, !8}
!205 = !{!206}
!206 = distinct !{!206, !207}
!207 = distinct !{!207, !"LVerDomain"}
!208 = !{!209}
!209 = distinct !{!209, !207}
!210 = distinct !{!210, !8}
!211 = distinct !{!211, !10}
!212 = distinct !{!212, !10}
!213 = distinct !{!213, !8}
!214 = !{!215}
!215 = distinct !{!215, !216}
!216 = distinct !{!216, !"LVerDomain"}
!217 = !{!218}
!218 = distinct !{!218, !216}
!219 = distinct !{!219, !8}
!220 = distinct !{!220, !10}
!221 = distinct !{!221, !10}
!222 = distinct !{!222, !8}
!223 = !{!224}
!224 = distinct !{!224, !225}
!225 = distinct !{!225, !"LVerDomain"}
!226 = !{!227}
!227 = distinct !{!227, !225}
!228 = distinct !{!228, !8}
!229 = distinct !{!229, !10}
!230 = distinct !{!230, !10}
!231 = distinct !{!231, !8}
!232 = !{!233}
!233 = distinct !{!233, !234}
!234 = distinct !{!234, !"LVerDomain"}
!235 = !{!236}
!236 = distinct !{!236, !234}
!237 = distinct !{!237, !8}
!238 = distinct !{!238, !10}
!239 = distinct !{!239, !8}
!240 = !{!241}
!241 = distinct !{!241, !242}
!242 = distinct !{!242, !"LVerDomain"}
!243 = !{!244}
!244 = distinct !{!244, !242}
!245 = distinct !{!245, !8}
!246 = distinct !{!246, !10}
!247 = distinct !{!247, !10}
!248 = distinct !{!248, !8}
!249 = !{!250}
!250 = distinct !{!250, !251}
!251 = distinct !{!251, !"LVerDomain"}
!252 = !{!253}
!253 = distinct !{!253, !251}
!254 = distinct !{!254, !8}
!255 = distinct !{!255, !10}
!256 = distinct !{!256, !8}
!257 = !{!258}
!258 = distinct !{!258, !259}
!259 = distinct !{!259, !"LVerDomain"}
!260 = !{!261}
!261 = distinct !{!261, !259}
!262 = distinct !{!262, !8}
!263 = distinct !{!263, !10}
!264 = distinct !{!264, !10}
!265 = distinct !{!265, !8}
!266 = !{!267}
!267 = distinct !{!267, !268}
!268 = distinct !{!268, !"LVerDomain"}
!269 = !{!270}
!270 = distinct !{!270, !268}
!271 = distinct !{!271, !8}
!272 = distinct !{!272, !10}
!273 = distinct !{!273, !8}
!274 = !{!275}
!275 = distinct !{!275, !276}
!276 = distinct !{!276, !"LVerDomain"}
!277 = !{!278}
!278 = distinct !{!278, !276}
!279 = distinct !{!279, !8}
!280 = distinct !{!280, !10}
!281 = distinct !{!281, !10}
!282 = distinct !{!282, !8}
!283 = !{!284}
!284 = distinct !{!284, !285}
!285 = distinct !{!285, !"LVerDomain"}
!286 = !{!287}
!287 = distinct !{!287, !285}
!288 = distinct !{!288, !8}
!289 = distinct !{!289, !10}
!290 = distinct !{!290, !8}
!291 = !{!292}
!292 = distinct !{!292, !293}
!293 = distinct !{!293, !"LVerDomain"}
!294 = !{!295}
!295 = distinct !{!295, !293}
!296 = distinct !{!296, !8}
!297 = distinct !{!297, !10}
!298 = distinct !{!298, !10}
!299 = distinct !{!299, !8}
!300 = !{!301}
!301 = distinct !{!301, !302}
!302 = distinct !{!302, !"LVerDomain"}
!303 = !{!304}
!304 = distinct !{!304, !302}
!305 = distinct !{!305, !8}
!306 = distinct !{!306, !10}
!307 = distinct !{!307, !8}
!308 = !{!309}
!309 = distinct !{!309, !310}
!310 = distinct !{!310, !"LVerDomain"}
!311 = !{!312}
!312 = distinct !{!312, !310}
!313 = distinct !{!313, !8}
!314 = distinct !{!314, !10}
!315 = distinct !{!315, !10}
!316 = distinct !{!316, !8}
!317 = !{!318}
!318 = distinct !{!318, !319}
!319 = distinct !{!319, !"LVerDomain"}
!320 = !{!321}
!321 = distinct !{!321, !319}
!322 = distinct !{!322, !8}
!323 = distinct !{!323, !10}
!324 = distinct !{!324, !10}
!325 = distinct !{!325, !8}
!326 = !{!327}
!327 = distinct !{!327, !328}
!328 = distinct !{!328, !"LVerDomain"}
!329 = !{!330}
!330 = distinct !{!330, !328}
!331 = distinct !{!331, !8}
!332 = distinct !{!332, !10}
!333 = distinct !{!333, !10}
!334 = distinct !{!334, !8}
!335 = !{!336}
!336 = distinct !{!336, !337}
!337 = distinct !{!337, !"LVerDomain"}
!338 = !{!339}
!339 = distinct !{!339, !337}
!340 = distinct !{!340, !8}
!341 = distinct !{!341, !10}
!342 = distinct !{!342, !10}
!343 = distinct !{!343, !8}
!344 = !{!345}
!345 = distinct !{!345, !346}
!346 = distinct !{!346, !"LVerDomain"}
!347 = !{!348}
!348 = distinct !{!348, !346}
!349 = distinct !{!349, !8}
!350 = distinct !{!350, !10}
!351 = distinct !{!351, !10}
!352 = distinct !{!352, !8}
!353 = !{!354}
!354 = distinct !{!354, !355}
!355 = distinct !{!355, !"LVerDomain"}
!356 = !{!357}
!357 = distinct !{!357, !355}
!358 = distinct !{!358, !8}
!359 = distinct !{!359, !10}
!360 = distinct !{!360, !10}
!361 = distinct !{!361, !8}
!362 = !{!363}
!363 = distinct !{!363, !364}
!364 = distinct !{!364, !"LVerDomain"}
!365 = !{!366}
!366 = distinct !{!366, !364}
!367 = distinct !{!367, !8}
!368 = distinct !{!368, !10}
!369 = distinct !{!369, !10}
!370 = distinct !{!370, !8}
!371 = !{!372}
!372 = distinct !{!372, !373}
!373 = distinct !{!373, !"LVerDomain"}
!374 = !{!375}
!375 = distinct !{!375, !373}
!376 = distinct !{!376, !8}
!377 = distinct !{!377, !10}
!378 = distinct !{!378, !10}
!379 = distinct !{!379, !8}
