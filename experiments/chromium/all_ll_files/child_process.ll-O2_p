; ModuleID = '../../content/child/child_process.cc'
source_filename = "../../content/child/child_process.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.content::ChildProcess" = type <{ i32 (...)**, i32, [4 x i8], %"class.base::WaitableEvent", %"class.base::Thread", %"class.std::__1::unique_ptr.31", i8, [7 x i8] }>
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.17, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.10", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.12" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.17 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.18" }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.20", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.content::ChildThreadImpl"* }
%"class.content::ChildThreadImpl" = type { %"class.IPC::Listener", %"class.base::Thread", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %class.scoped_refptr.46, %"class.content::ChildThreadImpl::ChildThreadMessageRouter", i8, %class.scoped_refptr.17, %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.74", %class.scoped_refptr.17, %"class.variations::ChildProcessFieldTrialSyncer"*, %"class.std::__1::unique_ptr.81", %class.scoped_refptr.17, %"class.mojo::SharedRemote", %class.scoped_refptr.89, %"class.base::WeakPtrFactory.84", %"class.content::ChildThread" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.mojo::core::ScopedIPCSupport"* }
%"class.mojo::core::ScopedIPCSupport" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.IPC::SyncChannel"* }
%"class.IPC::SyncChannel" = type opaque
%class.scoped_refptr.46 = type { %"class.IPC::SyncMessageFilter"* }
%"class.IPC::SyncMessageFilter" = type opaque
%"class.content::ChildThreadImpl::ChildThreadMessageRouter" = type { %"class.IPC::MessageRouter", %"class.IPC::Sender"* }
%"class.IPC::MessageRouter" = type { %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::IDMap" }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::IDMap" = type <{ i32, [4 x i8], %"class.base::internal::flat_tree", i32, [4 x i8], %"class.std::__1::unordered_map", i8, [7 x i8] }>
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i32*, i32*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i32* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.73", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.73" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.tracing::BackgroundTracingAgentProviderImpl"* }
%"class.tracing::BackgroundTracingAgentProviderImpl" = type opaque
%"class.variations::ChildProcessFieldTrialSyncer" = type { %"class.base::FieldTrialList::Observer", %"class.base::ThreadLocalBoolean", %"class.base::RepeatingCallback.80" }
%"class.base::FieldTrialList::Observer" = type { i32 (...)** }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer" }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.base::WeakPtrFactory.84"* }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%class.scoped_refptr.89 = type { %"class.content::ChildThreadImpl::IOThreadState"* }
%"class.content::ChildThreadImpl::IOThreadState" = type opaque
%"class.base::WeakPtrFactory.84" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::ChildThread" = type { %"class.IPC::Sender" }
%"struct.base::ThreadPoolInstance::InitParams" = type { i32, i32, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.base::Thread::Options" = type <{ i32, [4 x i8], %"class.base::Thread::Delegate"*, i32, [4 x i8], %"class.base::sequence_manager::TimeDomain"*, %"class.base::RepeatingCallback.114", i64, i32, i8, i8, [2 x i8] }>
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::RepeatingCallback.114" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ThreadLocalPointer.99" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::CommandLine" = type { %"class.std::__1::vector.100", %"class.std::__1::map", i64 }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::ThreadPoolInstance" = type { i32 (...)** }
%"class.base::WorkerThreadObserver" = type opaque

$_ZN4base12LazyInstanceINS_18ThreadLocalPointerIN7content12ChildProcessEEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv = comdat any

@_ZTVN7content12ChildProcessE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::ChildProcess"*)* @_ZN7content12ChildProcessD2Ev to i8*), i8* bitcast (void (%"class.content::ChildProcess"*)* @_ZN7content12ChildProcessD0Ev to i8*), i8* bitcast (void (%"class.content::ChildProcess"*)* @_ZN7content12ChildProcess13AddRefProcessEv to i8*), i8* bitcast (void (%"class.content::ChildProcess"*)* @_ZN7content12ChildProcess14ReleaseProcessEv to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"Chrome_ChildIOThread\00", align 1
@_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN8switches12kProcessTypeE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"MOJO_RESULT_OK == mojo::InitializeCoreLibrary(flags)\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"../../content/child/child_process.cc\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"io_thread_.StartWithOptions(std::move(thread_options))\00", align 1

@_ZN7content12ChildProcessC1EN4base14ThreadPriorityERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS1_18ThreadPoolInstance10InitParamsENS3_14default_deleteISE_EEEE = hidden unnamed_addr alias void (%"class.content::ChildProcess"*, i32, %"class.std::__1::basic_string"*, %"struct.base::ThreadPoolInstance::InitParams"*), void (%"class.content::ChildProcess"*, i32, %"class.std::__1::basic_string"*, %"struct.base::ThreadPoolInstance::InitParams"*)* @_ZN7content12ChildProcessC2EN4base14ThreadPriorityERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS1_18ThreadPoolInstance10InitParamsENS3_14default_deleteISE_EEEE
@_ZN7content12ChildProcessD1Ev = hidden unnamed_addr alias void (%"class.content::ChildProcess"*), void (%"class.content::ChildProcess"*)* @_ZN7content12ChildProcessD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12ChildProcessC2EN4base14ThreadPriorityERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS1_18ThreadPoolInstance10InitParamsENS3_14default_deleteISE_EEEE(%"class.content::ChildProcess"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.base::ThreadPoolInstance::InitParams"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"struct.base::Thread::Options", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content12ChildProcessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 3
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %13, i32 0, i32 1) #8
  %14 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 4
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 20, i8* %17, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 20, i1 false) #8
  %18 = getelementptr inbounds i8, i8* %15, i64 20
  store i8 0, i8* %18, align 4
  call void @_ZN4base6ThreadC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Thread"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #8
  %19 = load i8, i8* %17, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %4, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  %25 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 5
  %26 = bitcast %"class.std::__1::unique_ptr.31"* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 6
  store i8 0, i8* %27, align 8
  %28 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0) acquire, align 8
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0)) #8
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64*), align 8
  call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_18ThreadLocalPointerIN7content12ChildProcessEEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE to i8*)) #8
  br label %35

33:                                               ; preds = %30
  %34 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0) acquire, align 8
  br label %35

35:                                               ; preds = %24, %32, %33
  %36 = phi i64 [ %28, %24 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64), %32 ], [ %34, %33 ]
  %37 = inttoptr i64 %36 to %"class.base::ThreadLocalPointer.99"*
  %38 = getelementptr inbounds %"class.base::ThreadLocalPointer.99", %"class.base::ThreadLocalPointer.99"* %37, i64 0, i32 0
  %39 = bitcast %"class.content::ChildProcess"* %0 to i8*
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %39) #8
  %40 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %41 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %40, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kProcessTypeE, i64 0, i64 0)) #8
  %42 = call zeroext i1 @_ZN7content30IsMojoCoreSharedLibraryEnabledEv() #8
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %64

44:                                               ; preds = %35
  %45 = call i32 @_ZN7sandbox6policy26SandboxTypeFromCommandLineERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %40) #8
  %46 = call zeroext i1 @_ZN7sandbox6policy24IsUnsandboxedSandboxTypeENS0_11SandboxTypeE(i32 %45) #8
  %47 = select i1 %46, i32 2, i32 0
  %48 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %49, align 8
  %50 = call i32 @_ZN4mojo21InitializeCoreLibraryEj(i32 %47) #8
  %51 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = icmp eq i32 %50, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  store i8* null, i8** %49, align 8
  br label %63

54:                                               ; preds = %44
  %55 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  %56 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %50) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i8* %55, i8* %56) #8
  %57 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  store i8* %58, i8** %49, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 70, %"class.logging::CheckOpResult"* nonnull %7) #8
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  br label %63

63:                                               ; preds = %53, %54, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br label %64

64:                                               ; preds = %35, %63
  %65 = call %"class.base::ThreadPoolInstance"* @_ZN4base18ThreadPoolInstance3GetEv() #8
  %66 = icmp eq %"class.base::ThreadPoolInstance"* %65, null
  br i1 %66, label %67, label %89

67:                                               ; preds = %64
  %68 = icmp eq %"struct.base::ThreadPoolInstance::InitParams"* %3, null
  %69 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %76 = select i1 %72, i8* %74, i8* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %71 to i64
  %80 = select i1 %72, i64 %78, i64 %79
  br i1 %68, label %87, label %81

81:                                               ; preds = %67
  call void @_ZN4base18ThreadPoolInstance6CreateENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %76, i64 %80) #8
  %82 = call %"class.base::ThreadPoolInstance"* @_ZN4base18ThreadPoolInstance3GetEv() #8
  %83 = bitcast %"class.base::ThreadPoolInstance"* %82 to void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)***
  %84 = load void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)**, void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)*, void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)** %84, i64 2
  %86 = load void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)*, void (%"class.base::ThreadPoolInstance"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)** %85, align 8
  call void %86(%"class.base::ThreadPoolInstance"* %82, %"struct.base::ThreadPoolInstance::InitParams"* nonnull dereferenceable(16) %3, %"class.base::WorkerThreadObserver"* null) #8
  br label %88

87:                                               ; preds = %67
  call void @_ZN4base18ThreadPoolInstance31CreateAndStartWithDefaultParamsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %76, i64 %80) #8
  br label %88

88:                                               ; preds = %87, %81
  store i8 1, i8* %27, align 8
  br label %89

89:                                               ; preds = %64, %88
  call void @_ZN7tracing44InitTracingPostThreadPoolStartAndFeatureListEv() #8
  %90 = bitcast %"struct.base::Thread::Options"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %90) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 56, i1 false)
  call void @_ZN4base6Thread7OptionsC1ENS_15MessagePumpTypeEm(%"struct.base::Thread::Options"* nonnull %9, i32 3, i64 0) #8
  %91 = getelementptr inbounds %"struct.base::Thread::Options", %"struct.base::Thread::Options"* %9, i64 0, i32 8
  store i32 %1, i32* %91, align 8
  %92 = call zeroext i1 @_ZN4base6Thread16StartWithOptionsERKNS0_7OptionsE(%"class.base::Thread"* %14, %"struct.base::Thread::Options"* nonnull dereferenceable(56) %9) #8
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 111, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0)) #8
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #8
  br label %96

96:                                               ; preds = %89, %93
  call void @_ZN4base6Thread7OptionsD1Ev(%"struct.base::Thread::Options"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %90) #8
  %97 = icmp eq %"struct.base::ThreadPoolInstance::InitParams"* %3, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  call void @_ZN4base18ThreadPoolInstance10InitParamsD1Ev(%"struct.base::ThreadPoolInstance::InitParams"* nonnull %3) #8
  %99 = bitcast %"struct.base::ThreadPoolInstance::InitParams"* %3 to i8*
  call void @_ZdlPv(i8* %99) #9
  br label %100

100:                                              ; preds = %96, %98
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base6ThreadC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Thread"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN7content30IsMojoCoreSharedLibraryEnabledEv() local_unnamed_addr #1

declare zeroext i1 @_ZN7sandbox6policy24IsUnsandboxedSandboxTypeENS0_11SandboxTypeE(i32) local_unnamed_addr #1

declare i32 @_ZN7sandbox6policy26SandboxTypeFromCommandLineERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #1

declare i32 @_ZN4mojo21InitializeCoreLibraryEj(i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.base::ThreadPoolInstance"* @_ZN4base18ThreadPoolInstance3GetEv() local_unnamed_addr #1

declare void @_ZN4base18ThreadPoolInstance6CreateENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN4base18ThreadPoolInstance31CreateAndStartWithDefaultParamsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN7tracing44InitTracingPostThreadPoolStartAndFeatureListEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base6Thread7OptionsC1ENS_15MessagePumpTypeEm(%"struct.base::Thread::Options"*, i32, i64) unnamed_addr #1

declare zeroext i1 @_ZN4base6Thread16StartWithOptionsERKNS0_7OptionsE(%"class.base::Thread"*, %"struct.base::Thread::Options"* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6Thread7OptionsD1Ev(%"struct.base::Thread::Options"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12ChildProcessD2Ev(%"class.content::ChildProcess"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content12ChildProcessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 3
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %3) #8
  %4 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %4, align 8
  %6 = icmp eq %"class.content::ChildThreadImpl"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.content::ChildThreadImpl"* %5 to void (%"class.content::ChildThreadImpl"*)***
  %9 = load void (%"class.content::ChildThreadImpl"*)**, void (%"class.content::ChildThreadImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %9, i64 9
  %11 = load void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %10, align 8
  tail call void %11(%"class.content::ChildThreadImpl"* nonnull %5) #8
  %12 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %4, align 8
  %13 = bitcast %"class.content::ChildThreadImpl"* %12 to i1 (%"class.content::ChildThreadImpl"*)***
  %14 = load i1 (%"class.content::ChildThreadImpl"*)**, i1 (%"class.content::ChildThreadImpl"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.content::ChildThreadImpl"*)*, i1 (%"class.content::ChildThreadImpl"*)** %14, i64 10
  %16 = load i1 (%"class.content::ChildThreadImpl"*)*, i1 (%"class.content::ChildThreadImpl"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.content::ChildThreadImpl"* %12) #8
  br i1 %17, label %18, label %26

18:                                               ; preds = %7
  %19 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %4, align 8
  store %"class.content::ChildThreadImpl"* null, %"class.content::ChildThreadImpl"** %4, align 8
  %20 = icmp eq %"class.content::ChildThreadImpl"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.content::ChildThreadImpl"* %19 to void (%"class.content::ChildThreadImpl"*)***
  %23 = load void (%"class.content::ChildThreadImpl"*)**, void (%"class.content::ChildThreadImpl"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %23, i64 8
  %25 = load void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %24, align 8
  tail call void %25(%"class.content::ChildThreadImpl"* nonnull %19) #8
  br label %27

26:                                               ; preds = %7
  store %"class.content::ChildThreadImpl"* null, %"class.content::ChildThreadImpl"** %4, align 8
  br label %27

27:                                               ; preds = %1, %21, %18, %26
  %28 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0) acquire, align 8
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0)) #8
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_18ThreadLocalPointerIN7content12ChildProcessEEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE to i8*)) #8
  br label %35

33:                                               ; preds = %30
  %34 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0) acquire, align 8
  br label %35

35:                                               ; preds = %27, %32, %33
  %36 = phi i64 [ %28, %27 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64), %32 ], [ %34, %33 ]
  %37 = inttoptr i64 %36 to %"class.base::ThreadLocalPointer.99"*
  %38 = getelementptr inbounds %"class.base::ThreadLocalPointer.99", %"class.base::ThreadLocalPointer.99"* %37, i64 0, i32 0
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* null) #8
  %39 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 4
  tail call void @_ZN4base6Thread4StopEv(%"class.base::Thread"* %39) #8
  %40 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 6
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %35
  %44 = tail call %"class.base::ThreadPoolInstance"* @_ZN4base18ThreadPoolInstance3GetEv() #8
  %45 = bitcast %"class.base::ThreadPoolInstance"* %44 to void (%"class.base::ThreadPoolInstance"*)***
  %46 = load void (%"class.base::ThreadPoolInstance"*)**, void (%"class.base::ThreadPoolInstance"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::ThreadPoolInstance"*)*, void (%"class.base::ThreadPoolInstance"*)** %46, i64 3
  %48 = load void (%"class.base::ThreadPoolInstance"*)*, void (%"class.base::ThreadPoolInstance"*)** %47, align 8
  tail call void %48(%"class.base::ThreadPoolInstance"* %44) #8
  br label %49

49:                                               ; preds = %35, %43
  %50 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %4, align 8
  store %"class.content::ChildThreadImpl"* null, %"class.content::ChildThreadImpl"** %4, align 8
  %51 = icmp eq %"class.content::ChildThreadImpl"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.content::ChildThreadImpl"* %50 to void (%"class.content::ChildThreadImpl"*)***
  %54 = load void (%"class.content::ChildThreadImpl"*)**, void (%"class.content::ChildThreadImpl"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %54, i64 8
  %56 = load void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %55, align 8
  tail call void %56(%"class.content::ChildThreadImpl"* nonnull %50) #8
  br label %57

57:                                               ; preds = %49, %52
  tail call void @_ZN4base6ThreadD1Ev(%"class.base::Thread"* %39) #8
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %3) #8
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare void @_ZN4base6Thread4StopEv(%"class.base::Thread"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6ThreadD1Ev(%"class.base::Thread"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12ChildProcessD0Ev(%"class.content::ChildProcess"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7content12ChildProcessD2Ev(%"class.content::ChildProcess"* %0) #8
  %2 = bitcast %"class.content::ChildProcess"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.content::ChildThreadImpl"* @_ZN7content12ChildProcess11main_threadEv(%"class.content::ChildProcess"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %2, align 8
  ret %"class.content::ChildThreadImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12ChildProcess15set_main_threadEPNS_15ChildThreadImplE(%"class.content::ChildProcess"* nocapture, %"class.content::ChildThreadImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %3, align 8
  store %"class.content::ChildThreadImpl"* %1, %"class.content::ChildThreadImpl"** %3, align 8
  %5 = icmp eq %"class.content::ChildThreadImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.content::ChildThreadImpl"* %4 to void (%"class.content::ChildThreadImpl"*)***
  %8 = load void (%"class.content::ChildThreadImpl"*)**, void (%"class.content::ChildThreadImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %8, i64 8
  %10 = load void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %9, align 8
  tail call void %10(%"class.content::ChildThreadImpl"* nonnull %4) #8
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7content12ChildProcess13AddRefProcessEv(%"class.content::ChildProcess"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12ChildProcess14ReleaseProcessEv(%"class.content::ChildProcess"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.content::ChildThreadImpl"*, %"class.content::ChildThreadImpl"** %7, align 8
  %9 = icmp eq %"class.content::ChildThreadImpl"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.content::ChildThreadImpl"* %8 to void (%"class.content::ChildThreadImpl"*)***
  %12 = load void (%"class.content::ChildThreadImpl"*)**, void (%"class.content::ChildThreadImpl"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %12, i64 20
  %14 = load void (%"class.content::ChildThreadImpl"*)*, void (%"class.content::ChildThreadImpl"*)** %13, align 8
  tail call void %14(%"class.content::ChildThreadImpl"* nonnull %8) #8
  br label %15

15:                                               ; preds = %6, %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::ChildProcess"* @_ZN7content12ChildProcess7currentEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0)) #8
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_18ThreadLocalPointerIN7content12ChildProcessEEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE to i8*)) #8
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN7content12_GLOBAL__N_124g_lazy_child_process_tlsE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::ThreadLocalPointer.99"*
  %11 = getelementptr inbounds %"class.base::ThreadLocalPointer.99", %"class.base::ThreadLocalPointer.99"* %10, i64 0, i32 0
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #8
  %13 = bitcast i8* %12 to %"class.content::ChildProcess"*
  ret %"class.content::ChildProcess"* %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.base::WaitableEvent"* @_ZN7content12ChildProcess16GetShutDownEventEv(%"class.content::ChildProcess"* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %0, i64 0, i32 3
  ret %"class.base::WaitableEvent"* %2
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base18ThreadPoolInstance10InitParamsD1Ev(%"struct.base::ThreadPoolInstance::InitParams"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceINS_18ThreadLocalPointerIN7content12ChildProcessEEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.base::ThreadLocalPointer.99"*
  %5 = getelementptr inbounds %"class.base::ThreadLocalPointer.99", %"class.base::ThreadLocalPointer.99"* %4, i64 0, i32 0
  tail call void @_ZN4base18ThreadLocalStorage4SlotD1Ev(%"class.base::ThreadLocalStorage::Slot"* %5) #8
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base18ThreadLocalStorage4SlotD1Ev(%"class.base::ThreadLocalStorage::Slot"*) unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
