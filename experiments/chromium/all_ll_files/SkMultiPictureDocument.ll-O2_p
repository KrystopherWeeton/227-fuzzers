; ModuleID = '../../third_party/skia/src/utils/SkMultiPictureDocument.cpp'
source_filename = "../../third_party/skia/src/utils/SkMultiPictureDocument.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.28 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.29 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkTDArray = type { %class.SkCanvas**, i32, i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" }
%class.sk_sp.14 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.16 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%struct.SkDocumentPage = type { %class.sk_sp.23, %struct.SkSize }
%class.sk_sp.23 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%struct.SkSize = type { float, float }
%class.sk_sp.12 = type { %class.SkDocument* }
%class.SkDocument = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32, [4 x i8] }>
%class.SkWStream = type { i32 (...)** }
%struct.SkSerialProcs = type { void (%class.sk_sp*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.5, i32, i32 }
%class.sk_sp.5 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.6, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.SkPicture*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.14, %"class.std::__1::unique_ptr", %class.sk_sp.16, %"class.std::__1::unique_ptr.17" }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%struct.SkDeserialProcs = type { void (%class.sk_sp.23*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.25*, i8*, i64, i8*)*, i8*, {}*, i8* }
%class.sk_sp.25 = type { %class.SkImage* }
%"struct.(anonymous namespace)::PagerCanvas" = type { %class.SkNWayCanvas, %class.SkPictureRecorder, %struct.SkDocumentPage*, i32, i32 }
%class.SkNWayCanvas = type { %class.SkCanvasVirtualEnforcer, %class.SkTDArray }
%class.SkCanvasVirtualEnforcer = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer.27 }
%class.SkCanvasVirtualEnforcer.27 = type { %class.SkCanvas }
%class.SkBBHFactory = type { i32 (...)** }
%"class.SkPicture::AbortCallback" = type { i32 (...)** }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrRecordingContext = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCanvas::SaveLayerRec" = type <{ %struct.SkRect*, %class.SkPaint*, %class.SkImageFilter*, i32, [4 x i8] }>
%class.SkPaint = type <{ %class.sk_sp.42, %class.sk_sp.43, %class.sk_sp.44, %class.sk_sp.45, %class.sk_sp.46, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.42 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.43 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.44 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.45 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.46 = type { %class.SkImageFilter* }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkImageFilter = type opaque
%class.SkM44 = type { [16 x float] }
%class.SkRRect = type opaque
%class.SkPath = type opaque
%class.SkRegion = type opaque
%class.SkTextBlob = type opaque
%class.SkGlyphRunList = type opaque
%struct.SkPoint = type { float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkRSXform = type opaque
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.47, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.47 = type { %class.SkImage* }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkVertices = type opaque
%struct.SkDrawShadowRec = type opaque
%class.SkDrawable = type opaque
%class.GrSurfaceDrawContext = type opaque
%class.SkPaintFilterCanvas = type opaque
%"struct.(anonymous namespace)::MultiPictureDocument" = type { %class.SkDocument.base, %struct.SkSerialProcs, %class.SkPictureRecorder, %struct.SkSize, %class.SkTArray, %class.SkTArray.24, %"class.std::__1::function" }
%class.SkDocument.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32 }>
%class.SkTArray = type { %class.sk_sp.23*, i64 }
%class.SkTArray.24 = type { %struct.SkSize*, i64 }

$_ZN8SkCanvas10didRestoreEv = comdat any

$_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN8SkTArrayI6SkSizeLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spI9SkPictureELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

@_ZN12_GLOBAL__N_16kMagicE = internal constant [25 x i8] c"Skia Multi-Picture Doc\0A\0A\00", align 16
@__const._Z26SkMultiPictureDocumentReadP16SkStreamSeekableP14SkDocumentPageiPK15SkDeserialProcs.canvas = private unnamed_addr constant { { { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } } } }, %class.SkTDArray }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.14, %"class.std::__1::unique_ptr", %class.sk_sp.16, %"class.std::__1::unique_ptr.17" }, %struct.SkDocumentPage*, i32, i32 } { { { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } } } }, %class.SkTDArray } { { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } } } } { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } } } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.28 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.29 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.30" { %"class.std::__1::__compressed_pair.31" { %"struct.std::__1::__compressed_pair_elem.32" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.36" { %"class.std::__1::__compressed_pair.37" { %"struct.std::__1::__compressed_pair_elem.38" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } } } }, %class.SkTDArray { %class.SkCanvas** inttoptr (i64 -6148914691236517206 to %class.SkCanvas**), i32 -1431655766, i32 -1431655766 } }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.14, %"class.std::__1::unique_ptr", %class.sk_sp.16, %"class.std::__1::unique_ptr.17" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.14 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.16 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.17" { %"class.std::__1::__compressed_pair.18" { %"struct.std::__1::__compressed_pair_elem.19" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, %struct.SkDocumentPage* inttoptr (i64 -6148914691236517206 to %struct.SkDocumentPage*), i32 -1431655766, i32 -1431655766 }, align 8
@_ZTVN12_GLOBAL__N_111PagerCanvasE = internal unnamed_addr constant { [59 x i8*] } { [59 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::PagerCanvas"*)* @_ZN12_GLOBAL__N_111PagerCanvasD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::PagerCanvas"*)* @_ZN12_GLOBAL__N_111PagerCanvasD0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void ()* @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas7onFlushEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas8willSaveEv to i8*), i8* bitcast (i32 (%class.SkNWayCanvas*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN12SkNWayCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkNWayCanvas*, %struct.SkRect*)* @_ZN12SkNWayCanvas14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas11willRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas10didRestoreEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*, i8*)* @_ZN12SkNWayCanvas9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkM44*)* @_ZN12SkNWayCanvas11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkM44*)* @_ZN12SkNWayCanvas9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkNWayCanvas*, float, float)* @_ZN12SkNWayCanvas12didTranslateEff to i8*), i8* bitcast (void (%class.SkNWayCanvas*, float, float)* @_ZN12SkNWayCanvas8didScaleEff to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPaint*)* @_ZN12SkNWayCanvas11onDrawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN12SkNWayCanvas10onDrawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkNWayCanvas11onDrawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN12SkNWayCanvas10onDrawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkNWayCanvas9onDrawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPath*, %class.SkPaint*)* @_ZN12SkNWayCanvas10onDrawPathERK6SkPathRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)* @_ZN12SkNWayCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN12SkNWayCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkNWayCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkNWayCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkNWayCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkNWayCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN12SkNWayCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::PagerCanvas"*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12_GLOBAL__N_111PagerCanvas16onDrawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkNWayCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkDrawable*, %class.SkMatrix*)* @_ZN12SkNWayCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)* @_ZN12SkNWayCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkNWayCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, i32, i32)* @_ZN12SkNWayCanvas10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRRect*, i32, i32)* @_ZN12SkNWayCanvas11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPath*, i32, i32)* @_ZN12SkNWayCanvas10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.sk_sp.43*, i32)* @_ZN12SkNWayCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRegion*, i32)* @_ZN12SkNWayCanvas12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkCanvas*)* @_ZN12SkNWayCanvas9addCanvasEP8SkCanvas to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkCanvas*)* @_ZN12SkNWayCanvas12removeCanvasEP8SkCanvas to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas9removeAllEv to i8*)] }, align 8
@_ZN12_GLOBAL__N_18kEndPageE = internal constant [22 x i8] c"SkMultiPictureEndPage\00", align 16
@_ZTVN12_GLOBAL__N_120MultiPictureDocumentE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::MultiPictureDocument"*)* @_ZN12_GLOBAL__N_120MultiPictureDocumentD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::MultiPictureDocument"*)* @_ZN12_GLOBAL__N_120MultiPictureDocumentD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.SkCanvas* (%"struct.(anonymous namespace)::MultiPictureDocument"*, float, float)* @_ZN12_GLOBAL__N_120MultiPictureDocument11onBeginPageEff to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::MultiPictureDocument"*)* @_ZN12_GLOBAL__N_120MultiPictureDocument9onEndPageEv to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::MultiPictureDocument"*, %class.SkWStream*)* @_ZN12_GLOBAL__N_120MultiPictureDocument7onCloseEP9SkWStream to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::MultiPictureDocument"*)* @_ZN12_GLOBAL__N_120MultiPictureDocument7onAbortEv to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"X\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z26SkMakeMultiPictureDocumentP9SkWStreamPK13SkSerialProcsNSt3__18functionIFvPK9SkPictureEEE(%class.sk_sp.12* noalias nocapture sret, %class.SkWStream*, %struct.SkSerialProcs*, %"class.std::__1::function"* nocapture readonly) local_unnamed_addr #0 {
  %5 = tail call i8* @_Znwm(i64 208) #11, !noalias !2
  %6 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8, !noalias !2
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast [8 x i8]* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8, !noalias !2
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8, !noalias !2
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 0
  %14 = load i8* (i8*)*, i8* (i8*)** %13, align 8, !noalias !2
  %15 = icmp eq i8* (i8*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = tail call i8* %14(i8* %7) #12, !noalias !2
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i8* [ %7, %4 ], [ %17, %16 ]
  %20 = bitcast i8* %5 to %class.SkDocument*
  tail call void @_ZN10SkDocumentC2EP9SkWStream(%class.SkDocument* nonnull %20, %class.SkWStream* %1) #12, !noalias !2
  %21 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_120MultiPictureDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !noalias !2
  %22 = getelementptr inbounds i8, i8* %5, i64 32
  %23 = icmp eq %struct.SkSerialProcs* %2, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = bitcast %struct.SkSerialProcs* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %25, i64 48, i1 false) #12, !noalias !2
  br label %27

26:                                               ; preds = %18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 48, i1 false) #12, !noalias !2
  br label %27

27:                                               ; preds = %26, %24
  %28 = getelementptr inbounds i8, i8* %5, i64 80
  %29 = bitcast i8* %28 to %class.SkPictureRecorder*
  tail call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* %29) #12, !noalias !2
  %30 = getelementptr inbounds i8, i8* %5, i64 152
  %31 = bitcast i8* %30 to i64*
  %32 = getelementptr inbounds i8, i8* %5, i64 144
  %33 = bitcast i8* %32 to %class.sk_sp.23**
  store %class.sk_sp.23* null, %class.sk_sp.23** %33, align 8, !noalias !2
  store i64 1, i64* %31, align 8, !noalias !2
  %34 = getelementptr inbounds i8, i8* %5, i64 168
  %35 = bitcast i8* %34 to i64*
  %36 = getelementptr inbounds i8, i8* %5, i64 160
  %37 = bitcast i8* %36 to %struct.SkSize**
  store %struct.SkSize* null, %struct.SkSize** %37, align 8, !noalias !2
  store i64 1, i64* %35, align 8, !noalias !2
  %38 = getelementptr inbounds i8, i8* %5, i64 176
  %39 = bitcast i8* %38 to i8**
  store i8* %19, i8** %39, align 8, !noalias !2
  %40 = getelementptr inbounds i8, i8* %5, i64 184
  %41 = bitcast i8* %40 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %41, align 8, !noalias !2
  %42 = getelementptr inbounds i8, i8* %5, i64 200
  %43 = bitcast i8* %42 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* %12, %"struct.std::__1::__function::__policy"** %43, align 8, !noalias !2
  %44 = load i8* (i8*)*, i8* (i8*)** %13, align 8, !noalias !2
  %45 = icmp eq i8* (i8*)* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %27
  %47 = tail call i8* %44(i8* %19) #12, !noalias !2
  store i8* %47, i8** %39, align 8, !noalias !2
  br label %48

48:                                               ; preds = %46, %27
  %49 = ptrtoint i8* %5 to i64
  %50 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8, !noalias !2
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  tail call void %51(i8* %19) #12, !noalias !2
  br label %54

54:                                               ; preds = %53, %48
  %55 = bitcast %class.sk_sp.12* %0 to i64*
  store i64 %49, i64* %55, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z35SkMultiPictureDocumentReadPageCountP16SkStreamSeekable(%class.SkStreamSeekable*) local_unnamed_addr #0 {
  %2 = alloca [24 x i8], align 16
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = icmp eq %class.SkStreamSeekable* %0, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkStreamSeekable* %0 to i1 (%class.SkStreamSeekable*, i64)***
  %8 = load i1 (%class.SkStreamSeekable*, i64)**, i1 (%class.SkStreamSeekable*, i64)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkStreamSeekable*, i64)*, i1 (%class.SkStreamSeekable*, i64)** %8, i64 8
  %10 = load i1 (%class.SkStreamSeekable*, i64)*, i1 (%class.SkStreamSeekable*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkStreamSeekable* nonnull %0, i64 0) #12
  %12 = getelementptr inbounds [24 x i8], [24 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.SkStreamSeekable, %class.SkStreamSeekable* %0, i64 0, i32 0, i32 0
  %14 = bitcast %class.SkStreamSeekable* %0 to i64 (%class.SkStream*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 24, i1 false)
  %15 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %14, align 8
  %16 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %15, i64 2
  %17 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, align 8
  %18 = call i64 %17(%class.SkStream* %13, i8* nonnull %12, i64 24) #12
  %19 = icmp eq i64 %18, 24
  br i1 %19, label %20, label %40

20:                                               ; preds = %6
  %21 = call i32 @bcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN12_GLOBAL__N_16kMagicE, i64 0, i64 0), i8* nonnull %12, i64 24)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %40

23:                                               ; preds = %20
  %24 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #12
  store i32 -1431655766, i32* %3, align 4
  %25 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %13, i32* nonnull %3) #12
  %26 = xor i1 %25, true
  %27 = load i32, i32* %3, align 4
  %28 = icmp ne i32 %27, 2
  %29 = or i1 %28, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %23
  %31 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #12
  store i32 -1431655766, i32* %4, align 4
  %32 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %13, i32* nonnull %4) #12
  %33 = xor i1 %32, true
  %34 = load i32, i32* %4, align 4
  %35 = icmp slt i32 %34, 0
  %36 = or i1 %35, %33
  %37 = select i1 %36, i32 0, i32 %34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #12
  br label %38

38:                                               ; preds = %23, %30
  %39 = phi i32 [ %37, %30 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #12
  br label %40

40:                                               ; preds = %6, %20, %38
  %41 = phi i32 [ %39, %38 ], [ 0, %20 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br label %42

42:                                               ; preds = %1, %40
  %43 = phi i32 [ %41, %40 ], [ 0, %1 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z35SkMultiPictureDocumentReadPageSizesP16SkStreamSeekableP14SkDocumentPagei(%class.SkStreamSeekable*, %struct.SkDocumentPage*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.SkDocumentPage* %1, null
  %5 = icmp slt i32 %2, 1
  %6 = or i1 %4, %5
  br i1 %6, label %28, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @_Z35SkMultiPictureDocumentReadPageCountP16SkStreamSeekable(%class.SkStreamSeekable* %0)
  %9 = icmp sgt i32 %8, 0
  %10 = icmp eq i32 %8, %2
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkStreamSeekable, %class.SkStreamSeekable* %0, i64 0, i32 0, i32 0
  %14 = bitcast %class.SkStreamSeekable* %0 to i64 (%class.SkStream*, i8*, i64)***
  %15 = zext i32 %2 to i64
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %27, %15
  br i1 %17, label %28, label %18

18:                                               ; preds = %16, %12
  %19 = phi i64 [ 0, %12 ], [ %27, %16 ]
  %20 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %19, i32 1
  %21 = bitcast %struct.SkSize* %20 to i8*
  %22 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %14, align 8
  %23 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %22, i64 2
  %24 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %23, align 8
  %25 = tail call i64 %24(%class.SkStream* %13, i8* %21, i64 8) #12
  %26 = icmp eq i64 %25, 8
  %27 = add nuw nsw i64 %19, 1
  br i1 %26, label %16, label %28

28:                                               ; preds = %18, %16, %3, %7
  %29 = phi i1 [ false, %7 ], [ false, %3 ], [ false, %18 ], [ true, %16 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z26SkMultiPictureDocumentReadP16SkStreamSeekableP14SkDocumentPageiPK15SkDeserialProcs(%class.SkStreamSeekable*, %struct.SkDocumentPage*, i32, %struct.SkDeserialProcs*) local_unnamed_addr #0 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.sk_sp.23, align 8
  %7 = alloca %"struct.(anonymous namespace)::PagerCanvas", align 8
  %8 = icmp eq %struct.SkDocumentPage* %1, null
  %9 = icmp slt i32 %2, 1
  %10 = or i1 %8, %9
  br i1 %10, label %142, label %11

11:                                               ; preds = %4
  %12 = tail call i32 @_Z35SkMultiPictureDocumentReadPageCountP16SkStreamSeekable(%class.SkStreamSeekable* %0) #12
  %13 = icmp sgt i32 %12, 0
  %14 = icmp eq i32 %12, %2
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %142

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.SkStreamSeekable, %class.SkStreamSeekable* %0, i64 0, i32 0, i32 0
  %18 = bitcast %class.SkStreamSeekable* %0 to i64 (%class.SkStream*, i8*, i64)***
  %19 = zext i32 %2 to i64
  br label %29

20:                                               ; preds = %29
  %21 = icmp eq i64 %38, %19
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = icmp sgt i32 %2, 0
  br i1 %23, label %24, label %55

24:                                               ; preds = %22
  %25 = and i64 %19, 1
  %26 = icmp eq i32 %2, 1
  br i1 %26, label %39, label %27

27:                                               ; preds = %24
  %28 = sub nsw i64 %19, %25
  br label %62

29:                                               ; preds = %20, %16
  %30 = phi i64 [ 0, %16 ], [ %38, %20 ]
  %31 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %30, i32 1
  %32 = bitcast %struct.SkSize* %31 to i8*
  %33 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %18, align 8
  %34 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %33, i64 2
  %35 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %34, align 8
  %36 = tail call i64 %35(%class.SkStream* %17, i8* %32, i64 8) #12
  %37 = icmp eq i64 %36, 8
  %38 = add nuw nsw i64 %30, 1
  br i1 %37, label %20, label %142

39:                                               ; preds = %62, %24
  %40 = phi float [ undef, %24 ], [ %79, %62 ]
  %41 = phi float [ undef, %24 ], [ %83, %62 ]
  %42 = phi i64 [ 0, %24 ], [ %84, %62 ]
  %43 = phi float [ 0.000000e+00, %24 ], [ %79, %62 ]
  %44 = phi float [ 0.000000e+00, %24 ], [ %83, %62 ]
  %45 = icmp eq i64 %25, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %42, i32 1, i32 0
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %42, i32 1, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp olt float %44, %50
  %52 = select i1 %51, float %50, float %44
  %53 = fcmp olt float %43, %48
  %54 = select i1 %53, float %48, float %43
  br label %55

55:                                               ; preds = %46, %39, %22
  %56 = phi float [ 0.000000e+00, %22 ], [ %41, %39 ], [ %52, %46 ]
  %57 = phi float [ 0.000000e+00, %22 ], [ %40, %39 ], [ %54, %46 ]
  %58 = bitcast %class.sk_sp.23* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  %59 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %6, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %59, align 8
  call void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcs(%class.sk_sp.23* nonnull sret %6, %class.SkStream* %17, %struct.SkDeserialProcs* %3) #12
  %60 = load %class.SkPicture*, %class.SkPicture** %59, align 8
  %61 = icmp eq %class.SkPicture* %60, null
  br i1 %61, label %140, label %87

62:                                               ; preds = %62, %27
  %63 = phi i64 [ 0, %27 ], [ %84, %62 ]
  %64 = phi float [ 0.000000e+00, %27 ], [ %79, %62 ]
  %65 = phi float [ 0.000000e+00, %27 ], [ %83, %62 ]
  %66 = phi i64 [ %28, %27 ], [ %85, %62 ]
  %67 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %63, i32 1, i32 0
  %68 = load float, float* %67, align 4
  %69 = fcmp olt float %64, %68
  %70 = select i1 %69, float %68, float %64
  %71 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %63, i32 1, i32 1
  %72 = load float, float* %71, align 4
  %73 = fcmp olt float %65, %72
  %74 = select i1 %73, float %72, float %65
  %75 = or i64 %63, 1
  %76 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %75, i32 1, i32 0
  %77 = load float, float* %76, align 4
  %78 = fcmp olt float %70, %77
  %79 = select i1 %78, float %77, float %70
  %80 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 %75, i32 1, i32 1
  %81 = load float, float* %80, align 4
  %82 = fcmp olt float %74, %81
  %83 = select i1 %82, float %81, float %74
  %84 = add nuw nsw i64 %63, 2
  %85 = add i64 %66, -2
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %39, label %62

87:                                               ; preds = %55
  %88 = bitcast %"struct.(anonymous namespace)::PagerCanvas"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3320, i8* nonnull %88) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 bitcast ({ { { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.28, [384 x i64], %class.sk_sp.29, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.30", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.36" } } } }, %class.SkTDArray }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.14, %"class.std::__1::unique_ptr", %class.sk_sp.16, %"class.std::__1::unique_ptr.17" }, %struct.SkDocumentPage*, i32, i32 }* @__const._Z26SkMultiPictureDocumentReadP16SkStreamSeekableP14SkDocumentPageiPK15SkDeserialProcs.canvas to i8*), i64 3320, i1 false)
  %89 = call float @llvm.ceil.f32(float %57) #12
  %90 = fcmp olt float %89, 0x41DFFFFFE0000000
  %91 = select i1 %90, float %89, float 0x41DFFFFFE0000000
  %92 = fcmp ogt float %91, 0xC1DFFFFFE0000000
  %93 = select i1 %92, float %91, float 0xC1DFFFFFE0000000
  %94 = fptosi float %93 to i32
  %95 = call float @llvm.ceil.f32(float %56) #12
  %96 = fcmp olt float %95, 0x41DFFFFFE0000000
  %97 = select i1 %96, float %95, float 0x41DFFFFFE0000000
  %98 = fcmp ogt float %97, 0xC1DFFFFFE0000000
  %99 = select i1 %98, float %97, float 0xC1DFFFFFE0000000
  %100 = fptosi float %99 to i32
  %101 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 0
  call void @_ZN12SkNWayCanvasC2Eii(%class.SkNWayCanvas* nonnull %101, i32 %94, i32 %100) #12
  %102 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTVN12_GLOBAL__N_111PagerCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 1
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* %103) #12
  %104 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 2
  store %struct.SkDocumentPage* %1, %struct.SkDocumentPage** %104, align 8
  %105 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 3
  store i32 %2, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 4
  store i32 0, i32* %106, align 4
  br i1 %23, label %107, label %121

107:                                              ; preds = %87
  %108 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %109 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #12
  %110 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %1, i64 0, i32 1, i32 0
  %111 = bitcast float* %110 to i64*
  %112 = load i64, i64* %111, align 4
  %113 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %113, align 8
  %114 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %115 = bitcast <2 x float>* %114 to i64*
  store i64 %112, i64* %115, align 8
  %116 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* %103, %struct.SkRect* nonnull dereferenceable(16) %108, %class.SkBBHFactory* null) #12
  %117 = bitcast %"struct.(anonymous namespace)::PagerCanvas"* %7 to void (%class.SkNWayCanvas*, %class.SkCanvas*)***
  %118 = load void (%class.SkNWayCanvas*, %class.SkCanvas*)**, void (%class.SkNWayCanvas*, %class.SkCanvas*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.SkNWayCanvas*, %class.SkCanvas*)*, void (%class.SkNWayCanvas*, %class.SkCanvas*)** %118, i64 54
  %120 = load void (%class.SkNWayCanvas*, %class.SkCanvas*)*, void (%class.SkNWayCanvas*, %class.SkCanvas*)** %119, align 8
  call void %120(%class.SkNWayCanvas* nonnull %101, %class.SkCanvas* %116) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #12
  br label %121

121:                                              ; preds = %107, %87
  %122 = load %class.SkPicture*, %class.SkPicture** %59, align 8
  %123 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %class.SkPicture* %122 to void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)***
  %125 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)**, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %125, i64 3
  %127 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %126, align 8
  call void %127(%class.SkPicture* %122, %class.SkCanvas* nonnull %123, %"class.SkPicture::AbortCallback"* null) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTVN12_GLOBAL__N_111PagerCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* %103) #12
  call void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas* nonnull %101) #12
  call void @llvm.lifetime.end.p0i8(i64 3320, i8* nonnull %88) #12
  %128 = load %class.SkPicture*, %class.SkPicture** %59, align 8
  %129 = icmp eq %class.SkPicture* %128, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %121
  %131 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %128, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = bitcast %class.SkPicture* %128 to %class.SkRefCntBase*
  %136 = bitcast %class.SkPicture* %128 to void (%class.SkRefCntBase*)***
  %137 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %136, align 8
  %138 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, i64 2
  %139 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, align 8
  call void %139(%class.SkRefCntBase* nonnull %135) #12
  br label %140

140:                                              ; preds = %55, %121, %130, %134
  %141 = phi i1 [ true, %121 ], [ true, %130 ], [ true, %134 ], [ false, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br label %142

142:                                              ; preds = %29, %4, %11, %140
  %143 = phi i1 [ %141, %140 ], [ false, %11 ], [ false, %4 ], [ false, %29 ]
  ret i1 %143
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcs(%class.sk_sp.23* sret, %class.SkStream*, %struct.SkDeserialProcs*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111PagerCanvasD2Ev(%"struct.(anonymous namespace)::PagerCanvas"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTVN12_GLOBAL__N_111PagerCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 1
  tail call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* %3) #12
  %4 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 0
  tail call void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas* %4) #12
  ret void
}

declare zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare void @_ZN12SkNWayCanvasC2Eii(%class.SkNWayCanvas*, i32, i32) unnamed_addr #2

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111PagerCanvasD0Ev(%"struct.(anonymous namespace)::PagerCanvas"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTVN12_GLOBAL__N_111PagerCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 1
  tail call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* %3) #12
  %4 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 0
  tail call void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas* %4) #12
  %5 = bitcast %"struct.(anonymous namespace)::PagerCanvas"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

declare i64 @_ZNK8SkCanvas16getBaseLayerSizeEv(%class.SkCanvas*) unnamed_addr #2

declare %class.GrRecordingContext* @_ZN8SkCanvas16recordingContextEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas11isClipEmptyEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas10isClipRectEv(%class.SkCanvas*) unnamed_addr #2

declare void @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps() unnamed_addr

declare zeroext i1 @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) unnamed_addr #2

declare void @_ZNK8SkCanvas11onImageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps(%class.SkCanvas*, %class.SkSurfaceProps*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas7onFlushEv(%class.SkNWayCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas8willSaveEv(%class.SkNWayCanvas*) unnamed_addr #2

declare i32 @_ZN12SkNWayCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE(%class.SkNWayCanvas*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZN12SkNWayCanvas14onDoSaveBehindEPK6SkRect(%class.SkNWayCanvas*, %struct.SkRect*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11willRestoreEv(%class.SkNWayCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas10didRestoreEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkNWayCanvas9onMarkCTMEPKc(%class.SkNWayCanvas*, i8*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11didConcat44ERK5SkM44(%class.SkNWayCanvas*, %class.SkM44* dereferenceable(64)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas9didSetM44ERK5SkM44(%class.SkNWayCanvas*, %class.SkM44* dereferenceable(64)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12didTranslateEff(%class.SkNWayCanvas*, float, float) unnamed_addr #2

declare void @_ZN12SkNWayCanvas8didScaleEff(%class.SkNWayCanvas*, float, float) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11onDrawPaintERK7SkPaint(%class.SkNWayCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawBehindERK7SkPaint(%class.SkNWayCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onDrawRectERK6SkRectRK7SkPaint(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11onDrawRRectERK7SkRRectRK7SkPaint(%class.SkNWayCanvas*, %class.SkRRect*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkNWayCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onDrawOvalERK6SkRectRK7SkPaint(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas9onDrawArcERK6SkRectffbRK7SkPaint(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onDrawPathERK6SkPathRK7SkPaint(%class.SkNWayCanvas*, %class.SkPath*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawRegionERK8SkRegionRK7SkPaint(%class.SkNWayCanvas*, %class.SkRegion*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkNWayCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkNWayCanvas*, %class.SkGlyphRunList*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkNWayCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkNWayCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkNWayCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkNWayCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE(%class.SkNWayCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkNWayCanvas*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111PagerCanvas16onDrawAnnotationERK6SkRectPKcP6SkData(%"struct.(anonymous namespace)::PagerCanvas"*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.sk_sp.23, align 8
  %7 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_18kEndPageE, i64 0, i64 0)) #13
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 0
  br i1 %8, label %10, label %84

10:                                               ; preds = %4
  %11 = bitcast %"struct.(anonymous namespace)::PagerCanvas"* %0 to void (%class.SkNWayCanvas*)***
  %12 = load void (%class.SkNWayCanvas*)**, void (%class.SkNWayCanvas*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkNWayCanvas*)*, void (%class.SkNWayCanvas*)** %12, i64 56
  %14 = load void (%class.SkNWayCanvas*)*, void (%class.SkNWayCanvas*)** %13, align 8
  tail call void %14(%class.SkNWayCanvas* %9) #12
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %62

20:                                               ; preds = %10
  %21 = bitcast %class.sk_sp.23* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 1
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.23* nonnull sret %6, %class.SkPictureRecorder* %22) #12
  %23 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 2
  %24 = load %struct.SkDocumentPage*, %struct.SkDocumentPage** %23, align 8
  %25 = load i32, i32* %15, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %24, i64 %26, i32 0
  %28 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %6, i64 0, i32 0
  %29 = bitcast %class.sk_sp.23* %6 to i64*
  %30 = load i64, i64* %29, align 8
  store %class.SkPicture* null, %class.SkPicture** %28, align 8
  %31 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %27, i64 0, i32 0
  %32 = load %class.SkPicture*, %class.SkPicture** %31, align 8
  %33 = bitcast %class.sk_sp.23* %27 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %class.SkPicture* %32, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkPicture* %32 to %class.SkRefCntBase*
  %41 = bitcast %class.SkPicture* %32 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  call void %44(%class.SkRefCntBase* nonnull %40) #12
  br label %45

45:                                               ; preds = %20, %35, %39
  %46 = load %class.SkPicture*, %class.SkPicture** %28, align 8
  %47 = icmp eq %class.SkPicture* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkPicture* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkPicture* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #12
  br label %58

58:                                               ; preds = %45, %48, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %59 = load i32, i32* %15, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %15, align 4
  %61 = load i32, i32* %17, align 8
  br label %62

62:                                               ; preds = %58, %10
  %63 = phi i32 [ %61, %58 ], [ %18, %10 ]
  %64 = phi i32 [ %60, %58 ], [ %16, %10 ]
  %65 = icmp slt i32 %64, %63
  br i1 %65, label %66, label %85

66:                                               ; preds = %62
  %67 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %68 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #12
  %69 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -1, i64 16, i1 false) #12
  %70 = load %struct.SkDocumentPage*, %struct.SkDocumentPage** %69, align 8
  %71 = sext i32 %64 to i64
  %72 = getelementptr inbounds %struct.SkDocumentPage, %struct.SkDocumentPage* %70, i64 %71, i32 1, i32 0
  %73 = bitcast float* %72 to i64*
  %74 = load i64, i64* %73, align 4
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %75, align 8
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %77 = bitcast <2 x float>* %76 to i64*
  store i64 %74, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.(anonymous namespace)::PagerCanvas", %"struct.(anonymous namespace)::PagerCanvas"* %0, i64 0, i32 1
  %79 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* %78, %struct.SkRect* nonnull dereferenceable(16) %67, %class.SkBBHFactory* null) #12
  %80 = bitcast %"struct.(anonymous namespace)::PagerCanvas"* %0 to void (%class.SkNWayCanvas*, %class.SkCanvas*)***
  %81 = load void (%class.SkNWayCanvas*, %class.SkCanvas*)**, void (%class.SkNWayCanvas*, %class.SkCanvas*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkNWayCanvas*, %class.SkCanvas*)*, void (%class.SkNWayCanvas*, %class.SkCanvas*)** %81, i64 54
  %83 = load void (%class.SkNWayCanvas*, %class.SkCanvas*)*, void (%class.SkNWayCanvas*, %class.SkCanvas*)** %82, align 8
  call void %83(%class.SkNWayCanvas* %9, %class.SkCanvas* %79) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #12
  br label %85

84:                                               ; preds = %4
  tail call void @_ZN12SkNWayCanvas16onDrawAnnotationERK6SkRectPKcP6SkData(%class.SkNWayCanvas* %9, %struct.SkRect* dereferenceable(16) %1, i8* %2, %class.SkData* %3) #12
  br label %85

85:                                               ; preds = %66, %62, %84
  ret void
}

declare void @_ZN12SkNWayCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec(%class.SkNWayCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix(%class.SkNWayCanvas*, %class.SkDrawable*, %class.SkMatrix*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkNWayCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), i32, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkNWayCanvas*, %class.SkRRect*, i32, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkNWayCanvas*, %class.SkPath*, i32, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkNWayCanvas*, %class.sk_sp.43*, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onClipRegionERK8SkRegion8SkClipOp(%class.SkNWayCanvas*, %class.SkRegion*, i32) unnamed_addr #2

declare void @_ZN8SkCanvas9onDiscardEv(%class.SkCanvas*) unnamed_addr #2

declare %class.GrSurfaceDrawContext* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv(%class.SkCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPaintFilterCanvas* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret %class.SkPaintFilterCanvas* null
}

declare void @_ZN12SkNWayCanvas9addCanvasEP8SkCanvas(%class.SkNWayCanvas*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12removeCanvasEP8SkCanvas(%class.SkNWayCanvas*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas9removeAllEv(%class.SkNWayCanvas*) unnamed_addr #2

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.23* sret, %class.SkPictureRecorder*) local_unnamed_addr #2

declare void @_ZN12SkNWayCanvas16onDrawAnnotationERK6SkRectPKcP6SkData(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN10SkDocumentC2EP9SkWStream(%class.SkDocument*, %class.SkWStream*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120MultiPictureDocumentD2Ev(%"struct.(anonymous namespace)::MultiPictureDocument"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_120MultiPictureDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"struct.(anonymous namespace)::MultiPictureDocument"* %0 to %class.SkDocument*
  tail call void @_ZN10SkDocument5closeEv(%class.SkDocument* %3) #12
  %4 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 6, i32 0, i32 2
  %5 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %5, i64 0, i32 1
  %7 = load void (i8*)*, void (i8*)** %6, align 8
  %8 = icmp eq void (i8*)* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void %7(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5
  %19 = bitcast %class.SkTArray.24* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_Z7sk_freePv(i8* %20) #12
  br label %21

21:                                               ; preds = %12, %17
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 4294967294
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %22, i64 0, i32 0
  br label %33

29:                                               ; preds = %49, %21
  %30 = phi i64 [ %24, %21 ], [ %51, %49 ]
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %58, label %55

33:                                               ; preds = %49, %27
  %34 = phi i64 [ 0, %27 ], [ %50, %49 ]
  %35 = load %class.sk_sp.23*, %class.sk_sp.23** %28, align 8
  %36 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %35, i64 %34, i32 0
  %37 = load %class.SkPicture*, %class.SkPicture** %36, align 8
  %38 = icmp eq %class.SkPicture* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %37, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkPicture* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkPicture* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #12
  br label %49

49:                                               ; preds = %43, %39, %33
  %50 = add nuw nsw i64 %34, 1
  %51 = load i64, i64* %23, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %33, label %29

55:                                               ; preds = %29
  %56 = bitcast %class.SkTArray* %22 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #12
  br label %58

58:                                               ; preds = %29, %55
  %59 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 2
  tail call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* %59) #12
  tail call void @_ZN10SkDocumentD2Ev(%class.SkDocument* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120MultiPictureDocumentD0Ev(%"struct.(anonymous namespace)::MultiPictureDocument"*) unnamed_addr #0 align 2 {
  tail call void @_ZN12_GLOBAL__N_120MultiPictureDocumentD2Ev(%"struct.(anonymous namespace)::MultiPictureDocument"* %0) #12
  %2 = bitcast %"struct.(anonymous namespace)::MultiPictureDocument"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %class.SkCanvas* @_ZN12_GLOBAL__N_120MultiPictureDocument11onBeginPageEff(%"struct.(anonymous namespace)::MultiPictureDocument"*, float, float) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 3, i32 0
  store float %1, float* %5, align 4
  %6 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 3, i32 1
  store float %2, float* %6, align 4
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 2
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %9 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = insertelement <2 x float> undef, float %1, i32 0
  %11 = insertelement <2 x float> %10, float %2, i32 1
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %12, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %11, <2 x float>* %13, align 8
  %14 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* %7, %struct.SkRect* nonnull dereferenceable(16) %8, %class.SkBBHFactory* null) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret %class.SkCanvas* %14
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120MultiPictureDocument9onEndPageEv(%"struct.(anonymous namespace)::MultiPictureDocument"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.23, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 3
  tail call void @_ZN8SkTArrayI6SkSizeLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.24* %3, i32 1, i32 1) #12
  %5 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %3, i64 0, i32 0
  %6 = load %struct.SkSize*, %struct.SkSize** %5, align 8
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 1
  %10 = and i64 %9, 2147483647
  %11 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %6, i64 %10
  %12 = add i64 %8, 2
  %13 = and i64 %12, 4294967294
  %14 = and i64 %8, -4294967295
  %15 = or i64 %13, %14
  store i64 %15, i64* %7, align 8
  %16 = bitcast %struct.SkSize* %4 to i64*
  %17 = bitcast %struct.SkSize* %11 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  %19 = bitcast %class.sk_sp.23* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %2, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %20, align 8
  %21 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 2
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.23* nonnull sret %2, %class.SkPictureRecorder* %21) #12
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4
  call void @_ZN8SkTArrayI5sk_spI9SkPictureELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %22, i32 1, i32 1) #12
  %23 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %22, i64 0, i32 0
  %24 = load %class.sk_sp.23*, %class.sk_sp.23** %23, align 8
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %26, 1
  %28 = and i64 %27, 2147483647
  %29 = add i64 %26, 2
  %30 = and i64 %29, 4294967294
  %31 = and i64 %26, -4294967295
  %32 = or i64 %30, %31
  store i64 %32, i64* %25, align 8
  %33 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %24, i64 %28, i32 0
  %34 = load %class.SkPicture*, %class.SkPicture** %20, align 8
  %35 = icmp eq %class.SkPicture* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %1
  %37 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %1, %36
  store %class.SkPicture* %34, %class.SkPicture** %33, align 8
  %40 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 6, i32 0, i32 2
  %41 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %41, i64 0, i32 2
  %43 = load i8, i8* %42, align 8, !range !5
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = load %class.SkPicture*, %class.SkPicture** %20, align 8
  %47 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %48 = load void (%"union.std::__1::__function::__policy_storage"*, %class.SkPicture*)*, void (%"union.std::__1::__function::__policy_storage"*, %class.SkPicture*)** %47, align 8
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 6, i32 0, i32 0
  call void %48(%"union.std::__1::__function::__policy_storage"* %49, %class.SkPicture* %46) #12
  br label %50

50:                                               ; preds = %45, %39
  %51 = load %class.SkPicture*, %class.SkPicture** %20, align 8
  %52 = icmp eq %class.SkPicture* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkPicture* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkPicture* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #12
  br label %63

63:                                               ; preds = %50, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120MultiPictureDocument7onCloseEP9SkWStream(%"struct.(anonymous namespace)::MultiPictureDocument"*, %class.SkWStream*) unnamed_addr #9 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.SkSize*
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %class.sk_sp.23, align 8
  %13 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %14 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %14, i64 2
  %16 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.SkWStream* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN12_GLOBAL__N_16kMagicE, i64 0, i64 0), i64 24) #12
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  store i32 2, i32* %4, align 4
  %19 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %13, align 8
  %20 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %19, i64 2
  %21 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, align 8
  %22 = call zeroext i1 %21(%class.SkWStream* %1, i8* nonnull %18, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  %23 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %25, 1
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, 2147483647
  %29 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 %28, i32* %3, align 4
  %30 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %13, align 8
  %31 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %30, i64 2
  %32 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %31, align 8
  %33 = call zeroext i1 %32(%class.SkWStream* %1, i8* nonnull %29, i64 4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  %34 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %34, i64 0, i32 0
  %36 = load %struct.SkSize*, %struct.SkSize** %35, align 8
  %37 = icmp eq %struct.SkSize* %36, null
  br i1 %37, label %127, label %38

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %36, i64 %42
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %38
  %46 = bitcast i64* %5 to i8*
  %47 = bitcast i64* %5 to float*
  %48 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %6, i64 0, i32 1
  br label %148

49:                                               ; preds = %148
  %50 = load %struct.SkSize*, %struct.SkSize** %35, align 8
  %51 = icmp eq %struct.SkSize* %50, null
  br i1 %51, label %127, label %52

52:                                               ; preds = %38, %49
  %53 = phi %struct.SkSize* [ %50, %49 ], [ %36, %38 ]
  %54 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %53, i64 %57
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %127, label %60

60:                                               ; preds = %52
  %61 = shl nuw nsw i64 %57, 3
  %62 = add nsw i64 %61, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 7
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %60, %67
  %68 = phi %struct.SkSize* [ %75, %67 ], [ %53, %60 ]
  %69 = phi <2 x float> [ %74, %67 ], [ zeroinitializer, %60 ]
  %70 = phi i64 [ %76, %67 ], [ %65, %60 ]
  %71 = bitcast %struct.SkSize* %68 to <2 x float>*
  %72 = load <2 x float>, <2 x float>* %71, align 4
  %73 = fcmp olt <2 x float> %69, %72
  %74 = select <2 x i1> %73, <2 x float> %72, <2 x float> %69
  %75 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %68, i64 1
  %76 = add i64 %70, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %67, !llvm.loop !6

78:                                               ; preds = %67, %60
  %79 = phi <2 x float> [ undef, %60 ], [ %74, %67 ]
  %80 = phi %struct.SkSize* [ %53, %60 ], [ %75, %67 ]
  %81 = phi <2 x float> [ zeroinitializer, %60 ], [ %74, %67 ]
  %82 = icmp ult i64 %62, 56
  br i1 %82, label %127, label %83

83:                                               ; preds = %78, %83
  %84 = phi %struct.SkSize* [ %125, %83 ], [ %80, %78 ]
  %85 = phi <2 x float> [ %124, %83 ], [ %81, %78 ]
  %86 = bitcast %struct.SkSize* %84 to <2 x float>*
  %87 = load <2 x float>, <2 x float>* %86, align 4
  %88 = fcmp olt <2 x float> %85, %87
  %89 = select <2 x i1> %88, <2 x float> %87, <2 x float> %85
  %90 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 1
  %91 = bitcast %struct.SkSize* %90 to <2 x float>*
  %92 = load <2 x float>, <2 x float>* %91, align 4
  %93 = fcmp olt <2 x float> %89, %92
  %94 = select <2 x i1> %93, <2 x float> %92, <2 x float> %89
  %95 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 2
  %96 = bitcast %struct.SkSize* %95 to <2 x float>*
  %97 = load <2 x float>, <2 x float>* %96, align 4
  %98 = fcmp olt <2 x float> %94, %97
  %99 = select <2 x i1> %98, <2 x float> %97, <2 x float> %94
  %100 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 3
  %101 = bitcast %struct.SkSize* %100 to <2 x float>*
  %102 = load <2 x float>, <2 x float>* %101, align 4
  %103 = fcmp olt <2 x float> %99, %102
  %104 = select <2 x i1> %103, <2 x float> %102, <2 x float> %99
  %105 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 4
  %106 = bitcast %struct.SkSize* %105 to <2 x float>*
  %107 = load <2 x float>, <2 x float>* %106, align 4
  %108 = fcmp olt <2 x float> %104, %107
  %109 = select <2 x i1> %108, <2 x float> %107, <2 x float> %104
  %110 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 5
  %111 = bitcast %struct.SkSize* %110 to <2 x float>*
  %112 = load <2 x float>, <2 x float>* %111, align 4
  %113 = fcmp olt <2 x float> %109, %112
  %114 = select <2 x i1> %113, <2 x float> %112, <2 x float> %109
  %115 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 6
  %116 = bitcast %struct.SkSize* %115 to <2 x float>*
  %117 = load <2 x float>, <2 x float>* %116, align 4
  %118 = fcmp olt <2 x float> %114, %117
  %119 = select <2 x i1> %118, <2 x float> %117, <2 x float> %114
  %120 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 7
  %121 = bitcast %struct.SkSize* %120 to <2 x float>*
  %122 = load <2 x float>, <2 x float>* %121, align 4
  %123 = fcmp olt <2 x float> %119, %122
  %124 = select <2 x i1> %123, <2 x float> %122, <2 x float> %119
  %125 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %84, i64 8
  %126 = icmp eq %struct.SkSize* %125, %58
  br i1 %126, label %127, label %83

127:                                              ; preds = %78, %83, %2, %49, %52
  %128 = phi <2 x float> [ zeroinitializer, %52 ], [ zeroinitializer, %49 ], [ zeroinitializer, %2 ], [ %79, %78 ], [ %124, %83 ]
  %129 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 2
  %130 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #12
  %131 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %131, align 8
  %132 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %128, <2 x float>* %132, align 8
  %133 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* %129, %struct.SkRect* nonnull dereferenceable(16) %8, %class.SkBBHFactory* null) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #12
  %134 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %23, i64 0, i32 0
  %135 = load %class.sk_sp.23*, %class.sk_sp.23** %134, align 8
  %136 = icmp eq %class.sk_sp.23* %135, null
  br i1 %136, label %158, label %137

137:                                              ; preds = %127
  %138 = load i64, i64* %24, align 8
  %139 = lshr i64 %138, 1
  %140 = and i64 %139, 2147483647
  %141 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %135, i64 %140
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %158, label %143

143:                                              ; preds = %137
  %144 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %145 = bitcast %class.sk_sp* %11 to i8*
  %146 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %147 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  br label %217

148:                                              ; preds = %45, %148
  %149 = phi %struct.SkSize* [ %36, %45 ], [ %156, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  store float 0xFFFFFFFFE0000000, float* %47, align 8
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %150 = bitcast %struct.SkSize* %149 to i64*
  %151 = load i64, i64* %150, align 4
  store i64 %151, i64* %5, align 8
  %152 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %13, align 8
  %153 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %152, i64 2
  %154 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %153, align 8
  %155 = call zeroext i1 %154(%class.SkWStream* %1, i8* nonnull %46, i64 8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  %156 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %149, i64 1
  %157 = icmp eq %struct.SkSize* %156, %43
  br i1 %157, label %49, label %148

158:                                              ; preds = %230, %127, %137
  %159 = bitcast %class.sk_sp.23* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #12
  %160 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %12, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %160, align 8
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.23* nonnull sret %12, %class.SkPictureRecorder* %129) #12
  %161 = load %class.SkPicture*, %class.SkPicture** %160, align 8
  %162 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 1
  call void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcs(%class.SkPicture* %161, %class.SkWStream* %1, %struct.SkSerialProcs* %162) #12
  %163 = load i64, i64* %24, align 8
  %164 = lshr i64 %163, 1
  %165 = trunc i64 %164 to i32
  %166 = and i32 %165, 2147483647
  %167 = and i64 %163, -4294967295
  store i64 %167, i64* %24, align 8
  %168 = icmp eq i32 %166, 0
  br i1 %168, label %196, label %169

169:                                              ; preds = %158, %194
  %170 = phi i64 [ %195, %194 ], [ %167, %158 ]
  %171 = phi i32 [ %192, %194 ], [ 0, %158 ]
  %172 = load %class.sk_sp.23*, %class.sk_sp.23** %134, align 8
  %173 = lshr i64 %170, 1
  %174 = trunc i64 %173 to i32
  %175 = and i32 %174, 2147483647
  %176 = add nuw nsw i32 %175, %171
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %172, i64 %177, i32 0
  %179 = load %class.SkPicture*, %class.SkPicture** %178, align 8
  %180 = icmp eq %class.SkPicture* %179, null
  br i1 %180, label %191, label %181

181:                                              ; preds = %169
  %182 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %179, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 -1 acq_rel
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = bitcast %class.SkPicture* %179 to %class.SkRefCntBase*
  %187 = bitcast %class.SkPicture* %179 to void (%class.SkRefCntBase*)***
  %188 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %187, align 8
  %189 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %188, i64 2
  %190 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %189, align 8
  call void %190(%class.SkRefCntBase* nonnull %186) #12
  br label %191

191:                                              ; preds = %185, %181, %169
  %192 = add nuw nsw i32 %171, 1
  %193 = icmp eq i32 %192, %166
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = load i64, i64* %24, align 8
  br label %169

196:                                              ; preds = %191, %158
  call void @_ZN8SkTArrayI5sk_spI9SkPictureELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %23, i32 0, i32 2) #12
  %197 = load i64, i64* %24, align 8
  %198 = and i64 %197, -4294967297
  store i64 %198, i64* %24, align 8
  %199 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, -4294967295
  store i64 %201, i64* %199, align 8
  call void @_ZN8SkTArrayI6SkSizeLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.24* %34, i32 0, i32 2) #12
  %202 = load i64, i64* %199, align 8
  %203 = and i64 %202, -4294967297
  store i64 %203, i64* %199, align 8
  %204 = load %class.SkPicture*, %class.SkPicture** %160, align 8
  %205 = icmp eq %class.SkPicture* %204, null
  br i1 %205, label %216, label %206

206:                                              ; preds = %196
  %207 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %204, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %216

210:                                              ; preds = %206
  %211 = bitcast %class.SkPicture* %204 to %class.SkRefCntBase*
  %212 = bitcast %class.SkPicture* %204 to void (%class.SkRefCntBase*)***
  %213 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %212, align 8
  %214 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, i64 2
  %215 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %214, align 8
  call void %215(%class.SkRefCntBase* nonnull %211) #12
  br label %216

216:                                              ; preds = %196, %206, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #12
  ret void

217:                                              ; preds = %143, %230
  %218 = phi %class.sk_sp.23* [ %135, %143 ], [ %231, %230 ]
  %219 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %218, i64 0, i32 0
  %220 = load %class.SkPicture*, %class.SkPicture** %219, align 8
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %133, %class.SkPicture* %220, %class.SkMatrix* null, %class.SkPaint* null) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #12
  call void @_ZN6SkData15MakeWithCStringEPKc(%class.sk_sp* nonnull sret %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #12
  %221 = load %class.SkData*, %class.SkData** %146, align 8
  call void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas* %133, %struct.SkRect* nonnull dereferenceable(16) %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_18kEndPageE, i64 0, i64 0), %class.SkData* %221) #12
  %222 = load %class.SkData*, %class.SkData** %146, align 8
  %223 = icmp eq %class.SkData* %222, null
  br i1 %223, label %230, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds %class.SkData, %class.SkData* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw add i32* %225, i32 -1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %230

228:                                              ; preds = %224
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %222) #12
  %229 = bitcast %class.SkData* %222 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %229) #12
  br label %230

230:                                              ; preds = %217, %224, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #12
  %231 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %218, i64 1
  %232 = icmp eq %class.sk_sp.23* %231, %141
  br i1 %232, label %158, label %217
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120MultiPictureDocument7onAbortEv(%"struct.(anonymous namespace)::MultiPictureDocument"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 4, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = and i64 %4, -4294967295
  store i64 %8, i64* %3, align 8
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %39, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 0
  br label %12

12:                                               ; preds = %37, %10
  %13 = phi i64 [ %8, %10 ], [ %38, %37 ]
  %14 = phi i32 [ 0, %10 ], [ %35, %37 ]
  %15 = load %class.sk_sp.23*, %class.sk_sp.23** %11, align 8
  %16 = lshr i64 %13, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = add nuw nsw i32 %18, %14
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %15, i64 %20, i32 0
  %22 = load %class.SkPicture*, %class.SkPicture** %21, align 8
  %23 = icmp eq %class.SkPicture* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkPicture* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkPicture* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  tail call void %33(%class.SkRefCntBase* nonnull %29) #12
  br label %34

34:                                               ; preds = %28, %24, %12
  %35 = add nuw nsw i32 %14, 1
  %36 = icmp eq i32 %35, %7
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load i64, i64* %3, align 8
  br label %12

39:                                               ; preds = %34, %1
  tail call void @_ZN8SkTArrayI5sk_spI9SkPictureELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %2, i32 0, i32 2) #12
  %40 = load i64, i64* %3, align 8
  %41 = and i64 %40, -4294967297
  store i64 %41, i64* %3, align 8
  %42 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5
  %43 = getelementptr inbounds %"struct.(anonymous namespace)::MultiPictureDocument", %"struct.(anonymous namespace)::MultiPictureDocument"* %0, i64 0, i32 5, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, -4294967295
  store i64 %45, i64* %43, align 8
  tail call void @_ZN8SkTArrayI6SkSizeLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.24* %42, i32 0, i32 2) #12
  %46 = load i64, i64* %43, align 8
  %47 = and i64 %46, -4294967297
  store i64 %47, i64* %43, align 8
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_ZN10SkDocument5closeEv(%class.SkDocument*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10SkDocumentD2Ev(%class.SkDocument*) unnamed_addr #7

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI6SkSizeLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.24*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.SkSize*, %struct.SkSize** %49, align 8
  %55 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %54, i64 %51
  %56 = bitcast %struct.SkSize* %55 to i64*
  %57 = bitcast i8* %53 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 4
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.24* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #12
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spI9SkPictureELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %92

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %92, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %74, %48
  %51 = phi i64 [ 0, %48 ], [ %75, %74 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.23*, %class.sk_sp.23** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.23* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkPicture* null, %class.SkPicture** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.23*, %class.sk_sp.23** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %60, i64 %51, i32 0
  %62 = load %class.SkPicture*, %class.SkPicture** %61, align 8
  %63 = icmp eq %class.SkPicture* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkPicture* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkPicture* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  tail call void %73(%class.SkRefCntBase* nonnull %69) #12
  br label %74

74:                                               ; preds = %68, %64, %50
  %75 = add nuw nsw i64 %51, 1
  %76 = load i64, i64* %4, align 8
  %77 = lshr i64 %76, 1
  %78 = and i64 %77, 2147483647
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %50, label %80

80:                                               ; preds = %74, %35
  %81 = phi i64 [ %45, %35 ], [ %76, %74 ]
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  %84 = bitcast %class.SkTArray* %0 to i8**
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %84, align 8
  tail call void @_Z7sk_freePv(i8* %86) #12
  %87 = load i64, i64* %4, align 8
  br label %88

88:                                               ; preds = %80, %85
  %89 = phi i64 [ %87, %85 ], [ %81, %80 ]
  store i8* %44, i8** %84, align 8
  %90 = and i64 %89, -4294967298
  %91 = or i64 %90, 1
  store i64 %91, i64* %4, align 8
  br label %92

92:                                               ; preds = %88, %32, %21
  ret void
}

declare void @_ZN6SkData15MakeWithCStringEPKc(%class.sk_sp* sret, i8*) local_unnamed_addr #2

declare void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcs(%class.SkPicture*, %class.SkWStream*, %struct.SkSerialProcs*) local_unnamed_addr #2

declare void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z10sk_make_spIN12_GLOBAL__N_120MultiPictureDocumentEJRP9SkWStreamRPK13SkSerialProcsRNSt3__18functionIFvPK9SkPictureEEEEE5sk_spIT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spIN12_GLOBAL__N_120MultiPictureDocumentEJRP9SkWStreamRPK13SkSerialProcsRNSt3__18functionIFvPK9SkPictureEEEEE5sk_spIT_EDpOT0_"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
