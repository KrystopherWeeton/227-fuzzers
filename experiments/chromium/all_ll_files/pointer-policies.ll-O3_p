; ModuleID = '../../v8/src/heap/cppgc/pointer-policies.cc'
source_filename = "../../v8/src/heap/cppgc/pointer-policies.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::EnabledCheckingPolicy" = type { %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.114", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.206", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::PageBackend" = type { %"class.v8::PageAllocator"*, %"class.cppgc::internal::NormalPageMemoryPool", %"class.cppgc::internal::PageMemoryRegionTree", %"class.std::__1::vector.46", %"class.std::__1::unordered_map" }
%"class.cppgc::internal::NormalPageMemoryPool" = type { [16 x %"class.std::__1::vector.32"] }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.cppgc::internal::PageMemoryRegionTree" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { float }
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.79", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.86", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.81" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type <{ %"class.std::__1::vector.104", %"class.cppgc::internal::HeapBase"*, i8, [7 x i8] }>
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.cppgc::internal::PreFinalizerRegistrationDispatcher::PreFinalizer"*, %"struct.cppgc::internal::PreFinalizerRegistrationDispatcher::PreFinalizer"*, %"class.std::__1::__compressed_pair.106" }
%"struct.cppgc::internal::PreFinalizerRegistrationDispatcher::PreFinalizer" = type { i8*, i1 (%"class.cppgc::LivenessBroker"*, i8*)* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.cppgc::internal::PreFinalizerRegistrationDispatcher::PreFinalizer"* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.117", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.164", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.117" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.118" }
%"class.std::__1::shared_ptr.118" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.145", %"class.heap::base::Worklist.146", %"class.heap::base::Worklist.147", %"class.heap::base::Worklist.148", %"class.heap::base::Worklist.149", %"class.heap::base::Worklist.149", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.145" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.146" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.147" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.heap::base::Worklist.148" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.149" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.120" }
%"class.std::__1::__hash_table.120" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.124"** }
%"struct.std::__1::__hash_node_base.124" = type { %"struct.std::__1::__hash_node_base.124"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__bucket_list_deallocator.126" }
%"class.std::__1::__bucket_list_deallocator.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.124" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.heap::base::Worklist.145" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.150", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.147"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.146"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.148"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.149"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.145"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist.153"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist.153" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.157", i64 }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.167", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.179", %"class.std::__1::unique_ptr.186", i8, i8, [6 x i8] }>
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.181" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist.153" }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.192" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.198", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"*, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::unique_ptr.200" = type opaque
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.std::__1::unique_ptr.200"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { i32* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.212" }
%"struct.std::__1::pair.212" = type { i8*, %"class.cppgc::internal::PageMemoryRegion"* }
%"class.cppgc::internal::PageMemoryRegion" = type <{ i32 (...)**, %"class.v8::PageAllocator"*, %"class.cppgc::internal::MemoryRegion", i8, [7 x i8] }>
%"class.cppgc::internal::MemoryRegion" = type { i8*, i64 }
%"class.cppgc::internal::NormalPageMemoryRegion" = type { %"class.cppgc::internal::PageMemoryRegion.base", %"struct.std::__1::array.213", [5 x i8] }
%"class.cppgc::internal::PageMemoryRegion.base" = type <{ i32 (...)**, %"class.v8::PageAllocator"*, %"class.cppgc::internal::MemoryRegion", i8 }>
%"struct.std::__1::array.213" = type { [10 x i8] }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"!HeapRegistry::TryFromManagedPointer(this)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal21EnabledCheckingPolicy16CheckPointerImplEPKvb(%"class.cppgc::internal::EnabledCheckingPolicy"*, i8*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = and i64 %4, -131072
  %6 = or i64 %5, 4096
  %7 = inttoptr i64 %6 to %"class.cppgc::internal::BasePage"*
  %8 = getelementptr inbounds %"class.cppgc::internal::EnabledCheckingPolicy", %"class.cppgc::internal::EnabledCheckingPolicy"* %0, i64 0, i32 0
  %9 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %8, align 8
  %10 = icmp eq %"class.cppgc::internal::HeapBase"* %9, null
  br i1 %10, label %11, label %107

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %7, i64 0, i32 0
  %13 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %12, align 4096
  store %"class.cppgc::internal::HeapBase"* %13, %"class.cppgc::internal::HeapBase"** %8, align 8
  %14 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::PageBackend"** %14, align 8
  %16 = bitcast %"class.cppgc::internal::EnabledCheckingPolicy"* %0 to i8*
  %17 = getelementptr inbounds %"class.cppgc::internal::PageBackend", %"class.cppgc::internal::PageBackend"* %15, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %11, %21
  %22 = phi %"class.std::__1::__tree_end_node"* [ %32, %21 ], [ %17, %11 ]
  %23 = phi %"class.std::__1::__tree_node"* [ %33, %21 ], [ %19, %11 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ugt i8* %25, %16
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_node"* %23 to %"class.std::__1::__tree_node"**
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::__tree_node_base"** %29 to %"class.std::__1::__tree_node"**
  %31 = select i1 %26, %"class.std::__1::__tree_node"** %28, %"class.std::__1::__tree_node"** %30
  %32 = select i1 %26, %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"* %22
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %34 = icmp eq %"class.std::__1::__tree_node"* %33, null
  br i1 %34, label %35, label %21

35:                                               ; preds = %21, %11
  %36 = phi %"class.std::__1::__tree_end_node"* [ %17, %11 ], [ %32, %21 ]
  %37 = getelementptr inbounds %"class.cppgc::internal::PageBackend", %"class.cppgc::internal::PageBackend"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %36, %38
  br i1 %39, label %103, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %42, %40 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %60, label %44

49:                                               ; preds = %40, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %54, %49 ], [ %36, %40 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 2
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_end_node"**
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %51
  br i1 %57, label %49, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node_base"*
  br label %60

60:                                               ; preds = %44, %58
  %61 = phi %"class.std::__1::__tree_node_base"* [ %59, %58 ], [ %45, %44 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 1, i32 1
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.cppgc::internal::PageMemoryRegion"**
  %64 = load %"class.cppgc::internal::PageMemoryRegion"*, %"class.cppgc::internal::PageMemoryRegion"** %63, align 8
  %65 = getelementptr inbounds %"class.cppgc::internal::PageMemoryRegion", %"class.cppgc::internal::PageMemoryRegion"* %64, i64 0, i32 2, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.cppgc::internal::PageMemoryRegion", %"class.cppgc::internal::PageMemoryRegion"* %64, i64 0, i32 2, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = icmp ule i8* %69, %16
  %71 = icmp eq %"class.cppgc::internal::PageMemoryRegion"* %64, null
  %72 = or i1 %71, %70
  %73 = ptrtoint i8* %66 to i64
  br i1 %72, label %103, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.cppgc::internal::PageMemoryRegion", %"class.cppgc::internal::PageMemoryRegion"* %64, i64 0, i32 3
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds i8, i8* %66, i64 4096
  %80 = add i64 %68, -8192
  %81 = ptrtoint i8* %79 to i64
  %82 = ptrtoint %"class.cppgc::internal::EnabledCheckingPolicy"* %0 to i64
  %83 = sub i64 %82, %81
  %84 = icmp ult i64 %83, %80
  br i1 %84, label %100, label %103

85:                                               ; preds = %74
  %86 = bitcast %"class.cppgc::internal::PageMemoryRegion"* %64 to %"class.cppgc::internal::NormalPageMemoryRegion"*
  %87 = ptrtoint %"class.cppgc::internal::EnabledCheckingPolicy"* %0 to i64
  %88 = sub i64 %87, %73
  %89 = lshr i64 %88, 17
  %90 = getelementptr inbounds %"class.cppgc::internal::NormalPageMemoryRegion", %"class.cppgc::internal::NormalPageMemoryRegion"* %86, i64 0, i32 1, i32 0, i64 %89
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %85
  %94 = and i64 %88, -131072
  %95 = getelementptr inbounds i8, i8* %66, i64 %94
  %96 = getelementptr inbounds i8, i8* %95, i64 4096
  %97 = ptrtoint i8* %96 to i64
  %98 = sub i64 %87, %97
  %99 = icmp ult i64 %98, 122880
  br i1 %99, label %100, label %103

100:                                              ; preds = %93, %78
  %101 = phi i8* [ %79, %78 ], [ %96, %93 ]
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %35, %60, %85, %93, %78, %100
  %104 = tail call %"class.cppgc::internal::HeapBase"* @_ZN5cppgc8internal12HeapRegistry21TryFromManagedPointerEPKv(i8* %16) #4
  %105 = icmp eq %"class.cppgc::internal::HeapBase"* %104, null
  br i1 %105, label %107, label %106, !prof !3

106:                                              ; preds = %103
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #5
  unreachable

107:                                              ; preds = %103, %100, %3
  br i1 %2, label %119, label %108

108:                                              ; preds = %107
  %109 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %8, align 8
  %110 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %109, i64 0, i32 12
  %111 = tail call zeroext i1 @_ZNK5cppgc8internal7Sweeper20IsSweepingInProgressEv(%"class.cppgc::internal::Sweeper"* %110) #4
  br i1 %111, label %119, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %7, i64 0, i32 2
  %114 = load i8, i8* %113, align 16
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %119

116:                                              ; preds = %112
  %117 = inttoptr i64 %6 to %"class.cppgc::internal::LargePage"*
  %118 = tail call %"class.cppgc::internal::HeapObjectHeader"* @_ZNK5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"* nonnull %117) #4
  br label %119

119:                                              ; preds = %112, %107, %116, %108
  ret void
}

declare %"class.cppgc::internal::HeapBase"* @_ZN5cppgc8internal12HeapRegistry21TryFromManagedPointerEPKv(i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZNK5cppgc8internal7Sweeper20IsSweepingInProgressEv(%"class.cppgc::internal::Sweeper"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8*) local_unnamed_addr #3 align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -131072
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to %"class.cppgc::internal::BasePage"*
  %6 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %5, i64 0, i32 0
  %7 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %6, align 4096
  %8 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %7, i64 0, i32 13
  ret %"class.cppgc::internal::PersistentRegion"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal20WeakPersistentPolicy19GetPersistentRegionEPKv(i8*) local_unnamed_addr #3 align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -131072
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to %"class.cppgc::internal::BasePage"*
  %6 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %5, i64 0, i32 0
  %7 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %6, align 4096
  %8 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %7, i64 0, i32 14
  ret %"class.cppgc::internal::PersistentRegion"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.cppgc::internal::CrossThreadPersistentRegion"* @_ZN5cppgc8internal33StrongCrossThreadPersistentPolicy19GetPersistentRegionEPKv(i8*) local_unnamed_addr #3 align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -131072
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to %"class.cppgc::internal::BasePage"*
  %6 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %5, i64 0, i32 0
  %7 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %6, align 4096
  %8 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %7, i64 0, i32 15
  ret %"class.cppgc::internal::CrossThreadPersistentRegion"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.cppgc::internal::CrossThreadPersistentRegion"* @_ZN5cppgc8internal31WeakCrossThreadPersistentPolicy19GetPersistentRegionEPKv(i8*) local_unnamed_addr #3 align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -131072
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to %"class.cppgc::internal::BasePage"*
  %6 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %5, i64 0, i32 0
  %7 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %6, align 4096
  %8 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %7, i64 0, i32 16
  ret %"class.cppgc::internal::CrossThreadPersistentRegion"* %8
}

declare %"class.cppgc::internal::HeapObjectHeader"* @_ZNK5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
