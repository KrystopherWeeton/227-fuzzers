; ModuleID = '../../services/device/wake_lock/wake_lock_context.cc'
source_filename = "../../services/device/wake_lock/wake_lock_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::WakeLockContext" = type { %"class.device::mojom::WakeLockContext", %"class.device::WakeLock::Observer", %class.scoped_refptr, i32, %"class.base::RepeatingCallback", %"class.std::__1::vector" }
%"class.device::mojom::WakeLockContext" = type { i32 (...)** }
%"class.device::WakeLock::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::WakeLock"* }
%"class.device::WakeLock" = type { %"class.device::mojom::WakeLock", i32, i32, i32, %"class.std::__1::unique_ptr.3", %class.scoped_refptr.10, %class.scoped_refptr, %"class.std::__1::unique_ptr.11", %"class.device::WakeLock::Observer"*, %"class.mojo::ReceiverSetBase" }
%"class.device::mojom::WakeLock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.device::PowerSaveBlocker"* }
%"class.device::PowerSaveBlocker" = type { i32 (...)**, %class.scoped_refptr.14, %class.scoped_refptr.10, %class.scoped_refptr.10 }
%class.scoped_refptr.14 = type { %"class.device::PowerSaveBlocker::Delegate"* }
%"class.device::PowerSaveBlocker::Delegate" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.18", %"class.base::RepeatingCallback.19", i64, %"class.std::__1::map", i8*, i64, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback.18" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.19" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.29", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.30" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i8 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::unique_ptr"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.44", [4 x i8], %"class.base::RepeatingCallback.18", %class.scoped_refptr.10, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.45", [4 x i8] }>
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN6device8WakeLockENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN6device15WakeLockContext24WakeLockInvalidContextIdE = hidden local_unnamed_addr constant i32 -1, align 4
@_ZTVN6device15WakeLockContextE = hidden unnamed_addr constant { [9 x i8*], [8 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::WakeLockContext"*)* @_ZN6device15WakeLockContextD2Ev to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*)* @_ZN6device15WakeLockContextD0Ev to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32, i32, %"class.std::__1::basic_string"*, %"class.mojo::PendingReceiver"*)* @_ZN6device15WakeLockContext11GetWakeLockENS_5mojom12WakeLockTypeENS1_14WakeLockReasonERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4mojo15PendingReceiverINS1_8WakeLockEEE to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32)* @_ZN6device15WakeLockContext19OnWakeLockActivatedENS_5mojom12WakeLockTypeE to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32)* @_ZN6device15WakeLockContext21OnWakeLockDeactivatedENS_5mojom12WakeLockTypeE to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32, i32)* @_ZN6device15WakeLockContext17OnWakeLockChangedENS_5mojom12WakeLockTypeES2_ to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32, %"class.device::WakeLock"*)* @_ZN6device15WakeLockContext17OnConnectionErrorENS_5mojom12WakeLockTypeEPNS_8WakeLockE to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.device::WakeLockContext"*)* @_ZThn8_N6device15WakeLockContextD1Ev to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*)* @_ZThn8_N6device15WakeLockContextD0Ev to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32)* @_ZThn8_N6device15WakeLockContext19OnWakeLockActivatedENS_5mojom12WakeLockTypeE to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32)* @_ZThn8_N6device15WakeLockContext21OnWakeLockDeactivatedENS_5mojom12WakeLockTypeE to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32, i32)* @_ZThn8_N6device15WakeLockContext17OnWakeLockChangedENS_5mojom12WakeLockTypeES2_ to i8*), i8* bitcast (void (%"class.device::WakeLockContext"*, i32, %"class.device::WakeLock"*)* @_ZThn8_N6device15WakeLockContext17OnConnectionErrorENS_5mojom12WakeLockTypeEPNS_8WakeLockE to i8*)] }, align 8

@_ZN6device15WakeLockContextC1Ei13scoped_refptrIN4base22SingleThreadTaskRunnerEERKNS2_17RepeatingCallbackIFPN4aura6WindowEiEEE = hidden unnamed_addr alias void (%"class.device::WakeLockContext"*, i32, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"*), void (%"class.device::WakeLockContext"*, i32, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"*)* @_ZN6device15WakeLockContextC2Ei13scoped_refptrIN4base22SingleThreadTaskRunnerEERKNS2_17RepeatingCallbackIFPN4aura6WindowEiEEE
@_ZN6device15WakeLockContextD1Ev = hidden unnamed_addr alias void (%"class.device::WakeLockContext"*), void (%"class.device::WakeLockContext"*)* @_ZN6device15WakeLockContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device15WakeLockContextC2Ei13scoped_refptrIN4base22SingleThreadTaskRunnerEERKNS2_17RepeatingCallbackIFPN4aura6WindowEiEEE(%"class.device::WakeLockContext"*, i32, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %6 = bitcast %"class.device::WakeLockContext"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 2
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 3
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #10
  %12 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device15WakeLockContextD2Ev(%"class.device::WakeLockContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::WakeLockContext"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %15, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %15, align 8
  %17 = icmp eq %"class.device::WakeLock"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.device::WakeLock"* %16 to void (%"class.device::WakeLock"*)***
  %20 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %20, i64 1
  %22 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %21, align 8
  tail call void %22(%"class.device::WakeLock"* nonnull %16) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #10
  %32 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 2, i32 0
  %33 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %32, align 8
  %34 = icmp eq %"class.base::SingleThreadTaskRunner"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %33, i64 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #10
  br label %43

43:                                               ; preds = %30, %35, %40
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6device15WakeLockContextD1Ev(%"class.device::WakeLockContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 -1, i32 5, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.38"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %2, i64 5
  %5 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %10 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %2, i64 6, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %6
  br i1 %12, label %29, label %13

13:                                               ; preds = %8, %24
  %14 = phi %"class.std::__1::unique_ptr"* [ %15, %24 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %16, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %16, align 8
  %18 = icmp eq %"class.device::WakeLock"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.device::WakeLock"* %17 to void (%"class.device::WakeLock"*)***
  %21 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %21, i64 1
  %23 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %22, align 8
  tail call void %23(%"class.device::WakeLock"* nonnull %17) #10
  br label %24

24:                                               ; preds = %19, %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %15, %6
  br i1 %25, label %26, label %13

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::__compressed_pair.38"* %4 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %8
  %30 = phi i8* [ %28, %26 ], [ %9, %8 ]
  store %"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"** %10, align 8
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %1
  %32 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %2, i64 4
  %33 = bitcast %"class.std::__1::__compressed_pair.38"* %32 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %33) #10
  %34 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %2, i64 2
  %35 = bitcast %"class.std::__1::__compressed_pair.38"* %34 to %"class.base::SingleThreadTaskRunner"**
  %36 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %35, align 8
  %37 = icmp eq %"class.base::SingleThreadTaskRunner"* %36, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %45) #10
  br label %46

46:                                               ; preds = %31, %38, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device15WakeLockContextD0Ev(%"class.device::WakeLockContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::WakeLockContext"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN6device15WakeLockContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %15, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %15, align 8
  %17 = icmp eq %"class.device::WakeLock"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.device::WakeLock"* %16 to void (%"class.device::WakeLock"*)***
  %20 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %20, i64 1
  %22 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %21, align 8
  tail call void %22(%"class.device::WakeLock"* nonnull %16) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #10
  %32 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 2, i32 0
  %33 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %32, align 8
  %34 = icmp eq %"class.base::SingleThreadTaskRunner"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %33, i64 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #10
  br label %43

43:                                               ; preds = %30, %35, %40
  %44 = bitcast %"class.device::WakeLockContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6device15WakeLockContextD0Ev(%"class.device::WakeLockContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 -1, i32 5, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.38"* %2 to %"class.device::WakeLockContext"*
  tail call void @_ZN6device15WakeLockContextD0Ev(%"class.device::WakeLockContext"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device15WakeLockContext11GetWakeLockENS_5mojom12WakeLockTypeENS1_14WakeLockReasonERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4mojo15PendingReceiverINS1_8WakeLockEEE(%"class.device::WakeLockContext"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::PendingReceiver", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5
  %10 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 3
  %12 = bitcast %"class.mojo::PendingReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  %13 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = tail call i8* @_Znwm(i64 144) #11
  %15 = bitcast i8* %14 to %"class.device::WakeLock"*
  %16 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %16, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %17) #10
  %18 = load i32, i32* %11, align 4
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %20 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 4, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %19, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %20) #10
  %21 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 2, i32 0
  %22 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %21, align 8
  %23 = ptrtoint %"class.base::SingleThreadTaskRunner"* %22 to i64
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %5, %25
  %29 = icmp eq %"class.device::WakeLockContext"* %0, null
  %30 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 1
  %31 = select i1 %29, %"class.device::WakeLock::Observer"* null, %"class.device::WakeLock::Observer"* %30
  call void @_ZN6device8WakeLockC1EN4mojo15PendingReceiverINS_5mojom8WakeLockEEENS3_12WakeLockTypeENS3_14WakeLockReasonERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEiN4base17RepeatingCallbackIFPN4aura6WindowEiEEE13scoped_refptrINSH_22SingleThreadTaskRunnerEEPNS0_8ObserverE(%"class.device::WakeLock"* nonnull %15, %"class.mojo::PendingReceiver"* nonnull %6, i32 %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 %18, %"class.base::RepeatingCallback"* nonnull %7, i64 %23, %"class.device::WakeLock::Observer"* %31) #10
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %8 to i8**
  store i8* %14, i8** %34, align 8
  %35 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr"* %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %28
  %41 = ptrtoint i8* %14 to i64
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %33, align 8
  %42 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 1
  %44 = ptrtoint %"class.std::__1::unique_ptr"* %43 to i64
  %45 = bitcast %"class.std::__1::unique_ptr"** %35 to i64*
  store i64 %44, i64* %45, align 8
  br label %47

46:                                               ; preds = %28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN6device8WakeLockENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %9, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #10
  br label %47

47:                                               ; preds = %40, %46
  %48 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %33, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %33, align 8
  %49 = icmp eq %"class.device::WakeLock"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.device::WakeLock"* %48 to void (%"class.device::WakeLock"*)***
  %52 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %52, i64 1
  %54 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %53, align 8
  call void %54(%"class.device::WakeLock"* nonnull %48) #10
  br label %55

55:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device15WakeLockContext19OnWakeLockActivatedENS_5mojom12WakeLockTypeE(%"class.device::WakeLockContext"* nocapture, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn8_N6device15WakeLockContext19OnWakeLockActivatedENS_5mojom12WakeLockTypeE(%"class.device::WakeLockContext"* nocapture, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device15WakeLockContext21OnWakeLockDeactivatedENS_5mojom12WakeLockTypeE(%"class.device::WakeLockContext"* nocapture, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn8_N6device15WakeLockContext21OnWakeLockDeactivatedENS_5mojom12WakeLockTypeE(%"class.device::WakeLockContext"* nocapture, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device15WakeLockContext17OnWakeLockChangedENS_5mojom12WakeLockTypeES2_(%"class.device::WakeLockContext"* nocapture, i32, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn8_N6device15WakeLockContext17OnWakeLockChangedENS_5mojom12WakeLockTypeES2_(%"class.device::WakeLockContext"* nocapture, i32, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device15WakeLockContext17OnConnectionErrorENS_5mojom12WakeLockTypeEPNS_8WakeLockE(%"class.device::WakeLockContext"* nocapture, i32, %"class.device::WakeLock"* readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 0, i32 5, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %5, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %3, %14
  %10 = phi %"class.std::__1::unique_ptr"* [ %15, %14 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %11, align 8
  %13 = icmp eq %"class.device::WakeLock"* %12, %2
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr"* %15, %7
  br i1 %16, label %17, label %9

17:                                               ; preds = %14
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  br label %53

19:                                               ; preds = %9, %3
  %20 = phi %"class.std::__1::unique_ptr"* [ %5, %3 ], [ %10, %9 ]
  %21 = ptrtoint %"class.std::__1::unique_ptr"* %20 to i64
  %22 = icmp eq %"class.std::__1::unique_ptr"* %20, %7
  br i1 %22, label %53, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %25 = icmp eq %"class.std::__1::unique_ptr"* %24, %7
  br i1 %25, label %53, label %26

26:                                               ; preds = %23, %47
  %27 = phi %"class.std::__1::unique_ptr"* [ %49, %47 ], [ %24, %23 ]
  %28 = phi i64 [ %48, %47 ], [ %21, %23 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %29, align 8
  %31 = icmp eq %"class.device::WakeLock"* %30, %2
  br i1 %31, label %47, label %32

32:                                               ; preds = %26
  %33 = ptrtoint %"class.device::WakeLock"* %30 to i64
  %34 = inttoptr i64 %28 to %"class.std::__1::unique_ptr"*
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %29, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %35, align 8
  %37 = inttoptr i64 %28 to i64*
  store i64 %33, i64* %37, align 8
  %38 = icmp eq %"class.device::WakeLock"* %36, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.device::WakeLock"* %36 to void (%"class.device::WakeLock"*)***
  %41 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %41, i64 1
  %43 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %42, align 8
  tail call void %43(%"class.device::WakeLock"* nonnull %36) #10
  br label %44

44:                                               ; preds = %39, %32
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 1
  %46 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  br label %47

47:                                               ; preds = %44, %26
  %48 = phi i64 [ %28, %26 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %7
  br i1 %50, label %51, label %26

51:                                               ; preds = %47
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  br label %53

53:                                               ; preds = %51, %23, %19, %17
  %54 = phi %"class.std::__1::unique_ptr"* [ %7, %19 ], [ %7, %17 ], [ %7, %23 ], [ %52, %51 ]
  %55 = phi i64 [ %21, %19 ], [ %18, %17 ], [ %21, %23 ], [ %48, %51 ]
  %56 = inttoptr i64 %55 to %"class.std::__1::unique_ptr"*
  %57 = icmp eq %"class.std::__1::unique_ptr"* %54, %56
  br i1 %57, label %72, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"class.std::__1::unique_ptr"* [ %60, %69 ], [ %54, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %61, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %61, align 8
  %63 = icmp eq %"class.device::WakeLock"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.device::WakeLock"* %62 to void (%"class.device::WakeLock"*)***
  %66 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %66, i64 1
  %68 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %67, align 8
  tail call void %68(%"class.device::WakeLock"* nonnull %62) #10
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::unique_ptr"* %60, %56
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  store %"class.std::__1::unique_ptr"* %56, %"class.std::__1::unique_ptr"** %6, align 8
  br label %72

72:                                               ; preds = %53, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6device15WakeLockContext17OnConnectionErrorENS_5mojom12WakeLockTypeEPNS_8WakeLockE(%"class.device::WakeLockContext"* nocapture, i32, %"class.device::WakeLock"* readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.device::WakeLockContext", %"class.device::WakeLockContext"* %0, i64 -1, i32 5, i32 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %4, i64 5, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %4, i64 6, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %3, %15
  %11 = phi %"class.std::__1::unique_ptr"* [ %16, %15 ], [ %6, %3 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %12, align 8
  %14 = icmp eq %"class.device::WakeLock"* %13, %2
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 1
  %17 = icmp eq %"class.std::__1::unique_ptr"* %16, %8
  br i1 %17, label %18, label %10

18:                                               ; preds = %15
  %19 = ptrtoint %"class.std::__1::unique_ptr"* %8 to i64
  br label %54

20:                                               ; preds = %10, %3
  %21 = phi %"class.std::__1::unique_ptr"* [ %6, %3 ], [ %11, %10 ]
  %22 = ptrtoint %"class.std::__1::unique_ptr"* %21 to i64
  %23 = icmp eq %"class.std::__1::unique_ptr"* %21, %8
  br i1 %23, label %54, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr"* %25, %8
  br i1 %26, label %54, label %27

27:                                               ; preds = %24, %48
  %28 = phi %"class.std::__1::unique_ptr"* [ %50, %48 ], [ %25, %24 ]
  %29 = phi i64 [ %49, %48 ], [ %22, %24 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %30, align 8
  %32 = icmp eq %"class.device::WakeLock"* %31, %2
  br i1 %32, label %48, label %33

33:                                               ; preds = %27
  %34 = ptrtoint %"class.device::WakeLock"* %31 to i64
  %35 = inttoptr i64 %29 to %"class.std::__1::unique_ptr"*
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %36, align 8
  %38 = inttoptr i64 %29 to i64*
  store i64 %34, i64* %38, align 8
  %39 = icmp eq %"class.device::WakeLock"* %37, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.device::WakeLock"* %37 to void (%"class.device::WakeLock"*)***
  %42 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %42, i64 1
  %44 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %43, align 8
  tail call void %44(%"class.device::WakeLock"* nonnull %37) #10
  br label %45

45:                                               ; preds = %40, %33
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 1
  %47 = ptrtoint %"class.std::__1::unique_ptr"* %46 to i64
  br label %48

48:                                               ; preds = %45, %27
  %49 = phi i64 [ %29, %27 ], [ %47, %45 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %8
  br i1 %51, label %52, label %27

52:                                               ; preds = %48
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  br label %54

54:                                               ; preds = %52, %24, %20, %18
  %55 = phi %"class.std::__1::unique_ptr"* [ %8, %20 ], [ %8, %18 ], [ %8, %24 ], [ %53, %52 ]
  %56 = phi i64 [ %22, %20 ], [ %19, %18 ], [ %22, %24 ], [ %49, %52 ]
  %57 = inttoptr i64 %56 to %"class.std::__1::unique_ptr"*
  %58 = icmp eq %"class.std::__1::unique_ptr"* %55, %57
  br i1 %58, label %73, label %59

59:                                               ; preds = %54, %70
  %60 = phi %"class.std::__1::unique_ptr"* [ %61, %70 ], [ %55, %54 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %62, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %62, align 8
  %64 = icmp eq %"class.device::WakeLock"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.device::WakeLock"* %63 to void (%"class.device::WakeLock"*)***
  %67 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %67, i64 1
  %69 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %68, align 8
  tail call void %69(%"class.device::WakeLock"* nonnull %63) #10
  br label %70

70:                                               ; preds = %65, %59
  %71 = icmp eq %"class.std::__1::unique_ptr"* %61, %57
  br i1 %71, label %72, label %59

72:                                               ; preds = %70
  store %"class.std::__1::unique_ptr"* %57, %"class.std::__1::unique_ptr"** %7, align 8
  br label %73

73:                                               ; preds = %54, %72
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN6device8WakeLockC1EN4mojo15PendingReceiverINS_5mojom8WakeLockEEENS3_12WakeLockTypeENS3_14WakeLockReasonERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEiN4base17RepeatingCallbackIFPN4aura6WindowEiEEE13scoped_refptrINSH_22SingleThreadTaskRunnerEEPNS0_8ObserverE(%"class.device::WakeLock"*, %"class.mojo::PendingReceiver"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.base::RepeatingCallback"*, i64, %"class.device::WakeLock::Observer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN6device8WakeLockENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.device::WakeLock"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.device::WakeLock"*, %"class.device::WakeLock"** %142, align 8
  store %"class.device::WakeLock"* null, %"class.device::WakeLock"** %142, align 8
  %144 = icmp eq %"class.device::WakeLock"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.device::WakeLock"* %143 to void (%"class.device::WakeLock"*)***
  %147 = load void (%"class.device::WakeLock"*)**, void (%"class.device::WakeLock"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %147, i64 1
  %149 = load void (%"class.device::WakeLock"*)*, void (%"class.device::WakeLock"*)** %148, align 8
  tail call void %149(%"class.device::WakeLock"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
