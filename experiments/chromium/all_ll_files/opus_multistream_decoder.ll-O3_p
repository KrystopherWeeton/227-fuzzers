; ModuleID = '../../third_party/opus/src/src/opus_multistream_decoder.c'
source_filename = "../../third_party/opus/src/src/opus_multistream_decoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.OpusMSDecoder = type { %struct.ChannelLayout }
%struct.ChannelLayout = type { i32, i32, i32, [256 x i8] }
%struct.OpusDecoder = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [110 x i8] c"assertion failed: (opus_multistream_decoder_ctl(st, 4029, ((&Fs) + ((&Fs) - (opus_int32*)(&Fs))))) == OPUS_OK\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"../../third_party/opus/src/src/opus_multistream_decoder.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decoder_get_size(i32, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %0, 1
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = icmp slt i32 %0, %1
  %6 = icmp slt i32 %1, 0
  %7 = or i1 %5, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @opus_decoder_get_size(i32 2) #6
  %10 = tail call i32 @opus_decoder_get_size(i32 1) #6
  %11 = add i32 %9, 7
  %12 = and i32 %11, -8
  %13 = mul nsw i32 %12, %1
  %14 = add nsw i32 %13, 272
  %15 = sub nsw i32 %0, %1
  %16 = add i32 %10, 7
  %17 = and i32 %16, -8
  %18 = mul nsw i32 %17, %15
  %19 = add nsw i32 %14, %18
  br label %20

20:                                               ; preds = %2, %4, %8
  %21 = phi i32 [ %19, %8 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @opus_decoder_get_size(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decoder_init(%struct.OpusMSDecoder*, i32, i32, i32, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %7 = bitcast %struct.OpusMSDecoder* %0 to i8*
  %8 = add i32 %2, -1
  %9 = icmp ugt i32 %8, 254
  br i1 %9, label %195, label %10

10:                                               ; preds = %6
  %11 = icmp sgt i32 %4, %3
  %12 = icmp slt i32 %3, 1
  %13 = or i1 %12, %11
  %14 = icmp slt i32 %4, 0
  %15 = or i1 %14, %13
  %16 = sub nsw i32 255, %4
  %17 = icmp slt i32 %16, %3
  %18 = or i1 %17, %15
  br i1 %18, label %195, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0
  %21 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 0
  store i32 %2, i32* %21, align 4
  %22 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  store i32 %3, i32* %22, align 4
  %23 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 2
  store i32 %4, i32* %23, align 4
  %24 = zext i32 %2 to i64
  %25 = icmp ult i32 %2, 32
  br i1 %25, label %113, label %26

26:                                               ; preds = %19
  %27 = getelementptr %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 0
  %28 = add nuw nsw i64 %24, 12
  %29 = getelementptr i8, i8* %7, i64 %28
  %30 = getelementptr i8, i8* %5, i64 %24
  %31 = icmp ult i8* %27, %30
  %32 = icmp ugt i8* %29, %5
  %33 = and i1 %31, %32
  br i1 %33, label %113, label %34

34:                                               ; preds = %26
  %35 = and i64 %24, 4294967264
  %36 = add nsw i64 %35, -32
  %37 = lshr exact i64 %36, 5
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp ult i64 %36, 96
  br i1 %40, label %92, label %41

41:                                               ; preds = %34
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %89, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %90, %43 ]
  %46 = getelementptr inbounds i8, i8* %5, i64 %44
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1, !alias.scope !2
  %49 = getelementptr inbounds i8, i8* %46, i64 16
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !2
  %52 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %44
  %53 = bitcast i8* %52 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %53, align 1, !alias.scope !5, !noalias !2
  %54 = getelementptr inbounds i8, i8* %52, i64 16
  %55 = bitcast i8* %54 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1, !alias.scope !5, !noalias !2
  %56 = or i64 %44, 32
  %57 = getelementptr inbounds i8, i8* %5, i64 %56
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !2
  %60 = getelementptr inbounds i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !2
  %63 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %56
  %64 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %64, align 1, !alias.scope !5, !noalias !2
  %65 = getelementptr inbounds i8, i8* %63, i64 16
  %66 = bitcast i8* %65 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1, !alias.scope !5, !noalias !2
  %67 = or i64 %44, 64
  %68 = getelementptr inbounds i8, i8* %5, i64 %67
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !2
  %71 = getelementptr inbounds i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !2
  %74 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %67
  %75 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %75, align 1, !alias.scope !5, !noalias !2
  %76 = getelementptr inbounds i8, i8* %74, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !5, !noalias !2
  %78 = or i64 %44, 96
  %79 = getelementptr inbounds i8, i8* %5, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !2
  %82 = getelementptr inbounds i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !2
  %85 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %78
  %86 = bitcast i8* %85 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %86, align 1, !alias.scope !5, !noalias !2
  %87 = getelementptr inbounds i8, i8* %85, i64 16
  %88 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1, !alias.scope !5, !noalias !2
  %89 = add i64 %44, 128
  %90 = add i64 %45, -4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %43, !llvm.loop !7

92:                                               ; preds = %43, %34
  %93 = phi i64 [ 0, %34 ], [ %89, %43 ]
  %94 = icmp eq i64 %39, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %108, %95 ], [ %93, %92 ]
  %97 = phi i64 [ %109, %95 ], [ %39, %92 ]
  %98 = getelementptr inbounds i8, i8* %5, i64 %96
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !2
  %101 = getelementptr inbounds i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !2
  %104 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %96
  %105 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %105, align 1, !alias.scope !5, !noalias !2
  %106 = getelementptr inbounds i8, i8* %104, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !5, !noalias !2
  %108 = add i64 %96, 32
  %109 = add i64 %97, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %95, !llvm.loop !9

111:                                              ; preds = %95, %92
  %112 = icmp eq i64 %35, %24
  br i1 %112, label %150, label %113

113:                                              ; preds = %111, %26, %19
  %114 = phi i64 [ 0, %26 ], [ 0, %19 ], [ %35, %111 ]
  %115 = xor i64 %114, -1
  %116 = add nsw i64 %115, %24
  %117 = and i64 %24, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %128, label %119

119:                                              ; preds = %113, %119
  %120 = phi i64 [ %125, %119 ], [ %114, %113 ]
  %121 = phi i64 [ %126, %119 ], [ %117, %113 ]
  %122 = getelementptr inbounds i8, i8* %5, i64 %120
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %120
  store i8 %123, i8* %124, align 1
  %125 = add nuw nsw i64 %120, 1
  %126 = add i64 %121, -1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %119, !llvm.loop !11

128:                                              ; preds = %119, %113
  %129 = phi i64 [ %114, %113 ], [ %125, %119 ]
  %130 = icmp ult i64 %116, 3
  br i1 %130, label %150, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %148, %131 ], [ %129, %128 ]
  %133 = getelementptr inbounds i8, i8* %5, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %132
  store i8 %134, i8* %135, align 1
  %136 = add nuw nsw i64 %132, 1
  %137 = getelementptr inbounds i8, i8* %5, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %136
  store i8 %138, i8* %139, align 1
  %140 = add nuw nsw i64 %132, 2
  %141 = getelementptr inbounds i8, i8* %5, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %140
  store i8 %142, i8* %143, align 1
  %144 = add nuw nsw i64 %132, 3
  %145 = getelementptr inbounds i8, i8* %5, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %144
  store i8 %146, i8* %147, align 1
  %148 = add nuw nsw i64 %132, 4
  %149 = icmp eq i64 %148, %24
  br i1 %149, label %150, label %131, !llvm.loop !12

150:                                              ; preds = %128, %131, %111
  %151 = tail call i32 @validate_layout(%struct.ChannelLayout* %20) #6
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %195, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 1, i32 0, i32 1
  %155 = bitcast i32* %154 to i8*
  %156 = tail call i32 @opus_decoder_get_size(i32 2) #6
  %157 = tail call i32 @opus_decoder_get_size(i32 1) #6
  %158 = load i32, i32* %23, align 4
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %153
  %161 = add i32 %156, 7
  %162 = and i32 %161, -8
  %163 = sext i32 %162 to i64
  br label %173

164:                                              ; preds = %179, %153
  %165 = phi i32 [ 0, %153 ], [ %181, %179 ]
  %166 = phi i8* [ %155, %153 ], [ %180, %179 ]
  %167 = load i32, i32* %22, align 4
  %168 = icmp slt i32 %165, %167
  br i1 %168, label %169, label %195

169:                                              ; preds = %164
  %170 = add i32 %157, 7
  %171 = and i32 %170, -8
  %172 = sext i32 %171 to i64
  br label %184

173:                                              ; preds = %160, %179
  %174 = phi i8* [ %155, %160 ], [ %180, %179 ]
  %175 = phi i32 [ 0, %160 ], [ %181, %179 ]
  %176 = bitcast i8* %174 to %struct.OpusDecoder*
  %177 = tail call i32 @opus_decoder_init(%struct.OpusDecoder* %176, i32 %1, i32 2) #6
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %195

179:                                              ; preds = %173
  %180 = getelementptr inbounds i8, i8* %174, i64 %163
  %181 = add nuw nsw i32 %175, 1
  %182 = load i32, i32* %23, align 4
  %183 = icmp slt i32 %181, %182
  br i1 %183, label %173, label %164

184:                                              ; preds = %169, %190
  %185 = phi i8* [ %166, %169 ], [ %191, %190 ]
  %186 = phi i32 [ %165, %169 ], [ %192, %190 ]
  %187 = bitcast i8* %185 to %struct.OpusDecoder*
  %188 = tail call i32 @opus_decoder_init(%struct.OpusDecoder* %187, i32 %1, i32 1) #6
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %195

190:                                              ; preds = %184
  %191 = getelementptr inbounds i8, i8* %185, i64 %172
  %192 = add nuw nsw i32 %186, 1
  %193 = load i32, i32* %22, align 4
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %184, label %195

195:                                              ; preds = %173, %184, %190, %164, %150, %6, %10
  %196 = phi i32 [ -1, %10 ], [ -1, %6 ], [ -1, %150 ], [ 0, %164 ], [ %188, %184 ], [ 0, %190 ], [ %177, %173 ]
  ret i32 %196
}

declare i32 @validate_layout(%struct.ChannelLayout*) local_unnamed_addr #2

declare i32 @opus_decoder_init(%struct.OpusDecoder*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.OpusMSDecoder* @opus_multistream_decoder_create(i32, i32, i32, i32, i8* nocapture readonly, i32*) local_unnamed_addr #0 {
  %7 = add i32 %1, -1
  %8 = icmp ugt i32 %7, 254
  br i1 %8, label %18, label %9

9:                                                ; preds = %6
  %10 = icmp slt i32 %2, %3
  %11 = icmp slt i32 %2, 1
  %12 = or i1 %11, %10
  %13 = icmp slt i32 %3, 0
  %14 = or i1 %13, %12
  %15 = sub nsw i32 255, %3
  %16 = icmp slt i32 %15, %2
  %17 = or i1 %16, %14
  br i1 %17, label %18, label %21

18:                                               ; preds = %9, %6
  %19 = icmp eq i32* %5, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %18
  store i32 -1, i32* %5, align 4
  br label %47

21:                                               ; preds = %9
  %22 = tail call i32 @opus_decoder_get_size(i32 2) #6
  %23 = tail call i32 @opus_decoder_get_size(i32 1) #6
  %24 = add i32 %22, 7
  %25 = and i32 %24, -8
  %26 = mul nsw i32 %25, %3
  %27 = add nsw i32 %26, 272
  %28 = sub nsw i32 %2, %3
  %29 = add i32 %23, 7
  %30 = and i32 %29, -8
  %31 = mul nsw i32 %30, %28
  %32 = add nsw i32 %27, %31
  %33 = sext i32 %32 to i64
  %34 = tail call noalias i8* @malloc(i64 %33) #6
  %35 = bitcast i8* %34 to %struct.OpusMSDecoder*
  %36 = icmp eq i8* %34, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %21
  %38 = icmp eq i32* %5, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  store i32 -7, i32* %5, align 4
  br label %47

40:                                               ; preds = %21
  %41 = tail call i32 @opus_multistream_decoder_init(%struct.OpusMSDecoder* nonnull %35, i32 %0, i32 %1, i32 %2, i32 %3, i8* %4)
  %42 = icmp eq i32* %5, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  store i32 %41, i32* %5, align 4
  br label %44

44:                                               ; preds = %40, %43
  %45 = icmp eq i32 %41, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  tail call void @free(i8* nonnull %34) #6
  br label %47

47:                                               ; preds = %46, %44, %39, %37, %20, %18
  %48 = phi %struct.OpusMSDecoder* [ null, %18 ], [ null, %20 ], [ null, %37 ], [ null, %39 ], [ null, %46 ], [ %35, %44 ]
  ret %struct.OpusMSDecoder* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decode_native(%struct.OpusMSDecoder*, i8*, i32, i8*, void (i8*, i32, i32, float*, i32, i32, i8*)* nocapture, i32, i32, i32, i8*) local_unnamed_addr #0 {
  %10 = alloca i8, align 1
  %11 = alloca [48 x i16], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 -1431655766, i32* %13, align 4
  %16 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0
  %17 = tail call i32 @validate_layout(%struct.ChannelLayout* %16) #6
  %18 = icmp slt i32 %5, 1
  br i1 %18, label %175, label %19

19:                                               ; preds = %9
  %20 = call i32 (%struct.OpusMSDecoder*, i32, ...) @opus_multistream_decoder_ctl(%struct.OpusMSDecoder* %0, i32 4029, i32* nonnull %13)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  call void @celt_fatal(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 206) #10
  unreachable

23:                                               ; preds = %19
  %24 = load i32, i32* %13, align 4
  %25 = sdiv i32 %24, 25
  %26 = mul nsw i32 %25, 3
  %27 = icmp sgt i32 %26, %5
  %28 = select i1 %27, i32 %5, i32 %26
  %29 = shl nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = shl nsw i64 %30, 2
  %32 = alloca float, i64 %30, align 16
  %33 = bitcast float* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 %31, i1 false)
  %34 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 1, i32 0, i32 1
  %35 = bitcast i32* %34 to i8*
  %36 = call i32 @opus_decoder_get_size(i32 2) #6
  %37 = call i32 @opus_decoder_get_size(i32 1) #6
  %38 = icmp eq i32 %2, 0
  %39 = icmp slt i32 %2, 0
  br i1 %39, label %175, label %40

40:                                               ; preds = %23
  br i1 %38, label %84, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = shl i32 %43, 1
  %45 = add nsw i32 %44, -1
  %46 = icmp sgt i32 %45, %2
  br i1 %46, label %175, label %47

47:                                               ; preds = %41
  %48 = load i32, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #6
  store i8 -86, i8* %10, align 1
  %49 = bitcast [48 x i16]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %49) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 96, i1 false) #6
  %50 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #6
  store i32 -1431655766, i32* %12, align 4
  %51 = add nsw i32 %43, -1
  %52 = icmp sgt i32 %43, 0
  br i1 %52, label %53, label %79

53:                                               ; preds = %47
  %54 = getelementptr inbounds [48 x i16], [48 x i16]* %11, i64 0, i64 0
  br label %55

55:                                               ; preds = %72, %53
  %56 = phi i32 [ 0, %53 ], [ %68, %72 ]
  %57 = phi i32 [ 0, %53 ], [ %77, %72 ]
  %58 = phi i8* [ %1, %53 ], [ %75, %72 ]
  %59 = phi i32 [ %2, %53 ], [ %76, %72 ]
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %79, label %61

61:                                               ; preds = %55
  %62 = icmp ne i32 %57, %51
  %63 = zext i1 %62 to i32
  %64 = call i32 @opus_packet_parse_impl(i8* %58, i32 %59, i32 %63, i8* nonnull %10, i8** null, i16* nonnull %54, i32* null, i32* nonnull %12) #6
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = load i32, i32* %12, align 4
  %68 = call i32 @opus_packet_get_nb_samples(i8* %58, i32 %67, i32 %48) #6
  %69 = icmp eq i32 %57, 0
  %70 = icmp eq i32 %56, %68
  %71 = or i1 %69, %70
  br i1 %71, label %72, label %79

72:                                               ; preds = %66
  %73 = load i32, i32* %12, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %58, i64 %74
  %76 = sub nsw i32 %59, %73
  %77 = add nuw nsw i32 %57, 1
  %78 = icmp eq i32 %77, %43
  br i1 %78, label %79, label %55

79:                                               ; preds = %55, %61, %66, %72, %47
  %80 = phi i32 [ 0, %47 ], [ %68, %72 ], [ -4, %55 ], [ %64, %61 ], [ -4, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %49) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #6
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %175, label %82

82:                                               ; preds = %79
  %83 = icmp sgt i32 %80, %28
  br i1 %83, label %175, label %84

84:                                               ; preds = %82, %40
  %85 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast i32* %14 to i8*
  %90 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 2
  %91 = xor i1 %38, true
  %92 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds float, float* %32, i64 1
  br label %99

94:                                               ; preds = %157, %84
  %95 = phi i32 [ %28, %84 ], [ %120, %157 ]
  %96 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %161, label %175

99:                                               ; preds = %88, %157
  %100 = phi i32 [ %86, %88 ], [ %159, %157 ]
  %101 = phi i8* [ %35, %88 ], [ %112, %157 ]
  %102 = phi i32 [ 0, %88 ], [ %158, %157 ]
  %103 = phi i8* [ %1, %88 ], [ %126, %157 ]
  %104 = phi i32 [ %2, %88 ], [ %125, %157 ]
  %105 = phi i32 [ %28, %88 ], [ %120, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #6
  store i32 -1431655766, i32* %14, align 4
  %106 = load i32, i32* %90, align 4
  %107 = icmp slt i32 %102, %106
  %108 = select i1 %107, i32 %36, i32 %37
  %109 = add i32 %108, 7
  %110 = and i32 %109, -8
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %101, i64 %111
  %113 = icmp slt i32 %104, 1
  %114 = and i1 %113, %91
  br i1 %114, label %155, label %115

115:                                              ; preds = %99
  %116 = bitcast i8* %101 to %struct.OpusDecoder*
  store i32 0, i32* %14, align 4
  %117 = add nsw i32 %100, -1
  %118 = icmp ne i32 %102, %117
  %119 = zext i1 %118 to i32
  %120 = call i32 @opus_decode_native(%struct.OpusDecoder* %116, i8* %103, i32 %104, float* nonnull %32, i32 %105, i32 %6, i32 %119, i32* nonnull %14, i32 %7) #6
  %121 = load i32, i32* %14, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %103, i64 %122
  %124 = select i1 %38, i32 0, i32 %121
  %125 = sub nsw i32 %104, %124
  %126 = select i1 %38, i8* %103, i8* %123
  %127 = icmp slt i32 %120, 1
  br i1 %127, label %155, label %128

128:                                              ; preds = %115
  %129 = load i32, i32* %90, align 4
  %130 = icmp slt i32 %102, %129
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = call i32 @get_mono_channel(%struct.ChannelLayout* %16, i32 %102, i32 -1) #6
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %157, label %150

134:                                              ; preds = %128
  %135 = call i32 @get_left_channel(%struct.ChannelLayout* %16, i32 %102, i32 -1) #6
  %136 = icmp eq i32 %135, -1
  br i1 %136, label %137, label %140

137:                                              ; preds = %140, %134
  %138 = call i32 @get_right_channel(%struct.ChannelLayout* %16, i32 %102, i32 -1) #6
  %139 = icmp eq i32 %138, -1
  br i1 %139, label %157, label %145

140:                                              ; preds = %134, %140
  %141 = phi i32 [ %143, %140 ], [ %135, %134 ]
  %142 = load i32, i32* %92, align 4
  call void %4(i8* %3, i32 %142, i32 %141, float* nonnull %32, i32 2, i32 %120, i8* %8) #6
  %143 = call i32 @get_left_channel(%struct.ChannelLayout* %16, i32 %102, i32 %141) #6
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %137, label %140

145:                                              ; preds = %137, %145
  %146 = phi i32 [ %148, %145 ], [ %138, %137 ]
  %147 = load i32, i32* %92, align 4
  call void %4(i8* %3, i32 %147, i32 %146, float* %93, i32 2, i32 %120, i8* %8) #6
  %148 = call i32 @get_right_channel(%struct.ChannelLayout* %16, i32 %102, i32 %146) #6
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %157, label %145

150:                                              ; preds = %131, %150
  %151 = phi i32 [ %153, %150 ], [ %132, %131 ]
  %152 = load i32, i32* %92, align 4
  call void %4(i8* %3, i32 %152, i32 %151, float* nonnull %32, i32 1, i32 %120, i8* %8) #6
  %153 = call i32 @get_mono_channel(%struct.ChannelLayout* %16, i32 %102, i32 %151) #6
  %154 = icmp eq i32 %153, -1
  br i1 %154, label %157, label %150

155:                                              ; preds = %115, %99
  %156 = phi i32 [ -3, %99 ], [ %120, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #6
  br label %175

157:                                              ; preds = %150, %145, %131, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #6
  %158 = add nuw nsw i32 %102, 1
  %159 = load i32, i32* %85, align 4
  %160 = icmp slt i32 %158, %159
  br i1 %160, label %99, label %94

161:                                              ; preds = %94, %170
  %162 = phi i32 [ %171, %170 ], [ %97, %94 ]
  %163 = phi i64 [ %172, %170 ], [ 0, %94 ]
  %164 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 3, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, -1
  br i1 %166, label %167, label %170

167:                                              ; preds = %161
  %168 = trunc i64 %163 to i32
  call void %4(i8* %3, i32 %162, i32 %168, float* null, i32 0, i32 %95, i8* %8) #6
  %169 = load i32, i32* %96, align 4
  br label %170

170:                                              ; preds = %161, %167
  %171 = phi i32 [ %162, %161 ], [ %169, %167 ]
  %172 = add nuw nsw i64 %163, 1
  %173 = sext i32 %171 to i64
  %174 = icmp slt i64 %172, %173
  br i1 %174, label %161, label %175

175:                                              ; preds = %170, %94, %82, %79, %155, %41, %23, %9
  %176 = phi i32 [ %156, %155 ], [ -2, %82 ], [ -1, %9 ], [ -1, %23 ], [ -4, %41 ], [ %80, %79 ], [ %95, %94 ], [ %95, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  ret i32 %176
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decoder_ctl(%struct.OpusMSDecoder*, i32, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = call i32 @opus_multistream_decoder_ctl_va_list(%struct.OpusMSDecoder* %0, i32 %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  ret i32 %7
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @opus_decode_native(%struct.OpusDecoder*, i8*, i32, float*, i32, i32, i32, i32*, i32) local_unnamed_addr #2

declare i32 @get_left_channel(%struct.ChannelLayout*, i32, i32) local_unnamed_addr #2

declare i32 @get_right_channel(%struct.ChannelLayout*, i32, i32) local_unnamed_addr #2

declare i32 @get_mono_channel(%struct.ChannelLayout*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decode(%struct.OpusMSDecoder*, i8*, i32, i16*, i32, i32) local_unnamed_addr #0 {
  %7 = bitcast i16* %3 to i8*
  %8 = tail call i32 @opus_multistream_decode_native(%struct.OpusMSDecoder* %0, i8* %1, i32 %2, i8* %7, void (i8*, i32, i32, float*, i32, i32, i8*)* nonnull @opus_copy_channel_out_short, i32 %4, i32 %5, i32 1, i8* null)
  ret i32 %8
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @opus_copy_channel_out_short(i8* nocapture, i32, i32, float* readonly, i32, i32, i8* nocapture readnone) #4 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp eq float* %3, null
  %10 = icmp sgt i32 %5, 0
  br i1 %9, label %17, label %11

11:                                               ; preds = %7
  br i1 %10, label %12, label %78

12:                                               ; preds = %11
  %13 = sext i32 %1 to i64
  %14 = sext i32 %2 to i64
  %15 = sext i32 %4 to i64
  %16 = zext i32 %5 to i64
  br label %27

17:                                               ; preds = %7
  br i1 %10, label %18, label %78

18:                                               ; preds = %17
  %19 = sext i32 %1 to i64
  %20 = sext i32 %2 to i64
  %21 = zext i32 %5 to i64
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %66, label %25

25:                                               ; preds = %18
  %26 = sub nsw i64 %21, %23
  br label %45

27:                                               ; preds = %27, %12
  %28 = phi i64 [ 0, %12 ], [ %43, %27 ]
  %29 = mul nsw i64 %28, %15
  %30 = getelementptr inbounds float, float* %3, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fmul float %31, 3.276800e+04
  %33 = fcmp ogt float %32, -3.276800e+04
  %34 = select i1 %33, float %32, float -3.276800e+04
  %35 = fcmp olt float %34, 3.276700e+04
  %36 = select i1 %35, float %34, float 3.276700e+04
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = tail call i32 @llvm.x86.sse.cvtss2si(<4 x float> %37) #6
  %39 = trunc i32 %38 to i16
  %40 = mul nsw i64 %28, %13
  %41 = add nsw i64 %40, %14
  %42 = getelementptr inbounds i16, i16* %8, i64 %41
  store i16 %39, i16* %42, align 2
  %43 = add nuw nsw i64 %28, 1
  %44 = icmp eq i64 %43, %16
  br i1 %44, label %78, label %27

45:                                               ; preds = %45, %25
  %46 = phi i64 [ 0, %25 ], [ %63, %45 ]
  %47 = phi i64 [ %26, %25 ], [ %64, %45 ]
  %48 = mul nsw i64 %46, %19
  %49 = add nsw i64 %48, %20
  %50 = getelementptr inbounds i16, i16* %8, i64 %49
  store i16 0, i16* %50, align 2
  %51 = or i64 %46, 1
  %52 = mul nsw i64 %51, %19
  %53 = add nsw i64 %52, %20
  %54 = getelementptr inbounds i16, i16* %8, i64 %53
  store i16 0, i16* %54, align 2
  %55 = or i64 %46, 2
  %56 = mul nsw i64 %55, %19
  %57 = add nsw i64 %56, %20
  %58 = getelementptr inbounds i16, i16* %8, i64 %57
  store i16 0, i16* %58, align 2
  %59 = or i64 %46, 3
  %60 = mul nsw i64 %59, %19
  %61 = add nsw i64 %60, %20
  %62 = getelementptr inbounds i16, i16* %8, i64 %61
  store i16 0, i16* %62, align 2
  %63 = add nuw nsw i64 %46, 4
  %64 = add i64 %47, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %45

66:                                               ; preds = %45, %18
  %67 = phi i64 [ 0, %18 ], [ %63, %45 ]
  %68 = icmp eq i64 %23, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %75, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %76, %69 ], [ %23, %66 ]
  %72 = mul nsw i64 %70, %19
  %73 = add nsw i64 %72, %20
  %74 = getelementptr inbounds i16, i16* %8, i64 %73
  store i16 0, i16* %74, align 2
  %75 = add nuw nsw i64 %70, 1
  %76 = add i64 %71, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %69, !llvm.loop !13

78:                                               ; preds = %27, %66, %69, %11, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decode_float(%struct.OpusMSDecoder*, i8*, i32, float*, i32, i32) local_unnamed_addr #0 {
  %7 = bitcast float* %3 to i8*
  %8 = tail call i32 @opus_multistream_decode_native(%struct.OpusMSDecoder* %0, i8* %1, i32 %2, i8* %7, void (i8*, i32, i32, float*, i32, i32, i8*)* nonnull @opus_copy_channel_out_float, i32 %4, i32 %5, i32 0, i8* null)
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @opus_copy_channel_out_float(i8* nocapture, i32, i32, float* readonly, i32, i32, i8* nocapture readnone) #5 {
  %8 = bitcast i8* %0 to float*
  %9 = icmp eq float* %3, null
  %10 = icmp sgt i32 %5, 0
  br i1 %9, label %22, label %11

11:                                               ; preds = %7
  br i1 %10, label %12, label %123

12:                                               ; preds = %11
  %13 = sext i32 %1 to i64
  %14 = sext i32 %2 to i64
  %15 = sext i32 %4 to i64
  %16 = zext i32 %5 to i64
  %17 = add nsw i64 %16, -1
  %18 = and i64 %16, 3
  %19 = icmp ult i64 %17, 3
  br i1 %19, label %106, label %20

20:                                               ; preds = %12
  %21 = sub nsw i64 %16, %18
  br label %32

22:                                               ; preds = %7
  br i1 %10, label %23, label %123

23:                                               ; preds = %22
  %24 = sext i32 %1 to i64
  %25 = sext i32 %2 to i64
  %26 = zext i32 %5 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %94, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %26, %28
  br label %73

32:                                               ; preds = %32, %20
  %33 = phi i64 [ 0, %20 ], [ %70, %32 ]
  %34 = phi i64 [ %21, %20 ], [ %71, %32 ]
  %35 = mul nsw i64 %33, %15
  %36 = getelementptr inbounds float, float* %3, i64 %35
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = mul nsw i64 %33, %13
  %40 = add nsw i64 %39, %14
  %41 = getelementptr inbounds float, float* %8, i64 %40
  %42 = bitcast float* %41 to i32*
  store i32 %38, i32* %42, align 4
  %43 = or i64 %33, 1
  %44 = mul nsw i64 %43, %15
  %45 = getelementptr inbounds float, float* %3, i64 %44
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = mul nsw i64 %43, %13
  %49 = add nsw i64 %48, %14
  %50 = getelementptr inbounds float, float* %8, i64 %49
  %51 = bitcast float* %50 to i32*
  store i32 %47, i32* %51, align 4
  %52 = or i64 %33, 2
  %53 = mul nsw i64 %52, %15
  %54 = getelementptr inbounds float, float* %3, i64 %53
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = mul nsw i64 %52, %13
  %58 = add nsw i64 %57, %14
  %59 = getelementptr inbounds float, float* %8, i64 %58
  %60 = bitcast float* %59 to i32*
  store i32 %56, i32* %60, align 4
  %61 = or i64 %33, 3
  %62 = mul nsw i64 %61, %15
  %63 = getelementptr inbounds float, float* %3, i64 %62
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = mul nsw i64 %61, %13
  %67 = add nsw i64 %66, %14
  %68 = getelementptr inbounds float, float* %8, i64 %67
  %69 = bitcast float* %68 to i32*
  store i32 %65, i32* %69, align 4
  %70 = add nuw nsw i64 %33, 4
  %71 = add i64 %34, -4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %106, label %32

73:                                               ; preds = %73, %30
  %74 = phi i64 [ 0, %30 ], [ %91, %73 ]
  %75 = phi i64 [ %31, %30 ], [ %92, %73 ]
  %76 = mul nsw i64 %74, %24
  %77 = add nsw i64 %76, %25
  %78 = getelementptr inbounds float, float* %8, i64 %77
  store float 0.000000e+00, float* %78, align 4
  %79 = or i64 %74, 1
  %80 = mul nsw i64 %79, %24
  %81 = add nsw i64 %80, %25
  %82 = getelementptr inbounds float, float* %8, i64 %81
  store float 0.000000e+00, float* %82, align 4
  %83 = or i64 %74, 2
  %84 = mul nsw i64 %83, %24
  %85 = add nsw i64 %84, %25
  %86 = getelementptr inbounds float, float* %8, i64 %85
  store float 0.000000e+00, float* %86, align 4
  %87 = or i64 %74, 3
  %88 = mul nsw i64 %87, %24
  %89 = add nsw i64 %88, %25
  %90 = getelementptr inbounds float, float* %8, i64 %89
  store float 0.000000e+00, float* %90, align 4
  %91 = add nuw nsw i64 %74, 4
  %92 = add i64 %75, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %73

94:                                               ; preds = %73, %23
  %95 = phi i64 [ 0, %23 ], [ %91, %73 ]
  %96 = icmp eq i64 %28, 0
  br i1 %96, label %123, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %103, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %104, %97 ], [ %28, %94 ]
  %100 = mul nsw i64 %98, %24
  %101 = add nsw i64 %100, %25
  %102 = getelementptr inbounds float, float* %8, i64 %101
  store float 0.000000e+00, float* %102, align 4
  %103 = add nuw nsw i64 %98, 1
  %104 = add i64 %99, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %123, label %97, !llvm.loop !14

106:                                              ; preds = %32, %12
  %107 = phi i64 [ 0, %12 ], [ %70, %32 ]
  %108 = icmp eq i64 %18, 0
  br i1 %108, label %123, label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %120, %109 ], [ %107, %106 ]
  %111 = phi i64 [ %121, %109 ], [ %18, %106 ]
  %112 = mul nsw i64 %110, %15
  %113 = getelementptr inbounds float, float* %3, i64 %112
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = mul nsw i64 %110, %13
  %117 = add nsw i64 %116, %14
  %118 = getelementptr inbounds float, float* %8, i64 %117
  %119 = bitcast float* %118 to i32*
  store i32 %115, i32* %119, align 4
  %120 = add nuw nsw i64 %110, 1
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %109, !llvm.loop !15

123:                                              ; preds = %106, %109, %94, %97, %11, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_multistream_decoder_ctl_va_list(%struct.OpusMSDecoder*, i32, %struct.__va_list_tag* nocapture) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i32 @opus_decoder_get_size(i32 2) #6
  %6 = tail call i32 @opus_decoder_get_size(i32 1) #6
  %7 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 1, i32 0, i32 1
  %8 = bitcast i32* %7 to i8*
  switch i32 %1, label %247 [
    i32 4009, label %15
    i32 4029, label %15
    i32 4045, label %15
    i32 4039, label %15
    i32 4047, label %15
    i32 4031, label %35
    i32 4028, label %9
    i32 5122, label %101
    i32 4034, label %207
    i32 4046, label %207
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %247

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 2
  br label %84

15:                                               ; preds = %3, %3, %3, %3, %3
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 41
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = add nuw nsw i32 %17, 8
  store i32 %24, i32* %16, align 8
  br label %29

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr i8, i8* %27, i64 8
  store i8* %28, i8** %26, align 8
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i8* [ %23, %19 ], [ %27, %25 ]
  %31 = bitcast i8* %30 to i32**
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast i32* %7 to %struct.OpusDecoder*
  %34 = tail call i32 (%struct.OpusDecoder*, i32, ...) @opus_decoder_ctl(%struct.OpusDecoder* %33, i32 %1, i32* %32) #6
  br label %247

35:                                               ; preds = %3
  %36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %37, 41
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %41 = load i8*, i8** %40, align 8
  %42 = sext i32 %37 to i64
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = add nuw nsw i32 %37, 8
  store i32 %44, i32* %36, align 8
  br label %49

45:                                               ; preds = %35
  %46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr i8, i8* %47, i64 8
  store i8* %48, i8** %46, align 8
  br label %49

49:                                               ; preds = %45, %39
  %50 = phi i8* [ %43, %39 ], [ %47, %45 ]
  %51 = bitcast i8* %50 to i32**
  %52 = load i32*, i32** %51, align 8
  %53 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #6
  store i32 -1431655766, i32* %4, align 4
  %54 = icmp eq i32* %52, null
  br i1 %54, label %83, label %55

55:                                               ; preds = %49
  store i32 0, i32* %52, align 4
  %56 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %81

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 2
  br label %61

61:                                               ; preds = %59, %68
  %62 = phi i32 [ 0, %59 ], [ %78, %68 ]
  %63 = phi i8* [ %8, %59 ], [ %74, %68 ]
  %64 = bitcast i8* %63 to %struct.OpusDecoder*
  %65 = load i32, i32* %60, align 4
  %66 = call i32 (%struct.OpusDecoder*, i32, ...) @opus_decoder_ctl(%struct.OpusDecoder* %64, i32 4031, i32* nonnull %4) #6
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %61
  %69 = icmp slt i32 %62, %65
  %70 = select i1 %69, i32 %5, i32 %6
  %71 = add i32 %70, 7
  %72 = and i32 %71, -8
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %63, i64 %73
  %75 = load i32, i32* %4, align 4
  %76 = load i32, i32* %52, align 4
  %77 = xor i32 %76, %75
  store i32 %77, i32* %52, align 4
  %78 = add nuw nsw i32 %62, 1
  %79 = load i32, i32* %56, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %61, label %81

81:                                               ; preds = %68, %61, %55
  %82 = phi i32 [ 0, %55 ], [ %66, %61 ], [ 0, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #6
  br label %247

83:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #6
  br label %247

84:                                               ; preds = %13, %91
  %85 = phi i32 [ 0, %13 ], [ %98, %91 ]
  %86 = phi i8* [ %8, %13 ], [ %97, %91 ]
  %87 = bitcast i8* %86 to %struct.OpusDecoder*
  %88 = load i32, i32* %14, align 4
  %89 = tail call i32 (%struct.OpusDecoder*, i32, ...) @opus_decoder_ctl(%struct.OpusDecoder* %87, i32 4028) #6
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %247

91:                                               ; preds = %84
  %92 = icmp slt i32 %85, %88
  %93 = select i1 %92, i32 %5, i32 %6
  %94 = add i32 %93, 7
  %95 = and i32 %94, -8
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = add nuw nsw i32 %85, 1
  %99 = load i32, i32* %10, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %84, label %247

101:                                              ; preds = %3
  %102 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = icmp ult i32 %103, 41
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %107 = load i8*, i8** %106, align 8
  %108 = sext i32 %103 to i64
  %109 = getelementptr i8, i8* %107, i64 %108
  %110 = add nuw nsw i32 %103, 8
  store i32 %110, i32* %102, align 8
  br label %115

111:                                              ; preds = %101
  %112 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr i8, i8* %113, i64 8
  store i8* %114, i8** %112, align 8
  br label %115

115:                                              ; preds = %111, %105
  %116 = phi i32 [ %110, %105 ], [ %103, %111 ]
  %117 = phi i8* [ %109, %105 ], [ %113, %111 ]
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %119, 0
  br i1 %120, label %247, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %119, %123
  br i1 %124, label %125, label %247

125:                                              ; preds = %121
  %126 = icmp ult i32 %116, 41
  br i1 %126, label %127, label %133

127:                                              ; preds = %125
  %128 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %129 = load i8*, i8** %128, align 8
  %130 = sext i32 %116 to i64
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = add nuw nsw i32 %116, 8
  store i32 %132, i32* %102, align 8
  br label %137

133:                                              ; preds = %125
  %134 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr i8, i8* %135, i64 8
  store i8* %136, i8** %134, align 8
  br label %137

137:                                              ; preds = %133, %127
  %138 = phi i8* [ %131, %127 ], [ %135, %133 ]
  %139 = bitcast i8* %138 to %struct.OpusDecoder***
  %140 = load %struct.OpusDecoder**, %struct.OpusDecoder*** %139, align 8
  %141 = icmp eq %struct.OpusDecoder** %140, null
  br i1 %141, label %247, label %142

142:                                              ; preds = %137
  %143 = icmp sgt i32 %119, 0
  br i1 %143, label %144, label %204

144:                                              ; preds = %142
  %145 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %119, -1
  %148 = and i32 %119, 3
  %149 = icmp ult i32 %147, 3
  br i1 %149, label %186, label %150

150:                                              ; preds = %144
  %151 = sub i32 %119, %148
  br label %152

152:                                              ; preds = %152, %150
  %153 = phi i32 [ 0, %150 ], [ %183, %152 ]
  %154 = phi i8* [ %8, %150 ], [ %182, %152 ]
  %155 = phi i32 [ %151, %150 ], [ %184, %152 ]
  %156 = icmp slt i32 %153, %146
  %157 = select i1 %156, i32 %5, i32 %6
  %158 = add i32 %157, 7
  %159 = and i32 %158, -8
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %154, i64 %160
  %162 = or i32 %153, 1
  %163 = icmp slt i32 %162, %146
  %164 = select i1 %163, i32 %5, i32 %6
  %165 = add i32 %164, 7
  %166 = and i32 %165, -8
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %161, i64 %167
  %169 = or i32 %153, 2
  %170 = icmp slt i32 %169, %146
  %171 = select i1 %170, i32 %5, i32 %6
  %172 = add i32 %171, 7
  %173 = and i32 %172, -8
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %168, i64 %174
  %176 = or i32 %153, 3
  %177 = icmp slt i32 %176, %146
  %178 = select i1 %177, i32 %5, i32 %6
  %179 = add i32 %178, 7
  %180 = and i32 %179, -8
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %175, i64 %181
  %183 = add nuw nsw i32 %153, 4
  %184 = add i32 %155, -4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %152

186:                                              ; preds = %152, %144
  %187 = phi i8* [ undef, %144 ], [ %182, %152 ]
  %188 = phi i32 [ 0, %144 ], [ %183, %152 ]
  %189 = phi i8* [ %8, %144 ], [ %182, %152 ]
  %190 = icmp eq i32 %148, 0
  br i1 %190, label %204, label %191

191:                                              ; preds = %186, %191
  %192 = phi i32 [ %201, %191 ], [ %188, %186 ]
  %193 = phi i8* [ %200, %191 ], [ %189, %186 ]
  %194 = phi i32 [ %202, %191 ], [ %148, %186 ]
  %195 = icmp slt i32 %192, %146
  %196 = select i1 %195, i32 %5, i32 %6
  %197 = add i32 %196, 7
  %198 = and i32 %197, -8
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %193, i64 %199
  %201 = add nuw nsw i32 %192, 1
  %202 = add i32 %194, -1
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %191, !llvm.loop !16

204:                                              ; preds = %186, %191, %142
  %205 = phi i8* [ %8, %142 ], [ %187, %186 ], [ %200, %191 ]
  %206 = bitcast %struct.OpusDecoder** %140 to i8**
  store i8* %205, i8** %206, align 8
  br label %247

207:                                              ; preds = %3, %3
  %208 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp ult i32 %209, 41
  br i1 %210, label %211, label %217

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %213 = load i8*, i8** %212, align 8
  %214 = sext i32 %209 to i64
  %215 = getelementptr i8, i8* %213, i64 %214
  %216 = add nuw nsw i32 %209, 8
  store i32 %216, i32* %208, align 8
  br label %221

217:                                              ; preds = %207
  %218 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr i8, i8* %219, i64 8
  store i8* %220, i8** %218, align 8
  br label %221

221:                                              ; preds = %217, %211
  %222 = phi i8* [ %215, %211 ], [ %219, %217 ]
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %228, label %247

228:                                              ; preds = %221
  %229 = getelementptr inbounds %struct.OpusMSDecoder, %struct.OpusMSDecoder* %0, i64 0, i32 0, i32 2
  br label %230

230:                                              ; preds = %228, %237
  %231 = phi i32 [ 0, %228 ], [ %244, %237 ]
  %232 = phi i8* [ %8, %228 ], [ %243, %237 ]
  %233 = bitcast i8* %232 to %struct.OpusDecoder*
  %234 = load i32, i32* %229, align 4
  %235 = tail call i32 (%struct.OpusDecoder*, i32, ...) @opus_decoder_ctl(%struct.OpusDecoder* %233, i32 %1, i32 %224) #6
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %247

237:                                              ; preds = %230
  %238 = icmp slt i32 %231, %234
  %239 = select i1 %238, i32 %5, i32 %6
  %240 = add i32 %239, 7
  %241 = and i32 %240, -8
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %232, i64 %242
  %244 = add nuw nsw i32 %231, 1
  %245 = load i32, i32* %225, align 4
  %246 = icmp slt i32 %244, %245
  br i1 %246, label %230, label %247

247:                                              ; preds = %237, %230, %91, %84, %221, %9, %137, %115, %121, %83, %204, %81, %29, %3
  %248 = phi i32 [ 0, %204 ], [ %34, %29 ], [ -5, %3 ], [ %82, %81 ], [ -1, %83 ], [ -1, %121 ], [ -1, %115 ], [ -1, %137 ], [ 0, %9 ], [ 0, %221 ], [ 0, %91 ], [ %89, %84 ], [ 0, %237 ], [ %235, %230 ]
  ret i32 %248
}

declare i32 @opus_decoder_ctl(%struct.OpusDecoder*, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @opus_multistream_decoder_destroy(%struct.OpusMSDecoder* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.OpusMSDecoder* %0 to i8*
  tail call void @free(i8* %2) #6
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare i32 @opus_packet_parse_impl(i8*, i32, i32, i8*, i8**, i16*, i32*, i32*) local_unnamed_addr #2

declare i32 @opus_packet_get_nb_samples(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32 @llvm.x86.sse.cvtss2si(<4 x float>) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
!16 = distinct !{!16, !10}
