; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_annot.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_annot.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { float*, float*, %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { float* }
%class.CPDF_Annot = type <{ %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", i32, [4 x i8], %"class.std::__1::map.143", %"class.fxcrt::UnownedPtr.154", i8, i8, i8, [5 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.327" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.338", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.345", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%"class.std::__1::map.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::UnownedPtr.154" = type { %class.CPDF_Annot* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.33", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::vector.129", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.137" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map.22", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.13" }
%"class.std::__1::__tree.13" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.40", %"class.fxcrt::UnownedPtr.46", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.47", i64, %"class.fxcrt::RetainPtr.62", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.74", %"class.std::__1::map.80", %"class.std::__1::set.89", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.46" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr", %"class.std::__1::map.50" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { i32*, i32*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.136" }
%"class.fxcrt::UnownedPtr.136" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%class.CPDF_Boolean = type <{ %class.CPDF_Object, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.238" }
%"struct.std::__1::pair.238" = type { %class.CPDF_Stream*, %"class.std::__1::unique_ptr.239" }
%class.CPDF_Stream = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %class.CPDF_Form* }
%class.CPDF_Form = type { %class.CPDF_PageObjectHolder, %"class.CPDF_Font::FormIface", %"class.std::__1::set.210", %"class.fxcrt::RetainPtr.220" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::map.155", %"class.std::__1::map.166", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.200" }
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.166" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.196" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.190"**, %"class.std::__1::unique_ptr.190"**, %"class.std::__1::unique_ptr.190"**, %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.353" }
%"class.fxcrt::RetainPtr.353" = type { %"class.std::__1::unique_ptr.354" }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.357", %"class.std::__1::vector.365" }
%"class.std::__1::vector.357" = type { %"class.std::__1::__vector_base.358" }
%"class.std::__1::__vector_base.358" = type { %"struct.std::__1::pair.359"*, %"struct.std::__1::pair.359"*, %"class.std::__1::__compressed_pair.360" }
%"struct.std::__1::pair.359" = type opaque
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.std::__1::pair.359"* }
%"class.std::__1::vector.365" = type { %"class.std::__1::__vector_base.366" }
%"class.std::__1::__vector_base.366" = type { %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"*, %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::unique_ptr.367" = type opaque
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::unique_ptr.367"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.375" }
%"class.fxcrt::SharedCopyOnWrite.375" = type { %"class.fxcrt::RetainPtr.376" }
%"class.fxcrt::RetainPtr.376" = type { %"class.std::__1::unique_ptr.377" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.313" }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.382" }
%"class.fxcrt::SharedCopyOnWrite.382" = type { %"class.fxcrt::RetainPtr.383" }
%"class.fxcrt::RetainPtr.383" = type { %"class.std::__1::unique_ptr.384" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.313", %"class.std::__1::unique_ptr.387", %"class.fxcrt::RetainPtr.393" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.393" = type { %"class.std::__1::unique_ptr.394" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.401" }
%"class.fxcrt::SharedCopyOnWrite.401" = type { %"class.fxcrt::RetainPtr.402" }
%"class.fxcrt::RetainPtr.402" = type { %"class.std::__1::unique_ptr.403" }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.406", %"class.fxcrt::UnownedPtr.494", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.406" = type { %"class.std::__1::unique_ptr.407" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.459", %"class.fxcrt::RetainPtr.467", %"class.fxcrt::RetainPtr", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.486", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.410", %"class.std::__1::unique_ptr.416", %"class.fxcrt::RetainPtr.422", %"class.fxcrt::RetainPtr.438", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::vector.454", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.410" = type { %"class.std::__1::unique_ptr.411" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.422" = type { %"class.std::__1::unique_ptr.423" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.426", %"class.fxcrt::RetainPtr.430" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.430" = type { %"class.std::__1::unique_ptr.431" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.438" = type { %"class.std::__1::unique_ptr.439" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { i8* }
%"class.std::__1::vector.454" = type { %"class.std::__1::__vector_base.455" }
%"class.std::__1::__vector_base.455" = type { i8*, i8*, %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.458", i64 }
%"class.fxcrt::UnownedPtr.458" = type { i8* }
%"class.std::__1::vector.459" = type { %"class.std::__1::__vector_base.460" }
%"class.std::__1::__vector_base.460" = type { %"class.std::__1::unique_ptr.461"*, %"class.std::__1::unique_ptr.461"*, %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::unique_ptr.461" = type opaque
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.std::__1::unique_ptr.461"* }
%"class.fxcrt::RetainPtr.467" = type { %"class.std::__1::unique_ptr.468" }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned.471", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.472", %"class.fxcrt::RetainPtr.478" }
%"class.fxcrt::MaybeOwned.471" = type { %"class.std::__1::unique_ptr.450", %"class.fxcrt::UnownedPtr.458" }
%"class.fxcrt::RetainPtr.472" = type { %"class.std::__1::unique_ptr.473" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.478" = type { %"class.std::__1::unique_ptr.479" }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %class.CPDF_Stream* }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::UnownedPtr.494" = type { %class.CPDF_Document* }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.497" }
%"class.fxcrt::SharedCopyOnWrite.497" = type { %"class.fxcrt::RetainPtr.498" }
%"class.fxcrt::RetainPtr.498" = type { %"class.std::__1::unique_ptr.499" }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.247", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.502", %"class.fxcrt::RetainPtr.508", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.502", %"class.fxcrt::RetainPtr.502", %"class.fxcrt::RetainPtr.502", float, float }
%"class.fxcrt::RetainPtr.247" = type { %"class.std::__1::unique_ptr.248" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %class.CPDF_Object* }
%"class.fxcrt::RetainPtr.508" = type { %"class.std::__1::unique_ptr.509" }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.502" = type { %"class.std::__1::unique_ptr.503" }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.516" }
%"class.fxcrt::RetainPtr.516" = type { %"class.std::__1::unique_ptr.517" }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.520" }
%"class.std::__1::vector.520" = type { %"class.std::__1::__vector_base.521" }
%"class.std::__1::__vector_base.521" = type { %"class.fxcrt::RetainPtr.522"*, %"class.fxcrt::RetainPtr.522"*, %"class.std::__1::__compressed_pair.523" }
%"class.fxcrt::RetainPtr.522" = type opaque
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.fxcrt::RetainPtr.522"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::unique_ptr.190"** }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::set.200" = type { %"class.std::__1::__tree.201" }
%"class.std::__1::__tree.201" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.CPDF_Font::FormIface" = type { i32 (...)** }
%"class.std::__1::set.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::RetainPtr.220" = type { %"class.std::__1::unique_ptr.221" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %class.CPDF_Stream* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.245", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"class.fxcrt::RetainPtr.247"*, %"class.fxcrt::RetainPtr.247"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.fxcrt::RetainPtr.247"* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.258", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.264" }
%"class.fxcrt::RetainPtr.258" = type { %"class.std::__1::unique_ptr.259" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.270" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.270" = type { %"class.std::__1::unique_ptr.271" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr", i32, %"class.std::__1::map.274" }
%"class.std::__1::map.274" = type { %"class.std::__1::__tree.275" }
%"class.std::__1::__tree.275" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.287", %"class.std::__1::vector.305" }
%"class.fxcrt::UnownedPtr.287" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.288", %"class.std::__1::map.289", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.fxcrt::UnownedPtr.288" = type { %class.CPDF_Page* }
%"class.std::__1::map.289" = type { %"class.std::__1::__tree.290" }
%"class.std::__1::__tree.290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.298", %"class.fxcrt::UnownedPtr.304" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type opaque
%"class.fxcrt::UnownedPtr.304" = type { %class.CPDF_ImageCacheEntry* }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.308" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.307", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.307" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.CPDF_RenderContext::Layer"* }
%class.CFX_PathData = type { %"class.std::__1::vector.320" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.322" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15CPDF_Dictionary9SetNewForI12CPDF_BooleanJbEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@_ZN6pdfium10annotationL8kSubtypeE = internal constant [8 x i8] c"Subtype\00", align 1
@_ZN12_GLOBAL__N_125kPDFiumKey_HasGeneratedAPE = internal constant [22 x i8] c"PDFIUM_HasGeneratedAP\00", align 16
@_ZN6pdfium10annotationL3kAPE = internal constant [3 x i8] c"AP\00", align 1
@.str = private unnamed_addr constant [2 x i8] c"N\00", align 1
@_ZN6pdfium10annotationL5kRectE = internal constant [5 x i8] c"Rect\00", align 1
@_ZN6pdfium10annotationL2kFE = internal constant [2 x i8] c"F\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"QuadPoints\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Text\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Link\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"FreeText\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"Line\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"Square\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"Circle\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"Polygon\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"PolyLine\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Highlight\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"Underline\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"Squiggly\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"StrikeOut\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"Stamp\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Caret\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"Ink\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"Popup\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"FileAttachment\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"Sound\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Movie\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"Widget\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"Screen\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"PrinterMark\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"TrapNet\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"Watermark\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"3D\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"RichMedia\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"XFAWidget\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"Redact\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"BS\00", align 1
@_ZN6pdfium10annotationL7kBorderE = internal constant [7 x i8] c"Border\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@_ZN6pdfium10annotationL2kCE = internal constant [2 x i8] c"C\00", align 1
@__const._ZN10CPDF_Annot10DrawBorderEP16CFX_RenderDevicePK10CFX_MatrixPK18CPDF_RenderOptions.graph_state = private unnamed_addr constant { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.313" } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.std::__1::vector.313" { %"class.std::__1::__vector_base.314" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.315" { %"struct.std::__1::__compressed_pair_elem.316" { float* inttoptr (i64 -6148914691236517206 to float*) } } } } }, align 8
@.ref.tmp = private constant [2 x float] [float 3.000000e+00, float 3.000000e+00], align 4
@.str.34 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@_ZN6pdfium10annotationL3kASE = internal constant [3 x i8] c"AS\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"Parent\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"Off\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"BBox\00", align 1

@_ZN10CPDF_AnnotC1EN5fxcrt9RetainPtrI15CPDF_DictionaryEEP13CPDF_Document = hidden unnamed_addr alias void (%class.CPDF_Annot*, %"class.fxcrt::RetainPtr"*, %class.CPDF_Document*), void (%class.CPDF_Annot*, %"class.fxcrt::RetainPtr"*, %class.CPDF_Document*)* @_ZN10CPDF_AnnotC2EN5fxcrt9RetainPtrI15CPDF_DictionaryEEP13CPDF_Document
@_ZN10CPDF_AnnotC1EP15CPDF_DictionaryP13CPDF_Document = hidden unnamed_addr alias void (%class.CPDF_Annot*, %class.CPDF_Dictionary*, %class.CPDF_Document*), void (%class.CPDF_Annot*, %class.CPDF_Dictionary*, %class.CPDF_Document*)* @_ZN10CPDF_AnnotC2EP15CPDF_DictionaryP13CPDF_Document
@_ZN10CPDF_AnnotD1Ev = hidden unnamed_addr alias void (%class.CPDF_Annot*), void (%class.CPDF_Annot*)* @_ZN10CPDF_AnnotD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_AnnotC2EN5fxcrt9RetainPtrI15CPDF_DictionaryEEP13CPDF_Document(%class.CPDF_Annot*, %"class.fxcrt::RetainPtr"* nocapture, %class.CPDF_Document*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPDF_Annot* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = bitcast %"class.fxcrt::RetainPtr"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %7 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Document* %2, %class.CPDF_Document** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 5, i32 0
  store %class.CPDF_Annot* null, %class.CPDF_Annot** %12, align 8
  %13 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 6
  store i8 0, i8* %13, align 8
  tail call void @_ZN10CPDF_Annot4InitEv(%class.CPDF_Annot* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Annot4InitEv(%class.CPDF_Annot* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %10 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN6pdfium10annotationL8kSubtypeE, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_Dictionary* %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  %11 = call i32 @_ZN10CPDF_Annot20StringToAnnotSubtypeERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4)
  %12 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  store i32 %11, i32* %12, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -9
  %15 = icmp ult i32 %14, 4
  %16 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 8
  %17 = zext i1 %15 to i8
  store i8 %17, i8* %16, align 2
  %18 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %19 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_125kPDFiumKey_HasGeneratedAPE, i64 0, i64 0)) #9
  %20 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* %18, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6, i1 zeroext false) #9
  %21 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %23 = call zeroext i1 @_ZNK10CPDF_Annot16ShouldGenerateAPEv(%class.CPDF_Annot* %0) #9
  br i1 %23, label %24, label %34

24:                                               ; preds = %1
  %25 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  %26 = load %class.CPDF_Document*, %class.CPDF_Document** %25, align 8
  %27 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %28 = load i32, i32* %12, align 8
  %29 = call zeroext i1 @_ZN15CPDF_GenerateAP15GenerateAnnotAPEP13CPDF_DocumentP15CPDF_DictionaryN10CPDF_Annot7SubtypeE(%class.CPDF_Document* %26, %class.CPDF_Dictionary* %27, i32 %28) #9
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %32 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_125kPDFiumKey_HasGeneratedAPE, i64 0, i64 0)) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 1, i8* %3, align 1
  %33 = call %class.CPDF_Boolean* @_ZN15CPDF_Dictionary9SetNewForI12CPDF_BooleanJbEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  store i8 1, i8* %21, align 1
  br label %34

34:                                               ; preds = %1, %24, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_AnnotC2EP15CPDF_DictionaryP13CPDF_Document(%class.CPDF_Annot*, %class.CPDF_Dictionary*, %class.CPDF_Document*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.CPDF_Dictionary* %1 to i64
  %5 = bitcast %class.CPDF_Annot* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %8, align 8
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Document* %2, %class.CPDF_Document** %12, align 8
  %13 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 5, i32 0
  store %class.CPDF_Annot* null, %class.CPDF_Annot** %17, align 8
  %18 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 6
  store i8 0, i8* %18, align 8
  tail call void @_ZN10CPDF_Annot4InitEv(%class.CPDF_Annot* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_AnnotD2Ev(%class.CPDF_Annot*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::map.143", %"class.std::__1::map.143"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.144"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::map.143", %"class.std::__1::map.143"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.144"* %3, %"class.std::__1::__tree_node"* null) #9
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %10, align 8
  %12 = icmp eq %class.CPDF_Dictionary* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %11, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %11, i64 0, i32 0, i32 0
  %20 = bitcast %class.CPDF_Dictionary* %11 to void (%"class.fxcrt::Retainable"*)***
  %21 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, i64 1
  %23 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, align 8
  tail call void %23(%"class.fxcrt::Retainable"* nonnull %19) #9
  br label %24

24:                                               ; preds = %1, %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Annot13ClearCachedAPEv(%class.CPDF_Annot*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::map.143", %"class.std::__1::map.143"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.144"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::map.143", %"class.std::__1::map.143"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10CPDF_Annot20StringToAnnotSubtypeERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  br i1 %2, label %58, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #9
  br i1 %4, label %58, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #9
  br i1 %6, label %58, label %7

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #9
  br i1 %8, label %58, label %9

9:                                                ; preds = %7
  %10 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #9
  br i1 %10, label %58, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #9
  br i1 %12, label %58, label %13

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #9
  br i1 %14, label %58, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)) #9
  br i1 %16, label %58, label %17

17:                                               ; preds = %15
  %18 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #9
  br i1 %18, label %58, label %19

19:                                               ; preds = %17
  %20 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9
  br i1 %20, label %58, label %21

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #9
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #9
  br i1 %24, label %58, label %25

25:                                               ; preds = %23
  %26 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #9
  br i1 %26, label %58, label %27

27:                                               ; preds = %25
  %28 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #9
  br i1 %28, label %58, label %29

29:                                               ; preds = %27
  %30 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #9
  br i1 %30, label %58, label %31

31:                                               ; preds = %29
  %32 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #9
  br i1 %32, label %58, label %33

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)) #9
  br i1 %34, label %58, label %35

35:                                               ; preds = %33
  %36 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #9
  br i1 %36, label %58, label %37

37:                                               ; preds = %35
  %38 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #9
  br i1 %38, label %58, label %39

39:                                               ; preds = %37
  %40 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #9
  br i1 %40, label %58, label %41

41:                                               ; preds = %39
  %42 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #9
  br i1 %42, label %58, label %43

43:                                               ; preds = %41
  %44 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9
  br i1 %44, label %58, label %45

45:                                               ; preds = %43
  %46 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #9
  br i1 %46, label %58, label %47

47:                                               ; preds = %45
  %48 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #9
  br i1 %48, label %58, label %49

49:                                               ; preds = %47
  %50 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #9
  br i1 %50, label %58, label %51

51:                                               ; preds = %49
  %52 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0)) #9
  br i1 %52, label %58, label %53

53:                                               ; preds = %51
  %54 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0)) #9
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #9
  %57 = select i1 %56, i32 28, i32 0
  br label %58

58:                                               ; preds = %55, %53, %51, %49, %47, %45, %43, %41, %39, %37, %35, %33, %31, %29, %27, %25, %23, %21, %19, %17, %15, %13, %11, %9, %7, %5, %3, %1
  %59 = phi i32 [ 1, %1 ], [ 2, %3 ], [ 3, %5 ], [ 4, %7 ], [ 5, %9 ], [ 6, %11 ], [ 7, %13 ], [ 8, %15 ], [ 9, %17 ], [ 10, %19 ], [ 11, %21 ], [ 12, %23 ], [ 13, %25 ], [ 14, %27 ], [ 15, %29 ], [ 16, %31 ], [ 17, %33 ], [ 18, %35 ], [ 19, %37 ], [ 20, %39 ], [ 21, %41 ], [ 22, %43 ], [ 23, %45 ], [ 24, %47 ], [ 25, %49 ], [ 26, %51 ], [ 27, %53 ], [ %57, %55 ]
  ret i32 %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Annot18GenerateAPIfNeededEv(%class.CPDF_Annot* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca i8, align 1
  %4 = tail call zeroext i1 @_ZNK10CPDF_Annot16ShouldGenerateAPEv(%class.CPDF_Annot* %0)
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  %7 = load %class.CPDF_Document*, %class.CPDF_Document** %6, align 8
  %8 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = tail call zeroext i1 @_ZN15CPDF_GenerateAP15GenerateAnnotAPEP13CPDF_DocumentP15CPDF_DictionaryN10CPDF_Annot7SubtypeE(%class.CPDF_Document* %7, %class.CPDF_Dictionary* %9, i32 %11) #9
  br i1 %12, label %13, label %18

13:                                               ; preds = %5
  %14 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %8, align 8
  %15 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_125kPDFiumKey_HasGeneratedAPE, i64 0, i64 0)) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 1, i8* %3, align 1
  %16 = call %class.CPDF_Boolean* @_ZN15CPDF_Dictionary9SetNewForI12CPDF_BooleanJbEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* %14, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %17 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  store i8 1, i8* %17, align 1
  br label %18

18:                                               ; preds = %5, %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Annot16ShouldGenerateAPEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %5, align 8
  %7 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN6pdfium10annotationL3kAPE, i64 0, i64 0)) #9
  %8 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %9 = icmp eq %class.CPDF_Dictionary* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #9
  %12 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %8, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #9
  %13 = icmp eq %class.CPDF_Dictionary* %12, null
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br i1 %13, label %14, label %20

14:                                               ; preds = %10, %1
  %15 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %5, align 8
  %16 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %17 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %15, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br label %20

20:                                               ; preds = %10, %14
  %21 = phi i1 [ %19, %14 ], [ false, %10 ]
  ret i1 %21
}

declare zeroext i1 @_ZN15CPDF_GenerateAP15GenerateAnnotAPEP13CPDF_DocumentP15CPDF_DictionaryN10CPDF_Annot7SubtypeE(%class.CPDF_Document*, %class.CPDF_Dictionary*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Boolean* @_ZN15CPDF_Dictionary9SetNewForI12CPDF_BooleanJbEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.247", align 8
  %5 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !4
  unreachable

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 32) #10, !noalias !5
  %11 = bitcast i8* %10 to %class.CPDF_Boolean*
  %12 = load i8, i8* %2, align 1, !range !8, !noalias !5
  %13 = icmp ne i8 %12, 0
  tail call void @_ZN12CPDF_BooleanC1Eb(%class.CPDF_Boolean* nonnull %11, i1 zeroext %13) #9, !noalias !5
  %14 = ptrtoint i8* %10 to i64
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !5
  %18 = bitcast %"class.fxcrt::RetainPtr.247"* %4 to i64*
  store i64 %14, i64* %18, align 8
  %19 = add nsw i64 %17, 2
  store i64 %19, i64* %16, align 8
  %20 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.247"* nonnull %4) #9
  %21 = bitcast %class.CPDF_Object* %20 to %class.CPDF_Boolean*
  %22 = getelementptr inbounds %"class.fxcrt::RetainPtr.247", %"class.fxcrt::RetainPtr.247"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_Object*, %class.CPDF_Object** %22, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %22, align 8
  %24 = icmp eq %class.CPDF_Object* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %23, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %23, i64 0, i32 0
  %32 = bitcast %class.CPDF_Object* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  call void %35(%"class.fxcrt::Retainable"* nonnull %31) #9
  br label %36

36:                                               ; preds = %30, %25, %9
  %37 = load i64, i64* %16, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %16, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast i8* %10 to %"class.fxcrt::Retainable"*
  %42 = bitcast i8* %10 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  call void %45(%"class.fxcrt::Retainable"* nonnull %41) #9
  br label %46

46:                                               ; preds = %36, %40
  ret %class.CPDF_Boolean* %21
}

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Annot8IsHiddenEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %6 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %7 = and i32 %6, 2
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10CPDF_Annot20ShouldDrawAnnotationEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %6 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 16
  br label %17

17:                                               ; preds = %1, %13, %9
  %18 = phi i1 [ false, %1 ], [ true, %9 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10CPDF_Annot10GetSubtypeEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK10CPDF_Annot14RectForDrawingEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 2, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 1, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %11, align 8
  %13 = tail call { <2 x float>, <2 x float> } @_ZN10CPDF_Annot26BoundingRectFromQuadPointsEPK15CPDF_Dictionary(%class.CPDF_Dictionary* %12)
  %14 = extractvalue { <2 x float>, <2 x float> } %13, 0
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 1
  br label %23

16:                                               ; preds = %1, %6
  %17 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %17, align 8
  %19 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6pdfium10annotationL5kRectE, i64 0, i64 0)) #9
  %20 = call { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %18, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #9
  %21 = extractvalue { <2 x float>, <2 x float> } %20, 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %23

23:                                               ; preds = %16, %10
  %24 = phi <2 x float> [ %14, %10 ], [ %21, %16 ]
  %25 = phi <2 x float> [ %15, %10 ], [ %22, %16 ]
  %26 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %24, 0
  %27 = insertvalue { <2 x float>, <2 x float> } %26, <2 x float> %25, 1
  ret { <2 x float>, <2 x float> } %27
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN10CPDF_Annot26BoundingRectFromQuadPointsEPK15CPDF_Dictionary(%class.CPDF_Dictionary*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %class.CFX_FloatRect*
  %7 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1, i64 0
  %8 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9
  %9 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #9
  %10 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %11 = icmp eq %class.CPDF_Array* %10, null
  br i1 %11, label %61, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %10, i64 0, i32 1
  %14 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %10, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.fxcrt::RetainPtr.247"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.245"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = lshr i64 %20, 3
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %61, label %23

23:                                               ; preds = %12
  %24 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 4) #9
  %25 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 5) #9
  %26 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 2) #9
  %27 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 3) #9
  %28 = insertelement <2 x float> undef, float %24, i32 0
  %29 = insertelement <2 x float> %28, float %25, i32 1
  %30 = insertelement <2 x float> undef, float %26, i32 0
  %31 = insertelement <2 x float> %30, float %27, i32 1
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %29, <2 x float>* %32, align 8
  %33 = bitcast float* %7 to <2 x float>*
  store <2 x float> %31, <2 x float>* %33, align 8
  %34 = icmp eq i64 %21, 1
  br i1 %34, label %61, label %35

35:                                               ; preds = %23
  %36 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %39 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i64 [ 1, %35 ], [ %55, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9
  %42 = shl i64 %41, 3
  %43 = or i64 %42, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -1, i64 16, i1 false)
  %44 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 %43) #9
  %45 = or i64 %42, 5
  %46 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 %45) #9
  %47 = or i64 %42, 2
  %48 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 %47) #9
  %49 = or i64 %42, 3
  %50 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 %49) #9
  %51 = insertelement <2 x float> undef, float %44, i32 0
  %52 = insertelement <2 x float> %51, float %46, i32 1
  %53 = insertelement <2 x float> undef, float %48, i32 0
  %54 = insertelement <2 x float> %53, float %50, i32 1
  store <2 x float> %52, <2 x float>* %37, align 8
  store <2 x float> %54, <2 x float>* %38, align 8
  call void @_ZN13CFX_FloatRect5UnionERKS_(%class.CFX_FloatRect* nonnull %3, %class.CFX_FloatRect* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9
  %55 = add nuw nsw i64 %41, 1
  %56 = icmp eq i64 %55, %21
  br i1 %56, label %57, label %40

57:                                               ; preds = %40
  %58 = load <2 x float>, <2 x float>* %32, align 8
  %59 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %60 = load <2 x float>, <2 x float>* %59, align 8
  br label %61

61:                                               ; preds = %57, %23, %1, %12
  %62 = phi <2 x float> [ %60, %57 ], [ %31, %23 ], [ zeroinitializer, %1 ], [ zeroinitializer, %12 ]
  %63 = phi <2 x float> [ %58, %57 ], [ %29, %23 ], [ zeroinitializer, %1 ], [ zeroinitializer, %12 ]
  %64 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %63, 0
  %65 = insertvalue { <2 x float>, <2 x float> } %64, <2 x float> %62, 1
  ret { <2 x float>, <2 x float> } %65
}

declare { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK10CPDF_Annot7GetRectEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %5 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 8
  %6 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -1, i64 16, i1 false)
  %7 = load i8, i8* %5, align 2, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 1, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %14, align 8
  %16 = tail call { <2 x float>, <2 x float> } @_ZN10CPDF_Annot26BoundingRectFromQuadPointsEPK15CPDF_Dictionary(%class.CPDF_Dictionary* %15) #9
  %17 = extractvalue { <2 x float>, <2 x float> } %16, 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 1
  br label %26

19:                                               ; preds = %9, %1
  %20 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %20, align 8
  %22 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6pdfium10annotationL5kRectE, i64 0, i64 0)) #9
  %23 = call { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #9
  %24 = extractvalue { <2 x float>, <2 x float> } %23, 0
  %25 = extractvalue { <2 x float>, <2 x float> } %23, 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi <2 x float> [ %17, %13 ], [ %24, %19 ]
  %28 = phi <2 x float> [ %18, %13 ], [ %25, %19 ]
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %27, <2 x float>* %29, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %28, <2 x float>* %30, align 8
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %4) #9
  %31 = load <2 x float>, <2 x float>* %29, align 8
  %32 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %31, 0
  %33 = load <2 x float>, <2 x float>* %30, align 8
  %34 = insertvalue { <2 x float>, <2 x float> } %32, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %34
}

declare void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10CPDF_Annot8GetFlagsEv(%class.CPDF_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %6 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i32 %6
}

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Stream* @_Z10GetAnnotAPP15CPDF_DictionaryN10CPDF_Annot14AppearanceModeE(%class.CPDF_Dictionary*, i32) local_unnamed_addr #0 {
  %3 = tail call fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_118GetAnnotAPInternalEP15CPDF_DictionaryN10CPDF_Annot14AppearanceModeEb(%class.CPDF_Dictionary* %0, i32 %1, i1 zeroext true)
  ret %class.CPDF_Stream* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_118GetAnnotAPInternalEP15CPDF_DictionaryN10CPDF_Annot14AppearanceModeEb(%class.CPDF_Dictionary*, i32, i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN6pdfium10annotationL3kAPE, i64 0, i64 0)) #9
  %16 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %17 = icmp eq %class.CPDF_Dictionary* %16, null
  br i1 %17, label %98, label %18

18:                                               ; preds = %3
  %19 = icmp eq i32 %1, 1
  %20 = select i1 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)
  %21 = icmp eq i32 %1, 2
  %22 = select i1 %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8* %20
  br i1 %2, label %23, label %27

23:                                               ; preds = %18
  %24 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %22) #9
  %25 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %26 = select i1 %25, i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)
  br label %27

27:                                               ; preds = %23, %18
  %28 = phi i8* [ %22, %18 ], [ %26, %23 ]
  %29 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* %28) #9
  %30 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  %31 = icmp eq %class.CPDF_Object* %30, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %27
  %33 = bitcast %class.CPDF_Object* %30 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %34 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %33, align 8
  %35 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %34, i64 35
  %36 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %35, align 8
  %37 = call %class.CPDF_Stream* %36(%class.CPDF_Object* nonnull %30) #9
  %38 = icmp eq %class.CPDF_Stream* %37, null
  br i1 %38, label %39, label %98

39:                                               ; preds = %32
  %40 = bitcast %class.CPDF_Object* %30 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %41 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %40, align 8
  %42 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %41, i64 27
  %43 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %42, align 8
  %44 = call %class.CPDF_Dictionary* %43(%class.CPDF_Object* nonnull %30) #9
  %45 = icmp eq %class.CPDF_Dictionary* %44, null
  br i1 %45, label %98, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %48, align 8
  %49 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN6pdfium10annotationL3kASE, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  %50 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %48, align 8
  %51 = icmp eq %"class.fxcrt::StringDataTemplate"* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %50, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %96

56:                                               ; preds = %46, %52
  %57 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %58 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %58, align 8
  %59 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %9, %class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  %60 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %58, align 8
  %61 = icmp eq %"class.fxcrt::StringDataTemplate"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %60, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  br label %82

68:                                               ; preds = %56, %62
  %69 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)) #9
  %70 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #9
  %71 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = icmp eq %class.CPDF_Dictionary* %70, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %12, %class.CPDF_Dictionary* nonnull %70, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %13) #9
  %75 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  br label %78

76:                                               ; preds = %68
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  %77 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  br label %78

78:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  %79 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %58, align 8
  %80 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = icmp eq %"class.fxcrt::StringDataTemplate"* %79, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %66, %78
  %83 = phi i8* [ %67, %66 ], [ %80, %78 ]
  %84 = phi %"class.fxcrt::StringDataTemplate"* [ %60, %66 ], [ %79, %78 ]
  %85 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %84, i64 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %44, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #9
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %14, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #9
  br label %93

91:                                               ; preds = %78, %88, %82
  %92 = phi i8* [ %80, %78 ], [ %83, %88 ], [ %83, %82 ]
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #9
  br label %93

93:                                               ; preds = %91, %90
  %94 = phi i8* [ %92, %91 ], [ %83, %90 ]
  %95 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  br label %96

96:                                               ; preds = %93, %52
  %97 = call %class.CPDF_Stream* @_ZN15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %44, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %98

98:                                               ; preds = %32, %27, %39, %96, %3
  %99 = phi %class.CPDF_Stream* [ null, %3 ], [ %37, %32 ], [ null, %27 ], [ %97, %96 ], [ null, %39 ]
  ret %class.CPDF_Stream* %99
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Stream* @_Z20GetAnnotAPNoFallbackP15CPDF_DictionaryN10CPDF_Annot14AppearanceModeE(%class.CPDF_Dictionary*, i32) local_unnamed_addr #0 {
  %3 = tail call fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_118GetAnnotAPInternalEP15CPDF_DictionaryN10CPDF_Annot14AppearanceModeEb(%class.CPDF_Dictionary* %0, i32 %1, i1 zeroext false)
  ret %class.CPDF_Stream* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Form* @_ZN10CPDF_Annot9GetAPFormEPK9CPDF_PageNS_14AppearanceModeE(%class.CPDF_Annot*, %class.CPDF_Page* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = tail call fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_118GetAnnotAPInternalEP15CPDF_DictionaryN10CPDF_Annot14AppearanceModeEb(%class.CPDF_Dictionary* %5, i32 %2, i1 zeroext true) #9
  %7 = ptrtoint %class.CPDF_Stream* %6 to i64
  %8 = icmp eq %class.CPDF_Stream* %6, null
  br i1 %8, label %125, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4
  %11 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %9, %15
  %16 = phi %"class.std::__1::__tree_end_node"* [ %26, %15 ], [ %11, %9 ]
  %17 = phi %"class.std::__1::__tree_node"* [ %27, %15 ], [ %13, %9 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %class.CPDF_Stream*, %class.CPDF_Stream** %18, align 8
  %20 = icmp ult %class.CPDF_Stream* %19, %6
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node"* %17 to %"class.std::__1::__tree_node"**
  %25 = select i1 %20, %"class.std::__1::__tree_node"** %22, %"class.std::__1::__tree_node"** %24
  %26 = select i1 %20, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %23
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %28 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %26, %11
  br i1 %30, label %40, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %class.CPDF_Stream**
  %34 = load %class.CPDF_Stream*, %class.CPDF_Stream** %33, align 8
  %35 = icmp ult %class.CPDF_Stream* %6, %34
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 5
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %class.CPDF_Form**
  %39 = load %class.CPDF_Form*, %class.CPDF_Form** %38, align 8
  br label %125

40:                                               ; preds = %31, %29, %9
  %41 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  %42 = load %class.CPDF_Document*, %class.CPDF_Document** %41, align 8
  %43 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %43, align 8
  %45 = tail call i8* @_Znwm(i64 280) #10
  %46 = bitcast i8* %45 to %class.CPDF_Form*
  tail call void @_ZN9CPDF_FormC1EP13CPDF_DocumentP15CPDF_DictionaryP11CPDF_Stream(%class.CPDF_Form* nonnull %46, %class.CPDF_Document* %42, %class.CPDF_Dictionary* %44, %class.CPDF_Stream* nonnull %6) #9
  %47 = ptrtoint i8* %45 to i64
  tail call void @_ZN9CPDF_Form12ParseContentEv(%class.CPDF_Form* nonnull %46) #9
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %49 = icmp eq %"class.std::__1::__tree_node"* %48, null
  br i1 %49, label %78, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %74, %50
  %53 = phi %"class.std::__1::__tree_node"* [ %77, %74 ], [ %48, %50 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %76, %74 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 1, i32 0, i32 0
  %56 = load %class.CPDF_Stream*, %class.CPDF_Stream** %55, align 8
  %57 = icmp ult %class.CPDF_Stream* %6, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %74

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  br label %80

64:                                               ; preds = %52
  %65 = icmp ult %class.CPDF_Stream* %56, %6
  br i1 %65, label %66, label %72

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 1
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  br label %80

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  br label %80

74:                                               ; preds = %66, %58
  %75 = phi %"class.std::__1::__tree_node_base"* [ %60, %58 ], [ %68, %66 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %59, %58 ], [ %67, %66 ]
  %77 = bitcast %"class.std::__1::__tree_node_base"* %75 to %"class.std::__1::__tree_node"*
  br label %52

78:                                               ; preds = %40
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  br label %80

80:                                               ; preds = %78, %72, %70, %62
  %81 = phi %"class.std::__1::__tree_end_node"* [ %11, %78 ], [ %63, %62 ], [ %71, %70 ], [ %73, %72 ]
  %82 = phi %"class.std::__1::__tree_node_base"** [ %79, %78 ], [ %59, %62 ], [ %67, %70 ], [ %54, %72 ]
  %83 = bitcast %"class.std::__1::__tree_node_base"** %82 to %"class.std::__1::__tree_node"**
  %84 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node"* %84, null
  br i1 %85, label %86, label %113

86:                                               ; preds = %80
  %87 = tail call i8* @_Znwm(i64 48) #10, !noalias !9
  %88 = getelementptr inbounds i8, i8* %87, i64 32
  %89 = bitcast i8* %88 to i64*
  store i64 %7, i64* %89, align 8, !noalias !9
  %90 = getelementptr inbounds i8, i8* %87, i64 40
  %91 = bitcast i8* %90 to i64*
  store i64 0, i64* %91, align 8, !noalias !9
  %92 = bitcast i8* %87 to %"class.std::__1::__tree_node"*
  %93 = bitcast i8* %87 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds i8, i8* %87, i64 16
  %95 = bitcast i8* %94 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %95, align 8
  %96 = bitcast %"class.std::__1::__tree_node_base"** %82 to i8**
  store i8* %87, i8** %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::map.143", %"class.std::__1::map.143"* %10, i64 0, i32 0, i32 0
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %86
  %103 = ptrtoint %"class.std::__1::__tree_node_base"* %100 to i64
  %104 = bitcast %"class.std::__1::map.143"* %10 to i64*
  store i64 %103, i64* %104, align 8
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  br label %106

106:                                              ; preds = %102, %86
  %107 = phi %"class.std::__1::__tree_node_base"* [ %93, %86 ], [ %105, %102 ]
  %108 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %109, %"class.std::__1::__tree_node_base"* %107) #9
  %110 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  br label %113

113:                                              ; preds = %80, %106
  %114 = phi %"class.std::__1::__tree_node"* [ %92, %106 ], [ %84, %80 ]
  %115 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %114, i64 0, i32 1, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %class.CPDF_Form*, %class.CPDF_Form** %116, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.239"* %115 to i64*
  store i64 %47, i64* %118, align 8
  %119 = icmp eq %class.CPDF_Form* %117, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %113
  %121 = bitcast %class.CPDF_Form* %117 to void (%class.CPDF_Form*)***
  %122 = load void (%class.CPDF_Form*)**, void (%class.CPDF_Form*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %122, i64 1
  %124 = load void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %123, align 8
  tail call void %124(%class.CPDF_Form* nonnull %117) #9
  br label %125

125:                                              ; preds = %36, %120, %113, %3
  %126 = phi %class.CPDF_Form* [ null, %3 ], [ %39, %36 ], [ %46, %120 ], [ %46, %113 ]
  ret %class.CPDF_Form* %126
}

declare void @_ZN9CPDF_Form12ParseContentEv(%class.CPDF_Form*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN10CPDF_Annot23RectFromQuadPointsArrayEPK10CPDF_Arraym(%class.CPDF_Array*, i64) local_unnamed_addr #0 align 2 {
  %3 = shl i64 %1, 3
  %4 = or i64 %3, 4
  %5 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %0, i64 %4) #9
  %6 = or i64 %3, 5
  %7 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %0, i64 %6) #9
  %8 = or i64 %3, 2
  %9 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %0, i64 %8) #9
  %10 = or i64 %3, 3
  %11 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %0, i64 %10) #9
  %12 = insertelement <2 x float> undef, float %5, i32 0
  %13 = insertelement <2 x float> %12, float %7, i32 1
  %14 = insertelement <2 x float> undef, float %9, i32 0
  %15 = insertelement <2 x float> %14, float %11, i32 1
  %16 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %13, 0
  %17 = insertvalue { <2 x float>, <2 x float> } %16, <2 x float> %15, 1
  ret { <2 x float>, <2 x float> } %17
}

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN10CPDF_Annot14QuadPointCountEPK10CPDF_Array(%class.CPDF_Array* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"class.fxcrt::RetainPtr.247"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.245"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = lshr i64 %9, 3
  ret i64 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN13CFX_FloatRect5UnionERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN10CPDF_Annot18RectFromQuadPointsEPK15CPDF_Dictionarym(%class.CPDF_Dictionary*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #9
  %5 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %6 = icmp eq %class.CPDF_Array* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %5, i64 0, i32 1
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %5, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.fxcrt::RetainPtr.247"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.245"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = lshr i64 %15, 3
  %17 = icmp ugt i64 %16, %1
  br i1 %17, label %18, label %32

18:                                               ; preds = %7
  %19 = shl i64 %1, 3
  %20 = or i64 %19, 4
  %21 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 %20) #9
  %22 = or i64 %19, 5
  %23 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 %22) #9
  %24 = or i64 %19, 2
  %25 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 %24) #9
  %26 = or i64 %19, 3
  %27 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 %26) #9
  %28 = insertelement <2 x float> undef, float %21, i32 0
  %29 = insertelement <2 x float> %28, float %23, i32 1
  %30 = insertelement <2 x float> undef, float %25, i32 0
  %31 = insertelement <2 x float> %30, float %27, i32 1
  br label %32

32:                                               ; preds = %2, %7, %18
  %33 = phi <2 x float> [ %31, %18 ], [ zeroinitializer, %7 ], [ zeroinitializer, %2 ]
  %34 = phi <2 x float> [ %29, %18 ], [ zeroinitializer, %7 ], [ zeroinitializer, %2 ]
  %35 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %34, 0
  %36 = insertvalue { <2 x float>, <2 x float> } %35, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Annot20AnnotSubtypeToStringENS_7SubtypeE(%"class.fxcrt::ByteString"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %31 [
    i32 1, label %3
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 7, label %9
    i32 8, label %10
    i32 9, label %11
    i32 10, label %12
    i32 11, label %13
    i32 12, label %14
    i32 13, label %15
    i32 14, label %16
    i32 15, label %17
    i32 16, label %18
    i32 17, label %19
    i32 18, label %20
    i32 19, label %21
    i32 20, label %22
    i32 21, label %23
    i32 22, label %24
    i32 23, label %25
    i32 24, label %26
    i32 25, label %27
    i32 26, label %28
    i32 27, label %29
    i32 28, label %30
  ]

3:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %32

4:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %32

5:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %32

6:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %32

7:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %32

8:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %32

9:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %32

10:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)) #9
  br label %32

11:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %32

12:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %32

13:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %32

14:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #9
  br label %32

15:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #9
  br label %32

16:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #9
  br label %32

17:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #9
  br label %32

18:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %32

19:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)) #9
  br label %32

20:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #9
  br label %32

21:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %32

22:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #9
  br label %32

23:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %32

24:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9
  br label %32

25:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #9
  br label %32

27:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #9
  br label %32

28:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0)) #9
  br label %32

29:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0)) #9
  br label %32

30:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #9
  br label %32

31:                                               ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #9
  br label %32

32:                                               ; preds = %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10CPDF_Annot14DrawAppearanceEP9CPDF_PageP16CFX_RenderDeviceRK10CFX_MatrixNS_14AppearanceModeEPK18CPDF_RenderOptions(%class.CPDF_Annot*, %class.CPDF_Page*, %class.CFX_RenderDevice*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32, %class.CPDF_RenderOptions*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %class.CFX_Matrix, align 16
  %11 = alloca %class.CPDF_RenderContext, align 8
  %12 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %14 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %15 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %59

18:                                               ; preds = %6
  %19 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 6
  %20 = load i8, i8* %19, align 8, !range !8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 16
  br i1 %25, label %59, label %26

26:                                               ; preds = %22, %18
  %27 = call zeroext i1 @_ZNK10CPDF_Annot16ShouldGenerateAPEv(%class.CPDF_Annot* %0) #9
  br i1 %27, label %28, label %40

28:                                               ; preds = %26
  %29 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  %30 = load %class.CPDF_Document*, %class.CPDF_Document** %29, align 8
  %31 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %32 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = call zeroext i1 @_ZN15CPDF_GenerateAP15GenerateAnnotAPEP13CPDF_DocumentP15CPDF_DictionaryN10CPDF_Annot7SubtypeE(%class.CPDF_Document* %30, %class.CPDF_Dictionary* %31, i32 %33) #9
  br i1 %34, label %35, label %40

35:                                               ; preds = %28
  %36 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %37 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_125kPDFiumKey_HasGeneratedAPE, i64 0, i64 0)) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #9
  store i8 1, i8* %8, align 1
  %38 = call %class.CPDF_Boolean* @_ZN15CPDF_Dictionary9SetNewForI12CPDF_BooleanJbEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* %36, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, i8* nonnull dereferenceable(1) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  %39 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  store i8 1, i8* %39, align 1
  br label %40

40:                                               ; preds = %26, %28, %35
  %41 = bitcast %class.CFX_Matrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %42 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %10, i64 0, i32 4
  %43 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %10, i64 0, i32 5
  %44 = bitcast %class.CFX_Matrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %44, align 16
  store float 0.000000e+00, float* %42, align 16
  store float 0.000000e+00, float* %43, align 4
  %45 = call fastcc %class.CPDF_Form* @_ZN12_GLOBAL__N_114AnnotGetMatrixEPK9CPDF_PageP10CPDF_AnnotNS3_14AppearanceModeERK10CFX_MatrixPS6_(%class.CPDF_Page* %1, %class.CPDF_Annot* %0, i32 %4, %class.CFX_Matrix* dereferenceable(24) %3, %class.CFX_Matrix* nonnull %10)
  %46 = icmp eq %class.CPDF_Form* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %40
  %48 = bitcast %class.CPDF_RenderContext* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #9
  %49 = bitcast %class.CPDF_RenderContext* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 48, i1 false)
  %50 = call %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page* %1) #9
  %51 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %51, align 8
  %53 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %54 = bitcast %"class.CPDF_Page::RenderCacheIface"** %53 to %class.CPDF_PageRenderCache**
  %55 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %54, align 8
  call void @_ZN18CPDF_RenderContextC1EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache(%class.CPDF_RenderContext* nonnull %11, %class.CPDF_Document* %50, %class.CPDF_Dictionary* %52, %class.CPDF_PageRenderCache* %55) #9
  %56 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %45, i64 0, i32 0
  call void @_ZN18CPDF_RenderContext11AppendLayerEP21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderContext* nonnull %11, %class.CPDF_PageObjectHolder* %56, %class.CFX_Matrix* nonnull dereferenceable(24) %10) #9
  call void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext* nonnull %11, %class.CFX_RenderDevice* %2, %class.CPDF_RenderOptions* %5, %class.CFX_Matrix* null) #9
  call void @_ZN18CPDF_RenderContextD1Ev(%class.CPDF_RenderContext* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #9
  br label %57

57:                                               ; preds = %40, %47
  %58 = phi i1 [ true, %47 ], [ false, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br label %59

59:                                               ; preds = %22, %6, %57
  %60 = phi i1 [ %58, %57 ], [ false, %22 ], [ false, %6 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.CPDF_Form* @_ZN12_GLOBAL__N_114AnnotGetMatrixEPK9CPDF_PageP10CPDF_AnnotNS3_14AppearanceModeERK10CFX_MatrixPS6_(%class.CPDF_Page* nocapture readonly, %class.CPDF_Annot*, i32, %class.CFX_Matrix* nocapture readonly dereferenceable(24), %class.CFX_Matrix*) unnamed_addr #0 {
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { <2 x float>, <2 x float> }*
  %9 = alloca %class.CFX_Matrix, align 4
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %class.CFX_FloatRect*
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca <2 x i64>, align 16
  %16 = tail call %class.CPDF_Form* @_ZN10CPDF_Annot9GetAPFormEPK9CPDF_PageNS_14AppearanceModeE(%class.CPDF_Annot* %1, %class.CPDF_Page* %0, i32 %2)
  %17 = icmp eq %class.CPDF_Form* %16, null
  br i1 %17, label %122, label %18

18:                                               ; preds = %5
  %19 = bitcast <2 x i64>* %15 to %class.CFX_FloatRect*
  %20 = bitcast { <2 x float>, <2 x float> }* %13 to %class.CFX_FloatRect*
  %21 = bitcast %class.CFX_Matrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %16, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %class.CFX_Matrix* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -1, i64 24, i1 false)
  %24 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %22, align 8
  %25 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetMatrixForERKN5fxcrt10ByteStringE(%class.CFX_Matrix* nonnull sret %9, %class.CPDF_Dictionary* %24, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %26 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %22, align 8
  %29 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #9
  %30 = call { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %28, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #9
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %32 = extractvalue { <2 x float>, <2 x float> } %30, 0
  store <2 x float> %32, <2 x float>* %31, align 8
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  %34 = extractvalue { <2 x float>, <2 x float> } %30, 1
  store <2 x float> %34, <2 x float>* %33, align 8
  %35 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %9, %class.CFX_FloatRect* nonnull dereferenceable(16) %20) #9
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %37 = extractvalue { <2 x float>, <2 x float> } %35, 0
  store <2 x float> %37, <2 x float>* %36, align 8
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %39 = extractvalue { <2 x float>, <2 x float> } %35, 1
  store <2 x float> %39, <2 x float>* %38, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %40 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %41 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = bitcast <2 x i64>* %7 to %class.CFX_FloatRect*
  %43 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %1, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -1, i64 16, i1 false) #9
  %44 = load i8, i8* %43, align 2, !range !8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %18
  %47 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %1, i64 0, i32 7
  %48 = load i8, i8* %47, align 1, !range !8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %51, align 8
  %53 = call { <2 x float>, <2 x float> } @_ZN10CPDF_Annot26BoundingRectFromQuadPointsEPK15CPDF_Dictionary(%class.CPDF_Dictionary* %52) #9
  %54 = extractvalue { <2 x float>, <2 x float> } %53, 0
  %55 = extractvalue { <2 x float>, <2 x float> } %53, 1
  br label %63

56:                                               ; preds = %46, %18
  %57 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %57, align 8
  %59 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6pdfium10annotationL5kRectE, i64 0, i64 0)) #9
  %60 = call { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %58, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #9
  %61 = extractvalue { <2 x float>, <2 x float> } %60, 0
  %62 = extractvalue { <2 x float>, <2 x float> } %60, 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  br label %63

63:                                               ; preds = %50, %56
  %64 = phi <2 x float> [ %54, %50 ], [ %61, %56 ]
  %65 = phi <2 x float> [ %55, %50 ], [ %62, %56 ]
  %66 = bitcast <2 x i64>* %7 to <2 x float>*
  store <2 x float> %64, <2 x float>* %66, align 16
  %67 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %65, <2 x float>* %67, align 8
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %42) #9
  %68 = load <2 x i64>, <2 x i64>* %7, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  store <2 x i64> %68, <2 x i64>* %15, align 16
  call void @_ZN10CFX_Matrix9MatchRectERK13CFX_FloatRectS2_(%class.CFX_Matrix* %4, %class.CFX_FloatRect* nonnull dereferenceable(16) %19, %class.CFX_FloatRect* nonnull dereferenceable(16) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  %69 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 0
  %70 = load float, float* %69, align 4, !noalias !12
  %71 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 1
  %72 = load float, float* %71, align 4, !noalias !12
  %73 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 2
  %74 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %75 = load <2 x float>, <2 x float>* %74, align 4, !noalias !12
  %76 = shufflevector <2 x float> %75, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %77 = bitcast float* %73 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 4, !noalias !12
  %79 = shufflevector <2 x float> %78, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %80 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 2
  %81 = load float, float* %80, align 4, !noalias !12
  %82 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 3
  %83 = load float, float* %82, align 4, !noalias !12
  %84 = insertelement <4 x float> undef, float %70, i32 0
  %85 = shufflevector <4 x float> %84, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %86 = extractelement <2 x float> %75, i32 0
  %87 = extractelement <2 x float> %75, i32 1
  %88 = shufflevector <4 x float> %85, <4 x float> %76, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %89 = insertelement <4 x float> undef, float %86, i32 0
  %90 = insertelement <4 x float> %89, float %87, i32 1
  %91 = insertelement <4 x float> %90, float %81, i32 2
  %92 = insertelement <4 x float> %91, float %81, i32 3
  %93 = fmul <4 x float> %88, %92
  %94 = insertelement <4 x float> undef, float %72, i32 0
  %95 = shufflevector <4 x float> %94, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %96 = extractelement <2 x float> %78, i32 0
  %97 = extractelement <2 x float> %78, i32 1
  %98 = shufflevector <4 x float> %95, <4 x float> %79, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %99 = insertelement <4 x float> undef, float %96, i32 0
  %100 = insertelement <4 x float> %99, float %97, i32 1
  %101 = insertelement <4 x float> %100, float %83, i32 2
  %102 = insertelement <4 x float> %101, float %83, i32 3
  %103 = fmul <4 x float> %98, %102
  %104 = fadd <4 x float> %93, %103
  %105 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %106 = load float, float* %105, align 4, !noalias !12
  %107 = fmul float %86, %106
  %108 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %109 = load float, float* %108, align 4, !noalias !12
  %110 = fmul float %96, %109
  %111 = fadd float %107, %110
  %112 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %113 = load float, float* %112, align 4, !noalias !12
  %114 = fadd float %113, %111
  %115 = fmul float %87, %106
  %116 = fmul float %97, %109
  %117 = fadd float %115, %116
  %118 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %119 = load float, float* %118, align 4, !noalias !12
  %120 = fadd float %117, %119
  %121 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> %104, <4 x float>* %121, align 4
  store float %114, float* %105, align 4
  store float %120, float* %108, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  br label %122

122:                                              ; preds = %5, %63
  ret %class.CPDF_Form* %16
}

declare %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page*) unnamed_addr #2

declare void @_ZN18CPDF_RenderContextC1EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache(%class.CPDF_RenderContext*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_PageRenderCache*) unnamed_addr #2

declare void @_ZN18CPDF_RenderContext11AppendLayerEP21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %class.CPDF_RenderOptions*, %class.CFX_Matrix*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18CPDF_RenderContextD1Ev(%class.CPDF_RenderContext*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10CPDF_Annot13DrawInContextEPK9CPDF_PageP18CPDF_RenderContextRK10CFX_MatrixNS_14AppearanceModeE(%class.CPDF_Annot*, %class.CPDF_Page* nocapture readonly, %class.CPDF_RenderContext*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %class.CFX_Matrix, align 16
  %10 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %12 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %13 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %49

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 16
  br i1 %23, label %49, label %24

24:                                               ; preds = %20, %16
  %25 = call zeroext i1 @_ZNK10CPDF_Annot16ShouldGenerateAPEv(%class.CPDF_Annot* %0) #9
  br i1 %25, label %26, label %38

26:                                               ; preds = %24
  %27 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 1, i32 0
  %28 = load %class.CPDF_Document*, %class.CPDF_Document** %27, align 8
  %29 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %30 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = call zeroext i1 @_ZN15CPDF_GenerateAP15GenerateAnnotAPEP13CPDF_DocumentP15CPDF_DictionaryN10CPDF_Annot7SubtypeE(%class.CPDF_Document* %28, %class.CPDF_Dictionary* %29, i32 %31) #9
  br i1 %32, label %33, label %38

33:                                               ; preds = %26
  %34 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %35 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_125kPDFiumKey_HasGeneratedAPE, i64 0, i64 0)) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #9
  store i8 1, i8* %7, align 1
  %36 = call %class.CPDF_Boolean* @_ZN15CPDF_Dictionary9SetNewForI12CPDF_BooleanJbEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* %34, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  %37 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  store i8 1, i8* %37, align 1
  br label %38

38:                                               ; preds = %24, %26, %33
  %39 = bitcast %class.CFX_Matrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #9
  %40 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %9, i64 0, i32 4
  %41 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %9, i64 0, i32 5
  %42 = bitcast %class.CFX_Matrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %42, align 16
  store float 0.000000e+00, float* %40, align 16
  store float 0.000000e+00, float* %41, align 4
  %43 = call fastcc %class.CPDF_Form* @_ZN12_GLOBAL__N_114AnnotGetMatrixEPK9CPDF_PageP10CPDF_AnnotNS3_14AppearanceModeERK10CFX_MatrixPS6_(%class.CPDF_Page* %1, %class.CPDF_Annot* %0, i32 %4, %class.CFX_Matrix* dereferenceable(24) %3, %class.CFX_Matrix* nonnull %9)
  %44 = icmp eq %class.CPDF_Form* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %43, i64 0, i32 0
  call void @_ZN18CPDF_RenderContext11AppendLayerEP21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderContext* %2, %class.CPDF_PageObjectHolder* %46, %class.CFX_Matrix* nonnull dereferenceable(24) %9) #9
  br label %47

47:                                               ; preds = %38, %45
  %48 = phi i1 [ true, %45 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #9
  br label %49

49:                                               ; preds = %20, %5, %47
  %50 = phi i1 [ %48, %47 ], [ false, %20 ], [ false, %5 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPDF_Annot10DrawBorderEP16CFX_RenderDevicePK10CFX_MatrixPK18CPDF_RenderOptions(%class.CPDF_Annot* nocapture readonly, %class.CFX_RenderDevice*, %class.CFX_Matrix*, %class.CPDF_RenderOptions* readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { <2 x float>, <2 x float> }*
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca %"class.fxcrt::ByteString", align 8
  %16 = alloca %class.CFX_GraphStateData, align 8
  %17 = alloca %"class.std::__1::vector.313", align 8
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %class.CFX_FloatRect*
  %20 = alloca %class.CFX_PathData, align 8
  %21 = alloca %struct.CFX_FillRenderOptions, align 1
  %22 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 16
  br i1 %24, label %281, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %28 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kFE, i64 0, i64 0)) #9
  %29 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %27, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %281

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %1, i64 0, i32 6
  %34 = load i8, i8* %33, align 8, !range !8
  %35 = icmp ne i8 %34, 0
  %36 = and i32 %29, 4
  %37 = icmp eq i32 %36, 0
  %38 = and i1 %37, %35
  br i1 %38, label %281, label %39

39:                                               ; preds = %32
  %40 = and i32 %29, 32
  %41 = icmp eq i32 %40, 0
  %42 = or i1 %41, %35
  br i1 %42, label %43, label %281

43:                                               ; preds = %39
  %44 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %45 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #9
  %46 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %44, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  %47 = icmp eq %class.CPDF_Dictionary* %46, null
  br i1 %47, label %48, label %93

48:                                               ; preds = %43
  %49 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %50 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN6pdfium10annotationL7kBorderE, i64 0, i64 0)) #9
  %51 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %49, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  %52 = icmp eq %class.CPDF_Array* %51, null
  br i1 %52, label %116, label %53

53:                                               ; preds = %48
  %54 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %51, i64 2) #9
  %55 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %51, i64 0, i32 1
  %56 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %51, i64 0, i32 1, i32 0, i32 1
  %57 = bitcast %"class.fxcrt::RetainPtr.247"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.245"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = icmp eq i64 %61, 32
  br i1 %62, label %63, label %111

63:                                               ; preds = %53
  %64 = call %class.CPDF_Array* @_ZN10CPDF_Array10GetArrayAtEm(%class.CPDF_Array* nonnull %51, i64 3) #9
  %65 = icmp eq %class.CPDF_Array* %64, null
  br i1 %65, label %281, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %64, i64 0, i32 1
  %68 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %64, i64 0, i32 1, i32 0, i32 1
  %69 = bitcast %"class.fxcrt::RetainPtr.247"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.245"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 3
  %75 = icmp eq i64 %73, 0
  br i1 %75, label %90, label %76

76:                                               ; preds = %66, %87
  %77 = phi i64 [ %88, %87 ], [ 0, %66 ]
  %78 = call %class.CPDF_Object* @_ZN10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %64, i64 %77) #9
  %79 = icmp eq %class.CPDF_Object* %78, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %76
  %81 = bitcast %class.CPDF_Object* %78 to i32 (%class.CPDF_Object*)***
  %82 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %81, align 8
  %83 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %82, i64 10
  %84 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %83, align 8
  %85 = call i32 %84(%class.CPDF_Object* nonnull %78) #9
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %76, %80
  %88 = add nuw i64 %77, 1
  %89 = icmp ult i64 %88, %74
  br i1 %89, label %76, label %90

90:                                               ; preds = %87, %80, %66
  %91 = phi i64 [ 0, %66 ], [ %77, %80 ], [ %88, %87 ]
  %92 = icmp eq i64 %91, %74
  br i1 %92, label %281, label %111

93:                                               ; preds = %43
  %94 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #9
  %95 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %95, align 8
  %96 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %11, %class.CPDF_Dictionary* nonnull %46, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #9
  %97 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #9
  %98 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %46, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %13) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #9
  %99 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %95, align 8
  %100 = icmp eq %"class.fxcrt::StringDataTemplate"* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %99, i64 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %106, !prof !15

105:                                              ; preds = %101, %93
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !16
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !17
  unreachable

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %99, i64 0, i32 3, i64 0
  %108 = load i8, i8* %107, align 1
  %109 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #9
  %110 = call float @_ZNK15CPDF_Dictionary12GetNumberForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %46, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  br label %111

111:                                              ; preds = %90, %53, %106
  %112 = phi float [ %110, %106 ], [ %54, %90 ], [ %54, %53 ]
  %113 = phi %class.CPDF_Array* [ %98, %106 ], [ %64, %90 ], [ null, %53 ]
  %114 = phi i8 [ %108, %106 ], [ 68, %90 ], [ 83, %53 ]
  %115 = fcmp ugt float %112, 0.000000e+00
  br i1 %115, label %116, label %281

116:                                              ; preds = %48, %111
  %117 = phi i8 [ %114, %111 ], [ 83, %48 ]
  %118 = phi %class.CPDF_Array* [ %113, %111 ], [ null, %48 ]
  %119 = phi float [ %112, %111 ], [ 1.000000e+00, %48 ]
  %120 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %121 = bitcast %"class.fxcrt::ByteString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6pdfium10annotationL2kCE, i64 0, i64 0)) #9
  %122 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %120, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %15) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #9
  %123 = icmp eq %class.CPDF_Array* %122, null
  br i1 %123, label %139, label %124

124:                                              ; preds = %116
  %125 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %122, i64 0) #9
  %126 = fmul float %125, 2.550000e+02
  %127 = fptosi float %126 to i32
  %128 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %122, i64 1) #9
  %129 = fmul float %128, 2.550000e+02
  %130 = fptosi float %129 to i32
  %131 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %122, i64 2) #9
  %132 = fmul float %131, 2.550000e+02
  %133 = fptosi float %132 to i32
  %134 = shl i32 %127, 16
  %135 = shl i32 %130, 8
  %136 = or i32 %134, %135
  %137 = or i32 %136, %133
  %138 = or i32 %137, -16777216
  br label %139

139:                                              ; preds = %116, %124
  %140 = phi i32 [ %138, %124 ], [ -16777216, %116 ]
  %141 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.313" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.313" }* @__const._ZN10CPDF_Annot10DrawBorderEP16CFX_RenderDevicePK10CFX_MatrixPK18CPDF_RenderOptions.graph_state, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %16) #9
  %142 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 4
  store float %119, float* %142, align 4
  switch i8 %117, label %238 [
    i8 85, label %280
    i8 68, label %143
  ]

143:                                              ; preds = %139
  %144 = icmp eq %class.CPDF_Array* %118, null
  br i1 %144, label %236, label %145

145:                                              ; preds = %143
  %146 = bitcast %"class.std::__1::vector.313"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #9
  %147 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %118, i64 0, i32 1
  %148 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %118, i64 0, i32 1, i32 0, i32 1
  %149 = bitcast %"class.fxcrt::RetainPtr.247"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.std::__1::vector.245"* %147 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = sub i64 %150, %152
  %154 = ashr exact i64 %153, 3
  call void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.313"* nonnull sret %17, %class.CPDF_Array* nonnull %118, i64 %154) #9
  %155 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 5
  %156 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %155, i64 0, i32 0, i32 0
  %157 = load float*, float** %156, align 8
  %158 = icmp eq float* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %145
  %160 = ptrtoint float* %157 to i64
  %161 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 5, i32 0, i32 1
  %162 = bitcast float** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast float* %157 to i8*
  call void @_ZdlPv(i8* %163) #10
  %164 = bitcast %"class.std::__1::vector.313"* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 24, i1 false) #9
  br label %165

165:                                              ; preds = %159, %145
  %166 = bitcast %"class.std::__1::vector.313"* %17 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector.313"* %155 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %17, i64 0, i32 0, i32 1
  %170 = bitcast float** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 5, i32 0, i32 1
  %173 = bitcast float** %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %175 = bitcast float** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %178 = bitcast float** %177 to i64*
  store i64 %176, i64* %178, align 8
  %179 = inttoptr i64 %171 to float*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #9
  %180 = sub i64 %171, %167
  %181 = and i64 %180, 4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %238, label %183

183:                                              ; preds = %165
  %184 = inttoptr i64 %176 to float*
  %185 = getelementptr inbounds float, float* %179, i64 -1
  %186 = icmp eq float* %179, %184
  br i1 %186, label %193, label %187

187:                                              ; preds = %183
  %188 = bitcast float* %185 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = inttoptr i64 %171 to i32*
  store i32 %189, i32* %190, align 4
  %191 = getelementptr inbounds float, float* %179, i64 1
  %192 = ptrtoint float* %191 to i64
  store i64 %192, i64* %173, align 8
  br label %238

193:                                              ; preds = %183
  %194 = ashr exact i64 %180, 2
  %195 = add nsw i64 %194, 1
  %196 = icmp ugt i64 %195, 4611686018427387903
  br i1 %196, label %197, label %199

197:                                              ; preds = %193
  %198 = bitcast %"class.std::__1::vector.313"* %155 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %198) #11
  unreachable

199:                                              ; preds = %193
  %200 = sub i64 %176, %167
  %201 = ashr exact i64 %200, 2
  %202 = icmp ult i64 %201, 2305843009213693951
  br i1 %202, label %203, label %211

203:                                              ; preds = %199
  %204 = ashr exact i64 %200, 1
  %205 = icmp ult i64 %204, %195
  %206 = select i1 %205, i64 %195, i64 %204
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %216, label %208

208:                                              ; preds = %203
  %209 = icmp ugt i64 %206, 4611686018427387903
  br i1 %209, label %210, label %211

210:                                              ; preds = %208
  call void @abort() #11
  unreachable

211:                                              ; preds = %208, %199
  %212 = phi i64 [ %206, %208 ], [ 4611686018427387903, %199 ]
  %213 = shl i64 %212, 2
  %214 = call i8* @_Znwm(i64 %213) #10
  %215 = bitcast i8* %214 to float*
  br label %216

216:                                              ; preds = %211, %203
  %217 = phi i64 [ %212, %211 ], [ 0, %203 ]
  %218 = phi i8* [ %214, %211 ], [ null, %203 ]
  %219 = phi float* [ %215, %211 ], [ null, %203 ]
  %220 = getelementptr inbounds float, float* %219, i64 %194
  %221 = getelementptr inbounds float, float* %219, i64 %217
  %222 = ptrtoint float* %221 to i64
  %223 = bitcast float* %185 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = bitcast float* %220 to i32*
  store i32 %224, i32* %225, align 4
  %226 = getelementptr inbounds float, float* %220, i64 1
  %227 = ptrtoint float* %226 to i64
  %228 = ptrtoint float* %219 to i64
  %229 = icmp sgt i64 %180, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %216
  %231 = inttoptr i64 %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %231, i64 %180, i1 false) #9
  br label %232

232:                                              ; preds = %230, %216
  store i64 %228, i64* %168, align 8
  store i64 %227, i64* %173, align 8
  store i64 %222, i64* %178, align 8
  %233 = icmp eq i64 %167, 0
  br i1 %233, label %238, label %234

234:                                              ; preds = %232
  %235 = inttoptr i64 %167 to i8*
  call void @_ZdlPv(i8* %235) #10
  br label %238

236:                                              ; preds = %143
  %237 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %16, i64 0, i32 5
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.313"* %237, float* getelementptr inbounds ([2 x float], [2 x float]* @.ref.tmp, i64 0, i64 0), float* getelementptr inbounds ([2 x float], [2 x float]* @.ref.tmp, i64 1, i64 0)) #9
  br label %238

238:                                              ; preds = %234, %232, %187, %139, %165, %236
  %239 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %239) #9
  %240 = bitcast <2 x i64>* %7 to i8*
  %241 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %241, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %240)
  %242 = bitcast <2 x i64>* %7 to %class.CFX_FloatRect*
  %243 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %240, i8 -1, i64 16, i1 false) #9
  %244 = load i8, i8* %243, align 2, !range !8
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %255, label %246

246:                                              ; preds = %238
  %247 = getelementptr inbounds %class.CPDF_Annot, %class.CPDF_Annot* %0, i64 0, i32 7
  %248 = load i8, i8* %247, align 1, !range !8
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %252 = call { <2 x float>, <2 x float> } @_ZN10CPDF_Annot26BoundingRectFromQuadPointsEPK15CPDF_Dictionary(%class.CPDF_Dictionary* %251) #9
  %253 = extractvalue { <2 x float>, <2 x float> } %252, 0
  %254 = extractvalue { <2 x float>, <2 x float> } %252, 1
  br label %261

255:                                              ; preds = %246, %238
  %256 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %257 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6pdfium10annotationL5kRectE, i64 0, i64 0)) #9
  %258 = call { <2 x float>, <2 x float> } @_ZNK15CPDF_Dictionary10GetRectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %256, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #9
  %259 = extractvalue { <2 x float>, <2 x float> } %258, 0
  %260 = extractvalue { <2 x float>, <2 x float> } %258, 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #9
  br label %261

261:                                              ; preds = %250, %255
  %262 = phi <2 x float> [ %253, %250 ], [ %259, %255 ]
  %263 = phi <2 x float> [ %254, %250 ], [ %260, %255 ]
  %264 = bitcast <2 x i64>* %7 to <2 x float>*
  store <2 x float> %262, <2 x float>* %264, align 16
  %265 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %263, <2 x float>* %265, align 8
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %242) #9
  %266 = load <2 x i64>, <2 x i64>* %7, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %240)
  store <2 x i64> %266, <2 x i64>* %18, align 16
  %267 = fmul float %119, 5.000000e-01
  call void @_ZN13CFX_FloatRect7DeflateEff(%class.CFX_FloatRect* nonnull %19, float %267, float %267) #9
  %268 = bitcast %class.CFX_PathData* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #9
  %269 = bitcast %class.CFX_PathData* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %20) #9
  call void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData* nonnull %20, %class.CFX_FloatRect* nonnull dereferenceable(16) %19) #9
  %270 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %270) #9
  %271 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %21, i64 0, i32 1
  store i8 0, i8* %270, align 1
  store i8 0, i8* %271, align 1
  %272 = icmp eq %class.CPDF_RenderOptions* %3, null
  br i1 %272, label %278, label %273

273:                                              ; preds = %261
  %274 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %3, i64 0, i32 2, i32 6
  %275 = load i8, i8* %274, align 1, !range !8
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %278, label %277

277:                                              ; preds = %273
  store i8 2, i8* %271, align 1
  br label %278

278:                                              ; preds = %273, %261, %277
  %279 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %1, %class.CFX_PathData* nonnull %20, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* nonnull %16, i32 %140, i32 %140, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %21) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %270) #9
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %239) #9
  br label %280

280:                                              ; preds = %139, %278
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %141) #9
  br label %281

281:                                              ; preds = %90, %63, %25, %280, %111, %39, %32, %4
  ret void
}

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare %class.CPDF_Array* @_ZN10CPDF_Array10GetArrayAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

declare %class.CPDF_Object* @_ZN10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

declare float @_ZNK15CPDF_Dictionary12GetNumberForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData*) unnamed_addr #2

declare void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.313"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #2

declare void @_ZN13CFX_FloatRect7DeflateEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #2

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #2

declare void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData*) unnamed_addr #3

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #2

declare %class.CPDF_Stream* @_ZN15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK15CPDF_Dictionary12GetMatrixForERKN5fxcrt10ByteStringE(%class.CFX_Matrix* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN10CFX_Matrix9MatchRectERK13CFX_FloatRectS2_(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.144"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.144"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.144"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Form*, %class.CPDF_Form** %10, align 8
  store %class.CPDF_Form* null, %class.CPDF_Form** %10, align 8
  %12 = icmp eq %class.CPDF_Form* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %class.CPDF_Form* %11 to void (%class.CPDF_Form*)***
  %15 = load void (%class.CPDF_Form*)**, void (%class.CPDF_Form*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %15, i64 1
  %17 = load void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %16, align 8
  tail call void %17(%class.CPDF_Form* nonnull %11) #9
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::RetainPtr.247"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12CPDF_BooleanC1Eb(%class.CPDF_Boolean*, i1 zeroext) unnamed_addr #2

declare void @_ZN9CPDF_FormC1EP13CPDF_DocumentP15CPDF_DictionaryP11CPDF_Stream(%class.CPDF_Form*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.313"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.313"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.313"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.313"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.313"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.313", %"class.std::__1::vector.313"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.313"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143086413}
!4 = !{i32 -2143086392}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI12CPDF_BooleanJbEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI12CPDF_BooleanJbEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI9CPDF_FormNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!14 = distinct !{!14, !"_ZNK10CFX_MatrixmlERKS_"}
!15 = !{!"branch_weights", i32 1, i32 2000}
!16 = !{i32 -2143505194}
!17 = !{i32 -2143505173}
