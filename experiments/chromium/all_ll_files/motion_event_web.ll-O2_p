; ModuleID = '../../content/browser/renderer_host/input/motion_event_web.cc'
source_filename = "../../content/browser/renderer_host/input/motion_event_web.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::MotionEventWeb" = type <{ %"class.ui::MotionEvent", %"class.blink::WebTouchEvent", i32, i32, i32, [4 x i8] }>
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }

@_ZTVN7content14MotionEventWebE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::MotionEventWeb"*)* @_ZN7content14MotionEventWebD2Ev to i8*), i8* bitcast (void (%"class.content::MotionEventWeb"*)* @_ZN7content14MotionEventWebD0Ev to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb16GetUniqueEventIdEv to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb9GetActionEv to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb14GetActionIndexEv to i8*), i8* bitcast (i64 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb15GetPointerCountEv to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb12GetPointerIdEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb4GetXEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb4GetYEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb7GetRawXEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb7GetRawYEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb13GetTouchMajorEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb13GetTouchMinorEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb14GetOrientationEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb11GetPressureEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb8GetTiltXEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb8GetTiltYEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb8GetTwistEm to i8*), i8* bitcast (float (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb21GetTangentialPressureEm to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*, i64)* @_ZNK7content14MotionEventWeb11GetToolTypeEm to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb14GetButtonStateEv to i8*), i8* bitcast (i32 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb8GetFlagsEv to i8*), i8* bitcast (i64 (%"class.content::MotionEventWeb"*)* @_ZNK7content14MotionEventWeb12GetEventTimeEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*)* @_ZNK2ui11MotionEvent17GetClassificationEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEvent"*)* @_ZNK2ui11MotionEvent14GetHistorySizeEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEvent"*, i64)* @_ZNK2ui11MotionEvent22GetHistoricalEventTimeEm to i8*), i8* bitcast (float (%"class.ui::MotionEvent"*, i64, i64)* @_ZNK2ui11MotionEvent23GetHistoricalTouchMajorEmm to i8*), i8* bitcast (float (%"class.ui::MotionEvent"*, i64, i64)* @_ZNK2ui11MotionEvent14GetHistoricalXEmm to i8*), i8* bitcast (float (%"class.ui::MotionEvent"*, i64, i64)* @_ZNK2ui11MotionEvent14GetHistoricalYEmm to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*, i64)* @_ZNK2ui11MotionEvent17GetSourceDeviceIdEm to i8*)] }, align 8
@_ZTVN5blink13WebTouchEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink13WebInputEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@switch.table._ZNK7content14MotionEventWeb11GetToolTypeEm = private unnamed_addr constant [4 x i32] [i32 3, i32 2, i32 1, i32 4], align 4

@_ZN7content14MotionEventWebC1ERKN5blink13WebTouchEventE = hidden unnamed_addr alias void (%"class.content::MotionEventWeb"*, %"class.blink::WebTouchEvent"*), void (%"class.content::MotionEventWeb"*, %"class.blink::WebTouchEvent"*)* @_ZN7content14MotionEventWebC2ERKN5blink13WebTouchEventE
@_ZN7content14MotionEventWebD1Ev = hidden unnamed_addr alias void (%"class.content::MotionEventWeb"*), void (%"class.content::MotionEventWeb"*)* @_ZN7content14MotionEventWebD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14MotionEventWebC2ERKN5blink13WebTouchEventE(%"class.content::MotionEventWeb"* nocapture, %"class.blink::WebTouchEvent"* dereferenceable(1272)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.content::MotionEventWeb"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN7content14MotionEventWebE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebInputEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 1
  %7 = bitcast float* %5 to i8*
  %8 = bitcast float* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %9 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 1
  %11 = bitcast i32* %9 to i8*
  %12 = bitcast i32* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 1232, i1 false) #6
  %13 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 4
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %23 [
    i32 28, label %16
    i32 30, label %19
    i32 29, label %22
  ]

16:                                               ; preds = %2
  %17 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits23AllTouchPointsHaveStateERKN5blink13WebTouchEventENS1_5mojom10TouchStateE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1, i32 2) #6
  %18 = select i1 %17, i32 1, i32 5
  br label %23

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits23AllTouchPointsHaveStateERKN5blink13WebTouchEventENS1_5mojom10TouchStateE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1, i32 1) #6
  %21 = select i1 %20, i32 2, i32 6
  br label %23

22:                                               ; preds = %2
  br label %23

23:                                               ; preds = %2, %16, %19, %22
  %24 = phi i32 [ 3, %22 ], [ %18, %16 ], [ %21, %19 ], [ 4, %2 ]
  store i32 %24, i32* %13, align 8
  %25 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 3
  %26 = load i32, i32* %10, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %23
  %29 = zext i32 %26 to i64
  br label %30

30:                                               ; preds = %34, %28
  %31 = phi i64 [ 0, %28 ], [ %35, %34 ]
  %32 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %31, i32 1
  %33 = load i32, i32* %32, align 4
  switch i32 %33, label %37 [
    i32 0, label %34
    i32 4, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = add nuw nsw i64 %31, 1
  %36 = icmp eq i64 %35, %29
  br i1 %36, label %39, label %30

37:                                               ; preds = %30
  %38 = trunc i64 %31 to i32
  br label %39

39:                                               ; preds = %34, %23, %37
  %40 = phi i32 [ %38, %37 ], [ -1, %23 ], [ -1, %34 ]
  store i32 %40, i32* %25, align 4
  %41 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 4
  %42 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 7
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %41, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14MotionEventWebD2Ev(%"class.content::MotionEventWeb"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14MotionEventWebD0Ev(%"class.content::MotionEventWeb"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.content::MotionEventWeb"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb16GetUniqueEventIdEv(%"class.content::MotionEventWeb"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb9GetActionEv(%"class.content::MotionEventWeb"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb14GetActionIndexEv(%"class.content::MotionEventWeb"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content14MotionEventWeb15GetPointerCountEv(%"class.content::MotionEventWeb"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb12GetPointerIdEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb4GetXEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 11, i32 0
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb4GetYEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 11, i32 1
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb7GetRawXEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 12, i32 0
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb7GetRawYEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 12, i32 1
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb13GetTouchMajorEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 2
  %4 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 3
  %5 = load float, float* %3, align 4
  %6 = load float, float* %4, align 4
  %7 = fcmp olt float %5, %6
  %8 = select i1 %7, float %6, float %5
  %9 = fmul float %8, 2.000000e+00
  ret float %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb13GetTouchMinorEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 2
  %4 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 3
  %5 = load float, float* %4, align 4
  %6 = load float, float* %3, align 4
  %7 = fcmp olt float %5, %6
  %8 = select i1 %7, float %5, float %6
  %9 = fmul float %8, 2.000000e+00
  ret float %9
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb14GetOrientationEm(%"class.content::MotionEventWeb"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 4
  %4 = load float, float* %3, align 4
  %5 = fmul float %4, 0x400921FB60000000
  %6 = fdiv float %5, 1.800000e+02
  %7 = bitcast %"class.content::MotionEventWeb"* %0 to i32 (%"class.content::MotionEventWeb"*, i64)***
  %8 = load i32 (%"class.content::MotionEventWeb"*, i64)**, i32 (%"class.content::MotionEventWeb"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.content::MotionEventWeb"*, i64)*, i32 (%"class.content::MotionEventWeb"*, i64)** %8, i64 19
  %10 = load i32 (%"class.content::MotionEventWeb"*, i64)*, i32 (%"class.content::MotionEventWeb"*, i64)** %9, align 8
  %11 = tail call i32 %10(%"class.content::MotionEventWeb"* %0, i64 %1) #6
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %31

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 1
  %17 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %27

19:                                               ; preds = %13
  %20 = icmp slt i32 %18, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = fadd float %6, 0x3FF921FB60000000
  br label %39

23:                                               ; preds = %19
  %24 = icmp slt i32 %15, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = fadd float %6, 0xC00921FB60000000
  ret float %26

27:                                               ; preds = %13, %23
  %28 = icmp sgt i32 %18, 0
  %29 = fadd float %6, 0xBFF921FB60000000
  %30 = select i1 %28, float %29, float %6
  ret float %30

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 2
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 3
  %35 = load float, float* %34, align 4
  %36 = fcmp ogt float %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = fadd float %6, 0xBFF921FB60000000
  br label %39

39:                                               ; preds = %21, %31, %37
  %40 = phi float [ %38, %37 ], [ %6, %31 ], [ %22, %21 ]
  ret float %40
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb11GetPressureEm(%"class.content::MotionEventWeb"* nocapture readnone, i64) unnamed_addr #1 align 2 {
  ret float 0.000000e+00
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb8GetTiltXEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  ret float %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb8GetTiltYEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  ret float %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb8GetTwistEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  ret float %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK7content14MotionEventWeb21GetTangentialPressureEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 4
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content14MotionEventWeb12GetEventTimeEv(%"class.content::MotionEventWeb"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb11GetToolTypeEm(%"class.content::MotionEventWeb"* nocapture readonly, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 2, i64 %1, i32 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 4
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZNK7content14MotionEventWeb11GetToolTypeEm, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10

11:                                               ; preds = %2
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb14GetButtonStateEv(%"class.content::MotionEventWeb"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7content14MotionEventWeb8GetFlagsEv(%"class.content::MotionEventWeb"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %0, i64 0, i32 1, i32 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32 %3) #6
  ret i32 %4
}

declare i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32) local_unnamed_addr #4

declare i32 @_ZNK2ui11MotionEvent17GetClassificationEv(%"class.ui::MotionEvent"*) unnamed_addr #4

declare i64 @_ZNK2ui11MotionEvent14GetHistorySizeEv(%"class.ui::MotionEvent"*) unnamed_addr #4

declare i64 @_ZNK2ui11MotionEvent22GetHistoricalEventTimeEm(%"class.ui::MotionEvent"*, i64) unnamed_addr #4

declare float @_ZNK2ui11MotionEvent23GetHistoricalTouchMajorEmm(%"class.ui::MotionEvent"*, i64, i64) unnamed_addr #4

declare float @_ZNK2ui11MotionEvent14GetHistoricalXEmm(%"class.ui::MotionEvent"*, i64, i64) unnamed_addr #4

declare float @_ZNK2ui11MotionEvent14GetHistoricalYEmm(%"class.ui::MotionEvent"*, i64, i64) unnamed_addr #4

declare i32 @_ZNK2ui11MotionEvent17GetSourceDeviceIdEm(%"class.ui::MotionEvent"*, i64) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare zeroext i1 @_ZN7content19WebTouchEventTraits23AllTouchPointsHaveStateERKN5blink13WebTouchEventENS1_5mojom10TouchStateE(%"class.blink::WebTouchEvent"* dereferenceable(1272), i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
