; ModuleID = '../../components/component_updater/installer_policies/autofill_states_component_installer.cc'
source_filename = "../../components/component_updater/installer_policies/autofill_states_component_installer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [32 x i8] }
%"class.component_updater::AutofillStatesComponentInstallerPolicy" = type { %"class.component_updater::ComponentInstallerPolicy", %class.PrefService* }
%"class.component_updater::ComponentInstallerPolicy" = type { i32 (...)** }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.30", %class.scoped_refptr.53, %"class.base::RepeatingCallback.54", %class.scoped_refptr.55, %"class.std::__1::unordered_map.56" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.44" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.33, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.33 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted.34", [4 x i8] }>
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.53 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted.34" }>
%"class.base::RepeatingCallback.54" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.55 = type { %class.PrefRegistry* }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted", %class.scoped_refptr, %"class.std::__1::unordered_map", %"class.std::__1::set" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.56" = type { %"class.std::__1::__hash_table.57" }
%"class.std::__1::__hash_table.57" = type <{ %"class.std::__1::unique_ptr.58", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.76", [4 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60", %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base.61"** }
%"struct.std::__1::__hash_node_base.61" = type { %"struct.std::__1::__hash_node_base.61"* }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::__bucket_list_deallocator.63" }
%"class.std::__1::__bucket_list_deallocator.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base.61" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%class.PrefRegistrySimple = type { %class.PrefRegistry }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.update_client::CrxInstaller::Result" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.80" }
%"union.absl::variant_internal::DestructibleUnionImpl.80" = type { %"union.absl::variant_internal::DestructibleUnionImpl.81" }
%"union.absl::variant_internal::DestructibleUnionImpl.81" = type { %"union.absl::variant_internal::DestructibleUnionImpl.82" }
%"union.absl::variant_internal::DestructibleUnionImpl.82" = type { %"union.absl::variant_internal::DestructibleUnionImpl.83" }
%"union.absl::variant_internal::DestructibleUnionImpl.83" = type { %"class.std::__1::basic_string" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::Version" = type { %"class.std::__1::vector.107" }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { i32*, i32*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { i32* }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.base::FilePath"*, %"class.base::FilePath"*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.base::FilePath"* }
%"class.autofill::CountryDataMap" = type { %"class.std::__1::map.165", %"class.std::__1::map.127", %"class.std::__1::vector.158" }
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.127" = type { %"class.std::__1::__tree.128" }
%"class.std::__1::__tree.128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i8* }
%"class.component_updater::ComponentUpdateService" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.component_updater::ComponentInstaller" = type { %"class.update_client::CrxInstaller.base", %"class.base::FilePath", %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.138", %class.scoped_refptr.144, %class.scoped_refptr.146, %class.scoped_refptr.148 }
%"class.update_client::CrxInstaller.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.137" }>
%"class.base::RefCountedThreadSafe.137" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.component_updater::ComponentInstallerPolicy"* }
%class.scoped_refptr.144 = type { %"class.update_client::ActionHandler"* }
%"class.update_client::ActionHandler" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.145", [4 x i8] }>
%"class.base::RefCountedThreadSafe.145" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.146 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.147" }>
%"class.base::RefCountedThreadSafe.147" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.148 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.update_client::CrxInstaller" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.137", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZN8autofill5prefs22kAutofillStatesDataDirE = external constant [0 x i8], align 1
@_ZTVN17component_updater38AutofillStatesComponentInstallerPolicyE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicyD2Ev to i8*), i8* bitcast (void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicyD0Ev to i8*), i8* bitcast (i1 (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*, %"class.base::DictionaryValue"*, %"class.base::FilePath"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy18VerifyInstallationERKN4base15DictionaryValueERKNS1_8FilePathE to i8*), i8* bitcast (i1 (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy42SupportsGroupPolicyEnabledComponentUpdatesEv to i8*), i8* bitcast (i1 (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy25RequiresNetworkEncryptionEv to i8*), i8* bitcast (void (%"struct.update_client::CrxInstaller::Result"*, %"class.component_updater::AutofillStatesComponentInstallerPolicy"*, %"class.base::DictionaryValue"*, %"class.base::FilePath"*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicy15OnCustomInstallERKN4base15DictionaryValueERKNS1_8FilePathE to i8*), i8* bitcast (void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicy17OnCustomUninstallEv to i8*), i8* bitcast (void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*, %"class.base::Version"*, %"class.base::FilePath"*, %"class.base::DictionaryValue"*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicy14ComponentReadyERKN4base7VersionERKNS1_8FilePathENSt3__110unique_ptrINS1_15DictionaryValueENS8_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.base::FilePath"*, %"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy21GetRelativeInstallDirEv to i8*), i8* bitcast (void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*, %"class.std::__1::vector"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy7GetHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy7GetNameEv to i8*), i8* bitcast (void (%"class.std::__1::map.127"*, %"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy22GetInstallerAttributesEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"AutofillStates\00", align 1
@_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E = internal constant %"struct.std::__1::array" { [32 x i8] c"D\86\FDab\E6\D04A\A8\B2\F2\047K\B7\0B\AE\93\12\9DX\15\B5\DD\89\F2\98s\D3\08\97" }, align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"Autofill States Data\00", align 1

@_ZN17component_updater38AutofillStatesComponentInstallerPolicyC1EP11PrefService = hidden unnamed_addr alias void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*, %class.PrefService*), void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*, %class.PrefService*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicyC2EP11PrefService
@_ZN17component_updater38AutofillStatesComponentInstallerPolicyD1Ev = hidden unnamed_addr alias void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*), void (%"class.component_updater::AutofillStatesComponentInstallerPolicy"*)* @_ZN17component_updater38AutofillStatesComponentInstallerPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicy13RegisterPrefsEP18PrefRegistrySimple(%class.PrefRegistrySimple*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8autofill5prefs22kAutofillStatesDataDirE, i64 0, i64 0)) #11
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #12
  unreachable

9:                                                ; preds = %1
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  br label %24

19:                                               ; preds = %9
  %20 = trunc i64 %5 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = icmp eq i64 %5, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19, %11
  %25 = phi i8* [ %14, %11 ], [ %4, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8autofill5prefs22kAutofillStatesDataDirE, i64 0, i64 0), i64 %5, i1 false) #11
  br label %26

26:                                               ; preds = %19, %24
  %27 = phi i8* [ %4, %19 ], [ %25, %24 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 %5
  store i8 0, i8* %28, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 0, i8* %31, align 1
  store i8 0, i8* %29, align 8
  call void @_ZN18PrefRegistrySimple18RegisterStringPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_j(%class.PrefRegistrySimple* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 0) #11
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %26, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %38 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %37, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

declare void @_ZN18PrefRegistrySimple18RegisterStringPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_j(%class.PrefRegistrySimple*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicyC2EP11PrefService(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture, %class.PrefService*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.component_updater::AutofillStatesComponentInstallerPolicy", %"class.component_updater::AutofillStatesComponentInstallerPolicy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN17component_updater38AutofillStatesComponentInstallerPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.component_updater::AutofillStatesComponentInstallerPolicy", %"class.component_updater::AutofillStatesComponentInstallerPolicy"* %0, i64 0, i32 1
  store %class.PrefService* %1, %class.PrefService** %4, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicyD2Ev(%"class.component_updater::AutofillStatesComponentInstallerPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::AutofillStatesComponentInstallerPolicy", %"class.component_updater::AutofillStatesComponentInstallerPolicy"* %0, i64 0, i32 0
  tail call void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicyD0Ev(%"class.component_updater::AutofillStatesComponentInstallerPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::AutofillStatesComponentInstallerPolicy", %"class.component_updater::AutofillStatesComponentInstallerPolicy"* %0, i64 0, i32 0
  tail call void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"* %2) #11
  %3 = bitcast %"class.component_updater::AutofillStatesComponentInstallerPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy42SupportsGroupPolicyEnabledComponentUpdatesEv(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy25RequiresNetworkEncryptionEv(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicy15OnCustomInstallERKN4base15DictionaryValueERKNS1_8FilePathE(%"struct.update_client::CrxInstaller::Result"* noalias nocapture sret, %"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone, %"class.base::DictionaryValue"* nocapture readnone dereferenceable(32), %"class.base::FilePath"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.update_client::CrxInstaller::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicy17OnCustomUninstallEv(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater38AutofillStatesComponentInstallerPolicy14ComponentReadyERKN4base7VersionERKNS1_8FilePathENSt3__110unique_ptrINS1_15DictionaryValueENS8_14default_deleteISA_EEEE(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readonly, %"class.base::Version"* nocapture readnone dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.component_updater::AutofillStatesComponentInstallerPolicy", %"class.component_updater::AutofillStatesComponentInstallerPolicy"* %0, i64 0, i32 1
  %7 = load %class.PrefService*, %class.PrefService** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8autofill5prefs22kAutofillStatesDataDirE, i64 0, i64 0)) #11
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #12
  unreachable

13:                                               ; preds = %4
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %24, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %29

24:                                               ; preds = %13
  %25 = trunc i64 %9 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24, %15
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %23, %15 ]
  %31 = phi i8* [ %8, %24 ], [ %18, %15 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8autofill5prefs22kAutofillStatesDataDirE, i64 0, i64 0), i64 %9, i1 false) #11
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %30, %29 ]
  %34 = phi i8* [ %8, %24 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %9
  store i8 0, i8* %35, align 1
  call void @_ZN11PrefService11SetFilePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base8FilePathE(%class.PrefService* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.base::FilePath"* dereferenceable(24) %2) #11
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %32, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %43 = icmp eq %"class.base::DictionaryValue"* %3, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %45) #11
  %46 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %42, %44
  ret void
}

declare void @_ZN11PrefService11SetFilePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base8FilePathE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy18VerifyInstallationERKN4base15DictionaryValueERKNS1_8FilePathE(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone, %"class.base::DictionaryValue"* nocapture readnone dereferenceable(32), %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.std::__1::vector.120", align 8
  %8 = bitcast %"class.std::__1::vector.120"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %11 = tail call %"class.autofill::CountryDataMap"* @_ZN8autofill14CountryDataMap11GetInstanceEv() #11, !noalias !2
  %12 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8, !noalias !2
  %14 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %11, i64 0, i32 2, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8, !noalias !2
  %16 = icmp eq %"class.std::__1::basic_string"* %13, %15
  br i1 %16, label %81, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.base::FilePath"* %5 to i8*
  %19 = bitcast %"class.base::FilePath"* %6 to i8*
  %20 = bitcast %"class.base::FilePath"** %9 to i64*
  br label %21

21:                                               ; preds = %42, %17
  %22 = phi %"class.std::__1::basic_string"* [ %13, %17 ], [ %43, %42 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11, !noalias !2
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %6) #11
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %25 to i64
  %34 = select i1 %26, i64 %32, i64 %33
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* nonnull %6, i8* %30, i64 %34) #11
  %35 = load %"class.base::FilePath"*, %"class.base::FilePath"** %9, align 8, !alias.scope !2
  %36 = load %"class.base::FilePath"*, %"class.base::FilePath"** %10, align 8, !alias.scope !2
  %37 = icmp ult %"class.base::FilePath"* %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %21
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %35, %"class.base::FilePath"* nonnull dereferenceable(24) %5) #11
  %39 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %35, i64 1
  %40 = ptrtoint %"class.base::FilePath"* %39 to i64
  store i64 %40, i64* %20, align 8, !alias.scope !2
  br label %42

41:                                               ; preds = %21
  call void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.120"* nonnull %7, %"class.base::FilePath"* nonnull dereferenceable(24) %5) #11
  br label %42

42:                                               ; preds = %41, %38
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #11
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11, !noalias !2
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 1
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %15
  br i1 %44, label %45, label %21

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 0
  %47 = load %"class.base::FilePath"*, %"class.base::FilePath"** %46, align 8
  %48 = load %"class.base::FilePath"*, %"class.base::FilePath"** %9, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %7, i64 0, i32 0, i32 0
  %50 = icmp eq %"class.base::FilePath"* %47, %48
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.base::FilePath"* %4 to i8*
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %58, %53 ]
  %55 = phi %"class.base::FilePath"* [ %47, %51 ], [ %59, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  call void @_ZNK4base8FilePath6AppendERKS0_(%"class.base::FilePath"* nonnull sret %4, %"class.base::FilePath"* %2, %"class.base::FilePath"* dereferenceable(24) %55) #11
  %56 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %4) #11
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  %57 = zext i1 %56 to i64
  %58 = add nuw nsw i64 %54, %57
  %59 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %55, i64 1
  %60 = icmp eq %"class.base::FilePath"* %59, %48
  br i1 %60, label %61, label %53

61:                                               ; preds = %53
  %62 = load %"class.base::FilePath"*, %"class.base::FilePath"** %49, align 8
  %63 = icmp ne i64 %58, 0
  br label %64

64:                                               ; preds = %61, %45
  %65 = phi %"class.base::FilePath"* [ %62, %61 ], [ %48, %45 ]
  %66 = phi i1 [ %63, %61 ], [ false, %45 ]
  %67 = icmp eq %"class.base::FilePath"* %65, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.base::FilePath"* %65 to i8*
  %70 = load %"class.base::FilePath"*, %"class.base::FilePath"** %9, align 8
  %71 = icmp eq %"class.base::FilePath"* %70, %65
  br i1 %71, label %79, label %72

72:                                               ; preds = %68, %72
  %73 = phi %"class.base::FilePath"* [ %74, %72 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %73, i64 -1
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %74) #11
  %75 = icmp eq %"class.base::FilePath"* %74, %65
  br i1 %75, label %76, label %72

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::vector.120"* %7 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %68
  %80 = phi i8* [ %78, %76 ], [ %69, %68 ]
  store %"class.base::FilePath"* %65, %"class.base::FilePath"** %9, align 8
  call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %3, %64, %79
  %82 = phi i1 [ %66, %64 ], [ %66, %79 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy21GetRelativeInstallDirEv(%"class.base::FilePath"* noalias sret, %"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #11
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy7GetHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 32
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %36, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = icmp ult i64 %15, 32
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E, i64 0, i32 0, i64 %15
  %18 = select i1 %16, i8* %17, i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E, i64 1, i32 0, i64 0)
  %19 = ptrtoint i8* %18 to i64
  %20 = sub i64 %19, ptrtoint (%"struct.std::__1::array"* @_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E to i64)
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E, i64 0, i32 0, i64 0), i64 %20, i1 false) #11
  br label %23

23:                                               ; preds = %22, %11
  br i1 %16, label %24, label %34

24:                                               ; preds = %23
  %25 = load i64, i64* %13, align 8
  %26 = sub i64 ptrtoint (i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E, i64 1, i32 0, i64 0) to i64), %19
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = inttoptr i64 %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %18, i64 %26, i1 false) #11
  %30 = getelementptr inbounds i8, i8* %29, i64 %26
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i64 [ %31, %28 ], [ %25, %24 ]
  store i64 %33, i64* %13, align 8
  br label %58

34:                                               ; preds = %23
  %35 = getelementptr inbounds i8, i8* %10, i64 %20
  store i8* %35, i8** %12, align 8
  br label %58

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %38 = icmp eq i64 %7, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  store i64 %7, i64* %41, align 8
  tail call void @_ZdlPv(i8* nonnull %10) #13
  %42 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #11
  br label %45

43:                                               ; preds = %36
  %44 = icmp ult i64 %5, 4611686018427387903
  br i1 %44, label %45, label %50

45:                                               ; preds = %39, %43
  %46 = phi i64 [ 0, %39 ], [ %5, %43 ]
  %47 = shl i64 %46, 1
  %48 = icmp ugt i64 %47, 32
  %49 = select i1 %48, i64 %47, i64 32
  br label %50

50:                                               ; preds = %45, %43
  %51 = phi i64 [ %49, %45 ], [ 9223372036854775807, %43 ]
  %52 = tail call i8* @_Znwm(i64 %51) #13
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  store i8* %52, i8** %53, align 8
  store i8* %52, i8** %37, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 %51
  store i8* %54, i8** %3, align 8
  %55 = bitcast i8** %53 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN12_GLOBAL__N_130kAutofillStatesPublicKeySHA256E, i64 0, i32 0, i64 0), i64 32, i1 false) #11
  %56 = getelementptr inbounds i8, i8* %52, i64 32
  %57 = ptrtoint i8* %56 to i64
  store i64 %57, i64* %55, align 8
  br label %58

58:                                               ; preds = %32, %34, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy7GetNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 20, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20, i1 false) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 20
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater38AutofillStatesComponentInstallerPolicy22GetInstallerAttributesEv(%"class.std::__1::map.127"* noalias sret, %"class.component_updater::AutofillStatesComponentInstallerPolicy"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map.127", %"class.std::__1::map.127"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::map.127", %"class.std::__1::map.127"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map.127", %"class.std::__1::map.127"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater31RegisterAutofillStatesComponentEPNS_22ComponentUpdateServiceEP11PrefService(%"class.component_updater::ComponentUpdateService"*, %class.PrefService*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = ptrtoint %class.PrefService* %1 to i64
  %5 = tail call i8* @_Znwm(i64 16) #13
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN17component_updater38AutofillStatesComponentInstallerPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = tail call i8* @_Znwm(i64 120) #13
  %10 = bitcast i8* %9 to %"class.component_updater::ComponentInstaller"*
  %11 = bitcast i8* %5 to %"class.component_updater::ComponentInstallerPolicy"*
  tail call void @_ZN17component_updater18ComponentInstallerC1ENSt3__110unique_ptrINS_24ComponentInstallerPolicyENS1_14default_deleteIS3_EEEE13scoped_refptrIN13update_client13ActionHandlerEE(%"class.component_updater::ComponentInstaller"* nonnull %10, %"class.component_updater::ComponentInstallerPolicy"* nonnull %11, %"class.update_client::ActionHandler"* null) #11
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  call void @_ZN17component_updater18ComponentInstaller8RegisterEPNS_22ComponentUpdateServiceEN4base12OnceCallbackIFvvEEE(%"class.component_updater::ComponentInstaller"* nonnull %10, %"class.component_updater::ComponentUpdateService"* %0, %"class.base::OnceCallback"* nonnull %3) #11
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #11
  %17 = atomicrmw sub i32* %13, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = bitcast i8* %9 to %"class.update_client::CrxInstaller"*
  %21 = bitcast i8* %9 to void (%"class.update_client::CrxInstaller"*)***
  %22 = load void (%"class.update_client::CrxInstaller"*)**, void (%"class.update_client::CrxInstaller"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.update_client::CrxInstaller"*)*, void (%"class.update_client::CrxInstaller"*)** %22, i64 5
  %24 = load void (%"class.update_client::CrxInstaller"*)*, void (%"class.update_client::CrxInstaller"*)** %23, align 8
  call void %24(%"class.update_client::CrxInstaller"* nonnull %20) #11
  br label %25

25:                                               ; preds = %2, %19
  ret void
}

declare void @_ZN17component_updater18ComponentInstaller8RegisterEPNS_22ComponentUpdateServiceEN4base12OnceCallbackIFvvEEE(%"class.component_updater::ComponentInstaller"*, %"class.component_updater::ComponentUpdateService"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK4base8FilePath6AppendERKS0_(%"class.base::FilePath"* sret, %"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

declare %"class.autofill::CountryDataMap"* @_ZN8autofill14CountryDataMap11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.120"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::FilePath"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.120"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.120"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::FilePath"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.base::FilePath"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.base::FilePath"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %33, i64 %9
  %35 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %33, i64 %32
  %36 = ptrtoint %"class.base::FilePath"* %35 to i64
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %34, %"class.base::FilePath"* dereferenceable(24) %1) #11
  %37 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %34, i64 1
  %38 = ptrtoint %"class.base::FilePath"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.120", %"class.std::__1::vector.120"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.base::FilePath"*, %"class.base::FilePath"** %39, align 8
  %41 = load %"class.base::FilePath"*, %"class.base::FilePath"** %3, align 8
  %42 = icmp eq %"class.base::FilePath"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.base::FilePath"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.base::FilePath"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.base::FilePath"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %46, i64 -1
  %49 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %47, i64 -1
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %48, %"class.base::FilePath"* dereferenceable(24) %49) #11
  %50 = icmp eq %"class.base::FilePath"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.base::FilePath"*, %"class.base::FilePath"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.base::FilePath"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.base::FilePath"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.base::FilePath"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.base::FilePath"*
  %60 = icmp eq %"class.base::FilePath"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.base::FilePath"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %62, i64 -1
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %63) #11
  %64 = icmp eq %"class.base::FilePath"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

declare void @_ZN17component_updater18ComponentInstallerC1ENSt3__110unique_ptrINS_24ComponentInstallerPolicyENS1_14default_deleteIS3_EEEE13scoped_refptrIN13update_client13ActionHandlerEE(%"class.component_updater::ComponentInstaller"*, %"class.component_updater::ComponentInstallerPolicy"*, %"class.update_client::ActionHandler"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_122AutofillStateFileNamesEv: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_122AutofillStateFileNamesEv"}
