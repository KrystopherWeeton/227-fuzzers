; ModuleID = '../../base/third_party/libevent/epoll.c'
source_filename = "../../base/third_party/libevent/epoll.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.event_base = type { %struct.eventop*, i8*, i32, i32, i32, i32, %struct.event_list**, i32, %struct.evsignal_info, %struct.event_list, %struct.timeval, %struct.min_heap, %struct.timeval }
%struct.eventop = type { i8*, {}*, i32 (i8*, %struct.event*)*, i32 (i8*, %struct.event*)*, i32 (%struct.event_base*, i8*, %struct.timeval*)*, void (%struct.event_base*, i8*)*, i32 }
%struct.evsignal_info = type { %struct.event, [2 x i32], i32, i32, [65 x %struct.event_list], [65 x i32], %struct.sigaction**, i32 }
%struct.event = type { %struct.anon, %struct.anon.0, %struct.anon.1, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon = type { %struct.event*, %struct.event** }
%struct.anon.0 = type { %struct.event*, %struct.event** }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.sigaction = type { %union.anon, %struct.__sigset_t, i32, void ()* }
%union.anon = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.event_list = type { %struct.event*, %struct.event** }
%struct.min_heap = type { %struct.event**, i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.epoll_event = type <{ i32, %union.epoll_data }>
%union.epoll_data = type { i8* }
%struct.evepoll = type { %struct.event*, %struct.event* }

@.str = private unnamed_addr constant [6 x i8] c"epoll\00", align 1
@epollops = hidden local_unnamed_addr constant { i8*, i8* (%struct.event_base*)*, i32 (i8*, %struct.event*)*, i32 (i8*, %struct.event*)*, i32 (%struct.event_base*, i8*, %struct.timeval*)*, void (%struct.event_base*, i8*)*, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* (%struct.event_base*)* @epoll_init, i32 (i8*, %struct.event*)* @epoll_add, i32 (i8*, %struct.event*)* @epoll_del, i32 (%struct.event_base*, i8*, %struct.timeval*)* @epoll_dispatch, void (%struct.event_base*, i8*)* @epoll_dealloc, i32 1 }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"EVENT_NOEPOLL\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"epoll_create\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"fcntl(%d, F_SETFD)\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"epoll_wait\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @epoll_init(%struct.event_base*) #0 {
  %2 = tail call i8* @evutil_getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %38

4:                                                ; preds = %1
  %5 = tail call i32 @epoll_create(i32 32000) #6
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %4
  %8 = tail call i32* @__errno_location() #7
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 38
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %38

12:                                               ; preds = %4
  %13 = tail call i32 (i32, i32, ...) @fcntl(i32 %5, i32 2, i32 1) #6
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 %5) #6
  br label %16

16:                                               ; preds = %15, %12
  %17 = tail call noalias i8* @calloc(i64 1, i64 32) #6
  %18 = icmp eq i8* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %17, i64 28
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  %22 = tail call noalias i8* @malloc(i64 384) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = icmp eq i8* %22, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  tail call void @free(i8* nonnull %17) #6
  br label %38

27:                                               ; preds = %19
  %28 = getelementptr inbounds i8, i8* %17, i64 24
  %29 = bitcast i8* %28 to i32*
  store i32 32, i32* %29, align 8
  %30 = tail call noalias i8* @calloc(i64 32, i64 16) #6
  %31 = bitcast i8* %17 to i8**
  store i8* %30, i8** %31, align 8
  %32 = icmp eq i8* %30, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  tail call void @free(i8* nonnull %22) #6
  tail call void @free(i8* nonnull %17) #6
  br label %38

34:                                               ; preds = %27
  %35 = getelementptr inbounds i8, i8* %17, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 32, i32* %36, align 8
  %37 = tail call i32 @evsignal_init(%struct.event_base* %0) #6
  br label %38

38:                                               ; preds = %16, %11, %7, %1, %34, %33, %26
  %39 = phi i8* [ null, %26 ], [ null, %33 ], [ %17, %34 ], [ null, %1 ], [ null, %7 ], [ null, %11 ], [ null, %16 ]
  ret i8* %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @epoll_add(i8* nocapture, %struct.event*) #0 {
  %3 = alloca %struct.epoll_event, align 4
  %4 = bitcast %struct.epoll_event* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 12, i1 false)
  %5 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 6
  %6 = load i16, i16* %5, align 4
  %7 = and i16 %6, 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @evsignal_add(%struct.event* %1) #6
  br label %87

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds i8, i8* %0, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = bitcast i8* %0 to %struct.evepoll**
  %20 = load %struct.evepoll*, %struct.evepoll** %19, align 8
  br label %44

21:                                               ; preds = %11, %21
  %22 = phi i32 [ %24, %21 ], [ %16, %11 ]
  %23 = icmp sgt i32 %22, %13
  %24 = shl i32 %22, 1
  br i1 %23, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast i8* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = sext i32 %22 to i64
  %29 = shl nsw i64 %28, 4
  %30 = tail call i8* @realloc(i8* %27, i64 %29) #6
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %25
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %87

33:                                               ; preds = %25
  %34 = bitcast i8* %30 to %struct.evepoll*
  store i8* %30, i8** %26, align 8
  %35 = load i32, i32* %15, align 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %34, i64 %36
  %38 = bitcast %struct.evepoll* %37 to i8*
  %39 = sub nsw i32 %22, %35
  %40 = sext i32 %39 to i64
  %41 = shl nsw i64 %40, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 %41, i1 false) #6
  store i32 %22, i32* %15, align 8
  %42 = load i16, i16* %5, align 4
  %43 = load i32, i32* %12, align 8
  br label %44

44:                                               ; preds = %18, %33
  %45 = phi i32 [ %13, %18 ], [ %43, %33 ]
  %46 = phi i16 [ %6, %18 ], [ %42, %33 ]
  %47 = phi %struct.evepoll* [ %20, %18 ], [ %34, %33 ]
  %48 = sext i32 %13 to i64
  %49 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %47, i64 %48, i32 0
  %50 = load %struct.event*, %struct.event** %49, align 8
  %51 = icmp eq %struct.event* %50, null
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %47, i64 %48, i32 1
  %55 = load %struct.event*, %struct.event** %54, align 8
  %56 = icmp eq %struct.event* %55, null
  %57 = or i32 %53, 4
  %58 = and i1 %51, %56
  %59 = select i1 %58, i32 1, i32 3
  %60 = lshr i16 %46, 1
  %61 = and i16 %60, 1
  %62 = zext i16 %61 to i32
  %63 = and i16 %46, 4
  %64 = icmp eq i16 %63, 0
  %65 = and i1 %56, %64
  %66 = select i1 %65, i32 %53, i32 %57
  %67 = or i32 %66, %62
  %68 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 1
  %69 = bitcast %union.epoll_data* %68 to i32*
  store i32 %13, i32* %69, align 4
  %70 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 0
  store i32 %67, i32* %70, align 4
  %71 = getelementptr inbounds i8, i8* %0, i64 28
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @epoll_ctl(i32 %73, i32 %59, i32 %45, %struct.epoll_event* nonnull %3) #6
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %87, label %76

76:                                               ; preds = %44
  %77 = load i16, i16* %5, align 4
  %78 = and i16 %77, 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  store %struct.event* %1, %struct.event** %49, align 8
  %81 = load i16, i16* %5, align 4
  br label %82

82:                                               ; preds = %76, %80
  %83 = phi i16 [ %77, %76 ], [ %81, %80 ]
  %84 = and i16 %83, 4
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  store %struct.event* %1, %struct.event** %54, align 8
  br label %87

87:                                               ; preds = %32, %86, %82, %44, %9
  %88 = phi i32 [ %10, %9 ], [ -1, %44 ], [ 0, %82 ], [ 0, %86 ], [ -1, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #6
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @epoll_del(i8* nocapture readonly, %struct.event*) #0 {
  %3 = alloca %struct.epoll_event, align 4
  %4 = bitcast %struct.epoll_event* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 12, i1 false)
  %5 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 6
  %6 = load i16, i16* %5, align 4
  %7 = sext i16 %6 to i32
  %8 = and i32 %7, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @evsignal_del(%struct.event* %1) #6
  br label %71

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds i8, i8* %0, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %19, label %71

19:                                               ; preds = %12
  %20 = bitcast i8* %0 to %struct.evepoll**
  %21 = load %struct.evepoll*, %struct.evepoll** %20, align 8
  %22 = sext i32 %14 to i64
  %23 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %21, i64 %22
  %24 = and i32 %7, 2
  %25 = icmp eq i32 %24, 0
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = and i16 %6, 4
  %29 = zext i16 %28 to i32
  %30 = or i32 %27, %29
  %31 = icmp eq i32 %30, 5
  br i1 %31, label %47, label %32

32:                                               ; preds = %19
  br i1 %25, label %37, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %21, i64 %22, i32 1
  %35 = load %struct.event*, %struct.event** %34, align 8
  %36 = icmp eq %struct.event* %35, null
  br i1 %36, label %37, label %52

37:                                               ; preds = %33, %32
  %38 = icmp eq i16 %28, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %23, i64 0, i32 0
  %41 = load %struct.event*, %struct.event** %40, align 8
  %42 = icmp eq %struct.event* %41, null
  %43 = select i1 %42, i32 %30, i32 1
  %44 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 0
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 1
  %46 = bitcast %union.epoll_data* %45 to i32*
  store i32 %14, i32* %46, align 4
  br i1 %42, label %57, label %59

47:                                               ; preds = %19, %37
  %48 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 0
  store i32 %30, i32* %48, align 4
  %49 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 1
  %50 = bitcast %union.epoll_data* %49 to i32*
  store i32 %14, i32* %50, align 4
  %51 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %23, i64 0, i32 0
  br label %57

52:                                               ; preds = %33
  %53 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 0
  store i32 4, i32* %53, align 4
  %54 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %3, i64 0, i32 1
  %55 = bitcast %union.epoll_data* %54 to i32*
  store i32 %14, i32* %55, align 4
  %56 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %23, i64 0, i32 0
  br label %62

57:                                               ; preds = %39, %47
  %58 = phi %struct.event** [ %51, %47 ], [ %40, %39 ]
  store %struct.event* null, %struct.event** %58, align 8
  br label %59

59:                                               ; preds = %57, %39
  %60 = phi i32 [ 3, %39 ], [ 2, %57 ]
  %61 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %21, i64 %22, i32 1
  br label %62

62:                                               ; preds = %52, %59
  %63 = phi %struct.event** [ %56, %52 ], [ %61, %59 ]
  %64 = phi i32 [ 3, %52 ], [ %60, %59 ]
  store %struct.event* null, %struct.event** %63, align 8
  %65 = getelementptr inbounds i8, i8* %0, i64 28
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = call i32 @epoll_ctl(i32 %67, i32 %64, i32 %14, %struct.epoll_event* nonnull %3) #6
  %69 = icmp eq i32 %68, -1
  %70 = sext i1 %69 to i32
  br label %71

71:                                               ; preds = %62, %12, %10
  %72 = phi i32 [ %11, %10 ], [ 0, %12 ], [ %70, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #6
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @epoll_dispatch(%struct.event_base*, i8* nocapture, %struct.timeval* readonly) #0 {
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to %struct.epoll_event**
  %6 = load %struct.epoll_event*, %struct.epoll_event** %5, align 8
  %7 = icmp eq %struct.timeval* %2, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = mul nsw i64 %10, 1000
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 999
  %15 = sdiv i64 %14, 1000
  %16 = add nsw i64 %15, %11
  %17 = trunc i64 %16 to i32
  %18 = icmp slt i32 %17, 2100000
  %19 = select i1 %18, i32 %17, i32 2100000
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ -1, %3 ], [ %19, %8 ]
  %22 = getelementptr inbounds i8, i8* %1, i64 28
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i8, i8* %1, i64 24
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = tail call i32 @epoll_wait(i32 %24, %struct.epoll_event* %6, i32 %27, i32 %21) #6
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %36

30:                                               ; preds = %20
  %31 = tail call i32* @__errno_location() #7
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %109

35:                                               ; preds = %30
  tail call void @evsignal_process(%struct.event_base* %0) #6
  br label %109

36:                                               ; preds = %20
  %37 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 3
  %38 = load volatile i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @evsignal_process(%struct.event_base* %0) #6
  br label %41

41:                                               ; preds = %36, %40
  %42 = icmp sgt i32 %28, 0
  br i1 %42, label %43, label %95

43:                                               ; preds = %41
  %44 = getelementptr inbounds i8, i8* %1, i64 8
  %45 = bitcast i8* %44 to i32*
  %46 = bitcast i8* %1 to %struct.evepoll**
  %47 = zext i32 %28 to i64
  br label %48

48:                                               ; preds = %92, %43
  %49 = phi i64 [ 0, %43 ], [ %93, %92 ]
  %50 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %6, i64 %49, i32 0
  %51 = load i32, i32* %50, align 1
  %52 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %6, i64 %49, i32 1
  %53 = bitcast %union.epoll_data* %52 to i32*
  %54 = load i32, i32* %53, align 1
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %92, label %56

56:                                               ; preds = %48
  %57 = load i32, i32* %45, align 8
  %58 = icmp slt i32 %54, %57
  br i1 %58, label %59, label %92

59:                                               ; preds = %56
  %60 = load %struct.evepoll*, %struct.evepoll** %46, align 8
  %61 = sext i32 %54 to i64
  %62 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %60, i64 %61
  %63 = and i32 %51, 24
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %62, i64 0, i32 0
  %67 = load %struct.event*, %struct.event** %66, align 8
  br label %78

68:                                               ; preds = %59
  %69 = and i32 %51, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %62, i64 0, i32 0
  %73 = load %struct.event*, %struct.event** %72, align 8
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %struct.event* [ %73, %71 ], [ null, %68 ]
  %76 = and i32 %51, 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %74, %65
  %79 = phi %struct.event* [ %67, %65 ], [ %75, %74 ]
  %80 = getelementptr inbounds %struct.evepoll, %struct.evepoll* %60, i64 %61, i32 1
  %81 = load %struct.event*, %struct.event** %80, align 8
  br label %82

82:                                               ; preds = %78, %74
  %83 = phi %struct.event* [ %75, %74 ], [ %79, %78 ]
  %84 = phi %struct.event* [ null, %74 ], [ %81, %78 ]
  %85 = icmp ne %struct.event* %83, null
  %86 = icmp ne %struct.event* %84, null
  %87 = or i1 %85, %86
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  br i1 %85, label %89, label %90

89:                                               ; preds = %88
  tail call void @event_active(%struct.event* nonnull %83, i32 2, i16 signext 1) #6
  br label %90

90:                                               ; preds = %89, %88
  br i1 %86, label %91, label %92

91:                                               ; preds = %90
  tail call void @event_active(%struct.event* nonnull %84, i32 4, i16 signext 1) #6
  br label %92

92:                                               ; preds = %90, %91, %82, %48, %56
  %93 = add nuw nsw i64 %49, 1
  %94 = icmp eq i64 %93, %47
  br i1 %94, label %95, label %48

95:                                               ; preds = %92, %41
  %96 = load i32, i32* %26, align 8
  %97 = icmp eq i32 %28, %96
  %98 = icmp slt i32 %96, 4096
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %109

100:                                              ; preds = %95
  %101 = shl nsw i32 %28, 1
  %102 = bitcast i8* %4 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = sext i32 %101 to i64
  %105 = mul nsw i64 %104, 12
  %106 = tail call i8* @realloc(i8* %103, i64 %105) #6
  %107 = icmp eq i8* %106, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %100
  store i8* %106, i8** %102, align 8
  store i32 %101, i32* %26, align 8
  br label %109

109:                                              ; preds = %95, %100, %108, %35, %34
  %110 = phi i32 [ -1, %34 ], [ 0, %35 ], [ 0, %108 ], [ 0, %100 ], [ 0, %95 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define internal void @epoll_dealloc(%struct.event_base*, i8* nocapture) #0 {
  tail call void @evsignal_dealloc(%struct.event_base* %0) #6
  %3 = bitcast i8* %1 to %struct.evepoll**
  %4 = load %struct.evepoll*, %struct.evepoll** %3, align 8
  %5 = icmp eq %struct.evepoll* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.evepoll* %4 to i8*
  tail call void @free(i8* %7) #6
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds i8, i8* %1, i64 16
  %10 = bitcast i8* %9 to %struct.epoll_event**
  %11 = load %struct.epoll_event*, %struct.epoll_event** %10, align 8
  %12 = icmp eq %struct.epoll_event* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = bitcast %struct.epoll_event* %11 to i8*
  tail call void @free(i8* %14) #6
  br label %15

15:                                               ; preds = %8, %13
  %16 = getelementptr inbounds i8, i8* %1, i64 28
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = tail call i32 @close(i32 %18) #6
  br label %22

22:                                               ; preds = %20, %15
  tail call void @free(i8* %1) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @evutil_getenv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @epoll_create(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

declare void @event_warn(i8*, ...) local_unnamed_addr #2

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare i32 @evsignal_init(%struct.event_base*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @epoll_wait(i32, %struct.epoll_event*, i32, i32) local_unnamed_addr #2

declare void @evsignal_process(%struct.event_base*) local_unnamed_addr #2

declare void @event_active(%struct.event*, i32, i16 signext) local_unnamed_addr #2

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @evsignal_add(%struct.event*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @epoll_ctl(i32, i32, i32, %struct.epoll_event*) local_unnamed_addr #3

declare i32 @evsignal_del(%struct.event*) local_unnamed_addr #2

declare void @evsignal_dealloc(%struct.event_base*) local_unnamed_addr #2

declare i32 @close(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
