; ModuleID = '../../third_party/angle/src/gpu_info_util/SystemInfo_linux.cpp'
source_filename = "../../third_party/angle/src/gpu_info_util/SystemInfo_linux.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.angle::SystemInfo" = type { %"class.std::__1::vector", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"*, %"class.std::__1::__compressed_pair.1" }
%"struct.angle::GPUDeviceInfo" = type { i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.angle::VersionInfo" }
%"struct.angle::VersionInfo" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.angle::GPUDeviceInfo"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ifstream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_filebuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_filebuf" = type <{ %"class.std::__1::basic_streambuf", i8*, i8*, i8*, [8 x i8], i64, i8*, i64, %struct._IO_FILE*, %"class.std::__1::codecvt"*, %struct.__mbstate_t, %struct.__mbstate_t, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::codecvt" = type { %"class.std::__1::locale::facet" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%struct.__mbstate_t = type { i32, %union.anon.6 }
%union.anon.6 = type { i32 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_istream" = type { i32 (...)**, i64, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN5angle13GPUDeviceInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [13 x i8] c"AMD (Brahma)\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"AMD (Catalyst)\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Nvidia\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"/sys/module/amdgpu/version\00", align 1
@_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@.str.5 = private unnamed_addr constant [26 x i8] c"/etc/ati/amdpcsdb.default\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5angle13GetSystemInfoEPNS_10SystemInfoE(%"struct.angle::SystemInfo"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.angle::GPUDeviceInfo", align 8
  %8 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN5angle23GetPCIDevicesWithLibPCIEPNSt3__16vectorINS_13GPUDeviceInfoENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* %8) #8
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZN5angle19GetSystemInfoVulkanEPNS_10SystemInfoE(%"struct.angle::SystemInfo"* %0) #8
  br label %236

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.angle::GPUDeviceInfo"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"struct.angle::SystemInfo"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %236, label %19

19:                                               ; preds = %12
  tail call void @_ZN5angle14GetDualGPUInfoEPNS_10SystemInfoE(%"struct.angle::SystemInfo"* %0) #8
  %20 = load i64, i64* %14, align 8
  %21 = load i64, i64* %16, align 8
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %236, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"struct.angle::GPUDeviceInfo"* %7 to i8*
  %44 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %7, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %7, i64 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 2
  br label %50

50:                                               ; preds = %23, %229
  %51 = phi i64 [ %21, %23 ], [ %232, %229 ]
  %52 = phi i64 [ 0, %23 ], [ %230, %229 ]
  %53 = inttoptr i64 %51 to %"struct.angle::GPUDeviceInfo"*
  %54 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 3
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  br label %64

62:                                               ; preds = %50
  %63 = zext i8 %57 to i64
  br label %64

64:                                               ; preds = %59, %62
  %65 = phi i64 [ %61, %59 ], [ %63, %62 ]
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %229

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = call zeroext i1 @_ZN5angle5IsAMDEj(i32 %69) #8
  br i1 %70, label %71, label %150

71:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #8
  store i8 0, i8* %28, align 1
  store i8 0, i8* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #8
  %72 = call fastcc zeroext i1 @_ZN5angle12_GLOBAL__N_113ReadWholeFileEPKcPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull %3) #8
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = call zeroext i1 @_ZN5angle27ParseAMDBrahmaDriverVersionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull %4) #8
  br label %75

75:                                               ; preds = %73, %71
  %76 = phi i1 [ false, %71 ], [ %74, %73 ]
  %77 = load i8, i8* %32, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %80) #9
  br label %81

81:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  br i1 %76, label %82, label %104

82:                                               ; preds = %81
  %83 = load i8, i8* %56, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 12, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  br label %91

89:                                               ; preds = %82
  store i8 12, i8* %56, align 1
  %90 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  br label %91

91:                                               ; preds = %85, %89
  %92 = phi i8* [ %88, %85 ], [ %90, %89 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12, i1 false) #8
  %93 = getelementptr inbounds i8, i8* %92, i64 12
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 4
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #9
  br label %102

102:                                              ; preds = %91, %99
  %103 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* nonnull align 8 %24, i64 24, i1 false) #8
  store i8 0, i8* %28, align 1
  store i8 0, i8* %24, align 8
  br label %149

104:                                              ; preds = %81
  %105 = load i8, i8* %28, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  store i64 0, i64* %26, align 8
  %108 = load i8*, i8** %25, align 8
  br label %110

109:                                              ; preds = %104
  store i8 0, i8* %28, align 1
  br label %110

110:                                              ; preds = %109, %107
  %111 = phi i8* [ %108, %107 ], [ %24, %109 ]
  store i8 0, i8* %111, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #8
  %112 = call fastcc zeroext i1 @_ZN5angle12_GLOBAL__N_113ReadWholeFileEPKcPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull %2) #8
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = call zeroext i1 @_ZN5angle29ParseAMDCatalystDriverVersionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull %4) #8
  br label %115

115:                                              ; preds = %113, %110
  %116 = phi i1 [ false, %110 ], [ %114, %113 ]
  %117 = load i8, i8* %36, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %120) #9
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  br i1 %116, label %122, label %144

122:                                              ; preds = %121
  %123 = load i8, i8* %56, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 14, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  br label %131

129:                                              ; preds = %122
  store i8 14, i8* %56, align 1
  %130 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  br label %131

131:                                              ; preds = %125, %129
  %132 = phi i8* [ %128, %125 ], [ %130, %129 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14, i1 false) #8
  %133 = getelementptr inbounds i8, i8* %132, i64 14
  store i8 0, i8* %133, align 1
  %134 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 4
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #9
  br label %142

142:                                              ; preds = %131, %139
  %143 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 8 %24, i64 24, i1 false) #8
  store i8 0, i8* %28, align 1
  store i8 0, i8* %24, align 8
  br label %149

144:                                              ; preds = %121
  %145 = load i8, i8* %28, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %144
  %148 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %148) #9
  br label %149

149:                                              ; preds = %102, %142, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  br label %150

150:                                              ; preds = %149, %67
  %151 = load i32, i32* %68, align 8
  %152 = call zeroext i1 @_ZN5angle8IsNVIDIAEj(i32 %151) #8
  br i1 %152, label %153, label %183

153:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #8
  %154 = call zeroext i1 @_ZN5angle33GetNvidiaDriverVersionWithXNVCtrlEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %5) #8
  br i1 %154, label %155, label %177

155:                                              ; preds = %153
  %156 = load i8, i8* %56, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 6, i64* %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  br label %164

162:                                              ; preds = %155
  store i8 6, i8* %56, align 1
  %163 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  br label %164

164:                                              ; preds = %158, %162
  %165 = phi i8* [ %161, %158 ], [ %163, %162 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %165, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6, i1 false) #8
  %166 = getelementptr inbounds i8, i8* %165, i64 6
  store i8 0, i8* %166, align 1
  %167 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 4
  %168 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #9
  br label %175

175:                                              ; preds = %172, %164
  %176 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* nonnull align 8 %37, i64 24, i1 false) #8
  store i8 0, i8* %40, align 1
  store i8 0, i8* %37, align 8
  br label %182

177:                                              ; preds = %153
  %178 = load i8, i8* %40, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  %181 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %181) #9
  br label %182

182:                                              ; preds = %175, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  br label %183

183:                                              ; preds = %182, %150
  %184 = load i32, i32* %68, align 8
  %185 = call zeroext i1 @_ZN5angle7IsIntelEj(i32 %184) #8
  br i1 %185, label %186, label %229

186:                                              ; preds = %183
  %187 = load i64, i64* %14, align 8
  %188 = load i64, i64* %16, align 8
  %189 = sub i64 %187, %188
  %190 = icmp eq i64 %189, 104
  br i1 %190, label %191, label %229

191:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #8
  %192 = call zeroext i1 @_ZN5angle33GetNvidiaDriverVersionWithXNVCtrlEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %6) #8
  br i1 %192, label %193, label %223

193:                                              ; preds = %191
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %43) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 104, i1 false)
  call void @_ZN5angle13GPUDeviceInfoC1Ev(%"struct.angle::GPUDeviceInfo"* nonnull %7) #8
  store i32 4318, i32* %44, align 8
  store i32 0, i32* %45, align 4
  %194 = load i8, i8* %56, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 6, i64* %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  br label %202

200:                                              ; preds = %193
  store i8 6, i8* %56, align 1
  %201 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  br label %202

202:                                              ; preds = %196, %200
  %203 = phi i8* [ %199, %196 ], [ %201, %200 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %203, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6, i1 false) #8
  %204 = getelementptr inbounds i8, i8* %203, i64 6
  store i8 0, i8* %204, align 1
  %205 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %53, i64 %52, i32 4
  %206 = bitcast %"class.std::__1::basic_string"* %205 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %202
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #9
  br label %213

213:                                              ; preds = %202, %210
  %214 = bitcast %"class.std::__1::basic_string"* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* nonnull align 8 %41, i64 24, i1 false) #8
  store i8 0, i8* %47, align 1
  store i8 0, i8* %41, align 8
  %215 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %13, align 8
  %216 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %48, align 8
  %217 = icmp ult %"struct.angle::GPUDeviceInfo"* %215, %216
  br i1 %217, label %218, label %221

218:                                              ; preds = %213
  call void @_ZN5angle13GPUDeviceInfoC1ERKS0_(%"struct.angle::GPUDeviceInfo"* %215, %"struct.angle::GPUDeviceInfo"* nonnull dereferenceable(104) %7) #8
  %219 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %215, i64 1
  %220 = ptrtoint %"struct.angle::GPUDeviceInfo"* %219 to i64
  store i64 %220, i64* %14, align 8
  br label %222

221:                                              ; preds = %213
  call void @_ZNSt3__16vectorIN5angle13GPUDeviceInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* %8, %"struct.angle::GPUDeviceInfo"* nonnull dereferenceable(104) %7) #8
  br label %222

222:                                              ; preds = %218, %221
  store i8 1, i8* %49, align 4
  call void @_ZN5angle13GPUDeviceInfoD1Ev(%"struct.angle::GPUDeviceInfo"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %43) #8
  br label %223

223:                                              ; preds = %222, %191
  %224 = load i8, i8* %47, align 1
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %223
  %227 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %227) #9
  br label %228

228:                                              ; preds = %223, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  br label %229

229:                                              ; preds = %183, %186, %228, %64
  %230 = add nuw i64 %52, 1
  %231 = load i64, i64* %14, align 8
  %232 = load i64, i64* %16, align 8
  %233 = sub i64 %231, %232
  %234 = sdiv exact i64 %233, 104
  %235 = icmp ult i64 %230, %234
  br i1 %235, label %50, label %236

236:                                              ; preds = %229, %19, %12, %10
  %237 = phi i1 [ %11, %10 ], [ false, %12 ], [ true, %19 ], [ true, %229 ]
  ret i1 %237
}

declare zeroext i1 @_ZN5angle23GetPCIDevicesWithLibPCIEPNSt3__16vectorINS_13GPUDeviceInfoENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5angle19GetSystemInfoVulkanEPNS_10SystemInfoE(%"struct.angle::SystemInfo"*) local_unnamed_addr #1

declare void @_ZN5angle14GetDualGPUInfoEPNS_10SystemInfoE(%"struct.angle::SystemInfo"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5angle5IsAMDEj(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5angle8IsNVIDIAEj(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5angle33GetNvidiaDriverVersionWithXNVCtrlEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5angle7IsIntelEj(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5angle13GPUDeviceInfoC1Ev(%"struct.angle::GPUDeviceInfo"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5angle13GPUDeviceInfoD1Ev(%"struct.angle::GPUDeviceInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5angle12_GLOBAL__N_113ReadWholeFileEPKcPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(i8*, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_ifstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_ifstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 328, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 1
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ifstream"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ifstream"* %3 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 0, i32 1
  store i64 0, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_filebuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #8
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC1Ev(%"class.std::__1::basic_filebuf"* %10) #8
  %33 = call %"class.std::__1::basic_filebuf"* @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4openEPKcj(%"class.std::__1::basic_filebuf"* %10, i8* %0, i32 8) #8
  %34 = icmp eq %"class.std::__1::basic_filebuf"* %33, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %2
  %36 = load i8*, i8** %14, align 8
  %37 = getelementptr i8, i8* %36, i64 -24
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %5, i64 %39
  %41 = bitcast i8* %40 to %"class.std::__1::ios_base"*
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = or i32 %44, 4
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %41, i32 %45) #8
  br label %46

46:                                               ; preds = %2, %35
  %47 = load i8*, i8** %14, align 8
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %5, i64 %50
  %52 = getelementptr inbounds i8, i8* %51, i64 32
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 5
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %116

57:                                               ; preds = %46
  %58 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = getelementptr inbounds i8, i8* %51, i64 40
  %60 = bitcast i8* %59 to %"class.std::__1::basic_streambuf"**
  %61 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %60, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #8
  %62 = bitcast %"class.std::__1::basic_streambuf"* %61 to i32 (%"class.std::__1::basic_streambuf"*)***
  %63 = icmp eq %"class.std::__1::basic_streambuf"* %61, null
  %64 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %61, i64 0, i32 3
  %65 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %61, i64 0, i32 4
  %66 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %61, i64 0, i32 3
  %67 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %61, i64 0, i32 4
  %68 = bitcast %"class.std::__1::basic_streambuf"* %61 to i32 (%"class.std::__1::basic_streambuf"*)***
  %69 = bitcast %"class.std::__1::basic_streambuf"* %61 to i32 (%"class.std::__1::basic_streambuf"*)***
  br i1 %63, label %106, label %70

70:                                               ; preds = %57, %105
  %71 = load i8*, i8** %64, align 8
  %72 = load i8*, i8** %65, align 8
  %73 = icmp eq i8* %71, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = load i32 (%"class.std::__1::basic_streambuf"*)**, i32 (%"class.std::__1::basic_streambuf"*)*** %62, align 8
  %76 = getelementptr inbounds i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %75, i64 9
  %77 = load i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %76, align 8
  %78 = call i32 %77(%"class.std::__1::basic_streambuf"* nonnull %61) #8
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %106, label %80

80:                                               ; preds = %70, %74
  %81 = load i8*, i8** %66, align 8
  %82 = load i8*, i8** %67, align 8
  %83 = icmp eq i8* %81, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %80
  %85 = load i32 (%"class.std::__1::basic_streambuf"*)**, i32 (%"class.std::__1::basic_streambuf"*)*** %68, align 8
  %86 = getelementptr inbounds i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %85, i64 9
  %87 = load i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %86, align 8
  %88 = call i32 %87(%"class.std::__1::basic_streambuf"* nonnull %61) #8
  br label %92

89:                                               ; preds = %80
  %90 = load i8, i8* %81, align 1
  %91 = zext i8 %90 to i32
  br label %92

92:                                               ; preds = %89, %84
  %93 = phi i32 [ %88, %84 ], [ %91, %89 ]
  %94 = trunc i32 %93 to i8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext %94) #8
  %95 = load i8*, i8** %66, align 8
  %96 = load i8*, i8** %67, align 8
  %97 = icmp eq i8* %95, %96
  br i1 %97, label %98, label %103

98:                                               ; preds = %92
  %99 = load i32 (%"class.std::__1::basic_streambuf"*)**, i32 (%"class.std::__1::basic_streambuf"*)*** %69, align 8
  %100 = getelementptr inbounds i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %99, i64 10
  %101 = load i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %100, align 8
  %102 = call i32 %101(%"class.std::__1::basic_streambuf"* nonnull %61) #8
  br label %105

103:                                              ; preds = %92
  %104 = getelementptr inbounds i8, i8* %95, i64 1
  store i8* %104, i8** %66, align 8
  br label %105

105:                                              ; preds = %103, %98
  br i1 %63, label %106, label %70

106:                                              ; preds = %105, %74, %57
  %107 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %111, %106
  %115 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %58, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  br label %116

116:                                              ; preds = %46, %114
  %117 = phi i1 [ true, %114 ], [ false, %46 ]
  %118 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE to i64*), align 8
  store i64 %118, i64* %12, align 8
  %119 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 3) to i64*), align 8
  %120 = inttoptr i64 %118 to i8*
  %121 = getelementptr i8, i8* %120, i64 -24
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds i8, i8* %5, i64 %123
  %125 = bitcast i8* %124 to i64*
  store i64 %119, i64* %125, align 8
  call void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_filebuf"* %10) #8
  %126 = bitcast %"class.std::__1::basic_ifstream"* %3 to %"class.std::__1::basic_istream"*
  call void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_istream"* nonnull %126, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 1)) #8
  %127 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 2
  %128 = bitcast %"class.std::__1::basic_ios.base"* %127 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %128) #8
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %5) #8
  ret i1 %117
}

declare zeroext i1 @_ZN5angle27ParseAMDBrahmaDriverVersionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC1Ev(%"class.std::__1::basic_filebuf"*) unnamed_addr #1

declare %"class.std::__1::basic_filebuf"* @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4openEPKcj(%"class.std::__1::basic_filebuf"*, i8*, i32) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_filebuf"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_istream"*, i8**) unnamed_addr #3

declare zeroext i1 @_ZN5angle29ParseAMDCatalystDriverVersionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle13GPUDeviceInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.angle::GPUDeviceInfo"* dereferenceable(104)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.angle::GPUDeviceInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 104
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 177372539170284150
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.angle::GPUDeviceInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 104
  %20 = icmp ult i64 %19, 88686269585142075
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 177372539170284150, %14 ]
  %28 = mul i64 %27, 104
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"struct.angle::GPUDeviceInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.angle::GPUDeviceInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.angle::GPUDeviceInfo"* %35 to i64
  tail call void @_ZN5angle13GPUDeviceInfoC1ERKS0_(%"struct.angle::GPUDeviceInfo"* %34, %"struct.angle::GPUDeviceInfo"* dereferenceable(104) %1) #8
  %37 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %34, i64 1
  %38 = ptrtoint %"struct.angle::GPUDeviceInfo"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %39, align 8
  %41 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %3, align 8
  %42 = icmp eq %"struct.angle::GPUDeviceInfo"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.angle::GPUDeviceInfo"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.angle::GPUDeviceInfo"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.angle::GPUDeviceInfo"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %47, i64 -1
  tail call void @_ZN5angle13GPUDeviceInfoC1ERKS0_(%"struct.angle::GPUDeviceInfo"* %48, %"struct.angle::GPUDeviceInfo"* dereferenceable(104) %49) #8
  %50 = icmp eq %"struct.angle::GPUDeviceInfo"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.angle::GPUDeviceInfo"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.angle::GPUDeviceInfo"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.angle::GPUDeviceInfo"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.angle::GPUDeviceInfo"*
  %60 = icmp eq %"struct.angle::GPUDeviceInfo"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.angle::GPUDeviceInfo"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %62, i64 -1
  tail call void @_ZN5angle13GPUDeviceInfoD1Ev(%"struct.angle::GPUDeviceInfo"* %63) #8
  %64 = icmp eq %"struct.angle::GPUDeviceInfo"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #9
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN5angle13GPUDeviceInfoC1ERKS0_(%"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
