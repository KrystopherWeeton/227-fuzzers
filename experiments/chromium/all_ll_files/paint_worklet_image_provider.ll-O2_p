; ModuleID = '../../cc/raster/paint_worklet_image_provider.cc'
source_filename = "../../cc/raster/paint_worklet_image_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintWorkletImageProvider" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type { %class.scoped_refptr, %"struct.std::__1::pair.1" }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::pair.1" = type { i32, %class.sk_sp }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.7, %"struct.gpu::Mailbox", %"class.absl::optional", %class.sk_sp.14, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%class.sk_sp.7 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.8, i32, i32 }
%class.sk_sp.8 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%class.sk_sp.14 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkSize = type { float, float }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.16", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZN2cc25PaintWorkletImageProviderC1EN4base8flat_mapI13scoped_refptrIKNS_17PaintWorkletInputEENSt3__14pairIi5sk_spINS_13PaintOpBufferEEEENS7_4lessIvEENS7_6vectorINS8_IS6_SC_EENS7_9allocatorISG_EEEEEE = hidden unnamed_addr alias void (%"class.cc::PaintWorkletImageProvider"*, %"class.base::flat_map"*), void (%"class.cc::PaintWorkletImageProvider"*, %"class.base::flat_map"*)* @_ZN2cc25PaintWorkletImageProviderC2EN4base8flat_mapI13scoped_refptrIKNS_17PaintWorkletInputEENSt3__14pairIi5sk_spINS_13PaintOpBufferEEEENS7_4lessIvEENS7_6vectorINS8_IS6_SC_EENS7_9allocatorISG_EEEEEE
@_ZN2cc25PaintWorkletImageProviderD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintWorkletImageProvider"*), void (%"class.cc::PaintWorkletImageProvider"*)* @_ZN2cc25PaintWorkletImageProviderD2Ev
@_ZN2cc25PaintWorkletImageProviderC1EOS0_ = hidden unnamed_addr alias void (%"class.cc::PaintWorkletImageProvider"*, %"class.cc::PaintWorkletImageProvider"*), void (%"class.cc::PaintWorkletImageProvider"*, %"class.cc::PaintWorkletImageProvider"*)* @_ZN2cc25PaintWorkletImageProviderC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25PaintWorkletImageProviderC2EN4base8flat_mapI13scoped_refptrIKNS_17PaintWorkletInputEENSt3__14pairIi5sk_spINS_13PaintOpBufferEEEENS7_4lessIvEENS7_6vectorINS8_IS6_SC_EENS7_9allocatorISG_EEEEEE(%"class.cc::PaintWorkletImageProvider"* nocapture, %"class.base::flat_map"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  %4 = bitcast %"class.base::flat_map"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.base::flat_map"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25PaintWorkletImageProviderD2Ev(%"class.cc::PaintWorkletImageProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair"* %3 to i8*
  %7 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair"* %8, %3
  br i1 %9, label %47, label %10

10:                                               ; preds = %5, %42
  %11 = phi %"struct.std::__1::pair"* [ %12, %42 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 -1, i32 1, i32 1, i32 0
  %14 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %15 = icmp eq %"class.cc::PaintOpBuffer"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %"class.cc::PaintOpBuffer"* %14 to %class.SkRefCntBase*
  %22 = bitcast %"class.cc::PaintOpBuffer"* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #4
  br label %26

26:                                               ; preds = %20, %16, %10
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0, i32 0
  %28 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %27, align 8
  %29 = icmp eq %"class.cc::PaintWorkletInput"* %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %28, i64 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to %"class.cc::PaintWorkletInput"*
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %36 to void (%"class.cc::PaintWorkletInput"*)***
  %39 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %39, i64 4
  %41 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %40, align 8
  tail call void %41(%"class.cc::PaintWorkletInput"* nonnull %37) #4
  br label %42

42:                                               ; preds = %35, %30, %26
  %43 = icmp eq %"struct.std::__1::pair"* %12, %3
  br i1 %43, label %44, label %10

44:                                               ; preds = %42
  %45 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %5
  %48 = phi i8* [ %46, %44 ], [ %6, %5 ]
  store %"struct.std::__1::pair"* %3, %"struct.std::__1::pair"** %7, align 8
  tail call void @_ZdlPv(i8* %48) #5
  br label %49

49:                                               ; preds = %1, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25PaintWorkletImageProviderC2EOS0_(%"class.cc::PaintWorkletImageProvider"* nocapture, %"class.cc::PaintWorkletImageProvider"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  %4 = bitcast %"class.cc::PaintWorkletImageProvider"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.cc::PaintWorkletImageProvider"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.cc::PaintWorkletImageProvider"* @_ZN2cc25PaintWorkletImageProvideraSEOS0_(%"class.cc::PaintWorkletImageProvider"* returned, %"class.cc::PaintWorkletImageProvider"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %8 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair"* %9, %4
  br i1 %10, label %48, label %11

11:                                               ; preds = %6, %43
  %12 = phi %"struct.std::__1::pair"* [ %13, %43 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 -1, i32 1, i32 1, i32 0
  %15 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %14, align 8
  %16 = icmp eq %"class.cc::PaintOpBuffer"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.cc::PaintOpBuffer"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.cc::PaintOpBuffer"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #4
  br label %27

27:                                               ; preds = %21, %17, %11
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 0, i32 0
  %29 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %28, align 8
  %30 = icmp eq %"class.cc::PaintWorkletInput"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %29, i64 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.cc::PaintWorkletInput"*
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %37 to void (%"class.cc::PaintWorkletInput"*)***
  %40 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %40, i64 4
  %42 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %41, align 8
  tail call void %42(%"class.cc::PaintWorkletInput"* nonnull %38) #4
  br label %43

43:                                               ; preds = %36, %31, %27
  %44 = icmp eq %"struct.std::__1::pair"* %13, %4
  br i1 %44, label %45, label %11

45:                                               ; preds = %43
  %46 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %6
  %49 = phi i8* [ %47, %45 ], [ %7, %6 ]
  store %"struct.std::__1::pair"* %4, %"struct.std::__1::pair"** %8, align 8
  tail call void @_ZdlPv(i8* %49) #5
  %50 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #4
  br label %51

51:                                               ; preds = %2, %48
  %52 = bitcast %"class.cc::PaintWorkletImageProvider"* %1 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.cc::PaintWorkletImageProvider"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"struct.std::__1::pair"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"struct.std::__1::pair"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"struct.std::__1::pair"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %"struct.std::__1::pair"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast %"class.cc::PaintWorkletImageProvider"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #4
  ret %"class.cc::PaintWorkletImageProvider"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25PaintWorkletImageProvider20GetPaintRecordResultE13scoped_refptrINS_17PaintWorkletInputEE(%"class.cc::ImageProvider::ScopedResult"* noalias sret, %"class.cc::PaintWorkletImageProvider"* nocapture readonly, %"class.cc::PaintWorkletInput"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PaintWorkletImageProvider", %"class.cc::PaintWorkletImageProvider"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair"*
  br i1 %12, label %32, label %14

14:                                               ; preds = %3
  %15 = sdiv exact i64 %11, 24
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair"* [ %6, %14 ], [ %28, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %21, align 8
  %23 = icmp ult %"class.cc::PaintWorkletInput"* %22, %2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair"* %28 to i64
  br label %32

32:                                               ; preds = %30, %3
  %33 = phi i64 [ %31, %30 ], [ %10, %3 ]
  %34 = phi %"struct.std::__1::pair"* [ %28, %30 ], [ %6, %3 ]
  %35 = icmp eq %"struct.std::__1::pair"* %34, %13
  br i1 %35, label %43, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %37, align 8
  %39 = icmp ugt %"class.cc::PaintWorkletInput"* %38, %2
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %42 = ptrtoint %"struct.std::__1::pair"* %41 to i64
  br label %43

43:                                               ; preds = %32, %36, %40
  %44 = phi i64 [ %42, %40 ], [ %33, %32 ], [ %33, %36 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::pair"*
  %46 = icmp eq %"struct.std::__1::pair"* %34, %45
  %47 = select i1 %46, %"struct.std::__1::pair"* %13, %"struct.std::__1::pair"* %34
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 1, i32 1, i32 0
  %50 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %49, align 8
  %51 = icmp eq %"class.cc::PaintOpBuffer"* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %50, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  br label %55

55:                                               ; preds = %43, %52
  store %"class.cc::PaintOpBuffer"* %50, %"class.cc::PaintOpBuffer"** %48, align 8
  call void @_ZN2cc13ImageProvider12ScopedResultC1E5sk_spINS_13PaintOpBufferEE(%"class.cc::ImageProvider::ScopedResult"* %0, %class.sk_sp* nonnull %4) #4
  %56 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %48, align 8
  %57 = icmp eq %"class.cc::PaintOpBuffer"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %"class.cc::PaintOpBuffer"* %56 to %class.SkRefCntBase*
  %64 = bitcast %"class.cc::PaintOpBuffer"* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #4
  br label %68

68:                                               ; preds = %55, %58, %62
  %69 = icmp eq %"class.cc::PaintWorkletInput"* %2, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %2, i64 0, i32 1
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw sub i32* %72, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 -2
  %77 = bitcast %"class.base::RefCountedThreadSafe"* %76 to %"class.cc::PaintWorkletInput"*
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %76 to void (%"class.cc::PaintWorkletInput"*)***
  %79 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %79, i64 4
  %81 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %80, align 8
  call void %81(%"class.cc::PaintWorkletInput"* nonnull %77) #4
  br label %82

82:                                               ; preds = %68, %70, %75
  ret void
}

declare void @_ZN2cc13ImageProvider12ScopedResultC1E5sk_spINS_13PaintOpBufferEE(%"class.cc::ImageProvider::ScopedResult"*, %class.sk_sp*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
