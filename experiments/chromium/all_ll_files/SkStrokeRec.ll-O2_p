; ModuleID = '../../third_party/skia/src/core/SkStrokeRec.cpp'
source_filename = "../../third_party/skia/src/core/SkStrokeRec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkStrokeRec = type { float, float, float, i32 }
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.0, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.0 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.1 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.2 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.3 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkPath = type <{ %class.sk_sp.4, i32, %"struct.std::__1::atomic.8", %"struct.std::__1::atomic.8", i8, i8 }>
%class.sk_sp.4 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.6, %class.SkTDArray.7, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.6 = type { i8*, i32, i32 }
%class.SkTDArray.7 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.13 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.8" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.13 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.14", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.SkStroke = type <{ float, float, float, i8, i8, i8, i8 }>

@_ZN11SkStrokeRecC1ENS_9InitStyleE = hidden unnamed_addr alias void (%class.SkStrokeRec*, i32), void (%class.SkStrokeRec*, i32)* @_ZN11SkStrokeRecC2ENS_9InitStyleE
@_ZN11SkStrokeRecC1ERK7SkPaintf = hidden unnamed_addr alias void (%class.SkStrokeRec*, %class.SkPaint*, float), void (%class.SkStrokeRec*, %class.SkPaint*, float)* @_ZN11SkStrokeRecC2ERK7SkPaintf
@_ZN11SkStrokeRecC1ERK7SkPaintNS0_5StyleEf = hidden unnamed_addr alias void (%class.SkStrokeRec*, %class.SkPaint*, i8, float), void (%class.SkStrokeRec*, %class.SkPaint*, i8, float)* @_ZN11SkStrokeRecC2ERK7SkPaintNS0_5StyleEf

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11SkStrokeRecC2ENS_9InitStyleE(%class.SkStrokeRec* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 0
  store float 1.000000e+00, float* %3, align 4
  %4 = icmp eq i32 %1, 1
  %5 = select i1 %4, float -1.000000e+00, float 0.000000e+00
  %6 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float %5, float* %6, align 4
  %7 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  store float 4.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkStrokeRecC2ERK7SkPaintf(%class.SkStrokeRec* nocapture, %class.SkPaint* nocapture readonly dereferenceable(72), float) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 6
  %7 = trunc i32 %6 to i8
  %8 = and i8 %7, 3
  %9 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 0
  store float %2, float* %9, align 4
  switch i8 %8, label %37 [
    i8 0, label %10
    i8 1, label %15
    i8 2, label %24
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 2147483647
  store i32 %14, i32* %12, align 4
  br label %42

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %20 = bitcast float* %19 to i32*
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 2147483647
  store i32 %23, i32* %21, align 4
  br label %42

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %26 = load float, float* %25, align 8
  %27 = fcmp oeq float %26, 0.000000e+00
  %28 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  br i1 %27, label %29, label %33

29:                                               ; preds = %24
  store float -1.000000e+00, float* %28, align 4
  %30 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 2147483647
  store i32 %32, i32* %30, align 4
  br label %42

33:                                               ; preds = %24
  store float %26, float* %28, align 4
  %34 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, -2147483648
  store i32 %36, i32* %34, align 4
  br label %42

37:                                               ; preds = %3
  %38 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 2147483647
  store i32 %41, i32* %39, align 4
  br label %42

42:                                               ; preds = %10, %15, %29, %33, %37
  %43 = phi i32 [ %32, %29 ], [ %36, %33 ], [ %41, %37 ], [ %23, %15 ], [ %14, %10 ]
  %44 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 7
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  %48 = bitcast float* %47 to i32*
  store i32 %46, i32* %48, align 4
  %49 = load i32, i32* %4, align 8
  %50 = lshr i32 %49, 2
  %51 = and i32 %50, 3
  %52 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %53 = and i32 %43, -65536
  %54 = or i32 %51, %53
  store i32 %54, i32* %52, align 4
  %55 = load i32, i32* %4, align 8
  %56 = shl i32 %55, 12
  %57 = and i32 %56, 196608
  %58 = and i32 %54, -2147483645
  %59 = or i32 %57, %58
  store i32 %59, i32* %52, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkStrokeRec4initERK7SkPaintNS0_5StyleEf(%class.SkStrokeRec* nocapture, %class.SkPaint* nocapture readonly dereferenceable(72), i8 zeroext, float) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 0
  store float %3, float* %5, align 4
  switch i8 %2, label %33 [
    i8 0, label %6
    i8 1, label %11
    i8 2, label %20
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 2147483647
  store i32 %10, i32* %8, align 4
  br label %38

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 2147483647
  store i32 %19, i32* %17, align 4
  br label %38

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %22 = load float, float* %21, align 8
  %23 = fcmp oeq float %22, 0.000000e+00
  %24 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  br i1 %23, label %25, label %29

25:                                               ; preds = %20
  store float -1.000000e+00, float* %24, align 4
  %26 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 2147483647
  store i32 %28, i32* %26, align 4
  br label %38

29:                                               ; preds = %20
  store float %22, float* %24, align 4
  %30 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, -2147483648
  store i32 %32, i32* %30, align 4
  br label %38

33:                                               ; preds = %4
  %34 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 2147483647
  store i32 %37, i32* %35, align 4
  br label %38

38:                                               ; preds = %25, %29, %33, %11, %6
  %39 = phi i32 [ %28, %25 ], [ %32, %29 ], [ %37, %33 ], [ %19, %11 ], [ %10, %6 ]
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 7
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  %44 = bitcast float* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = lshr i32 %46, 2
  %48 = and i32 %47, 3
  %49 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %50 = and i32 %39, -65536
  %51 = or i32 %50, %48
  store i32 %51, i32* %49, align 4
  %52 = load i32, i32* %45, align 8
  %53 = shl i32 %52, 12
  %54 = and i32 %53, 196608
  %55 = and i32 %51, -2147483645
  %56 = or i32 %54, %55
  store i32 %56, i32* %49, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkStrokeRecC2ERK7SkPaintNS0_5StyleEf(%class.SkStrokeRec* nocapture, %class.SkPaint* nocapture readonly dereferenceable(72), i8 zeroext, float) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 0
  store float %3, float* %5, align 4
  switch i8 %2, label %33 [
    i8 0, label %6
    i8 1, label %11
    i8 2, label %20
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 2147483647
  store i32 %10, i32* %8, align 4
  br label %38

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 2147483647
  store i32 %19, i32* %17, align 4
  br label %38

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %22 = load float, float* %21, align 8
  %23 = fcmp oeq float %22, 0.000000e+00
  %24 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  br i1 %23, label %25, label %29

25:                                               ; preds = %20
  store float -1.000000e+00, float* %24, align 4
  %26 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 2147483647
  store i32 %28, i32* %26, align 4
  br label %38

29:                                               ; preds = %20
  store float %22, float* %24, align 4
  %30 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, -2147483648
  store i32 %32, i32* %30, align 4
  br label %38

33:                                               ; preds = %4
  %34 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 2147483647
  store i32 %37, i32* %35, align 4
  br label %38

38:                                               ; preds = %6, %11, %25, %29, %33
  %39 = phi i32 [ %28, %25 ], [ %32, %29 ], [ %37, %33 ], [ %19, %11 ], [ %10, %6 ]
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 7
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  %44 = bitcast float* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = lshr i32 %46, 2
  %48 = and i32 %47, 3
  %49 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %50 = and i32 %39, -65536
  %51 = or i32 %48, %50
  store i32 %51, i32* %49, align 4
  %52 = load i32, i32* %45, align 8
  %53 = shl i32 %52, 12
  %54 = and i32 %53, 196608
  %55 = and i32 %51, -2147483645
  %56 = or i32 %54, %55
  store i32 %56, i32* %49, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fcmp olt float %3, 0.000000e+00
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = fcmp oeq float %3, 0.000000e+00
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  %11 = select i1 %10, i32 3, i32 2
  br label %12

12:                                               ; preds = %5, %1, %7
  %13 = phi i32 [ %11, %7 ], [ 1, %1 ], [ 0, %5 ]
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkStrokeRec12setFillStyleEv(%class.SkStrokeRec* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float -1.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 2147483647
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkStrokeRec16setHairlineStyleEv(%class.SkStrokeRec* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 2147483647
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkStrokeRec14setStrokeStyleEfb(%class.SkStrokeRec* nocapture, float, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = fcmp oeq float %1, 0.000000e+00
  %5 = and i1 %4, %2
  %6 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  br i1 %5, label %7, label %11

7:                                                ; preds = %3
  store float -1.000000e+00, float* %6, align 4
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 2147483647
  store i32 %10, i32* %8, align 4
  br label %18

11:                                               ; preds = %3
  store float %1, float* %6, align 4
  %12 = zext i1 %2 to i32
  %13 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = shl nuw i32 %12, 31
  %16 = and i32 %14, 2147483647
  %17 = or i32 %16, %15
  store i32 %17, i32* %13, align 4
  br label %18

18:                                               ; preds = %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec* nocapture readonly, %class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %4 = alloca %class.SkStroke, align 4
  %5 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = fcmp ugt float %6, 0.000000e+00
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = bitcast %class.SkStroke* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %4, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %4, i64 0, i32 3
  %14 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %4, i64 0, i32 5
  %15 = bitcast i8* %13 to i32*
  store i32 -1431655766, i32* %15, align 4
  call void @_ZN8SkStrokeC1Ev(%class.SkStroke* nonnull %4) #7
  %16 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 65535
  call void @_ZN8SkStroke6setCapEN7SkPaint3CapE(%class.SkStroke* nonnull %4, i32 %18) #7
  %19 = load i32, i32* %16, align 4
  %20 = lshr i32 %19, 16
  %21 = trunc i32 %20 to i8
  call void @_ZN8SkStroke7setJoinEN7SkPaint4JoinE(%class.SkStroke* nonnull %4, i8 zeroext %21) #7
  %22 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  %23 = load float, float* %22, align 4
  call void @_ZN8SkStroke13setMiterLimitEf(%class.SkStroke* nonnull %4, float %23) #7
  %24 = load float, float* %5, align 4
  call void @_ZN8SkStroke8setWidthEf(%class.SkStroke* nonnull %4, float %24) #7
  %25 = load i32, i32* %16, align 4
  %26 = lshr i32 %25, 31
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %14, align 2
  %28 = bitcast %class.SkStrokeRec* %0 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast float* %12 to i32*
  store i32 %29, i32* %30, align 4
  call void @_ZNK8SkStroke10strokePathERK6SkPathPS0_(%class.SkStroke* nonnull %4, %class.SkPath* dereferenceable(16) %2, %class.SkPath* %1) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %31

31:                                               ; preds = %3, %8
  %32 = phi i1 [ true, %8 ], [ false, %3 ]
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8SkStrokeC1Ev(%class.SkStroke*) unnamed_addr #5

declare void @_ZN8SkStroke6setCapEN7SkPaint3CapE(%class.SkStroke*, i32) local_unnamed_addr #5

declare void @_ZN8SkStroke7setJoinEN7SkPaint4JoinE(%class.SkStroke*, i8 zeroext) local_unnamed_addr #5

declare void @_ZN8SkStroke13setMiterLimitEf(%class.SkStroke*, float) local_unnamed_addr #5

declare void @_ZN8SkStroke8setWidthEf(%class.SkStroke*, float) local_unnamed_addr #5

declare void @_ZNK8SkStroke10strokePathERK6SkPathPS0_(%class.SkStroke*, %class.SkPath* dereferenceable(16), %class.SkPath*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11SkStrokeRec12applyToPaintEP7SkPaint(%class.SkStrokeRec* nocapture readonly, %class.SkPaint*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = fcmp olt float %4, 0.000000e+00
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %1, i8 zeroext 0) #7
  br label %20

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  %11 = select i1 %10, i8 2, i8 1
  tail call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %1, i8 zeroext %11) #7
  %12 = load float, float* %3, align 4
  tail call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* %1, float %12) #7
  %13 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  tail call void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint* %1, float %14) #7
  %15 = load i32, i32* %8, align 4
  %16 = and i32 %15, 65535
  tail call void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint* %1, i32 %16) #7
  %17 = load i32, i32* %8, align 4
  %18 = lshr i32 %17, 16
  %19 = trunc i32 %18 to i8
  tail call void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint* %1, i8 zeroext %19) #7
  br label %20

20:                                               ; preds = %7, %6
  ret void
}

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #5

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #5

declare void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint*, float) local_unnamed_addr #5

declare void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint*, i32) local_unnamed_addr #5

declare void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK11SkStrokeRec18getInflationRadiusEv(%class.SkStrokeRec* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 2
  %5 = load float, float* %4, align 4
  %6 = and i32 %3, 65535
  %7 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %0, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %8, 0.000000e+00
  br i1 %9, label %24, label %10

10:                                               ; preds = %1
  %11 = fcmp oeq float %8, 0.000000e+00
  br i1 %11, label %24, label %12

12:                                               ; preds = %10
  %13 = and i32 %3, 16711680
  %14 = icmp eq i32 %13, 0
  %15 = fcmp ogt float %5, 1.000000e+00
  %16 = and i1 %14, %15
  %17 = select i1 %16, float %5, float 1.000000e+00
  %18 = icmp eq i32 %6, 2
  %19 = fcmp olt float %17, 0x3FF6A09E60000000
  %20 = and i1 %18, %19
  %21 = select i1 %20, float 0x3FF6A09E60000000, float %17
  %22 = fmul float %8, 5.000000e-01
  %23 = fmul float %22, %21
  br label %24

24:                                               ; preds = %1, %10, %12
  %25 = phi float [ %23, %12 ], [ 0.000000e+00, %1 ], [ 1.000000e+00, %10 ]
  ret float %25
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden float @_ZN11SkStrokeRec18GetInflationRadiusEN7SkPaint4JoinEfNS0_3CapEf(i8 zeroext, float, i32, float) local_unnamed_addr #6 align 2 {
  %5 = fcmp olt float %3, 0.000000e+00
  %6 = bitcast float %1 to i32
  br i1 %5, label %25, label %7

7:                                                ; preds = %4
  %8 = fcmp oeq float %3, 0.000000e+00
  br i1 %8, label %25, label %9

9:                                                ; preds = %7
  %10 = icmp eq i8 %0, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %9
  %12 = fcmp ogt float %1, 1.000000e+00
  %13 = select i1 %12, i32 %6, i32 1065353216
  %14 = bitcast i32 %13 to float
  %15 = bitcast i32 %13 to float
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi float [ %14, %11 ], [ 1.000000e+00, %9 ]
  %18 = phi float [ %15, %11 ], [ 1.000000e+00, %9 ]
  %19 = icmp eq i32 %2, 2
  %20 = fcmp olt float %17, 0x3FF6A09E60000000
  %21 = select i1 %20, float 0x3FF6A09E60000000, float %18
  %22 = select i1 %19, float %21, float %17
  %23 = fmul float %3, 5.000000e-01
  %24 = fmul float %23, %22
  br label %25

25:                                               ; preds = %7, %4, %16
  %26 = phi float [ %24, %16 ], [ 0.000000e+00, %4 ], [ 1.000000e+00, %7 ]
  ret float %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN11SkStrokeRec18GetInflationRadiusERK7SkPaintNS0_5StyleE(%class.SkPaint* nocapture readonly dereferenceable(72), i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i8 %1, 0
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  %6 = load float, float* %5, align 8
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  %10 = load float, float* %9, align 4
  %11 = and i32 %8, 12
  %12 = fcmp olt float %6, 0.000000e+00
  br i1 %12, label %27, label %13

13:                                               ; preds = %4
  %14 = fcmp oeq float %6, 0.000000e+00
  br i1 %14, label %27, label %15

15:                                               ; preds = %13
  %16 = and i32 %8, 48
  %17 = icmp eq i32 %16, 0
  %18 = fcmp ogt float %10, 1.000000e+00
  %19 = and i1 %17, %18
  %20 = select i1 %19, float %10, float 1.000000e+00
  %21 = icmp eq i32 %11, 8
  %22 = fcmp olt float %20, 0x3FF6A09E60000000
  %23 = and i1 %21, %22
  %24 = select i1 %23, float 0x3FF6A09E60000000, float %20
  %25 = fmul float %6, 5.000000e-01
  %26 = fmul float %25, %24
  br label %27

27:                                               ; preds = %2, %4, %13, %15
  %28 = phi float [ %26, %15 ], [ 0.000000e+00, %4 ], [ 1.000000e+00, %13 ], [ 0.000000e+00, %2 ]
  ret float %28
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
