; ModuleID = '../../third_party/blink/renderer/modules/crypto/normalize_algorithm.cc'
source_filename = "../../third_party/blink/renderer/modules/crypto/normalize_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::(anonymous namespace)::AlgorithmNameMapping" = type { i8*, i8, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.183" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::(anonymous namespace)::CurveNameMapping" = type { i8*, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.6" = type { %"class.v8::TracedReference.7" }
%"class.v8::TracedReference.7" = type { %"class.v8::BasicTracedReference.8" }
%"class.v8::BasicTracedReference.8" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::V8UnionObjectOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::ScriptValue", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.WTF::String" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.WTF::StringImpl"* }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::(anonymous namespace)::ErrorContext" = type { %"class.WTF::Vector.188" }
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190", [80 x i8] }
%"class.WTF::VectorBufferBase.190" = type { i8**, i32, i32 }
%"class.blink::Dictionary" = type { %"class.v8::Isolate"*, i32, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.450" }
%"class.blink::WebPrivatePtr.450" = type { i8* }
%"class.blink::WebVector" = type { %"class.std::__1::vector.220" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { i8*, i8*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i8* }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::WebCryptoAlgorithmParams"* }
%"class.blink::WebCryptoAlgorithmParams" = type { i32 (...)** }
%"struct.blink::WebCryptoAlgorithmInfo" = type { i8*, [11 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.209, i32, i8, i8, [2 x i8] }>
%union.anon.209 = type { %"class.WTF::Vector.210" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212", [16 x i8] }
%"class.WTF::VectorBufferBase.212" = type { i8*, i32, i32 }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::DOMArrayPiece" = type <{ i8*, i64, i8, i8, [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::Local.193" = type { %"class.v8::Value"* }
%"class.v8::String" = type { i8 }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.253", %"class.WTF::HashMap.253", %"class.WTF::HashMap.258", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.309", %"class.blink::Persistent.315", i8, i8, i8, %"class.WTF::Vector.317", %"class.std::__1::unique_ptr.322", %"class.blink::Persistent.328", %"class.blink::Persistent.332", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.235", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", i32, i32 }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.253" = type { %"class.WTF::HashTable.254" }
%"class.WTF::HashTable.254" = type <{ %"struct.WTF::KeyValuePair.257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.257" = type opaque
%"class.WTF::HashMap.258" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"struct.WTF::KeyValuePair.262"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.262" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.271", %class.scoped_refptr.177 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.266", i8* }
%"class.WTF::HashMap.266" = type { %"class.WTF::HashTable.267" }
%"class.WTF::HashTable.267" = type <{ %"struct.WTF::KeyValuePair.270"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.270" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.271" = type { %"class.v8::PersistentValueMapBase.272" }
%"class.v8::PersistentValueMapBase.272" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.273", i8* }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.277" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.278", %"class.WTF::String", %"class.std::__1::unique_ptr.280" }
%"class.WTF::RefCounted.278" = type { %"class.base::RefCounted.279" }
%"class.base::RefCounted.279" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.293", %"class.WTF::Vector.299", i8, i32 }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.WTF::Vector.286"* }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.212" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.299" = type { %"class.WTF::VectorBuffer.300" }
%"class.WTF::VectorBuffer.300" = type { %"class.WTF::VectorBufferBase.212", [32 x i8] }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent.315" = type { %"class.blink::PersistentBase.316" }
%"class.blink::PersistentBase.316" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.348, %"class.blink::Member.349", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.348 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.315" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.328" = type { %"class.blink::PersistentBase.329" }
%"class.blink::PersistentBase.329" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.332" = type { %"class.blink::PersistentBase.333" }
%"class.blink::PersistentBase.333" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.338" }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340" }
%"class.WTF::VectorBufferBase.340" = type { %"struct.std::__1::pair.341"*, i32, i32 }
%"struct.std::__1::pair.341" = type { %"class.blink::UntracedMember", %"class.blink::Member.343" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.blink::WebCryptoAesCbcParams" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebVector" }
%"class.blink::WebCryptoAesKeyGenParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", i16, [6 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::WebCryptoHmacImportParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", i8, i32 }
%"class.blink::WebCryptoAlgorithmParamsWithHash" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoHmacKeyGenParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", i8, i32 }
%"class.blink::WebCryptoRsaHashedKeyGenParams" = type { %"class.blink::WebCryptoAlgorithmParams", i32, %"class.blink::WebVector", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoRsaHashedImportParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash" }
%"class.blink::WebCryptoAesCtrParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebVector", i8, [7 x i8] }>
%"class.blink::WebCryptoAesGcmParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebVector", i8, [7 x i8], %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.blink::WebCryptoRsaOaepParams" = type { %"class.blink::WebCryptoAlgorithmParams", i8, %"class.blink::WebVector" }
%"class.blink::WebCryptoRsaPssParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", i32, [4 x i8] }>
%"class.blink::WebCryptoEcdsaParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash" }
%"class.blink::WebCryptoEcKeyGenParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", i32, [4 x i8] }>
%"class.blink::WebCryptoEcKeyImportParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", i32, [4 x i8] }>
%"class.blink::WebCryptoEcdhKeyDeriveParams" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebCryptoKey" }
%"class.blink::WebCryptoAesDerivedKeyParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", i16, [6 x i8] }>
%"class.blink::WebCryptoHkdfParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.blink::WebCryptoPbkdf2Params" = type <{ %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebVector", i32, [4 x i8] }>
%"class.blink::WebCryptoEd25519Params" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash" }
%"class.blink::WebCryptoX25519KeyDeriveParams" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebCryptoKey" }

$_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm = comdat any

$_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink21WebCryptoAesCbcParamsD2Ev = comdat any

$_ZN5blink21WebCryptoAesCbcParamsD0Ev = comdat any

$_ZNK5blink21WebCryptoAesCbcParams7GetTypeEv = comdat any

$_ZN5blink24WebCryptoAesKeyGenParamsD0Ev = comdat any

$_ZNK5blink24WebCryptoAesKeyGenParams7GetTypeEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink25WebCryptoHmacImportParamsD0Ev = comdat any

$_ZNK5blink25WebCryptoHmacImportParams7GetTypeEv = comdat any

$_ZN5blink32WebCryptoAlgorithmParamsWithHashD0Ev = comdat any

$_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev = comdat any

$_ZN5blink25WebCryptoHmacKeyGenParamsD0Ev = comdat any

$_ZNK5blink25WebCryptoHmacKeyGenParams7GetTypeEv = comdat any

$_ZN5blink30WebCryptoRsaHashedKeyGenParamsD2Ev = comdat any

$_ZN5blink30WebCryptoRsaHashedKeyGenParamsD0Ev = comdat any

$_ZNK5blink30WebCryptoRsaHashedKeyGenParams7GetTypeEv = comdat any

$_ZN5blink30WebCryptoRsaHashedImportParamsD0Ev = comdat any

$_ZNK5blink30WebCryptoRsaHashedImportParams7GetTypeEv = comdat any

$_ZN5blink21WebCryptoAesCtrParamsD2Ev = comdat any

$_ZN5blink21WebCryptoAesCtrParamsD0Ev = comdat any

$_ZNK5blink21WebCryptoAesCtrParams7GetTypeEv = comdat any

$_ZN5blink21WebCryptoAesGcmParamsD2Ev = comdat any

$_ZN5blink21WebCryptoAesGcmParamsD0Ev = comdat any

$_ZNK5blink21WebCryptoAesGcmParams7GetTypeEv = comdat any

$_ZN5blink22WebCryptoRsaOaepParamsD2Ev = comdat any

$_ZN5blink22WebCryptoRsaOaepParamsD0Ev = comdat any

$_ZNK5blink22WebCryptoRsaOaepParams7GetTypeEv = comdat any

$_ZN5blink21WebCryptoRsaPssParamsD0Ev = comdat any

$_ZNK5blink21WebCryptoRsaPssParams7GetTypeEv = comdat any

$_ZN5blink20WebCryptoEcdsaParamsD0Ev = comdat any

$_ZNK5blink20WebCryptoEcdsaParams7GetTypeEv = comdat any

$_ZN5blink23WebCryptoEcKeyGenParamsD0Ev = comdat any

$_ZNK5blink23WebCryptoEcKeyGenParams7GetTypeEv = comdat any

$_ZN5blink24WebCryptoAlgorithmParamsD2Ev = comdat any

$_ZN5blink26WebCryptoEcKeyImportParamsD0Ev = comdat any

$_ZNK5blink26WebCryptoEcKeyImportParams7GetTypeEv = comdat any

$_ZN5blink28WebCryptoEcdhKeyDeriveParamsD2Ev = comdat any

$_ZN5blink28WebCryptoEcdhKeyDeriveParamsD0Ev = comdat any

$_ZNK5blink28WebCryptoEcdhKeyDeriveParams7GetTypeEv = comdat any

$_ZN5blink28WebCryptoAesDerivedKeyParamsD0Ev = comdat any

$_ZNK5blink28WebCryptoAesDerivedKeyParams7GetTypeEv = comdat any

$_ZN5blink19WebCryptoHkdfParamsD2Ev = comdat any

$_ZN5blink19WebCryptoHkdfParamsD0Ev = comdat any

$_ZNK5blink19WebCryptoHkdfParams7GetTypeEv = comdat any

$_ZN5blink21WebCryptoPbkdf2ParamsD2Ev = comdat any

$_ZN5blink21WebCryptoPbkdf2ParamsD0Ev = comdat any

$_ZNK5blink21WebCryptoPbkdf2Params7GetTypeEv = comdat any

$_ZN5blink22WebCryptoEd25519ParamsD0Ev = comdat any

$_ZNK5blink22WebCryptoEd25519Params7GetTypeEv = comdat any

$_ZN5blink30WebCryptoX25519KeyDeriveParamsD2Ev = comdat any

$_ZN5blink30WebCryptoX25519KeyDeriveParamsD0Ev = comdat any

$_ZNK5blink30WebCryptoX25519KeyDeriveParams7GetTypeEv = comdat any

$_ZTVN5blink21WebCryptoAesCbcParamsE = comdat any

$_ZTVN5blink24WebCryptoAesKeyGenParamsE = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink25WebCryptoHmacImportParamsE = comdat any

$_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE = comdat any

$_ZTVN5blink25WebCryptoHmacKeyGenParamsE = comdat any

$_ZTVN5blink30WebCryptoRsaHashedKeyGenParamsE = comdat any

$_ZTVN5blink30WebCryptoRsaHashedImportParamsE = comdat any

$_ZTVN5blink21WebCryptoAesCtrParamsE = comdat any

$_ZTVN5blink21WebCryptoAesGcmParamsE = comdat any

$_ZTVN5blink22WebCryptoRsaOaepParamsE = comdat any

$_ZTVN5blink21WebCryptoRsaPssParamsE = comdat any

$_ZTVN5blink20WebCryptoEcdsaParamsE = comdat any

$_ZTVN5blink23WebCryptoEcKeyGenParamsE = comdat any

$_ZTVN5blink26WebCryptoEcKeyImportParamsE = comdat any

$_ZTVN5blink28WebCryptoEcdhKeyDeriveParamsE = comdat any

$_ZTVN5blink28WebCryptoAesDerivedKeyParamsE = comdat any

$_ZTVN5blink19WebCryptoHkdfParamsE = comdat any

$_ZTVN5blink21WebCryptoPbkdf2ParamsE = comdat any

$_ZTVN5blink22WebCryptoEd25519ParamsE = comdat any

$_ZTVN5blink30WebCryptoX25519KeyDeriveParamsE = comdat any

@.str = private unnamed_addr constant [10 x i8] c"Algorithm\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Missing or not a string\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = const char *]\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Unrecognized name\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"Unsupported operation\00", align 1
@_ZN5blink12_GLOBAL__N_122kAlgorithmNameMappingsE = internal constant [18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"] [%"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8 4, i32 1 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8 4, i32 14 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8 4, i32 13 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8 5, i32 3 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i8 5, i32 12 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8 6, i32 15 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8 6, i32 17 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8 6, i32 10 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8 7, i32 6 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8 7, i32 5 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8 7, i32 4 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8 7, i32 16 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8 7, i32 0 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i8 7, i32 7 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8 7, i32 9 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i8 7, i32 11 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8 8, i32 8 }, %"struct.blink::(anonymous namespace)::AlgorithmNameMapping" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i32 0, i32 0), i8 17, i32 2 }], align 16
@.str.10 = private unnamed_addr constant [5 x i8] c"HMAC\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"HKDF\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"ECDH\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"SHA-1\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"ECDSA\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"PBKDF2\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"X25519\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"AES-KW\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"SHA-512\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"SHA-384\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"SHA-256\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"ED25519\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"AES-CBC\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"AES-GCM\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"AES-CTR\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"RSA-PSS\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"RSA-OAEP\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"RSASSA-PKCS1-V1_5\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_web_crypto_curve_25519_enabled_E = external local_unnamed_addr global i8, align 1
@.str.28 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"encrypt\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"decrypt\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"verify\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"digest\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"generateKey\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"importKey\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"get key length\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"deriveBits\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"wrapKey\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"unwrapKey\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"AesCbcParams\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"AesKeyGenParams\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"HmacImportParams\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"HmacKeyGenParams\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"RsaHashedKeyGenParams\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"RsaHashedImportParams\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"AesCtrParams\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"AesGcmParams\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"RsaOaepParams\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"RsaPssParams\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"EcdsaParams\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"EcKeyGenParams\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"EcKeyImportParams\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"EcdhKeyDeriveParams\00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"AesDerivedKeyParams\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"HkdfParams\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"Pbkdf2Params\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"Ed25519Params\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"X25519KeyDeriveParams\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"iv\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"Missing required property\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"Not a BufferSource\00", align 1
@_ZTVN5blink21WebCryptoAesCbcParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAesCbcParams"*)* @_ZN5blink21WebCryptoAesCbcParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoAesCbcParams"*)* @_ZN5blink21WebCryptoAesCbcParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoAesCbcParams"*)* @_ZNK5blink21WebCryptoAesCbcParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.64 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"Is not a number\00", align 1
@.str.66 = private unnamed_addr constant [25 x i8] c"Outside of numeric range\00", align 1
@_ZTVN5blink24WebCryptoAesKeyGenParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParams"*)* @_ZN5blink24WebCryptoAlgorithmParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoAesKeyGenParams"*)* @_ZN5blink24WebCryptoAesKeyGenParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoAesKeyGenParams"*)* @_ZNK5blink24WebCryptoAesKeyGenParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.67 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"Missing or not an AlgorithmIdentifier\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.70 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.71 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink21V8UnionObjectOrStringE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.72 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZTVN5blink25WebCryptoHmacImportParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoHmacImportParams"*)* @_ZN5blink25WebCryptoHmacImportParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoHmacImportParams"*)* @_ZNK5blink25WebCryptoHmacImportParams7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink25WebCryptoHmacKeyGenParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoHmacKeyGenParams"*)* @_ZN5blink25WebCryptoHmacKeyGenParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoHmacKeyGenParams"*)* @_ZNK5blink25WebCryptoHmacKeyGenParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.75 = private unnamed_addr constant [14 x i8] c"modulusLength\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"publicExponent\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"Missing or not a Uint8Array\00", align 1
@_ZTVN5blink30WebCryptoRsaHashedKeyGenParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoRsaHashedKeyGenParams"*)* @_ZN5blink30WebCryptoRsaHashedKeyGenParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoRsaHashedKeyGenParams"*)* @_ZN5blink30WebCryptoRsaHashedKeyGenParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoRsaHashedKeyGenParams"*)* @_ZNK5blink30WebCryptoRsaHashedKeyGenParams7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink30WebCryptoRsaHashedImportParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoRsaHashedImportParams"*)* @_ZN5blink30WebCryptoRsaHashedImportParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoRsaHashedImportParams"*)* @_ZNK5blink30WebCryptoRsaHashedImportParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.78 = private unnamed_addr constant [8 x i8] c"counter\00", align 1
@_ZTVN5blink21WebCryptoAesCtrParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAesCtrParams"*)* @_ZN5blink21WebCryptoAesCtrParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoAesCtrParams"*)* @_ZN5blink21WebCryptoAesCtrParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoAesCtrParams"*)* @_ZNK5blink21WebCryptoAesCtrParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.79 = private unnamed_addr constant [15 x i8] c"additionalData\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"tagLength\00", align 1
@_ZTVN5blink21WebCryptoAesGcmParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAesGcmParams"*)* @_ZN5blink21WebCryptoAesGcmParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoAesGcmParams"*)* @_ZN5blink21WebCryptoAesGcmParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoAesGcmParams"*)* @_ZNK5blink21WebCryptoAesGcmParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.81 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@_ZTVN5blink22WebCryptoRsaOaepParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoRsaOaepParams"*)* @_ZN5blink22WebCryptoRsaOaepParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoRsaOaepParams"*)* @_ZN5blink22WebCryptoRsaOaepParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoRsaOaepParams"*)* @_ZNK5blink22WebCryptoRsaOaepParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.82 = private unnamed_addr constant [11 x i8] c"saltLength\00", align 1
@_ZTVN5blink21WebCryptoRsaPssParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParams"*)* @_ZN5blink24WebCryptoAlgorithmParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoRsaPssParams"*)* @_ZN5blink21WebCryptoRsaPssParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoRsaPssParams"*)* @_ZNK5blink21WebCryptoRsaPssParams7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink20WebCryptoEcdsaParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoEcdsaParams"*)* @_ZN5blink20WebCryptoEcdsaParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoEcdsaParams"*)* @_ZNK5blink20WebCryptoEcdsaParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.83 = private unnamed_addr constant [11 x i8] c"namedCurve\00", align 1
@_ZN5blink12_GLOBAL__N_118kCurveNameMappingsE = internal unnamed_addr constant [3 x %"struct.blink::(anonymous namespace)::CurveNameMapping"] [%"struct.blink::(anonymous namespace)::CurveNameMapping" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i32 0, i32 0), i32 0 }, %"struct.blink::(anonymous namespace)::CurveNameMapping" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), i32 1 }, %"struct.blink::(anonymous namespace)::CurveNameMapping" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i32 0, i32 0), i32 2 }], align 16
@.str.84 = private unnamed_addr constant [24 x i8] c"Unrecognized namedCurve\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"P-256\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"P-384\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"P-521\00", align 1
@_ZTVN5blink23WebCryptoEcKeyGenParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParams"*)* @_ZN5blink24WebCryptoAlgorithmParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoEcKeyGenParams"*)* @_ZN5blink23WebCryptoEcKeyGenParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoEcKeyGenParams"*)* @_ZNK5blink23WebCryptoEcKeyGenParams7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink26WebCryptoEcKeyImportParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParams"*)* @_ZN5blink24WebCryptoAlgorithmParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoEcKeyImportParams"*)* @_ZN5blink26WebCryptoEcKeyImportParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoEcKeyImportParams"*)* @_ZNK5blink26WebCryptoEcKeyImportParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.88 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.89 = private unnamed_addr constant [20 x i8] c"Must be a CryptoKey\00", align 1
@_ZN5blink11V8CryptoKey18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZTVN5blink28WebCryptoEcdhKeyDeriveParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoEcdhKeyDeriveParams"*)* @_ZN5blink28WebCryptoEcdhKeyDeriveParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoEcdhKeyDeriveParams"*)* @_ZN5blink28WebCryptoEcdhKeyDeriveParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoEcdhKeyDeriveParams"*)* @_ZNK5blink28WebCryptoEcdhKeyDeriveParams7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink28WebCryptoAesDerivedKeyParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParams"*)* @_ZN5blink24WebCryptoAlgorithmParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoAesDerivedKeyParams"*)* @_ZN5blink28WebCryptoAesDerivedKeyParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoAesDerivedKeyParams"*)* @_ZNK5blink28WebCryptoAesDerivedKeyParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.90 = private unnamed_addr constant [5 x i8] c"salt\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@_ZTVN5blink19WebCryptoHkdfParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoHkdfParams"*)* @_ZN5blink19WebCryptoHkdfParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoHkdfParams"*)* @_ZN5blink19WebCryptoHkdfParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoHkdfParams"*)* @_ZNK5blink19WebCryptoHkdfParams7GetTypeEv to i8*)] }, comdat, align 8
@.str.92 = private unnamed_addr constant [11 x i8] c"iterations\00", align 1
@_ZTVN5blink21WebCryptoPbkdf2ParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoPbkdf2Params"*)* @_ZN5blink21WebCryptoPbkdf2ParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoPbkdf2Params"*)* @_ZN5blink21WebCryptoPbkdf2ParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoPbkdf2Params"*)* @_ZNK5blink21WebCryptoPbkdf2Params7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink22WebCryptoEd25519ParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoAlgorithmParamsWithHash"*)* @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoEd25519Params"*)* @_ZN5blink22WebCryptoEd25519ParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoEd25519Params"*)* @_ZNK5blink22WebCryptoEd25519Params7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink30WebCryptoX25519KeyDeriveParamsE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebCryptoX25519KeyDeriveParams"*)* @_ZN5blink30WebCryptoX25519KeyDeriveParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::WebCryptoX25519KeyDeriveParams"*)* @_ZN5blink30WebCryptoX25519KeyDeriveParamsD0Ev to i8*), i8* bitcast (i32 (%"class.blink::WebCryptoX25519KeyDeriveParams"*)* @_ZNK5blink30WebCryptoX25519KeyDeriveParams7GetTypeEv to i8*)] }, comdat, align 8
@switch.table._ZN5blink12_GLOBAL__N_124ParseAlgorithmDictionaryEPN2v87IsolateERKN3WTF6StringERKNS_10DictionaryENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE = private unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18NormalizeAlgorithmEPN2v87IsolateEPKNS_21V8UnionObjectOrStringENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::V8UnionObjectOrString"*, i32, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %6 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 80, i1 false)
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %6 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ParseAlgorithmIdentifierEPN2v87IsolateERKNS_21V8UnionObjectOrStringENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::V8UnionObjectOrString"* dereferenceable(48) %1, i32 %2, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %3, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %13 = load i32, i32* %11, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %5
  store i32 0, i32* %11, align 4
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8**, i8*** %17, align 8
  %19 = bitcast i8* %8 to i8**
  %20 = icmp eq i8** %18, %19
  br i1 %20, label %23, label %21, !prof !3

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %22, i8** %18) #12
  br label %23

23:                                               ; preds = %16, %21
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ParseAlgorithmIdentifierEPN2v87IsolateERKNS_21V8UnionObjectOrStringENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::V8UnionObjectOrString"* dereferenceable(48), i32, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %7 = alloca i8*, align 8
  %8 = alloca %"class.blink::Dictionary", align 8
  %9 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %10 = alloca %"class.blink::Dictionary", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %15 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %29, label %21, !prof !2

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8**, i8*** %22, align 8
  %24 = zext i32 %17 to i64
  %25 = getelementptr inbounds i8*, i8** %23, i64 %24
  %26 = bitcast i8** %25 to i64*
  store i64 ptrtoint ([10 x i8]* @.str to i64), i64* %26, align 8
  %27 = load i32, i32* %16, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %16, align 4
  br label %31

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %30, i8** nonnull dereferenceable(8) %7) #12
  br label %31

31:                                               ; preds = %21, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %32 = getelementptr inbounds %"class.blink::V8UnionObjectOrString", %"class.blink::V8UnionObjectOrString"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %80

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::V8UnionObjectOrString", %"class.blink::V8UnionObjectOrString"* %1, i64 0, i32 3
  %37 = bitcast %"class.blink::Dictionary"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %8, i64 0, i32 0
  store %"class.v8::Isolate"* null, %"class.v8::Isolate"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %8, i64 0, i32 1
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %8, i64 0, i32 2, i32 0
  store %"class.v8::Object"* null, %"class.v8::Object"** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %9, i64 0, i32 0, i32 0, i32 1, i64 0
  %43 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %9 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %44, align 8
  %45 = icmp ugt i32 %41, 10
  br i1 %45, label %46, label %54

46:                                               ; preds = %35
  %47 = zext i32 %41 to i64
  %48 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %47) #12
  %49 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %50 = ptrtoint i8* %49 to i64
  %51 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %9 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = lshr i64 %48, 3
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %44, align 8
  br label %54

54:                                               ; preds = %46, %35
  %55 = phi i8* [ %42, %35 ], [ %49, %46 ]
  %56 = load i32, i32* %16, align 4
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8**, i8*** %58, align 8
  %60 = icmp ne i8* %55, null
  %61 = icmp ne i8** %59, null
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %67, !prof !3

63:                                               ; preds = %54
  %64 = zext i32 %56 to i64
  %65 = bitcast i8** %59 to i8*
  %66 = shl nuw nsw i64 %64, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %65, i64 %66, i1 false) #12
  br label %67

67:                                               ; preds = %54, %63
  %68 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ParseAlgorithmDictionaryEPN2v87IsolateERKN3WTF6StringERKNS_10DictionaryENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.WTF::String"* dereferenceable(8) %36, %"class.blink::Dictionary"* nonnull dereferenceable(24) %8, i32 %2, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %3, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %69 = load i32, i32* %57, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71, !prof !2

71:                                               ; preds = %67
  store i32 0, i32* %57, align 4
  br label %72

72:                                               ; preds = %71, %67
  %73 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8**, i8*** %73, align 8
  %75 = bitcast i8* %42 to i8**
  %76 = icmp eq i8** %74, %75
  br i1 %76, label %79, label %77, !prof !3

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %9, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %78, i8** %74) #12
  br label %79

79:                                               ; preds = %72, %77
  store i8** null, i8*** %73, align 8
  br label %178

80:                                               ; preds = %31
  %81 = bitcast %"class.blink::Dictionary"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 24, i1 false)
  %82 = getelementptr inbounds %"class.blink::V8UnionObjectOrString", %"class.blink::V8UnionObjectOrString"* %1, i64 0, i32 2
  %83 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %82) #12
  call void @_ZN5blink10DictionaryC1EPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %10, %"class.v8::Isolate"* %0, %"class.v8::Value"* %83, %"class.blink::ExceptionState"* dereferenceable(72) %5) #12
  %84 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %178

87:                                               ; preds = %80
  %88 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %90 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 4, i32* %94, align 8
  %95 = call zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF6StringEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::String"* nonnull dereferenceable(8) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  br i1 %95, label %120, label %96

96:                                               ; preds = %87
  %97 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #12
  %98 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %99, align 8
  %100 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %101 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %101, i64 3
  %103 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %102, align 8
  call void %103(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %13) #12
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #12
  br label %119

119:                                              ; preds = %96, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #12
  br label %160

120:                                              ; preds = %87
  %121 = load i32, i32* %18, align 8
  %122 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %14, i64 0, i32 0, i32 0, i32 1, i64 0
  %123 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %14 to i8**
  store i8* %122, i8** %123, align 8
  %124 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %124, align 8
  %125 = icmp ugt i32 %121, 10
  br i1 %125, label %126, label %134

126:                                              ; preds = %120
  %127 = zext i32 %121 to i64
  %128 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %127) #12
  %129 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %128, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %130 = ptrtoint i8* %129 to i64
  %131 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %14 to i64*
  store atomic i64 %130, i64* %131 monotonic, align 8
  %132 = lshr i64 %128, 3
  %133 = trunc i64 %132 to i32
  store i32 %133, i32* %124, align 8
  br label %134

134:                                              ; preds = %126, %120
  %135 = phi i8* [ %122, %120 ], [ %129, %126 ]
  %136 = load i32, i32* %16, align 4
  %137 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8**, i8*** %138, align 8
  %140 = icmp ne i8* %135, null
  %141 = icmp ne i8** %139, null
  %142 = and i1 %140, %141
  br i1 %142, label %143, label %147, !prof !3

143:                                              ; preds = %134
  %144 = zext i32 %136 to i64
  %145 = bitcast i8** %139 to i8*
  %146 = shl nuw nsw i64 %144, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* nonnull align 8 %145, i64 %146, i1 false) #12
  br label %147

147:                                              ; preds = %134, %143
  %148 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ParseAlgorithmDictionaryEPN2v87IsolateERKN3WTF6StringERKNS_10DictionaryENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::Dictionary"* nonnull dereferenceable(24) %10, i32 %2, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %3, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %149 = load i32, i32* %137, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151, !prof !2

151:                                              ; preds = %147
  store i32 0, i32* %137, align 4
  br label %152

152:                                              ; preds = %151, %147
  %153 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8**, i8*** %153, align 8
  %155 = bitcast i8* %122 to i8**
  %156 = icmp eq i8** %154, %155
  br i1 %156, label %159, label %157, !prof !3

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %14, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %158, i8** %154) #12
  br label %159

159:                                              ; preds = %152, %157
  store i8** null, i8*** %153, align 8
  br label %160

160:                                              ; preds = %159, %119
  %161 = phi i1 [ false, %119 ], [ %148, %159 ]
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #12
  br label %177

177:                                              ; preds = %160, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  br label %178

178:                                              ; preds = %177, %80, %79
  %179 = phi i8* [ %37, %79 ], [ %81, %80 ], [ %81, %177 ]
  %180 = phi i1 [ %68, %79 ], [ false, %80 ], [ %161, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #12
  ret i1 %180
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ParseAlgorithmDictionaryEPN2v87IsolateERKN3WTF6StringERKNS_10DictionaryENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::Dictionary"* dereferenceable(24), i32, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %8 = alloca %"class.blink::WebCryptoKey", align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca double, align 8
  %16 = alloca i8*, align 8
  %17 = alloca %"class.blink::WebCryptoKey", align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8, align 1
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca double, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8, align 1
  %31 = alloca %"class.blink::WebVector", align 16
  %32 = alloca i8*, align 8
  %33 = alloca double, align 8
  %34 = alloca i8, align 1
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.blink::WebVector", align 16
  %37 = alloca i8, align 1
  %38 = alloca %"class.blink::WebVector", align 16
  %39 = alloca i8, align 1
  %40 = alloca i8*, align 8
  %41 = alloca i8, align 1
  %42 = alloca %"class.WTF::String", align 8
  %43 = alloca double, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.WTF::String", align 8
  %46 = alloca %"class.blink::WebVector", align 16
  %47 = alloca i8*, align 8
  %48 = alloca i8*, align 8
  %49 = alloca i8*, align 8
  %50 = alloca i8*, align 8
  %51 = alloca i8*, align 8
  %52 = alloca i8, align 1
  %53 = alloca %"class.WTF::String", align 8
  %54 = alloca double, align 8
  %55 = alloca i8*, align 8
  %56 = alloca i8, align 1
  %57 = alloca %"class.WTF::String", align 8
  %58 = alloca %"class.blink::WebVector", align 16
  %59 = alloca i8*, align 8
  %60 = alloca i8*, align 8
  %61 = alloca %"class.WTF::StringView", align 8
  %62 = alloca %"class.WTF::StringView", align 8
  %63 = alloca %"class.WTF::String", align 8
  %64 = alloca %"class.WTF::String", align 8
  %65 = alloca %"class.std::__1::unique_ptr.203", align 8
  %66 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  br i1 %72, label %78, label %76

76:                                               ; preds = %7
  %77 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  br label %80

78:                                               ; preds = %7
  %79 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  br label %127

80:                                               ; preds = %123, %76
  %81 = phi i64 [ %125, %123 ], [ 18, %76 ]
  %82 = phi %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* [ %124, %123 ], [ getelementptr inbounds ([18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"], [18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"]* @_ZN5blink12_GLOBAL__N_122kAlgorithmNameMappingsE, i64 0, i64 0), %76 ]
  %83 = lshr i64 %81, 1
  %84 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %82, i64 %83
  %85 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %82, i64 %83, i32 1
  %86 = load i8, i8* %85, align 8
  %87 = zext i8 %86 to i32
  %88 = icmp ugt i32 %74, %87
  br i1 %88, label %119, label %89

89:                                               ; preds = %80
  %90 = icmp ult i32 %74, %87
  br i1 %90, label %123, label %91

91:                                               ; preds = %89
  %92 = zext i8 %86 to i64
  %93 = icmp eq i8 %86, 0
  br i1 %93, label %123, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %84, i64 0, i32 0
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %114, %94
  %98 = phi i64 [ 0, %94 ], [ %116, %114 ]
  %99 = xor i64 %98, -1
  %100 = add nsw i64 %99, %92
  %101 = getelementptr inbounds i8, i8* %96, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = getelementptr inbounds i8, i8* %77, i64 %100
  %104 = load i8, i8* %103, align 1
  %105 = icmp sgt i8 %104, -1
  br i1 %105, label %106, label %123

106:                                              ; preds = %97
  %107 = add nsw i8 %104, -97
  %108 = icmp ult i8 %107, 26
  %109 = zext i1 %108 to i8
  %110 = shl nuw nsw i8 %109, 5
  %111 = xor i8 %110, -1
  %112 = and i8 %104, %111
  %113 = icmp ult i8 %102, %112
  br i1 %113, label %119, label %114

114:                                              ; preds = %106
  %115 = icmp ugt i8 %102, %112
  %116 = add nuw nsw i64 %98, 1
  %117 = icmp eq i64 %116, %92
  %118 = or i1 %117, %115
  br i1 %118, label %123, label %97

119:                                              ; preds = %106, %80
  %120 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %84, i64 1
  %121 = xor i64 %83, -1
  %122 = add i64 %81, %121
  br label %123

123:                                              ; preds = %114, %97, %119, %91, %89
  %124 = phi %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* [ %120, %119 ], [ %82, %89 ], [ %82, %91 ], [ %82, %97 ], [ %82, %114 ]
  %125 = phi i64 [ %122, %119 ], [ %83, %89 ], [ %83, %91 ], [ %83, %97 ], [ %83, %114 ]
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %177, label %80

127:                                              ; preds = %173, %78
  %128 = phi i64 [ %175, %173 ], [ 18, %78 ]
  %129 = phi %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* [ %174, %173 ], [ getelementptr inbounds ([18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"], [18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"]* @_ZN5blink12_GLOBAL__N_122kAlgorithmNameMappingsE, i64 0, i64 0), %78 ]
  %130 = lshr i64 %128, 1
  %131 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %129, i64 %130
  %132 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %129, i64 %130, i32 1
  %133 = load i8, i8* %132, align 8
  %134 = zext i8 %133 to i32
  %135 = icmp ugt i32 %74, %134
  br i1 %135, label %169, label %136

136:                                              ; preds = %127
  %137 = icmp ult i32 %74, %134
  br i1 %137, label %173, label %138

138:                                              ; preds = %136
  %139 = zext i8 %133 to i64
  %140 = icmp eq i8 %133, 0
  br i1 %140, label %173, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %131, i64 0, i32 0
  br label %143

143:                                              ; preds = %164, %141
  %144 = phi i64 [ 0, %141 ], [ %166, %164 ]
  %145 = xor i64 %144, -1
  %146 = add nsw i64 %145, %139
  %147 = getelementptr inbounds i16, i16* %79, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = icmp ult i16 %148, 128
  br i1 %149, label %150, label %173

150:                                              ; preds = %143
  %151 = load i8*, i8** %142, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 %146
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 %153 to i32
  %155 = add nsw i16 %148, -97
  %156 = icmp ult i16 %155, 26
  %157 = zext i1 %156 to i16
  %158 = shl nuw nsw i16 %157, 5
  %159 = xor i16 %158, -1
  %160 = and i16 %148, %159
  %161 = and i32 %154, 65535
  %162 = zext i16 %160 to i32
  %163 = icmp ult i32 %161, %162
  br i1 %163, label %169, label %164

164:                                              ; preds = %150
  %165 = icmp ugt i32 %161, %162
  %166 = add nuw nsw i64 %144, 1
  %167 = icmp eq i64 %166, %139
  %168 = or i1 %167, %165
  br i1 %168, label %173, label %143

169:                                              ; preds = %150, %127
  %170 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %131, i64 1
  %171 = xor i64 %130, -1
  %172 = add i64 %128, %171
  br label %173

173:                                              ; preds = %164, %143, %169, %138, %136
  %174 = phi %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* [ %170, %169 ], [ %129, %136 ], [ %129, %138 ], [ %129, %143 ], [ %129, %164 ]
  %175 = phi i64 [ %172, %169 ], [ %130, %136 ], [ %130, %138 ], [ %130, %143 ], [ %130, %164 ]
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %127

177:                                              ; preds = %123, %173
  %178 = phi %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* [ %174, %173 ], [ %124, %123 ]
  %179 = icmp eq %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %178, getelementptr inbounds ([18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"], [18 x %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"]* @_ZN5blink12_GLOBAL__N_122kAlgorithmNameMappingsE, i64 1, i64 0)
  br i1 %179, label %227, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %178, i64 0, i32 1
  %182 = load i8, i8* %181, align 8
  %183 = zext i8 %182 to i32
  %184 = icmp eq %"class.WTF::StringImpl"* %68, null
  %185 = select i1 %184, i32 0, i32 %74
  %186 = icmp eq i32 %185, %183
  %187 = bitcast %"class.WTF::StringView"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #12
  %188 = bitcast %"class.WTF::StringView"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #12
  br i1 %186, label %189, label %218

189:                                              ; preds = %180
  br i1 %184, label %190, label %194

190:                                              ; preds = %189
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 1
  store i8* null, i8** %191, align 8
  %192 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %193 = bitcast %"class.WTF::StringView"* %61 to i64*
  store i64 %192, i64* %193, align 8
  br label %199

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %195, align 8
  %196 = load i32, i32* %73, align 4
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 1
  %198 = bitcast i8** %197 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %198, align 8
  br label %199

199:                                              ; preds = %194, %190
  %200 = phi i32 [ %196, %194 ], [ 0, %190 ]
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %61, i64 0, i32 2
  store i32 %200, i32* %201, align 8
  %202 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %178, i64 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %211, label %205

205:                                              ; preds = %199
  %206 = tail call i64 @strlen(i8* nonnull %203) #13
  %207 = icmp ult i64 %206, 4294967296
  br i1 %207, label %209, label %208, !prof !3

208:                                              ; preds = %205
  tail call void @llvm.trap() #12
  unreachable

209:                                              ; preds = %205
  %210 = trunc i64 %206 to i32
  br label %211

211:                                              ; preds = %209, %199
  %212 = phi i32 [ %210, %209 ], [ 0, %199 ]
  %213 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %214 = bitcast %"class.WTF::StringView"* %62 to i64*
  store i64 %213, i64* %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %62, i64 0, i32 1
  store i8* %203, i8** %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %62, i64 0, i32 2
  store i32 %212, i32* %216, align 8
  %217 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %61, %"class.WTF::StringView"* nonnull dereferenceable(24) %62) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12
  br i1 %217, label %219, label %227

218:                                              ; preds = %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12
  br label %227

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"struct.blink::(anonymous namespace)::AlgorithmNameMapping", %"struct.blink::(anonymous namespace)::AlgorithmNameMapping"* %178, i64 0, i32 2
  %221 = load i32, i32* %220, align 4
  %222 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_web_crypto_curve_25519_enabled_E, align 1, !range !4
  %223 = icmp ne i8 %222, 0
  %224 = and i32 %221, -2
  %225 = icmp ne i32 %224, 16
  %226 = or i1 %225, %223
  br i1 %226, label %249, label %227

227:                                              ; preds = %177, %211, %218, %219
  %228 = bitcast %"class.WTF::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #12
  %229 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKc(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0))
  %230 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %229, %"class.WTF::StringImpl"** %230, align 8
  %231 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %232 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %231, align 8
  %233 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %232, align 8
  call void %233(%"class.blink::ExceptionState"* %6, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %63) #12
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %1232, label %236

236:                                              ; preds = %227
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %1232

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #12
  br label %1232

249:                                              ; preds = %219
  %250 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %251, -1
  store i32 %252, i32* %250, align 4
  %253 = call %"struct.blink::WebCryptoAlgorithmInfo"* @_ZN5blink18WebCryptoAlgorithm19LookupAlgorithmInfoENS_20WebCryptoAlgorithmIdE(i32 %221) #12
  %254 = zext i32 %3 to i64
  %255 = getelementptr inbounds %"struct.blink::WebCryptoAlgorithmInfo", %"struct.blink::WebCryptoAlgorithmInfo"* %253, i64 0, i32 1, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, -1
  br i1 %257, label %258, label %306

258:                                              ; preds = %249
  %259 = getelementptr inbounds %"struct.blink::WebCryptoAlgorithmInfo", %"struct.blink::WebCryptoAlgorithmInfo"* %253, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = bitcast i8** %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261)
  store i8* %260, i8** %60, align 8
  %262 = load i32, i32* %250, align 4
  %263 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %262, %264
  br i1 %265, label %275, label %266, !prof !2

266:                                              ; preds = %258
  %267 = ptrtoint i8* %260 to i64
  %268 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %269 = load i8**, i8*** %268, align 8
  %270 = zext i32 %262 to i64
  %271 = getelementptr inbounds i8*, i8** %269, i64 %270
  %272 = bitcast i8** %271 to i64*
  store i64 %267, i64* %272, align 8
  %273 = load i32, i32* %250, align 4
  %274 = add i32 %273, 1
  store i32 %274, i32* %250, align 4
  br label %277

275:                                              ; preds = %258
  %276 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %276, i8** nonnull dereferenceable(8) %60) #12
  br label %277

277:                                              ; preds = %266, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261)
  %278 = bitcast %"class.WTF::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #12
  %279 = icmp ult i32 %3, 11
  br i1 %279, label %280, label %284

280:                                              ; preds = %277
  %281 = sext i32 %3 to i64
  %282 = getelementptr inbounds [11 x i8*], [11 x i8*]* @switch.table._ZN5blink12_GLOBAL__N_124ParseAlgorithmDictionaryEPN2v87IsolateERKN3WTF6StringERKNS_10DictionaryENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE, i64 0, i64 %281
  %283 = load i8*, i8** %282, align 8
  br label %284

284:                                              ; preds = %277, %280
  %285 = phi i8* [ %283, %280 ], [ null, %277 ]
  %286 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i8* %285)
  %287 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %286, %"class.WTF::StringImpl"** %287, align 8
  %288 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %289 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %288, align 8
  %290 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %289, align 8
  call void %290(%"class.blink::ExceptionState"* %6, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %64) #12
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %287, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %1232, label %293

293:                                              ; preds = %284
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %1232

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #12
  br label %1232

306:                                              ; preds = %249
  %307 = sext i8 %256 to i32
  %308 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #12
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %65, i64 0, i32 0, i32 0, i32 0
  %310 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i64*
  store i64 0, i64* %310, align 8
  switch i32 %307, label %311 [
    i32 0, label %1220
    i32 1, label %312
    i32 2, label %388
    i32 3, label %450
    i32 4, label %468
    i32 5, label %486
    i32 6, label %504
    i32 9, label %522
    i32 7, label %633
    i32 8, label %751
    i32 10, label %803
    i32 11, label %865
    i32 12, label %883
    i32 13, label %957
    i32 14, label %1031
    i32 15, label %1067
    i32 16, label %1129
    i32 17, label %1147
    i32 18, label %1165
    i32 19, label %1183
  ]

311:                                              ; preds = %306
  store %"class.blink::WebCryptoAlgorithmParams"* null, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  br label %1232

312:                                              ; preds = %306
  %313 = bitcast i8** %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #12
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8** %59, align 8
  %314 = load i32, i32* %250, align 4
  %315 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %316 = load i32, i32* %315, align 8
  %317 = icmp eq i32 %314, %316
  br i1 %317, label %326, label %318, !prof !2

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8**, i8*** %319, align 8
  %321 = zext i32 %314 to i64
  %322 = getelementptr inbounds i8*, i8** %320, i64 %321
  %323 = bitcast i8** %322 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.41 to i64), i64* %323, align 8
  %324 = load i32, i32* %250, align 4
  %325 = add i32 %324, 1
  store i32 %325, i32* %250, align 4
  br label %328

326:                                              ; preds = %312
  %327 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %327, i8** nonnull dereferenceable(8) %59) #12
  br label %328

328:                                              ; preds = %326, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #12
  %329 = bitcast %"class.blink::WebVector"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %329) #12
  %330 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %58, i64 0, i32 0, i32 0, i32 0
  %331 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %58, i64 0, i32 0, i32 0, i32 1
  %332 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %58, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %329, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %56) #12
  store i8 -86, i8* %56, align 1
  %333 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0), i8* nonnull dereferenceable(1) %56, %"class.blink::WebVector"* nonnull dereferenceable(24) %58, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  %334 = load i8, i8* %56, align 1, !range !4
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %336, label %360

336:                                              ; preds = %328
  %337 = bitcast %"class.WTF::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #12
  %338 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %339 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %338, %"class.WTF::StringImpl"** %339, align 8
  %340 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %341 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %341, i64 3
  %343 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %342, align 8
  call void %343(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %57) #12
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %336
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #12
  br label %359

359:                                              ; preds = %358, %355, %336
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #12
  br label %381

360:                                              ; preds = %328
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #12
  br i1 %333, label %361, label %381

361:                                              ; preds = %360
  %362 = call i8* @_Znwm(i64 32) #14
  %363 = bitcast %"class.blink::WebVector"* %58 to <2 x i64>*
  %364 = load <2 x i64>, <2 x i64>* %363, align 16
  %365 = bitcast %"class.blink::WebVector"* %58 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %365, align 16
  %366 = bitcast i8** %332 to i64*
  %367 = load i64, i64* %366, align 16
  store i64 0, i64* %366, align 16
  %368 = bitcast i8* %362 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesCbcParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %368, align 8
  %369 = getelementptr inbounds i8, i8* %362, i64 8
  %370 = bitcast i8* %369 to <2 x i64>*
  store <2 x i64> %364, <2 x i64>* %370, align 8
  %371 = getelementptr inbounds i8, i8* %362, i64 24
  %372 = bitcast i8* %371 to i64*
  store i64 %367, i64* %372, align 8
  %373 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %374 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %362, i8** %374, align 8
  %375 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %373, null
  br i1 %375, label %381, label %376

376:                                              ; preds = %361
  %377 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %373 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %378 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %378, i64 1
  %380 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %379, align 8
  call void %380(%"class.blink::WebCryptoAlgorithmParams"* nonnull %373) #12
  br label %381

381:                                              ; preds = %376, %361, %360, %359
  %382 = phi i1 [ false, %360 ], [ false, %359 ], [ true, %376 ], [ true, %361 ]
  %383 = load i8*, i8** %330, align 16
  %384 = icmp eq i8* %383, null
  br i1 %384, label %1219, label %385

385:                                              ; preds = %381
  %386 = ptrtoint i8* %383 to i64
  %387 = bitcast i8** %331 to i64*
  store i64 %386, i64* %387, align 8
  call void @_ZdlPv(i8* nonnull %383) #14
  br label %1219

388:                                              ; preds = %306
  %389 = bitcast i8** %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #12
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i8** %55, align 8
  %390 = load i32, i32* %250, align 4
  %391 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %392 = load i32, i32* %391, align 8
  %393 = icmp eq i32 %390, %392
  br i1 %393, label %402, label %394, !prof !2

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %396 = load i8**, i8*** %395, align 8
  %397 = zext i32 %390 to i64
  %398 = getelementptr inbounds i8*, i8** %396, i64 %397
  %399 = bitcast i8** %398 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.42 to i64), i64* %399, align 8
  %400 = load i32, i32* %250, align 4
  %401 = add i32 %400, 1
  store i32 %401, i32* %250, align 4
  br label %404

402:                                              ; preds = %388
  %403 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %403, i8** nonnull dereferenceable(8) %55) #12
  br label %404

404:                                              ; preds = %402, %394
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #12
  %405 = bitcast double* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %405) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %52) #12
  store i8 -86, i8* %52, align 1
  %406 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* nonnull dereferenceable(1) %52, double* nonnull dereferenceable(8) %54, double 6.553500e+04, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %406, label %407, label %434

407:                                              ; preds = %404
  %408 = load i8, i8* %52, align 1, !range !4
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %410, label %435

410:                                              ; preds = %407
  %411 = bitcast %"class.WTF::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #12
  %412 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %413 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %412, %"class.WTF::StringImpl"** %413, align 8
  %414 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %415 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %415, i64 3
  %417 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %416, align 8
  call void %417(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %53) #12
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %413, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %410
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #12
  br label %433

433:                                              ; preds = %432, %429, %410
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #12
  br label %434

434:                                              ; preds = %433, %404
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %405) #12
  br label %1223

435:                                              ; preds = %407
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #12
  %436 = load double, double* %54, align 8
  %437 = fptoui double %436 to i16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %405) #12
  %438 = call i8* @_Znwm(i64 16) #14
  %439 = bitcast i8* %438 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24WebCryptoAesKeyGenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %439, align 8
  %440 = getelementptr inbounds i8, i8* %438, i64 8
  %441 = bitcast i8* %440 to i16*
  store i16 %437, i16* %441, align 8
  %442 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %443 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %438, i8** %443, align 8
  %444 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %442, null
  br i1 %444, label %1220, label %445

445:                                              ; preds = %435
  %446 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %442 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %447 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %446, align 8
  %448 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %447, i64 1
  %449 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %448, align 8
  call void %449(%"class.blink::WebCryptoAlgorithmParams"* nonnull %442) #12
  br label %1220

450:                                              ; preds = %306
  %451 = bitcast i8** %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %451) #12
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8** %51, align 8
  %452 = load i32, i32* %250, align 4
  %453 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %454 = load i32, i32* %453, align 8
  %455 = icmp eq i32 %452, %454
  br i1 %455, label %464, label %456, !prof !2

456:                                              ; preds = %450
  %457 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %458 = load i8**, i8*** %457, align 8
  %459 = zext i32 %452 to i64
  %460 = getelementptr inbounds i8*, i8** %458, i64 %459
  %461 = bitcast i8** %460 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.43 to i64), i64* %461, align 8
  %462 = load i32, i32* %250, align 4
  %463 = add i32 %462, 1
  store i32 %463, i32* %250, align 4
  br label %466

464:                                              ; preds = %450
  %465 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %465, i8** nonnull dereferenceable(8) %51) #12
  br label %466

466:                                              ; preds = %464, %456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %451) #12
  %467 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ParseHmacImportParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %467, label %1220, label %1223

468:                                              ; preds = %306
  %469 = bitcast i8** %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %469) #12
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0), i8** %50, align 8
  %470 = load i32, i32* %250, align 4
  %471 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %472 = load i32, i32* %471, align 8
  %473 = icmp eq i32 %470, %472
  br i1 %473, label %482, label %474, !prof !2

474:                                              ; preds = %468
  %475 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %476 = load i8**, i8*** %475, align 8
  %477 = zext i32 %470 to i64
  %478 = getelementptr inbounds i8*, i8** %476, i64 %477
  %479 = bitcast i8** %478 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.44 to i64), i64* %479, align 8
  %480 = load i32, i32* %250, align 4
  %481 = add i32 %480, 1
  store i32 %481, i32* %250, align 4
  br label %484

482:                                              ; preds = %468
  %483 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %483, i8** nonnull dereferenceable(8) %50) #12
  br label %484

484:                                              ; preds = %482, %474
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %469) #12
  %485 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ParseHmacKeyGenParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %485, label %1220, label %1223

486:                                              ; preds = %306
  %487 = bitcast i8** %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #12
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), i8** %49, align 8
  %488 = load i32, i32* %250, align 4
  %489 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %490 = load i32, i32* %489, align 8
  %491 = icmp eq i32 %488, %490
  br i1 %491, label %500, label %492, !prof !2

492:                                              ; preds = %486
  %493 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %494 = load i8**, i8*** %493, align 8
  %495 = zext i32 %488 to i64
  %496 = getelementptr inbounds i8*, i8** %494, i64 %495
  %497 = bitcast i8** %496 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.45 to i64), i64* %497, align 8
  %498 = load i32, i32* %250, align 4
  %499 = add i32 %498, 1
  store i32 %499, i32* %250, align 4
  br label %502

500:                                              ; preds = %486
  %501 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %501, i8** nonnull dereferenceable(8) %49) #12
  br label %502

502:                                              ; preds = %500, %492
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #12
  %503 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_126ParseRsaHashedKeyGenParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %503, label %1220, label %1223

504:                                              ; preds = %306
  %505 = bitcast i8** %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %505) #12
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i64 0, i64 0), i8** %48, align 8
  %506 = load i32, i32* %250, align 4
  %507 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %508 = load i32, i32* %507, align 8
  %509 = icmp eq i32 %506, %508
  br i1 %509, label %518, label %510, !prof !2

510:                                              ; preds = %504
  %511 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %512 = load i8**, i8*** %511, align 8
  %513 = zext i32 %506 to i64
  %514 = getelementptr inbounds i8*, i8** %512, i64 %513
  %515 = bitcast i8** %514 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.46 to i64), i64* %515, align 8
  %516 = load i32, i32* %250, align 4
  %517 = add i32 %516, 1
  store i32 %517, i32* %250, align 4
  br label %520

518:                                              ; preds = %504
  %519 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %519, i8** nonnull dereferenceable(8) %48) #12
  br label %520

520:                                              ; preds = %518, %510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %505) #12
  %521 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_126ParseRsaHashedImportParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %521, label %1220, label %1223

522:                                              ; preds = %306
  %523 = bitcast i8** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %523) #12
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8** %47, align 8
  %524 = load i32, i32* %250, align 4
  %525 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %526 = load i32, i32* %525, align 8
  %527 = icmp eq i32 %524, %526
  br i1 %527, label %536, label %528, !prof !2

528:                                              ; preds = %522
  %529 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %530 = load i8**, i8*** %529, align 8
  %531 = zext i32 %524 to i64
  %532 = getelementptr inbounds i8*, i8** %530, i64 %531
  %533 = bitcast i8** %532 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.47 to i64), i64* %533, align 8
  %534 = load i32, i32* %250, align 4
  %535 = add i32 %534, 1
  store i32 %535, i32* %250, align 4
  br label %538

536:                                              ; preds = %522
  %537 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %537, i8** nonnull dereferenceable(8) %47) #12
  br label %538

538:                                              ; preds = %536, %528
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %523) #12
  %539 = bitcast %"class.blink::WebVector"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %539) #12
  %540 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %46, i64 0, i32 0, i32 0, i32 0
  %541 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %46, i64 0, i32 0, i32 0, i32 1
  %542 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %46, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %539, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #12
  store i8 -86, i8* %44, align 1
  %543 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i8* nonnull dereferenceable(1) %44, %"class.blink::WebVector"* nonnull dereferenceable(24) %46, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  %544 = load i8, i8* %44, align 1, !range !4
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %546, label %570

546:                                              ; preds = %538
  %547 = bitcast %"class.WTF::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #12
  %548 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %549 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %548, %"class.WTF::StringImpl"** %549, align 8
  %550 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %551 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %550, align 8
  %552 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %551, i64 3
  %553 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %552, align 8
  call void %553(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %45) #12
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %549, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %569, label %556

556:                                              ; preds = %546
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %554) #12
  br label %569

569:                                              ; preds = %568, %565, %546
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #12
  br label %625

570:                                              ; preds = %538
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #12
  br i1 %543, label %571, label %625

571:                                              ; preds = %570
  %572 = bitcast double* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %572) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #12
  store i8 -86, i8* %41, align 1
  %573 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* nonnull dereferenceable(1) %41, double* nonnull dereferenceable(8) %43, double 2.550000e+02, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %573, label %574, label %601

574:                                              ; preds = %571
  %575 = load i8, i8* %41, align 1, !range !4
  %576 = icmp eq i8 %575, 0
  br i1 %576, label %577, label %602

577:                                              ; preds = %574
  %578 = bitcast %"class.WTF::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %578) #12
  %579 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %580 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %579, %"class.WTF::StringImpl"** %580, align 8
  %581 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %582 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %581, align 8
  %583 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %582, i64 3
  %584 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %583, align 8
  call void %584(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %42) #12
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %586 = icmp eq %"class.WTF::StringImpl"* %585, null
  br i1 %586, label %600, label %587

587:                                              ; preds = %577
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %589 = load atomic i32, i32* %588 monotonic, align 4
  %590 = and i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 0
  %593 = load i32, i32* %592, align 4
  br i1 %591, label %594, label %596

594:                                              ; preds = %587
  %595 = add i32 %593, -1
  store i32 %595, i32* %592, align 4
  br label %596

596:                                              ; preds = %594, %587
  %597 = phi i32 [ %595, %594 ], [ %593, %587 ]
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %600

599:                                              ; preds = %596
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %585) #12
  br label %600

600:                                              ; preds = %599, %596, %577
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %578) #12
  br label %601

601:                                              ; preds = %600, %571
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %572) #12
  br label %625

602:                                              ; preds = %574
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #12
  %603 = load double, double* %43, align 8
  %604 = fptoui double %603 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %572) #12
  %605 = call i8* @_Znwm(i64 40) #14
  %606 = bitcast %"class.blink::WebVector"* %46 to <2 x i64>*
  %607 = load <2 x i64>, <2 x i64>* %606, align 16
  %608 = bitcast %"class.blink::WebVector"* %46 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %608, align 16
  %609 = bitcast i8** %542 to i64*
  %610 = load i64, i64* %609, align 16
  store i64 0, i64* %609, align 16
  %611 = bitcast i8* %605 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesCtrParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %611, align 8
  %612 = getelementptr inbounds i8, i8* %605, i64 8
  %613 = bitcast i8* %612 to <2 x i64>*
  store <2 x i64> %607, <2 x i64>* %613, align 8
  %614 = getelementptr inbounds i8, i8* %605, i64 24
  %615 = bitcast i8* %614 to i64*
  store i64 %610, i64* %615, align 8
  %616 = getelementptr inbounds i8, i8* %605, i64 32
  store i8 %604, i8* %616, align 8
  %617 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %618 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %605, i8** %618, align 8
  %619 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %617, null
  br i1 %619, label %625, label %620

620:                                              ; preds = %602
  %621 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %617 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %622 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %621, align 8
  %623 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %622, i64 1
  %624 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %623, align 8
  call void %624(%"class.blink::WebCryptoAlgorithmParams"* nonnull %617) #12
  br label %625

625:                                              ; preds = %620, %602, %601, %570, %569
  %626 = phi i1 [ false, %570 ], [ false, %569 ], [ false, %601 ], [ true, %620 ], [ true, %602 ]
  %627 = load i8*, i8** %540, align 16
  %628 = icmp eq i8* %627, null
  br i1 %628, label %632, label %629

629:                                              ; preds = %625
  %630 = ptrtoint i8* %627 to i64
  %631 = bitcast i8** %541 to i64*
  store i64 %630, i64* %631, align 8
  call void @_ZdlPv(i8* nonnull %627) #14
  br label %632

632:                                              ; preds = %629, %625
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %539) #12
  br i1 %626, label %1220, label %1223

633:                                              ; preds = %306
  %634 = bitcast i8** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #12
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), i8** %40, align 8
  %635 = load i32, i32* %250, align 4
  %636 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %637 = load i32, i32* %636, align 8
  %638 = icmp eq i32 %635, %637
  br i1 %638, label %647, label %639, !prof !2

639:                                              ; preds = %633
  %640 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %641 = load i8**, i8*** %640, align 8
  %642 = zext i32 %635 to i64
  %643 = getelementptr inbounds i8*, i8** %641, i64 %642
  %644 = bitcast i8** %643 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.48 to i64), i64* %644, align 8
  %645 = load i32, i32* %250, align 4
  %646 = add i32 %645, 1
  store i32 %646, i32* %250, align 4
  br label %649

647:                                              ; preds = %633
  %648 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %648, i8** nonnull dereferenceable(8) %40) #12
  br label %649

649:                                              ; preds = %647, %639
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #12
  %650 = bitcast %"class.blink::WebVector"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %650) #12
  %651 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %36, i64 0, i32 0, i32 0, i32 0
  %652 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %36, i64 0, i32 0, i32 0, i32 1
  %653 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %36, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %650, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #12
  store i8 -86, i8* %34, align 1
  %654 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0), i8* nonnull dereferenceable(1) %34, %"class.blink::WebVector"* nonnull dereferenceable(24) %36, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  %655 = load i8, i8* %34, align 1, !range !4
  %656 = icmp eq i8 %655, 0
  br i1 %656, label %657, label %681

657:                                              ; preds = %649
  %658 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %658) #12
  %659 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %660 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %659, %"class.WTF::StringImpl"** %660, align 8
  %661 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %662 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %661, align 8
  %663 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %662, i64 3
  %664 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %663, align 8
  call void %664(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %35) #12
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %660, align 8
  %666 = icmp eq %"class.WTF::StringImpl"* %665, null
  br i1 %666, label %680, label %667

667:                                              ; preds = %657
  %668 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %669 = load atomic i32, i32* %668 monotonic, align 4
  %670 = and i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 0
  %673 = load i32, i32* %672, align 4
  br i1 %671, label %674, label %676

674:                                              ; preds = %667
  %675 = add i32 %673, -1
  store i32 %675, i32* %672, align 4
  br label %676

676:                                              ; preds = %674, %667
  %677 = phi i32 [ %675, %674 ], [ %673, %667 ]
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %680

679:                                              ; preds = %676
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %665) #12
  br label %680

680:                                              ; preds = %679, %676, %657
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %658) #12
  br label %740

681:                                              ; preds = %649
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #12
  br i1 %654, label %682, label %743

682:                                              ; preds = %681
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #12
  store i8 -86, i8* %37, align 1
  %683 = bitcast %"class.blink::WebVector"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %683) #12
  %684 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %38, i64 0, i32 0, i32 0, i32 0
  %685 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %38, i64 0, i32 0, i32 0, i32 1
  %686 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %38, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %683, i8 0, i64 24, i1 false) #12
  %687 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i64 0, i64 0), i8* nonnull dereferenceable(1) %37, %"class.blink::WebVector"* nonnull dereferenceable(24) %38, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %687, label %688, label %732

688:                                              ; preds = %682
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #12
  store i8 -86, i8* %39, align 1
  %689 = bitcast double* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %689) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %33, align 8
  %690 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i64 0, i64 0), i8* nonnull dereferenceable(1) %39, double* nonnull dereferenceable(8) %33, double 2.550000e+02, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %690, label %691, label %724

691:                                              ; preds = %688
  %692 = load i8, i8* %39, align 1, !range !4
  %693 = icmp eq i8 %692, 0
  %694 = load double, double* %33, align 8
  %695 = fptoui double %694 to i8
  %696 = select i1 %693, i8 0, i8 %695
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %689) #12
  %697 = call i8* @_Znwm(i64 72) #14
  %698 = bitcast %"class.blink::WebVector"* %36 to <2 x i64>*
  %699 = load <2 x i64>, <2 x i64>* %698, align 16
  %700 = bitcast %"class.blink::WebVector"* %36 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %700, align 16
  %701 = bitcast i8** %653 to i64*
  %702 = load i64, i64* %701, align 16
  store i64 0, i64* %701, align 16
  %703 = load i8, i8* %37, align 1, !range !4
  %704 = bitcast %"class.blink::WebVector"* %38 to <2 x i64>*
  %705 = load <2 x i64>, <2 x i64>* %704, align 16
  %706 = bitcast %"class.blink::WebVector"* %38 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %706, align 16
  %707 = bitcast i8** %686 to i64*
  %708 = load i64, i64* %707, align 16
  store i64 0, i64* %707, align 16
  %709 = bitcast i8* %697 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesGcmParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %709, align 8
  %710 = getelementptr inbounds i8, i8* %697, i64 8
  %711 = bitcast i8* %710 to <2 x i64>*
  store <2 x i64> %699, <2 x i64>* %711, align 8
  %712 = getelementptr inbounds i8, i8* %697, i64 24
  %713 = bitcast i8* %712 to i64*
  store i64 %702, i64* %713, align 8
  %714 = getelementptr inbounds i8, i8* %697, i64 32
  store i8 %703, i8* %714, align 8
  %715 = getelementptr inbounds i8, i8* %697, i64 40
  %716 = bitcast i8* %715 to <2 x i64>*
  store <2 x i64> %705, <2 x i64>* %716, align 8
  %717 = getelementptr inbounds i8, i8* %697, i64 56
  %718 = bitcast i8* %717 to i64*
  store i64 %708, i64* %718, align 8
  %719 = getelementptr inbounds i8, i8* %697, i64 64
  store i8 %692, i8* %719, align 8
  %720 = getelementptr inbounds i8, i8* %697, i64 65
  store i8 %696, i8* %720, align 1
  %721 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %722 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %697, i8** %722, align 8
  %723 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %721, null
  br i1 %723, label %730, label %725

724:                                              ; preds = %688
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %689) #12
  br label %730

725:                                              ; preds = %691
  %726 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %721 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %727 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %726, align 8
  %728 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %727, i64 1
  %729 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %728, align 8
  call void %729(%"class.blink::WebCryptoAlgorithmParams"* nonnull %721) #12
  br label %730

730:                                              ; preds = %725, %724, %691
  %731 = phi i1 [ false, %724 ], [ true, %725 ], [ true, %691 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #12
  br label %732

732:                                              ; preds = %730, %682
  %733 = phi i1 [ %731, %730 ], [ false, %682 ]
  %734 = load i8*, i8** %684, align 16
  %735 = icmp eq i8* %734, null
  br i1 %735, label %739, label %736

736:                                              ; preds = %732
  %737 = ptrtoint i8* %734 to i64
  %738 = bitcast i8** %685 to i64*
  store i64 %737, i64* %738, align 8
  call void @_ZdlPv(i8* nonnull %734) #14
  br label %739

739:                                              ; preds = %736, %732
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %683) #12
  br label %740

740:                                              ; preds = %680, %739
  %741 = phi i8* [ %37, %739 ], [ %34, %680 ]
  %742 = phi i1 [ %733, %739 ], [ false, %680 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %741) #12
  br label %743

743:                                              ; preds = %740, %681
  %744 = phi i1 [ false, %681 ], [ %742, %740 ]
  %745 = load i8*, i8** %651, align 16
  %746 = icmp eq i8* %745, null
  br i1 %746, label %750, label %747

747:                                              ; preds = %743
  %748 = ptrtoint i8* %745 to i64
  %749 = bitcast i8** %652 to i64*
  store i64 %748, i64* %749, align 8
  call void @_ZdlPv(i8* nonnull %745) #14
  br label %750

750:                                              ; preds = %747, %743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %650) #12
  br i1 %744, label %1220, label %1223

751:                                              ; preds = %306
  %752 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %752) #12
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0), i8** %32, align 8
  %753 = load i32, i32* %250, align 4
  %754 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %755 = load i32, i32* %754, align 8
  %756 = icmp eq i32 %753, %755
  br i1 %756, label %765, label %757, !prof !2

757:                                              ; preds = %751
  %758 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %759 = load i8**, i8*** %758, align 8
  %760 = zext i32 %753 to i64
  %761 = getelementptr inbounds i8*, i8** %759, i64 %760
  %762 = bitcast i8** %761 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.49 to i64), i64* %762, align 8
  %763 = load i32, i32* %250, align 4
  %764 = add i32 %763, 1
  store i32 %764, i32* %250, align 4
  br label %767

765:                                              ; preds = %751
  %766 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %766, i8** nonnull dereferenceable(8) %32) #12
  br label %767

767:                                              ; preds = %765, %757
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %752) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #12
  store i8 -86, i8* %30, align 1
  %768 = bitcast %"class.blink::WebVector"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %768) #12
  %769 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %31, i64 0, i32 0, i32 0, i32 0
  %770 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %31, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %768, i8 0, i64 24, i1 false) #12
  %771 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0), i8* nonnull dereferenceable(1) %30, %"class.blink::WebVector"* nonnull dereferenceable(24) %31, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %771, label %772, label %795

772:                                              ; preds = %767
  %773 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %31, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %774 = call i8* @_Znwm(i64 40) #14
  %775 = load i8, i8* %30, align 1, !range !4
  %776 = bitcast %"class.blink::WebVector"* %31 to <2 x i64>*
  %777 = load <2 x i64>, <2 x i64>* %776, align 16
  %778 = bitcast %"class.blink::WebVector"* %31 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %778, align 16
  %779 = bitcast i8** %773 to i64*
  %780 = load i64, i64* %779, align 16
  store i64 0, i64* %779, align 16
  %781 = bitcast i8* %774 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22WebCryptoRsaOaepParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %781, align 8
  %782 = getelementptr inbounds i8, i8* %774, i64 8
  store i8 %775, i8* %782, align 8
  %783 = getelementptr inbounds i8, i8* %774, i64 16
  %784 = bitcast i8* %783 to <2 x i64>*
  store <2 x i64> %777, <2 x i64>* %784, align 8
  %785 = getelementptr inbounds i8, i8* %774, i64 32
  %786 = bitcast i8* %785 to i64*
  store i64 %780, i64* %786, align 8
  %787 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %788 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %774, i8** %788, align 8
  %789 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %787, null
  br i1 %789, label %795, label %790

790:                                              ; preds = %772
  %791 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %787 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %792 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %791, align 8
  %793 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %792, i64 1
  %794 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %793, align 8
  call void %794(%"class.blink::WebCryptoAlgorithmParams"* nonnull %787) #12
  br label %795

795:                                              ; preds = %790, %772, %767
  %796 = phi i1 [ false, %767 ], [ true, %790 ], [ true, %772 ]
  %797 = load i8*, i8** %769, align 16
  %798 = icmp eq i8* %797, null
  br i1 %798, label %802, label %799

799:                                              ; preds = %795
  %800 = ptrtoint i8* %797 to i64
  %801 = bitcast i8** %770 to i64*
  store i64 %800, i64* %801, align 8
  call void @_ZdlPv(i8* nonnull %797) #14
  br label %802

802:                                              ; preds = %799, %795
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %768) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #12
  br i1 %796, label %1220, label %1223

803:                                              ; preds = %306
  %804 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %804) #12
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), i8** %29, align 8
  %805 = load i32, i32* %250, align 4
  %806 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %807 = load i32, i32* %806, align 8
  %808 = icmp eq i32 %805, %807
  br i1 %808, label %817, label %809, !prof !2

809:                                              ; preds = %803
  %810 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %811 = load i8**, i8*** %810, align 8
  %812 = zext i32 %805 to i64
  %813 = getelementptr inbounds i8*, i8** %811, i64 %812
  %814 = bitcast i8** %813 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.50 to i64), i64* %814, align 8
  %815 = load i32, i32* %250, align 4
  %816 = add i32 %815, 1
  store i32 %816, i32* %250, align 4
  br label %819

817:                                              ; preds = %803
  %818 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %818, i8** nonnull dereferenceable(8) %29) #12
  br label %819

819:                                              ; preds = %817, %809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %804) #12
  %820 = bitcast double* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %820) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #12
  store i8 -86, i8* %26, align 1
  %821 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), i8* nonnull dereferenceable(1) %26, double* nonnull dereferenceable(8) %28, double 0x41EFFFFFFFE00000, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %821, label %822, label %849

822:                                              ; preds = %819
  %823 = load i8, i8* %26, align 1, !range !4
  %824 = icmp eq i8 %823, 0
  br i1 %824, label %825, label %850

825:                                              ; preds = %822
  %826 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %826) #12
  %827 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %828 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %827, %"class.WTF::StringImpl"** %828, align 8
  %829 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %830 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %829, align 8
  %831 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %830, i64 3
  %832 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %831, align 8
  call void %832(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %27) #12
  %833 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  %834 = icmp eq %"class.WTF::StringImpl"* %833, null
  br i1 %834, label %848, label %835

835:                                              ; preds = %825
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %833, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %837 = load atomic i32, i32* %836 monotonic, align 4
  %838 = and i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %833, i64 0, i32 0
  %841 = load i32, i32* %840, align 4
  br i1 %839, label %842, label %844

842:                                              ; preds = %835
  %843 = add i32 %841, -1
  store i32 %843, i32* %840, align 4
  br label %844

844:                                              ; preds = %842, %835
  %845 = phi i32 [ %843, %842 ], [ %841, %835 ]
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %848

847:                                              ; preds = %844
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %833) #12
  br label %848

848:                                              ; preds = %847, %844, %825
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %826) #12
  br label %849

849:                                              ; preds = %848, %819
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %820) #12
  br label %1223

850:                                              ; preds = %822
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #12
  %851 = load double, double* %28, align 8
  %852 = fptoui double %851 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %820) #12
  %853 = call i8* @_Znwm(i64 16) #14
  %854 = bitcast i8* %853 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoRsaPssParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %854, align 8
  %855 = getelementptr inbounds i8, i8* %853, i64 8
  %856 = bitcast i8* %855 to i32*
  store i32 %852, i32* %856, align 8
  %857 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %858 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %853, i8** %858, align 8
  %859 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %857, null
  br i1 %859, label %1220, label %860

860:                                              ; preds = %850
  %861 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %857 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %862 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %861, align 8
  %863 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %862, i64 1
  %864 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %863, align 8
  call void %864(%"class.blink::WebCryptoAlgorithmParams"* nonnull %857) #12
  br label %1220

865:                                              ; preds = %306
  %866 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %866) #12
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i8** %25, align 8
  %867 = load i32, i32* %250, align 4
  %868 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %869 = load i32, i32* %868, align 8
  %870 = icmp eq i32 %867, %869
  br i1 %870, label %879, label %871, !prof !2

871:                                              ; preds = %865
  %872 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %873 = load i8**, i8*** %872, align 8
  %874 = zext i32 %867 to i64
  %875 = getelementptr inbounds i8*, i8** %873, i64 %874
  %876 = bitcast i8** %875 to i64*
  store i64 ptrtoint ([12 x i8]* @.str.51 to i64), i64* %876, align 8
  %877 = load i32, i32* %250, align 4
  %878 = add i32 %877, 1
  store i32 %878, i32* %250, align 4
  br label %881

879:                                              ; preds = %865
  %880 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %880, i8** nonnull dereferenceable(8) %25) #12
  br label %881

881:                                              ; preds = %879, %871
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %866) #12
  %882 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116ParseEcdsaParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %882, label %1220, label %1223

883:                                              ; preds = %306
  %884 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %884) #12
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0), i8** %24, align 8
  %885 = load i32, i32* %250, align 4
  %886 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %887 = load i32, i32* %886, align 8
  %888 = icmp eq i32 %885, %887
  br i1 %888, label %897, label %889, !prof !2

889:                                              ; preds = %883
  %890 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %891 = load i8**, i8*** %890, align 8
  %892 = zext i32 %885 to i64
  %893 = getelementptr inbounds i8*, i8** %891, i64 %892
  %894 = bitcast i8** %893 to i64*
  store i64 ptrtoint ([15 x i8]* @.str.52 to i64), i64* %894, align 8
  %895 = load i32, i32* %250, align 4
  %896 = add i32 %895, 1
  store i32 %896, i32* %250, align 4
  br label %899

897:                                              ; preds = %883
  %898 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %898, i8** nonnull dereferenceable(8) %24) #12
  br label %899

899:                                              ; preds = %897, %889
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %884) #12
  %900 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %900) #12
  %901 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %901) #12
  store i32 -1431655766, i32* %22, align 4
  %902 = load i32, i32* %886, align 8
  %903 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %23, i64 0, i32 0, i32 0, i32 1, i64 0
  %904 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %23 to i8**
  store i8* %903, i8** %904, align 8
  %905 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %23, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %905, align 8
  %906 = icmp ugt i32 %902, 10
  br i1 %906, label %907, label %915

907:                                              ; preds = %899
  %908 = zext i32 %902 to i64
  %909 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %908) #12
  %910 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %909, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %911 = ptrtoint i8* %910 to i64
  %912 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %23 to i64*
  store atomic i64 %911, i64* %912 monotonic, align 8
  %913 = lshr i64 %909, 3
  %914 = trunc i64 %913 to i32
  store i32 %914, i32* %905, align 8
  br label %915

915:                                              ; preds = %907, %899
  %916 = phi i8* [ %903, %899 ], [ %910, %907 ]
  %917 = load i32, i32* %250, align 4
  %918 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %23, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %917, i32* %918, align 4
  %919 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %920 = load i8**, i8*** %919, align 8
  %921 = icmp ne i8* %916, null
  %922 = icmp ne i8** %920, null
  %923 = and i1 %921, %922
  br i1 %923, label %924, label %928, !prof !3

924:                                              ; preds = %915
  %925 = zext i32 %917 to i64
  %926 = bitcast i8** %920 to i8*
  %927 = shl nuw nsw i64 %925, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %916, i8* nonnull align 8 %926, i64 %927, i1 false) #12
  br label %928

928:                                              ; preds = %924, %915
  %929 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115ParseNamedCurveERKNS_10DictionaryERNS_19WebCryptoNamedCurveENS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i32* nonnull dereferenceable(4) %22, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %23, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  %930 = load i32, i32* %918, align 4
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %933, label %932, !prof !2

932:                                              ; preds = %928
  store i32 0, i32* %918, align 4
  br label %933

933:                                              ; preds = %932, %928
  %934 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %935 = load i8**, i8*** %934, align 8
  %936 = bitcast i8* %903 to i8**
  %937 = icmp eq i8** %935, %936
  br i1 %937, label %940, label %938, !prof !3

938:                                              ; preds = %933
  %939 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %23, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %939, i8** %935) #12
  br label %940

940:                                              ; preds = %938, %933
  store i8** null, i8*** %934, align 8
  br i1 %929, label %941, label %956

941:                                              ; preds = %940
  %942 = call i8* @_Znwm(i64 16) #14
  %943 = load i32, i32* %22, align 4
  %944 = bitcast i8* %942 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23WebCryptoEcKeyGenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %944, align 8
  %945 = getelementptr inbounds i8, i8* %942, i64 8
  %946 = bitcast i8* %945 to i32*
  store i32 %943, i32* %946, align 8
  %947 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %948 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %942, i8** %948, align 8
  %949 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %947, null
  br i1 %949, label %955, label %950

950:                                              ; preds = %941
  %951 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %947 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %952 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %951, align 8
  %953 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %952, i64 1
  %954 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %953, align 8
  call void %954(%"class.blink::WebCryptoAlgorithmParams"* nonnull %947) #12
  br label %955

955:                                              ; preds = %950, %941
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %901) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %900) #12
  br label %1220

956:                                              ; preds = %940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %901) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %900) #12
  br label %1223

957:                                              ; preds = %306
  %958 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %958) #12
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0), i8** %21, align 8
  %959 = load i32, i32* %250, align 4
  %960 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %961 = load i32, i32* %960, align 8
  %962 = icmp eq i32 %959, %961
  br i1 %962, label %971, label %963, !prof !2

963:                                              ; preds = %957
  %964 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %965 = load i8**, i8*** %964, align 8
  %966 = zext i32 %959 to i64
  %967 = getelementptr inbounds i8*, i8** %965, i64 %966
  %968 = bitcast i8** %967 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.53 to i64), i64* %968, align 8
  %969 = load i32, i32* %250, align 4
  %970 = add i32 %969, 1
  store i32 %970, i32* %250, align 4
  br label %973

971:                                              ; preds = %957
  %972 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %972, i8** nonnull dereferenceable(8) %21) #12
  br label %973

973:                                              ; preds = %971, %963
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %958) #12
  %974 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %974) #12
  %975 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %975) #12
  store i32 -1431655766, i32* %19, align 4
  %976 = load i32, i32* %960, align 8
  %977 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %20, i64 0, i32 0, i32 0, i32 1, i64 0
  %978 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %20 to i8**
  store i8* %977, i8** %978, align 8
  %979 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %979, align 8
  %980 = icmp ugt i32 %976, 10
  br i1 %980, label %981, label %989

981:                                              ; preds = %973
  %982 = zext i32 %976 to i64
  %983 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %982) #12
  %984 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %983, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %985 = ptrtoint i8* %984 to i64
  %986 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %20 to i64*
  store atomic i64 %985, i64* %986 monotonic, align 8
  %987 = lshr i64 %983, 3
  %988 = trunc i64 %987 to i32
  store i32 %988, i32* %979, align 8
  br label %989

989:                                              ; preds = %981, %973
  %990 = phi i8* [ %977, %973 ], [ %984, %981 ]
  %991 = load i32, i32* %250, align 4
  %992 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %991, i32* %992, align 4
  %993 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %994 = load i8**, i8*** %993, align 8
  %995 = icmp ne i8* %990, null
  %996 = icmp ne i8** %994, null
  %997 = and i1 %995, %996
  br i1 %997, label %998, label %1002, !prof !3

998:                                              ; preds = %989
  %999 = zext i32 %991 to i64
  %1000 = bitcast i8** %994 to i8*
  %1001 = shl nuw nsw i64 %999, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %990, i8* nonnull align 8 %1000, i64 %1001, i1 false) #12
  br label %1002

1002:                                             ; preds = %998, %989
  %1003 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115ParseNamedCurveERKNS_10DictionaryERNS_19WebCryptoNamedCurveENS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i32* nonnull dereferenceable(4) %19, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %20, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  %1004 = load i32, i32* %992, align 4
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1007, label %1006, !prof !2

1006:                                             ; preds = %1002
  store i32 0, i32* %992, align 4
  br label %1007

1007:                                             ; preds = %1006, %1002
  %1008 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %1009 = load i8**, i8*** %1008, align 8
  %1010 = bitcast i8* %977 to i8**
  %1011 = icmp eq i8** %1009, %1010
  br i1 %1011, label %1014, label %1012, !prof !3

1012:                                             ; preds = %1007
  %1013 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %20, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %1013, i8** %1009) #12
  br label %1014

1014:                                             ; preds = %1012, %1007
  store i8** null, i8*** %1008, align 8
  br i1 %1003, label %1015, label %1030

1015:                                             ; preds = %1014
  %1016 = call i8* @_Znwm(i64 16) #14
  %1017 = load i32, i32* %19, align 4
  %1018 = bitcast i8* %1016 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink26WebCryptoEcKeyImportParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1018, align 8
  %1019 = getelementptr inbounds i8, i8* %1016, i64 8
  %1020 = bitcast i8* %1019 to i32*
  store i32 %1017, i32* %1020, align 8
  %1021 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %1022 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %1016, i8** %1022, align 8
  %1023 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %1021, null
  br i1 %1023, label %1029, label %1024

1024:                                             ; preds = %1015
  %1025 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %1021 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %1026 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %1025, align 8
  %1027 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1026, i64 1
  %1028 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1027, align 8
  call void %1028(%"class.blink::WebCryptoAlgorithmParams"* nonnull %1021) #12
  br label %1029

1029:                                             ; preds = %1024, %1015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %975) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %974) #12
  br label %1220

1030:                                             ; preds = %1014
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %975) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %974) #12
  br label %1223

1031:                                             ; preds = %306
  %1032 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1032) #12
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0), i8** %18, align 8
  %1033 = load i32, i32* %250, align 4
  %1034 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1035 = load i32, i32* %1034, align 8
  %1036 = icmp eq i32 %1033, %1035
  br i1 %1036, label %1045, label %1037, !prof !2

1037:                                             ; preds = %1031
  %1038 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1039 = load i8**, i8*** %1038, align 8
  %1040 = zext i32 %1033 to i64
  %1041 = getelementptr inbounds i8*, i8** %1039, i64 %1040
  %1042 = bitcast i8** %1041 to i64*
  store i64 ptrtoint ([20 x i8]* @.str.54 to i64), i64* %1042, align 8
  %1043 = load i32, i32* %250, align 4
  %1044 = add i32 %1043, 1
  store i32 %1044, i32* %250, align 4
  br label %1047

1045:                                             ; preds = %1031
  %1046 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %1046, i8** nonnull dereferenceable(8) %18) #12
  br label %1047

1047:                                             ; preds = %1045, %1037
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1032) #12
  %1048 = bitcast %"class.blink::WebCryptoKey"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1048) #12
  %1049 = getelementptr inbounds %"class.blink::WebCryptoKey", %"class.blink::WebCryptoKey"* %17, i64 0, i32 0, i32 0
  store i8* null, i8** %1049, align 8
  %1050 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116GetPeerPublicKeyERKNS_10DictionaryERKNS0_12ErrorContextEPNS_12WebCryptoKeyERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::WebCryptoKey"* nonnull %17, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %1050, label %1051, label %1066

1051:                                             ; preds = %1047
  %1052 = call i8* @_Znwm(i64 16) #14
  %1053 = bitcast i8* %1052 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink28WebCryptoEcdhKeyDeriveParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1053, align 8
  %1054 = getelementptr inbounds i8, i8* %1052, i64 8
  %1055 = bitcast i8* %1054 to %"class.blink::WebCryptoKey"*
  %1056 = bitcast i8* %1054 to i8**
  store i8* null, i8** %1056, align 8
  call void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"* %1055, %"class.blink::WebCryptoKey"* nonnull dereferenceable(8) %17) #12
  %1057 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %1058 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %1052, i8** %1058, align 8
  %1059 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %1057, null
  br i1 %1059, label %1065, label %1060

1060:                                             ; preds = %1051
  %1061 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %1057 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %1062 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %1061, align 8
  %1063 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1062, i64 1
  %1064 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1063, align 8
  call void %1064(%"class.blink::WebCryptoAlgorithmParams"* nonnull %1057) #12
  br label %1065

1065:                                             ; preds = %1060, %1051
  call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1048) #12
  br label %1220

1066:                                             ; preds = %1047
  call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1048) #12
  br label %1223

1067:                                             ; preds = %306
  %1068 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1068) #12
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i64 0, i64 0), i8** %16, align 8
  %1069 = load i32, i32* %250, align 4
  %1070 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1071 = load i32, i32* %1070, align 8
  %1072 = icmp eq i32 %1069, %1071
  br i1 %1072, label %1081, label %1073, !prof !2

1073:                                             ; preds = %1067
  %1074 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1075 = load i8**, i8*** %1074, align 8
  %1076 = zext i32 %1069 to i64
  %1077 = getelementptr inbounds i8*, i8** %1075, i64 %1076
  %1078 = bitcast i8** %1077 to i64*
  store i64 ptrtoint ([20 x i8]* @.str.55 to i64), i64* %1078, align 8
  %1079 = load i32, i32* %250, align 4
  %1080 = add i32 %1079, 1
  store i32 %1080, i32* %250, align 4
  br label %1083

1081:                                             ; preds = %1067
  %1082 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %1082, i8** nonnull dereferenceable(8) %16) #12
  br label %1083

1083:                                             ; preds = %1081, %1073
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1068) #12
  %1084 = bitcast double* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1084) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #12
  store i8 -86, i8* %13, align 1
  %1085 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* nonnull dereferenceable(1) %13, double* nonnull dereferenceable(8) %15, double 6.553500e+04, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %1085, label %1086, label %1113

1086:                                             ; preds = %1083
  %1087 = load i8, i8* %13, align 1, !range !4
  %1088 = icmp eq i8 %1087, 0
  br i1 %1088, label %1089, label %1114

1089:                                             ; preds = %1086
  %1090 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1090) #12
  %1091 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %1092 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1091, %"class.WTF::StringImpl"** %1092, align 8
  %1093 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %1094 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %1093, align 8
  %1095 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %1094, i64 3
  %1096 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %1095, align 8
  call void %1096(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %14) #12
  %1097 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1092, align 8
  %1098 = icmp eq %"class.WTF::StringImpl"* %1097, null
  br i1 %1098, label %1112, label %1099

1099:                                             ; preds = %1089
  %1100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1097, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1101 = load atomic i32, i32* %1100 monotonic, align 4
  %1102 = and i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1097, i64 0, i32 0
  %1105 = load i32, i32* %1104, align 4
  br i1 %1103, label %1106, label %1108

1106:                                             ; preds = %1099
  %1107 = add i32 %1105, -1
  store i32 %1107, i32* %1104, align 4
  br label %1108

1108:                                             ; preds = %1106, %1099
  %1109 = phi i32 [ %1107, %1106 ], [ %1105, %1099 ]
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1112

1111:                                             ; preds = %1108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1097) #12
  br label %1112

1112:                                             ; preds = %1111, %1108, %1089
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1090) #12
  br label %1113

1113:                                             ; preds = %1112, %1083
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1084) #12
  br label %1223

1114:                                             ; preds = %1086
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #12
  %1115 = load double, double* %15, align 8
  %1116 = fptoui double %1115 to i16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1084) #12
  %1117 = call i8* @_Znwm(i64 16) #14
  %1118 = bitcast i8* %1117 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink28WebCryptoAesDerivedKeyParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1118, align 8
  %1119 = getelementptr inbounds i8, i8* %1117, i64 8
  %1120 = bitcast i8* %1119 to i16*
  store i16 %1116, i16* %1120, align 8
  %1121 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %1122 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %1117, i8** %1122, align 8
  %1123 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %1121, null
  br i1 %1123, label %1220, label %1124

1124:                                             ; preds = %1114
  %1125 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %1121 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %1126 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %1125, align 8
  %1127 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1126, i64 1
  %1128 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1127, align 8
  call void %1128(%"class.blink::WebCryptoAlgorithmParams"* nonnull %1121) #12
  br label %1220

1129:                                             ; preds = %306
  %1130 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1130) #12
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8** %12, align 8
  %1131 = load i32, i32* %250, align 4
  %1132 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1133 = load i32, i32* %1132, align 8
  %1134 = icmp eq i32 %1131, %1133
  br i1 %1134, label %1143, label %1135, !prof !2

1135:                                             ; preds = %1129
  %1136 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load i8**, i8*** %1136, align 8
  %1138 = zext i32 %1131 to i64
  %1139 = getelementptr inbounds i8*, i8** %1137, i64 %1138
  %1140 = bitcast i8** %1139 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.56 to i64), i64* %1140, align 8
  %1141 = load i32, i32* %250, align 4
  %1142 = add i32 %1141, 1
  store i32 %1142, i32* %250, align 4
  br label %1145

1143:                                             ; preds = %1129
  %1144 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %1144, i8** nonnull dereferenceable(8) %12) #12
  br label %1145

1145:                                             ; preds = %1143, %1135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1130) #12
  %1146 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115ParseHkdfParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %1146, label %1220, label %1223

1147:                                             ; preds = %306
  %1148 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1148) #12
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), i8** %11, align 8
  %1149 = load i32, i32* %250, align 4
  %1150 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1151 = load i32, i32* %1150, align 8
  %1152 = icmp eq i32 %1149, %1151
  br i1 %1152, label %1161, label %1153, !prof !2

1153:                                             ; preds = %1147
  %1154 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1155 = load i8**, i8*** %1154, align 8
  %1156 = zext i32 %1149 to i64
  %1157 = getelementptr inbounds i8*, i8** %1155, i64 %1156
  %1158 = bitcast i8** %1157 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.57 to i64), i64* %1158, align 8
  %1159 = load i32, i32* %250, align 4
  %1160 = add i32 %1159, 1
  store i32 %1160, i32* %250, align 4
  br label %1163

1161:                                             ; preds = %1147
  %1162 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %1162, i8** nonnull dereferenceable(8) %11) #12
  br label %1163

1163:                                             ; preds = %1161, %1153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1148) #12
  %1164 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_117ParsePbkdf2ParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %1164, label %1220, label %1223

1165:                                             ; preds = %306
  %1166 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1166) #12
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i8** %10, align 8
  %1167 = load i32, i32* %250, align 4
  %1168 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1169 = load i32, i32* %1168, align 8
  %1170 = icmp eq i32 %1167, %1169
  br i1 %1170, label %1179, label %1171, !prof !2

1171:                                             ; preds = %1165
  %1172 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1173 = load i8**, i8*** %1172, align 8
  %1174 = zext i32 %1167 to i64
  %1175 = getelementptr inbounds i8*, i8** %1173, i64 %1174
  %1176 = bitcast i8** %1175 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.58 to i64), i64* %1176, align 8
  %1177 = load i32, i32* %250, align 4
  %1178 = add i32 %1177, 1
  store i32 %1178, i32* %250, align 4
  br label %1181

1179:                                             ; preds = %1165
  %1180 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %1180, i8** nonnull dereferenceable(8) %10) #12
  br label %1181

1181:                                             ; preds = %1179, %1171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1166) #12
  %1182 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118ParseEd25519ParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %2, %"class.std::__1::unique_ptr.203"* nonnull dereferenceable(8) %65, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %1182, label %1220, label %1223

1183:                                             ; preds = %306
  %1184 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1184) #12
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8** %9, align 8
  %1185 = load i32, i32* %250, align 4
  %1186 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1187 = load i32, i32* %1186, align 8
  %1188 = icmp eq i32 %1185, %1187
  br i1 %1188, label %1197, label %1189, !prof !2

1189:                                             ; preds = %1183
  %1190 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1191 = load i8**, i8*** %1190, align 8
  %1192 = zext i32 %1185 to i64
  %1193 = getelementptr inbounds i8*, i8** %1191, i64 %1192
  %1194 = bitcast i8** %1193 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.59 to i64), i64* %1194, align 8
  %1195 = load i32, i32* %250, align 4
  %1196 = add i32 %1195, 1
  store i32 %1196, i32* %250, align 4
  br label %1199

1197:                                             ; preds = %1183
  %1198 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %1198, i8** nonnull dereferenceable(8) %9) #12
  br label %1199

1199:                                             ; preds = %1197, %1189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1184) #12
  %1200 = bitcast %"class.blink::WebCryptoKey"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1200) #12
  %1201 = getelementptr inbounds %"class.blink::WebCryptoKey", %"class.blink::WebCryptoKey"* %8, i64 0, i32 0, i32 0
  store i8* null, i8** %1201, align 8
  %1202 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116GetPeerPublicKeyERKNS_10DictionaryERKNS0_12ErrorContextEPNS_12WebCryptoKeyERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %2, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %5, %"class.blink::WebCryptoKey"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %6) #12
  br i1 %1202, label %1203, label %1218

1203:                                             ; preds = %1199
  %1204 = call i8* @_Znwm(i64 16) #14
  %1205 = bitcast i8* %1204 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoX25519KeyDeriveParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1205, align 8
  %1206 = getelementptr inbounds i8, i8* %1204, i64 8
  %1207 = bitcast i8* %1206 to %"class.blink::WebCryptoKey"*
  %1208 = bitcast i8* %1206 to i8**
  store i8* null, i8** %1208, align 8
  call void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"* %1207, %"class.blink::WebCryptoKey"* nonnull dereferenceable(8) %8) #12
  %1209 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %1210 = bitcast %"class.std::__1::unique_ptr.203"* %65 to i8**
  store i8* %1204, i8** %1210, align 8
  %1211 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %1209, null
  br i1 %1211, label %1217, label %1212

1212:                                             ; preds = %1203
  %1213 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %1209 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %1214 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %1213, align 8
  %1215 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1214, i64 1
  %1216 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1215, align 8
  call void %1216(%"class.blink::WebCryptoAlgorithmParams"* nonnull %1209) #12
  br label %1217

1217:                                             ; preds = %1212, %1203
  call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1200) #12
  br label %1220

1218:                                             ; preds = %1199
  call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1200) #12
  br label %1223

1219:                                             ; preds = %381, %385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %329) #12
  br i1 %382, label %1220, label %1223

1220:                                             ; preds = %1114, %1124, %850, %860, %435, %445, %306, %1217, %1065, %1029, %955, %466, %484, %502, %520, %632, %750, %802, %881, %1145, %1163, %1181, %1219
  %1221 = bitcast %"class.blink::WebCryptoAlgorithm"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1221) #12
  %1222 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  store %"class.blink::WebCryptoAlgorithmParams"* null, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  call void @_ZN5blink18WebCryptoAlgorithmC1ENS_20WebCryptoAlgorithmIdENSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS2_14default_deleteIS4_EEEE(%"class.blink::WebCryptoAlgorithm"* nonnull %66, i32 %221, %"class.blink::WebCryptoAlgorithmParams"* %1222) #12
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %4, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %66) #12
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1221) #12
  br label %1223

1223:                                             ; preds = %1113, %849, %434, %1218, %1066, %1030, %956, %466, %484, %502, %520, %632, %750, %802, %881, %1145, %1163, %1181, %1219, %1220
  %1224 = phi i1 [ false, %1113 ], [ false, %849 ], [ false, %434 ], [ false, %466 ], [ false, %484 ], [ false, %502 ], [ false, %520 ], [ false, %632 ], [ false, %750 ], [ false, %802 ], [ false, %881 ], [ false, %956 ], [ false, %1030 ], [ false, %1066 ], [ false, %1145 ], [ false, %1163 ], [ false, %1181 ], [ false, %1218 ], [ false, %1219 ], [ true, %1220 ]
  %1225 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  store %"class.blink::WebCryptoAlgorithmParams"* null, %"class.blink::WebCryptoAlgorithmParams"** %309, align 8
  %1226 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %1225, null
  br i1 %1226, label %1232, label %1227

1227:                                             ; preds = %1223
  %1228 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %1225 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %1229 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %1228, align 8
  %1230 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1229, i64 1
  %1231 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %1230, align 8
  call void %1231(%"class.blink::WebCryptoAlgorithmParams"* nonnull %1225) #12
  br label %1232

1232:                                             ; preds = %1227, %1223, %311, %305, %302, %284, %248, %245, %227
  %1233 = phi i8* [ %228, %227 ], [ %228, %245 ], [ %228, %248 ], [ %278, %284 ], [ %278, %302 ], [ %278, %305 ], [ %308, %311 ], [ %308, %1223 ], [ %308, %1227 ]
  %1234 = phi i1 [ false, %227 ], [ false, %245 ], [ false, %248 ], [ false, %284 ], [ false, %302 ], [ false, %305 ], [ false, %311 ], [ %1224, %1223 ], [ %1224, %1227 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1233) #12
  ret i1 %1234
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare void @_ZN5blink10DictionaryC1EPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.blink::Dictionary"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF6StringEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly, i8*, i8*) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %7 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 96, i1 false)
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %6 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %12, align 8
  %13 = icmp ugt i32 %9, 10
  br i1 %13, label %14, label %22

14:                                               ; preds = %3
  %15 = zext i32 %9 to i64
  %16 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %15) #12
  %17 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %6 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 3
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %12, align 8
  br label %22

22:                                               ; preds = %14, %3
  %23 = phi i32 [ 10, %3 ], [ %21, %14 ]
  %24 = phi i8* [ %10, %3 ], [ %17, %14 ]
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8**, i8*** %28, align 8
  %30 = icmp ne i8* %24, null
  %31 = icmp ne i8** %29, null
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %39, !prof !3

33:                                               ; preds = %22
  %34 = zext i32 %26 to i64
  %35 = bitcast i8** %29 to i8*
  %36 = shl nuw nsw i64 %34, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %35, i64 %36, i1 false) #12
  %37 = load i32, i32* %27, align 4
  %38 = load i32, i32* %12, align 8
  br label %39

39:                                               ; preds = %22, %33
  %40 = phi i32 [ %23, %22 ], [ %38, %33 ]
  %41 = phi i32 [ %26, %22 ], [ %37, %33 ]
  %42 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  store i8* %1, i8** %5, align 8
  %43 = icmp eq i32 %41, %40
  br i1 %43, label %53, label %44, !prof !2

44:                                               ; preds = %39
  %45 = ptrtoint i8* %1 to i64
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = zext i32 %41 to i64
  %49 = getelementptr inbounds i8*, i8** %47, i64 %48
  %50 = bitcast i8** %49 to i64*
  store i64 %45, i64* %50, align 8
  %51 = load i32, i32* %27, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %27, align 4
  br label %56

53:                                               ; preds = %39
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* nonnull %54, i8** nonnull dereferenceable(8) %5) #12
  %55 = load i32, i32* %27, align 4
  br label %56

56:                                               ; preds = %44, %53
  %57 = phi i32 [ %52, %44 ], [ %55, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %58 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  store i8* %2, i8** %4, align 8
  %59 = load i32, i32* %12, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %70, label %61, !prof !2

61:                                               ; preds = %56
  %62 = ptrtoint i8* %2 to i64
  %63 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8**, i8*** %63, align 8
  %65 = zext i32 %57 to i64
  %66 = getelementptr inbounds i8*, i8** %64, i64 %65
  %67 = bitcast i8** %66 to i64*
  store i64 %62, i64* %67, align 8
  %68 = load i32, i32* %27, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %27, align 4
  br label %72

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* nonnull %71, i8** nonnull dereferenceable(8) %4) #12
  br label %72

72:                                               ; preds = %61, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  %73 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEv(%"class.blink::(anonymous namespace)::ErrorContext"* nonnull %6)
  %74 = load i32, i32* %27, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %72
  store i32 0, i32* %27, align 4
  br label %77

77:                                               ; preds = %76, %72
  %78 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8**, i8*** %78, align 8
  %80 = bitcast i8* %10 to i8**
  %81 = icmp eq i8** %79, %80
  br i1 %81, label %84, label %82, !prof !3

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %83, i8** %79) #12
  br label %84

84:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7) #12
  ret %"class.WTF::StringImpl"* %73
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"*, i8** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp ugt i8** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8*, i8** %7, i64 %10
  %12 = icmp ugt i8** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.188"* %0, i32 %5) #12
  %14 = load i8**, i8*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i8** %1 to i64
  %17 = ptrtoint i8** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.188"* %0, i32 %5) #12
  %20 = load i8**, i8*** %6, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i8** [ %14, %13 ], [ %20, %15 ]
  %24 = phi i8** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %23, i64 %26
  %28 = bitcast i8** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.188"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8**, i8*** %31, align 8
  %33 = icmp eq i8** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 10
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.188"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.188"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 10, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.188"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.188"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 11
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i8**
  %10 = icmp eq i8** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.188"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.188"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i8** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* %19, i8** nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i8** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i8** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #12
  %46 = load i8**, i8*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i8** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i8**
  %51 = icmp eq i8** %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* %53, i8** %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.188"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"*, i8**) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast i8** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKc(%"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %5 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 96, i1 false)
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %4 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %10, align 8
  %11 = icmp ugt i32 %7, 10
  br i1 %11, label %12, label %20

12:                                               ; preds = %2
  %13 = zext i32 %7 to i64
  %14 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %13) #12
  %15 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %4 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = lshr i64 %14, 3
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %10, align 8
  br label %20

20:                                               ; preds = %12, %2
  %21 = phi i32 [ 10, %2 ], [ %19, %12 ]
  %22 = phi i8* [ %8, %2 ], [ %15, %12 ]
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne i8** %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %37, !prof !3

31:                                               ; preds = %20
  %32 = zext i32 %24 to i64
  %33 = bitcast i8** %27 to i8*
  %34 = shl nuw nsw i64 %32, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %33, i64 %34, i1 false) #12
  %35 = load i32, i32* %25, align 4
  %36 = load i32, i32* %10, align 8
  br label %37

37:                                               ; preds = %20, %31
  %38 = phi i32 [ %21, %20 ], [ %36, %31 ]
  %39 = phi i32 [ %24, %20 ], [ %35, %31 ]
  %40 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  store i8* %1, i8** %3, align 8
  %41 = icmp eq i32 %39, %38
  br i1 %41, label %51, label %42, !prof !2

42:                                               ; preds = %37
  %43 = ptrtoint i8* %1 to i64
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8**, i8*** %44, align 8
  %46 = zext i32 %39 to i64
  %47 = getelementptr inbounds i8*, i8** %45, i64 %46
  %48 = bitcast i8** %47 to i64*
  store i64 %43, i64* %48, align 8
  %49 = load i32, i32* %25, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %25, align 4
  br label %53

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* nonnull %52, i8** nonnull dereferenceable(8) %3) #12
  br label %53

53:                                               ; preds = %42, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  %54 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEv(%"class.blink::(anonymous namespace)::ErrorContext"* nonnull %4)
  %55 = load i32, i32* %25, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57, !prof !2

57:                                               ; preds = %53
  store i32 0, i32* %25, align 4
  br label %58

58:                                               ; preds = %57, %53
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8**, i8*** %59, align 8
  %61 = bitcast i8* %8 to i8**
  %62 = icmp eq i8** %60, %61
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %4, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %64, i8** %60) #12
  br label %65

65:                                               ; preds = %58, %63
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret %"class.WTF::StringImpl"* %54
}

declare %"struct.blink::WebCryptoAlgorithmInfo"* @_ZN5blink18WebCryptoAlgorithm19LookupAlgorithmInfoENS_20WebCryptoAlgorithmIdE(i32) local_unnamed_addr #2

declare void @_ZN5blink18WebCryptoAlgorithmC1ENS_20WebCryptoAlgorithmIdENSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS2_14default_deleteIS4_EEEE(%"class.blink::WebCryptoAlgorithm"*, i32, %"class.blink::WebCryptoAlgorithmParams"*) unnamed_addr #2

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEv(%"class.blink::(anonymous namespace)::ErrorContext"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %63, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %11 = bitcast %union.anon.209* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %14, align 1
  %15 = shl i32 %5, 1
  %16 = add i32 %15, -2
  br label %20

17:                                               ; preds = %20
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 %27) #12
  %18 = load i32, i32* %4, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %49

20:                                               ; preds = %7, %20
  %21 = phi i32 [ %28, %20 ], [ 0, %7 ]
  %22 = phi i32 [ %27, %20 ], [ %16, %7 ]
  %23 = tail call dereferenceable(8) i8** @_ZNK3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.188"* %3, i32 %21) #12
  %24 = load i8*, i8** %23, align 8
  %25 = tail call i64 @strlen(i8* %24) #13
  %26 = trunc i64 %25 to i32
  %27 = add i32 %22, %26
  %28 = add nuw i32 %21, 1
  %29 = load i32, i32* %4, align 4
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %20, label %17

31:                                               ; preds = %53, %17
  %32 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %48

48:                                               ; preds = %31, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  br label %63

49:                                               ; preds = %17, %53
  %50 = phi i32 [ %60, %53 ], [ 0, %17 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i32 2) #12
  br label %53

53:                                               ; preds = %49, %52
  %54 = call dereferenceable(8) i8** @_ZNK3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.188"* %3, i32 %50) #12
  %55 = load i8*, i8** %54, align 8
  %56 = call dereferenceable(8) i8** @_ZNK3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.188"* %3, i32 %50) #12
  %57 = load i8*, i8** %56, align 8
  %58 = call i64 @strlen(i8* %57) #13
  %59 = trunc i64 %58 to i32
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %2, i8* %55, i32 %59) #12
  %60 = add nuw i32 %50, 1
  %61 = load i32, i32* %4, align 4
  %62 = icmp ult i32 %60, %61
  br i1 %62, label %49, label %31

63:                                               ; preds = %1, %48
  %64 = phi %"class.WTF::StringImpl"* [ %32, %48 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %64
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i8** @_ZNK3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.188"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.188", %"class.WTF::Vector.188"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8*, i8** %24, i64 %25
  ret i8** %26
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ParseHmacImportParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca double, align 8
  %7 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %8 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %9 = alloca i8, align 1
  %10 = bitcast %"class.blink::WebCryptoAlgorithm"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %7, i64 0, i32 0, i32 0
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %8 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %16, align 8
  %17 = icmp ugt i32 %13, 10
  br i1 %17, label %18, label %26

18:                                               ; preds = %5
  %19 = zext i32 %13 to i64
  %20 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %19) #12
  %21 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %8 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %18, %5
  %27 = phi i8* [ %14, %5 ], [ %21, %18 ]
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8**, i8*** %31, align 8
  %33 = icmp ne i8* %27, null
  %34 = icmp ne i8** %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %40, !prof !3

36:                                               ; preds = %26
  %37 = zext i32 %29 to i64
  %38 = bitcast i8** %32 to i8*
  %39 = shl nuw nsw i64 %37, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %38, i64 %39, i1 false) #12
  br label %40

40:                                               ; preds = %26, %36
  %41 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %7, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %42 = load i32, i32* %30, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %30, align 4
  br label %45

45:                                               ; preds = %44, %40
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = bitcast i8* %14 to i8**
  %49 = icmp eq i8** %47, %48
  br i1 %49, label %52, label %50, !prof !3

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %51, i8** %47) #12
  br label %52

52:                                               ; preds = %45, %50
  store i8** null, i8*** %46, align 8
  br i1 %41, label %53, label %82

53:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 -86, i8* %9, align 1
  %54 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %55 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* nonnull dereferenceable(1) %9, double* nonnull dereferenceable(8) %6, double 0x41EFFFFFFFE00000, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br i1 %55, label %56, label %74

56:                                               ; preds = %53
  %57 = load i8, i8* %9, align 1, !range !4
  %58 = icmp eq i8 %57, 0
  %59 = load double, double* %6, align 8
  %60 = fptoui double %59 to i32
  %61 = select i1 %58, i32 0, i32 %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %62 = call i8* @_Znwm(i64 24) #14
  %63 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 8
  %65 = bitcast i8* %64 to %"class.blink::WebCryptoAlgorithm"*
  %66 = bitcast i8* %64 to i8**
  store i8* null, i8** %66, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %65, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %7) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25WebCryptoHmacImportParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %67 = getelementptr inbounds i8, i8* %62, i64 16
  store i8 %57, i8* %67, align 8
  %68 = getelementptr inbounds i8, i8* %62, i64 20
  %69 = bitcast i8* %68 to i32*
  store i32 %61, i32* %69, align 4
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %62, i8** %72, align 8
  %73 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %71, null
  br i1 %73, label %80, label %75

74:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  br label %80

75:                                               ; preds = %56
  %76 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %71 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %77 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %77, i64 1
  %79 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %78, align 8
  call void %79(%"class.blink::WebCryptoAlgorithmParams"* nonnull %71) #12
  br label %80

80:                                               ; preds = %56, %75, %74
  %81 = phi i1 [ false, %74 ], [ true, %75 ], [ true, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br label %82

82:                                               ; preds = %52, %80
  %83 = phi i1 [ %81, %80 ], [ false, %52 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ParseHmacKeyGenParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca double, align 8
  %7 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %8 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %9 = alloca i8, align 1
  %10 = bitcast %"class.blink::WebCryptoAlgorithm"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %7, i64 0, i32 0, i32 0
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %8 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %16, align 8
  %17 = icmp ugt i32 %13, 10
  br i1 %17, label %18, label %26

18:                                               ; preds = %5
  %19 = zext i32 %13 to i64
  %20 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %19) #12
  %21 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %8 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %18, %5
  %27 = phi i8* [ %14, %5 ], [ %21, %18 ]
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8**, i8*** %31, align 8
  %33 = icmp ne i8* %27, null
  %34 = icmp ne i8** %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %40, !prof !3

36:                                               ; preds = %26
  %37 = zext i32 %29 to i64
  %38 = bitcast i8** %32 to i8*
  %39 = shl nuw nsw i64 %37, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %38, i64 %39, i1 false) #12
  br label %40

40:                                               ; preds = %26, %36
  %41 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %7, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %42 = load i32, i32* %30, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %30, align 4
  br label %45

45:                                               ; preds = %44, %40
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8**, i8*** %46, align 8
  %48 = bitcast i8* %14 to i8**
  %49 = icmp eq i8** %47, %48
  br i1 %49, label %52, label %50, !prof !3

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %8, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %51, i8** %47) #12
  br label %52

52:                                               ; preds = %45, %50
  store i8** null, i8*** %46, align 8
  br i1 %41, label %53, label %82

53:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 -86, i8* %9, align 1
  %54 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %55 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i8* nonnull dereferenceable(1) %9, double* nonnull dereferenceable(8) %6, double 0x41EFFFFFFFE00000, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br i1 %55, label %56, label %74

56:                                               ; preds = %53
  %57 = load i8, i8* %9, align 1, !range !4
  %58 = icmp eq i8 %57, 0
  %59 = load double, double* %6, align 8
  %60 = fptoui double %59 to i32
  %61 = select i1 %58, i32 0, i32 %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %62 = call i8* @_Znwm(i64 24) #14
  %63 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 8
  %65 = bitcast i8* %64 to %"class.blink::WebCryptoAlgorithm"*
  %66 = bitcast i8* %64 to i8**
  store i8* null, i8** %66, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %65, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %7) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25WebCryptoHmacKeyGenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %67 = getelementptr inbounds i8, i8* %62, i64 16
  store i8 %57, i8* %67, align 8
  %68 = getelementptr inbounds i8, i8* %62, i64 20
  %69 = bitcast i8* %68 to i32*
  store i32 %61, i32* %69, align 4
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %62, i8** %72, align 8
  %73 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %71, null
  br i1 %73, label %80, label %75

74:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  br label %80

75:                                               ; preds = %56
  %76 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %71 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %77 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %77, i64 1
  %79 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %78, align 8
  call void %79(%"class.blink::WebCryptoAlgorithmParams"* nonnull %71) #12
  br label %80

80:                                               ; preds = %56, %75, %74
  %81 = phi i1 [ false, %74 ], [ true, %75 ], [ true, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br label %82

82:                                               ; preds = %52, %80
  %83 = phi i1 [ %81, %80 ], [ false, %52 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_126ParseRsaHashedKeyGenParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::DOMTypedArray"*, align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::WebVector", align 8
  %12 = alloca %"class.blink::DOMArrayPiece", align 8
  %13 = alloca double, align 8
  %14 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %15 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %16 = bitcast double* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 -86, i8* %6, align 1
  %17 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i64 0, i64 0), i8* nonnull dereferenceable(1) %6, double* nonnull dereferenceable(8) %13, double 0x41EFFFFFFFE00000, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br i1 %17, label %18, label %45

18:                                               ; preds = %5
  %19 = load i8, i8* %6, align 1, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %46

21:                                               ; preds = %18
  %22 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = tail call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %26 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %26, i64 3
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %27, align 8
  call void %28(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %43, %40, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %45

45:                                               ; preds = %44, %5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %195

46:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  %47 = load double, double* %13, align 8
  %48 = fptoui double %47 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %49 = bitcast %"class.blink::DOMTypedArray"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  store %"class.blink::DOMTypedArray"* null, %"class.blink::DOMTypedArray"** %8, align 8
  %50 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 14, i32* %54, align 8
  %55 = call zeroext i1 @_ZN5blink16DictionaryHelper3GetIPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.blink::DOMTypedArray"** nonnull dereferenceable(8) %8) #12
  br i1 %55, label %56, label %59

56:                                               ; preds = %46
  %57 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %8, align 8
  %58 = icmp eq %"class.blink::DOMTypedArray"* %57, null
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  br i1 %58, label %60, label %83

59:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  br label %60

60:                                               ; preds = %59, %56
  %61 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  %62 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0)) #12
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %65 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %65, i64 3
  %67 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %66, align 8
  call void %67(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %10) #12
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %119, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %119

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %119

83:                                               ; preds = %56
  %84 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %57, i64 0, i32 0
  %85 = bitcast %"class.blink::WebVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %86 = bitcast %"class.blink::DOMArrayPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  call void @_ZN5blink13DOMArrayPieceC1EPNS_18DOMArrayBufferViewE(%"class.blink::DOMArrayPiece"* nonnull %12, %"class.blink::DOMArrayBufferView"* %84) #12
  %87 = call i8* @_ZNK5blink13DOMArrayPiece4DataEv(%"class.blink::DOMArrayPiece"* nonnull %12) #12, !noalias !5
  %88 = call i64 @_ZNK5blink13DOMArrayPiece10ByteLengthEv(%"class.blink::DOMArrayPiece"* nonnull %12) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #12, !alias.scope !5
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %83
  %91 = icmp slt i64 %88, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = bitcast %"class.blink::WebVector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %93) #15
  unreachable

94:                                               ; preds = %90
  %95 = call i8* @_Znwm(i64 %88) #14
  %96 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 1
  store i8* %95, i8** %96, align 8, !alias.scope !5
  %97 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %97, align 8, !alias.scope !5
  %98 = getelementptr inbounds i8, i8* %95, i64 %88
  %99 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %98, i8** %99, align 8, !alias.scope !5
  %100 = bitcast i8** %96 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %95, i8* align 1 %87, i64 %88, i1 false) #12
  %101 = ptrtoint i8* %98 to i64
  store i64 %101, i64* %100, align 8, !alias.scope !5
  %102 = ptrtoint i8* %95 to i64
  br label %103

103:                                              ; preds = %83, %94
  %104 = phi i64 [ %101, %94 ], [ 0, %83 ]
  %105 = phi i64 [ %102, %94 ], [ 0, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  %106 = inttoptr i64 %105 to i8*
  %107 = inttoptr i64 %104 to i8*
  %108 = icmp eq i8* %106, %107
  br i1 %108, label %109, label %120

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 1) #14
  %111 = getelementptr inbounds i8, i8* %110, i64 1
  %112 = ptrtoint i8* %110 to i64
  %113 = sub i64 1, %112
  %114 = getelementptr i8, i8* %110, i64 %113
  %115 = ptrtoint i8* %114 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %110, i8 0, i64 %115, i1 false) #12
  %116 = ptrtoint i8* %111 to i64
  %117 = icmp eq i64 %105, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZdlPv(i8* nonnull %106) #14
  br label %120

119:                                              ; preds = %82, %79, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  br label %195

120:                                              ; preds = %103, %109, %118
  %121 = phi i64 [ %105, %103 ], [ %112, %118 ], [ %112, %109 ]
  %122 = phi i64 [ %104, %103 ], [ %116, %118 ], [ %116, %109 ]
  %123 = bitcast %"class.blink::WebCryptoAlgorithm"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #12
  %124 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %14, i64 0, i32 0, i32 0
  store i8* null, i8** %124, align 8
  %125 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %15, i64 0, i32 0, i32 0, i32 1, i64 0
  %128 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %15 to i8**
  store i8* %127, i8** %128, align 8
  %129 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %129, align 8
  %130 = icmp ugt i32 %126, 10
  br i1 %130, label %131, label %139

131:                                              ; preds = %120
  %132 = zext i32 %126 to i64
  %133 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %132) #12
  %134 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %133, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %135 = ptrtoint i8* %134 to i64
  %136 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %15 to i64*
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = lshr i64 %133, 3
  %138 = trunc i64 %137 to i32
  store i32 %138, i32* %129, align 8
  br label %139

139:                                              ; preds = %131, %120
  %140 = phi i8* [ %127, %120 ], [ %134, %131 ]
  %141 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8**, i8*** %144, align 8
  %146 = icmp ne i8* %140, null
  %147 = icmp ne i8** %145, null
  %148 = and i1 %146, %147
  br i1 %148, label %149, label %153, !prof !3

149:                                              ; preds = %139
  %150 = zext i32 %142 to i64
  %151 = bitcast i8** %145 to i8*
  %152 = shl nuw nsw i64 %150, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %151, i64 %152, i1 false) #12
  br label %153

153:                                              ; preds = %139, %149
  %154 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %14, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %15, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %155 = load i32, i32* %143, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %158, label %157, !prof !2

157:                                              ; preds = %153
  store i32 0, i32* %143, align 4
  br label %158

158:                                              ; preds = %157, %153
  %159 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8**, i8*** %159, align 8
  %161 = bitcast i8* %127 to i8**
  %162 = icmp eq i8** %160, %161
  br i1 %162, label %165, label %163, !prof !3

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %15, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %164, i8** %160) #12
  br label %165

165:                                              ; preds = %158, %163
  store i8** null, i8*** %159, align 8
  br i1 %154, label %166, label %189

166:                                              ; preds = %165
  %167 = call i8* @_Znwm(i64 48) #14
  %168 = bitcast i8* %167 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoRsaHashedKeyGenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8
  %169 = getelementptr inbounds i8, i8* %167, i64 8
  %170 = bitcast i8* %169 to i32*
  store i32 %48, i32* %170, align 8
  %171 = getelementptr inbounds i8, i8* %167, i64 16
  %172 = bitcast i8* %171 to i64*
  store i64 %121, i64* %172, align 8
  %173 = getelementptr inbounds i8, i8* %167, i64 24
  %174 = bitcast i8* %173 to i64*
  store i64 %122, i64* %174, align 8
  %175 = getelementptr inbounds i8, i8* %167, i64 32
  %176 = bitcast i8* %175 to i64*
  store i64 %122, i64* %176, align 8
  %177 = getelementptr inbounds i8, i8* %167, i64 40
  %178 = bitcast i8* %177 to %"class.blink::WebCryptoAlgorithm"*
  %179 = bitcast i8* %177 to i8**
  store i8* null, i8** %179, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %178, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %14) #12
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %180, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %167, i8** %182, align 8
  %183 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %181, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %166
  %185 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %181 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %186 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %186, i64 1
  %188 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %187, align 8
  call void %188(%"class.blink::WebCryptoAlgorithmParams"* nonnull %181) #12
  br label %189

189:                                              ; preds = %165, %184, %166
  %190 = phi i64 [ %121, %165 ], [ 0, %184 ], [ 0, %166 ]
  %191 = phi i1 [ false, %165 ], [ true, %184 ], [ true, %166 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #12
  %192 = icmp eq i64 %190, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %189
  %194 = inttoptr i64 %190 to i8*
  call void @_ZdlPv(i8* nonnull %194) #14
  br label %195

195:                                              ; preds = %193, %189, %119, %45
  %196 = phi i1 [ false, %45 ], [ false, %119 ], [ %191, %189 ], [ %191, %193 ]
  ret i1 %196
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_126ParseRsaHashedImportParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %7 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %8 = bitcast %"class.blink::WebCryptoAlgorithm"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %6, i64 0, i32 0, i32 0
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %7 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %14, align 8
  %15 = icmp ugt i32 %11, 10
  br i1 %15, label %16, label %24

16:                                               ; preds = %5
  %17 = zext i32 %11 to i64
  %18 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %17) #12
  %19 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %7 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = lshr i64 %18, 3
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %14, align 8
  br label %24

24:                                               ; preds = %16, %5
  %25 = phi i8* [ %12, %5 ], [ %19, %16 ]
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8**, i8*** %29, align 8
  %31 = icmp ne i8* %25, null
  %32 = icmp ne i8** %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %38, !prof !3

34:                                               ; preds = %24
  %35 = zext i32 %27 to i64
  %36 = bitcast i8** %30 to i8*
  %37 = shl nuw nsw i64 %35, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %36, i64 %37, i1 false) #12
  br label %38

38:                                               ; preds = %24, %34
  %39 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %6, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %40 = load i32, i32* %28, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38
  store i32 0, i32* %28, align 4
  br label %43

43:                                               ; preds = %42, %38
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8**, i8*** %44, align 8
  %46 = bitcast i8* %12 to i8**
  %47 = icmp eq i8** %45, %46
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %49, i8** %45) #12
  br label %50

50:                                               ; preds = %43, %48
  store i8** null, i8*** %44, align 8
  br i1 %39, label %51, label %66

51:                                               ; preds = %50
  %52 = call i8* @_Znwm(i64 16) #14
  %53 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 8
  %55 = bitcast i8* %54 to %"class.blink::WebCryptoAlgorithm"*
  %56 = bitcast i8* %54 to i8**
  store i8* null, i8** %56, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %55, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %6) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoRsaHashedImportParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %52, i8** %59, align 8
  %60 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %58 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %63 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %63, i64 1
  %65 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %64, align 8
  call void %65(%"class.blink::WebCryptoAlgorithmParams"* nonnull %58) #12
  br label %66

66:                                               ; preds = %51, %61, %50
  %67 = phi i1 [ false, %50 ], [ true, %61 ], [ true, %51 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116ParseEcdsaParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %7 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %8 = bitcast %"class.blink::WebCryptoAlgorithm"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %6, i64 0, i32 0, i32 0
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %7 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %14, align 8
  %15 = icmp ugt i32 %11, 10
  br i1 %15, label %16, label %24

16:                                               ; preds = %5
  %17 = zext i32 %11 to i64
  %18 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %17) #12
  %19 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %7 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = lshr i64 %18, 3
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %14, align 8
  br label %24

24:                                               ; preds = %16, %5
  %25 = phi i8* [ %12, %5 ], [ %19, %16 ]
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8**, i8*** %29, align 8
  %31 = icmp ne i8* %25, null
  %32 = icmp ne i8** %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %38, !prof !3

34:                                               ; preds = %24
  %35 = zext i32 %27 to i64
  %36 = bitcast i8** %30 to i8*
  %37 = shl nuw nsw i64 %35, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %36, i64 %37, i1 false) #12
  br label %38

38:                                               ; preds = %24, %34
  %39 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %6, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %40 = load i32, i32* %28, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38
  store i32 0, i32* %28, align 4
  br label %43

43:                                               ; preds = %42, %38
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8**, i8*** %44, align 8
  %46 = bitcast i8* %12 to i8**
  %47 = icmp eq i8** %45, %46
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %49, i8** %45) #12
  br label %50

50:                                               ; preds = %43, %48
  store i8** null, i8*** %44, align 8
  br i1 %39, label %51, label %66

51:                                               ; preds = %50
  %52 = call i8* @_Znwm(i64 16) #14
  %53 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 8
  %55 = bitcast i8* %54 to %"class.blink::WebCryptoAlgorithm"*
  %56 = bitcast i8* %54 to i8**
  store i8* null, i8** %56, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %55, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %6) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20WebCryptoEcdsaParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %52, i8** %59, align 8
  %60 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %58 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %63 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %63, i64 1
  %65 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %64, align 8
  call void %65(%"class.blink::WebCryptoAlgorithmParams"* nonnull %58) #12
  br label %66

66:                                               ; preds = %51, %61, %50
  %67 = phi i1 [ false, %50 ], [ true, %61 ], [ true, %51 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115ParseHkdfParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %11 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %12 = alloca %"class.blink::WebVector", align 16
  %13 = alloca %"class.blink::WebVector", align 16
  %14 = bitcast %"class.blink::WebCryptoAlgorithm"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %10, i64 0, i32 0, i32 0
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %11, i64 0, i32 0, i32 0, i32 1, i64 0
  %19 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %11 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %20, align 8
  %21 = icmp ugt i32 %17, 10
  br i1 %21, label %22, label %30

22:                                               ; preds = %5
  %23 = zext i32 %17 to i64
  %24 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %23) #12
  %25 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %11 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = lshr i64 %24, 3
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %20, align 8
  br label %30

30:                                               ; preds = %22, %5
  %31 = phi i8* [ %18, %5 ], [ %25, %22 ]
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp ne i8* %31, null
  %38 = icmp ne i8** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %44, !prof !3

40:                                               ; preds = %30
  %41 = zext i32 %33 to i64
  %42 = bitcast i8** %36 to i8*
  %43 = shl nuw nsw i64 %41, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %42, i64 %43, i1 false) #12
  br label %44

44:                                               ; preds = %30, %40
  %45 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %10, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %11, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %46 = load i32, i32* %34, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %34, align 4
  br label %49

49:                                               ; preds = %48, %44
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8**, i8*** %50, align 8
  %52 = bitcast i8* %18 to i8**
  %53 = icmp eq i8** %51, %52
  br i1 %53, label %56, label %54, !prof !3

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %11, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %55, i8** %51) #12
  br label %56

56:                                               ; preds = %49, %54
  store i8** null, i8*** %50, align 8
  br i1 %45, label %57, label %172

57:                                               ; preds = %56
  %58 = bitcast %"class.blink::WebVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %12, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %12, i64 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %12, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  store i8 -86, i8* %8, align 1
  %62 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i64 0, i64 0), i8* nonnull dereferenceable(1) %8, %"class.blink::WebVector"* nonnull dereferenceable(24) %12, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  %63 = load i8, i8* %8, align 1, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %89

65:                                               ; preds = %57
  %66 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #12
  %67 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %68, align 8
  %69 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %70 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %70, i64 3
  %72 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %71, align 8
  call void %72(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %9) #12
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #12
  br label %88

88:                                               ; preds = %65, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  br label %164

89:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  br i1 %62, label %90, label %164

90:                                               ; preds = %89
  %91 = bitcast %"class.blink::WebVector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #12
  %92 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %13, i64 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %13, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %13, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %91, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 -86, i8* %6, align 1
  %95 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i64 0, i64 0), i8* nonnull dereferenceable(1) %6, %"class.blink::WebVector"* nonnull dereferenceable(24) %13, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  %96 = load i8, i8* %6, align 1, !range !4
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %122

98:                                               ; preds = %90
  %99 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %101, align 8
  %102 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %103 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %103, i64 3
  %105 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %104, align 8
  call void %105(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #12
  br label %121

121:                                              ; preds = %98, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  br label %156

122:                                              ; preds = %90
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  br i1 %95, label %123, label %156

123:                                              ; preds = %122
  %124 = call i8* @_Znwm(i64 64) #14
  %125 = bitcast %"class.blink::WebVector"* %12 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 16
  %127 = bitcast %"class.blink::WebVector"* %12 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %127, align 16
  %128 = bitcast i8** %61 to i64*
  %129 = load i64, i64* %128, align 16
  store i64 0, i64* %128, align 16
  %130 = bitcast %"class.blink::WebVector"* %13 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 16
  %132 = bitcast %"class.blink::WebVector"* %13 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %132, align 16
  %133 = bitcast i8** %94 to i64*
  %134 = load i64, i64* %133, align 16
  store i64 0, i64* %133, align 16
  %135 = bitcast i8* %124 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds i8, i8* %124, i64 8
  %137 = bitcast i8* %136 to %"class.blink::WebCryptoAlgorithm"*
  %138 = bitcast i8* %136 to i8**
  store i8* null, i8** %138, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %137, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %10) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19WebCryptoHkdfParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %139 = getelementptr inbounds i8, i8* %124, i64 16
  %140 = bitcast i8* %139 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %140, align 8
  %141 = getelementptr inbounds i8, i8* %124, i64 32
  %142 = bitcast i8* %141 to i64*
  store i64 %129, i64* %142, align 8
  %143 = getelementptr inbounds i8, i8* %124, i64 40
  %144 = bitcast i8* %143 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %144, align 8
  %145 = getelementptr inbounds i8, i8* %124, i64 56
  %146 = bitcast i8* %145 to i64*
  store i64 %134, i64* %146, align 8
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %147, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %124, i8** %149, align 8
  %150 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %148, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %123
  %152 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %148 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %153 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %153, i64 1
  %155 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %154, align 8
  call void %155(%"class.blink::WebCryptoAlgorithmParams"* nonnull %148) #12
  br label %156

156:                                              ; preds = %123, %151, %121, %122
  %157 = phi i1 [ false, %122 ], [ false, %121 ], [ true, %151 ], [ true, %123 ]
  %158 = load i8*, i8** %92, align 16
  %159 = icmp eq i8* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = ptrtoint i8* %158 to i64
  %162 = bitcast i8** %93 to i64*
  store i64 %161, i64* %162, align 8
  call void @_ZdlPv(i8* nonnull %158) #14
  br label %163

163:                                              ; preds = %156, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #12
  br label %164

164:                                              ; preds = %88, %89, %163
  %165 = phi i1 [ %157, %163 ], [ false, %89 ], [ false, %88 ]
  %166 = load i8*, i8** %59, align 16
  %167 = icmp eq i8* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i8* %166 to i64
  %170 = bitcast i8** %60 to i64*
  store i64 %169, i64* %170, align 8
  call void @_ZdlPv(i8* nonnull %166) #14
  br label %171

171:                                              ; preds = %164, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br label %172

172:                                              ; preds = %56, %171
  %173 = phi i1 [ %165, %171 ], [ false, %56 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  ret i1 %173
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_117ParsePbkdf2ParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca double, align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::WebVector", align 16
  %12 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %13 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %14 = bitcast %"class.blink::WebVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 -86, i8* %9, align 1
  %18 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i64 0, i64 0), i8* nonnull dereferenceable(1) %9, %"class.blink::WebVector"* nonnull dereferenceable(24) %11, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  %19 = load i8, i8* %9, align 1, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %5
  %22 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %26 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %26, i64 3
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %27, align 8
  call void %28(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %10) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %21, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br label %151

45:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br i1 %18, label %46, label %151

46:                                               ; preds = %45
  %47 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 -86, i8* %6, align 1
  %48 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i64 0, i64 0), i8* nonnull dereferenceable(1) %6, double* nonnull dereferenceable(8) %8, double 0x41EFFFFFFFE00000, %"class.blink::(anonymous namespace)::ErrorContext"* dereferenceable(96) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br i1 %48, label %49, label %76

49:                                               ; preds = %46
  %50 = load i8, i8* %6, align 1, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %77

52:                                               ; preds = %49
  %53 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  %54 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0)) #12
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %57, i64 3
  %59 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %74, %71, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  br label %76

76:                                               ; preds = %75, %46
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %151

77:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  %78 = load double, double* %8, align 8
  %79 = fptoui double %78 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  %80 = bitcast %"class.blink::WebCryptoAlgorithm"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  %81 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %12, i64 0, i32 0, i32 0
  store i8* null, i8** %81, align 8
  %82 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 1, i64 0
  %85 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %13 to i8**
  store i8* %84, i8** %85, align 8
  %86 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %86, align 8
  %87 = icmp ugt i32 %83, 10
  br i1 %87, label %88, label %96

88:                                               ; preds = %77
  %89 = zext i32 %83 to i64
  %90 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %89) #12
  %91 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %90, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %92 = ptrtoint i8* %91 to i64
  %93 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %13 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %90, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %86, align 8
  br label %96

96:                                               ; preds = %88, %77
  %97 = phi i8* [ %84, %77 ], [ %91, %88 ]
  %98 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8**, i8*** %101, align 8
  %103 = icmp ne i8* %97, null
  %104 = icmp ne i8** %102, null
  %105 = and i1 %103, %104
  br i1 %105, label %106, label %110, !prof !3

106:                                              ; preds = %96
  %107 = zext i32 %99 to i64
  %108 = bitcast i8** %102 to i8*
  %109 = shl nuw nsw i64 %107, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* nonnull align 8 %108, i64 %109, i1 false) #12
  br label %110

110:                                              ; preds = %96, %106
  %111 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %12, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %112 = load i32, i32* %100, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !2

114:                                              ; preds = %110
  store i32 0, i32* %100, align 4
  br label %115

115:                                              ; preds = %114, %110
  %116 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8**, i8*** %116, align 8
  %118 = bitcast i8* %84 to i8**
  %119 = icmp eq i8** %117, %118
  br i1 %119, label %122, label %120, !prof !3

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %121, i8** %117) #12
  br label %122

122:                                              ; preds = %115, %120
  store i8** null, i8*** %116, align 8
  br i1 %111, label %123, label %149

123:                                              ; preds = %122
  %124 = call i8* @_Znwm(i64 48) #14
  %125 = bitcast %"class.blink::WebVector"* %11 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 16
  %127 = bitcast %"class.blink::WebVector"* %11 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %127, align 16
  %128 = bitcast i8** %17 to i64*
  %129 = load i64, i64* %128, align 16
  store i64 0, i64* %128, align 16
  %130 = bitcast i8* %124 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %131 = getelementptr inbounds i8, i8* %124, i64 8
  %132 = bitcast i8* %131 to %"class.blink::WebCryptoAlgorithm"*
  %133 = bitcast i8* %131 to i8**
  store i8* null, i8** %133, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %132, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %12) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoPbkdf2ParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %134 = getelementptr inbounds i8, i8* %124, i64 16
  %135 = bitcast i8* %134 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %135, align 8
  %136 = getelementptr inbounds i8, i8* %124, i64 32
  %137 = bitcast i8* %136 to i64*
  store i64 %129, i64* %137, align 8
  %138 = getelementptr inbounds i8, i8* %124, i64 40
  %139 = bitcast i8* %138 to i32*
  store i32 %79, i32* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %140, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %124, i8** %142, align 8
  %143 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %141, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %123
  %145 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %141 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %146 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %146, i64 1
  %148 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %147, align 8
  call void %148(%"class.blink::WebCryptoAlgorithmParams"* nonnull %141) #12
  br label %149

149:                                              ; preds = %123, %144, %122
  %150 = phi i1 [ false, %122 ], [ true, %144 ], [ true, %123 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  br label %151

151:                                              ; preds = %149, %76, %44, %45
  %152 = phi i1 [ false, %45 ], [ false, %44 ], [ %150, %149 ], [ false, %76 ]
  %153 = load i8*, i8** %15, align 16
  %154 = icmp eq i8* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = ptrtoint i8* %153 to i64
  %157 = bitcast i8** %16 to i64*
  store i64 %156, i64* %157, align 8
  call void @_ZdlPv(i8* nonnull %153) #14
  br label %158

158:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118ParseEd25519ParamsEPN2v87IsolateERKNS_10DictionaryERNSt3__110unique_ptrINS_24WebCryptoAlgorithmParamsENS7_14default_deleteIS9_EEEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.std::__1::unique_ptr.203"* nocapture dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca %"class.blink::WebCryptoAlgorithm", align 8
  %7 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %8 = bitcast %"class.blink::WebCryptoAlgorithm"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::WebCryptoAlgorithm", %"class.blink::WebCryptoAlgorithm"* %6, i64 0, i32 0, i32 0
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %7 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %14, align 8
  %15 = icmp ugt i32 %11, 10
  br i1 %15, label %16, label %24

16:                                               ; preds = %5
  %17 = zext i32 %11 to i64
  %18 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %17) #12
  %19 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %7 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = lshr i64 %18, 3
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %14, align 8
  br label %24

24:                                               ; preds = %16, %5
  %25 = phi i8* [ %12, %5 ], [ %19, %16 ]
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8**, i8*** %29, align 8
  %31 = icmp ne i8* %25, null
  %32 = icmp ne i8** %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %38, !prof !3

34:                                               ; preds = %24
  %35 = zext i32 %27 to i64
  %36 = bitcast i8** %30 to i8*
  %37 = shl nuw nsw i64 %35, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %36, i64 %37, i1 false) #12
  br label %38

38:                                               ; preds = %24, %34
  %39 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::Dictionary"* dereferenceable(24) %1, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %6, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %40 = load i32, i32* %28, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38
  store i32 0, i32* %28, align 4
  br label %43

43:                                               ; preds = %42, %38
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8**, i8*** %44, align 8
  %46 = bitcast i8* %12 to i8**
  %47 = icmp eq i8** %45, %46
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %49, i8** %45) #12
  br label %50

50:                                               ; preds = %43, %48
  store i8** null, i8*** %44, align 8
  br i1 %39, label %51, label %66

51:                                               ; preds = %50
  %52 = call i8* @_Znwm(i64 16) #14
  %53 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 8
  %55 = bitcast i8* %54 to %"class.blink::WebCryptoAlgorithm"*
  %56 = bitcast i8* %54 to i8**
  store i8* null, i8** %56, align 8
  call void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"* %55, %"class.blink::WebCryptoAlgorithm"* nonnull dereferenceable(8) %6) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22WebCryptoEd25519ParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203"* %2, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::WebCryptoAlgorithmParams"*, %"class.blink::WebCryptoAlgorithmParams"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.203"* %2 to i8**
  store i8* %52, i8** %59, align 8
  %60 = icmp eq %"class.blink::WebCryptoAlgorithmParams"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::WebCryptoAlgorithmParams"* %58 to void (%"class.blink::WebCryptoAlgorithmParams"*)***
  %63 = load void (%"class.blink::WebCryptoAlgorithmParams"*)**, void (%"class.blink::WebCryptoAlgorithmParams"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %63, i64 1
  %65 = load void (%"class.blink::WebCryptoAlgorithmParams"*)*, void (%"class.blink::WebCryptoAlgorithmParams"*)** %64, align 8
  call void %65(%"class.blink::WebCryptoAlgorithmParams"* nonnull %58) #12
  br label %66

66:                                               ; preds = %51, %61, %50
  %67 = phi i1 [ false, %50 ], [ true, %61 ], [ true, %51 ]
  call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123GetOptionalBufferSourceERKNS_10DictionaryEPKcRbRNS_9WebVectorIhEERKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24), i8*, i8* nocapture dereferenceable(1), %"class.blink::WebVector"* dereferenceable(24), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %7 = alloca %"class.v8::Local.193", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::WebVector", align 16
  %10 = alloca %"class.blink::DOMArrayPiece", align 8
  %11 = alloca %"class.blink::WebVector", align 16
  %12 = alloca %"class.blink::DOMArrayPiece", align 8
  %13 = alloca %"class.WTF::String", align 8
  store i8 0, i8* %2, align 1
  %14 = bitcast %"class.v8::Local.193"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::Local.193", %"class.v8::Local.193"* %7, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %15, align 8
  %16 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = icmp eq i8* %1, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %6
  %19 = tail call i64 @strlen(i8* nonnull %1) #13
  %20 = icmp ult i64 %19, 4294967296
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %18
  %23 = trunc i64 %19 to i32
  br label %24

24:                                               ; preds = %6, %22
  %25 = phi i32 [ %23, %22 ], [ 0, %6 ]
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %1, i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %25, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = icmp eq %"class.v8::Isolate"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %169

34:                                               ; preds = %24
  %35 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %31, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  %36 = bitcast %"class.v8::String"* %35 to %"class.v8::Value"*
  %37 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %36, %"class.v8::Local.193"* nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br i1 %37, label %38, label %169

38:                                               ; preds = %34
  store i8 1, i8* %2, align 1
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %40 = call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %39) #12
  br i1 %40, label %41, label %90

41:                                               ; preds = %38
  %42 = bitcast %"class.blink::WebVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %43 = bitcast %"class.blink::DOMArrayPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  %44 = bitcast %"class.v8::Local.193"* %7 to %"class.v8::Object"**
  %45 = load %"class.v8::Object"*, %"class.v8::Object"** %44, align 8
  %46 = call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %45) #12
  call void @_ZN5blink13DOMArrayPieceC1EPNS_18DOMArrayBufferViewE(%"class.blink::DOMArrayPiece"* nonnull %10, %"class.blink::DOMArrayBufferView"* %46) #12
  %47 = call i8* @_ZNK5blink13DOMArrayPiece4DataEv(%"class.blink::DOMArrayPiece"* nonnull %10) #12, !noalias !8
  %48 = call i64 @_ZNK5blink13DOMArrayPiece10ByteLengthEv(%"class.blink::DOMArrayPiece"* nonnull %10) #12, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %42, i8 0, i64 24, i1 false) #12, !alias.scope !8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %41
  %51 = icmp slt i64 %48, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.blink::WebVector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %53) #15
  unreachable

54:                                               ; preds = %50
  %55 = call i8* @_Znwm(i64 %48) #14
  %56 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 1
  store i8* %55, i8** %56, align 8, !alias.scope !8
  %57 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %55, i8** %57, align 16, !alias.scope !8
  %58 = getelementptr inbounds i8, i8* %55, i64 %48
  %59 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %58, i8** %59, align 16, !alias.scope !8
  %60 = bitcast i8** %56 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 %47, i64 %48, i1 false) #12
  %61 = ptrtoint i8* %58 to i64
  store i64 %61, i64* %60, align 8, !alias.scope !8
  %62 = ptrtoint i8* %55 to i64
  br label %63

63:                                               ; preds = %41, %54
  %64 = phi i8* [ null, %41 ], [ %55, %54 ]
  %65 = phi i64 [ 0, %41 ], [ %61, %54 ]
  %66 = phi i64 [ 0, %41 ], [ %62, %54 ]
  %67 = icmp eq %"class.blink::WebVector"* %9, %3
  br i1 %67, label %82, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::WebVector"* %3 to i64*
  %70 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = bitcast %"class.blink::WebVector"* %3 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  store i64 %66, i64* %69, align 8
  store i64 %65, i64* %71, align 8
  %74 = bitcast %"class.blink::WebVector"* %9 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 16
  %75 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = bitcast i8** %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast i8** %76 to i64*
  store i64 %65, i64* %77, align 8
  store i64 %78, i64* %79, align 16
  %80 = extractelement <2 x i64> %73, i32 0
  %81 = inttoptr i64 %80 to i8*
  br label %82

82:                                               ; preds = %63, %68
  %83 = phi i8* [ %64, %63 ], [ %81, %68 ]
  %84 = icmp eq i8* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = ptrtoint i8* %83 to i64
  %87 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 1
  %88 = bitcast i8** %87 to i64*
  store i64 %86, i64* %88, align 8
  call void @_ZdlPv(i8* nonnull %83) #14
  br label %89

89:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  br label %169

90:                                               ; preds = %38
  %91 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %92 = call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %91) #12
  br i1 %92, label %93, label %142

93:                                               ; preds = %90
  %94 = bitcast %"class.blink::WebVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  %95 = bitcast %"class.blink::DOMArrayPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  %96 = bitcast %"class.v8::Local.193"* %7 to %"class.v8::Object"**
  %97 = load %"class.v8::Object"*, %"class.v8::Object"** %96, align 8
  %98 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %97) #12
  call void @_ZN5blink13DOMArrayPieceC1EPNS_14DOMArrayBufferE(%"class.blink::DOMArrayPiece"* nonnull %12, %"class.blink::DOMArrayBuffer"* %98) #12
  %99 = call i8* @_ZNK5blink13DOMArrayPiece4DataEv(%"class.blink::DOMArrayPiece"* nonnull %12) #12, !noalias !11
  %100 = call i64 @_ZNK5blink13DOMArrayPiece10ByteLengthEv(%"class.blink::DOMArrayPiece"* nonnull %12) #12, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %94, i8 0, i64 24, i1 false) #12, !alias.scope !11
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %93
  %103 = icmp slt i64 %100, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %102
  %105 = bitcast %"class.blink::WebVector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %105) #15
  unreachable

106:                                              ; preds = %102
  %107 = call i8* @_Znwm(i64 %100) #14
  %108 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 1
  store i8* %107, i8** %108, align 8, !alias.scope !11
  %109 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* %107, i8** %109, align 16, !alias.scope !11
  %110 = getelementptr inbounds i8, i8* %107, i64 %100
  %111 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %110, i8** %111, align 16, !alias.scope !11
  %112 = bitcast i8** %108 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %107, i8* align 1 %99, i64 %100, i1 false) #12
  %113 = ptrtoint i8* %110 to i64
  store i64 %113, i64* %112, align 8, !alias.scope !11
  %114 = ptrtoint i8* %107 to i64
  br label %115

115:                                              ; preds = %93, %106
  %116 = phi i8* [ null, %93 ], [ %107, %106 ]
  %117 = phi i64 [ 0, %93 ], [ %113, %106 ]
  %118 = phi i64 [ 0, %93 ], [ %114, %106 ]
  %119 = icmp eq %"class.blink::WebVector"* %11, %3
  br i1 %119, label %134, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.blink::WebVector"* %3 to i64*
  %122 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %123 = bitcast i8** %122 to i64*
  %124 = bitcast %"class.blink::WebVector"* %3 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8
  store i64 %118, i64* %121, align 8
  store i64 %117, i64* %123, align 8
  %126 = bitcast %"class.blink::WebVector"* %11 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %126, align 16
  %127 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast i8** %127 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast i8** %128 to i64*
  store i64 %117, i64* %129, align 8
  store i64 %130, i64* %131, align 16
  %132 = extractelement <2 x i64> %125, i32 0
  %133 = inttoptr i64 %132 to i8*
  br label %134

134:                                              ; preds = %115, %120
  %135 = phi i8* [ %116, %115 ], [ %133, %120 ]
  %136 = icmp eq i8* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %134
  %138 = ptrtoint i8* %135 to i64
  %139 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %11, i64 0, i32 0, i32 0, i32 1
  %140 = bitcast i8** %139 to i64*
  store i64 %138, i64* %140, align 8
  call void @_ZdlPv(i8* nonnull %135) #14
  br label %141

141:                                              ; preds = %134, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  br label %169

142:                                              ; preds = %90
  %143 = load i8, i8* %2, align 1, !range !4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %169, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #12
  %147 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %4, i8* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0))
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %148, align 8
  %149 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %150 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %150, i64 3
  %152 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %151, align 8
  call void %152(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %13) #12
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #12
  br label %168

168:                                              ; preds = %145, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #12
  br label %169

169:                                              ; preds = %33, %142, %34, %168, %141, %89
  %170 = phi i1 [ true, %89 ], [ true, %141 ], [ false, %168 ], [ true, %34 ], [ true, %142 ], [ true, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  ret i1 %170
}

declare zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN5blink13DOMArrayPieceC1EPNS_18DOMArrayBufferViewE(%"class.blink::DOMArrayPiece"*, %"class.blink::DOMArrayBufferView"*) unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN5blink13DOMArrayPieceC1EPNS_14DOMArrayBufferE(%"class.blink::DOMArrayPiece"*, %"class.blink::DOMArrayBuffer"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"*, %"class.v8::Value"*, %"class.v8::Local.193"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #12
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #12
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #12
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #12
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare i8* @_ZNK5blink13DOMArrayPiece4DataEv(%"class.blink::DOMArrayPiece"*) local_unnamed_addr #2

declare i64 @_ZNK5blink13DOMArrayPiece10ByteLengthEv(%"class.blink::DOMArrayPiece"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoAesCbcParamsD2Ev(%"class.blink::WebCryptoAesCbcParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAesCbcParams", %"class.blink::WebCryptoAesCbcParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesCbcParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAesCbcParams", %"class.blink::WebCryptoAesCbcParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoAesCbcParams", %"class.blink::WebCryptoAesCbcParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoAesCbcParamsD0Ev(%"class.blink::WebCryptoAesCbcParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAesCbcParams", %"class.blink::WebCryptoAesCbcParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesCbcParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAesCbcParams", %"class.blink::WebCryptoAesCbcParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoAesCbcParams", %"class.blink::WebCryptoAesCbcParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.blink::WebCryptoAesCbcParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21WebCryptoAesCbcParams7GetTypeEv(%"class.blink::WebCryptoAesCbcParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118GetOptionalIntegerERKNS_10DictionaryEPKcRbRdddRKNS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24), i8*, i8* nocapture dereferenceable(1), double* nocapture dereferenceable(8), double, %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %8 = alloca %"class.v8::Local.193", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = bitcast %"class.v8::Local.193"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.v8::Local.193", %"class.v8::Local.193"* %8, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %13, align 8
  %14 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = icmp eq i8* %1, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %7
  %17 = tail call i64 @strlen(i8* nonnull %1) #13
  %18 = icmp ult i64 %17, 4294967296
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

20:                                               ; preds = %16
  %21 = trunc i64 %17 to i32
  br label %22

22:                                               ; preds = %7, %20
  %23 = phi i32 [ %21, %20 ], [ 0, %7 ]
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* %1, i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %23, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = icmp eq %"class.v8::Isolate"* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %36

32:                                               ; preds = %22
  %33 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %29, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #12
  %34 = bitcast %"class.v8::String"* %33 to %"class.v8::Value"*
  %35 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %34, %"class.v8::Local.193"* nonnull dereferenceable(8) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br i1 %35, label %37, label %36

36:                                               ; preds = %31, %32
  store i8 0, i8* %2, align 1
  br label %104

37:                                               ; preds = %32
  store i8 1, i8* %2, align 1
  %38 = load %"class.v8::Value"*, %"class.v8::Value"** %13, align 8
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %40 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %39) #12
  %41 = call { i8, double } @_ZNK2v85Value11NumberValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %38, %"class.v8::Context"* %40) #12
  %42 = extractvalue { i8, double } %41, 0
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44, !prof !2

44:                                               ; preds = %37
  %45 = extractvalue { i8, double } %41, 1
  %46 = fcmp uno double %45, 0.000000e+00
  br i1 %46, label %47, label %71

47:                                               ; preds = %37, %44
  %48 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  %49 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0))
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, i64 3
  %54 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %10) #12
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %47, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %104

71:                                               ; preds = %44
  %72 = call double @llvm.trunc.f64(double %45)
  %73 = call double @llvm.fabs.f64(double %72) #16
  %74 = fcmp oeq double %73, 0x7FF0000000000000
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = fcmp olt double %72, 0.000000e+00
  %77 = fcmp ogt double %72, %4
  %78 = or i1 %76, %77
  br i1 %78, label %79, label %103

79:                                               ; preds = %75, %71
  %80 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  %81 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %5, i8* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i64 0, i64 0))
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 8
  %83 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %84 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %84, i64 3
  %86 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %85, align 8
  call void %86(%"class.blink::ExceptionState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %11) #12
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #12
  br label %102

102:                                              ; preds = %79, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  br label %104

103:                                              ; preds = %75
  store double %72, double* %3, align 8
  br label %104

104:                                              ; preds = %70, %102, %103, %36
  %105 = phi i1 [ true, %36 ], [ false, %70 ], [ false, %102 ], [ true, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret i1 %105
}

declare { i8, double } @_ZNK2v85Value11NumberValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.trunc.f64(double) #11

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24WebCryptoAesKeyGenParamsD0Ev(%"class.blink::WebCryptoAesKeyGenParams"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::WebCryptoAesKeyGenParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink24WebCryptoAesKeyGenParams7GetTypeEv(%"class.blink::WebCryptoAesKeyGenParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_19ParseHashEPN2v87IsolateERKNS_10DictionaryERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::Dictionary"* dereferenceable(24), %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::(anonymous namespace)::ErrorContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca %"class.blink::Dictionary", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::ScriptValue", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::(anonymous namespace)::ErrorContext", align 8
  %14 = bitcast %"class.blink::Dictionary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %15 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %7, i64 0, i32 0
  store %"class.v8::Isolate"* null, %"class.v8::Isolate"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %7, i64 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %7, i64 0, i32 2, i32 0
  store %"class.v8::Object"* null, %"class.v8::Object"** %17, align 8
  %18 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 4, i32* %22, align 8
  %23 = call zeroext i1 @_ZNK5blink10Dictionary3GetERKN3WTF10StringViewERS0_(%"class.blink::Dictionary"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.blink::Dictionary"* nonnull dereferenceable(24) %7) #12
  br i1 %23, label %24, label %91

24:                                               ; preds = %5
  %25 = load %"class.v8::Object"*, %"class.v8::Object"** %17, align 8
  %26 = icmp eq %"class.v8::Object"* %25, null
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %27 = bitcast %"class.v8::Object"* %25 to %"class.v8::Value"*
  br i1 %26, label %92, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ScriptValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  %31 = icmp eq %"class.v8::Isolate"* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = load i32, i32* %16, align 8
  switch i32 %33, label %43 [
    i32 0, label %34
    i32 1, label %38
    i32 2, label %42
  ]

34:                                               ; preds = %32
  %35 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  br label %43

38:                                               ; preds = %32
  %39 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %40 = add i64 %39, 176
  %41 = inttoptr i64 %40 to %"class.v8::Value"*
  br label %43

42:                                               ; preds = %32
  br label %43

43:                                               ; preds = %42, %38, %34, %32, %28
  %44 = phi %"class.v8::Value"* [ %27, %42 ], [ %41, %38 ], [ %37, %34 ], [ null, %28 ], [ null, %32 ]
  %45 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 0
  store %"class.v8::Isolate"* %0, %"class.v8::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %46, %"class.v8::Isolate"* %0, %"class.v8::Value"* %44) #12
  %47 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #12
  %48 = bitcast i8* %47 to %"class.blink::V8UnionObjectOrString"*
  %49 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8UnionObjectOrStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %47, i64 16
  %53 = bitcast i8* %52 to %"class.blink::ScriptValue"*
  %54 = bitcast %"class.blink::ScriptValue"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast i8* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %47, i64 24
  %58 = bitcast i8* %57 to %"class.blink::TraceWrapperV8Reference"*
  %59 = bitcast i8* %57 to i64**
  store i64* null, i64** %59, align 8
  %60 = icmp eq %"class.blink::ScriptValue"* %9, %53
  br i1 %60, label %66, label %61

61:                                               ; preds = %43
  %62 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %62, i64** %59) #12
  br label %66

66:                                               ; preds = %65, %61, %43
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %58) #12
  %67 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 1, i32 0
  %68 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %67, align 8
  %69 = getelementptr inbounds i8, i8* %47, i64 32
  %70 = bitcast i8* %69 to %"class.blink::DOMWrapperWorld"**
  store %"class.blink::DOMWrapperWorld"* %68, %"class.blink::DOMWrapperWorld"** %70, align 8
  %71 = icmp eq %"class.blink::DOMWrapperWorld"* %68, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %68, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %73) #12
  br label %74

74:                                               ; preds = %72, %66
  %75 = getelementptr inbounds i8, i8* %47, i64 40
  %76 = bitcast i8* %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds i8, i8* %47, i64 -4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = or i16 %79, 1
  store atomic i16 %80, i16* %78 release, align 2
  %81 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %67, align 8
  %82 = icmp eq %"class.blink::DOMWrapperWorld"* %81, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %81, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #12
  %85 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %81) #12
  %89 = bitcast %"class.blink::DOMWrapperWorld"* %81 to i8*
  call void @free(i8* %89) #12
  br label %90

90:                                               ; preds = %88, %83, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %176

91:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  br label %92

92:                                               ; preds = %91, %24
  %93 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8
  %95 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %99, align 8
  %100 = call zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF6StringEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::String"* nonnull dereferenceable(8) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  br i1 %100, label %125, label %101

101:                                              ; preds = %92
  %102 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12
  %103 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.68, i64 0, i64 0)) #12
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  %105 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %106 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %106, i64 3
  %108 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %107, align 8
  call void %108(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %12) #12
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %101
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #12
  br label %124

124:                                              ; preds = %123, %120, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12
  br label %158

125:                                              ; preds = %92
  %126 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #12
  %127 = bitcast i8* %126 to %"class.blink::V8UnionObjectOrString"*
  %128 = bitcast i8* %126 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8UnionObjectOrStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds i8, i8* %126, i64 8
  %130 = bitcast i8* %129 to i32*
  store i32 1, i32* %130, align 8
  %131 = getelementptr inbounds i8, i8* %126, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #12
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %133 = getelementptr inbounds i8, i8* %126, i64 40
  %134 = bitcast i8* %133 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %134, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %135, label %153, label %136

136:                                              ; preds = %125
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #12
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %141
  call void @llvm.trap() #12
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %153

153:                                              ; preds = %151, %136, %125
  %154 = getelementptr inbounds i8, i8* %126, i64 -4
  %155 = bitcast i8* %154 to i16*
  %156 = load atomic i16, i16* %155 monotonic, align 2
  %157 = or i16 %156, 1
  store atomic i16 %157, i16* %155 release, align 2
  br label %158

158:                                              ; preds = %153, %124
  %159 = phi %"class.blink::V8UnionObjectOrString"* [ null, %124 ], [ %127, %153 ]
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #12
  br label %175

175:                                              ; preds = %174, %171, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  br label %176

176:                                              ; preds = %90, %175
  %177 = phi %"class.blink::V8UnionObjectOrString"* [ %48, %90 ], [ %159, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %178 = icmp eq %"class.blink::V8UnionObjectOrString"* %177, null
  br i1 %178, label %236, label %179

179:                                              ; preds = %176
  %180 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8** %6, align 8
  %181 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %194, label %186, !prof !2

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8**, i8*** %187, align 8
  %189 = zext i32 %182 to i64
  %190 = getelementptr inbounds i8*, i8** %188, i64 %189
  %191 = bitcast i8** %190 to i64*
  store i64 ptrtoint ([5 x i8]* @.str.67 to i64), i64* %191, align 8
  %192 = load i32, i32* %181, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %181, align 4
  br label %196

194:                                              ; preds = %179
  %195 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0
  call void @_ZN3WTF6VectorIPKcLj10ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.188"* %195, i8** nonnull dereferenceable(8) %6) #12
  br label %196

196:                                              ; preds = %186, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180)
  %197 = load i32, i32* %183, align 8
  %198 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 1, i64 0
  %199 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %13 to i8**
  store i8* %198, i8** %199, align 8
  %200 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %200, align 8
  %201 = icmp ugt i32 %197, 10
  br i1 %201, label %202, label %210

202:                                              ; preds = %196
  %203 = zext i32 %197 to i64
  %204 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKcEEmm(i64 %203) #12
  %205 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %204, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKcEES2_v, i64 0, i64 0)) #12
  %206 = ptrtoint i8* %205 to i64
  %207 = bitcast %"class.blink::(anonymous namespace)::ErrorContext"* %13 to i64*
  store atomic i64 %206, i64* %207 monotonic, align 8
  %208 = lshr i64 %204, 3
  %209 = trunc i64 %208 to i32
  store i32 %209, i32* %200, align 8
  br label %210

210:                                              ; preds = %202, %196
  %211 = phi i8* [ %198, %196 ], [ %205, %202 ]
  %212 = load i32, i32* %181, align 4
  %213 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %212, i32* %213, align 4
  %214 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8**, i8*** %214, align 8
  %216 = icmp ne i8* %211, null
  %217 = icmp ne i8** %215, null
  %218 = and i1 %216, %217
  br i1 %218, label %219, label %223, !prof !3

219:                                              ; preds = %210
  %220 = zext i32 %212 to i64
  %221 = bitcast i8** %215 to i8*
  %222 = shl nuw nsw i64 %220, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %211, i8* nonnull align 8 %221, i64 %222, i1 false) #12
  br label %223

223:                                              ; preds = %210, %219
  %224 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ParseAlgorithmIdentifierEPN2v87IsolateERKNS_21V8UnionObjectOrStringENS_18WebCryptoOperationERNS_18WebCryptoAlgorithmENS0_12ErrorContextERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.blink::V8UnionObjectOrString"* nonnull dereferenceable(48) %177, i32 4, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %2, %"class.blink::(anonymous namespace)::ErrorContext"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %225 = load i32, i32* %213, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %228, label %227, !prof !2

227:                                              ; preds = %223
  store i32 0, i32* %213, align 4
  br label %228

228:                                              ; preds = %227, %223
  %229 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8**, i8*** %229, align 8
  %231 = bitcast i8* %198 to i8**
  %232 = icmp eq i8** %230, %231
  br i1 %232, label %235, label %233, !prof !3

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.blink::(anonymous namespace)::ErrorContext", %"class.blink::(anonymous namespace)::ErrorContext"* %13, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.189"* nonnull %234, i8** %230) #12
  br label %235

235:                                              ; preds = %228, %233
  store i8** null, i8*** %229, align 8
  br label %236

236:                                              ; preds = %176, %235
  %237 = phi i1 [ %224, %235 ], [ false, %176 ]
  ret i1 %237
}

declare zeroext i1 @_ZNK5blink10Dictionary3GetERKN3WTF10StringViewERS0_(%"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Dictionary"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #12
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #12
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i8* %40, i8* %41) #12
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.70, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #12
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.178"*) local_unnamed_addr #2

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #12
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %9) #12
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #12
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #12
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #12
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #12
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #12
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #12
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #12
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #12
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #12
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #12
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #12
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #12
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #12
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #12
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.72, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0)) #12
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.72, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i64 0, i64 0)) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25WebCryptoHmacImportParamsD0Ev(%"class.blink::WebCryptoHmacImportParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoHmacImportParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink25WebCryptoHmacImportParams7GetTypeEv(%"class.blink::WebCryptoHmacImportParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32WebCryptoAlgorithmParamsWithHashD0Ev(%"class.blink::WebCryptoAlgorithmParamsWithHash"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @_ZN5blink18WebCryptoAlgorithm6AssignERKS0_(%"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32WebCryptoAlgorithmParamsWithHashD2Ev(%"class.blink::WebCryptoAlgorithmParamsWithHash"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebCryptoAlgorithmParamsWithHash"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebCryptoAlgorithmParamsWithHash"* %0, i64 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25WebCryptoHmacKeyGenParamsD0Ev(%"class.blink::WebCryptoHmacKeyGenParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoHmacKeyGenParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink25WebCryptoHmacKeyGenParams7GetTypeEv(%"class.blink::WebCryptoHmacKeyGenParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

declare zeroext i1 @_ZN5blink16DictionaryHelper3GetIPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.blink::DOMTypedArray"** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WebCryptoRsaHashedKeyGenParamsD2Ev(%"class.blink::WebCryptoRsaHashedKeyGenParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoRsaHashedKeyGenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 3
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #14
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WebCryptoRsaHashedKeyGenParamsD0Ev(%"class.blink::WebCryptoRsaHashedKeyGenParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoRsaHashedKeyGenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 3
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #14
  br label %11

11:                                               ; preds = %1, %7
  %12 = bitcast %"class.blink::WebCryptoRsaHashedKeyGenParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink30WebCryptoRsaHashedKeyGenParams7GetTypeEv(%"class.blink::WebCryptoRsaHashedKeyGenParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WebCryptoRsaHashedImportParamsD0Ev(%"class.blink::WebCryptoRsaHashedImportParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedImportParams", %"class.blink::WebCryptoRsaHashedImportParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedImportParams", %"class.blink::WebCryptoRsaHashedImportParams"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoRsaHashedImportParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink30WebCryptoRsaHashedImportParams7GetTypeEv(%"class.blink::WebCryptoRsaHashedImportParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoAesCtrParamsD2Ev(%"class.blink::WebCryptoAesCtrParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesCtrParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoAesCtrParamsD0Ev(%"class.blink::WebCryptoAesCtrParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesCtrParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.blink::WebCryptoAesCtrParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21WebCryptoAesCtrParams7GetTypeEv(%"class.blink::WebCryptoAesCtrParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoAesGcmParamsD2Ev(%"class.blink::WebCryptoAesGcmParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesGcmParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #14
  br label %18

18:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoAesGcmParamsD0Ev(%"class.blink::WebCryptoAesGcmParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoAesGcmParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.blink::WebCryptoAesGcmParams", %"class.blink::WebCryptoAesGcmParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #14
  br label %18

18:                                               ; preds = %10, %14
  %19 = bitcast %"class.blink::WebCryptoAesGcmParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21WebCryptoAesGcmParams7GetTypeEv(%"class.blink::WebCryptoAesGcmParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22WebCryptoRsaOaepParamsD2Ev(%"class.blink::WebCryptoRsaOaepParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22WebCryptoRsaOaepParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22WebCryptoRsaOaepParamsD0Ev(%"class.blink::WebCryptoRsaOaepParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink22WebCryptoRsaOaepParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.blink::WebCryptoRsaOaepParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22WebCryptoRsaOaepParams7GetTypeEv(%"class.blink::WebCryptoRsaOaepParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoRsaPssParamsD0Ev(%"class.blink::WebCryptoRsaPssParams"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::WebCryptoRsaPssParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21WebCryptoRsaPssParams7GetTypeEv(%"class.blink::WebCryptoRsaPssParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WebCryptoEcdsaParamsD0Ev(%"class.blink::WebCryptoEcdsaParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoEcdsaParams", %"class.blink::WebCryptoEcdsaParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoEcdsaParams", %"class.blink::WebCryptoEcdsaParams"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoEcdsaParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20WebCryptoEcdsaParams7GetTypeEv(%"class.blink::WebCryptoEcdsaParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115ParseNamedCurveERKNS_10DictionaryERNS_19WebCryptoNamedCurveENS0_12ErrorContextERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24), i32* nocapture dereferenceable(4), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 10, i32* %17, align 8
  %18 = call zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF6StringEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24) %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %18, label %19, label %32

19:                                               ; preds = %4
  %20 = bitcast %"class.WTF::StringView"* %5 to i8*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  %24 = bitcast %"class.WTF::StringView"* %5 to i64*
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %6 to i8*
  %27 = bitcast %"class.WTF::StringView"* %6 to i64*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %56, label %58

32:                                               ; preds = %4
  %33 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %37, i64 3
  %39 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %38, align 8
  call void %39(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %9) #12
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #12
  br label %55

55:                                               ; preds = %32, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %87

56:                                               ; preds = %19
  store i8* null, i8** %22, align 8
  %57 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %57, i64* %24, align 8
  br label %62

58:                                               ; preds = %19
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %21, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %23, align 8
  br label %62

62:                                               ; preds = %56, %58
  %63 = phi i32 [ %60, %58 ], [ 0, %56 ]
  store i32 %63, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %64, i64* %27, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0), i8** %28, align 8
  store i32 5, i32* %29, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %65, label %66, label %70

66:                                               ; preds = %124, %111, %62
  %67 = phi i64 [ 0, %62 ], [ 1, %111 ], [ 2, %124 ]
  %68 = getelementptr inbounds [3 x %"struct.blink::(anonymous namespace)::CurveNameMapping"], [3 x %"struct.blink::(anonymous namespace)::CurveNameMapping"]* @_ZN5blink12_GLOBAL__N_118kCurveNameMappingsE, i64 0, i64 %67, i32 1
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %1, align 4
  br label %87

70:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %109, label %105

73:                                               ; preds = %128
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #12
  br label %86

86:                                               ; preds = %128, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #12
  br label %87

87:                                               ; preds = %66, %86, %55
  %88 = phi i1 [ false, %55 ], [ false, %86 ], [ true, %66 ]
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #12
  br label %104

104:                                              ; preds = %87, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret i1 %88

105:                                              ; preds = %70
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %21, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %23, align 8
  br label %111

109:                                              ; preds = %70
  store i8* null, i8** %22, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %110, i64* %24, align 8
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi i32 [ %107, %105 ], [ 0, %109 ]
  store i32 %112, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %113, i64* %27, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0), i8** %28, align 8
  store i32 5, i32* %29, align 8
  %114 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %114, label %66, label %115

115:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %115
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %21, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 1
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %23, align 8
  br label %124

122:                                              ; preds = %115
  store i8* null, i8** %22, align 8
  %123 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %123, i64* %24, align 8
  br label %124

124:                                              ; preds = %118, %122
  %125 = phi i32 [ %120, %118 ], [ 0, %122 ]
  store i32 %125, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %126, i64* %27, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0), i8** %28, align 8
  store i32 5, i32* %29, align 8
  %127 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %127, label %66, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #12
  %130 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKc(%"class.blink::(anonymous namespace)::ErrorContext"* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0))
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %131, align 8
  %132 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %133 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %132, align 8
  %134 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %133, align 8
  call void %134(%"class.blink::ExceptionState"* %3, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #12
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %86, label %73
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23WebCryptoEcKeyGenParamsD0Ev(%"class.blink::WebCryptoEcKeyGenParams"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::WebCryptoEcKeyGenParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink23WebCryptoEcKeyGenParams7GetTypeEv(%"class.blink::WebCryptoEcKeyGenParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24WebCryptoAlgorithmParamsD2Ev(%"class.blink::WebCryptoAlgorithmParams"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WebCryptoEcKeyImportParamsD0Ev(%"class.blink::WebCryptoEcKeyImportParams"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::WebCryptoEcKeyImportParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink26WebCryptoEcKeyImportParams7GetTypeEv(%"class.blink::WebCryptoEcKeyImportParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 13
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116GetPeerPublicKeyERKNS_10DictionaryERKNS0_12ErrorContextEPNS_12WebCryptoKeyERNS_14ExceptionStateE(%"class.blink::Dictionary"* dereferenceable(24), %"class.blink::(anonymous namespace)::ErrorContext"* nocapture readonly dereferenceable(96), %"class.blink::WebCryptoKey"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.v8::Local.193", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.v8::Local.193"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.v8::Local.193", %"class.v8::Local.193"* %5, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %10, align 8
  %11 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 6, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %18 = icmp eq %"class.v8::Isolate"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %24

20:                                               ; preds = %4
  %21 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  %22 = bitcast %"class.v8::String"* %21 to %"class.v8::Value"*
  %23 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %22, %"class.v8::Local.193"* nonnull dereferenceable(8) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br i1 %23, label %48, label %24

24:                                               ; preds = %19, %20
  %25 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %29 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, i64 3
  %31 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %30, align 8
  call void %31(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %47

47:                                               ; preds = %24, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %105

48:                                               ; preds = %20
  %49 = bitcast %"class.blink::Dictionary"* %0 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %10, align 8
  %52 = add i64 %50, 8
  %53 = inttoptr i64 %52 to %"class.blink::V8PerIsolateData"**
  %54 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %53, align 8
  %55 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %54, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink11V8CryptoKey18wrapper_type_info_E, %"class.v8::Value"* %51) #12
  br i1 %55, label %56, label %78

56:                                               ; preds = %48
  %57 = bitcast %"class.v8::Value"* %51 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %58, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  switch i16 %67, label %72 [
    i16 1057, label %68
    i16 1056, label %68
    i16 1040, label %68
  ]

68:                                               ; preds = %56, %56, %56
  %69 = add i64 %58, 19
  %70 = inttoptr i64 %69 to i8**
  %71 = load i8*, i8** %70, align 1
  br label %75

72:                                               ; preds = %56
  %73 = bitcast %"class.v8::Value"* %51 to %"class.v8::Object"*
  %74 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %73, i32 1) #12
  br label %75

75:                                               ; preds = %68, %72
  %76 = phi i8* [ %71, %68 ], [ %74, %72 ]
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %102

78:                                               ; preds = %48, %75
  %79 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  %80 = call fastcc %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112ErrorContext8ToStringEPKcS3_(%"class.blink::(anonymous namespace)::ErrorContext"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.89, i64 0, i64 0))
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %81, align 8
  %82 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %83 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %83, i64 3
  %85 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %84, align 8
  call void %85(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #12
  br label %101

101:                                              ; preds = %78, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  br label %105

102:                                              ; preds = %75
  %103 = getelementptr inbounds i8, i8* %76, i64 16
  %104 = bitcast i8* %103 to %"class.blink::WebCryptoKey"*
  call void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"* %2, %"class.blink::WebCryptoKey"* dereferenceable(8) %104) #12
  br label %105

105:                                              ; preds = %101, %102, %47
  %106 = phi i1 [ false, %47 ], [ true, %102 ], [ false, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret i1 %106
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28WebCryptoEcdhKeyDeriveParamsD2Ev(%"class.blink::WebCryptoEcdhKeyDeriveParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoEcdhKeyDeriveParams", %"class.blink::WebCryptoEcdhKeyDeriveParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink28WebCryptoEcdhKeyDeriveParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoEcdhKeyDeriveParams", %"class.blink::WebCryptoEcdhKeyDeriveParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28WebCryptoEcdhKeyDeriveParamsD0Ev(%"class.blink::WebCryptoEcdhKeyDeriveParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoEcdhKeyDeriveParams", %"class.blink::WebCryptoEcdhKeyDeriveParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink28WebCryptoEcdhKeyDeriveParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoEcdhKeyDeriveParams", %"class.blink::WebCryptoEcdhKeyDeriveParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoEcdhKeyDeriveParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink28WebCryptoEcdhKeyDeriveParams7GetTypeEv(%"class.blink::WebCryptoEcdhKeyDeriveParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 14
}

declare void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28WebCryptoAesDerivedKeyParamsD0Ev(%"class.blink::WebCryptoAesDerivedKeyParams"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::WebCryptoAesDerivedKeyParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink28WebCryptoAesDerivedKeyParams7GetTypeEv(%"class.blink::WebCryptoAesDerivedKeyParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19WebCryptoHkdfParamsD2Ev(%"class.blink::WebCryptoHkdfParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19WebCryptoHkdfParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #14
  br label %18

18:                                               ; preds = %10, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %19) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19WebCryptoHkdfParamsD0Ev(%"class.blink::WebCryptoHkdfParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19WebCryptoHkdfParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #14
  br label %18

18:                                               ; preds = %10, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %19) #12
  %20 = bitcast %"class.blink::WebCryptoHkdfParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink19WebCryptoHkdfParams7GetTypeEv(%"class.blink::WebCryptoHkdfParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoPbkdf2ParamsD2Ev(%"class.blink::WebCryptoPbkdf2Params"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoPbkdf2ParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %11) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebCryptoPbkdf2ParamsD0Ev(%"class.blink::WebCryptoPbkdf2Params"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21WebCryptoPbkdf2ParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %11) #12
  %12 = bitcast %"class.blink::WebCryptoPbkdf2Params"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21WebCryptoPbkdf2Params7GetTypeEv(%"class.blink::WebCryptoPbkdf2Params"*) unnamed_addr #0 comdat align 2 {
  ret i32 17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22WebCryptoEd25519ParamsD0Ev(%"class.blink::WebCryptoEd25519Params"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoEd25519Params", %"class.blink::WebCryptoEd25519Params"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32WebCryptoAlgorithmParamsWithHashE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoEd25519Params", %"class.blink::WebCryptoEd25519Params"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoEd25519Params"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22WebCryptoEd25519Params7GetTypeEv(%"class.blink::WebCryptoEd25519Params"*) unnamed_addr #0 comdat align 2 {
  ret i32 18
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WebCryptoX25519KeyDeriveParamsD2Ev(%"class.blink::WebCryptoX25519KeyDeriveParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoX25519KeyDeriveParams", %"class.blink::WebCryptoX25519KeyDeriveParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoX25519KeyDeriveParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoX25519KeyDeriveParams", %"class.blink::WebCryptoX25519KeyDeriveParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WebCryptoX25519KeyDeriveParamsD0Ev(%"class.blink::WebCryptoX25519KeyDeriveParams"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoX25519KeyDeriveParams", %"class.blink::WebCryptoX25519KeyDeriveParams"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30WebCryptoX25519KeyDeriveParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebCryptoX25519KeyDeriveParams", %"class.blink::WebCryptoX25519KeyDeriveParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* %3) #12
  %4 = bitcast %"class.blink::WebCryptoX25519KeyDeriveParams"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink30WebCryptoX25519KeyDeriveParams7GetTypeEv(%"class.blink::WebCryptoX25519KeyDeriveParams"*) unnamed_addr #0 comdat align 2 {
  ret i32 19
}

declare void @_ZN5blink18WebCryptoAlgorithm5ResetEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink9CopyBytesERKNS_13DOMArrayPieceE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink9CopyBytesERKNS_13DOMArrayPieceE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink9CopyBytesERKNS_13DOMArrayPieceE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink9CopyBytesERKNS_13DOMArrayPieceE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink9CopyBytesERKNS_13DOMArrayPieceE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink9CopyBytesERKNS_13DOMArrayPieceE"}
