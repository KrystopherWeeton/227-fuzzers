; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_description.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_description.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.2, %class.scoped_refptr.3, %class.scoped_refptr.13, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.20 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.21", [4 x i8] }>
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.2 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.4", %"class.WTF::RefCounted.11", [4 x i8] }>
%"class.blink::FontSettings.4" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::FontTagValuePair.8"*, i32, i32 }
%"class.blink::FontTagValuePair.8" = type { i32, float }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.13 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.14", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.17, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.14" = type { %"class.base::RefCounted.15" }
%"class.base::RefCounted.15" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.17 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.18", [4 x i8] }>
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.20 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"struct.blink::FontDescription::Size" = type { i8, float }
%"struct.blink::FontDescription::VariantLigatures" = type { i8, [3 x i8] }
%"class.blink::FontVariantNumeric" = type { %union.anon.23 }
%union.anon.23 = type { i32 }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.3, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkFontStyle = type { i32 }
%"struct.blink::FontDescription::FamilyDescription" = type { i32, %"class.blink::FontFamily" }
%"class.blink::FontVariantEastAsian" = type { %union.anon.24 }
%union.anon.24 = type { i32 }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.84, i32, i8, i8, [2 x i8] }>
%union.anon.84 = type { %"class.WTF::Vector.85" }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87", [16 x i8] }
%"class.WTF::VectorBufferBase.87" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN5blink10FontFamilyaSERKS0_ = comdat any

$_ZNK5blink12FontSettingsINS_16FontTagValuePairIiEEE8ToStringEv = comdat any

$_ZNK5blink12FontSettingsINS_16FontTagValuePairIfEEE8ToStringEv = comdat any

$_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

$_ZNK3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink15FontDescription29default_typesetting_features_E = hidden local_unnamed_addr global i32 0, align 4
@_ZN5blink15FontDescription30use_subpixel_text_positioning_E = hidden local_unnamed_addr global i8 0, align 1
@__const._ZNK5blink15FontDescription27SizeAdjustedFontDescriptionEf.result = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.1 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.2 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.3 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.13 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.20 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@__const._ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE.cache_key = private unnamed_addr constant <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.3, i8, [7 x i8] }> <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.3 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Standard\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Serif\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"SansSerif\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"Monospace\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Cursive\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Fantasy\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"Normal\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"Disabled\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"Auto\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"Ultra-Condensed\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"Extra-Condensed\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"Condensed\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"Semi-Condensed\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"Semi-Expanded\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"Expanded\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"Extra-Expanded\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"Ultra-Expanded\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"SmallCaps\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"AllSmallCaps\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"PetiteCaps\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"AllPetiteCaps\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"Unicase\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"TitlingCaps\00", align 1
@.str.26 = private unnamed_addr constant [58 x i8] c"common=%s, discretionary=%s, historical=%s, contextual=%s\00", align 1
@.str.27 = private unnamed_addr constant [56 x i8] c"keyword_size=%u, specified_size=%f, is_absolute_size=%s\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"generic_family=%s, family=[%s]\00", align 1
@.str.31 = private unnamed_addr constant [585 x i8] c"family_list=[%s], feature_settings=[%s], variation_settings=[%s], locale=%s, specified_size=%f, computed_size=%f, adjusted_size=%f, size_adjust=%f, letter_spacing=%f, word_spacing=%f, font_selection_request=[%s], typesetting_features=[%s], orientation=%s, width_variant=%s, variant_caps=%s, is_absolute_size=%s, generic_family=%s, kerning=%s, variant_ligatures=[%s], keyword_size=%u, font_smoothing=%s, text_rendering=%s, synthetic_bold=%s, synthetic_italic=%s, subpixel_positioning=%s, subpixel_ascent_descent=%s, variant_numeric=[%s], variant_east_asian=[%s], font_optical_sizing=%s\00", align 1
@.str.32 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8
@_ZN5blink9FontCache20device_scale_factor_E = external local_unnamed_addr global float, align 4
@_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL15ItalicThresholdEvE17s_italicThreshold = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold = internal global i64 0, align 8
@_ZZN5blinkL14MinWeightValueEvE16s_minWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL14MinWeightValueEvE16s_minWeightValue = internal global i64 0, align 8
@_ZZN5blinkL14MaxWeightValueEvE16s_maxWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL14MaxWeightValueEvE16s_maxWeightValue = internal global i64 0, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@.str.33 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.34 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink15FontDescriptionC1EN3WTF25HashTableDeletedValueTypeE = hidden unnamed_addr alias void (%"class.blink::FontDescription"*, i32), void (%"class.blink::FontDescription"*, i32)* @_ZN5blink15FontDescriptionC2EN3WTF25HashTableDeletedValueTypeE
@_ZN5blink15FontDescriptionC1Ev = hidden unnamed_addr alias void (%"class.blink::FontDescription"*), void (%"class.blink::FontDescription"*)* @_ZN5blink15FontDescriptionC2Ev
@_ZN5blink15FontDescriptionC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::FontDescription"*, %"class.blink::FontDescription"*), void (%"class.blink::FontDescription"*, %"class.blink::FontDescription"*)* @_ZN5blink15FontDescriptionC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription25CreateHashTableEmptyValueEv(%"class.blink::FontDescription"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::FontDescription"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZNK5blink15FontDescription27SizeAdjustedFontDescriptionEf.result to i8*), i64 80, i1 false)
  tail call void @_ZN5blink15FontDescriptionC2Ev(%"class.blink::FontDescription"* %0)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.13* %2) #15
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %3, align 8
  %5 = icmp eq %"class.blink::FontVariationSettings"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %7, i64 -4
  %14 = bitcast %"class.base::RefCounted.12"* %13 to %"class.blink::FontTagValuePair.8"**
  %15 = load %"class.blink::FontTagValuePair.8"*, %"class.blink::FontTagValuePair.8"** %14, align 8
  %16 = icmp eq %"class.blink::FontTagValuePair.8"* %15, null
  %17 = bitcast %"class.blink::FontTagValuePair.8"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %7, i64 -1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #15
  br label %24

24:                                               ; preds = %23, %12
  %25 = bitcast %"class.base::RefCounted.12"* %13 to i8*
  tail call void @free(i8* %25) #15
  br label %26

26:                                               ; preds = %1, %6, %24
  %27 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %27, align 8
  %29 = icmp eq %"class.blink::FontFeatureSettings"* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %28, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #15
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %50

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 -4
  %38 = bitcast %"class.base::RefCounted"* %37 to %"class.blink::FontTagValuePair"**
  %39 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %38, align 8
  %40 = icmp eq %"class.blink::FontTagValuePair"* %39, null
  %41 = bitcast %"class.blink::FontTagValuePair"* %39 to i8*
  br i1 %40, label %48, label %42, !prof !2

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 -1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #15
  br label %48

48:                                               ; preds = %47, %36
  %49 = bitcast %"class.base::RefCounted"* %37 to i8*
  tail call void @free(i8* %49) #15
  br label %50

50:                                               ; preds = %26, %30, %48
  %51 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %51) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescriptionC2EN3WTF25HashTableDeletedValueTypeE(%"class.blink::FontDescription"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %4 = bitcast %"struct.blink::FontDescription::BitFields"* %3 to i64*
  %5 = bitcast %"class.blink::FontDescription"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 72, i1 false)
  store i64 9007199254740992, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescriptionC2Ev(%"class.blink::FontDescription"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 7
  %3 = bitcast %"class.blink::FontDescription"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 52, i1 false)
  store float -1.000000e+00, float* %2, align 4
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 8
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 9
  store float 0.000000e+00, float* %5, align 4
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !4

8:                                                ; preds = %1
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  br label %12

12:                                               ; preds = %1, %8, %11
  %13 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !4

16:                                               ; preds = %12
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  br label %20

20:                                               ; preds = %12, %16, %19
  %21 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28, !prof !4

24:                                               ; preds = %20
  %25 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %28

28:                                               ; preds = %20, %24, %27
  %29 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %30 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 0, i32 0
  store i16 %13, i16* %30, align 2
  %31 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 1, i32 0
  store i16 %21, i16* %31, align 2
  %32 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  store i16 %29, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11, i32 0
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12
  %35 = bitcast %union.anon.20* %34 to [2 x i32]*
  %36 = bitcast %union.anon.20* %34 to i32*
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds [2 x i32], [2 x i32]* %35, i64 0, i64 1
  store i32 0, i32* %37, align 4
  %38 = bitcast %union.anon.20* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = load i8, i8* @_ZN5blink15FontDescription30use_subpixel_text_positioning_E, align 1, !range !5
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 32
  %43 = and i64 %39, -30416887523311616
  %44 = or i64 %42, %43
  %45 = load i32, i32* @_ZN5blink15FontDescription29default_typesetting_features_E, align 4
  %46 = and i32 %45, 7
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 33
  %49 = or i64 %44, %48
  %50 = or i64 %49, 18014398509481984
  store i64 %50, i64* %38, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescriptionC2ERKS0_(%"class.blink::FontDescription"* nocapture, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::SharedFontFamily"* %26, %"class.blink::SharedFontFamily"** %27, align 8
  %28 = icmp eq %"class.blink::SharedFontFamily"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %26, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %30) #15
  br label %31

31:                                               ; preds = %24, %29
  %32 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 1, i32 0
  %33 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  store %"class.blink::FontFeatureSettings"* %33, %"class.blink::FontFeatureSettings"** %34, align 8
  %35 = icmp eq %"class.blink::FontFeatureSettings"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %33, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %37) #15
  br label %38

38:                                               ; preds = %31, %36
  %39 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 2, i32 0
  %40 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  store %"class.blink::FontVariationSettings"* %40, %"class.blink::FontVariationSettings"** %41, align 8
  %42 = icmp eq %"class.blink::FontVariationSettings"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %40, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #15
  br label %45

45:                                               ; preds = %38, %43
  %46 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3, i32 0
  %47 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  store %"class.blink::LayoutLocale"* %47, %"class.blink::LayoutLocale"** %48, align 8
  %49 = icmp eq %"class.blink::LayoutLocale"* %47, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %51) #15
  br label %52

52:                                               ; preds = %45, %50
  %53 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 4
  %54 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %55 = bitcast float* %53 to i8*
  %56 = bitcast float* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::FontDescription"* @_ZN5blink15FontDescriptionaSERKS0_(%"class.blink::FontDescription"* returned, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.13, align 8
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"* %4, %"class.blink::FontFamily"* dereferenceable(16) %5) #15
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 1, i32 0
  %9 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %8, align 8
  %10 = icmp eq %"class.blink::FontFeatureSettings"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %9, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #15
  br label %13

13:                                               ; preds = %2, %11
  %14 = ptrtoint %"class.blink::FontFeatureSettings"* %9 to i64
  %15 = bitcast %class.scoped_refptr.2* %7 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %7, i64 0, i32 0
  %17 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.blink::FontFeatureSettings"* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 -4
  %27 = bitcast %"class.base::RefCounted"* %26 to %"class.blink::FontTagValuePair"**
  %28 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %27, align 8
  %29 = icmp eq %"class.blink::FontTagValuePair"* %28, null
  %30 = bitcast %"class.blink::FontTagValuePair"* %28 to i8*
  br i1 %29, label %37, label %31, !prof !2

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 -1, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #15
  br label %37

37:                                               ; preds = %36, %25
  %38 = bitcast %"class.base::RefCounted"* %26 to i8*
  tail call void @free(i8* %38) #15
  br label %39

39:                                               ; preds = %13, %19, %37
  %40 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 2, i32 0
  %42 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %41, align 8
  %43 = icmp eq %"class.blink::FontVariationSettings"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %42, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %45) #15
  br label %46

46:                                               ; preds = %39, %44
  %47 = ptrtoint %"class.blink::FontVariationSettings"* %42 to i64
  %48 = bitcast %class.scoped_refptr.3* %40 to i64*
  %49 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %40, i64 0, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  store i64 %47, i64* %48, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  br i1 %51, label %72, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %53, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #15
  %55 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %53, i64 -4
  %60 = bitcast %"class.base::RefCounted.12"* %59 to %"class.blink::FontTagValuePair.8"**
  %61 = load %"class.blink::FontTagValuePair.8"*, %"class.blink::FontTagValuePair.8"** %60, align 8
  %62 = icmp eq %"class.blink::FontTagValuePair.8"* %61, null
  %63 = bitcast %"class.blink::FontTagValuePair.8"* %61 to i8*
  br i1 %62, label %70, label %64, !prof !2

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.base::RefCounted.12", %"class.base::RefCounted.12"* %53, i64 -1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %64
  store i32 0, i32* %65, align 4
  br label %69

69:                                               ; preds = %68, %64
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #15
  br label %70

70:                                               ; preds = %69, %58
  %71 = bitcast %"class.base::RefCounted.12"* %59 to i8*
  tail call void @free(i8* %71) #15
  br label %72

72:                                               ; preds = %46, %52, %70
  %73 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3
  %74 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3, i32 0
  %75 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %74, align 8
  %76 = icmp eq %"class.blink::LayoutLocale"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %75, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %78) #15
  br label %79

79:                                               ; preds = %72, %77
  %80 = bitcast %class.scoped_refptr.13* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = bitcast %class.scoped_refptr.13* %73 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %class.scoped_refptr.13* %3 to i64*
  %84 = ptrtoint %"class.blink::LayoutLocale"* %75 to i64
  store i64 %84, i64* %81, align 8
  store i64 %82, i64* %83, align 8
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.13* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  %85 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 4
  %86 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %87 = bitcast float* %85 to i8*
  %88 = bitcast float* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 40, i1 false)
  ret %"class.blink::FontDescription"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"*, %"class.blink::FontFamily"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #15
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.blink::FontFamily"* %0 to i64*
  %26 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %1, i64 0, i32 1, i32 0
  %45 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %44, align 8
  %46 = icmp eq %"class.blink::SharedFontFamily"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %45, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #15
  br label %49

49:                                               ; preds = %42, %47
  %50 = ptrtoint %"class.blink::SharedFontFamily"* %45 to i64
  %51 = bitcast %class.scoped_refptr.1* %43 to i64*
  %52 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %43, i64 0, i32 0
  %53 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.blink::SharedFontFamily"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %53, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %56, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #15
  %58 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %56, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %56, i64 -4
  %63 = bitcast %"class.base::RefCounted.22"* %62 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %63) #15
  %64 = bitcast %"class.base::RefCounted.22"* %62 to i8*
  tail call void @free(i8* %64) #15
  br label %65

65:                                               ; preds = %49, %55, %61
  ret %"class.blink::FontFamily"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15FontDescriptioneqERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN5blinkeqERKNS_10FontFamilyES2_(%"class.blink::FontFamily"* dereferenceable(16) %3, %"class.blink::FontFamily"* dereferenceable(16) %4) #15
  br i1 %5, label %6, label %168

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %8 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3, i32 0
  %10 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutLocale"* %8, %10
  br i1 %11, label %12, label %168

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 4
  %14 = load float, float* %13, align 8
  %15 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %16 = load float, float* %15, align 8
  %17 = fcmp oeq float %14, %16
  br i1 %17, label %18, label %168

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  br i1 %23, label %24, label %168

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 6
  %26 = load float, float* %25, align 8
  %27 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 6
  %28 = load float, float* %27, align 8
  %29 = fcmp oeq float %26, %28
  br i1 %29, label %30, label %168

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 7
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 7
  %34 = load float, float* %33, align 4
  %35 = fcmp oeq float %32, %34
  br i1 %35, label %36, label %168

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 8
  %38 = load float, float* %37, align 8
  %39 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 8
  %40 = load float, float* %39, align 8
  %41 = fcmp oeq float %38, %40
  br i1 %41, label %42, label %168

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 9
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %46 = load float, float* %45, align 4
  %47 = fcmp oeq float %44, %46
  br i1 %47, label %48, label %168

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 0, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 0, i32 0
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, %50
  br i1 %53, label %54, label %168

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 1, i32 0
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 1, i32 0
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, %56
  br i1 %59, label %60, label %168

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 2, i32 0
  %62 = load i16, i16* %61, align 2
  %63 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  %64 = load i16, i16* %63, align 2
  %65 = icmp eq i16 %64, %62
  br i1 %65, label %66, label %168

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12
  %68 = bitcast %union.anon.20* %67 to i32*
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12
  %71 = bitcast %union.anon.20* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %69, %72
  br i1 %73, label %74, label %168

74:                                               ; preds = %66
  %75 = bitcast %union.anon.20* %70 to [2 x i32]*
  %76 = bitcast %union.anon.20* %67 to [2 x i32]*
  %77 = getelementptr inbounds [2 x i32], [2 x i32]* %76, i64 0, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds [2 x i32], [2 x i32]* %75, i64 0, i64 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %78, %80
  br i1 %81, label %82, label %168

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %84 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 1, i32 0
  %86 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %85, align 8
  %87 = icmp eq %"class.blink::FontFeatureSettings"* %84, %86
  br i1 %87, label %125, label %88

88:                                               ; preds = %82
  %89 = icmp ne %"class.blink::FontFeatureSettings"* %84, null
  %90 = icmp ne %"class.blink::FontFeatureSettings"* %86, null
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %168

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %98, label %168

98:                                               ; preds = %92
  %99 = icmp eq i32 %94, 0
  br i1 %99, label %125, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %103, align 8
  %105 = zext i32 %94 to i64
  %106 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %102, i64 %105
  br label %107

107:                                              ; preds = %121, %100
  %108 = phi %"class.blink::FontTagValuePair"* [ %123, %121 ], [ %104, %100 ]
  %109 = phi %"class.blink::FontTagValuePair"* [ %122, %121 ], [ %102, %100 ]
  %110 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %108, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %168

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %109, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %108, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %168

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %109, i64 1
  %123 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %108, i64 1
  %124 = icmp eq %"class.blink::FontTagValuePair"* %122, %106
  br i1 %124, label %125, label %107

125:                                              ; preds = %121, %98, %82
  %126 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %127 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 2, i32 0
  %129 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %128, align 8
  %130 = icmp eq %"class.blink::FontVariationSettings"* %127, %129
  br i1 %130, label %168, label %131

131:                                              ; preds = %125
  %132 = icmp ne %"class.blink::FontVariationSettings"* %127, null
  %133 = icmp ne %"class.blink::FontVariationSettings"* %129, null
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %168

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %141, label %168

141:                                              ; preds = %135
  %142 = icmp eq i32 %137, 0
  br i1 %142, label %168, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::FontTagValuePair.8"*, %"class.blink::FontTagValuePair.8"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"class.blink::FontTagValuePair.8"*, %"class.blink::FontTagValuePair.8"** %146, align 8
  %148 = zext i32 %137 to i64
  %149 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %145, i64 %148
  br label %150

150:                                              ; preds = %164, %143
  %151 = phi %"class.blink::FontTagValuePair.8"* [ %166, %164 ], [ %147, %143 ]
  %152 = phi %"class.blink::FontTagValuePair.8"* [ %165, %164 ], [ %145, %143 ]
  %153 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %151, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %168

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %152, i64 0, i32 1
  %160 = load float, float* %159, align 4
  %161 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %151, i64 0, i32 1
  %162 = load float, float* %161, align 4
  %163 = fcmp oeq float %160, %162
  br i1 %163, label %164, label %168

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %152, i64 1
  %166 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %151, i64 1
  %167 = icmp eq %"class.blink::FontTagValuePair.8"* %165, %149
  br i1 %167, label %168, label %150

168:                                              ; preds = %107, %115, %164, %158, %150, %92, %48, %54, %141, %135, %125, %131, %88, %74, %66, %60, %42, %36, %30, %24, %18, %12, %6, %2
  %169 = phi i1 [ false, %88 ], [ false, %74 ], [ false, %66 ], [ false, %60 ], [ false, %42 ], [ false, %36 ], [ false, %30 ], [ false, %24 ], [ false, %18 ], [ false, %12 ], [ false, %6 ], [ false, %2 ], [ true, %125 ], [ false, %131 ], [ false, %135 ], [ true, %141 ], [ false, %54 ], [ false, %48 ], [ false, %92 ], [ false, %150 ], [ true, %164 ], [ false, %158 ], [ false, %115 ], [ false, %107 ]
  ret i1 %169
}

declare zeroext i1 @_ZN5blinkeqERKNS_10FontFamilyES2_(%"class.blink::FontFamily"* dereferenceable(16), %"class.blink::FontFamily"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i16 @_ZN5blink15FontDescription13LighterWeightENS_18FontSelectionValueE(i16) local_unnamed_addr #4 align 2 {
  %2 = icmp slt i16 %0, 400
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = icmp slt i16 %0, 2200
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = icmp slt i16 %0, 3000
  %7 = select i1 %6, i16 1600, i16 2800
  ret i16 %7

8:                                                ; preds = %3, %1
  %9 = phi i16 [ %0, %1 ], [ 400, %3 ]
  ret i16 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i16 @_ZN5blink15FontDescription12BolderWeightENS_18FontSelectionValueE(i16) local_unnamed_addr #4 align 2 {
  %2 = icmp slt i16 %0, 1400
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = icmp slt i16 %0, 2200
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i16 %0, 3600
  %7 = select i1 %6, i16 %0, i16 3600
  ret i16 %7

8:                                                ; preds = %3, %1
  %9 = phi i16 [ 1600, %1 ], [ 2800, %3 ]
  ret i16 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink15FontDescription10LargerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  %5 = fmul double %4, 1.200000e+00
  %6 = fptrunc double %5 to float
  %7 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, 16
  %10 = bitcast float %6 to i32
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i8 %9 to i64
  %14 = or i64 %12, %13
  ret i64 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink15FontDescription11SmallerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  %5 = fdiv double %4, 1.200000e+00
  %6 = fptrunc double %5 to float
  %7 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, 16
  %10 = bitcast float %6 to i32
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i8 %9 to i64
  %14 = or i64 %12, %13
  ret i64 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10
  %3 = bitcast %"struct.blink::FontSelectionRequest"* %2 to i48*
  %4 = load i48, i48* %3, align 8
  ret i48 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15FontDescription19GetVariantLigaturesEv(%"class.blink::FontDescription"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %3 = bitcast %"struct.blink::FontDescription::BitFields"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 13
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 255
  %8 = or i32 %7, -1431655936
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription14SetVariantCapsENS0_15FontVariantCapsE(%"class.blink::FontDescription"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %4 = bitcast %"struct.blink::FontDescription::BitFields"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = shl i32 %1, 4
  %7 = and i32 %6, 112
  %8 = zext i32 %7 to i64
  %9 = and i64 %5, -113
  %10 = or i64 %9, %8
  store i64 %10, i64* %4, align 8
  tail call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = load i32, i32* @_ZN5blink15FontDescription29default_typesetting_features_E, align 4
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %4 = bitcast %"struct.blink::FontDescription::BitFields"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i32 %2, 7
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 33
  %9 = and i64 %5, -60129542145
  %10 = or i64 %8, %9
  store i64 %10, i64* %4, align 8
  %11 = lshr i64 %5, 27
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 3
  switch i32 %13, label %20 [
    i32 2, label %16
    i32 1, label %14
    i32 3, label %16
  ]

14:                                               ; preds = %1
  %15 = and i64 %10, -25769803777
  br label %18

16:                                               ; preds = %1, %1
  %17 = or i64 %10, 25769803776
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %17, %16 ], [ %15, %14 ]
  store i64 %19, i64* %4, align 8
  br label %20

20:                                               ; preds = %18, %1
  %21 = phi i64 [ %10, %1 ], [ %19, %18 ]
  %22 = lshr i64 %21, 11
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 3
  switch i32 %24, label %31 [
    i32 2, label %25
    i32 1, label %27
  ]

25:                                               ; preds = %20
  %26 = and i64 %21, -8589934593
  br label %29

27:                                               ; preds = %20
  %28 = or i64 %21, 8589934592
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i64 [ %28, %27 ], [ %26, %25 ]
  store i64 %30, i64* %4, align 8
  br label %31

31:                                               ; preds = %29, %20
  %32 = phi i64 [ %21, %20 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 8
  %34 = load float, float* %33, align 8
  %35 = fcmp oeq float %34, 0.000000e+00
  br i1 %35, label %36, label %58

36:                                               ; preds = %31
  %37 = lshr i64 %32, 13
  %38 = trunc i64 %37 to i32
  %39 = and i32 %38, 3
  switch i32 %39, label %46 [
    i32 1, label %40
    i32 2, label %42
  ]

40:                                               ; preds = %36
  %41 = and i64 %32, -17179869185
  br label %44

42:                                               ; preds = %36
  %43 = or i64 %32, 17179869184
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %43, %42 ], [ %41, %40 ]
  store i64 %45, i64* %4, align 8
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi i64 [ %32, %36 ], [ %45, %44 ]
  %48 = and i64 %47, 98304
  %49 = icmp eq i64 %48, 65536
  %50 = and i64 %47, 393216
  %51 = icmp eq i64 %50, 262144
  %52 = or i1 %49, %51
  %53 = and i64 %47, 1572864
  %54 = icmp eq i64 %53, 1048576
  %55 = or i1 %54, %52
  br i1 %55, label %56, label %58

56:                                               ; preds = %46
  %57 = or i64 %47, 17179869184
  store i64 %57, i64* %4, align 8
  br label %58

58:                                               ; preds = %46, %56, %31
  %59 = phi i64 [ %47, %46 ], [ %57, %56 ], [ %32, %31 ]
  %60 = and i64 %59, 112
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = or i64 %59, 34359738368
  store i64 %63, i64* %4, align 8
  br label %64

64:                                               ; preds = %58, %62
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription19SetVariantEastAsianENS_20FontVariantEastAsianE(%"class.blink::FontDescription"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %4 = bitcast %"struct.blink::FontDescription::BitFields"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i32 %1, 63
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 44
  %9 = and i64 %5, -1108307720798209
  %10 = or i64 %9, %8
  store i64 %10, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription19SetVariantLigaturesERKNS0_16VariantLigaturesE(%"class.blink::FontDescription"* nocapture, %"struct.blink::FontDescription::VariantLigatures"* nocapture readonly dereferenceable(4)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.blink::FontDescription::VariantLigatures", %"struct.blink::FontDescription::VariantLigatures"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %6 = bitcast %"struct.blink::FontDescription::BitFields"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i8 %4, 3
  %9 = zext i8 %8 to i64
  %10 = shl nuw nsw i64 %9, 13
  %11 = and i64 %7, -24577
  %12 = or i64 %10, %11
  store i64 %12, i64* %6, align 8
  %13 = load i8, i8* %3, align 4
  %14 = lshr i8 %13, 2
  %15 = and i8 %14, 3
  %16 = zext i8 %15 to i64
  %17 = shl nuw nsw i64 %16, 15
  %18 = and i64 %12, -98305
  %19 = or i64 %17, %18
  store i64 %19, i64* %6, align 8
  %20 = load i8, i8* %3, align 4
  %21 = lshr i8 %20, 4
  %22 = and i8 %21, 3
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 17
  %25 = and i64 %19, -393217
  %26 = or i64 %25, %24
  store i64 %26, i64* %6, align 8
  %27 = load i8, i8* %3, align 4
  %28 = lshr i8 %27, 6
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 19
  %31 = and i64 %26, -1572865
  %32 = or i64 %31, %30
  store i64 %32, i64* %6, align 8
  tail call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription17SetVariantNumericERKNS_18FontVariantNumericE(%"class.blink::FontDescription"* nocapture, %"class.blink::FontVariantNumeric"* nocapture readonly dereferenceable(4)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontVariantNumeric", %"class.blink::FontVariantNumeric"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %6 = bitcast %"struct.blink::FontDescription::BitFields"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i32 %4, 255
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 36
  %11 = and i64 %7, -17523466567681
  %12 = or i64 %10, %11
  store i64 %12, i64* %6, align 8
  tail call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %0)
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK5blink15FontDescription17EffectiveFontSizeEv(%"class.blink::FontDescription"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 7
  %3 = load float, float* %2, align 4
  %4 = fcmp une float %3, -1.000000e+00
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %7 = bitcast %"struct.blink::FontDescription::BitFields"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 4503599627370496
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 6
  br label %15

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi float* [ %12, %11 ], [ %14, %13 ]
  %17 = load float, float* %16, align 4
  %18 = fmul float %17, 1.000000e+02
  %19 = tail call float @llvm.floor.f32(float %18)
  %20 = fdiv float %19, 1.000000e+02
  ret float %20
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15FontDescription27SizeAdjustedFontDescriptionEf(%"class.blink::FontDescription"* noalias nocapture sret, %"class.blink::FontDescription"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontDescription", align 8
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 7
  %6 = load float, float* %5, align 4
  %7 = fcmp une float %6, -1.000000e+00
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink15FontDescriptionC2ERKS0_(%"class.blink::FontDescription"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  br label %23

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::FontDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZNK5blink15FontDescription27SizeAdjustedFontDescriptionEf.result to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC2ERKS0_(%"class.blink::FontDescription"* nonnull %4, %"class.blink::FontDescription"* dereferenceable(80) %1)
  %11 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %2
  %14 = fcmp ult float %13, 0x47EFFFFFE0000000
  %15 = fcmp ole float %13, 0xC7EFFFFFE0000000
  %16 = select i1 %15, float 0xC7EFFFFFE0000000, float %13
  %17 = select i1 %14, float %16, float 0x47EFFFFFE0000000
  %18 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 6
  store float %17, float* %18, align 8
  %19 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 12, i32 0
  %20 = bitcast %"struct.blink::FontDescription::BitFields"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = or i64 %21, 4503599627370496
  store i64 %22, i64* %20, align 8
  call void @_ZN5blink15FontDescriptionC2ERKS0_(%"class.blink::FontDescription"* %0, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4)
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #15
  br label %23

23:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* noalias sret, %"class.blink::FontDescription"*, %"class.blink::FontFaceCreationParams"* nocapture readonly dereferenceable(48), i1 zeroext, %"struct.blink::FontSelectionRequest"* nocapture readnone dereferenceable(6)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FontFaceCreationParams", align 8
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %8 = bitcast %"struct.blink::FontDescription::BitFields"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 44
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 128
  %13 = lshr i64 %9, 24
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 64
  %16 = or i32 %12, %15
  %17 = and i32 %14, 32
  %18 = or i32 %16, %17
  %19 = and i32 %14, 24
  %20 = or i32 %18, %19
  %21 = trunc i64 %9 to i32
  %22 = shl i32 %21, 1
  %23 = and i32 %22, 6
  %24 = or i32 %20, %23
  %25 = lshr i64 %9, 32
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 1
  %28 = or i32 %24, %27
  %29 = load i32, i32* bitcast (float* @_ZN5blink9FontCache20device_scale_factor_E to i32*), align 4
  %30 = bitcast %"struct.blink::FontCacheKey"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (<{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.3, i8, [7 x i8] }>* @__const._ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE.cache_key to i8*), i64 80, i1 false)
  %31 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %31, align 8
  %34 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %5
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #15
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #15
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %5
  %56 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 2
  %57 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #15
  br label %70

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %56, i8* %67, i64 %69) #15
  br label %70

70:                                               ; preds = %62, %65
  %71 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 3
  %72 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %2, i64 0, i32 3
  %73 = bitcast i32* %72 to i64*
  %74 = bitcast i32* %71 to i64*
  %75 = load i64, i64* %73, align 8
  store i64 %75, i64* %74, align 8
  %76 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 7
  %77 = load float, float* %76, align 4
  %78 = fcmp une float %77, -1.000000e+00
  br i1 %78, label %83, label %79

79:                                               ; preds = %70
  %80 = load i64, i64* %8, align 8
  %81 = and i64 %80, 4503599627370496
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79, %70
  %84 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 6
  br label %87

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  br label %87

87:                                               ; preds = %83, %85
  %88 = phi float* [ %84, %83 ], [ %86, %85 ]
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, 1.000000e+02
  %91 = call float @llvm.floor.f32(float %90) #15
  %92 = fdiv float %91, 1.000000e+02
  %93 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10
  %94 = call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* %93) #15
  %95 = shl i32 %94, 9
  %96 = or i32 %28, %95
  %97 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 2, i32 0
  %98 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %97, align 8
  %99 = icmp eq %"class.blink::FontVariationSettings"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %98, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %101) #15
  br label %102

102:                                              ; preds = %87, %100
  %103 = ptrtoint %"class.blink::FontVariationSettings"* %98 to i64
  %104 = zext i1 %3 to i8
  %105 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0, i32 0
  %106 = load i32, i32* %31, align 8
  store i32 %106, i32* %105, align 8
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %108 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %108, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #15
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !3

124:                                              ; preds = %115
  call void @llvm.trap() #15
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %125, %110, %102
  %128 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0, i32 2
  %129 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  %135 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 24, i1 false) #15
  br label %142

136:                                              ; preds = %127
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %128, i8* %138, i64 %140) #15
  %141 = load i8, i8* %130, align 1
  br label %142

142:                                              ; preds = %133, %136
  %143 = phi i8 [ %131, %133 ], [ %141, %136 ]
  %144 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0, i32 3
  %145 = bitcast i32* %144 to i64*
  %146 = load i64, i64* %74, align 8
  store i64 %146, i64* %145, align 8
  %147 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %148 = fmul float %92, 1.000000e+02
  %149 = fptoui float %148 to i32
  store i32 %149, i32* %147, align 8
  %150 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  store i32 %96, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %152 = bitcast float* %151 to i32*
  store i32 %29, i32* %152, align 8
  %153 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5
  %154 = bitcast %class.scoped_refptr.3* %153 to i64*
  store i64 %103, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  store i8 %104, i8* %155, align 8
  %156 = icmp slt i8 %143, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %142
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #16
  br label %160

160:                                              ; preds = %157, %142
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #15
  br label %176

176:                                              ; preds = %160, %172, %175
  ret void
}

declare i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FontDescription29SetDefaultTypesettingFeaturesEj(i32) local_unnamed_addr #9 align 2 {
  store i32 %0, i32* @_ZN5blink15FontDescription29default_typesetting_features_E, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink15FontDescription26DefaultTypesettingFeaturesEv() local_unnamed_addr #5 align 2 {
  %1 = load i32, i32* @_ZN5blink15FontDescription29default_typesetting_features_E, align 4
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15FontDescription26StyleHashWithoutFamilyListEv(%"class.blink::FontDescription"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %2, align 8
  %4 = icmp eq %"class.blink::FontFeatureSettings"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %3, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i32 [ 0, %9 ], [ %24, %11 ]
  %13 = phi i32 [ 0, %9 ], [ %23, %11 ]
  %14 = tail call dereferenceable(8) %"class.blink::FontTagValuePair"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %12) #15
  %15 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = mul i32 %13, 33
  %18 = add i32 %16, %17
  %19 = tail call dereferenceable(8) %"class.blink::FontTagValuePair"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %12) #15
  %20 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = mul i32 %18, 33
  %23 = add i32 %22, %21
  %24 = add nuw i32 %12, 1
  %25 = icmp eq i32 %24, %7
  br i1 %25, label %26, label %11

26:                                               ; preds = %11, %5, %1
  %27 = phi i32 [ 0, %1 ], [ 0, %5 ], [ %23, %11 ]
  %28 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %29 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %28, align 8
  %30 = icmp eq %"class.blink::FontVariationSettings"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = tail call i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"* nonnull %29) #15
  %33 = mul i32 %27, 33
  %34 = add i32 %32, %33
  br label %35

35:                                               ; preds = %26, %31
  %36 = phi i32 [ %27, %26 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %38 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutLocale"* %38, null
  br i1 %39, label %103, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %47 = bitcast %"class.WTF::StringImpl"* %46 to i8*
  %48 = bitcast %"class.WTF::StringImpl"* %46 to i16*
  br label %49

49:                                               ; preds = %40, %89
  %50 = phi i64 [ 0, %40 ], [ %93, %89 ]
  %51 = phi i16 [ 0, %40 ], [ %90, %89 ]
  %52 = phi i8 [ 0, %40 ], [ %91, %89 ]
  %53 = phi i32 [ -1640531527, %40 ], [ %92, %89 ]
  br i1 %43, label %56, label %54

54:                                               ; preds = %49
  %55 = load i32, i32* %44, align 4
  br label %56

56:                                               ; preds = %49, %54
  %57 = phi i32 [ %55, %54 ], [ 0, %49 ]
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %50, %58
  br i1 %59, label %60, label %94

60:                                               ; preds = %56
  br i1 %43, label %76, label %61

61:                                               ; preds = %60
  %62 = load i32, i32* %44, align 4
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %50, %63
  br i1 %64, label %65, label %76

65:                                               ; preds = %61
  %66 = load atomic i32, i32* %45 monotonic, align 4
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds i8, i8* %47, i64 %50
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  br label %76

73:                                               ; preds = %65
  %74 = getelementptr inbounds i16, i16* %48, i64 %50
  %75 = load i16, i16* %74, align 2
  br label %76

76:                                               ; preds = %60, %61, %69, %73
  %77 = phi i16 [ 0, %61 ], [ 0, %60 ], [ %72, %69 ], [ %75, %73 ]
  %78 = icmp eq i8 %52, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76
  %80 = zext i16 %51 to i32
  %81 = add i32 %53, %80
  %82 = shl i32 %81, 16
  %83 = zext i16 %77 to i32
  %84 = shl nuw nsw i32 %83, 11
  %85 = xor i32 %82, %81
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 11
  %88 = add i32 %87, %86
  br label %89

89:                                               ; preds = %76, %79
  %90 = phi i16 [ %51, %79 ], [ %77, %76 ]
  %91 = phi i8 [ 0, %79 ], [ 1, %76 ]
  %92 = phi i32 [ %88, %79 ], [ %53, %76 ]
  %93 = add nuw nsw i64 %50, 1
  br label %49

94:                                               ; preds = %56
  %95 = icmp eq i8 %52, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %94
  %97 = zext i16 %51 to i32
  %98 = add i32 %53, %97
  %99 = shl i32 %98, 11
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 17
  %102 = add i32 %101, %100
  br label %103

103:                                              ; preds = %35, %94, %96
  %104 = phi i32 [ %102, %96 ], [ %53, %94 ], [ -1640531527, %35 ]
  %105 = shl i32 %104, 3
  %106 = xor i32 %105, %104
  %107 = lshr i32 %106, 5
  %108 = add i32 %107, %106
  %109 = shl i32 %108, 2
  %110 = xor i32 %109, %108
  %111 = lshr i32 %110, 15
  %112 = add i32 %111, %110
  %113 = shl i32 %112, 10
  %114 = xor i32 %113, %112
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, i32 -2147483648, i32 %114
  %117 = mul i32 %36, 33
  %118 = add i32 %116, %117
  %119 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 4
  %120 = load float, float* %119, align 8
  %121 = fcmp oeq float %120, 0.000000e+00
  %122 = select i1 %121, float 0.000000e+00, float %120, !prof !3
  %123 = bitcast float %122 to i32
  %124 = shl i32 %123, 15
  %125 = xor i32 %124, -1
  %126 = add i32 %125, %123
  %127 = lshr i32 %126, 10
  %128 = xor i32 %127, %126
  %129 = mul i32 %128, 9
  %130 = lshr i32 %129, 6
  %131 = xor i32 %130, %129
  %132 = shl i32 %131, 11
  %133 = xor i32 %132, -1
  %134 = add i32 %131, %133
  %135 = lshr i32 %134, 16
  %136 = xor i32 %135, %134
  %137 = mul i32 %118, 33
  %138 = add i32 %136, %137
  %139 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  %140 = load float, float* %139, align 4
  %141 = fcmp oeq float %140, 0.000000e+00
  %142 = select i1 %141, float 0.000000e+00, float %140, !prof !3
  %143 = bitcast float %142 to i32
  %144 = shl i32 %143, 15
  %145 = xor i32 %144, -1
  %146 = add i32 %145, %143
  %147 = lshr i32 %146, 10
  %148 = xor i32 %147, %146
  %149 = mul i32 %148, 9
  %150 = lshr i32 %149, 6
  %151 = xor i32 %150, %149
  %152 = shl i32 %151, 11
  %153 = xor i32 %152, -1
  %154 = add i32 %151, %153
  %155 = lshr i32 %154, 16
  %156 = xor i32 %155, %154
  %157 = mul i32 %138, 33
  %158 = add i32 %157, %156
  %159 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 6
  %160 = load float, float* %159, align 8
  %161 = fcmp oeq float %160, 0.000000e+00
  %162 = select i1 %161, float 0.000000e+00, float %160, !prof !3
  %163 = bitcast float %162 to i32
  %164 = shl i32 %163, 15
  %165 = xor i32 %164, -1
  %166 = add i32 %165, %163
  %167 = lshr i32 %166, 10
  %168 = xor i32 %167, %166
  %169 = mul i32 %168, 9
  %170 = lshr i32 %169, 6
  %171 = xor i32 %170, %169
  %172 = shl i32 %171, 11
  %173 = xor i32 %172, -1
  %174 = add i32 %171, %173
  %175 = lshr i32 %174, 16
  %176 = xor i32 %175, %174
  %177 = mul i32 %158, 33
  %178 = add i32 %177, %176
  %179 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 7
  %180 = load float, float* %179, align 4
  %181 = fcmp oeq float %180, 0.000000e+00
  %182 = select i1 %181, float 0.000000e+00, float %180, !prof !3
  %183 = bitcast float %182 to i32
  %184 = shl i32 %183, 15
  %185 = xor i32 %184, -1
  %186 = add i32 %185, %183
  %187 = lshr i32 %186, 10
  %188 = xor i32 %187, %186
  %189 = mul i32 %188, 9
  %190 = lshr i32 %189, 6
  %191 = xor i32 %190, %189
  %192 = shl i32 %191, 11
  %193 = xor i32 %192, -1
  %194 = add i32 %191, %193
  %195 = lshr i32 %194, 16
  %196 = xor i32 %195, %194
  %197 = mul i32 %178, 33
  %198 = add i32 %197, %196
  %199 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 8
  %200 = load float, float* %199, align 8
  %201 = fcmp oeq float %200, 0.000000e+00
  %202 = select i1 %201, float 0.000000e+00, float %200, !prof !3
  %203 = bitcast float %202 to i32
  %204 = shl i32 %203, 15
  %205 = xor i32 %204, -1
  %206 = add i32 %205, %203
  %207 = lshr i32 %206, 10
  %208 = xor i32 %207, %206
  %209 = mul i32 %208, 9
  %210 = lshr i32 %209, 6
  %211 = xor i32 %210, %209
  %212 = shl i32 %211, 11
  %213 = xor i32 %212, -1
  %214 = add i32 %211, %213
  %215 = lshr i32 %214, 16
  %216 = xor i32 %215, %214
  %217 = mul i32 %198, 33
  %218 = add i32 %217, %216
  %219 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 9
  %220 = load float, float* %219, align 4
  %221 = fcmp oeq float %220, 0.000000e+00
  %222 = select i1 %221, float 0.000000e+00, float %220, !prof !3
  %223 = bitcast float %222 to i32
  %224 = shl i32 %223, 15
  %225 = xor i32 %224, -1
  %226 = add i32 %225, %223
  %227 = lshr i32 %226, 10
  %228 = xor i32 %227, %226
  %229 = mul i32 %228, 9
  %230 = lshr i32 %229, 6
  %231 = xor i32 %230, %229
  %232 = shl i32 %231, 11
  %233 = xor i32 %232, -1
  %234 = add i32 %231, %233
  %235 = lshr i32 %234, 16
  %236 = xor i32 %235, %234
  %237 = mul i32 %218, 33
  %238 = add i32 %237, %236
  %239 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12
  %240 = bitcast %union.anon.20* %239 to [2 x i32]*
  %241 = bitcast %union.anon.20* %239 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = mul i32 %238, 33
  %244 = add i32 %243, %242
  %245 = getelementptr inbounds [2 x i32], [2 x i32]* %240, i64 0, i64 1
  %246 = load i32, i32* %245, align 4
  %247 = mul i32 %244, 33
  %248 = add i32 %247, %246
  %249 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10
  %250 = tail call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* %249) #15
  %251 = mul i32 %248, 33
  %252 = add i32 %251, %250
  ret i32 %252
}

declare i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15FontDescription7GetHashEv(%"class.blink::FontDescription"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink15FontDescription26StyleHashWithoutFamilyListEv(%"class.blink::FontDescription"* %0)
  %3 = icmp eq %"class.blink::FontDescription"* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  br label %8

6:                                                ; preds = %24, %1
  %7 = phi i32 [ %2, %1 ], [ %25, %24 ]
  ret i32 %7

8:                                                ; preds = %4, %24
  %9 = phi %"class.blink::FontFamily"* [ %28, %24 ], [ %5, %4 ]
  %10 = phi i32 [ %25, %24 ], [ %2, %4 ]
  %11 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = mul i32 %10, 33
  %23 = add i32 %21, %22
  br label %24

24:                                               ; preds = %8, %14, %18
  %25 = phi i32 [ %10, %14 ], [ %23, %18 ], [ %10, %8 ]
  %26 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %9, i64 0, i32 1, i32 0
  %27 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %27, i64 0, i32 0
  %29 = icmp eq %"class.blink::SharedFontFamily"* %27, null
  br i1 %29, label %6, label %8
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription14SetOrientationENS_15FontOrientationE(%"class.blink::FontDescription"* nocapture, i32) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %4 = bitcast %"struct.blink::FontDescription::BitFields"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i32 %1, 3
  %7 = zext i32 %6 to i64
  %8 = and i64 %5, -4
  %9 = or i64 %8, %7
  store i64 %9, i64* %4, align 8
  %10 = and i64 %7, 2
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = and i64 %9, -2147483649
  store i64 %13, i64* %4, align 8
  br label %30

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = lshr i16 %16, 15
  %18 = zext i16 %17 to i64
  %19 = shl nuw nsw i64 %18, 31
  %20 = and i64 %9, -2147483649
  %21 = or i64 %19, %20
  store i64 %21, i64* %4, align 8
  %22 = icmp eq i16 %17, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %14
  %24 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32, !prof !4

26:                                               ; preds = %23
  %27 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %32

30:                                               ; preds = %14, %12
  %31 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11
  br label %32

32:                                               ; preds = %23, %26, %29, %30
  %33 = phi %"class.blink::FontSelectionValue"* [ %31, %30 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %23 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %26 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %29 ]
  %34 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  %36 = load i16, i16* %34, align 2
  store i16 %36, i16* %35, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription22UpdateSyntheticObliqueEv(%"class.blink::FontDescription"* nocapture) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %3 = bitcast %"struct.blink::FontDescription::BitFields"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 2
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = and i64 %4, -2147483649
  store i64 %8, i64* %3, align 8
  br label %25

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = lshr i16 %11, 15
  %13 = zext i16 %12 to i64
  %14 = shl nuw nsw i64 %13, 31
  %15 = and i64 %4, -2147483649
  %16 = or i64 %14, %15
  store i64 %16, i64* %3, align 8
  %17 = icmp eq i16 %12, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %9
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27, !prof !4

21:                                               ; preds = %18
  %22 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %27

25:                                               ; preds = %7, %9
  %26 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11
  br label %27

27:                                               ; preds = %24, %21, %18, %25
  %28 = phi %"class.blink::FontSelectionValue"* [ %26, %25 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %18 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %21 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %24 ]
  %29 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  %31 = load i16, i16* %29, align 2
  store i16 %31, i16* %30, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* nocapture, i16) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  store i16 %1, i16* %3, align 4
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11, i32 0
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %6 = bitcast %"struct.blink::FontDescription::BitFields"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = and i64 %7, -2147483649
  store i64 %11, i64* %6, align 8
  br label %26

12:                                               ; preds = %2
  %13 = lshr i16 %1, 15
  %14 = zext i16 %13 to i64
  %15 = shl nuw nsw i64 %14, 31
  %16 = and i64 %7, -2147483649
  %17 = or i64 %16, %15
  store i64 %17, i64* %6, align 8
  %18 = icmp eq i16 %13, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !4

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %28

26:                                               ; preds = %12, %10
  %27 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11
  br label %28

28:                                               ; preds = %19, %22, %25, %26
  %29 = phi %"class.blink::FontSelectionValue"* [ %27, %26 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %19 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %22 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %25 ]
  %30 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %29, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  store i16 %31, i16* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15FontDescription13SkiaFontStyleEv(%"class.blink::FontDescription"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 1, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !4

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  store i16 200, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  br label %10

10:                                               ; preds = %1, %6, %9
  %11 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  %12 = icmp sgt i16 %3, %11
  %13 = select i1 %12, i32 5, i32 1
  %14 = load i16, i16* %2, align 2
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21, !prof !4

17:                                               ; preds = %10
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  store i16 250, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  br label %21

21:                                               ; preds = %10, %17, %20
  %22 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  %23 = icmp sgt i16 %14, %22
  %24 = select i1 %23, i32 %13, i32 2
  %25 = load i16, i16* %2, align 2
  %26 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i8*) acquire, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32, !prof !4

28:                                               ; preds = %21
  %29 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  store i16 300, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  br label %32

32:                                               ; preds = %21, %28, %31
  %33 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  %34 = icmp sgt i16 %25, %33
  %35 = select i1 %34, i32 %24, i32 3
  %36 = load i16, i16* %2, align 2
  %37 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i8*) acquire, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43, !prof !4

39:                                               ; preds = %32
  %40 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  store i16 350, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  br label %43

43:                                               ; preds = %32, %39, %42
  %44 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  %45 = icmp sgt i16 %36, %44
  %46 = select i1 %45, i32 %35, i32 4
  %47 = load i16, i16* %2, align 2
  %48 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i8*) acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54, !prof !4

50:                                               ; preds = %43
  %51 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  store i16 450, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  br label %54

54:                                               ; preds = %43, %50, %53
  %55 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  %56 = icmp slt i16 %47, %55
  %57 = select i1 %56, i32 %46, i32 6
  %58 = load i16, i16* %2, align 2
  %59 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i8*) acquire, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %65, !prof !4

61:                                               ; preds = %54
  %62 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  store i16 500, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  br label %65

65:                                               ; preds = %54, %61, %64
  %66 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  %67 = icmp slt i16 %58, %66
  %68 = select i1 %67, i32 %57, i32 7
  %69 = load i16, i16* %2, align 2
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %76, !prof !4

72:                                               ; preds = %65
  %73 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  store i16 600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  br label %76

76:                                               ; preds = %65, %72, %75
  %77 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  %78 = icmp slt i16 %69, %77
  %79 = select i1 %78, i32 %68, i32 8
  %80 = load i16, i16* %2, align 2
  %81 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i8*) acquire, align 8
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %87, !prof !4

83:                                               ; preds = %76
  %84 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %83
  store i16 800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  br label %87

87:                                               ; preds = %76, %83, %86
  %88 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  %89 = icmp slt i16 %80, %88
  %90 = select i1 %89, i32 %79, i32 9
  %91 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  %92 = load i16, i16* %91, align 4
  %93 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %99, !prof !4

95:                                               ; preds = %87
  %96 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %99

99:                                               ; preds = %87, %95, %98
  %100 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %101 = icmp sgt i16 %92, %100
  br i1 %101, label %102, label %113

102:                                              ; preds = %99
  %103 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold to i8*) acquire, align 8
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %109, !prof !4

105:                                              ; preds = %102
  %106 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold) #15
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15ItalicThresholdEvE17s_italicThreshold to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold) #15
  br label %109

109:                                              ; preds = %102, %105, %108
  %110 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15ItalicThresholdEvE17s_italicThreshold to i16*), align 2
  %111 = icmp sle i16 %92, %110
  %112 = zext i1 %111 to i32
  br label %113

113:                                              ; preds = %109, %99
  %114 = phi i32 [ 0, %99 ], [ %112, %109 ]
  %115 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold to i8*) acquire, align 8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %121, !prof !4

117:                                              ; preds = %113
  %118 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold) #15
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15ItalicThresholdEvE17s_italicThreshold to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15ItalicThresholdEvE17s_italicThreshold) #15
  br label %121

121:                                              ; preds = %113, %117, %120
  %122 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15ItalicThresholdEvE17s_italicThreshold to i16*), align 2
  %123 = icmp sgt i16 %92, %122
  %124 = select i1 %123, i32 2, i32 %114
  %125 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load i16, i16* %125, align 8
  %127 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL14MinWeightValueEvE16s_minWeightValue to i8*) acquire, align 8
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %133, !prof !4

129:                                              ; preds = %121
  %130 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL14MinWeightValueEvE16s_minWeightValue) #15
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  store i16 4, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14MinWeightValueEvE16s_minWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL14MinWeightValueEvE16s_minWeightValue) #15
  br label %133

133:                                              ; preds = %121, %129, %132
  %134 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14MinWeightValueEvE16s_minWeightValue to i16*), align 2
  %135 = icmp slt i16 %126, %134
  br i1 %135, label %155, label %136

136:                                              ; preds = %133
  %137 = load i16, i16* %125, align 8
  %138 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL14MaxWeightValueEvE16s_maxWeightValue to i8*) acquire, align 8
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %144, !prof !4

140:                                              ; preds = %136
  %141 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL14MaxWeightValueEvE16s_maxWeightValue) #15
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  store i16 4000, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14MaxWeightValueEvE16s_maxWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL14MaxWeightValueEvE16s_maxWeightValue) #15
  br label %144

144:                                              ; preds = %136, %140, %143
  %145 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL14MaxWeightValueEvE16s_maxWeightValue to i16*), align 2
  %146 = icmp sgt i16 %137, %145
  br i1 %146, label %155, label %147

147:                                              ; preds = %144
  %148 = load i16, i16* %125, align 8
  %149 = sitofp i16 %148 to float
  %150 = fmul float %149, 2.500000e-01
  %151 = fptosi float %150 to i32
  %152 = icmp slt i32 %151, 1000
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = icmp sgt i32 %151, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %144, %133, %147, %153
  %156 = phi i32 [ %151, %153 ], [ 400, %133 ], [ 400, %144 ], [ 1000, %147 ]
  br label %157

157:                                              ; preds = %153, %155
  %158 = phi i32 [ %156, %155 ], [ 0, %153 ]
  %159 = icmp slt i32 %90, 9
  %160 = select i1 %159, i32 %90, i32 9
  %161 = icmp sgt i32 %160, 1
  %162 = select i1 %161, i32 %160, i32 1
  %163 = shl nsw i32 %162, 16
  %164 = icmp ult i32 %124, 2
  %165 = select i1 %164, i32 %124, i32 2
  %166 = icmp sgt i32 %165, 0
  %167 = select i1 %166, i32 %165, i32 0
  %168 = shl nuw nsw i32 %167, 24
  %169 = add nuw nsw i32 %168, %163
  %170 = add nuw nsw i32 %169, %158
  ret i32 %170
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink15FontDescription23UpdateFromSkiaFontStyleERK11SkFontStyle(%"class.blink::FontDescription"* nocapture, %class.SkFontStyle* nocapture readonly dereferenceable(4)) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 57344
  %6 = icmp eq i32 %5, 0
  %7 = trunc i32 %4 to i16
  %8 = shl i16 %7, 2
  %9 = select i1 %6, i16 %8, i16 32767
  %10 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 0, i32 0
  store i16 %9, i16* %10, align 8
  %11 = load i32, i32* %3, align 4
  %12 = lshr i32 %11, 16
  %13 = trunc i32 %12 to i8
  switch i8 %13, label %74 [
    i8 1, label %14
    i8 2, label %21
    i8 3, label %28
    i8 4, label %35
    i8 6, label %42
    i8 7, label %49
    i8 8, label %56
    i8 9, label %63
  ]

14:                                               ; preds = %2
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %70, !prof !4

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %70, label %20

20:                                               ; preds = %17
  store i16 200, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  br label %70

21:                                               ; preds = %2
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %70, !prof !4

24:                                               ; preds = %21
  %25 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %70, label %27

27:                                               ; preds = %24
  store i16 250, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  br label %70

28:                                               ; preds = %2
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %70, !prof !4

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %70, label %34

34:                                               ; preds = %31
  store i16 300, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  br label %70

35:                                               ; preds = %2
  %36 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i8*) acquire, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %70, !prof !4

38:                                               ; preds = %35
  %39 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %70, label %41

41:                                               ; preds = %38
  store i16 350, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  br label %70

42:                                               ; preds = %2
  %43 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i8*) acquire, align 8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %70, !prof !4

45:                                               ; preds = %42
  %46 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %70, label %48

48:                                               ; preds = %45
  store i16 450, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  br label %70

49:                                               ; preds = %2
  %50 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i8*) acquire, align 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %70, !prof !4

52:                                               ; preds = %49
  %53 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %52
  store i16 500, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  br label %70

56:                                               ; preds = %2
  %57 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i8*) acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %70, !prof !4

59:                                               ; preds = %56
  %60 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  store i16 600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  br label %70

63:                                               ; preds = %2
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i8*) acquire, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %70, !prof !4

66:                                               ; preds = %63
  %67 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  store i16 800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  br label %70

70:                                               ; preds = %69, %66, %63, %62, %59, %56, %55, %52, %49, %48, %45, %42, %41, %38, %35, %34, %31, %28, %27, %24, %21, %20, %17, %14
  %71 = phi i16* [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), %14 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), %17 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), %20 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), %21 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), %24 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), %27 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), %28 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), %31 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), %34 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), %35 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), %38 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), %41 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), %42 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), %45 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), %48 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), %49 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), %52 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), %55 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), %56 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), %59 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), %62 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), %63 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), %66 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), %69 ]
  %72 = load i16, i16* %71, align 2
  %73 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 1, i32 0
  store i16 %72, i16* %73, align 2
  br label %74

74:                                               ; preds = %70, %2
  %75 = load i32, i32* %3, align 4
  %76 = and i32 %75, -16777216
  %77 = icmp eq i32 %76, 33554432
  br i1 %77, label %78, label %112

78:                                               ; preds = %74
  %79 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %85, !prof !4

81:                                               ; preds = %78
  %82 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %85

85:                                               ; preds = %78, %81, %84
  %86 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %87 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  store i16 %86, i16* %87, align 4
  %88 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11, i32 0
  store i16 %86, i16* %88, align 2
  %89 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %90 = bitcast %"struct.blink::FontDescription::BitFields"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 2
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = and i64 %91, -2147483649
  store i64 %95, i64* %90, align 8
  br label %110

96:                                               ; preds = %85
  %97 = lshr i16 %86, 15
  %98 = zext i16 %97 to i64
  %99 = shl nuw nsw i64 %98, 31
  %100 = and i64 %91, -2147483649
  %101 = or i64 %100, %99
  store i64 %101, i64* %90, align 8
  %102 = icmp eq i16 %97, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %96
  %104 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %146, !prof !4

106:                                              ; preds = %103
  %107 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %146, label %109

109:                                              ; preds = %106
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %146

110:                                              ; preds = %96, %94
  %111 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11
  br label %146

112:                                              ; preds = %74
  %113 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %119, !prof !4

115:                                              ; preds = %112
  %116 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %119

119:                                              ; preds = %112, %115, %118
  %120 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %121 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 2, i32 0
  store i16 %120, i16* %121, align 4
  %122 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11, i32 0
  store i16 %120, i16* %122, align 2
  %123 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %124 = bitcast %"struct.blink::FontDescription::BitFields"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 2
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %119
  %129 = and i64 %125, -2147483649
  store i64 %129, i64* %124, align 8
  br label %144

130:                                              ; preds = %119
  %131 = lshr i16 %120, 15
  %132 = zext i16 %131 to i64
  %133 = shl nuw nsw i64 %132, 31
  %134 = and i64 %125, -2147483649
  %135 = or i64 %134, %133
  store i64 %135, i64* %124, align 8
  %136 = icmp eq i16 %131, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %130
  %138 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %146, !prof !4

140:                                              ; preds = %137
  %141 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %146

144:                                              ; preds = %130, %128
  %145 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 11
  br label %146

146:                                              ; preds = %144, %143, %140, %137, %110, %109, %106, %103
  %147 = phi %"class.blink::FontSelectionValue"* [ %111, %110 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %103 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %106 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %109 ], [ %145, %144 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %137 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %140 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %143 ]
  %148 = phi i16* [ %87, %110 ], [ %87, %103 ], [ %87, %106 ], [ %87, %109 ], [ %121, %144 ], [ %121, %137 ], [ %121, %140 ], [ %121, %143 ]
  %149 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %147, i64 0, i32 0
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15FontDescription29MinimumPrefixWidthToHyphenateEv(%"class.blink::FontDescription"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  %3 = load float, float* %2, align 4
  %4 = fadd float %3, 5.000000e-01
  %5 = fptosi float %4 to i32
  %6 = mul nsw i32 %5, 5
  %7 = sdiv i32 %6, 4
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_17GenericFamilyTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %10 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
    i32 3, label %6
    i32 4, label %7
    i32 5, label %8
    i32 6, label %9
  ]

3:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #15
  br label %11

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #15
  br label %11

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #15
  br label %11

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #15
  br label %11

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #15
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #15
  br label %11

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #15
  br label %11

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %11

11:                                               ; preds = %10, %9, %8, %7, %6, %5, %4, %3
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_14LigaturesStateE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %6 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
  ]

3:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %7

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #15
  br label %7

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #15
  br label %7

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %7

7:                                                ; preds = %6, %5, %4, %3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  ret %"class.WTF::StringImpl"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_7KerningE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %6 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
  ]

3:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #15
  br label %7

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %7

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #15
  br label %7

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %7

7:                                                ; preds = %6, %5, %4, %3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  ret %"class.WTF::StringImpl"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS_18FontSelectionValueE(i16) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !4

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i16 200, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  %11 = icmp eq i16 %10, %0
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15) #15
  br label %102

13:                                               ; preds = %9
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !4

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store i16 250, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  br label %20

20:                                               ; preds = %13, %16, %19
  %21 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  %22 = icmp eq i16 %21, %0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i64 15) #15
  br label %102

24:                                               ; preds = %20
  %25 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i8*) acquire, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %31, !prof !4

27:                                               ; preds = %24
  %28 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  store i16 300, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  br label %31

31:                                               ; preds = %24, %27, %30
  %32 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  %33 = icmp eq i16 %32, %0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #15
  br label %102

35:                                               ; preds = %31
  %36 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i8*) acquire, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %42, !prof !4

38:                                               ; preds = %35
  %39 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  store i16 350, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  br label %42

42:                                               ; preds = %35, %38, %41
  %43 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  %44 = icmp eq i16 %43, %0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 14) #15
  br label %102

46:                                               ; preds = %42
  %47 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !4

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  br label %53

53:                                               ; preds = %46, %49, %52
  %54 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  %55 = icmp eq i16 %54, %0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %102

57:                                               ; preds = %53
  %58 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i8*) acquire, align 8
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %64, !prof !4

60:                                               ; preds = %57
  %61 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  store i16 450, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  br label %64

64:                                               ; preds = %57, %60, %63
  %65 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  %66 = icmp eq i16 %65, %0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #15
  br label %102

68:                                               ; preds = %64
  %69 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i8*) acquire, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %75, !prof !4

71:                                               ; preds = %68
  %72 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  store i16 500, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  br label %75

75:                                               ; preds = %68, %71, %74
  %76 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  %77 = icmp eq i16 %76, %0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i64 8) #15
  br label %102

79:                                               ; preds = %75
  %80 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i8*) acquire, align 8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %86, !prof !4

82:                                               ; preds = %79
  %83 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  store i16 600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  br label %86

86:                                               ; preds = %79, %82, %85
  %87 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  %88 = icmp eq i16 %87, %0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i64 14) #15
  br label %102

90:                                               ; preds = %86
  %91 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i8*) acquire, align 8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %97, !prof !4

93:                                               ; preds = %90
  %94 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  store i16 800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  br label %97

97:                                               ; preds = %90, %93, %96
  %98 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  %99 = icmp eq i16 %98, %0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i64 14) #15
  br label %102

101:                                              ; preds = %97
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %102

102:                                              ; preds = %101, %100, %89, %78, %67, %56, %45, %34, %23, %12
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  ret %"class.WTF::StringImpl"* %104
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_15FontVariantCapsE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %10 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
    i32 3, label %6
    i32 4, label %7
    i32 5, label %8
    i32 6, label %9
  ]

3:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %11

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i64 9) #15
  br label %11

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i64 12) #15
  br label %11

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 10) #15
  br label %11

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i64 13) #15
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7) #15
  br label %11

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #15
  br label %11

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %11

11:                                               ; preds = %10, %9, %8, %7, %6, %5, %4, %3
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15FontDescription16VariantLigatures8ToStringEv(%"struct.blink::FontDescription::VariantLigatures"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  %15 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"struct.blink::FontDescription::VariantLigatures", %"struct.blink::FontDescription::VariantLigatures"* %0, i64 0, i32 0
  %17 = load i8, i8* %16, align 4
  %18 = and i8 %17, 3
  %19 = zext i8 %18 to i32
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  switch i32 %19, label %24 [
    i32 0, label %21
    i32 1, label %22
    i32 2, label %23
  ]

21:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %25

22:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #15
  br label %25

23:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #15
  br label %25

24:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %25

25:                                               ; preds = %21, %22, %23, %24
  %26 = bitcast %"class.WTF::String"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %27, i64* %29, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7) #15
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %14
  %37 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #15
  %38 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  %39 = load i8, i8* %16, align 4
  %40 = lshr i8 %39, 2
  %41 = and i8 %40, 3
  %42 = zext i8 %41 to i32
  %43 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  switch i32 %42, label %47 [
    i32 0, label %44
    i32 1, label %45
    i32 2, label %46
  ]

44:                                               ; preds = %25
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %48

45:                                               ; preds = %25
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #15
  br label %48

46:                                               ; preds = %25
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #15
  br label %48

47:                                               ; preds = %25
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %48

48:                                               ; preds = %44, %45, %46, %47
  %49 = bitcast %"class.WTF::String"* %4 to i64*
  %50 = load i64, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %52 = bitcast %"class.WTF::String"* %9 to i64*
  store i64 %50, i64* %52, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* nonnull %9) #15
  %53 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = select i1 %56, i8* %58, i8* %37
  %60 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #15
  %61 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  %62 = load i8, i8* %16, align 4
  %63 = lshr i8 %62, 4
  %64 = and i8 %63, 3
  %65 = zext i8 %64 to i32
  %66 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  switch i32 %65, label %70 [
    i32 0, label %67
    i32 1, label %68
    i32 2, label %69
  ]

67:                                               ; preds = %48
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %71

68:                                               ; preds = %48
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #15
  br label %71

69:                                               ; preds = %48
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #15
  br label %71

70:                                               ; preds = %48
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %71

71:                                               ; preds = %67, %68, %69, %70
  %72 = bitcast %"class.WTF::String"* %3 to i64*
  %73 = load i64, i64* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %73, i64* %75, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %11) #15
  %76 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = select i1 %79, i8* %81, i8* %60
  %83 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #15
  %84 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #15
  %85 = load i8, i8* %16, align 4
  %86 = lshr i8 %85, 6
  %87 = zext i8 %86 to i32
  %88 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  switch i32 %87, label %92 [
    i32 0, label %89
    i32 1, label %90
    i32 2, label %91
  ]

89:                                               ; preds = %71
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #15
  br label %93

90:                                               ; preds = %71
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #15
  br label %93

91:                                               ; preds = %71
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #15
  br label %93

92:                                               ; preds = %71
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #15
  br label %93

93:                                               ; preds = %89, %90, %91, %92
  %94 = bitcast %"class.WTF::String"* %2 to i64*
  %95 = load i64, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %97 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 %95, i64* %97, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.WTF::String"* nonnull %13) #15
  %98 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = select i1 %101, i8* %103, i8* %83
  %105 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.26, i64 0, i64 0), i8* %36, i8* %59, i8* %82, i8* %104) #15
  %106 = load i8, i8* %99, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %93
  %109 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %93, %108
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #15
  br label %126

126:                                              ; preds = %110, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #15
  %127 = load i8, i8* %77, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %130) #16
  br label %131

131:                                              ; preds = %126, %129
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #15
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #15
  %148 = load i8, i8* %54, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %151) #16
  br label %152

152:                                              ; preds = %147, %150
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #15
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #15
  %169 = load i8, i8* %31, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %172) #16
  br label %173

173:                                              ; preds = %168, %171
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #15
  br label %189

189:                                              ; preds = %173, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  ret %"class.WTF::StringImpl"* %105
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15FontDescription4Size8ToStringEv(%"struct.blink::FontDescription::Size"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 15
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %0, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  %9 = and i8 %3, 16
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)
  %12 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.27, i64 0, i64 0), i32 %5, double %8, i8* %11) #15
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15FontDescription17FamilyDescription8ToStringEv(%"struct.blink::FontDescription::FamilyDescription"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_17GenericFamilyTypeE(i32 %9)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3) #15
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = select i1 %15, i8* %17, i8* %6
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %0, i64 0, i32 1
  %22 = call %"class.WTF::StringImpl"* @_ZNK5blink10FontFamily8ToStringEv(%"class.blink::FontFamily"* %21) #15
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5) #15
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* %19
  %31 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i64 0, i64 0), i8* %18, i8* %30) #15
  %32 = load i8, i8* %25, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %1
  %35 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %1, %34
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %36, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  %53 = load i8, i8* %13, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %56) #16
  br label %57

57:                                               ; preds = %52, %55
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #15
  br label %73

73:                                               ; preds = %57, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"class.WTF::StringImpl"* %31
}

declare %"class.WTF::StringImpl"* @_ZNK5blink10FontFamily8ToStringEv(%"class.blink::FontFamily"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15FontDescription8ToStringEv(%"class.blink::FontDescription"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca i32, align 4
  %27 = bitcast i32* %26 to %"struct.blink::FontDescription::VariantLigatures"*
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.blink::FontVariantNumeric", align 4
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.blink::FontVariantEastAsian", align 4
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #15
  %41 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  %42 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  %43 = tail call %"class.WTF::StringImpl"* @_ZNK5blink10FontFamily8ToStringEv(%"class.blink::FontFamily"* %42) #15
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4) #15
  %45 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = select i1 %48, i8* %50, i8* %40
  %52 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %53 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %52, align 8
  %54 = icmp eq %"class.blink::FontFeatureSettings"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %1
  %56 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15
  %57 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #15
  %58 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %53, i64 0, i32 0
  %59 = call %"class.WTF::StringImpl"* @_ZNK5blink12FontSettingsINS_16FontTagValuePairIiEEE8ToStringEv(%"class.blink::FontSettings"* %58)
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %60, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* nonnull %6) #15
  %61 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %1, %65, %55
  %69 = phi i1 [ false, %1 ], [ true, %55 ], [ true, %65 ]
  %70 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.32, i64 0, i64 0), %1 ], [ %56, %55 ], [ %67, %65 ]
  %71 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %72 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %71, align 8
  %73 = icmp eq %"class.blink::FontVariationSettings"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #15
  %76 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #15
  %77 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %72, i64 0, i32 0
  %78 = call %"class.WTF::StringImpl"* @_ZNK5blink12FontSettingsINS_16FontTagValuePairIfEEE8ToStringEv(%"class.blink::FontSettings.4"* %77)
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %79, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* nonnull %8) #15
  %80 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %68, %84, %74
  %88 = phi i1 [ false, %68 ], [ true, %74 ], [ true, %84 ]
  %89 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.32, i64 0, i64 0), %68 ], [ %75, %74 ], [ %86, %84 ]
  %90 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %91 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutLocale"* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #15
  %95 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %91, i64 0, i32 2, i32 0
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* %95) #15
  %96 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %87, %100, %93
  %104 = phi i1 [ false, %87 ], [ true, %93 ], [ true, %100 ]
  %105 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.32, i64 0, i64 0), %87 ], [ %94, %93 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 4
  %107 = load float, float* %106, align 8
  %108 = fpext float %107 to double
  %109 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  %110 = load float, float* %109, align 4
  %111 = fpext float %110 to double
  %112 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 6
  %113 = load float, float* %112, align 8
  %114 = fpext float %113 to double
  %115 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 7
  %116 = load float, float* %115, align 4
  %117 = fpext float %116 to double
  %118 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 8
  %119 = load float, float* %118, align 8
  %120 = fpext float %119 to double
  %121 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 9
  %122 = load float, float* %121, align 4
  %123 = fpext float %122 to double
  %124 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #15
  %125 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #15
  %126 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10
  %127 = call %"class.WTF::StringImpl"* @_ZNK5blink20FontSelectionRequest8ToStringEv(%"struct.blink::FontSelectionRequest"* %126) #15
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %128, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %11) #15
  %129 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = select i1 %132, i8* %134, i8* %124
  %136 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #15
  %137 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #15
  %138 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %139 = bitcast %"struct.blink::FontDescription::BitFields"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = lshr i64 %140, 33
  %142 = trunc i64 %141 to i32
  %143 = and i32 %142, 7
  %144 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringEj(i32 %143) #15
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %145, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.WTF::String"* nonnull %13) #15
  %146 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = select i1 %149, i8* %151, i8* %136
  %153 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #15
  %154 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #15
  %155 = load i64, i64* %139, align 8
  %156 = trunc i64 %155 to i32
  %157 = and i32 %156, 3
  %158 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_15FontOrientationE(i32 %157) #15
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %159, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %14, %"class.WTF::String"* nonnull %15) #15
  %160 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = select i1 %163, i8* %165, i8* %153
  %167 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #15
  %168 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #15
  %169 = load i64, i64* %139, align 8
  %170 = lshr i64 %169, 2
  %171 = trunc i64 %170 to i32
  %172 = and i32 %171, 3
  %173 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_16FontWidthVariantE(i32 %172) #15
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %174, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %16, %"class.WTF::String"* nonnull %17) #15
  %175 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = select i1 %178, i8* %180, i8* %167
  %182 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #15
  %183 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #15
  %184 = load i64, i64* %139, align 8
  %185 = lshr i64 %184, 4
  %186 = trunc i64 %185 to i32
  %187 = and i32 %186, 7
  %188 = call %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_15FontVariantCapsE(i32 %187)
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %189, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %18, %"class.WTF::String"* nonnull %19) #15
  %190 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = select i1 %193, i8* %195, i8* %182
  %197 = load i64, i64* %139, align 8
  %198 = trunc i64 %197 to i8
  %199 = icmp slt i8 %198, 0
  %200 = select i1 %199, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0)
  %201 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #15
  %202 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #15
  %203 = lshr i64 %197, 8
  %204 = trunc i64 %203 to i32
  %205 = and i32 %204, 7
  %206 = call %"class.WTF::StringImpl"* @_ZN5blink15FontDescription8ToStringENS0_17GenericFamilyTypeE(i32 %205)
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %20, %"class.WTF::String"* nonnull %21) #15
  %208 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = select i1 %211, i8* %213, i8* %201
  %215 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #15
  %216 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #15
  %217 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #15
  %218 = bitcast %"class.WTF::String"* %2 to i64*
  %219 = load i64, i64* %218, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217)
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %221 = bitcast %"class.WTF::String"* %23 to i64*
  store i64 %219, i64* %221, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %22, %"class.WTF::String"* nonnull %23) #15
  %222 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  %224 = load i8, i8* %223, align 1
  %225 = icmp slt i8 %224, 0
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = select i1 %225, i8* %227, i8* %215
  %229 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #15
  %230 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #15
  %231 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231) #15
  %232 = load i64, i64* %139, align 8
  %233 = lshr i64 %232, 13
  %234 = trunc i64 %233 to i32
  %235 = and i32 %234, 255
  %236 = or i32 %235, -1431655936
  store i32 %236, i32* %26, align 4
  %237 = call %"class.WTF::StringImpl"* @_ZNK5blink15FontDescription16VariantLigatures8ToStringEv(%"struct.blink::FontDescription::VariantLigatures"* nonnull %27)
  %238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"** %238, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %24, %"class.WTF::String"* nonnull %25) #15
  %239 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = select i1 %242, i8* %244, i8* %229
  %246 = load i64, i64* %139, align 8
  %247 = lshr i64 %246, 21
  %248 = trunc i64 %247 to i32
  %249 = and i32 %248, 15
  %250 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #15
  %251 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #15
  %252 = lshr i64 %246, 25
  %253 = trunc i64 %252 to i32
  %254 = and i32 %253, 3
  %255 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_17FontSmoothingModeE(i32 %254) #15
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %256, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %28, %"class.WTF::String"* nonnull %29) #15
  %257 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %257, i64 0, i32 1, i32 0
  %259 = load i8, i8* %258, align 1
  %260 = icmp slt i8 %259, 0
  %261 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load i8*, i8** %261, align 8
  %263 = select i1 %260, i8* %262, i8* %250
  %264 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #15
  %265 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #15
  %266 = load i64, i64* %139, align 8
  %267 = lshr i64 %266, 27
  %268 = trunc i64 %267 to i32
  %269 = and i32 %268, 3
  %270 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_17TextRenderingModeE(i32 %269) #15
  %271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %270, %"class.WTF::StringImpl"** %271, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %30, %"class.WTF::String"* nonnull %31) #15
  %272 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %272, i64 0, i32 1, i32 0
  %274 = load i8, i8* %273, align 1
  %275 = icmp slt i8 %274, 0
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  %278 = select i1 %275, i8* %277, i8* %264
  %279 = load i64, i64* %139, align 8
  %280 = and i64 %279, 536870912
  %281 = icmp eq i64 %280, 0
  %282 = select i1 %281, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)
  %283 = and i64 %279, 1073741824
  %284 = icmp eq i64 %283, 0
  %285 = select i1 %284, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)
  %286 = and i64 %279, 4294967296
  %287 = icmp eq i64 %286, 0
  %288 = select i1 %287, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)
  %289 = and i64 %279, 1125899906842624
  %290 = icmp eq i64 %289, 0
  %291 = select i1 %290, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)
  %292 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #15
  %293 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #15
  %294 = bitcast %"class.blink::FontVariantNumeric"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %294) #15
  %295 = lshr i64 %279, 36
  %296 = trunc i64 %295 to i32
  %297 = and i32 %296, 255
  %298 = getelementptr inbounds %"class.blink::FontVariantNumeric", %"class.blink::FontVariantNumeric"* %34, i64 0, i32 0, i32 0
  store i32 %297, i32* %298, align 4
  %299 = call %"class.WTF::StringImpl"* @_ZNK5blink18FontVariantNumeric8ToStringEv(%"class.blink::FontVariantNumeric"* nonnull %34) #15
  %300 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %299, %"class.WTF::StringImpl"** %300, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %32, %"class.WTF::String"* nonnull %33) #15
  %301 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = select i1 %304, i8* %306, i8* %292
  %308 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #15
  %309 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #15
  %310 = bitcast %"class.blink::FontVariantEastAsian"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %310) #15
  %311 = load i64, i64* %139, align 8
  %312 = lshr i64 %311, 44
  %313 = trunc i64 %312 to i32
  %314 = and i32 %313, 63
  %315 = getelementptr inbounds %"class.blink::FontVariantEastAsian", %"class.blink::FontVariantEastAsian"* %37, i64 0, i32 0, i32 0
  store i32 %314, i32* %315, align 4
  %316 = call %"class.WTF::StringImpl"* @_ZNK5blink20FontVariantEastAsian8ToStringEv(%"class.blink::FontVariantEastAsian"* nonnull %37) #15
  %317 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %316, %"class.WTF::StringImpl"** %317, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %35, %"class.WTF::String"* nonnull %36) #15
  %318 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %319 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %320 = load i8, i8* %319, align 1
  %321 = icmp slt i8 %320, 0
  %322 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load i8*, i8** %322, align 8
  %324 = select i1 %321, i8* %323, i8* %308
  %325 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #15
  %326 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #15
  %327 = load i64, i64* %139, align 8
  %328 = lshr i64 %327, 51
  %329 = trunc i64 %328 to i32
  %330 = and i32 %329, 1
  %331 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_13OpticalSizingE(i32 %330) #15
  %332 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %331, %"class.WTF::StringImpl"** %332, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %38, %"class.WTF::String"* nonnull %39) #15
  %333 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %334 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %333, i64 0, i32 1, i32 0
  %335 = load i8, i8* %334, align 1
  %336 = icmp slt i8 %335, 0
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = select i1 %336, i8* %338, i8* %325
  %340 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([585 x i8], [585 x i8]* @.str.31, i64 0, i64 0), i8* %51, i8* %70, i8* %89, i8* %105, double %108, double %111, double %114, double %117, double %120, double %123, i8* %135, i8* %152, i8* %166, i8* %181, i8* %196, i8* %200, i8* %214, i8* %228, i8* %245, i32 %249, i8* %263, i8* %278, i8* %282, i8* %285, i8* %288, i8* %291, i8* %307, i8* %324, i8* %339) #15
  %341 = load i8, i8* %334, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %103
  %344 = load i8*, i8** %337, align 8
  call void @_ZdlPv(i8* %344) #16
  br label %345

345:                                              ; preds = %103, %343
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %348
  %358 = phi i32 [ %356, %355 ], [ %354, %348 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %346) #15
  br label %361

361:                                              ; preds = %345, %357, %360
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #15
  %362 = load i8, i8* %319, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %361
  %365 = load i8*, i8** %322, align 8
  call void @_ZdlPv(i8* %365) #16
  br label %366

366:                                              ; preds = %361, %364
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #15
  br label %382

382:                                              ; preds = %366, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %310) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #15
  %383 = load i8, i8* %302, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  %386 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %386) #16
  br label %387

387:                                              ; preds = %382, %385
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %387
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #15
  br label %403

403:                                              ; preds = %387, %399, %402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %294) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #15
  %404 = load i8, i8* %273, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %408

406:                                              ; preds = %403
  %407 = load i8*, i8** %276, align 8
  call void @_ZdlPv(i8* %407) #16
  br label %408

408:                                              ; preds = %403, %406
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %409) #15
  br label %424

424:                                              ; preds = %408, %420, %423
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #15
  %425 = load i8, i8* %258, align 1
  %426 = icmp slt i8 %425, 0
  br i1 %426, label %427, label %429

427:                                              ; preds = %424
  %428 = load i8*, i8** %261, align 8
  call void @_ZdlPv(i8* %428) #16
  br label %429

429:                                              ; preds = %424, %427
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %430, null
  br i1 %431, label %445, label %432

432:                                              ; preds = %429
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  br i1 %436, label %439, label %441

439:                                              ; preds = %432
  %440 = add i32 %438, -1
  store i32 %440, i32* %437, align 4
  br label %441

441:                                              ; preds = %439, %432
  %442 = phi i32 [ %440, %439 ], [ %438, %432 ]
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %430) #15
  br label %445

445:                                              ; preds = %429, %441, %444
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #15
  %446 = load i8, i8* %240, align 1
  %447 = icmp slt i8 %446, 0
  br i1 %447, label %448, label %450

448:                                              ; preds = %445
  %449 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %449) #16
  br label %450

450:                                              ; preds = %445, %448
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %451, null
  br i1 %452, label %466, label %453

453:                                              ; preds = %450
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = load atomic i32, i32* %454 monotonic, align 4
  %456 = and i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 0
  %459 = load i32, i32* %458, align 4
  br i1 %457, label %460, label %462

460:                                              ; preds = %453
  %461 = add i32 %459, -1
  store i32 %461, i32* %458, align 4
  br label %462

462:                                              ; preds = %460, %453
  %463 = phi i32 [ %461, %460 ], [ %459, %453 ]
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %466

465:                                              ; preds = %462
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %451) #15
  br label %466

466:                                              ; preds = %450, %462, %465
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #15
  %467 = load i8, i8* %223, align 1
  %468 = icmp slt i8 %467, 0
  br i1 %468, label %469, label %471

469:                                              ; preds = %466
  %470 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %470) #16
  br label %471

471:                                              ; preds = %466, %469
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %473 = icmp eq %"class.WTF::StringImpl"* %472, null
  br i1 %473, label %487, label %474

474:                                              ; preds = %471
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load atomic i32, i32* %475 monotonic, align 4
  %477 = and i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %480 = load i32, i32* %479, align 4
  br i1 %478, label %481, label %483

481:                                              ; preds = %474
  %482 = add i32 %480, -1
  store i32 %482, i32* %479, align 4
  br label %483

483:                                              ; preds = %481, %474
  %484 = phi i32 [ %482, %481 ], [ %480, %474 ]
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %487

486:                                              ; preds = %483
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #15
  br label %487

487:                                              ; preds = %471, %483, %486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #15
  %488 = load i8, i8* %209, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %487
  %491 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %491) #16
  br label %492

492:                                              ; preds = %487, %490
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %508, label %495

495:                                              ; preds = %492
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load atomic i32, i32* %496 monotonic, align 4
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  br i1 %499, label %502, label %504

502:                                              ; preds = %495
  %503 = add i32 %501, -1
  store i32 %503, i32* %500, align 4
  br label %504

504:                                              ; preds = %502, %495
  %505 = phi i32 [ %503, %502 ], [ %501, %495 ]
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %493) #15
  br label %508

508:                                              ; preds = %492, %504, %507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #15
  %509 = load i8, i8* %191, align 1
  %510 = icmp slt i8 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %508
  %512 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %512) #16
  br label %513

513:                                              ; preds = %508, %511
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %515 = icmp eq %"class.WTF::StringImpl"* %514, null
  br i1 %515, label %529, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = and i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  br i1 %520, label %523, label %525

523:                                              ; preds = %516
  %524 = add i32 %522, -1
  store i32 %524, i32* %521, align 4
  br label %525

525:                                              ; preds = %523, %516
  %526 = phi i32 [ %524, %523 ], [ %522, %516 ]
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %529

528:                                              ; preds = %525
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #15
  br label %529

529:                                              ; preds = %513, %525, %528
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #15
  %530 = load i8, i8* %176, align 1
  %531 = icmp slt i8 %530, 0
  br i1 %531, label %532, label %534

532:                                              ; preds = %529
  %533 = load i8*, i8** %179, align 8
  call void @_ZdlPv(i8* %533) #16
  br label %534

534:                                              ; preds = %529, %532
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %550, label %537

537:                                              ; preds = %534
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  br i1 %541, label %544, label %546

544:                                              ; preds = %537
  %545 = add i32 %543, -1
  store i32 %545, i32* %542, align 4
  br label %546

546:                                              ; preds = %544, %537
  %547 = phi i32 [ %545, %544 ], [ %543, %537 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %535) #15
  br label %550

550:                                              ; preds = %534, %546, %549
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #15
  %551 = load i8, i8* %161, align 1
  %552 = icmp slt i8 %551, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %550
  %554 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %554) #16
  br label %555

555:                                              ; preds = %550, %553
  %556 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %557 = icmp eq %"class.WTF::StringImpl"* %556, null
  br i1 %557, label %571, label %558

558:                                              ; preds = %555
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %556, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %560 = load atomic i32, i32* %559 monotonic, align 4
  %561 = and i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %556, i64 0, i32 0
  %564 = load i32, i32* %563, align 4
  br i1 %562, label %565, label %567

565:                                              ; preds = %558
  %566 = add i32 %564, -1
  store i32 %566, i32* %563, align 4
  br label %567

567:                                              ; preds = %565, %558
  %568 = phi i32 [ %566, %565 ], [ %564, %558 ]
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %571

570:                                              ; preds = %567
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %556) #15
  br label %571

571:                                              ; preds = %555, %567, %570
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #15
  %572 = load i8, i8* %147, align 1
  %573 = icmp slt i8 %572, 0
  br i1 %573, label %574, label %576

574:                                              ; preds = %571
  %575 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %575) #16
  br label %576

576:                                              ; preds = %571, %574
  %577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %578 = icmp eq %"class.WTF::StringImpl"* %577, null
  br i1 %578, label %592, label %579

579:                                              ; preds = %576
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %577, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %581 = load atomic i32, i32* %580 monotonic, align 4
  %582 = and i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %577, i64 0, i32 0
  %585 = load i32, i32* %584, align 4
  br i1 %583, label %586, label %588

586:                                              ; preds = %579
  %587 = add i32 %585, -1
  store i32 %587, i32* %584, align 4
  br label %588

588:                                              ; preds = %586, %579
  %589 = phi i32 [ %587, %586 ], [ %585, %579 ]
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %592

591:                                              ; preds = %588
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %577) #15
  br label %592

592:                                              ; preds = %576, %588, %591
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #15
  %593 = load i8, i8* %130, align 1
  %594 = icmp slt i8 %593, 0
  br i1 %594, label %595, label %597

595:                                              ; preds = %592
  %596 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %596) #16
  br label %597

597:                                              ; preds = %592, %595
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %599 = icmp eq %"class.WTF::StringImpl"* %598, null
  br i1 %599, label %613, label %600

600:                                              ; preds = %597
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  br i1 %604, label %607, label %609

607:                                              ; preds = %600
  %608 = add i32 %606, -1
  store i32 %608, i32* %605, align 4
  br label %609

609:                                              ; preds = %607, %600
  %610 = phi i32 [ %608, %607 ], [ %606, %600 ]
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %598) #15
  br label %613

613:                                              ; preds = %597, %609, %612
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #15
  br i1 %104, label %614, label %624

614:                                              ; preds = %613
  %615 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %616 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %615, i64 0, i32 1, i32 0
  %617 = load i8, i8* %616, align 1
  %618 = icmp slt i8 %617, 0
  br i1 %618, label %619, label %622

619:                                              ; preds = %614
  %620 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load i8*, i8** %620, align 8
  call void @_ZdlPv(i8* %621) #16
  br label %622

622:                                              ; preds = %614, %619
  %623 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %623) #15
  br label %624

624:                                              ; preds = %613, %622
  br i1 %88, label %625, label %653

625:                                              ; preds = %624
  %626 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %627 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %626, i64 0, i32 1, i32 0
  %628 = load i8, i8* %627, align 1
  %629 = icmp slt i8 %628, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load i8*, i8** %631, align 8
  call void @_ZdlPv(i8* %632) #16
  br label %633

633:                                              ; preds = %625, %630
  %634 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %635 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %634, align 8
  %636 = icmp eq %"class.WTF::StringImpl"* %635, null
  br i1 %636, label %650, label %637

637:                                              ; preds = %633
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %635, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = load atomic i32, i32* %638 monotonic, align 4
  %640 = and i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %635, i64 0, i32 0
  %643 = load i32, i32* %642, align 4
  br i1 %641, label %644, label %646

644:                                              ; preds = %637
  %645 = add i32 %643, -1
  store i32 %645, i32* %642, align 4
  br label %646

646:                                              ; preds = %644, %637
  %647 = phi i32 [ %645, %644 ], [ %643, %637 ]
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %649, label %650

649:                                              ; preds = %646
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %635) #15
  br label %650

650:                                              ; preds = %633, %646, %649
  %651 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %651) #15
  %652 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %652) #15
  br label %653

653:                                              ; preds = %624, %650
  br i1 %69, label %654, label %682

654:                                              ; preds = %653
  %655 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %654
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #16
  br label %662

662:                                              ; preds = %654, %659
  %663 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %664 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %663, align 8
  %665 = icmp eq %"class.WTF::StringImpl"* %664, null
  br i1 %665, label %679, label %666

666:                                              ; preds = %662
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %664, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %668 = load atomic i32, i32* %667 monotonic, align 4
  %669 = and i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %664, i64 0, i32 0
  %672 = load i32, i32* %671, align 4
  br i1 %670, label %673, label %675

673:                                              ; preds = %666
  %674 = add i32 %672, -1
  store i32 %674, i32* %671, align 4
  br label %675

675:                                              ; preds = %673, %666
  %676 = phi i32 [ %674, %673 ], [ %672, %666 ]
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %678, label %679

678:                                              ; preds = %675
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %664) #15
  br label %679

679:                                              ; preds = %662, %675, %678
  %680 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %680) #15
  %681 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %681) #15
  br label %682

682:                                              ; preds = %653, %679
  %683 = load i8, i8* %46, align 1
  %684 = icmp slt i8 %683, 0
  br i1 %684, label %685, label %687

685:                                              ; preds = %682
  %686 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %686) #16
  br label %687

687:                                              ; preds = %682, %685
  %688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %689 = icmp eq %"class.WTF::StringImpl"* %688, null
  br i1 %689, label %703, label %690

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load atomic i32, i32* %691 monotonic, align 4
  %693 = and i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 0
  %696 = load i32, i32* %695, align 4
  br i1 %694, label %697, label %699

697:                                              ; preds = %690
  %698 = add i32 %696, -1
  store i32 %698, i32* %695, align 4
  br label %699

699:                                              ; preds = %697, %690
  %700 = phi i32 [ %698, %697 ], [ %696, %690 ]
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %702, label %703

702:                                              ; preds = %699
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %688) #15
  br label %703

703:                                              ; preds = %687, %699, %702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #15
  ret %"class.WTF::StringImpl"* %340
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink12FontSettingsINS_16FontTagValuePairIiEEE8ToStringEv(%"class.blink::FontSettings"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %10 = bitcast %union.anon.84* %9 to i8*
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %12, align 4
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.blink::FontSettings", %"class.blink::FontSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  %19 = bitcast %"class.WTF::StringView"* %4 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %22 = bitcast %"class.WTF::StringView"* %5 to i8*
  %23 = getelementptr inbounds %"class.blink::FontSettings", %"class.blink::FontSettings"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %28 = bitcast %"class.WTF::StringView"* %5 to i64*
  %29 = bitcast %"class.WTF::StringView"* %6 to i8*
  %30 = bitcast %"class.WTF::StringView"* %6 to i64*
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 13
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  %39 = bitcast i8** %35 to i64*
  %40 = ptrtoint i8* %37 to i64
  %41 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  br label %60

42:                                               ; preds = %126, %1
  %43 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #15
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #15
  br label %59

59:                                               ; preds = %42, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #15
  ret %"class.WTF::StringImpl"* %43

60:                                               ; preds = %126, %17
  %61 = phi i32 [ 0, %17 ], [ %131, %126 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %64, i64* %19, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i8** %20, align 8
  store i32 1, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  br label %65

65:                                               ; preds = %60, %63
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  %66 = call dereferenceable(8) %"class.blink::FontTagValuePair"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %23, i32 %61) #15
  %67 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink25FourByteTagToAtomicStringEj(i32 %68) #15
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  store i8* null, i8** %25, align 8
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %72, i64* %28, align 8
  store i32 0, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %89

73:                                               ; preds = %65
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %24, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %26, align 8
  store i32 %75, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %73
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %73
  %86 = phi i32 [ %84, %83 ], [ %82, %73 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #15
  br label %89

89:                                               ; preds = %71, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %90, i64* %30, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8** %31, align 8
  store i32 1, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  %91 = call dereferenceable(8) %"class.blink::FontTagValuePair"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %23, i32 %61) #15
  %92 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %91, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #15
  %94 = icmp slt i32 %93, 0
  %95 = sub i32 0, %93
  %96 = select i1 %94, i32 %95, i32 %93
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false) #15
  store i8* %34, i8** %35, align 8
  %97 = urem i32 %96, 10
  %98 = udiv i32 %96, 10
  %99 = trunc i32 %97 to i8
  %100 = or i8 %99, 48
  store i8 %100, i8* %34, align 4
  %101 = icmp ugt i32 %96, 9
  br i1 %101, label %102, label %122

102:                                              ; preds = %89
  store i8* %38, i8** %35, align 8
  %103 = urem i32 %98, 10
  %104 = trunc i32 %103 to i8
  %105 = or i8 %104, 48
  store i8 %105, i8* %38, align 1
  %106 = icmp ugt i32 %96, 99
  br i1 %106, label %107, label %122

107:                                              ; preds = %102
  %108 = udiv i32 %96, 100
  store i8* %41, i8** %35, align 8
  %109 = urem i32 %108, 10
  %110 = trunc i32 %109 to i8
  %111 = or i8 %110, 48
  store i8 %111, i8* %41, align 2
  %112 = icmp ugt i32 %96, 999
  br i1 %112, label %113, label %122

113:                                              ; preds = %107, %113
  %114 = phi i32 [ %116, %113 ], [ %108, %107 ]
  %115 = load i8*, i8** %35, align 8
  %116 = udiv i32 %114, 10
  %117 = getelementptr inbounds i8, i8* %115, i64 -1
  store i8* %117, i8** %35, align 8
  %118 = urem i32 %116, 10
  %119 = trunc i32 %118 to i8
  %120 = or i8 %119, 48
  store i8 %120, i8* %117, align 1
  %121 = icmp ugt i32 %114, 99
  br i1 %121, label %113, label %122

122:                                              ; preds = %113, %107, %102, %89
  br i1 %94, label %123, label %126

123:                                              ; preds = %122
  %124 = load i8*, i8** %35, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 -1
  store i8* %125, i8** %35, align 8
  store i8 45, i8* %125, align 1
  br label %126

126:                                              ; preds = %122, %123
  %127 = load i64, i64* %39, align 8
  %128 = sub i64 %40, %127
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %36, align 8
  %130 = inttoptr i64 %127 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %3, i8* %130, i32 %129) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #15
  %131 = add nuw i32 %61, 1
  %132 = icmp eq i32 %131, %15
  br i1 %132, label %42, label %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink12FontSettingsINS_16FontTagValuePairIfEEE8ToStringEv(%"class.blink::FontSettings.4"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %9 = bitcast %union.anon.84* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::FontSettings.4", %"class.blink::FontSettings.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  %18 = bitcast %"class.WTF::StringView"* %3 to i64*
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %21 = bitcast %"class.WTF::StringView"* %4 to i8*
  %22 = getelementptr inbounds %"class.blink::FontSettings.4", %"class.blink::FontSettings.4"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %27 = bitcast %"class.WTF::StringView"* %4 to i64*
  %28 = bitcast %"class.WTF::StringView"* %5 to i8*
  %29 = bitcast %"class.WTF::StringView"* %5 to i64*
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %50

32:                                               ; preds = %79, %1
  %33 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #15
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #15
  ret %"class.WTF::StringImpl"* %33

50:                                               ; preds = %79, %16
  %51 = phi i32 [ 0, %16 ], [ %84, %79 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %54, i64* %18, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i8** %19, align 8
  store i32 1, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  br label %55

55:                                               ; preds = %50, %53
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  %56 = call dereferenceable(8) %"class.blink::FontTagValuePair.8"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %22, i32 %51) #15
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = call %"class.WTF::StringImpl"* @_ZN5blink25FourByteTagToAtomicStringEj(i32 %58) #15
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %55
  store i8* null, i8** %24, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %62, i64* %27, align 8
  store i32 0, i32* %26, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %79

63:                                               ; preds = %55
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %23, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %25, align 8
  store i32 %65, i32* %26, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %63
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %63
  %76 = phi i32 [ %74, %73 ], [ %72, %63 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #15
  br label %79

79:                                               ; preds = %61, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %80, i64* %29, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8** %30, align 8
  store i32 1, i32* %31, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  %81 = call dereferenceable(8) %"class.blink::FontTagValuePair.8"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %22, i32 %51) #15
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %81, i64 0, i32 1
  %83 = load float, float* %82, align 4
  call void @_ZN3WTF13StringBuilder12AppendNumberEf(%"class.WTF::StringBuilder"* nonnull %2, float %83) #15
  %84 = add nuw i32 %51, 1
  %85 = icmp eq i32 %84, %14
  br i1 %85, label %32, label %50
}

declare %"class.WTF::StringImpl"* @_ZNK5blink20FontSelectionRequest8ToStringEv(%"struct.blink::FontSelectionRequest"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringEj(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_15FontOrientationE(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_16FontWidthVariantE(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_17FontSmoothingModeE(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_17TextRenderingModeE(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink18FontVariantNumeric8ToStringEv(%"class.blink::FontVariantNumeric"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink20FontVariantEastAsian8ToStringEv(%"class.blink::FontVariantEastAsian"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_13OpticalSizingE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.13*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.13, %class.scoped_refptr.13* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.19", %"class.base::RefCounted.19"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #15
  %17 = getelementptr inbounds %"class.base::RefCounted.19", %"class.base::RefCounted.19"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.19", %"class.base::RefCounted.19"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.19"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.19"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #15
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #15
  br label %55

55:                                               ; preds = %5, %53, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  %15 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.22"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #15
  %21 = bitcast %"class.base::RefCounted.22"* %19 to i8*
  tail call void @free(i8* %21) #15
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #15
  %27 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.22"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #15
  %33 = bitcast %"class.base::RefCounted.22"* %31 to i8*
  tail call void @free(i8* %33) #15
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #15
  %40 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.22"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #15
  %46 = bitcast %"class.base::RefCounted.22"* %44 to i8*
  tail call void @free(i8* %46) #15
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  %15 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.22"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #15
  %21 = bitcast %"class.base::RefCounted.22"* %19 to i8*
  tail call void @free(i8* %21) #15
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #15
  %27 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.22"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #15
  %33 = bitcast %"class.base::RefCounted.22"* %31 to i8*
  tail call void @free(i8* %33) #15
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #15
  %40 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.22"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #15
  %46 = bitcast %"class.base::RefCounted.22"* %44 to i8*
  tail call void @free(i8* %46) #15
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::FontTagValuePair"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.34, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %24, i64 %25
  ret %"class.blink::FontTagValuePair"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !5
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #15
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #15
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink25FourByteTagToAtomicStringEj(i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder12AppendNumberEf(%"class.WTF::StringBuilder"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::FontTagValuePair.8"* @_ZNK3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.34, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FontTagValuePair.8"*, %"class.blink::FontTagValuePair.8"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FontTagValuePair.8", %"class.blink::FontTagValuePair.8"* %24, i64 %25
  ret %"class.blink::FontTagValuePair.8"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{i8 0, i8 2}
