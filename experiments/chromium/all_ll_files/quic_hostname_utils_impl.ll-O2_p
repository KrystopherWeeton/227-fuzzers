; ModuleID = '../../net/quic/platform/impl/quic_hostname_utils_impl.cc'
source_filename = "../../net/quic/platform/impl/quic_hostname_utils_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::string_view" = type { i8*, i64 }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@FLAGS_quic_reloadable_flag_quic_and_tls_allow_sni_without_dots = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic21QuicHostnameUtilsImpl10IsValidSNIEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = alloca %"struct.url::CanonHostInfo", align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = bitcast %"struct.url::CanonHostInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %4, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  %11 = bitcast %"struct.url::CanonHostInfo"* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %11, align 16
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %0, i64 %1, %"struct.url::CanonHostInfo"* nonnull %4) #6
  %15 = load i32, i32* %9, align 16
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %26, label %18

18:                                               ; preds = %2
  %19 = call zeroext i1 @_ZN3net28IsCanonicalizedHostCompliantERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #6
  br i1 %19, label %20, label %26

20:                                               ; preds = %18
  %21 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_and_tls_allow_sni_without_dots, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = call i64 @_ZNK4absl11string_view5rfindEcm(%"class.absl::string_view"* nonnull %3, i8 signext 46, i64 -1) #6
  %25 = icmp ne i64 %24, -1
  br label %26

26:                                               ; preds = %20, %23, %18, %2
  %27 = phi i1 [ false, %18 ], [ false, %2 ], [ true, %20 ], [ %25, %23 ]
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %33) #7
  br label %34

34:                                               ; preds = %26, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* sret, i8*, i64, %"struct.url::CanonHostInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net28IsCanonicalizedHostCompliantERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21QuicHostnameUtilsImpl17NormalizeHostnameEN4absl11string_viewE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.url::CanonHostInfo", align 16
  %5 = bitcast %"struct.url::CanonHostInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %4, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  %7 = bitcast %"struct.url::CanonHostInfo"* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %7, align 16
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* sret %0, i8* %1, i64 %2, %"struct.url::CanonHostInfo"* nonnull %4) #6
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i64, i64* %9, align 8
  %16 = zext i8 %13 to i64
  %17 = select i1 %14, i64 %15, i64 %16
  %18 = load i8*, i8** %8, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %20 = select i1 %14, i8* %18, i8* %19
  br label %21

21:                                               ; preds = %24, %3
  %22 = phi i64 [ %17, %3 ], [ %25, %24 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = add i64 %22, -1
  %26 = getelementptr inbounds i8, i8* %20, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 46
  br i1 %28, label %21, label %29

29:                                               ; preds = %21, %24
  %30 = icmp eq i64 %17, %22
  br i1 %30, label %45, label %31

31:                                               ; preds = %29
  %32 = sub i64 %17, %22
  %33 = icmp ult i64 %17, %22
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %35) #8
  unreachable

36:                                               ; preds = %31
  %37 = icmp eq i64 %32, -1
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  br i1 %14, label %39, label %41

39:                                               ; preds = %38
  %40 = getelementptr inbounds i8, i8* %18, i64 %22
  store i8 0, i8* %40, align 1
  store i64 %22, i64* %9, align 8
  br label %45

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %19, i64 %22
  store i8 0, i8* %42, align 1
  %43 = trunc i64 %22 to i8
  store i8 %43, i8* %12, align 1
  br label %45

44:                                               ; preds = %36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 %22, i64 %32) #6
  br label %45

45:                                               ; preds = %44, %41, %39, %29
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind
declare i64 @_ZNK4absl11string_view5rfindEcm(%"class.absl::string_view"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
