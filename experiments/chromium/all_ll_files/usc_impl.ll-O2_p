; ModuleID = '../../third_party/icu/source/common/usc_impl.cpp'
source_filename = "../../third_party/icu/source/common/usc_impl.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UScriptRun = type { i32, i16*, i32, i32, i32, [32 x %struct.ParenStackEntry], i32, i32, i32 }
%struct.ParenStackEntry = type { i32, i32 }

@_ZL11pairedChars = internal unnamed_addr constant [34 x i32] [i32 40, i32 41, i32 60, i32 62, i32 91, i32 93, i32 123, i32 125, i32 171, i32 187, i32 8216, i32 8217, i32 8220, i32 8221, i32 8249, i32 8250, i32 12296, i32 12297, i32 12298, i32 12299, i32 12300, i32 12301, i32 12302, i32 12303, i32 12304, i32 12305, i32 12308, i32 12309, i32 12310, i32 12311, i32 12312, i32 12313, i32 12314, i32 12315], align 16

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UScriptRun* @uscript_openRun_69(i16*, i32, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %40

8:                                                ; preds = %5
  %9 = tail call noalias i8* @uprv_malloc_69(i64 296) #6
  %10 = bitcast i8* %9 to %struct.UScriptRun*
  %11 = icmp eq i8* %9, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i32 7, i32* %2, align 4
  br label %40

13:                                               ; preds = %8
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %39

16:                                               ; preds = %13
  %17 = icmp slt i32 %1, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = icmp eq i16* %0, null
  %20 = icmp eq i32 %1, 0
  %21 = xor i1 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %16
  store i32 1, i32* %2, align 4
  br label %39

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %9, i64 8
  %25 = bitcast i8* %24 to i16**
  store i16* %0, i16** %25, align 8
  %26 = bitcast i8* %9 to i32*
  store i32 %1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %9, i64 20
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %9, i64 24
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %9, i64 284
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %9, i64 288
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %9, i64 292
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 4
  br label %40

39:                                               ; preds = %13, %22
  tail call void @uprv_free_69(i8* nonnull %9) #7
  br label %40

40:                                               ; preds = %23, %39, %3, %5, %12
  %41 = phi %struct.UScriptRun* [ null, %12 ], [ null, %5 ], [ null, %3 ], [ null, %39 ], [ %10, %23 ]
  ret %struct.UScriptRun* %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @uscript_setRunText_69(%struct.UScriptRun*, i16*, i32, i32*) local_unnamed_addr #3 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %27

9:                                                ; preds = %6
  %10 = icmp eq %struct.UScriptRun* %0, null
  %11 = icmp slt i32 %2, 0
  %12 = or i1 %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = icmp eq i16* %1, null
  %15 = icmp eq i32 %2, 0
  %16 = xor i1 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13, %9
  store i32 1, i32* %3, align 4
  br label %27

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 1
  store i16* %1, i16** %19, align 8
  %20 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 0
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 3
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 4
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 6
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 7
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 8
  store i32 0, i32* %26, align 4
  br label %27

27:                                               ; preds = %6, %4, %18, %17
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @uscript_closeRun_69(%struct.UScriptRun*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UScriptRun* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.UScriptRun* %0 to i8*
  tail call void @uprv_free_69(i8* nonnull %4) #7
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @uscript_resetRun_69(%struct.UScriptRun*) local_unnamed_addr #5 {
  %2 = icmp eq %struct.UScriptRun* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 3
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 4
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 6
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 7
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 8
  store i32 0, i32* %9, align 4
  br label %10

10:                                               ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @uscript_nextRun_69(%struct.UScriptRun*, i32*, i32*, i32*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 0, i32* %5, align 4
  %7 = icmp eq %struct.UScriptRun* %0, null
  br i1 %7, label %223, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %223

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 8
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 4
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 2
  store i32 %10, i32* %17, align 8
  %18 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 1
  %19 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 7
  %20 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 6
  br label %21

21:                                               ; preds = %14, %206
  %22 = phi i32 [ %12, %14 ], [ %209, %206 ]
  %23 = phi i32 [ %10, %14 ], [ %208, %206 ]
  %24 = load i16*, i16** %18, align 8
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i16 %27, -1024
  %30 = icmp eq i16 %29, -10240
  %31 = add nsw i32 %22, -1
  %32 = icmp slt i32 %23, %31
  %33 = and i1 %32, %30
  br i1 %33, label %34, label %46

34:                                               ; preds = %21
  %35 = add nsw i32 %23, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %24, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = and i16 %38, -1024
  %40 = icmp eq i16 %39, -9216
  br i1 %40, label %41, label %46

41:                                               ; preds = %34
  %42 = zext i16 %38 to i32
  %43 = shl nuw nsw i32 %28, 10
  %44 = add nsw i32 %43, -56613888
  %45 = add nsw i32 %44, %42
  store i32 %35, i32* %9, align 4
  br label %46

46:                                               ; preds = %34, %41, %21
  %47 = phi i32 [ %28, %21 ], [ %45, %41 ], [ %28, %34 ]
  %48 = call i32 @uscript_getScript_69(i32 %47, i32* nonnull %5) #7
  %49 = icmp sgt i32 %47, 59
  %50 = select i1 %49, i32 2, i32 0
  %51 = or i32 %50, 16
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [34 x i32], [34 x i32]* @_ZL11pairedChars, i64 0, i64 %52
  %54 = load i32, i32* %53, align 8
  %55 = icmp sgt i32 %54, %47
  %56 = select i1 %55, i32 %50, i32 %51
  %57 = or i32 %56, 8
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [34 x i32], [34 x i32]* @_ZL11pairedChars, i64 0, i64 %58
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %60, %47
  %62 = select i1 %61, i32 %56, i32 %57
  %63 = or i32 %62, 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [34 x i32], [34 x i32]* @_ZL11pairedChars, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, %47
  %68 = select i1 %67, i32 %62, i32 %63
  %69 = add nsw i32 %68, 2
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [34 x i32], [34 x i32]* @_ZL11pairedChars, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, %47
  %74 = select i1 %73, i32 %68, i32 %69
  %75 = add nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [34 x i32], [34 x i32]* @_ZL11pairedChars, i64 0, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, %47
  %80 = select i1 %79, i32 %74, i32 %75
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [34 x i32], [34 x i32]* @_ZL11pairedChars, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %47
  %85 = select i1 %84, i32 %80, i32 -1
  %86 = icmp sgt i32 %85, -1
  br i1 %86, label %87, label %135

87:                                               ; preds = %46
  %88 = and i32 %85, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %87
  %91 = load i32, i32* %16, align 8
  %92 = load i32, i32* %19, align 8
  %93 = icmp slt i32 %92, 32
  %94 = add nsw i32 %92, 1
  %95 = select i1 %93, i32 %94, i32 32
  store i32 %95, i32* %19, align 8
  %96 = load i32, i32* %15, align 4
  %97 = icmp slt i32 %96, 32
  %98 = add nsw i32 %96, 1
  %99 = select i1 %97, i32 %98, i32 32
  store i32 %99, i32* %15, align 4
  %100 = load i32, i32* %20, align 4
  %101 = add nsw i32 %100, 1
  %102 = srem i32 %101, 32
  store i32 %102, i32* %20, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %103, i32 0
  store i32 %85, i32* %104, align 4
  %105 = load i32, i32* %20, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %106, i32 1
  store i32 %91, i32* %107, align 4
  br label %135

108:                                              ; preds = %87
  %109 = and i32 %85, -2
  %110 = load i32, i32* %19, align 8
  %111 = icmp slt i32 %110, 1
  br i1 %111, label %135, label %112

112:                                              ; preds = %108
  %113 = load i32, i32* %20, align 4
  br label %114

114:                                              ; preds = %112, %126
  %115 = phi i32 [ %129, %126 ], [ %113, %112 ]
  %116 = phi i32 [ %127, %126 ], [ %110, %112 ]
  %117 = sext i32 %115 to i64
  %118 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %117, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %109
  br i1 %120, label %132, label %121

121:                                              ; preds = %114
  %122 = load i32, i32* %15, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = add nsw i32 %122, -1
  store i32 %125, i32* %15, align 4
  br label %126

126:                                              ; preds = %121, %124
  %127 = add nsw i32 %116, -1
  store i32 %127, i32* %19, align 8
  %128 = add nsw i32 %115, 31
  %129 = srem i32 %128, 32
  %130 = icmp slt i32 %116, 2
  %131 = select i1 %130, i32 -1, i32 %129
  store i32 %131, i32* %20, align 4
  br i1 %130, label %135, label %114

132:                                              ; preds = %114
  %133 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %117, i32 1
  %134 = load i32, i32* %133, align 4
  br label %135

135:                                              ; preds = %126, %108, %132, %90, %46
  %136 = phi i32 [ %48, %90 ], [ %48, %46 ], [ %134, %132 ], [ %48, %108 ], [ %48, %126 ]
  %137 = load i32, i32* %16, align 8
  %138 = icmp slt i32 %137, 2
  %139 = icmp slt i32 %136, 2
  %140 = or i1 %139, %138
  %141 = icmp eq i32 %137, %136
  %142 = or i1 %141, %140
  br i1 %142, label %143, label %201

143:                                              ; preds = %135
  %144 = icmp sgt i32 %136, 1
  %145 = and i1 %144, %138
  br i1 %145, label %146, label %181

146:                                              ; preds = %143
  store i32 %136, i32* %16, align 8
  %147 = load i32, i32* %20, align 4
  %148 = load i32, i32* %15, align 4
  %149 = add nsw i32 %148, -1
  store i32 %149, i32* %15, align 4
  %150 = icmp sgt i32 %148, 0
  br i1 %150, label %151, label %181

151:                                              ; preds = %146
  %152 = add nsw i32 %147, 32
  %153 = sub i32 %152, %148
  %154 = srem i32 %153, 32
  %155 = and i32 %148, 1
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %163, label %157

157:                                              ; preds = %151
  %158 = add nsw i32 %154, 1
  %159 = srem i32 %158, 32
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %160, i32 1
  store i32 %136, i32* %161, align 4
  %162 = add nsw i32 %148, -2
  br label %163

163:                                              ; preds = %157, %151
  %164 = phi i32 [ %162, %157 ], [ %149, %151 ]
  %165 = phi i32 [ %159, %157 ], [ %154, %151 ]
  %166 = icmp eq i32 %148, 1
  br i1 %166, label %180, label %167

167:                                              ; preds = %163, %167
  %168 = phi i32 [ %178, %167 ], [ %164, %163 ]
  %169 = phi i32 [ %175, %167 ], [ %165, %163 ]
  %170 = add nsw i32 %169, 1
  %171 = srem i32 %170, 32
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %172, i32 1
  store i32 %136, i32* %173, align 4
  %174 = add nsw i32 %171, 1
  %175 = srem i32 %174, 32
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.UScriptRun, %struct.UScriptRun* %0, i64 0, i32 5, i64 %176, i32 1
  store i32 %136, i32* %177, align 4
  %178 = add nsw i32 %168, -2
  %179 = icmp sgt i32 %168, 1
  br i1 %179, label %167, label %180

180:                                              ; preds = %167, %163
  store i32 -1, i32* %15, align 4
  br label %181

181:                                              ; preds = %180, %146, %143
  %182 = xor i1 %86, true
  %183 = and i32 %85, 1
  %184 = icmp eq i32 %183, 0
  %185 = or i1 %184, %182
  br i1 %185, label %206, label %186

186:                                              ; preds = %181
  %187 = load i32, i32* %19, align 8
  %188 = icmp slt i32 %187, 1
  br i1 %188, label %206, label %189

189:                                              ; preds = %186
  %190 = load i32, i32* %15, align 4
  %191 = icmp sgt i32 %190, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %189
  %193 = add nsw i32 %190, -1
  store i32 %193, i32* %15, align 4
  br label %194

194:                                              ; preds = %192, %189
  %195 = add nsw i32 %187, -1
  store i32 %195, i32* %19, align 8
  %196 = load i32, i32* %20, align 4
  %197 = add nsw i32 %196, 31
  %198 = srem i32 %197, 32
  %199 = icmp slt i32 %187, 2
  %200 = select i1 %199, i32 -1, i32 %198
  store i32 %200, i32* %20, align 4
  br label %206

201:                                              ; preds = %135
  %202 = icmp sgt i32 %47, 65535
  br i1 %202, label %203, label %211

203:                                              ; preds = %201
  %204 = load i32, i32* %9, align 4
  %205 = add nsw i32 %204, -1
  store i32 %205, i32* %9, align 4
  br label %211

206:                                              ; preds = %194, %186, %181
  %207 = load i32, i32* %9, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %9, align 4
  %209 = load i32, i32* %11, align 8
  %210 = icmp slt i32 %208, %209
  br i1 %210, label %21, label %211

211:                                              ; preds = %206, %201, %203
  %212 = icmp eq i32* %1, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %211
  %214 = load i32, i32* %17, align 8
  store i32 %214, i32* %1, align 4
  br label %215

215:                                              ; preds = %211, %213
  %216 = icmp eq i32* %2, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = load i32, i32* %9, align 4
  store i32 %218, i32* %2, align 4
  br label %219

219:                                              ; preds = %215, %217
  %220 = icmp eq i32* %3, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %219
  %222 = load i32, i32* %16, align 8
  store i32 %222, i32* %3, align 4
  br label %223

223:                                              ; preds = %221, %219, %4, %8
  %224 = phi i8 [ 0, %8 ], [ 0, %4 ], [ 1, %219 ], [ 1, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i8 %224
}

declare i32 @uscript_getScript_69(i32, i32*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind allocsize(0) }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
