; ModuleID = '../../third_party/blink/renderer/modules/websockets/websocket_common.cc'
source_filename = "../../third_party/blink/renderer/modules/websockets/websocket_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebSocketCommon" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.31", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.37", %"class.blink::Member.39", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.48", %"class.blink::Member.54", %"class.blink::Member.56", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.6" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.6" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.7" }
%"class.blink::HeapHashMap.7" = type { %"class.WTF::HashMap.10" }
%"class.WTF::HashMap.10" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"struct.WTF::KeyValuePair.13"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.13" = type { i8*, %"class.blink::Member.148" }
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.150" }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.14, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.28", i32, i32 }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.15 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.15 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.28" = type { %"class.WTF::HashTable.29" }
%"class.WTF::HashTable.29" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.35"*, i32, i32 }
%"class.blink::Member.35" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.41", i32, i32 }
%"class.blink::HeapHashMap.41" = type { %"class.WTF::HashMap.44" }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.47"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.47" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.39", i8, [7 x i8], %"class.WTF::Vector.60", %"class.blink::HeapVector.100", i8, [7 x i8], %"class.WTF::HashSet.28", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.66", %"class.WTF::HashMap.73", %"class.WTF::HashMap.78", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.83", i32, %"class.mojo::StructPtr.88", %"class.WTF::Vector.83" }
%"class.mojo::StructPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.73" = type { %"class.WTF::HashTable.74" }
%"class.WTF::HashTable.74" = type <{ %"struct.WTF::KeyValuePair.77"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.77" = type opaque
%"class.WTF::HashMap.78" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"struct.WTF::KeyValuePair.82"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.82" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.88" = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.83", i8, i8, [6 x i8] }>
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.100" = type { %"class.WTF::Vector.103" }
%"class.WTF::Vector.103" = type { %"class.WTF::VectorBuffer.104" }
%"class.WTF::VectorBuffer.104" = type { %"class.WTF::VectorBufferBase.105" }
%"class.WTF::VectorBufferBase.105" = type { %"class.blink::Member.106"*, i32, i32 }
%"class.blink::Member.106" = type opaque
%"class.blink::WebSocketChannel" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.114" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.112 }
%union.anon.112 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.GURL* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.120", i8* }
%"class.WTF::StringAppend.120" = type { i8*, %"class.WTF::String" }
%"class.WTF::HashSet.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.160" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.137, i32, i8, i8, [2 x i8] }>
%union.anon.137 = type { %"class.WTF::Vector.138" }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140", [16 x i8] }
%"class.WTF::VectorBufferBase.140" = type { i8*, i32, i32 }
%"class.WTF::IntegerToStringConverter.170" = type <{ [24 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.128", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145", [16 x i8] }
%"class.WTF::VectorBufferBase.145" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.161" = type { %"class.WTF::StringTypeAdapter.162" }
%"class.WTF::StringTypeAdapter.162" = type { %"class.WTF::StringView" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"wss\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"The URL '\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"' is invalid.\00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"The URL's scheme must be either 'ws' or 'wss'. '\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"' is not allowed.\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"The URL contains a fragment identifier ('\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"'). Fragment identifiers are not allowed in WebSocket URLs.\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"The subprotocol '\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"' is duplicated.\00", align 1
@_ZN5blink12_GLOBAL__N_130kWebSocketSubprotocolSeparatorE = internal constant [3 x i8] c", \00", align 1
@.str.10 = private unnamed_addr constant [85 x i8] c"An insecure WebSocket connection may not be initiated from a page loaded over HTTPS.\00", align 1
@.str.11 = private unnamed_addr constant [57 x i8] c"The code must be either 1000, or between 3000 and 4999. \00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c" is neither.\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"The message must not be greater than \00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c" bytes.\00", align 1
@.str.15 = private unnamed_addr constant [58 x i8] c"WebSocket is closed before the connection is established.\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"\5Cu%04X\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.22 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.27 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15WebSocketCommon7ConnectEPNS_16ExecutionContextERKN3WTF6StringERKNS3_6VectorIS4_Lj0ENS3_18PartitionAllocatorEEEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.83"* dereferenceable(16), %"class.blink::WebSocketChannel"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringAppend", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca %"class.WTF::HashSet.121", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::StringAppend", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #10
  %27 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #10
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %9, %"class.blink::KURL"* dereferenceable(112) %27, %"class.WTF::String"* dereferenceable(8) %2) #10
  %28 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 0
  %29 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %28, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #10
  %30 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %112, label %34

34:                                               ; preds = %6
  %35 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %28) #10
  %36 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %40, i64* %41, align 8
  br label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %50

50:                                               ; preds = %42, %38
  %51 = phi i64 [ %49, %42 ], [ %40, %38 ]
  %52 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %51, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 2, i32* %57, align 8
  %58 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  br i1 %58, label %59, label %63

59:                                               ; preds = %50
  %60 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %60) #10
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %10, %"class.blink::KURL"* %28) #10
  %61 = call zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* nonnull dereferenceable(120) %10) #10
  %62 = xor i1 %61, true
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %60) #10
  br label %63

63:                                               ; preds = %50, %59
  %64 = phi i1 [ %62, %59 ], [ false, %50 ]
  br i1 %37, label %78, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #10
  br i1 %64, label %79, label %112

78:                                               ; preds = %74, %63
  br i1 %64, label %79, label %112

79:                                               ; preds = %77, %78
  %80 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %81 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 3
  %82 = icmp eq %"class.blink::UseCounter"* %81, null
  %83 = or i1 %80, %82
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.blink::UseCounter"* %81 to void (%"class.blink::UseCounter"*, i32)***
  %86 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %86, i64 3
  %88 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %87, align 8
  call void %88(%"class.blink::UseCounter"* nonnull %81, i32 3078) #10
  br label %89

89:                                               ; preds = %79, %84
  %90 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #10
  %91 = call zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"* %28, %"class.WTF::String"* nonnull dereferenceable(8) %11) #10
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #10
  br label %108

108:                                              ; preds = %89, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #10
  %109 = call zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"* %28) #10
  %110 = icmp eq i16 %109, 80
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"* %28, i16 zeroext 443) #10
  br label %112

112:                                              ; preds = %6, %77, %108, %111, %78
  %113 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %28) #10
  br i1 %113, label %265, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %115, align 8
  %116 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #10
  %117 = bitcast %"class.WTF::StringAppend"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #10
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %196, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #10
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #10
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %136, %121
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = load atomic i32, i32* %122 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %153

143:                                              ; preds = %138
  %144 = zext i32 %139 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #10
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %143
  call void @llvm.trap() #10
  unreachable

151:                                              ; preds = %143
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %126, align 4
  br label %153

153:                                              ; preds = %151, %138
  %154 = phi i32 [ %152, %151 ], [ %139, %138 ]
  %155 = load atomic i32, i32* %122 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %153
  %159 = add i32 %154, -1
  store i32 %159, i32* %126, align 4
  br label %160

160:                                              ; preds = %158, %153
  %161 = phi i32 [ %159, %158 ], [ %154, %153 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #10
  br label %164

164:                                              ; preds = %160, %163
  %165 = load atomic i32, i32* %122 monotonic, align 4, !noalias !3
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = load i32, i32* %126, align 4
  br i1 %167, label %169, label %179

169:                                              ; preds = %164
  %170 = zext i32 %168 to i33
  %171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #10
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %169
  call void @llvm.trap() #10, !noalias !3
  unreachable

177:                                              ; preds = %169
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %126, align 4, !noalias !3
  br label %179

179:                                              ; preds = %164, %177
  %180 = phi i32 [ %178, %177 ], [ %168, %164 ]
  %181 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  store i64 ptrtoint ([10 x i8]* @.str.2 to i64), i64* %181, align 8, !alias.scope !3
  %182 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %182, align 8, !alias.scope !3
  %183 = load atomic i32, i32* %122 monotonic, align 4, !noalias !3
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %200

186:                                              ; preds = %179
  %187 = zext i32 %180 to i33
  %188 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #10
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !2

193:                                              ; preds = %186
  call void @llvm.trap() #10, !noalias !3
  unreachable

194:                                              ; preds = %186
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %126, align 4, !noalias !3
  br label %200

196:                                              ; preds = %114
  %197 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  store i64 ptrtoint ([10 x i8]* @.str.2 to i64), i64* %197, align 8, !alias.scope !3
  %198 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %198, align 8, !alias.scope !3
  %199 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %199, align 8, !alias.scope !3
  br label %212

200:                                              ; preds = %194, %179
  %201 = phi i32 [ %195, %194 ], [ %180, %179 ]
  %202 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %202, align 8, !alias.scope !3
  %203 = load atomic i32, i32* %122 monotonic, align 4, !noalias !3
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %200
  %207 = add i32 %201, -1
  store i32 %207, i32* %126, align 4, !noalias !3
  br label %208

208:                                              ; preds = %206, %200
  %209 = phi i32 [ %207, %206 ], [ %201, %200 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #10, !noalias !3
  br label %212

212:                                              ; preds = %196, %208, %211
  %213 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %13)
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %214, align 8
  %215 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %216 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %215, align 8
  %217 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %216, align 8
  call void %217(%"class.blink::ExceptionState"* %5, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %12) #10
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #10
  br label %233

233:                                              ; preds = %212, %229, %232
  %234 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #10
  br label %250

250:                                              ; preds = %233, %246, %249
  br i1 %120, label %264, label %251

251:                                              ; preds = %250
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #10
  br label %264

264:                                              ; preds = %250, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #10
  br label %1093

265:                                              ; preds = %112
  %266 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %267 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %268, align 8
  %269 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 2, i32* %269, align 8
  %270 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %28, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %14) #10
  br i1 %270, label %439, label %271

271:                                              ; preds = %265
  %272 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %273 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %274, align 8
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 3, i32* %275, align 8
  %276 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %28, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %15) #10
  br i1 %276, label %439, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %278, align 8
  %279 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #10
  %280 = bitcast %"class.WTF::StringAppend"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #10
  %281 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %28) #10
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %358, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %300

290:                                              ; preds = %283
  %291 = zext i32 %289 to i33
  %292 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %291, i33 1) #10
  %293 = extractvalue { i33, i1 } %292, 1
  %294 = extractvalue { i33, i1 } %292, 0
  %295 = icmp slt i33 %294, 0
  %296 = or i1 %293, %295
  br i1 %296, label %297, label %298, !prof !2

297:                                              ; preds = %290
  call void @llvm.trap() #10
  unreachable

298:                                              ; preds = %290
  %299 = trunc i33 %294 to i32
  store i32 %299, i32* %288, align 4
  br label %300

300:                                              ; preds = %298, %283
  %301 = phi i32 [ %299, %298 ], [ %289, %283 ]
  %302 = load atomic i32, i32* %284 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %315

305:                                              ; preds = %300
  %306 = zext i32 %301 to i33
  %307 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %306, i33 1) #10
  %308 = extractvalue { i33, i1 } %307, 1
  %309 = extractvalue { i33, i1 } %307, 0
  %310 = icmp slt i33 %309, 0
  %311 = or i1 %308, %310
  br i1 %311, label %312, label %313, !prof !2

312:                                              ; preds = %305
  call void @llvm.trap() #10
  unreachable

313:                                              ; preds = %305
  %314 = trunc i33 %309 to i32
  store i32 %314, i32* %288, align 4
  br label %315

315:                                              ; preds = %313, %300
  %316 = phi i32 [ %314, %313 ], [ %301, %300 ]
  %317 = load atomic i32, i32* %284 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %315
  %321 = add i32 %316, -1
  store i32 %321, i32* %288, align 4
  br label %322

322:                                              ; preds = %320, %315
  %323 = phi i32 [ %321, %320 ], [ %316, %315 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #10
  br label %326

326:                                              ; preds = %322, %325
  %327 = load atomic i32, i32* %284 monotonic, align 4, !noalias !6
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = load i32, i32* %288, align 4
  br i1 %329, label %331, label %341

331:                                              ; preds = %326
  %332 = zext i32 %330 to i33
  %333 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %332, i33 1) #10
  %334 = extractvalue { i33, i1 } %333, 1
  %335 = extractvalue { i33, i1 } %333, 0
  %336 = icmp slt i33 %335, 0
  %337 = or i1 %334, %336
  br i1 %337, label %338, label %339, !prof !2

338:                                              ; preds = %331
  call void @llvm.trap() #10, !noalias !6
  unreachable

339:                                              ; preds = %331
  %340 = trunc i33 %335 to i32
  store i32 %340, i32* %288, align 4, !noalias !6
  br label %341

341:                                              ; preds = %326, %339
  %342 = phi i32 [ %340, %339 ], [ %330, %326 ]
  %343 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  store i64 ptrtoint ([49 x i8]* @.str.4 to i64), i64* %343, align 8, !alias.scope !6
  %344 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %344, align 8, !alias.scope !6
  %345 = load atomic i32, i32* %284 monotonic, align 4, !noalias !6
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %362

348:                                              ; preds = %341
  %349 = zext i32 %342 to i33
  %350 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %349, i33 1) #10
  %351 = extractvalue { i33, i1 } %350, 1
  %352 = extractvalue { i33, i1 } %350, 0
  %353 = icmp slt i33 %352, 0
  %354 = or i1 %351, %353
  br i1 %354, label %355, label %356, !prof !2

355:                                              ; preds = %348
  call void @llvm.trap() #10, !noalias !6
  unreachable

356:                                              ; preds = %348
  %357 = trunc i33 %352 to i32
  store i32 %357, i32* %288, align 4, !noalias !6
  br label %362

358:                                              ; preds = %277
  %359 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  store i64 ptrtoint ([49 x i8]* @.str.4 to i64), i64* %359, align 8, !alias.scope !6
  %360 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %360, align 8, !alias.scope !6
  %361 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8** %361, align 8, !alias.scope !6
  br label %374

362:                                              ; preds = %356, %341
  %363 = phi i32 [ %357, %356 ], [ %342, %341 ]
  %364 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8** %364, align 8, !alias.scope !6
  %365 = load atomic i32, i32* %284 monotonic, align 4, !noalias !6
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %362
  %369 = add i32 %363, -1
  store i32 %369, i32* %288, align 4, !noalias !6
  br label %370

370:                                              ; preds = %368, %362
  %371 = phi i32 [ %369, %368 ], [ %363, %362 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #10, !noalias !6
  br label %374

374:                                              ; preds = %358, %370, %373
  %375 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %17)
  %376 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %375, %"class.WTF::StringImpl"** %376, align 8
  %377 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %378 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %377, align 8
  %379 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %378, align 8
  call void %379(%"class.blink::ExceptionState"* %5, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %16) #10
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %376, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %374
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #10
  br label %395

395:                                              ; preds = %374, %391, %394
  %396 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %396, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %412, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load atomic i32, i32* %400 monotonic, align 4
  %402 = and i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  br i1 %403, label %406, label %408

406:                                              ; preds = %399
  %407 = add i32 %405, -1
  store i32 %407, i32* %404, align 4
  br label %408

408:                                              ; preds = %406, %399
  %409 = phi i32 [ %407, %406 ], [ %405, %399 ]
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %408
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %397) #10
  br label %412

412:                                              ; preds = %395, %408, %411
  br i1 %282, label %438, label %413

413:                                              ; preds = %412
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #10
  %426 = load i32, i32* %418, align 4
  br label %427

427:                                              ; preds = %422, %425
  %428 = phi i32 [ %423, %422 ], [ %426, %425 ]
  %429 = load atomic i32, i32* %414 monotonic, align 4
  %430 = and i32 %429, 2
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %434

432:                                              ; preds = %427
  %433 = add i32 %428, -1
  store i32 %433, i32* %418, align 4
  br label %434

434:                                              ; preds = %432, %427
  %435 = phi i32 [ %433, %432 ], [ %428, %427 ]
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %434
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #10
  br label %438

438:                                              ; preds = %412, %434, %437
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #10
  br label %1093

439:                                              ; preds = %271, %265
  %440 = call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %28) #10
  br i1 %440, label %441, label %603

441:                                              ; preds = %439
  %442 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %442, align 8
  %443 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %443) #10
  %444 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %444) #10
  %445 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* %28) #10
  %446 = icmp eq %"class.WTF::StringImpl"* %445, null
  br i1 %446, label %522, label %447

447:                                              ; preds = %441
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load atomic i32, i32* %448 monotonic, align 4
  %450 = and i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 0
  %453 = load i32, i32* %452, align 4
  br i1 %451, label %454, label %464

454:                                              ; preds = %447
  %455 = zext i32 %453 to i33
  %456 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %455, i33 1) #10
  %457 = extractvalue { i33, i1 } %456, 1
  %458 = extractvalue { i33, i1 } %456, 0
  %459 = icmp slt i33 %458, 0
  %460 = or i1 %457, %459
  br i1 %460, label %461, label %462, !prof !2

461:                                              ; preds = %454
  call void @llvm.trap() #10
  unreachable

462:                                              ; preds = %454
  %463 = trunc i33 %458 to i32
  store i32 %463, i32* %452, align 4
  br label %464

464:                                              ; preds = %462, %447
  %465 = phi i32 [ %463, %462 ], [ %453, %447 ]
  %466 = load atomic i32, i32* %448 monotonic, align 4
  %467 = and i32 %466, 2
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %479

469:                                              ; preds = %464
  %470 = zext i32 %465 to i33
  %471 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %470, i33 1) #10
  %472 = extractvalue { i33, i1 } %471, 1
  %473 = extractvalue { i33, i1 } %471, 0
  %474 = icmp slt i33 %473, 0
  %475 = or i1 %472, %474
  br i1 %475, label %476, label %477, !prof !2

476:                                              ; preds = %469
  call void @llvm.trap() #10
  unreachable

477:                                              ; preds = %469
  %478 = trunc i33 %473 to i32
  store i32 %478, i32* %452, align 4
  br label %479

479:                                              ; preds = %477, %464
  %480 = phi i32 [ %478, %477 ], [ %465, %464 ]
  %481 = load atomic i32, i32* %448 monotonic, align 4
  %482 = and i32 %481, 2
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %486

484:                                              ; preds = %479
  %485 = add i32 %480, -1
  store i32 %485, i32* %452, align 4
  br label %486

486:                                              ; preds = %484, %479
  %487 = phi i32 [ %485, %484 ], [ %480, %479 ]
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %486
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #10
  br label %490

490:                                              ; preds = %486, %489
  %491 = load atomic i32, i32* %448 monotonic, align 4, !noalias !9
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = load i32, i32* %452, align 4
  br i1 %493, label %495, label %505

495:                                              ; preds = %490
  %496 = zext i32 %494 to i33
  %497 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %496, i33 1) #10
  %498 = extractvalue { i33, i1 } %497, 1
  %499 = extractvalue { i33, i1 } %497, 0
  %500 = icmp slt i33 %499, 0
  %501 = or i1 %498, %500
  br i1 %501, label %502, label %503, !prof !2

502:                                              ; preds = %495
  call void @llvm.trap() #10, !noalias !9
  unreachable

503:                                              ; preds = %495
  %504 = trunc i33 %499 to i32
  store i32 %504, i32* %452, align 4, !noalias !9
  br label %505

505:                                              ; preds = %490, %503
  %506 = phi i32 [ %504, %503 ], [ %494, %490 ]
  %507 = bitcast %"class.WTF::StringAppend"* %19 to i64*
  store i64 ptrtoint ([42 x i8]* @.str.6 to i64), i64* %507, align 8, !alias.scope !9
  %508 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %445, %"class.WTF::StringImpl"** %508, align 8, !alias.scope !9
  %509 = load atomic i32, i32* %448 monotonic, align 4, !noalias !9
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %526

512:                                              ; preds = %505
  %513 = zext i32 %506 to i33
  %514 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %513, i33 1) #10
  %515 = extractvalue { i33, i1 } %514, 1
  %516 = extractvalue { i33, i1 } %514, 0
  %517 = icmp slt i33 %516, 0
  %518 = or i1 %515, %517
  br i1 %518, label %519, label %520, !prof !2

519:                                              ; preds = %512
  call void @llvm.trap() #10, !noalias !9
  unreachable

520:                                              ; preds = %512
  %521 = trunc i33 %516 to i32
  store i32 %521, i32* %452, align 4, !noalias !9
  br label %526

522:                                              ; preds = %441
  %523 = bitcast %"class.WTF::StringAppend"* %19 to i64*
  store i64 ptrtoint ([42 x i8]* @.str.6 to i64), i64* %523, align 8, !alias.scope !9
  %524 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %524, align 8, !alias.scope !9
  %525 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0), i8** %525, align 8, !alias.scope !9
  br label %538

526:                                              ; preds = %520, %505
  %527 = phi i32 [ %521, %520 ], [ %506, %505 ]
  %528 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0), i8** %528, align 8, !alias.scope !9
  %529 = load atomic i32, i32* %448 monotonic, align 4, !noalias !9
  %530 = and i32 %529, 2
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %534

532:                                              ; preds = %526
  %533 = add i32 %527, -1
  store i32 %533, i32* %452, align 4, !noalias !9
  br label %534

534:                                              ; preds = %532, %526
  %535 = phi i32 [ %533, %532 ], [ %527, %526 ]
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %538

537:                                              ; preds = %534
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #10, !noalias !9
  br label %538

538:                                              ; preds = %522, %534, %537
  %539 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %19)
  %540 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %539, %"class.WTF::StringImpl"** %540, align 8
  %541 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %542 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %541, align 8
  %543 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %542, align 8
  call void %543(%"class.blink::ExceptionState"* %5, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %18) #10
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %540, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %545, label %559, label %546

546:                                              ; preds = %538
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = and i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  br i1 %550, label %553, label %555

553:                                              ; preds = %546
  %554 = add i32 %552, -1
  store i32 %554, i32* %551, align 4
  br label %555

555:                                              ; preds = %553, %546
  %556 = phi i32 [ %554, %553 ], [ %552, %546 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #10
  br label %559

559:                                              ; preds = %538, %555, %558
  %560 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %561, null
  br i1 %562, label %576, label %563

563:                                              ; preds = %559
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 0
  %569 = load i32, i32* %568, align 4
  br i1 %567, label %570, label %572

570:                                              ; preds = %563
  %571 = add i32 %569, -1
  store i32 %571, i32* %568, align 4
  br label %572

572:                                              ; preds = %570, %563
  %573 = phi i32 [ %571, %570 ], [ %569, %563 ]
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %572
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %561) #10
  br label %576

576:                                              ; preds = %559, %572, %575
  br i1 %446, label %602, label %577

577:                                              ; preds = %576
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load atomic i32, i32* %578 monotonic, align 4
  %580 = and i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  br i1 %581, label %584, label %586

584:                                              ; preds = %577
  %585 = add i32 %583, -1
  store i32 %585, i32* %582, align 4
  br label %586

586:                                              ; preds = %584, %577
  %587 = phi i32 [ %585, %584 ], [ %583, %577 ]
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %591

589:                                              ; preds = %586
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #10
  %590 = load i32, i32* %582, align 4
  br label %591

591:                                              ; preds = %586, %589
  %592 = phi i32 [ %587, %586 ], [ %590, %589 ]
  %593 = load atomic i32, i32* %578 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %598

596:                                              ; preds = %591
  %597 = add i32 %592, -1
  store i32 %597, i32* %582, align 4
  br label %598

598:                                              ; preds = %596, %591
  %599 = phi i32 [ %597, %596 ], [ %592, %591 ]
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %602

601:                                              ; preds = %598
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #10
  br label %602

602:                                              ; preds = %576, %598, %601
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %444) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %443) #10
  br label %1093

603:                                              ; preds = %439
  %604 = call %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext39GetContentSecurityPolicyForCurrentWorldEv(%"class.blink::ExecutionContext"* %1) #10
  %605 = call zeroext i1 @_ZN5blink21ContentSecurityPolicy20AllowConnectToSourceERKNS_4KURLES3_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"* %604, %"class.blink::KURL"* dereferenceable(112) %28, %"class.blink::KURL"* dereferenceable(112) %28, i8 zeroext 1, i32 1, i32 0) #10
  br i1 %605, label %608, label %606

606:                                              ; preds = %603
  %607 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %607, align 8
  br label %1093

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %3, i64 0, i32 0, i32 0, i32 0
  %610 = load %"class.WTF::String"*, %"class.WTF::String"** %609, align 8
  %611 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %3, i64 0, i32 0, i32 0, i32 2
  %612 = load i32, i32* %611, align 4
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %610, i64 %613
  %615 = icmp eq i32 %612, 0
  br i1 %615, label %820, label %616

616:                                              ; preds = %608, %816
  %617 = phi %"class.WTF::String"* [ %817, %816 ], [ %610, %608 ]
  %618 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %617, i64 0, i32 0, i32 0
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %619, null
  br i1 %620, label %655, label %621

621:                                              ; preds = %616
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 1
  %623 = load i32, i32* %622, align 4
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %655, label %625

625:                                              ; preds = %621
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 1
  %628 = bitcast %"class.WTF::StringImpl"* %627 to i8*
  %629 = bitcast %"class.WTF::StringImpl"* %627 to i16*
  %630 = zext i32 %623 to i64
  br label %631

631:                                              ; preds = %652, %625
  %632 = phi i64 [ %653, %652 ], [ 0, %625 ]
  %633 = load atomic i32, i32* %626 monotonic, align 4
  %634 = and i32 %633, 1
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %640, label %636

636:                                              ; preds = %631
  %637 = getelementptr inbounds i8, i8* %628, i64 %632
  %638 = load i8, i8* %637, align 1
  %639 = zext i8 %638 to i16
  br label %643

640:                                              ; preds = %631
  %641 = getelementptr inbounds i16, i16* %629, i64 %632
  %642 = load i16, i16* %641, align 2
  br label %643

643:                                              ; preds = %640, %636
  %644 = phi i16 [ %639, %636 ], [ %642, %640 ]
  switch i16 %644, label %645 [
    i16 34, label %655
    i16 40, label %655
    i16 41, label %655
    i16 44, label %655
    i16 47, label %655
  ]

645:                                              ; preds = %643
  %646 = add i16 %644, -58
  %647 = icmp ugt i16 %646, 6
  %648 = add i16 %644, -33
  %649 = icmp ult i16 %648, 94
  %650 = and i1 %647, %649
  br i1 %650, label %651, label %655

651:                                              ; preds = %645
  switch i16 %644, label %652 [
    i16 125, label %655
    i16 123, label %655
    i16 93, label %655
    i16 92, label %655
    i16 91, label %655
  ]

652:                                              ; preds = %651
  %653 = add nuw nsw i64 %632, 1
  %654 = icmp eq i64 %653, %630
  br i1 %654, label %816, label %631

655:                                              ; preds = %616, %621, %651, %651, %651, %651, %651, %645, %643, %643, %643, %643, %643
  %656 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %656, align 8
  %657 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %657) #10
  %658 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %658) #10
  %659 = call %"class.WTF::StringImpl"* @_ZN5blink15WebSocketCommon23EncodeSubprotocolStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %617)
  %660 = icmp eq %"class.WTF::StringImpl"* %659, null
  br i1 %660, label %736, label %661

661:                                              ; preds = %655
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %659, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = load atomic i32, i32* %662 monotonic, align 4
  %664 = and i32 %663, 2
  %665 = icmp eq i32 %664, 0
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %659, i64 0, i32 0
  %667 = load i32, i32* %666, align 4
  br i1 %665, label %668, label %678

668:                                              ; preds = %661
  %669 = zext i32 %667 to i33
  %670 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %669, i33 1) #10
  %671 = extractvalue { i33, i1 } %670, 1
  %672 = extractvalue { i33, i1 } %670, 0
  %673 = icmp slt i33 %672, 0
  %674 = or i1 %671, %673
  br i1 %674, label %675, label %676, !prof !2

675:                                              ; preds = %668
  call void @llvm.trap() #10
  unreachable

676:                                              ; preds = %668
  %677 = trunc i33 %672 to i32
  store i32 %677, i32* %666, align 4
  br label %678

678:                                              ; preds = %676, %661
  %679 = phi i32 [ %677, %676 ], [ %667, %661 ]
  %680 = load atomic i32, i32* %662 monotonic, align 4
  %681 = and i32 %680, 2
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %693

683:                                              ; preds = %678
  %684 = zext i32 %679 to i33
  %685 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %684, i33 1) #10
  %686 = extractvalue { i33, i1 } %685, 1
  %687 = extractvalue { i33, i1 } %685, 0
  %688 = icmp slt i33 %687, 0
  %689 = or i1 %686, %688
  br i1 %689, label %690, label %691, !prof !2

690:                                              ; preds = %683
  call void @llvm.trap() #10
  unreachable

691:                                              ; preds = %683
  %692 = trunc i33 %687 to i32
  store i32 %692, i32* %666, align 4
  br label %693

693:                                              ; preds = %691, %678
  %694 = phi i32 [ %692, %691 ], [ %679, %678 ]
  %695 = load atomic i32, i32* %662 monotonic, align 4
  %696 = and i32 %695, 2
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %700

698:                                              ; preds = %693
  %699 = add i32 %694, -1
  store i32 %699, i32* %666, align 4
  br label %700

700:                                              ; preds = %698, %693
  %701 = phi i32 [ %699, %698 ], [ %694, %693 ]
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %703, label %704

703:                                              ; preds = %700
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %659) #10
  br label %704

704:                                              ; preds = %700, %703
  %705 = load atomic i32, i32* %662 monotonic, align 4, !noalias !12
  %706 = and i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = load i32, i32* %666, align 4
  br i1 %707, label %709, label %719

709:                                              ; preds = %704
  %710 = zext i32 %708 to i33
  %711 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %710, i33 1) #10
  %712 = extractvalue { i33, i1 } %711, 1
  %713 = extractvalue { i33, i1 } %711, 0
  %714 = icmp slt i33 %713, 0
  %715 = or i1 %712, %714
  br i1 %715, label %716, label %717, !prof !2

716:                                              ; preds = %709
  call void @llvm.trap() #10, !noalias !12
  unreachable

717:                                              ; preds = %709
  %718 = trunc i33 %713 to i32
  store i32 %718, i32* %666, align 4, !noalias !12
  br label %719

719:                                              ; preds = %704, %717
  %720 = phi i32 [ %718, %717 ], [ %708, %704 ]
  %721 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.8 to i64), i64* %721, align 8, !alias.scope !12
  %722 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %659, %"class.WTF::StringImpl"** %722, align 8, !alias.scope !12
  %723 = load atomic i32, i32* %662 monotonic, align 4, !noalias !12
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %740

726:                                              ; preds = %719
  %727 = zext i32 %720 to i33
  %728 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %727, i33 1) #10
  %729 = extractvalue { i33, i1 } %728, 1
  %730 = extractvalue { i33, i1 } %728, 0
  %731 = icmp slt i33 %730, 0
  %732 = or i1 %729, %731
  br i1 %732, label %733, label %734, !prof !2

733:                                              ; preds = %726
  call void @llvm.trap() #10, !noalias !12
  unreachable

734:                                              ; preds = %726
  %735 = trunc i33 %730 to i32
  store i32 %735, i32* %666, align 4, !noalias !12
  br label %740

736:                                              ; preds = %655
  %737 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.8 to i64), i64* %737, align 8, !alias.scope !12
  %738 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %738, align 8, !alias.scope !12
  %739 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %739, align 8, !alias.scope !12
  br label %752

740:                                              ; preds = %734, %719
  %741 = phi i32 [ %735, %734 ], [ %720, %719 ]
  %742 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %742, align 8, !alias.scope !12
  %743 = load atomic i32, i32* %662 monotonic, align 4, !noalias !12
  %744 = and i32 %743, 2
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %748

746:                                              ; preds = %740
  %747 = add i32 %741, -1
  store i32 %747, i32* %666, align 4, !noalias !12
  br label %748

748:                                              ; preds = %746, %740
  %749 = phi i32 [ %747, %746 ], [ %741, %740 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %659) #10, !noalias !12
  br label %752

752:                                              ; preds = %736, %748, %751
  %753 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %21)
  %754 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %753, %"class.WTF::StringImpl"** %754, align 8
  %755 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %756 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %755, align 8
  %757 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %756, align 8
  call void %757(%"class.blink::ExceptionState"* %5, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %20) #10
  %758 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %754, align 8
  %759 = icmp eq %"class.WTF::StringImpl"* %758, null
  br i1 %759, label %773, label %760

760:                                              ; preds = %752
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %758, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %762 = load atomic i32, i32* %761 monotonic, align 4
  %763 = and i32 %762, 2
  %764 = icmp eq i32 %763, 0
  %765 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %758, i64 0, i32 0
  %766 = load i32, i32* %765, align 4
  br i1 %764, label %767, label %769

767:                                              ; preds = %760
  %768 = add i32 %766, -1
  store i32 %768, i32* %765, align 4
  br label %769

769:                                              ; preds = %767, %760
  %770 = phi i32 [ %768, %767 ], [ %766, %760 ]
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %772, label %773

772:                                              ; preds = %769
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %758) #10
  br label %773

773:                                              ; preds = %752, %769, %772
  %774 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %775 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %774, align 8
  %776 = icmp eq %"class.WTF::StringImpl"* %775, null
  br i1 %776, label %790, label %777

777:                                              ; preds = %773
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load atomic i32, i32* %778 monotonic, align 4
  %780 = and i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  br i1 %781, label %784, label %786

784:                                              ; preds = %777
  %785 = add i32 %783, -1
  store i32 %785, i32* %782, align 4
  br label %786

786:                                              ; preds = %784, %777
  %787 = phi i32 [ %785, %784 ], [ %783, %777 ]
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %790

789:                                              ; preds = %786
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %775) #10
  br label %790

790:                                              ; preds = %773, %786, %789
  br i1 %660, label %819, label %791

791:                                              ; preds = %790
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %659, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %659, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %800

798:                                              ; preds = %791
  %799 = add i32 %797, -1
  store i32 %799, i32* %796, align 4
  br label %800

800:                                              ; preds = %798, %791
  %801 = phi i32 [ %799, %798 ], [ %797, %791 ]
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %803, label %805

803:                                              ; preds = %800
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %659) #10
  %804 = load i32, i32* %796, align 4
  br label %805

805:                                              ; preds = %800, %803
  %806 = phi i32 [ %801, %800 ], [ %804, %803 ]
  %807 = load atomic i32, i32* %792 monotonic, align 4
  %808 = and i32 %807, 2
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %812

810:                                              ; preds = %805
  %811 = add i32 %806, -1
  store i32 %811, i32* %796, align 4
  br label %812

812:                                              ; preds = %810, %805
  %813 = phi i32 [ %811, %810 ], [ %806, %805 ]
  %814 = icmp eq i32 %813, 0
  br i1 %814, label %815, label %819

815:                                              ; preds = %812
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %659) #10
  br label %819

816:                                              ; preds = %652
  %817 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %617, i64 1
  %818 = icmp eq %"class.WTF::String"* %817, %614
  br i1 %818, label %820, label %616

819:                                              ; preds = %790, %812, %815
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %658) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %657) #10
  br label %1093

820:                                              ; preds = %816, %608
  %821 = bitcast %"class.WTF::HashSet.121"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %821) #10
  %822 = getelementptr inbounds %"class.WTF::HashSet.121", %"class.WTF::HashSet.121"* %22, i64 0, i32 0, i32 0
  %823 = getelementptr inbounds %"class.WTF::HashSet.121", %"class.WTF::HashSet.121"* %22, i64 0, i32 0, i32 1
  %824 = bitcast %"class.WTF::HashSet.121"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %824, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %821, i8 0, i64 20, i1 false) #10
  br i1 %615, label %825, label %828

825:                                              ; preds = %820
  %826 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %826) #10
  %827 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %827, align 8
  br label %1025

828:                                              ; preds = %820
  %829 = getelementptr inbounds %"class.WTF::HashSet.121", %"class.WTF::HashSet.121"* %22, i64 0, i32 0
  br label %830

830:                                              ; preds = %828, %997
  %831 = phi %"class.WTF::String"* [ %610, %828 ], [ %998, %997 ]
  %832 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.122"* nonnull %829, %"class.WTF::String"* dereferenceable(8) %831, %"class.WTF::String"* dereferenceable(8) %831) #10
  %833 = extractvalue { %"class.WTF::String"*, i8 } %832, 1
  %834 = and i8 %833, 1
  %835 = icmp eq i8 %834, 0
  br i1 %835, label %836, label %997

836:                                              ; preds = %830
  %837 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %837, align 8
  %838 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %838) #10
  %839 = bitcast %"class.WTF::StringAppend"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %839) #10
  %840 = call %"class.WTF::StringImpl"* @_ZN5blink15WebSocketCommon23EncodeSubprotocolStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %831)
  %841 = icmp eq %"class.WTF::StringImpl"* %840, null
  br i1 %841, label %917, label %842

842:                                              ; preds = %836
  %843 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %840, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %844 = load atomic i32, i32* %843 monotonic, align 4
  %845 = and i32 %844, 2
  %846 = icmp eq i32 %845, 0
  %847 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %840, i64 0, i32 0
  %848 = load i32, i32* %847, align 4
  br i1 %846, label %849, label %859

849:                                              ; preds = %842
  %850 = zext i32 %848 to i33
  %851 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %850, i33 1) #10
  %852 = extractvalue { i33, i1 } %851, 1
  %853 = extractvalue { i33, i1 } %851, 0
  %854 = icmp slt i33 %853, 0
  %855 = or i1 %852, %854
  br i1 %855, label %856, label %857, !prof !2

856:                                              ; preds = %849
  call void @llvm.trap() #10
  unreachable

857:                                              ; preds = %849
  %858 = trunc i33 %853 to i32
  store i32 %858, i32* %847, align 4
  br label %859

859:                                              ; preds = %857, %842
  %860 = phi i32 [ %858, %857 ], [ %848, %842 ]
  %861 = load atomic i32, i32* %843 monotonic, align 4
  %862 = and i32 %861, 2
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %864, label %874

864:                                              ; preds = %859
  %865 = zext i32 %860 to i33
  %866 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %865, i33 1) #10
  %867 = extractvalue { i33, i1 } %866, 1
  %868 = extractvalue { i33, i1 } %866, 0
  %869 = icmp slt i33 %868, 0
  %870 = or i1 %867, %869
  br i1 %870, label %871, label %872, !prof !2

871:                                              ; preds = %864
  call void @llvm.trap() #10
  unreachable

872:                                              ; preds = %864
  %873 = trunc i33 %868 to i32
  store i32 %873, i32* %847, align 4
  br label %874

874:                                              ; preds = %872, %859
  %875 = phi i32 [ %873, %872 ], [ %860, %859 ]
  %876 = load atomic i32, i32* %843 monotonic, align 4
  %877 = and i32 %876, 2
  %878 = icmp eq i32 %877, 0
  br i1 %878, label %879, label %881

879:                                              ; preds = %874
  %880 = add i32 %875, -1
  store i32 %880, i32* %847, align 4
  br label %881

881:                                              ; preds = %879, %874
  %882 = phi i32 [ %880, %879 ], [ %875, %874 ]
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %884, label %885

884:                                              ; preds = %881
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %840) #10
  br label %885

885:                                              ; preds = %881, %884
  %886 = load atomic i32, i32* %843 monotonic, align 4, !noalias !15
  %887 = and i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = load i32, i32* %847, align 4
  br i1 %888, label %890, label %900

890:                                              ; preds = %885
  %891 = zext i32 %889 to i33
  %892 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %891, i33 1) #10
  %893 = extractvalue { i33, i1 } %892, 1
  %894 = extractvalue { i33, i1 } %892, 0
  %895 = icmp slt i33 %894, 0
  %896 = or i1 %893, %895
  br i1 %896, label %897, label %898, !prof !2

897:                                              ; preds = %890
  call void @llvm.trap() #10, !noalias !15
  unreachable

898:                                              ; preds = %890
  %899 = trunc i33 %894 to i32
  store i32 %899, i32* %847, align 4, !noalias !15
  br label %900

900:                                              ; preds = %885, %898
  %901 = phi i32 [ %899, %898 ], [ %889, %885 ]
  %902 = bitcast %"class.WTF::StringAppend"* %24 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.8 to i64), i64* %902, align 8, !alias.scope !15
  %903 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %840, %"class.WTF::StringImpl"** %903, align 8, !alias.scope !15
  %904 = load atomic i32, i32* %843 monotonic, align 4, !noalias !15
  %905 = and i32 %904, 2
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %907, label %921

907:                                              ; preds = %900
  %908 = zext i32 %901 to i33
  %909 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %908, i33 1) #10
  %910 = extractvalue { i33, i1 } %909, 1
  %911 = extractvalue { i33, i1 } %909, 0
  %912 = icmp slt i33 %911, 0
  %913 = or i1 %910, %912
  br i1 %913, label %914, label %915, !prof !2

914:                                              ; preds = %907
  call void @llvm.trap() #10, !noalias !15
  unreachable

915:                                              ; preds = %907
  %916 = trunc i33 %911 to i32
  store i32 %916, i32* %847, align 4, !noalias !15
  br label %921

917:                                              ; preds = %836
  %918 = bitcast %"class.WTF::StringAppend"* %24 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.8 to i64), i64* %918, align 8, !alias.scope !15
  %919 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %919, align 8, !alias.scope !15
  %920 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8** %920, align 8, !alias.scope !15
  br label %933

921:                                              ; preds = %915, %900
  %922 = phi i32 [ %916, %915 ], [ %901, %900 ]
  %923 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8** %923, align 8, !alias.scope !15
  %924 = load atomic i32, i32* %843 monotonic, align 4, !noalias !15
  %925 = and i32 %924, 2
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %927, label %929

927:                                              ; preds = %921
  %928 = add i32 %922, -1
  store i32 %928, i32* %847, align 4, !noalias !15
  br label %929

929:                                              ; preds = %927, %921
  %930 = phi i32 [ %928, %927 ], [ %922, %921 ]
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %933

932:                                              ; preds = %929
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %840) #10, !noalias !15
  br label %933

933:                                              ; preds = %917, %929, %932
  %934 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %24)
  %935 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %934, %"class.WTF::StringImpl"** %935, align 8
  %936 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %937 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %936, align 8
  %938 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %937, align 8
  call void %938(%"class.blink::ExceptionState"* %5, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %23) #10
  %939 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %935, align 8
  %940 = icmp eq %"class.WTF::StringImpl"* %939, null
  br i1 %940, label %954, label %941

941:                                              ; preds = %933
  %942 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %939, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %943 = load atomic i32, i32* %942 monotonic, align 4
  %944 = and i32 %943, 2
  %945 = icmp eq i32 %944, 0
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %939, i64 0, i32 0
  %947 = load i32, i32* %946, align 4
  br i1 %945, label %948, label %950

948:                                              ; preds = %941
  %949 = add i32 %947, -1
  store i32 %949, i32* %946, align 4
  br label %950

950:                                              ; preds = %948, %941
  %951 = phi i32 [ %949, %948 ], [ %947, %941 ]
  %952 = icmp eq i32 %951, 0
  br i1 %952, label %953, label %954

953:                                              ; preds = %950
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %939) #10
  br label %954

954:                                              ; preds = %933, %950, %953
  %955 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %956 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %955, align 8
  %957 = icmp eq %"class.WTF::StringImpl"* %956, null
  br i1 %957, label %971, label %958

958:                                              ; preds = %954
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %956, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %960 = load atomic i32, i32* %959 monotonic, align 4
  %961 = and i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %956, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  br i1 %962, label %965, label %967

965:                                              ; preds = %958
  %966 = add i32 %964, -1
  store i32 %966, i32* %963, align 4
  br label %967

967:                                              ; preds = %965, %958
  %968 = phi i32 [ %966, %965 ], [ %964, %958 ]
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %971

970:                                              ; preds = %967
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %956) #10
  br label %971

971:                                              ; preds = %954, %967, %970
  br i1 %841, label %1000, label %972

972:                                              ; preds = %971
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %840, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %974 = load atomic i32, i32* %973 monotonic, align 4
  %975 = and i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %840, i64 0, i32 0
  %978 = load i32, i32* %977, align 4
  br i1 %976, label %979, label %981

979:                                              ; preds = %972
  %980 = add i32 %978, -1
  store i32 %980, i32* %977, align 4
  br label %981

981:                                              ; preds = %979, %972
  %982 = phi i32 [ %980, %979 ], [ %978, %972 ]
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %984, label %986

984:                                              ; preds = %981
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %840) #10
  %985 = load i32, i32* %977, align 4
  br label %986

986:                                              ; preds = %981, %984
  %987 = phi i32 [ %982, %981 ], [ %985, %984 ]
  %988 = load atomic i32, i32* %973 monotonic, align 4
  %989 = and i32 %988, 2
  %990 = icmp eq i32 %989, 0
  br i1 %990, label %991, label %993

991:                                              ; preds = %986
  %992 = add i32 %987, -1
  store i32 %992, i32* %977, align 4
  br label %993

993:                                              ; preds = %991, %986
  %994 = phi i32 [ %992, %991 ], [ %987, %986 ]
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %1000

996:                                              ; preds = %993
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %840) #10
  br label %1000

997:                                              ; preds = %830
  %998 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %831, i64 1
  %999 = icmp eq %"class.WTF::String"* %998, %614
  br i1 %999, label %1001, label %830

1000:                                             ; preds = %971, %993, %996
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %839) #10
  br label %1056

1001:                                             ; preds = %997
  %1002 = load i32, i32* %611, align 4
  %1003 = icmp eq i32 %1002, 0
  %1004 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1004) #10
  %1005 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1005, align 8
  br i1 %1003, label %1025, label %1006

1006:                                             ; preds = %1001
  %1007 = call %"class.WTF::StringImpl"* @_ZN5blink15WebSocketCommon11JoinStringsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEPKc(%"class.WTF::Vector.83"* dereferenceable(16) %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN5blink12_GLOBAL__N_130kWebSocketSubprotocolSeparatorE, i64 0, i64 0))
  %1008 = ptrtoint %"class.WTF::StringImpl"* %1007 to i64
  %1009 = bitcast %"class.WTF::String"* %25 to i64*
  %1010 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1005, align 8
  store i64 %1008, i64* %1009, align 8
  %1011 = icmp eq %"class.WTF::StringImpl"* %1010, null
  br i1 %1011, label %1025, label %1012

1012:                                             ; preds = %1006
  %1013 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1010, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1014 = load atomic i32, i32* %1013 monotonic, align 4
  %1015 = and i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1010, i64 0, i32 0
  %1018 = load i32, i32* %1017, align 4
  br i1 %1016, label %1019, label %1021

1019:                                             ; preds = %1012
  %1020 = add i32 %1018, -1
  store i32 %1020, i32* %1017, align 4
  br label %1021

1021:                                             ; preds = %1019, %1012
  %1022 = phi i32 [ %1020, %1019 ], [ %1018, %1012 ]
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1024, label %1025

1024:                                             ; preds = %1021
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1010) #10
  br label %1025

1025:                                             ; preds = %825, %1006, %1021, %1024, %1001
  %1026 = phi %"class.WTF::StringImpl"** [ %827, %825 ], [ %1005, %1006 ], [ %1005, %1021 ], [ %1005, %1024 ], [ %1005, %1001 ]
  %1027 = phi i8* [ %826, %825 ], [ %1004, %1006 ], [ %1004, %1021 ], [ %1004, %1024 ], [ %1004, %1001 ]
  %1028 = bitcast %"class.blink::WebSocketChannel"* %4 to i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)***
  %1029 = load i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)**, i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)*** %1028, align 8
  %1030 = getelementptr inbounds i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)*, i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)** %1029, i64 2
  %1031 = load i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)*, i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)** %1030, align 8
  %1032 = call zeroext i1 %1031(%"class.blink::WebSocketChannel"* %4, %"class.blink::KURL"* dereferenceable(112) %28, %"class.WTF::String"* nonnull dereferenceable(8) %25) #10
  br i1 %1032, label %1039, label %1033

1033:                                             ; preds = %1025
  %1034 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  store i32 3, i32* %1034, align 8
  call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %5, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.10, i64 0, i64 0), i8* null) #10
  %1035 = bitcast %"class.blink::WebSocketChannel"* %4 to void (%"class.blink::WebSocketChannel"*)***
  %1036 = load void (%"class.blink::WebSocketChannel"*)**, void (%"class.blink::WebSocketChannel"*)*** %1035, align 8
  %1037 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %1036, i64 8
  %1038 = load void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %1037, align 8
  call void %1038(%"class.blink::WebSocketChannel"* %4) #10
  br label %1039

1039:                                             ; preds = %1025, %1033
  %1040 = phi i32 [ 1, %1033 ], [ 0, %1025 ]
  %1041 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1026, align 8
  %1042 = icmp eq %"class.WTF::StringImpl"* %1041, null
  br i1 %1042, label %1056, label %1043

1043:                                             ; preds = %1039
  %1044 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1041, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1045 = load atomic i32, i32* %1044 monotonic, align 4
  %1046 = and i32 %1045, 2
  %1047 = icmp eq i32 %1046, 0
  %1048 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1041, i64 0, i32 0
  %1049 = load i32, i32* %1048, align 4
  br i1 %1047, label %1050, label %1052

1050:                                             ; preds = %1043
  %1051 = add i32 %1049, -1
  store i32 %1051, i32* %1048, align 4
  br label %1052

1052:                                             ; preds = %1050, %1043
  %1053 = phi i32 [ %1051, %1050 ], [ %1049, %1043 ]
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %1056

1055:                                             ; preds = %1052
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1041) #10
  br label %1056

1056:                                             ; preds = %1055, %1052, %1039, %1000
  %1057 = phi i8* [ %838, %1000 ], [ %1027, %1039 ], [ %1027, %1052 ], [ %1027, %1055 ]
  %1058 = phi i32 [ 1, %1000 ], [ %1040, %1039 ], [ %1040, %1052 ], [ %1040, %1055 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1057) #10
  %1059 = load %"class.WTF::String"*, %"class.WTF::String"** %822, align 8
  %1060 = icmp eq %"class.WTF::String"* %1059, null
  br i1 %1060, label %1092, label %1061, !prof !18

1061:                                             ; preds = %1056
  %1062 = load i32, i32* %823, align 8
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1090, label %1064

1064:                                             ; preds = %1061
  %1065 = zext i32 %1062 to i64
  br label %1066

1066:                                             ; preds = %1087, %1064
  %1067 = phi i64 [ 0, %1064 ], [ %1088, %1087 ]
  %1068 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1059, i64 %1067
  %1069 = bitcast %"class.WTF::String"* %1068 to i8**
  %1070 = load i8*, i8** %1069, align 8
  %1071 = bitcast i8* %1070 to %"class.WTF::StringImpl"*
  %1072 = ptrtoint i8* %1070 to i64
  switch i64 %1072, label %1073 [
    i64 -1, label %1087
    i64 0, label %1087
  ]

1073:                                             ; preds = %1066
  %1074 = getelementptr inbounds i8, i8* %1070, i64 8
  %1075 = bitcast i8* %1074 to i32*
  %1076 = load atomic i32, i32* %1075 monotonic, align 4
  %1077 = and i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = bitcast i8* %1070 to i32*
  %1080 = load i32, i32* %1079, align 4
  br i1 %1078, label %1081, label %1083

1081:                                             ; preds = %1073
  %1082 = add i32 %1080, -1
  store i32 %1082, i32* %1079, align 4
  br label %1083

1083:                                             ; preds = %1081, %1073
  %1084 = phi i32 [ %1082, %1081 ], [ %1080, %1073 ]
  %1085 = icmp eq i32 %1084, 0
  br i1 %1085, label %1086, label %1087

1086:                                             ; preds = %1083
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1071) #10
  br label %1087

1087:                                             ; preds = %1086, %1083, %1066, %1066
  %1088 = add nuw nsw i64 %1067, 1
  %1089 = icmp eq i64 %1088, %1065
  br i1 %1089, label %1090, label %1066

1090:                                             ; preds = %1087, %1061
  %1091 = bitcast %"class.WTF::String"* %1059 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1091) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %822, align 8
  br label %1092

1092:                                             ; preds = %1056, %1090
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %821) #10
  br label %1093

1093:                                             ; preds = %819, %1092, %606, %602, %438, %264
  %1094 = phi i32 [ 1, %602 ], [ %1058, %1092 ], [ 1, %819 ], [ 2, %606 ], [ 1, %438 ], [ 1, %264 ]
  ret i32 %1094
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.160"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #10
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %3, i8* %8) #10
  %9 = bitcast %"class.WTF::StringTypeAdapter.160"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %2, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #10
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #10
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext39GetContentSecurityPolicyForCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy20AllowConnectToSourceERKNS_4KURLES3_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15WebSocketCommon24IsValidSubprotocolStringERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %12 = bitcast %"class.WTF::StringImpl"* %11 to i8*
  %13 = bitcast %"class.WTF::StringImpl"* %11 to i16*
  %14 = zext i32 %7 to i64
  br label %15

15:                                               ; preds = %9, %40
  %16 = phi i64 [ 0, %9 ], [ %41, %40 ]
  %17 = load atomic i32, i32* %10 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %12, i64 %16
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  br label %27

24:                                               ; preds = %15
  %25 = getelementptr inbounds i16, i16* %13, i64 %16
  %26 = load i16, i16* %25, align 2
  br label %27

27:                                               ; preds = %20, %24
  %28 = phi i16 [ %23, %20 ], [ %26, %24 ]
  %29 = add i16 %28, -34
  %30 = icmp ult i16 %29, 14
  br i1 %30, label %43, label %31

31:                                               ; preds = %43, %27
  %32 = add i16 %28, -58
  %33 = icmp ugt i16 %32, 6
  %34 = add i16 %28, -33
  %35 = icmp ult i16 %34, 94
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %52

37:                                               ; preds = %31
  %38 = add i16 %28, -91
  %39 = icmp ult i16 %38, 35
  br i1 %39, label %47, label %40

40:                                               ; preds = %47, %37
  %41 = add nuw nsw i64 %16, 1
  %42 = icmp ult i64 %41, %14
  br i1 %42, label %15, label %52

43:                                               ; preds = %27
  %44 = lshr i16 9409, %29
  %45 = and i16 %44, 1
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %31, label %52

47:                                               ; preds = %37
  %48 = zext i16 %38 to i64
  %49 = lshr i64 21474836487, %48
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %40, label %52

52:                                               ; preds = %43, %47, %31, %40, %5, %1
  %53 = phi i1 [ false, %1 ], [ false, %5 ], [ false, %47 ], [ false, %43 ], [ true, %40 ], [ false, %31 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15WebSocketCommon23EncodeSubprotocolStringERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %7 = bitcast %union.anon.137* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringView"* %3 to i8*
  %13 = bitcast %"class.WTF::StringView"* %3 to i64*
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %16

16:                                               ; preds = %136, %1
  %17 = phi i64 [ %137, %136 ], [ 0, %1 ]
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i32 [ %22, %20 ], [ 0, %16 ]
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %17, %25
  br i1 %26, label %45, label %27

27:                                               ; preds = %23
  %28 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #10
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #10
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %44

44:                                               ; preds = %27, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #10
  ret %"class.WTF::StringImpl"* %28

45:                                               ; preds = %23
  br i1 %19, label %100, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = icmp ult i64 %17, %49
  br i1 %50, label %51, label %100

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  br i1 %55, label %62, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.WTF::StringImpl"* %56 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 %17
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  br label %66

62:                                               ; preds = %51
  %63 = bitcast %"class.WTF::StringImpl"* %56 to i16*
  %64 = getelementptr inbounds i16, i16* %63, i64 %17
  %65 = load i16, i16* %64, align 2
  br label %66

66:                                               ; preds = %57, %62
  %67 = phi i16 [ %61, %57 ], [ %65, %62 ]
  %68 = icmp ult i16 %67, 32
  br i1 %68, label %85, label %69

69:                                               ; preds = %66
  %70 = load atomic i32, i32* %52 monotonic, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.WTF::StringImpl"* %56 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 %17
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i16
  br label %82

78:                                               ; preds = %69
  %79 = bitcast %"class.WTF::StringImpl"* %56 to i16*
  %80 = getelementptr inbounds i16, i16* %79, i64 %17
  %81 = load i16, i16* %80, align 2
  br label %82

82:                                               ; preds = %73, %78
  %83 = phi i16 [ %77, %73 ], [ %81, %78 ]
  %84 = icmp ugt i16 %83, 126
  br i1 %84, label %85, label %103

85:                                               ; preds = %66, %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  br i1 %89, label %96, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.WTF::StringImpl"* %90 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 %17
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  br label %100

96:                                               ; preds = %85
  %97 = bitcast %"class.WTF::StringImpl"* %90 to i16*
  %98 = getelementptr inbounds i16, i16* %97, i64 %17
  %99 = load i16, i16* %98, align 2
  br label %100

100:                                              ; preds = %46, %45, %91, %96
  %101 = phi i16 [ %95, %91 ], [ %99, %96 ], [ 0, %45 ], [ 0, %46 ]
  %102 = zext i16 %101 to i32
  call void (%"class.WTF::StringBuilder"*, i8*, ...) @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i32 %102) #10
  br label %136

103:                                              ; preds = %82
  %104 = load atomic i32, i32* %52 monotonic, align 4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = bitcast %"class.WTF::StringImpl"* %56 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 %17
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  br label %116

112:                                              ; preds = %103
  %113 = bitcast %"class.WTF::StringImpl"* %56 to i16*
  %114 = getelementptr inbounds i16, i16* %113, i64 %17
  %115 = load i16, i16* %114, align 2
  br label %116

116:                                              ; preds = %107, %112
  %117 = phi i16 [ %111, %107 ], [ %115, %112 ]
  %118 = icmp eq i16 %117, 92
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %120, i64* %13, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8** %14, align 8
  store i32 2, i32* %15, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %136

121:                                              ; preds = %116
  %122 = load atomic i32, i32* %52 monotonic, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.WTF::StringImpl"* %56 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 %17
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  br label %134

130:                                              ; preds = %121
  %131 = bitcast %"class.WTF::StringImpl"* %56 to i16*
  %132 = getelementptr inbounds i16, i16* %131, i64 %17
  %133 = load i16, i16* %132, align 2
  br label %134

134:                                              ; preds = %125, %130
  %135 = phi i16 [ %129, %125 ], [ %133, %130 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %2, i16 zeroext %135)
  br label %136

136:                                              ; preds = %100, %134, %119
  %137 = add nuw nsw i64 %17, 1
  br label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15WebSocketCommon11JoinStringsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEPKc(%"class.WTF::Vector.83"* dereferenceable(16), i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %9 = bitcast %union.anon.137* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.WTF::StringView"* %4 to i8*
  %18 = icmp eq i8* %1, null
  %19 = bitcast %"class.WTF::StringView"* %4 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %22 = bitcast %"class.WTF::StringView"* %5 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = bitcast %"class.WTF::StringView"* %5 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %46

28:                                               ; preds = %70, %2
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #10
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #10
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %45

45:                                               ; preds = %28, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret %"class.WTF::StringImpl"* %29

46:                                               ; preds = %16, %70
  %47 = phi i32 [ 0, %16 ], [ %72, %70 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  br i1 %18, label %56, label %50

50:                                               ; preds = %49
  %51 = call i64 @strlen(i8* nonnull %1) #11
  %52 = icmp ult i64 %51, 4294967296
  br i1 %52, label %54, label %53, !prof !18

53:                                               ; preds = %50
  call void @llvm.trap() #10
  unreachable

54:                                               ; preds = %50
  %55 = trunc i64 %51 to i32
  br label %56

56:                                               ; preds = %49, %54
  %57 = phi i32 [ %55, %54 ], [ 0, %49 ]
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %58, i64* %19, align 8
  store i8* %1, i8** %20, align 8
  store i32 %57, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br label %59

59:                                               ; preds = %46, %56
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %60 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.83"* %0, i32 %47) #10
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  store i8* null, i8** %24, align 8
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %65, i64* %26, align 8
  br label %70

66:                                               ; preds = %59
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %23, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %25, align 8
  br label %70

70:                                               ; preds = %64, %66
  %71 = phi i32 [ %68, %66 ], [ 0, %64 ]
  store i32 %71, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %72 = add nuw i32 %47, 1
  %73 = load i32, i32* %13, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %46, label %28
}

declare void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebSocketCommon13CloseInternalEiRKN3WTF6StringEPNS_16WebSocketChannelERNS_14ExceptionStateE(%"class.blink::WebSocketCommon"* nocapture, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebSocketChannel"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::IntegerToStringConverter.170", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringAppend", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %5, %21, %36
  switch i32 %1, label %39 [
    i32 -1, label %456
    i32 1000, label %249
  ]

39:                                               ; preds = %38
  %40 = add i32 %1, -3000
  %41 = icmp ult i32 %40, 2000
  br i1 %41, label %249, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  %44 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  %47 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 13
  %50 = icmp slt i32 %1, 0
  %51 = sub i32 0, %1
  %52 = select i1 %50, i32 %51, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false) #10
  store i8* %46, i8** %47, align 8
  %53 = urem i32 %52, 10
  %54 = udiv i32 %52, 10
  %55 = trunc i32 %53 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %46, align 4
  %57 = icmp ugt i32 %52, 9
  br i1 %57, label %58, label %80

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  store i8* %59, i8** %47, align 8
  %60 = urem i32 %54, 10
  %61 = trunc i32 %60 to i8
  %62 = or i8 %61, 48
  store i8 %62, i8* %59, align 1
  %63 = icmp ugt i32 %52, 99
  br i1 %63, label %64, label %80

64:                                               ; preds = %58
  %65 = udiv i32 %52, 100
  %66 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %66, i8** %47, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 2
  %70 = icmp ugt i32 %52, 999
  br i1 %70, label %71, label %80

71:                                               ; preds = %64, %71
  %72 = phi i32 [ %74, %71 ], [ %65, %64 ]
  %73 = load i8*, i8** %47, align 8
  %74 = udiv i32 %72, 10
  %75 = getelementptr inbounds i8, i8* %73, i64 -1
  store i8* %75, i8** %47, align 8
  %76 = urem i32 %74, 10
  %77 = trunc i32 %76 to i8
  %78 = or i8 %77, 48
  store i8 %78, i8* %75, align 1
  %79 = icmp ugt i32 %72, 99
  br i1 %79, label %71, label %80

80:                                               ; preds = %71, %64, %58, %42
  br i1 %50, label %81, label %84

81:                                               ; preds = %80
  %82 = load i8*, i8** %47, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 -1
  store i8* %83, i8** %47, align 8
  store i8 45, i8* %83, align 1
  br label %84

84:                                               ; preds = %80, %81
  %85 = bitcast i8** %47 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint i8* %49 to i64
  %88 = sub i64 %87, %86
  %89 = trunc i64 %88 to i32
  store i32 %89, i32* %48, align 8
  %90 = inttoptr i64 %86 to i8*
  %91 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %90, i32 %89) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #10
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %168, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %110

100:                                              ; preds = %93
  %101 = zext i32 %99 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #10
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %100
  call void @llvm.trap() #10
  unreachable

108:                                              ; preds = %100
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %98, align 4
  br label %110

110:                                              ; preds = %108, %93
  %111 = phi i32 [ %109, %108 ], [ %99, %93 ]
  %112 = load atomic i32, i32* %94 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %125

115:                                              ; preds = %110
  %116 = zext i32 %111 to i33
  %117 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %115
  call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %115
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %98, align 4
  br label %125

125:                                              ; preds = %123, %110
  %126 = phi i32 [ %124, %123 ], [ %111, %110 ]
  %127 = load atomic i32, i32* %94 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  %131 = add i32 %126, -1
  store i32 %131, i32* %98, align 4
  br label %132

132:                                              ; preds = %130, %125
  %133 = phi i32 [ %131, %130 ], [ %126, %125 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %136

136:                                              ; preds = %132, %135
  %137 = load atomic i32, i32* %94 monotonic, align 4, !noalias !19
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = load i32, i32* %98, align 4
  br i1 %139, label %141, label %151

141:                                              ; preds = %136
  %142 = zext i32 %140 to i33
  %143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #10
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !2

148:                                              ; preds = %141
  call void @llvm.trap() #10, !noalias !19
  unreachable

149:                                              ; preds = %141
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %98, align 4, !noalias !19
  br label %151

151:                                              ; preds = %136, %149
  %152 = phi i32 [ %150, %149 ], [ %140, %136 ]
  %153 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([57 x i8]* @.str.11 to i64), i64* %153, align 8, !alias.scope !19
  %154 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %154, align 8, !alias.scope !19
  %155 = load atomic i32, i32* %94 monotonic, align 4, !noalias !19
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %172

158:                                              ; preds = %151
  %159 = zext i32 %152 to i33
  %160 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %159, i33 1) #10
  %161 = extractvalue { i33, i1 } %160, 1
  %162 = extractvalue { i33, i1 } %160, 0
  %163 = icmp slt i33 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %166, !prof !2

165:                                              ; preds = %158
  call void @llvm.trap() #10, !noalias !19
  unreachable

166:                                              ; preds = %158
  %167 = trunc i33 %162 to i32
  store i32 %167, i32* %98, align 4, !noalias !19
  br label %172

168:                                              ; preds = %84
  %169 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([57 x i8]* @.str.11 to i64), i64* %169, align 8, !alias.scope !19
  %170 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %170, align 8, !alias.scope !19
  %171 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8** %171, align 8, !alias.scope !19
  br label %184

172:                                              ; preds = %166, %151
  %173 = phi i32 [ %167, %166 ], [ %152, %151 ]
  %174 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8** %174, align 8, !alias.scope !19
  %175 = load atomic i32, i32* %94 monotonic, align 4, !noalias !19
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %172
  %179 = add i32 %173, -1
  store i32 %179, i32* %98, align 4, !noalias !19
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i32 [ %179, %178 ], [ %173, %172 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10, !noalias !19
  br label %184

184:                                              ; preds = %168, %180, %183
  %185 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %186, align 8
  %187 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %188 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %187, align 8
  %189 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %188, align 8
  call void %189(%"class.blink::ExceptionState"* %4, i32 15, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #10
  br label %205

205:                                              ; preds = %184, %201, %204
  %206 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #10
  br label %222

222:                                              ; preds = %205, %218, %221
  br i1 %92, label %248, label %223

223:                                              ; preds = %222
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  %236 = load i32, i32* %228, align 4
  br label %237

237:                                              ; preds = %232, %235
  %238 = phi i32 [ %233, %232 ], [ %236, %235 ]
  %239 = load atomic i32, i32* %224 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = add i32 %238, -1
  store i32 %243, i32* %228, align 4
  br label %244

244:                                              ; preds = %242, %237
  %245 = phi i32 [ %243, %242 ], [ %238, %237 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %248

248:                                              ; preds = %222, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %513

249:                                              ; preds = %38, %39
  %250 = bitcast %"class.WTF::StringUTF8Adaptor"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %250) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %11, %"class.WTF::String"* dereferenceable(8) %2, i32 0) #10
  %251 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %11, i64 0, i32 2
  %252 = load i32, i32* %251, align 8
  %253 = icmp ugt i32 %252, 123
  br i1 %253, label %254, label %421

254:                                              ; preds = %249
  %255 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #10
  %256 = bitcast %"class.WTF::StringAppend"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %256) #10
  %257 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.170", %"class.WTF::IntegerToStringConverter.170"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %257) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 -86, i64 40, i1 false) #10
  %258 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.170", %"class.WTF::IntegerToStringConverter.170"* %6, i64 0, i32 1
  %259 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.170", %"class.WTF::IntegerToStringConverter.170"* %6, i64 0, i32 0, i64 23
  store i8 51, i8* %259, align 1
  %260 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.170", %"class.WTF::IntegerToStringConverter.170"* %6, i64 0, i32 0, i64 22
  store i8 50, i8* %260, align 2
  %261 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.170", %"class.WTF::IntegerToStringConverter.170"* %6, i64 0, i32 0, i64 21
  store i8* %261, i8** %258, align 8
  store i8 49, i8* %261, align 1
  %262 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.170", %"class.WTF::IntegerToStringConverter.170"* %6, i64 0, i32 2
  store i32 3, i32* %262, align 8
  %263 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %261, i32 3) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %257) #10
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %340, label %265

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %282

272:                                              ; preds = %265
  %273 = zext i32 %271 to i33
  %274 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %273, i33 1) #10
  %275 = extractvalue { i33, i1 } %274, 1
  %276 = extractvalue { i33, i1 } %274, 0
  %277 = icmp slt i33 %276, 0
  %278 = or i1 %275, %277
  br i1 %278, label %279, label %280, !prof !2

279:                                              ; preds = %272
  call void @llvm.trap() #10
  unreachable

280:                                              ; preds = %272
  %281 = trunc i33 %276 to i32
  store i32 %281, i32* %270, align 4
  br label %282

282:                                              ; preds = %280, %265
  %283 = phi i32 [ %281, %280 ], [ %271, %265 ]
  %284 = load atomic i32, i32* %266 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %297

287:                                              ; preds = %282
  %288 = zext i32 %283 to i33
  %289 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %288, i33 1) #10
  %290 = extractvalue { i33, i1 } %289, 1
  %291 = extractvalue { i33, i1 } %289, 0
  %292 = icmp slt i33 %291, 0
  %293 = or i1 %290, %292
  br i1 %293, label %294, label %295, !prof !2

294:                                              ; preds = %287
  call void @llvm.trap() #10
  unreachable

295:                                              ; preds = %287
  %296 = trunc i33 %291 to i32
  store i32 %296, i32* %270, align 4
  br label %297

297:                                              ; preds = %295, %282
  %298 = phi i32 [ %296, %295 ], [ %283, %282 ]
  %299 = load atomic i32, i32* %266 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %304

302:                                              ; preds = %297
  %303 = add i32 %298, -1
  store i32 %303, i32* %270, align 4
  br label %304

304:                                              ; preds = %302, %297
  %305 = phi i32 [ %303, %302 ], [ %298, %297 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #10
  br label %308

308:                                              ; preds = %304, %307
  %309 = load atomic i32, i32* %266 monotonic, align 4, !noalias !22
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = load i32, i32* %270, align 4
  br i1 %311, label %313, label %323

313:                                              ; preds = %308
  %314 = zext i32 %312 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #10
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !2

320:                                              ; preds = %313
  call void @llvm.trap() #10, !noalias !22
  unreachable

321:                                              ; preds = %313
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %270, align 4, !noalias !22
  br label %323

323:                                              ; preds = %308, %321
  %324 = phi i32 [ %322, %321 ], [ %312, %308 ]
  %325 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  store i64 ptrtoint ([38 x i8]* @.str.13 to i64), i64* %325, align 8, !alias.scope !22
  %326 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %326, align 8, !alias.scope !22
  %327 = load atomic i32, i32* %266 monotonic, align 4, !noalias !22
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %344

330:                                              ; preds = %323
  %331 = zext i32 %324 to i33
  %332 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %331, i33 1) #10
  %333 = extractvalue { i33, i1 } %332, 1
  %334 = extractvalue { i33, i1 } %332, 0
  %335 = icmp slt i33 %334, 0
  %336 = or i1 %333, %335
  br i1 %336, label %337, label %338, !prof !2

337:                                              ; preds = %330
  call void @llvm.trap() #10, !noalias !22
  unreachable

338:                                              ; preds = %330
  %339 = trunc i33 %334 to i32
  store i32 %339, i32* %270, align 4, !noalias !22
  br label %344

340:                                              ; preds = %254
  %341 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  store i64 ptrtoint ([38 x i8]* @.str.13 to i64), i64* %341, align 8, !alias.scope !22
  %342 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %342, align 8, !alias.scope !22
  %343 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8** %343, align 8, !alias.scope !22
  br label %356

344:                                              ; preds = %338, %323
  %345 = phi i32 [ %339, %338 ], [ %324, %323 ]
  %346 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8** %346, align 8, !alias.scope !22
  %347 = load atomic i32, i32* %266 monotonic, align 4, !noalias !22
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %344
  %351 = add i32 %345, -1
  store i32 %351, i32* %270, align 4, !noalias !22
  br label %352

352:                                              ; preds = %350, %344
  %353 = phi i32 [ %351, %350 ], [ %345, %344 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #10, !noalias !22
  br label %356

356:                                              ; preds = %340, %352, %355
  %357 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %13)
  %358 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %357, %"class.WTF::StringImpl"** %358, align 8
  %359 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %360 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %359, align 8
  %361 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %360, align 8
  call void %361(%"class.blink::ExceptionState"* %4, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %12) #10
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %377, label %364

364:                                              ; preds = %356
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %362) #10
  br label %377

377:                                              ; preds = %356, %373, %376
  %378 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %378, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %377
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #10
  br label %394

394:                                              ; preds = %377, %390, %393
  br i1 %264, label %420, label %395

395:                                              ; preds = %394
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  br i1 %399, label %402, label %404

402:                                              ; preds = %395
  %403 = add i32 %401, -1
  store i32 %403, i32* %400, align 4
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %401, %395 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %409

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #10
  %408 = load i32, i32* %400, align 4
  br label %409

409:                                              ; preds = %404, %407
  %410 = phi i32 [ %405, %404 ], [ %408, %407 ]
  %411 = load atomic i32, i32* %396 monotonic, align 4
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %416

414:                                              ; preds = %409
  %415 = add i32 %410, -1
  store i32 %415, i32* %400, align 4
  br label %416

416:                                              ; preds = %414, %409
  %417 = phi i32 [ %415, %414 ], [ %410, %409 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #10
  br label %420

420:                                              ; preds = %394, %416, %419
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %256) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #10
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %250) #10
  br label %513

421:                                              ; preds = %249
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %455, label %424

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 1
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %455, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %455

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %11, i64 0, i32 1
  %435 = load i8*, i8** %434, align 8
  %436 = zext i32 %252 to i64
  %437 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %435, i64 %436) #10
  %438 = ptrtoint %"class.WTF::StringImpl"* %437 to i64
  %439 = bitcast %"class.WTF::String"* %8 to i64*
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %438, i64* %439, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %455, label %442

442:                                              ; preds = %433
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  br i1 %446, label %449, label %451

449:                                              ; preds = %442
  %450 = add i32 %448, -1
  store i32 %450, i32* %447, align 4
  br label %451

451:                                              ; preds = %449, %442
  %452 = phi i32 [ %450, %449 ], [ %448, %442 ]
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %440) #10
  br label %455

455:                                              ; preds = %428, %421, %433, %451, %454, %424
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %250) #10
  br label %456

456:                                              ; preds = %455, %38
  %457 = getelementptr inbounds %"class.blink::WebSocketCommon", %"class.blink::WebSocketCommon"* %0, i64 0, i32 1
  %458 = load i32, i32* %457, align 8
  %459 = and i32 %458, -2
  %460 = icmp eq i32 %459, 2
  br i1 %460, label %513, label %461

461:                                              ; preds = %456
  %462 = icmp eq i32 %458, 0
  store i32 2, i32* %457, align 8
  br i1 %462, label %463, label %506

463:                                              ; preds = %461
  %464 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15, i64 0, i64 0), i64 57) #10
  %465 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %465) #10
  %466 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %466, align 8
  %467 = call noalias i8* @malloc(i64 32) #10
  %468 = bitcast i8* %467 to %"class.blink::SourceLocation"*
  call void @_ZN5blink14SourceLocationC1ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi(%"class.blink::SourceLocation"* %468, %"class.WTF::String"* nonnull dereferenceable(8) %15, i32 0, i32 0, %"class.v8_inspector::V8StackTrace"* null, i32 0) #10
  %469 = bitcast %"class.blink::WebSocketChannel"* %3 to void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)***
  %470 = load void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)**, void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)*** %469, align 8
  %471 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)*, void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)** %470, i64 7
  %472 = load void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)*, void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)** %471, align 8
  call void %472(%"class.blink::WebSocketChannel"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %14, i32 2, %"class.blink::SourceLocation"* %468) #10
  %473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %466, align 8
  %474 = icmp eq %"class.WTF::StringImpl"* %473, null
  br i1 %474, label %488, label %475

475:                                              ; preds = %463
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %477 = load atomic i32, i32* %476 monotonic, align 4
  %478 = and i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  br i1 %479, label %482, label %484

482:                                              ; preds = %475
  %483 = add i32 %481, -1
  store i32 %483, i32* %480, align 4
  br label %484

484:                                              ; preds = %482, %475
  %485 = phi i32 [ %483, %482 ], [ %481, %475 ]
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %484
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %473) #10
  br label %488

488:                                              ; preds = %463, %484, %487
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %465) #10
  %489 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %490, null
  br i1 %491, label %505, label %492

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load atomic i32, i32* %493 monotonic, align 4
  %495 = and i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 0
  %498 = load i32, i32* %497, align 4
  br i1 %496, label %499, label %501

499:                                              ; preds = %492
  %500 = add i32 %498, -1
  store i32 %500, i32* %497, align 4
  br label %501

501:                                              ; preds = %499, %492
  %502 = phi i32 [ %500, %499 ], [ %498, %492 ]
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %505

504:                                              ; preds = %501
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %490) #10
  br label %505

505:                                              ; preds = %488, %501, %504
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #10
  br label %513

506:                                              ; preds = %461
  %507 = icmp eq %"class.blink::WebSocketChannel"* %3, null
  br i1 %507, label %513, label %508

508:                                              ; preds = %506
  %509 = bitcast %"class.blink::WebSocketChannel"* %3 to void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)***
  %510 = load void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)**, void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)*, void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)** %510, i64 6
  %512 = load void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)*, void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)** %511, align 8
  call void %512(%"class.blink::WebSocketChannel"* nonnull %3, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  br label %513

513:                                              ; preds = %456, %508, %506, %420, %505, %248
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %515 = icmp eq %"class.WTF::StringImpl"* %514, null
  br i1 %515, label %529, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = and i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  br i1 %520, label %523, label %525

523:                                              ; preds = %516
  %524 = add i32 %522, -1
  store i32 %524, i32* %521, align 4
  br label %525

525:                                              ; preds = %523, %516
  %526 = phi i32 [ %524, %523 ], [ %522, %516 ]
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %529

528:                                              ; preds = %525
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #10
  br label %529

529:                                              ; preds = %513, %525, %528
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #3

declare void @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !25
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #10
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #10
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !25
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #10
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !2

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.138"* %17, i8* nonnull dereferenceable(1) %3) #10
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #10
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %42
  %50 = bitcast %union.anon.137* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.137* %43 to %"class.WTF::Vector.143"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.143"* %57, i16* nonnull dereferenceable(2) %4) #10
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.138"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.138"* %0, i32 %5) #10
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.138"* %0, i32 %5) #10
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.138"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !18

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.138"* %0, i32 %27) #10
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.138"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #10
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.139"* %18, i8* nonnull %6) #10
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !18

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #10
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !18

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.139"* %46, i8* %42) #10
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.139"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #10
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.143"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.143"* %0, i32 %5) #10
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.143"* %0, i32 %5) #10
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.143"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !18

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.143"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.143"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.143"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.143"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.143"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.143"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.144"* %19, i16* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !18

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #10
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !18

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.144"* %53, i16* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.143"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.143", %"class.WTF::Vector.143"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.144"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.160"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.160", %"class.WTF::StringTypeAdapter.160"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.160"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.120"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.120"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.161", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.160"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.160"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.160"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.160", %"class.WTF::StringTypeAdapter.160"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.161"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.161", %"class.WTF::StringTypeAdapter.161"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.161", %"class.WTF::StringTypeAdapter.161"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.161"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.160"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.161", %"class.WTF::StringTypeAdapter.161"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.162"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.120"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.160"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.161", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.160"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.160"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.160"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.160", %"class.WTF::StringTypeAdapter.160"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.161"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.161", %"class.WTF::StringTypeAdapter.161"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.161", %"class.WTF::StringTypeAdapter.161"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.161"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.160"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.161", %"class.WTF::StringTypeAdapter.161"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.162"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.120"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.160"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.120"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.160", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.160"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.160", %"class.WTF::StringTypeAdapter.160"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.120", %"class.WTF::StringAppend.120"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.160"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.160"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.120", %"class.WTF::StringAppend.120"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.160"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.162"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.160"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.162"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.122"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.122"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #10
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #10
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.122"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.122"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.27, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.122"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #10
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.122"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.122", align 8
  %6 = bitcast %"class.WTF::HashTable.122"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.122"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.122"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.122"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.122"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.122"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.122"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #10
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #10
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.122"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.122", %"class.WTF::HashTable.122"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #10
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare void @_ZN5blink14SourceLocationC1ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi(%"class.blink::SourceLocation"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.v8_inspector::V8StackTrace"*, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.83"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!25 = !{i8 0, i8 2}
