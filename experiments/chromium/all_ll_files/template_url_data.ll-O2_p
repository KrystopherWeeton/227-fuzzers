; ModuleID = '../../components/search_engines/template_url_data.cc'
source_filename = "../../components/search_engines/template_url_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TemplateURLData = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, i8, %"class.std::__1::vector", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"union.absl::variant_internal::DestructibleUnionImpl.21" }
%"union.absl::variant_internal::DestructibleUnionImpl.21" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.13 }
%struct.anon.13 = type { %"struct.std::__1::__padding.14", i8 }
%"struct.std::__1::__padding.14" = type { [1 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::Value"* }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@.str.2 = private unnamed_addr constant [35 x i8] c"485bf7d3-0215-45af-87dc-538868%06d\00", align 1

@_ZN15TemplateURLDataC1Ev = hidden unnamed_addr alias void (%struct.TemplateURLData*), void (%struct.TemplateURLData*)* @_ZN15TemplateURLDataC2Ev
@_ZN15TemplateURLDataC1ERKS_ = hidden unnamed_addr alias void (%struct.TemplateURLData*, %struct.TemplateURLData*), void (%struct.TemplateURLData*, %struct.TemplateURLData*)* @_ZN15TemplateURLDataC2ERKS_
@_ZN15TemplateURLDataC1ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_N4base16BasicStringPieceIcNS2_IcEEEESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_RKNS9_9ListValueEi = hidden unnamed_addr alias void (%struct.TemplateURLData*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::ListValue"*, i32), void (%struct.TemplateURLData*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"*, i8*, i64, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::ListValue"*, i32)* @_ZN15TemplateURLDataC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_N4base16BasicStringPieceIcNS2_IcEEEESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_RKNS9_9ListValueEi
@_ZN15TemplateURLDataD1Ev = hidden unnamed_addr alias void (%struct.TemplateURLData*), void (%struct.TemplateURLData*)* @_ZN15TemplateURLDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLDataC2Ev(%struct.TemplateURLData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 4
  %3 = bitcast %struct.TemplateURLData* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 96, i1 false)
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #10
  %4 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 5
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #10
  %5 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 72, i1 false)
  tail call void @_ZN4GURLC1Ev(%class.GURL* %6) #10
  %8 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  tail call void @_ZN4GURLC1Ev(%class.GURL* %8) #10
  %9 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 11
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  %12 = tail call i64 @_ZN4base4Time3NowEv() #10
  %13 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 14, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = tail call i64 @_ZN4base4Time3NowEv() #10
  %15 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 15, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 16, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 17
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 18
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 19
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 20
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  tail call void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* sret %21) #10
  %22 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %23 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %24 = bitcast %"class.std::__1::vector"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 48, i1 false)
  %25 = bitcast %"class.std::__1::basic_string.9"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 5, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string.9"* %23 to i16*
  store i16 100, i16* %27, align 2
  %28 = getelementptr inbounds i16, i16* %27, i64 1
  store i16 117, i16* %28, align 2
  %29 = getelementptr inbounds i16, i16* %27, i64 2
  store i16 109, i16* %29, align 2
  %30 = getelementptr inbounds i16, i16* %27, i64 3
  store i16 109, i16* %30, align 2
  %31 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to i16*
  store i16 121, i16* %32, align 2
  %33 = getelementptr inbounds i16, i16* %27, i64 5
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 1, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  store i8 120, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 0, i8* %38, align 1
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLDataC2ERKS_(%struct.TemplateURLData*, %struct.TemplateURLData* dereferenceable(848)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.TemplateURLData* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.TemplateURLData* %0 to i8*
  %9 = bitcast %struct.TemplateURLData* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0
  %12 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #10
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1
  %18 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #10
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %28, i64 %30) #10
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2
  %33 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #10
  br label %46

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %32, i8* %43, i64 %45) #10
  br label %46

46:                                               ; preds = %38, %41
  %47 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3
  %48 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 3
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #10
  br label %61

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %47, i8* %58, i64 %60) #10
  br label %61

61:                                               ; preds = %53, %56
  %62 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 4
  %63 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %62, %class.GURL* dereferenceable(120) %63) #10
  %64 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 5
  %65 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 5
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %64, %class.GURL* dereferenceable(120) %65) #10
  %66 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %67 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 6
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %61
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #10
  br label %80

75:                                               ; preds = %61
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %66, i8* %77, i64 %79) #10
  br label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7
  %82 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 7
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #10
  br label %95

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %81, i8* %92, i64 %94) #10
  br label %95

95:                                               ; preds = %87, %90
  %96 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8
  %97 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 8
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %95
  %103 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #10
  br label %110

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %96, i8* %107, i64 %109) #10
  br label %110

110:                                              ; preds = %102, %105
  %111 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  %112 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 9
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %111, %class.GURL* dereferenceable(120) %112) #10
  %113 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  %114 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 10
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %113, %class.GURL* dereferenceable(120) %114) #10
  %115 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 11
  %116 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 11
  %117 = load i8, i8* %116, align 8, !range !2
  store i8 %117, i8* %115, align 8
  %118 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %119 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12
  %120 = bitcast %"class.std::__1::vector"* %118 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #10
  %121 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12, i32 0, i32 1
  %122 = bitcast %"class.std::__1::basic_string"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector"* %119 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = sdiv exact i64 %126, 24
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %170, label %129

129:                                              ; preds = %110
  %130 = icmp ugt i64 %127, 768614336404564650
  br i1 %130, label %131, label %133

131:                                              ; preds = %129
  %132 = bitcast %"class.std::__1::vector"* %118 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #11
  unreachable

133:                                              ; preds = %129
  %134 = tail call i8* @_Znwm(i64 %126) #12
  %135 = bitcast i8* %134 to %"class.std::__1::basic_string"*
  %136 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 1
  %137 = bitcast %"class.std::__1::basic_string"** %136 to i8**
  store i8* %134, i8** %137, align 8
  %138 = bitcast %"class.std::__1::vector"* %118 to i8**
  store i8* %134, i8** %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 %127
  %140 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %139, %"class.std::__1::basic_string"** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %119, i64 0, i32 0, i32 0
  %142 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %141, align 8
  %143 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %121, align 8
  %144 = bitcast %"class.std::__1::basic_string"** %136 to i64*
  %145 = ptrtoint i8* %134 to i64
  %146 = icmp eq %"class.std::__1::basic_string"* %142, %143
  br i1 %146, label %168, label %147

147:                                              ; preds = %133, %162
  %148 = phi %"class.std::__1::basic_string"* [ %164, %162 ], [ %135, %133 ]
  %149 = phi %"class.std::__1::basic_string"* [ %163, %162 ], [ %142, %133 ]
  %150 = bitcast %"class.std::__1::basic_string"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::basic_string"* %148 to i8*
  %156 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 24, i1 false) #10
  br label %162

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %148, i8* %159, i64 %161) #10
  br label %162

162:                                              ; preds = %157, %154
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 1
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %148, i64 1
  %165 = icmp eq %"class.std::__1::basic_string"* %163, %143
  br i1 %165, label %166, label %147

166:                                              ; preds = %162
  %167 = ptrtoint %"class.std::__1::basic_string"* %164 to i64
  br label %168

168:                                              ; preds = %166, %133
  %169 = phi i64 [ %145, %133 ], [ %167, %166 ]
  store i64 %169, i64* %144, align 8
  br label %170

170:                                              ; preds = %110, %168
  %171 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 13
  %172 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 13
  %173 = bitcast i64* %171 to i8*
  %174 = bitcast i64* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 44, i1 false)
  %175 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %176 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 21
  %177 = bitcast %"class.std::__1::basic_string"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %170
  %182 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  %183 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 24, i1 false) #10
  br label %189

184:                                              ; preds = %170
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %175, i8* %186, i64 %188) #10
  br label %189

189:                                              ; preds = %181, %184
  %190 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %191 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22
  %192 = bitcast %"class.std::__1::vector"* %190 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #10
  %193 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22, i32 0, i32 1
  %194 = bitcast %"class.std::__1::basic_string"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.std::__1::vector"* %191 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = sub i64 %195, %197
  %199 = sdiv exact i64 %198, 24
  %200 = icmp eq i64 %198, 0
  br i1 %200, label %242, label %201

201:                                              ; preds = %189
  %202 = icmp ugt i64 %199, 768614336404564650
  br i1 %202, label %203, label %205

203:                                              ; preds = %201
  %204 = bitcast %"class.std::__1::vector"* %190 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %204) #11
  unreachable

205:                                              ; preds = %201
  %206 = tail call i8* @_Znwm(i64 %198) #12
  %207 = bitcast i8* %206 to %"class.std::__1::basic_string"*
  %208 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 1
  %209 = bitcast %"class.std::__1::basic_string"** %208 to i8**
  store i8* %206, i8** %209, align 8
  %210 = bitcast %"class.std::__1::vector"* %190 to i8**
  store i8* %206, i8** %210, align 8
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %207, i64 %199
  %212 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %211, %"class.std::__1::basic_string"** %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %191, i64 0, i32 0, i32 0
  %214 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %213, align 8
  %215 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %193, align 8
  %216 = bitcast %"class.std::__1::basic_string"** %208 to i64*
  %217 = ptrtoint i8* %206 to i64
  %218 = icmp eq %"class.std::__1::basic_string"* %214, %215
  br i1 %218, label %240, label %219

219:                                              ; preds = %205, %234
  %220 = phi %"class.std::__1::basic_string"* [ %236, %234 ], [ %207, %205 ]
  %221 = phi %"class.std::__1::basic_string"* [ %235, %234 ], [ %214, %205 ]
  %222 = bitcast %"class.std::__1::basic_string"* %221 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  %224 = load i8, i8* %223, align 1
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast %"class.std::__1::basic_string"* %220 to i8*
  %228 = bitcast %"class.std::__1::basic_string"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 24, i1 false) #10
  br label %234

229:                                              ; preds = %219
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %233 = load i64, i64* %232, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %220, i8* %231, i64 %233) #10
  br label %234

234:                                              ; preds = %229, %226
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 1
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %220, i64 1
  %237 = icmp eq %"class.std::__1::basic_string"* %235, %215
  br i1 %237, label %238, label %219

238:                                              ; preds = %234
  %239 = ptrtoint %"class.std::__1::basic_string"* %236 to i64
  br label %240

240:                                              ; preds = %238, %205
  %241 = phi i64 [ %217, %205 ], [ %239, %238 ]
  store i64 %241, i64* %216, align 8
  br label %242

242:                                              ; preds = %189, %240
  %243 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %244 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 23
  %245 = bitcast %"class.std::__1::basic_string.9"* %244 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %245, i64 0, i32 1, i32 1
  %247 = load i8, i8* %246, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %242
  %250 = bitcast %"class.std::__1::basic_string.9"* %243 to i8*
  %251 = bitcast %"class.std::__1::basic_string.9"* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 24, i1 false) #10
  br label %427

252:                                              ; preds = %242
  %253 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i16*, i16** %253, align 8
  %255 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = icmp ult i64 %256, 11
  br i1 %257, label %258, label %263

258:                                              ; preds = %252
  %259 = bitcast %"class.std::__1::basic_string.9"* %243 to i16*
  %260 = trunc i64 %256 to i8
  %261 = bitcast %"class.std::__1::basic_string.9"* %243 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  store i8 %260, i8* %262, align 1
  br label %280

263:                                              ; preds = %252
  %264 = icmp ugt i64 %256, 9223372036854775791
  br i1 %264, label %265, label %267

265:                                              ; preds = %263
  %266 = bitcast %"class.std::__1::basic_string.9"* %243 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %266) #11
  unreachable

267:                                              ; preds = %263
  %268 = add nuw nsw i64 %256, 8
  %269 = and i64 %268, -8
  %270 = icmp slt i64 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %267
  tail call void @abort() #11
  unreachable

272:                                              ; preds = %267
  %273 = shl i64 %269, 1
  %274 = tail call i8* @_Znwm(i64 %273) #12
  %275 = bitcast i8* %274 to i16*
  %276 = bitcast %"class.std::__1::basic_string.9"* %243 to i8**
  store i8* %274, i8** %276, align 8
  %277 = or i64 %269, -9223372036854775808
  %278 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %256, i64* %279, align 8
  br label %280

280:                                              ; preds = %272, %258
  %281 = phi i16* [ %259, %258 ], [ %275, %272 ]
  %282 = add nuw nsw i64 %256, 1
  %283 = add i64 %256, 1
  %284 = icmp ult i64 %283, 16
  br i1 %284, label %374, label %285

285:                                              ; preds = %280
  %286 = add i64 %256, 1
  %287 = getelementptr i16, i16* %281, i64 %286
  %288 = getelementptr i16, i16* %254, i64 %286
  %289 = icmp ult i16* %281, %288
  %290 = icmp ult i16* %254, %287
  %291 = and i1 %289, %290
  br i1 %291, label %374, label %292

292:                                              ; preds = %285
  %293 = and i64 %283, -16
  %294 = sub i64 %282, %293
  %295 = getelementptr i16, i16* %254, i64 %293
  %296 = getelementptr i16, i16* %281, i64 %293
  %297 = add i64 %293, -16
  %298 = lshr exact i64 %297, 4
  %299 = add nuw nsw i64 %298, 1
  %300 = and i64 %299, 3
  %301 = icmp ult i64 %297, 48
  br i1 %301, label %353, label %302

302:                                              ; preds = %292
  %303 = sub nsw i64 %299, %300
  br label %304

304:                                              ; preds = %304, %302
  %305 = phi i64 [ 0, %302 ], [ %350, %304 ]
  %306 = phi i64 [ %303, %302 ], [ %351, %304 ]
  %307 = getelementptr i16, i16* %254, i64 %305
  %308 = getelementptr i16, i16* %281, i64 %305
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !3
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !3
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !6, !noalias !3
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !6, !noalias !3
  %317 = or i64 %305, 16
  %318 = getelementptr i16, i16* %254, i64 %317
  %319 = getelementptr i16, i16* %281, i64 %317
  %320 = bitcast i16* %318 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !3
  %322 = getelementptr i16, i16* %318, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  %324 = load <8 x i16>, <8 x i16>* %323, align 2, !alias.scope !3
  %325 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %325, align 2, !alias.scope !6, !noalias !3
  %326 = getelementptr i16, i16* %319, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %324, <8 x i16>* %327, align 2, !alias.scope !6, !noalias !3
  %328 = or i64 %305, 32
  %329 = getelementptr i16, i16* %254, i64 %328
  %330 = getelementptr i16, i16* %281, i64 %328
  %331 = bitcast i16* %329 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !3
  %333 = getelementptr i16, i16* %329, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  %335 = load <8 x i16>, <8 x i16>* %334, align 2, !alias.scope !3
  %336 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %336, align 2, !alias.scope !6, !noalias !3
  %337 = getelementptr i16, i16* %330, i64 8
  %338 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %338, align 2, !alias.scope !6, !noalias !3
  %339 = or i64 %305, 48
  %340 = getelementptr i16, i16* %254, i64 %339
  %341 = getelementptr i16, i16* %281, i64 %339
  %342 = bitcast i16* %340 to <8 x i16>*
  %343 = load <8 x i16>, <8 x i16>* %342, align 2, !alias.scope !3
  %344 = getelementptr i16, i16* %340, i64 8
  %345 = bitcast i16* %344 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 2, !alias.scope !3
  %347 = bitcast i16* %341 to <8 x i16>*
  store <8 x i16> %343, <8 x i16>* %347, align 2, !alias.scope !6, !noalias !3
  %348 = getelementptr i16, i16* %341, i64 8
  %349 = bitcast i16* %348 to <8 x i16>*
  store <8 x i16> %346, <8 x i16>* %349, align 2, !alias.scope !6, !noalias !3
  %350 = add i64 %305, 64
  %351 = add i64 %306, -4
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %304, !llvm.loop !8

353:                                              ; preds = %304, %292
  %354 = phi i64 [ 0, %292 ], [ %350, %304 ]
  %355 = icmp eq i64 %300, 0
  br i1 %355, label %372, label %356

356:                                              ; preds = %353, %356
  %357 = phi i64 [ %369, %356 ], [ %354, %353 ]
  %358 = phi i64 [ %370, %356 ], [ %300, %353 ]
  %359 = getelementptr i16, i16* %254, i64 %357
  %360 = getelementptr i16, i16* %281, i64 %357
  %361 = bitcast i16* %359 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !3
  %363 = getelementptr i16, i16* %359, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !3
  %366 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %366, align 2, !alias.scope !6, !noalias !3
  %367 = getelementptr i16, i16* %360, i64 8
  %368 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %368, align 2, !alias.scope !6, !noalias !3
  %369 = add i64 %357, 16
  %370 = add i64 %358, -1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %356, !llvm.loop !10

372:                                              ; preds = %356, %353
  %373 = icmp eq i64 %283, %293
  br i1 %373, label %427, label %374

374:                                              ; preds = %372, %285, %280
  %375 = phi i64 [ %282, %285 ], [ %282, %280 ], [ %294, %372 ]
  %376 = phi i16* [ %254, %285 ], [ %254, %280 ], [ %295, %372 ]
  %377 = phi i16* [ %281, %285 ], [ %281, %280 ], [ %296, %372 ]
  %378 = add i64 %375, -1
  %379 = and i64 %375, 7
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %392, label %381

381:                                              ; preds = %374, %381
  %382 = phi i64 [ %387, %381 ], [ %375, %374 ]
  %383 = phi i16* [ %389, %381 ], [ %376, %374 ]
  %384 = phi i16* [ %388, %381 ], [ %377, %374 ]
  %385 = phi i64 [ %390, %381 ], [ %379, %374 ]
  %386 = load i16, i16* %383, align 2
  store i16 %386, i16* %384, align 2
  %387 = add i64 %382, -1
  %388 = getelementptr inbounds i16, i16* %384, i64 1
  %389 = getelementptr inbounds i16, i16* %383, i64 1
  %390 = add i64 %385, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %381, !llvm.loop !12

392:                                              ; preds = %381, %374
  %393 = phi i64 [ %375, %374 ], [ %387, %381 ]
  %394 = phi i16* [ %376, %374 ], [ %389, %381 ]
  %395 = phi i16* [ %377, %374 ], [ %388, %381 ]
  %396 = icmp ult i64 %378, 7
  br i1 %396, label %427, label %397

397:                                              ; preds = %392, %397
  %398 = phi i64 [ %423, %397 ], [ %393, %392 ]
  %399 = phi i16* [ %425, %397 ], [ %394, %392 ]
  %400 = phi i16* [ %424, %397 ], [ %395, %392 ]
  %401 = load i16, i16* %399, align 2
  store i16 %401, i16* %400, align 2
  %402 = getelementptr inbounds i16, i16* %400, i64 1
  %403 = getelementptr inbounds i16, i16* %399, i64 1
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = getelementptr inbounds i16, i16* %400, i64 2
  %406 = getelementptr inbounds i16, i16* %399, i64 2
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %405, align 2
  %408 = getelementptr inbounds i16, i16* %400, i64 3
  %409 = getelementptr inbounds i16, i16* %399, i64 3
  %410 = load i16, i16* %409, align 2
  store i16 %410, i16* %408, align 2
  %411 = getelementptr inbounds i16, i16* %400, i64 4
  %412 = getelementptr inbounds i16, i16* %399, i64 4
  %413 = load i16, i16* %412, align 2
  store i16 %413, i16* %411, align 2
  %414 = getelementptr inbounds i16, i16* %400, i64 5
  %415 = getelementptr inbounds i16, i16* %399, i64 5
  %416 = load i16, i16* %415, align 2
  store i16 %416, i16* %414, align 2
  %417 = getelementptr inbounds i16, i16* %400, i64 6
  %418 = getelementptr inbounds i16, i16* %399, i64 6
  %419 = load i16, i16* %418, align 2
  store i16 %419, i16* %417, align 2
  %420 = getelementptr inbounds i16, i16* %400, i64 7
  %421 = getelementptr inbounds i16, i16* %399, i64 7
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %420, align 2
  %423 = add i64 %398, -8
  %424 = getelementptr inbounds i16, i16* %400, i64 8
  %425 = getelementptr inbounds i16, i16* %399, i64 8
  %426 = icmp eq i64 %423, 0
  br i1 %426, label %427, label %397, !llvm.loop !13

427:                                              ; preds = %392, %397, %372, %249
  %428 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %429 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 24
  %430 = bitcast %"class.std::__1::basic_string.9"* %429 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %430, i64 0, i32 1, i32 1
  %432 = load i8, i8* %431, align 1
  %433 = icmp slt i8 %432, 0
  br i1 %433, label %437, label %434

434:                                              ; preds = %427
  %435 = bitcast %"class.std::__1::basic_string.9"* %428 to i8*
  %436 = bitcast %"class.std::__1::basic_string.9"* %429 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %435, i8* align 8 %436, i64 24, i1 false) #10
  br label %612

437:                                              ; preds = %427
  %438 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %429, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load i16*, i16** %438, align 8
  %440 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %441 = load i64, i64* %440, align 8
  %442 = icmp ult i64 %441, 11
  br i1 %442, label %443, label %448

443:                                              ; preds = %437
  %444 = bitcast %"class.std::__1::basic_string.9"* %428 to i16*
  %445 = trunc i64 %441 to i8
  %446 = bitcast %"class.std::__1::basic_string.9"* %428 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %447 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %446, i64 0, i32 1, i32 1
  store i8 %445, i8* %447, align 1
  br label %465

448:                                              ; preds = %437
  %449 = icmp ugt i64 %441, 9223372036854775791
  br i1 %449, label %450, label %452

450:                                              ; preds = %448
  %451 = bitcast %"class.std::__1::basic_string.9"* %428 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %451) #11
  unreachable

452:                                              ; preds = %448
  %453 = add nuw nsw i64 %441, 8
  %454 = and i64 %453, -8
  %455 = icmp slt i64 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %452
  tail call void @abort() #11
  unreachable

457:                                              ; preds = %452
  %458 = shl i64 %454, 1
  %459 = tail call i8* @_Znwm(i64 %458) #12
  %460 = bitcast i8* %459 to i16*
  %461 = bitcast %"class.std::__1::basic_string.9"* %428 to i8**
  store i8* %459, i8** %461, align 8
  %462 = or i64 %454, -9223372036854775808
  %463 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %462, i64* %463, align 8
  %464 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %441, i64* %464, align 8
  br label %465

465:                                              ; preds = %457, %443
  %466 = phi i16* [ %444, %443 ], [ %460, %457 ]
  %467 = add nuw nsw i64 %441, 1
  %468 = add i64 %441, 1
  %469 = icmp ult i64 %468, 16
  br i1 %469, label %559, label %470

470:                                              ; preds = %465
  %471 = add i64 %441, 1
  %472 = getelementptr i16, i16* %466, i64 %471
  %473 = getelementptr i16, i16* %439, i64 %471
  %474 = icmp ult i16* %466, %473
  %475 = icmp ult i16* %439, %472
  %476 = and i1 %474, %475
  br i1 %476, label %559, label %477

477:                                              ; preds = %470
  %478 = and i64 %468, -16
  %479 = sub i64 %467, %478
  %480 = getelementptr i16, i16* %439, i64 %478
  %481 = getelementptr i16, i16* %466, i64 %478
  %482 = add i64 %478, -16
  %483 = lshr exact i64 %482, 4
  %484 = add nuw nsw i64 %483, 1
  %485 = and i64 %484, 3
  %486 = icmp ult i64 %482, 48
  br i1 %486, label %538, label %487

487:                                              ; preds = %477
  %488 = sub nsw i64 %484, %485
  br label %489

489:                                              ; preds = %489, %487
  %490 = phi i64 [ 0, %487 ], [ %535, %489 ]
  %491 = phi i64 [ %488, %487 ], [ %536, %489 ]
  %492 = getelementptr i16, i16* %439, i64 %490
  %493 = getelementptr i16, i16* %466, i64 %490
  %494 = bitcast i16* %492 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !14
  %496 = getelementptr i16, i16* %492, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !14
  %499 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %499, align 2, !alias.scope !17, !noalias !14
  %500 = getelementptr i16, i16* %493, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %498, <8 x i16>* %501, align 2, !alias.scope !17, !noalias !14
  %502 = or i64 %490, 16
  %503 = getelementptr i16, i16* %439, i64 %502
  %504 = getelementptr i16, i16* %466, i64 %502
  %505 = bitcast i16* %503 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !14
  %507 = getelementptr i16, i16* %503, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  %509 = load <8 x i16>, <8 x i16>* %508, align 2, !alias.scope !14
  %510 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %506, <8 x i16>* %510, align 2, !alias.scope !17, !noalias !14
  %511 = getelementptr i16, i16* %504, i64 8
  %512 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %509, <8 x i16>* %512, align 2, !alias.scope !17, !noalias !14
  %513 = or i64 %490, 32
  %514 = getelementptr i16, i16* %439, i64 %513
  %515 = getelementptr i16, i16* %466, i64 %513
  %516 = bitcast i16* %514 to <8 x i16>*
  %517 = load <8 x i16>, <8 x i16>* %516, align 2, !alias.scope !14
  %518 = getelementptr i16, i16* %514, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  %520 = load <8 x i16>, <8 x i16>* %519, align 2, !alias.scope !14
  %521 = bitcast i16* %515 to <8 x i16>*
  store <8 x i16> %517, <8 x i16>* %521, align 2, !alias.scope !17, !noalias !14
  %522 = getelementptr i16, i16* %515, i64 8
  %523 = bitcast i16* %522 to <8 x i16>*
  store <8 x i16> %520, <8 x i16>* %523, align 2, !alias.scope !17, !noalias !14
  %524 = or i64 %490, 48
  %525 = getelementptr i16, i16* %439, i64 %524
  %526 = getelementptr i16, i16* %466, i64 %524
  %527 = bitcast i16* %525 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !14
  %529 = getelementptr i16, i16* %525, i64 8
  %530 = bitcast i16* %529 to <8 x i16>*
  %531 = load <8 x i16>, <8 x i16>* %530, align 2, !alias.scope !14
  %532 = bitcast i16* %526 to <8 x i16>*
  store <8 x i16> %528, <8 x i16>* %532, align 2, !alias.scope !17, !noalias !14
  %533 = getelementptr i16, i16* %526, i64 8
  %534 = bitcast i16* %533 to <8 x i16>*
  store <8 x i16> %531, <8 x i16>* %534, align 2, !alias.scope !17, !noalias !14
  %535 = add i64 %490, 64
  %536 = add i64 %491, -4
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %538, label %489, !llvm.loop !19

538:                                              ; preds = %489, %477
  %539 = phi i64 [ 0, %477 ], [ %535, %489 ]
  %540 = icmp eq i64 %485, 0
  br i1 %540, label %557, label %541

541:                                              ; preds = %538, %541
  %542 = phi i64 [ %554, %541 ], [ %539, %538 ]
  %543 = phi i64 [ %555, %541 ], [ %485, %538 ]
  %544 = getelementptr i16, i16* %439, i64 %542
  %545 = getelementptr i16, i16* %466, i64 %542
  %546 = bitcast i16* %544 to <8 x i16>*
  %547 = load <8 x i16>, <8 x i16>* %546, align 2, !alias.scope !14
  %548 = getelementptr i16, i16* %544, i64 8
  %549 = bitcast i16* %548 to <8 x i16>*
  %550 = load <8 x i16>, <8 x i16>* %549, align 2, !alias.scope !14
  %551 = bitcast i16* %545 to <8 x i16>*
  store <8 x i16> %547, <8 x i16>* %551, align 2, !alias.scope !17, !noalias !14
  %552 = getelementptr i16, i16* %545, i64 8
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %550, <8 x i16>* %553, align 2, !alias.scope !17, !noalias !14
  %554 = add i64 %542, 16
  %555 = add i64 %543, -1
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %557, label %541, !llvm.loop !20

557:                                              ; preds = %541, %538
  %558 = icmp eq i64 %468, %478
  br i1 %558, label %612, label %559

559:                                              ; preds = %557, %470, %465
  %560 = phi i64 [ %467, %470 ], [ %467, %465 ], [ %479, %557 ]
  %561 = phi i16* [ %439, %470 ], [ %439, %465 ], [ %480, %557 ]
  %562 = phi i16* [ %466, %470 ], [ %466, %465 ], [ %481, %557 ]
  %563 = add i64 %560, -1
  %564 = and i64 %560, 7
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %577, label %566

566:                                              ; preds = %559, %566
  %567 = phi i64 [ %572, %566 ], [ %560, %559 ]
  %568 = phi i16* [ %574, %566 ], [ %561, %559 ]
  %569 = phi i16* [ %573, %566 ], [ %562, %559 ]
  %570 = phi i64 [ %575, %566 ], [ %564, %559 ]
  %571 = load i16, i16* %568, align 2
  store i16 %571, i16* %569, align 2
  %572 = add i64 %567, -1
  %573 = getelementptr inbounds i16, i16* %569, i64 1
  %574 = getelementptr inbounds i16, i16* %568, i64 1
  %575 = add i64 %570, -1
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %577, label %566, !llvm.loop !21

577:                                              ; preds = %566, %559
  %578 = phi i64 [ %560, %559 ], [ %572, %566 ]
  %579 = phi i16* [ %561, %559 ], [ %574, %566 ]
  %580 = phi i16* [ %562, %559 ], [ %573, %566 ]
  %581 = icmp ult i64 %563, 7
  br i1 %581, label %612, label %582

582:                                              ; preds = %577, %582
  %583 = phi i64 [ %608, %582 ], [ %578, %577 ]
  %584 = phi i16* [ %610, %582 ], [ %579, %577 ]
  %585 = phi i16* [ %609, %582 ], [ %580, %577 ]
  %586 = load i16, i16* %584, align 2
  store i16 %586, i16* %585, align 2
  %587 = getelementptr inbounds i16, i16* %585, i64 1
  %588 = getelementptr inbounds i16, i16* %584, i64 1
  %589 = load i16, i16* %588, align 2
  store i16 %589, i16* %587, align 2
  %590 = getelementptr inbounds i16, i16* %585, i64 2
  %591 = getelementptr inbounds i16, i16* %584, i64 2
  %592 = load i16, i16* %591, align 2
  store i16 %592, i16* %590, align 2
  %593 = getelementptr inbounds i16, i16* %585, i64 3
  %594 = getelementptr inbounds i16, i16* %584, i64 3
  %595 = load i16, i16* %594, align 2
  store i16 %595, i16* %593, align 2
  %596 = getelementptr inbounds i16, i16* %585, i64 4
  %597 = getelementptr inbounds i16, i16* %584, i64 4
  %598 = load i16, i16* %597, align 2
  store i16 %598, i16* %596, align 2
  %599 = getelementptr inbounds i16, i16* %585, i64 5
  %600 = getelementptr inbounds i16, i16* %584, i64 5
  %601 = load i16, i16* %600, align 2
  store i16 %601, i16* %599, align 2
  %602 = getelementptr inbounds i16, i16* %585, i64 6
  %603 = getelementptr inbounds i16, i16* %584, i64 6
  %604 = load i16, i16* %603, align 2
  store i16 %604, i16* %602, align 2
  %605 = getelementptr inbounds i16, i16* %585, i64 7
  %606 = getelementptr inbounds i16, i16* %584, i64 7
  %607 = load i16, i16* %606, align 2
  store i16 %607, i16* %605, align 2
  %608 = add i64 %583, -8
  %609 = getelementptr inbounds i16, i16* %585, i64 8
  %610 = getelementptr inbounds i16, i16* %584, i64 8
  %611 = icmp eq i64 %608, 0
  br i1 %611, label %612, label %582, !llvm.loop !22

612:                                              ; preds = %577, %582, %557, %434
  %613 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %614 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 25
  %615 = bitcast %"class.std::__1::basic_string"* %614 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %616 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %615, i64 0, i32 1, i32 0
  %617 = load i8, i8* %616, align 1
  %618 = icmp slt i8 %617, 0
  br i1 %618, label %622, label %619

619:                                              ; preds = %612
  %620 = bitcast %"class.std::__1::basic_string"* %613 to i8*
  %621 = bitcast %"class.std::__1::basic_string"* %614 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %620, i8* align 8 %621, i64 24, i1 false) #10
  br label %627

622:                                              ; preds = %612
  %623 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %614, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load i8*, i8** %623, align 8
  %625 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %626 = load i64, i64* %625, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %613, i8* %624, i64 %626) #10
  br label %627

627:                                              ; preds = %619, %622
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(848) %struct.TemplateURLData* @_ZN15TemplateURLDataaSERKS_(%struct.TemplateURLData* returned, %struct.TemplateURLData* dereferenceable(848)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0
  %4 = icmp eq %struct.TemplateURLData* %0, %1
  br i1 %4, label %127, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.TemplateURLData* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %struct.TemplateURLData* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %struct.TemplateURLData* %0 to i8*
  %17 = bitcast %struct.TemplateURLData* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #10
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #10
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.TemplateURLData* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #10
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1
  %36 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #10
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %51, i64 %53) #10
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %62, i64 %63) #10
  br label %65

65:                                               ; preds = %46, %49, %55
  %66 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2
  %67 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %71, label %86, label %76

76:                                               ; preds = %65
  br i1 %75, label %80, label %77

77:                                               ; preds = %76
  %78 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #10
  br label %96

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %82, i64 %84) #10
  br label %96

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %92 = zext i8 %74 to i64
  %93 = select i1 %75, i8* %88, i8* %91
  %94 = select i1 %75, i64 %90, i64 %92
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %93, i64 %94) #10
  br label %96

96:                                               ; preds = %77, %80, %86
  %97 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3
  %98 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 3
  %99 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %102, label %117, label %107

107:                                              ; preds = %96
  br i1 %106, label %111, label %108

108:                                              ; preds = %107
  %109 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %110 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #10
  br label %127

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %97, i8* %113, i64 %115) #10
  br label %127

117:                                              ; preds = %96
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %123 = zext i8 %105 to i64
  %124 = select i1 %106, i8* %119, i8* %122
  %125 = select i1 %106, i64 %121, i64 %123
  %126 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %97, i8* %124, i64 %125) #10
  br label %127

127:                                              ; preds = %2, %108, %111, %117
  %128 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 4
  %129 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 4
  %130 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %128, %class.GURL* dereferenceable(120) %129) #10
  %131 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 5
  %132 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 5
  %133 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %131, %class.GURL* dereferenceable(120) %132) #10
  %134 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %135 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 6
  br i1 %4, label %227, label %136

136:                                              ; preds = %127
  %137 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  %141 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %140, label %155, label %145

145:                                              ; preds = %136
  br i1 %144, label %149, label %146

146:                                              ; preds = %145
  %147 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %148 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 24, i1 false) #10
  br label %165

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %134, i8* %151, i64 %153) #10
  br label %165

155:                                              ; preds = %136
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  %161 = zext i8 %143 to i64
  %162 = select i1 %144, i8* %157, i8* %160
  %163 = select i1 %144, i64 %159, i64 %161
  %164 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %134, i8* %162, i64 %163) #10
  br label %165

165:                                              ; preds = %146, %149, %155
  %166 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7
  %167 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 7
  %168 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  %172 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %171, label %186, label %176

176:                                              ; preds = %165
  br i1 %175, label %180, label %177

177:                                              ; preds = %176
  %178 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  %179 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false) #10
  br label %196

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %166, i8* %182, i64 %184) #10
  br label %196

186:                                              ; preds = %165
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  %192 = zext i8 %174 to i64
  %193 = select i1 %175, i8* %188, i8* %191
  %194 = select i1 %175, i64 %190, i64 %192
  %195 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %166, i8* %193, i64 %194) #10
  br label %196

196:                                              ; preds = %177, %180, %186
  %197 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8
  %198 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 8
  %199 = bitcast %"class.std::__1::basic_string"* %197 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  %203 = bitcast %"class.std::__1::basic_string"* %198 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %202, label %217, label %207

207:                                              ; preds = %196
  br i1 %206, label %211, label %208

208:                                              ; preds = %207
  %209 = bitcast %"class.std::__1::basic_string"* %197 to i8*
  %210 = bitcast %"class.std::__1::basic_string"* %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 24, i1 false) #10
  br label %227

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %197, i8* %213, i64 %215) #10
  br label %227

217:                                              ; preds = %196
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.std::__1::basic_string"* %198 to i8*
  %223 = zext i8 %205 to i64
  %224 = select i1 %206, i8* %219, i8* %222
  %225 = select i1 %206, i64 %221, i64 %223
  %226 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %197, i8* %224, i64 %225) #10
  br label %227

227:                                              ; preds = %127, %208, %211, %217
  %228 = phi i1 [ true, %127 ], [ %4, %208 ], [ %4, %211 ], [ %4, %217 ]
  %229 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  %230 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 9
  %231 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %229, %class.GURL* dereferenceable(120) %230) #10
  %232 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  %233 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 10
  %234 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %232, %class.GURL* dereferenceable(120) %233) #10
  %235 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 11
  %236 = load i8, i8* %235, align 8, !range !2
  %237 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 11
  store i8 %236, i8* %237, align 8
  br i1 %228, label %278, label %238

238:                                              ; preds = %227
  %239 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %240 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12, i32 0, i32 0
  %241 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %240, align 8
  %242 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 12, i32 0, i32 1
  %243 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %242, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %239, %"class.std::__1::basic_string"* %241, %"class.std::__1::basic_string"* %243) #10
  %244 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 13
  %245 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 13
  %246 = bitcast i64* %244 to i8*
  %247 = bitcast i64* %245 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 44, i1 false)
  %248 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %249 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 21
  %250 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  %254 = bitcast %"class.std::__1::basic_string"* %249 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %253, label %268, label %258

258:                                              ; preds = %238
  br i1 %257, label %262, label %259

259:                                              ; preds = %258
  %260 = bitcast %"class.std::__1::basic_string"* %248 to i8*
  %261 = bitcast %"class.std::__1::basic_string"* %249 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %261, i64 24, i1 false) #10
  br label %283

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  %265 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %248, i8* %264, i64 %266) #10
  br label %283

268:                                              ; preds = %238
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.std::__1::basic_string"* %249 to i8*
  %274 = zext i8 %256 to i64
  %275 = select i1 %257, i8* %270, i8* %273
  %276 = select i1 %257, i64 %272, i64 %274
  %277 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %248, i8* %275, i64 %276) #10
  br label %283

278:                                              ; preds = %227
  %279 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 13
  %280 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 13
  %281 = bitcast i64* %279 to i8*
  %282 = bitcast i64* %280 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 44, i1 false)
  br label %289

283:                                              ; preds = %259, %262, %268
  %284 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %285 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22, i32 0, i32 0
  %286 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %285, align 8
  %287 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 22, i32 0, i32 1
  %288 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %287, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %284, %"class.std::__1::basic_string"* %286, %"class.std::__1::basic_string"* %288) #10
  br label %289

289:                                              ; preds = %278, %283
  %290 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %291 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 23
  %292 = tail call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.9"* %290, %"class.std::__1::basic_string.9"* dereferenceable(24) %291)
  %293 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %294 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 24
  %295 = tail call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.9"* %293, %"class.std::__1::basic_string.9"* dereferenceable(24) %294)
  %296 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %297 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 25
  br i1 %4, label %327, label %298

298:                                              ; preds = %289
  %299 = bitcast %"class.std::__1::basic_string"* %296 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  %303 = bitcast %"class.std::__1::basic_string"* %297 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %303, i64 0, i32 1, i32 0
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %302, label %317, label %307

307:                                              ; preds = %298
  br i1 %306, label %311, label %308

308:                                              ; preds = %307
  %309 = bitcast %"class.std::__1::basic_string"* %296 to i8*
  %310 = bitcast %"class.std::__1::basic_string"* %297 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* align 8 %310, i64 24, i1 false) #10
  br label %327

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  %314 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %315 = load i64, i64* %314, align 8
  %316 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %296, i8* %313, i64 %315) #10
  br label %327

317:                                              ; preds = %298
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  %320 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.std::__1::basic_string"* %297 to i8*
  %323 = zext i8 %305 to i64
  %324 = select i1 %306, i8* %319, i8* %322
  %325 = select i1 %306, i64 %321, i64 %323
  %326 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %296, i8* %324, i64 %325) #10
  br label %327

327:                                              ; preds = %289, %308, %311, %317
  ret %struct.TemplateURLData* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.9"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.9"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.9"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.9"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.9"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.9"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.9"*
  %35 = icmp ugt %"class.std::__1::basic_string.9"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !23
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !23
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !26, !noalias !23
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !26, !noalias !23
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !23
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !23
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !26, !noalias !23
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !26, !noalias !23
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !23
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !23
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !26, !noalias !23
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !26, !noalias !23
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !23
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !23
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !26, !noalias !23
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !26, !noalias !23
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !28

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !23
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !23
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !26, !noalias !23
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !26, !noalias !23
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !29

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !30

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !31

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.9"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !32
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !32
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !35, !noalias !32
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !35, !noalias !32
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !32
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !32
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !35, !noalias !32
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !35, !noalias !32
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !32
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !32
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !35, !noalias !32
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !35, !noalias !32
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !32
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !32
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !35, !noalias !32
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !35, !noalias !32
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !37

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !32
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !32
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !35, !noalias !32
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !35, !noalias !32
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !38

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !39

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !40

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.9"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.9"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !41
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !41
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !44, !noalias !41
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !44, !noalias !41
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !41
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !41
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !44, !noalias !41
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !44, !noalias !41
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !41
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !41
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !44, !noalias !41
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !44, !noalias !41
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !41
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !41
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !44, !noalias !41
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !44, !noalias !41
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !46

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !41
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !41
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !44, !noalias !41
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !44, !noalias !41
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !47

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !48

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !49

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.9"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.9"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLDataC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_N4base16BasicStringPieceIcNS2_IcEEEESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_RKNS9_9ListValueEi(%struct.TemplateURLData*, %"class.std::__1::basic_string.9"* dereferenceable(24), %"class.std::__1::basic_string.9"* dereferenceable(24), i8*, i64, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, %"class.base::ListValue"* dereferenceable(32), i32) unnamed_addr #0 align 2 {
  %19 = alloca %"class.std::__1::basic_string.9", align 8
  %20 = alloca %"class.std::__1::basic_string.9", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !50
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !50
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %18
  %31 = bitcast %struct.TemplateURLData* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #11
  unreachable

32:                                               ; preds = %18
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %42, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = tail call i8* @_Znwm(i64 %36) #12
  %38 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8, !alias.scope !50
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8, !alias.scope !50
  %41 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %41, align 8, !alias.scope !50
  br label %48

42:                                               ; preds = %32
  %43 = trunc i64 %28 to i8
  %44 = bitcast %struct.TemplateURLData* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1, !alias.scope !50
  %46 = bitcast %struct.TemplateURLData* %0 to i8*
  %47 = icmp eq i64 %28, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %37, %34 ], [ %46, %42 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %26, i64 %28, i1 false) #10
  br label %50

50:                                               ; preds = %42, %48
  %51 = phi i8* [ %46, %42 ], [ %49, %48 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %28
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8, !noalias !53
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %57 = load i64, i64* %56, align 8, !noalias !53
  %58 = icmp ugt i64 %57, -17
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = bitcast %"class.std::__1::basic_string"* %53 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %60) #11
  unreachable

61:                                               ; preds = %50
  %62 = icmp ult i64 %57, 23
  br i1 %62, label %71, label %63

63:                                               ; preds = %61
  %64 = add nuw i64 %57, 16
  %65 = and i64 %64, -16
  %66 = tail call i8* @_Znwm(i64 %65) #12
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %66, i8** %67, align 8, !alias.scope !53
  %68 = or i64 %65, -9223372036854775808
  %69 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %68, i64* %69, align 8, !alias.scope !53
  %70 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %57, i64* %70, align 8, !alias.scope !53
  br label %77

71:                                               ; preds = %61
  %72 = trunc i64 %57 to i8
  %73 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  store i8 %72, i8* %74, align 1, !alias.scope !53
  %75 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %76 = icmp eq i64 %57, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %71, %63
  %78 = phi i8* [ %66, %63 ], [ %75, %71 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %55, i64 %57, i1 false) #10
  br label %79

79:                                               ; preds = %71, %77
  %80 = phi i8* [ %75, %71 ], [ %78, %77 ]
  %81 = getelementptr inbounds i8, i8* %80, i64 %57
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8, !noalias !56
  %85 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %86 = load i64, i64* %85, align 8, !noalias !56
  %87 = icmp ugt i64 %86, -17
  br i1 %87, label %88, label %90

88:                                               ; preds = %79
  %89 = bitcast %"class.std::__1::basic_string"* %82 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %89) #11
  unreachable

90:                                               ; preds = %79
  %91 = icmp ult i64 %86, 23
  br i1 %91, label %100, label %92

92:                                               ; preds = %90
  %93 = add nuw i64 %86, 16
  %94 = and i64 %93, -16
  %95 = tail call i8* @_Znwm(i64 %94) #12
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8, !alias.scope !56
  %97 = or i64 %94, -9223372036854775808
  %98 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %97, i64* %98, align 8, !alias.scope !56
  %99 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %99, align 8, !alias.scope !56
  br label %106

100:                                              ; preds = %90
  %101 = trunc i64 %86 to i8
  %102 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  store i8 %101, i8* %103, align 1, !alias.scope !56
  %104 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %105 = icmp eq i64 %86, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %100, %92
  %107 = phi i8* [ %95, %92 ], [ %104, %100 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %84, i64 %86, i1 false) #10
  br label %108

108:                                              ; preds = %100, %106
  %109 = phi i8* [ %104, %100 ], [ %107, %106 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %86
  store i8 0, i8* %110, align 1
  %111 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8, !noalias !59
  %114 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %115 = load i64, i64* %114, align 8, !noalias !59
  %116 = icmp ugt i64 %115, -17
  br i1 %116, label %117, label %119

117:                                              ; preds = %108
  %118 = bitcast %"class.std::__1::basic_string"* %111 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %118) #11
  unreachable

119:                                              ; preds = %108
  %120 = icmp ult i64 %115, 23
  br i1 %120, label %129, label %121

121:                                              ; preds = %119
  %122 = add nuw i64 %115, 16
  %123 = and i64 %122, -16
  %124 = tail call i8* @_Znwm(i64 %123) #12
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %124, i8** %125, align 8, !alias.scope !59
  %126 = or i64 %123, -9223372036854775808
  %127 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %126, i64* %127, align 8, !alias.scope !59
  %128 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %115, i64* %128, align 8, !alias.scope !59
  br label %135

129:                                              ; preds = %119
  %130 = trunc i64 %115 to i8
  %131 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  store i8 %130, i8* %132, align 1, !alias.scope !59
  %133 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  %134 = icmp eq i64 %115, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %129, %121
  %136 = phi i8* [ %124, %121 ], [ %133, %129 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %113, i64 %115, i1 false) #10
  br label %137

137:                                              ; preds = %129, %135
  %138 = phi i8* [ %133, %129 ], [ %136, %135 ]
  %139 = getelementptr inbounds i8, i8* %138, i64 %115
  store i8 0, i8* %139, align 1
  %140 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 4
  %141 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %144 = load i64, i64* %143, align 8
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %140, i8* %142, i64 %144) #10
  %145 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 5
  %146 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %149 = load i64, i64* %148, align 8
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %145, i8* %147, i64 %149) #10
  %150 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %151 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %152 = load i8*, i8** %151, align 8, !noalias !62
  %153 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %154 = load i64, i64* %153, align 8, !noalias !62
  %155 = icmp ugt i64 %154, -17
  br i1 %155, label %156, label %158

156:                                              ; preds = %137
  %157 = bitcast %"class.std::__1::basic_string"* %150 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %157) #11
  unreachable

158:                                              ; preds = %137
  %159 = icmp ult i64 %154, 23
  br i1 %159, label %168, label %160

160:                                              ; preds = %158
  %161 = add nuw i64 %154, 16
  %162 = and i64 %161, -16
  %163 = tail call i8* @_Znwm(i64 %162) #12
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %163, i8** %164, align 8, !alias.scope !62
  %165 = or i64 %162, -9223372036854775808
  %166 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %165, i64* %166, align 8, !alias.scope !62
  %167 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %154, i64* %167, align 8, !alias.scope !62
  br label %174

168:                                              ; preds = %158
  %169 = trunc i64 %154 to i8
  %170 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  store i8 %169, i8* %171, align 1, !alias.scope !62
  %172 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %173 = icmp eq i64 %154, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %168, %160
  %175 = phi i8* [ %163, %160 ], [ %172, %168 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %175, i8* align 1 %152, i64 %154, i1 false) #10
  br label %176

176:                                              ; preds = %168, %174
  %177 = phi i8* [ %172, %168 ], [ %175, %174 ]
  %178 = getelementptr inbounds i8, i8* %177, i64 %154
  store i8 0, i8* %178, align 1
  %179 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7
  %180 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %181 = load i8*, i8** %180, align 8, !noalias !65
  %182 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %183 = load i64, i64* %182, align 8, !noalias !65
  %184 = icmp ugt i64 %183, -17
  br i1 %184, label %185, label %187

185:                                              ; preds = %176
  %186 = bitcast %"class.std::__1::basic_string"* %179 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %186) #11
  unreachable

187:                                              ; preds = %176
  %188 = icmp ult i64 %183, 23
  br i1 %188, label %197, label %189

189:                                              ; preds = %187
  %190 = add nuw i64 %183, 16
  %191 = and i64 %190, -16
  %192 = tail call i8* @_Znwm(i64 %191) #12
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %192, i8** %193, align 8, !alias.scope !65
  %194 = or i64 %191, -9223372036854775808
  %195 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %194, i64* %195, align 8, !alias.scope !65
  %196 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %183, i64* %196, align 8, !alias.scope !65
  br label %203

197:                                              ; preds = %187
  %198 = trunc i64 %183 to i8
  %199 = bitcast %"class.std::__1::basic_string"* %179 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  store i8 %198, i8* %200, align 1, !alias.scope !65
  %201 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  %202 = icmp eq i64 %183, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %197, %189
  %204 = phi i8* [ %192, %189 ], [ %201, %197 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %204, i8* align 1 %181, i64 %183, i1 false) #10
  br label %205

205:                                              ; preds = %197, %203
  %206 = phi i8* [ %201, %197 ], [ %204, %203 ]
  %207 = getelementptr inbounds i8, i8* %206, i64 %183
  store i8 0, i8* %207, align 1
  %208 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8
  %209 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  %210 = load i8*, i8** %209, align 8, !noalias !68
  %211 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %212 = load i64, i64* %211, align 8, !noalias !68
  %213 = icmp ugt i64 %212, -17
  br i1 %213, label %214, label %216

214:                                              ; preds = %205
  %215 = bitcast %"class.std::__1::basic_string"* %208 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %215) #11
  unreachable

216:                                              ; preds = %205
  %217 = icmp ult i64 %212, 23
  br i1 %217, label %226, label %218

218:                                              ; preds = %216
  %219 = add nuw i64 %212, 16
  %220 = and i64 %219, -16
  %221 = tail call i8* @_Znwm(i64 %220) #12
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %221, i8** %222, align 8, !alias.scope !68
  %223 = or i64 %220, -9223372036854775808
  %224 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %223, i64* %224, align 8, !alias.scope !68
  %225 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %212, i64* %225, align 8, !alias.scope !68
  br label %232

226:                                              ; preds = %216
  %227 = trunc i64 %212 to i8
  %228 = bitcast %"class.std::__1::basic_string"* %208 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %228, i64 0, i32 1, i32 0
  store i8 %227, i8* %229, align 1, !alias.scope !68
  %230 = bitcast %"class.std::__1::basic_string"* %208 to i8*
  %231 = icmp eq i64 %212, 0
  br i1 %231, label %234, label %232

232:                                              ; preds = %226, %218
  %233 = phi i8* [ %221, %218 ], [ %230, %226 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %233, i8* align 1 %210, i64 %212, i1 false) #10
  br label %234

234:                                              ; preds = %226, %232
  %235 = phi i8* [ %230, %226 ], [ %233, %232 ]
  %236 = getelementptr inbounds i8, i8* %235, i64 %212
  store i8 0, i8* %236, align 1
  %237 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  %238 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  %241 = load i64, i64* %240, align 8
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %237, i8* %239, i64 %241) #10
  %242 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  tail call void @_ZN4GURLC1Ev(%class.GURL* %242) #10
  %243 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 11
  store i8 1, i8* %243, align 8
  %244 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %245 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 19
  store i32 0, i32* %245, align 4
  %246 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 20
  %247 = bitcast %"class.std::__1::vector"* %244 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 58, i1 false)
  store i32 %17, i32* %246, align 8
  %248 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %249 = add i32 %17, -1
  %250 = icmp ugt i32 %249, 999
  br i1 %250, label %251, label %252

251:                                              ; preds = %234
  tail call void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* sret %248) #10
  br label %255

252:                                              ; preds = %234
  %253 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %253) #10, !noalias !71
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 -86, i64 24, i1 false) #10, !noalias !71
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %21, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 %17) #10
  %254 = bitcast %"class.std::__1::basic_string"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %254, i8* nonnull align 8 %253, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %253) #10, !noalias !71
  br label %255

255:                                              ; preds = %251, %252
  %256 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %257 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %258 = bitcast %"class.std::__1::basic_string.9"* %257 to i8*
  %259 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %260 = bitcast %"class.std::__1::basic_string.9"* %259 to i8*
  %261 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %262 = bitcast %"class.std::__1::basic_string"* %261 to i8*
  %263 = bitcast %"class.std::__1::basic_string.9"* %20 to i8*
  %264 = bitcast %"class.std::__1::vector"* %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %264, i8 0, i64 96, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #10
  %265 = bitcast %"class.std::__1::basic_string.9"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %265, i64 0, i32 1, i32 1
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  %269 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i16*, i16** %269, align 8
  %271 = bitcast %"class.std::__1::basic_string.9"* %1 to i16*
  %272 = select i1 %268, i16* %270, i16* %271
  %273 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %274 = load i64, i64* %273, align 8
  %275 = zext i8 %267 to i64
  %276 = select i1 %268, i64 %274, i64 %275
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.9"* nonnull sret %20, i16* %272, i64 %276, i1 zeroext true) #10
  %277 = bitcast %"class.std::__1::basic_string.9"* %257 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %277, i64 0, i32 1, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %284

281:                                              ; preds = %255
  %282 = bitcast %"class.std::__1::basic_string.9"* %257 to i8**
  %283 = load i8*, i8** %282, align 8
  call void @_ZdlPv(i8* %283) #12
  br label %284

284:                                              ; preds = %255, %281
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* nonnull align 8 %263, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #10
  %285 = bitcast %"class.std::__1::basic_string.9"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #10
  %286 = bitcast %"class.std::__1::basic_string.9"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %287 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %286, i64 0, i32 1, i32 1
  %288 = load i8, i8* %287, align 1
  %289 = icmp slt i8 %288, 0
  %290 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i16*, i16** %290, align 8
  %292 = bitcast %"class.std::__1::basic_string.9"* %2 to i16*
  %293 = select i1 %289, i16* %291, i16* %292
  %294 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = zext i8 %288 to i64
  %297 = select i1 %289, i64 %295, i64 %296
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.9"* nonnull sret %19, i16* %293, i64 %297) #10
  %298 = bitcast %"class.std::__1::basic_string.9"* %259 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %298, i64 0, i32 1, i32 1
  %300 = load i8, i8* %299, align 1
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %284
  %303 = bitcast %"class.std::__1::basic_string.9"* %259 to i8**
  %304 = load i8*, i8** %303, align 8
  call void @_ZdlPv(i8* %304) #12
  br label %305

305:                                              ; preds = %284, %302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* nonnull align 8 %285, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #10
  %306 = load i8, i8* %299, align 1
  %307 = icmp slt i8 %306, 0
  %308 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %259, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i16*, i16** %308, align 8
  %310 = bitcast %"class.std::__1::basic_string.9"* %259 to i16*
  %311 = select i1 %307, i16* %309, i16* %310
  %312 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = zext i8 %306 to i64
  %315 = select i1 %307, i64 %313, i64 %314
  %316 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %311, i64 %315, i32 3, %"class.std::__1::basic_string.9"* %259) #10
  %317 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #10
  %318 = icmp ugt i64 %4, -17
  br i1 %318, label %319, label %321

319:                                              ; preds = %305
  %320 = bitcast %"class.std::__1::basic_string"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %320) #11
  unreachable

321:                                              ; preds = %305
  %322 = icmp ult i64 %4, 23
  br i1 %322, label %331, label %323

323:                                              ; preds = %321
  %324 = add nuw i64 %4, 16
  %325 = and i64 %324, -16
  %326 = call i8* @_Znwm(i64 %325) #12
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %326, i8** %327, align 8, !alias.scope !74
  %328 = or i64 %325, -9223372036854775808
  %329 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %328, i64* %329, align 8, !alias.scope !74
  %330 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %330, align 8, !alias.scope !74
  br label %336

331:                                              ; preds = %321
  %332 = trunc i64 %4 to i8
  %333 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %334 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %333, i64 0, i32 1, i32 0
  store i8 %332, i8* %334, align 1, !alias.scope !74
  %335 = icmp eq i64 %4, 0
  br i1 %335, label %338, label %336

336:                                              ; preds = %331, %323
  %337 = phi i8* [ %326, %323 ], [ %317, %331 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %337, i8* align 1 %3, i64 %4, i1 false) #10
  br label %338

338:                                              ; preds = %331, %336
  %339 = phi i8* [ %317, %331 ], [ %337, %336 ]
  %340 = getelementptr inbounds i8, i8* %339, i64 %4
  store i8 0, i8* %340, align 1
  %341 = icmp eq %"class.std::__1::basic_string"* %261, %22
  br i1 %341, label %342, label %344

342:                                              ; preds = %338
  %343 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %370

344:                                              ; preds = %338
  %345 = bitcast %"class.std::__1::basic_string"* %261 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  %349 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  %351 = load i8, i8* %350, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %348, label %361, label %353

353:                                              ; preds = %344
  br i1 %352, label %355, label %354

354:                                              ; preds = %353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* nonnull align 8 %317, i64 24, i1 false) #10
  br label %370

355:                                              ; preds = %353
  %356 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %359 = load i64, i64* %358, align 8
  %360 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %261, i8* %357, i64 %359) #10
  br label %370

361:                                              ; preds = %344
  %362 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %365 = load i64, i64* %364, align 8
  %366 = zext i8 %351 to i64
  %367 = select i1 %352, i8* %363, i8* %317
  %368 = select i1 %352, i64 %365, i64 %366
  %369 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %261, i8* %367, i64 %368) #10
  br label %370

370:                                              ; preds = %342, %354, %355, %361
  %371 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %343, %342 ], [ %349, %354 ], [ %349, %355 ], [ %349, %361 ]
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %370
  %376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %377) #12
  br label %378

378:                                              ; preds = %370, %375
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #10
  %379 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %379) #10
  %380 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 0
  %381 = load i8*, i8** %380, align 8, !noalias !77
  %382 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  %383 = load i64, i64* %382, align 8, !noalias !77
  %384 = icmp ugt i64 %383, -17
  br i1 %384, label %385, label %387

385:                                              ; preds = %378
  %386 = bitcast %"class.std::__1::basic_string"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %386) #11
  unreachable

387:                                              ; preds = %378
  %388 = icmp ult i64 %383, 23
  br i1 %388, label %397, label %389

389:                                              ; preds = %387
  %390 = add nuw i64 %383, 16
  %391 = and i64 %390, -16
  %392 = call i8* @_Znwm(i64 %391) #12
  %393 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %392, i8** %393, align 8, !alias.scope !77
  %394 = or i64 %391, -9223372036854775808
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %394, i64* %395, align 8, !alias.scope !77
  %396 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %383, i64* %396, align 8, !alias.scope !77
  br label %402

397:                                              ; preds = %387
  %398 = trunc i64 %383 to i8
  %399 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %400 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %399, i64 0, i32 1, i32 0
  store i8 %398, i8* %400, align 1, !alias.scope !77
  %401 = icmp eq i64 %383, 0
  br i1 %401, label %404, label %402

402:                                              ; preds = %397, %389
  %403 = phi i8* [ %392, %389 ], [ %379, %397 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %403, i8* align 1 %381, i64 %383, i1 false) #10
  br label %404

404:                                              ; preds = %397, %402
  %405 = phi i8* [ %379, %397 ], [ %403, %402 ]
  %406 = getelementptr inbounds i8, i8* %405, i64 %383
  store i8 0, i8* %406, align 1
  %407 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 1
  %408 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %407, align 8
  %409 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %410 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %409, align 8
  %411 = icmp ult %"class.std::__1::basic_string"* %408, %410
  br i1 %411, label %412, label %417

412:                                              ; preds = %404
  %413 = bitcast %"class.std::__1::basic_string"* %408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* nonnull align 8 %379, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %379, i8 0, i64 24, i1 false) #10
  %414 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %408, i64 1
  %415 = ptrtoint %"class.std::__1::basic_string"* %414 to i64
  %416 = bitcast %"class.std::__1::basic_string"** %407 to i64*
  store i64 %415, i64* %416, align 8
  br label %425

417:                                              ; preds = %404
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %244, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #10
  %418 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %418, i64 0, i32 1, i32 0
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %417
  %423 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  call void @_ZdlPv(i8* %424) #12
  br label %425

425:                                              ; preds = %412, %417, %422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %379) #10
  %426 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %427 = load i64, i64* %426, align 8
  %428 = icmp eq i64 %427, 7
  br i1 %428, label %429, label %440, !prof !80

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %431 = bitcast %"class.base::ListValue"* %16 to i64*
  %432 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %433 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %435 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 1
  %436 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %437 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %437, i64 0, i32 1, i32 0
  %439 = bitcast %"class.std::__1::basic_string"** %435 to i64*
  br label %442

440:                                              ; preds = %472, %425
  %441 = call dereferenceable(24) %"class.std::__1::vector.39"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #11
  unreachable

442:                                              ; preds = %429, %472
  %443 = phi i64 [ 0, %429 ], [ %473, %472 ]
  %444 = load i64, i64* %430, align 8
  %445 = load i64, i64* %431, align 8
  %446 = sub i64 %444, %445
  %447 = ashr exact i64 %446, 5
  %448 = icmp ult i64 %443, %447
  br i1 %448, label %450, label %449

449:                                              ; preds = %442
  ret void

450:                                              ; preds = %442
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %432) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 0, i64 24, i1 false) #10
  %451 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %16, i64 %443, %"class.std::__1::basic_string"* nonnull %24) #10
  %452 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %435, align 8
  %453 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %436, align 8
  %454 = icmp eq %"class.std::__1::basic_string"* %452, %453
  br i1 %454, label %466, label %455

455:                                              ; preds = %450
  %456 = load i8, i8* %438, align 1
  %457 = icmp slt i8 %456, 0
  br i1 %457, label %460, label %458

458:                                              ; preds = %455
  %459 = bitcast %"class.std::__1::basic_string"* %452 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %459, i8* nonnull align 8 %432, i64 24, i1 false) #10
  br label %463

460:                                              ; preds = %455
  %461 = load i8*, i8** %433, align 8
  %462 = load i64, i64* %434, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %452, i8* %461, i64 %462) #10
  br label %463

463:                                              ; preds = %460, %458
  %464 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %452, i64 1
  %465 = ptrtoint %"class.std::__1::basic_string"* %464 to i64
  store i64 %465, i64* %439, align 8
  br label %467

466:                                              ; preds = %450
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %256, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #10
  br label %467

467:                                              ; preds = %463, %466
  %468 = load i8, i8* %438, align 1
  %469 = icmp slt i8 %468, 0
  br i1 %469, label %470, label %472

470:                                              ; preds = %467
  %471 = load i8*, i8** %433, align 8
  call void @_ZdlPv(i8* %471) #12
  br label %472

472:                                              ; preds = %467, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %432) #10
  %473 = add nuw i64 %443, 1
  %474 = load i64, i64* %426, align 8
  %475 = icmp eq i64 %474, 7
  br i1 %475, label %442, label %440, !prof !80
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* nocapture, %"class.std::__1::basic_string.9"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.9", align 8
  %4 = bitcast %"class.std::__1::basic_string.9"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.std::__1::basic_string.9"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string.9"* %1 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.9"* nonnull sret %3, i16* %12, i64 %16, i1 zeroext true) #10
  %17 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %18 = bitcast %"class.std::__1::basic_string.9"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string.9"* %17 to i8**
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %22, %2
  %26 = bitcast %"class.std::__1::basic_string.9"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %4, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string.9"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.9", align 8
  %4 = bitcast %"class.std::__1::basic_string.9"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = bitcast %"class.std::__1::basic_string.9"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string.9"* %1 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.9"* nonnull sret %3, i16* %12, i64 %16) #10
  %17 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %18 = bitcast %"class.std::__1::basic_string.9"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string.9"* %17 to i8**
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %22, %2
  %26 = bitcast %"class.std::__1::basic_string.9"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %4, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  %27 = load i8, i8* %19, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string.9"* %17 to i16*
  %32 = select i1 %28, i16* %30, i16* %31
  %33 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %27 to i64
  %36 = select i1 %28, i64 %34, i64 %35
  %37 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %32, i64 %36, i32 3, %"class.std::__1::basic_string.9"* %17) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %4 = icmp eq %"class.std::__1::basic_string"* %3, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #10
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #10
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #10
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLDataD2Ev(%struct.TemplateURLData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %12 = bitcast %"class.std::__1::basic_string.9"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.9"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %21 = bitcast %"class.std::__1::basic_string.9"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string.9"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %31, null
  br i1 %32, label %55, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %35 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 1
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %37 = icmp eq %"class.std::__1::basic_string"* %36, %31
  br i1 %37, label %53, label %38

38:                                               ; preds = %33, %48
  %39 = phi %"class.std::__1::basic_string"* [ %40, %48 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 -1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %45, %38
  %49 = icmp eq %"class.std::__1::basic_string"* %40, %31
  br i1 %49, label %50, label %38

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector"* %29 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %33
  %54 = phi i8* [ %52, %50 ], [ %34, %33 ]
  store %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"** %35, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %28, %53
  %56 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %55, %61
  %65 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %66, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %71 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 1
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, %67
  br i1 %73, label %89, label %74

74:                                               ; preds = %69, %84
  %75 = phi %"class.std::__1::basic_string"* [ %76, %84 ], [ %72, %69 ]
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 -1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %81, %74
  %85 = icmp eq %"class.std::__1::basic_string"* %76, %67
  br i1 %85, label %86, label %74

86:                                               ; preds = %84
  %87 = bitcast %"class.std::__1::vector"* %65 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %69
  %90 = phi i8* [ %88, %86 ], [ %70, %69 ]
  store %"class.std::__1::basic_string"* %67, %"class.std::__1::basic_string"** %71, align 8
  tail call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %64, %89
  %92 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  tail call void @_ZN4GURLD1Ev(%class.GURL* %92) #10
  %93 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  tail call void @_ZN4GURLD1Ev(%class.GURL* %93) #10
  %94 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %91, %99
  %103 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %102, %108
  %112 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %113 = bitcast %"class.std::__1::basic_string"* %112 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  tail call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %111, %117
  %121 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 5
  tail call void @_ZN4GURLD1Ev(%class.GURL* %121) #10
  %122 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %122) #10
  %123 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3
  %124 = bitcast %"class.std::__1::basic_string"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %120, %128
  %132 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %131, %137
  %141 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1
  %142 = bitcast %"class.std::__1::basic_string"* %141 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  tail call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %140, %146
  %150 = bitcast %struct.TemplateURLData* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  tail call void @_ZdlPv(i8* %156) #12
  br label %157

157:                                              ; preds = %149, %154
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.9"* sret, i16*, i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.9"* sret, i16*, i64) local_unnamed_addr #1

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string.9"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TemplateURLData16GenerateSyncGUIDEv(%struct.TemplateURLData* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 20
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 999
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  call void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* nonnull sret %3) #10
  br label %12

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10, !noalias !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #10, !noalias !81
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 %6) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %11, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10, !noalias !81
  br label %12

12:                                               ; preds = %9, %10
  %13 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %18, %12
  %22 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %4, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK15TemplateURLData19EstimateMemoryUsageEv(%struct.TemplateURLData*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 0
  %3 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %2) #10
  %4 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 1
  %5 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %4) #10
  %6 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 2
  %7 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %6) #10
  %8 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 3
  %9 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %8) #10
  %10 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 4
  %11 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %10) #10
  %12 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 5
  %13 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %12) #10
  %14 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 6
  %15 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %14) #10
  %16 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 7
  %17 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %16) #10
  %18 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 8
  %19 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %18) #10
  %20 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 9
  %21 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %20) #10
  %22 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 10
  %23 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %22) #10
  %24 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12
  %25 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %29 to %"class.std::__1::basic_string"*
  %31 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 12, i32 0, i32 1
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %32, %30
  br i1 %33, label %41, label %34

34:                                               ; preds = %1, %34
  %35 = phi i64 [ %38, %34 ], [ 0, %1 ]
  %36 = phi %"class.std::__1::basic_string"* [ %39, %34 ], [ %30, %1 ]
  %37 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %36) #10
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 1
  %40 = icmp eq %"class.std::__1::basic_string"* %39, %32
  br i1 %40, label %41, label %34

41:                                               ; preds = %34, %1
  %42 = phi i64 [ 0, %1 ], [ %38, %34 ]
  %43 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 21
  %44 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %43) #10
  %45 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22
  %46 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = inttoptr i64 %50 to %"class.std::__1::basic_string"*
  %52 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 22, i32 0, i32 1
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = icmp eq %"class.std::__1::basic_string"* %53, %51
  br i1 %54, label %62, label %55

55:                                               ; preds = %41, %55
  %56 = phi i64 [ %59, %55 ], [ 0, %41 ]
  %57 = phi %"class.std::__1::basic_string"* [ %60, %55 ], [ %51, %41 ]
  %58 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %57) #10
  %59 = add i64 %58, %56
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 1
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %53
  br i1 %61, label %62, label %55

62:                                               ; preds = %55, %41
  %63 = phi i64 [ 0, %41 ], [ %59, %55 ]
  %64 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 23
  %65 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.9"* dereferenceable(24) %64) #10
  %66 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 24
  %67 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.9"* dereferenceable(24) %66) #10
  %68 = getelementptr inbounds %struct.TemplateURLData, %struct.TemplateURLData* %0, i64 0, i32 25
  %69 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %68) #10
  %70 = add i64 %5, %3
  %71 = add i64 %70, %7
  %72 = add i64 %71, %9
  %73 = add i64 %72, %11
  %74 = add i64 %73, %13
  %75 = add i64 %74, %15
  %76 = add i64 %75, %17
  %77 = add i64 %76, %19
  %78 = add i64 %77, %21
  %79 = add i64 %78, %23
  %80 = add i64 %79, %27
  %81 = sub i64 %80, %29
  %82 = add i64 %81, %42
  %83 = add i64 %82, %44
  %84 = add i64 %83, %48
  %85 = sub i64 %84, %50
  %86 = add i64 %85, %63
  %87 = add i64 %86, %65
  %88 = add i64 %87, %67
  %89 = add i64 %88, %69
  ret i64 %89
}

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.9"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.39"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #4 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #11
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #10
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #10
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #10
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #10
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #11
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #10
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #10
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.9"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.9"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.9"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.9"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !84
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !84
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !87, !noalias !84
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !87, !noalias !84
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !84
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !84
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !87, !noalias !84
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !87, !noalias !84
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !84
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !84
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !87, !noalias !84
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !87, !noalias !84
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !84
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !84
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !87, !noalias !84
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !87, !noalias !84
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !89

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !84
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !84
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !87, !noalias !84
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !87, !noalias !84
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !90

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !91

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !92

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !93

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !94

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !95

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !97
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !97
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !100, !noalias !97
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !100, !noalias !97
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !97
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !97
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !100, !noalias !97
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !100, !noalias !97
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !97
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !97
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !100, !noalias !97
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !100, !noalias !97
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !97
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !97
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !100, !noalias !97
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !100, !noalias !97
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !102

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !97
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !97
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !100, !noalias !97
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !100, !noalias !97
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !103

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !104

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !105

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.9"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #10
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #10
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !9}
!47 = distinct !{!47, !11}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !9}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!52 = distinct !{!52, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!55 = distinct !{!55, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!58 = distinct !{!58, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!61 = distinct !{!61, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!67 = distinct !{!67, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!70 = distinct !{!70, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN12_GLOBAL__N_112GenerateGUIDEi: argument 0"}
!73 = distinct !{!73, !"_ZN12_GLOBAL__N_112GenerateGUIDEi"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!76 = distinct !{!76, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!79 = distinct !{!79, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!80 = !{!"branch_weights", i32 2000, i32 1}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN12_GLOBAL__N_112GenerateGUIDEi: argument 0"}
!83 = distinct !{!83, !"_ZN12_GLOBAL__N_112GenerateGUIDEi"}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !9}
!90 = distinct !{!90, !11}
!91 = distinct !{!91, !11}
!92 = distinct !{!92, !9}
!93 = distinct !{!93, !9}
!94 = distinct !{!94, !11}
!95 = distinct !{!95, !96, !9}
!96 = !{!"llvm.loop.unroll.runtime.disable"}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !9}
!103 = distinct !{!103, !11}
!104 = distinct !{!104, !11}
!105 = distinct !{!105, !9}
