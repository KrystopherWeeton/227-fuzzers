; ModuleID = '../../third_party/blink/renderer/core/css/vision_deficiency.cc'
source_filename = "../../third_party/blink/renderer/core/css/vision_deficiency.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1", i8* }
%"class.WTF::StringAppend.1" = type { i8*, %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringTypeAdapter.2" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.3" = type { %"class.WTF::StringView" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_10StringViewEE6lengthEv = comdat any

@.str = private unnamed_addr constant [163 x i8] c"<feColorMatrix values=\220.213  0.715  0.072  0.000  0.000 0.213  0.715  0.072  0.000  0.000 0.213  0.715  0.072  0.000  0.000 0.000  0.000  0.000  1.000  0.000 \22/>\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"<feGaussianBlur stdDeviation=\222\22/>\00", align 1
@.str.2 = private unnamed_addr constant [167 x i8] c"<feColorMatrix values=\22 0.367  0.861 -0.228  0.000  0.000  0.280  0.673  0.047  0.000  0.000 -0.012  0.043  0.969  0.000  0.000  0.000  0.000  0.000  1.000  0.000 \22/>\00", align 1
@.str.3 = private unnamed_addr constant [167 x i8] c"<feColorMatrix values=\22 0.152  1.053 -0.205  0.000  0.000  0.115  0.786  0.099  0.000  0.000 -0.004 -0.048  1.052  0.000  0.000  0.000  0.000  0.000  1.000  0.000 \22/>\00", align 1
@.str.4 = private unnamed_addr constant [167 x i8] c"<feColorMatrix values=\22 1.256 -0.077 -0.179  0.000  0.000 -0.078  0.931  0.148  0.000  0.000  0.005  0.691  0.304  0.000  0.000  0.000  0.000  0.000  1.000  0.000 \22/>\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"data:image/svg+xml,<svg xmlns=\22http://www.w3.org/2000/svg\22><filter id=\22f\22>\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"</filter></svg>#f\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.8 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.9 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink31CreateVisionDeficiencyFilterUrlENS_16VisionDeficiencyE(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringAppend", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  switch i32 %0, label %261 [
    i32 1, label %8
    i32 2, label %58
    i32 3, label %108
    i32 4, label %158
    i32 5, label %208
    i32 0, label %258
  ]

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1
  %13 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 1
  store i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 2
  store i32 162, i32* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %16, align 8, !alias.scope !2
  %17 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %6) #6
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %55, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = and i32 %21, 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = load atomic i32, i32* %20 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #6
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !5

37:                                               ; preds = %28
  call void @llvm.trap() #6
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %42

40:                                               ; preds = %19
  %41 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %17) #6
  br label %42

42:                                               ; preds = %40, %38, %24
  %43 = phi %"class.WTF::StringImpl"* [ %17, %38 ], [ %17, %24 ], [ %41, %40 ]
  %44 = load atomic i32, i32* %20 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #6
  br label %55

55:                                               ; preds = %8, %51, %54
  %56 = phi %"class.WTF::StringImpl"* [ %43, %51 ], [ %43, %54 ], [ null, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  br label %262

58:                                               ; preds = %1
  %59 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #6
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1
  %63 = bitcast %"class.WTF::StringView"* %62 to i64*
  store i64 %60, i64* %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 2
  store i32 34, i32* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %66, align 8, !alias.scope !6
  %67 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %5) #6
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %105, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 acquire, align 4
  %72 = and i32 %71, 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %90, label %74

74:                                               ; preds = %69
  %75 = load atomic i32, i32* %70 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #6
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !5

87:                                               ; preds = %78
  call void @llvm.trap() #6
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %92

90:                                               ; preds = %69
  %91 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %67) #6
  br label %92

92:                                               ; preds = %90, %88, %74
  %93 = phi %"class.WTF::StringImpl"* [ %67, %88 ], [ %67, %74 ], [ %91, %90 ]
  %94 = load atomic i32, i32* %70 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #6
  br label %105

105:                                              ; preds = %58, %101, %104
  %106 = phi %"class.WTF::StringImpl"* [ %93, %101 ], [ %93, %104 ], [ null, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #6
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %107, align 8
  br label %262

108:                                              ; preds = %1
  %109 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #6
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0), i8** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1
  %113 = bitcast %"class.WTF::StringView"* %112 to i64*
  store i64 %110, i64* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 1
  store i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.2, i64 0, i64 0), i8** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 2
  store i32 166, i32* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %116, align 8, !alias.scope !9
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %4) #6
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %155, label %119

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 acquire, align 4
  %122 = and i32 %121, 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %119
  %125 = load atomic i32, i32* %120 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %142

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #6
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !5

137:                                              ; preds = %128
  call void @llvm.trap() #6
  unreachable

138:                                              ; preds = %128
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %129, align 4
  br label %142

140:                                              ; preds = %119
  %141 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %117) #6
  br label %142

142:                                              ; preds = %140, %138, %124
  %143 = phi %"class.WTF::StringImpl"* [ %117, %138 ], [ %117, %124 ], [ %141, %140 ]
  %144 = load atomic i32, i32* %120 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #6
  br label %155

155:                                              ; preds = %108, %151, %154
  %156 = phi %"class.WTF::StringImpl"* [ %143, %151 ], [ %143, %154 ], [ null, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #6
  %157 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %157, align 8
  br label %262

158:                                              ; preds = %1
  %159 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159) #6
  %160 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %161 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1
  %163 = bitcast %"class.WTF::StringView"* %162 to i64*
  store i64 %160, i64* %163, align 8
  %164 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 1
  store i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.3, i64 0, i64 0), i8** %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 2
  store i32 166, i32* %165, align 8
  %166 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %166, align 8, !alias.scope !12
  %167 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %3) #6
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %205, label %169

169:                                              ; preds = %158
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 acquire, align 4
  %172 = and i32 %171, 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %190, label %174

174:                                              ; preds = %169
  %175 = load atomic i32, i32* %170 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %192

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i33
  %182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %181, i33 1) #6
  %183 = extractvalue { i33, i1 } %182, 1
  %184 = extractvalue { i33, i1 } %182, 0
  %185 = icmp slt i33 %184, 0
  %186 = or i1 %183, %185
  br i1 %186, label %187, label %188, !prof !5

187:                                              ; preds = %178
  call void @llvm.trap() #6
  unreachable

188:                                              ; preds = %178
  %189 = trunc i33 %184 to i32
  store i32 %189, i32* %179, align 4
  br label %192

190:                                              ; preds = %169
  %191 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %167) #6
  br label %192

192:                                              ; preds = %190, %188, %174
  %193 = phi %"class.WTF::StringImpl"* [ %167, %188 ], [ %167, %174 ], [ %191, %190 ]
  %194 = load atomic i32, i32* %170 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #6
  br label %205

205:                                              ; preds = %158, %201, %204
  %206 = phi %"class.WTF::StringImpl"* [ %193, %201 ], [ %193, %204 ], [ null, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159) #6
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  br label %262

208:                                              ; preds = %1
  %209 = bitcast %"class.WTF::StringAppend"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %209) #6
  %210 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %211 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0), i8** %211, align 8
  %212 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 1
  %213 = bitcast %"class.WTF::StringView"* %212 to i64*
  store i64 %210, i64* %213, align 8
  %214 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 1, i32 1
  store i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.4, i64 0, i64 0), i8** %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 1, i32 2
  store i32 166, i32* %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %216, align 8, !alias.scope !15
  %217 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %2) #6
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %255, label %219

219:                                              ; preds = %208
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 acquire, align 4
  %222 = and i32 %221, 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %240, label %224

224:                                              ; preds = %219
  %225 = load atomic i32, i32* %220 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %242

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i33
  %232 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %231, i33 1) #6
  %233 = extractvalue { i33, i1 } %232, 1
  %234 = extractvalue { i33, i1 } %232, 0
  %235 = icmp slt i33 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %237, label %238, !prof !5

237:                                              ; preds = %228
  call void @llvm.trap() #6
  unreachable

238:                                              ; preds = %228
  %239 = trunc i33 %234 to i32
  store i32 %239, i32* %229, align 4
  br label %242

240:                                              ; preds = %219
  %241 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %217) #6
  br label %242

242:                                              ; preds = %240, %238, %224
  %243 = phi %"class.WTF::StringImpl"* [ %217, %238 ], [ %217, %224 ], [ %241, %240 ]
  %244 = load atomic i32, i32* %220 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #6
  br label %255

255:                                              ; preds = %208, %251, %254
  %256 = phi %"class.WTF::StringImpl"* [ %243, %251 ], [ %243, %254 ], [ null, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %209) #6
  %257 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %256, %"class.WTF::StringImpl"** %257, align 8
  br label %262

258:                                              ; preds = %1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #6
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  br label %262

261:                                              ; preds = %1
  unreachable

262:                                              ; preds = %258, %255, %205, %155, %105, %55
  %263 = phi %"class.WTF::StringImpl"* [ %260, %258 ], [ %256, %255 ], [ %206, %205 ], [ %156, %155 ], [ %106, %105 ], [ %56, %55 ]
  ret %"class.WTF::StringImpl"* %263
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.3", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %8 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %9 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = bitcast %"class.WTF::StringTypeAdapter.2"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #6
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %9, i8* %14) #6
  %15 = bitcast %"class.WTF::StringTypeAdapter.2"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false) #6
  %17 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %8, i8* %17) #6
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6
  br i1 %23, label %75, label %24

24:                                               ; preds = %1
  %25 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %26 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %27 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %26, i8** nonnull dereferenceable(8) %10) #6
  %28 = load i8*, i8** %10, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %30 = bitcast %"class.WTF::StringTypeAdapter.2"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false) #6
  %31 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %7, i8* %31) #6
  %32 = bitcast %"class.WTF::StringTypeAdapter.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2", %"class.WTF::StringTypeAdapter.2"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false) #6
  %34 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %5, i8* %34) #6
  %35 = bitcast %"class.WTF::StringTypeAdapter.3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #6
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.WTF::StringView"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %37, i64 24, i1 false) #6
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2"* nonnull %5, i8* %28) #6
  %38 = load i32, i32* %33, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %28, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3"* nonnull %6, i8* %40) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #6
  %41 = call i32 @_ZNK3WTF12StringAppendIPKcNS_10StringViewEE6lengthEv(%"class.WTF::StringAppend.1"* %29) #6
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %28, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2"* nonnull %7, i8* %43) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  %44 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %44, label %126, label %45

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #6
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !5

59:                                               ; preds = %52
  call void @llvm.trap() #6
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %126

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #6
  br label %126

75:                                               ; preds = %1
  %76 = bitcast i16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %11) #6
  %79 = load i16*, i16** %11, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #6
  %82 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %4, i8* %82) #6
  %83 = bitcast %"class.WTF::StringTypeAdapter.2"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #6
  %84 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2", %"class.WTF::StringTypeAdapter.2"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false) #6
  %85 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %2, i8* %85) #6
  %86 = bitcast %"class.WTF::StringTypeAdapter.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #6
  %87 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %88 = bitcast %"class.WTF::StringView"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 8 %88, i64 24, i1 false) #6
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2"* nonnull %2, i16* %79) #6
  %89 = load i32, i32* %84, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %79, i64 %90
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3"* nonnull %3, i16* %91) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #6
  %92 = call i32 @_ZNK3WTF12StringAppendIPKcNS_10StringViewEE6lengthEv(%"class.WTF::StringAppend.1"* %80) #6
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i16, i16* %79, i64 %93
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2"* nonnull %4, i16* %94) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #6
  %95 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %95, label %126, label %96

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %113

103:                                              ; preds = %96
  %104 = zext i32 %102 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #6
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !5

110:                                              ; preds = %103
  call void @llvm.trap() #6
  unreachable

111:                                              ; preds = %103
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %101, align 4
  br label %113

113:                                              ; preds = %96, %111
  %114 = phi i32 [ %112, %111 ], [ %102, %96 ]
  %115 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %116 = load atomic i32, i32* %97 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %121 = add i32 %114, -1
  store i32 %121, i32* %120, align 4
  br label %122

122:                                              ; preds = %119, %113
  %123 = phi i32 [ %121, %119 ], [ %114, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #6
  br label %126

126:                                              ; preds = %125, %122, %75, %74, %71, %24
  %127 = phi i8* [ %25, %24 ], [ %25, %71 ], [ %25, %74 ], [ %76, %75 ], [ %76, %122 ], [ %76, %125 ]
  %128 = phi i64 [ 0, %24 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %115, %122 ], [ %115, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #6
  %129 = inttoptr i64 %128 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %129
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_10StringViewEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2", %"class.WTF::StringTypeAdapter.2"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %4, i8* %14) #6
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_10StringViewEE6lengthEv(%"class.WTF::StringAppend.1"* %9) #6
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_10StringViewEE6lengthEv(%"class.WTF::StringAppend.1"* %9) #6
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %25, i8* %26) #6
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #6
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %41, i8* %42) #6
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #6
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_10StringViewEE6lengthEv(%"class.WTF::StringAppend.1"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2", %"class.WTF::StringTypeAdapter.2"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1", %"class.WTF::StringAppend.1"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2"* nonnull %4, i8* %13) #6
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1", %"class.WTF::StringAppend.1"* %0, i64 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %10, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ult i32 %17, %16
  br i1 %21, label %23, label %22

22:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %1
  %24 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %24, i8* %25) #6
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #6
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #6
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %33 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = icmp ult i32 %17, %15
  br i1 %36, label %38, label %37

37:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* null, i8** %34, align 8
  br label %47

38:                                               ; preds = %32
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %40 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %39, i8* %40) #6
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* %42, i8** %34, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #6
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  br label %47

47:                                               ; preds = %37, %38, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret i32 %17
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3"*, i16*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!4 = distinct !{!4, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplIPKcNS_10StringViewES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
