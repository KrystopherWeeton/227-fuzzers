; ModuleID = '../../third_party/crashpad/crashpad/client/annotation_list.cc'
source_filename = "../../third_party/crashpad/crashpad/client/annotation_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crashpad::AnnotationList" = type { %"class.crashpad::Annotation"*, %"class.crashpad::Annotation", %"class.crashpad::Annotation" }
%"class.crashpad::Annotation" = type <{ %"struct.std::__1::atomic", i8*, i8*, i32, i16, [2 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.crashpad::Annotation"* }
%"class.crashpad::AnnotationList::Iterator" = type { %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"* }
%"struct.crashpad::CrashpadInfo" = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, %"class.crashpad::TSimpleAddressRangeBag"*, %"class.crashpad::TSimpleStringDictionary"*, %"struct.crashpad::internal::UserDataMinidumpStreamListEntry"*, %"class.crashpad::AnnotationList"* }
%"class.crashpad::TSimpleAddressRangeBag" = type { [64 x %"struct.crashpad::TSimpleAddressRangeBag<64>::Entry"] }
%"struct.crashpad::TSimpleAddressRangeBag<64>::Entry" = type { i64, i64 }
%"class.crashpad::TSimpleStringDictionary" = type { [64 x %"struct.crashpad::TSimpleStringDictionary<256, 256, 64>::Entry"] }
%"struct.crashpad::TSimpleStringDictionary<256, 256, 64>::Entry" = type { [256 x i8], [256 x i8] }
%"struct.crashpad::internal::UserDataMinidumpStreamListEntry" = type { i64, i64, i64, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZZN7logging15CheckOpValueStrIPN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

@.str = private unnamed_addr constant [15 x i8] c"curr_ != tail_\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/crashpad/crashpad/client/annotation_list.cc\00", align 1

@_ZN8crashpad14AnnotationListC1Ev = hidden unnamed_addr alias void (%"class.crashpad::AnnotationList"*), void (%"class.crashpad::AnnotationList"*)* @_ZN8crashpad14AnnotationListC2Ev
@_ZN8crashpad14AnnotationListD1Ev = hidden unnamed_addr alias void (%"class.crashpad::AnnotationList"*), void (%"class.crashpad::AnnotationList"*)* @_ZN8crashpad14AnnotationListD2Ev
@_ZN8crashpad14AnnotationList8IteratorC1EPNS_10AnnotationEPKS2_ = hidden unnamed_addr alias void (%"class.crashpad::AnnotationList::Iterator"*, %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"*), void (%"class.crashpad::AnnotationList::Iterator"*, %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"*)* @_ZN8crashpad14AnnotationList8IteratorC2EPNS_10AnnotationEPKS2_
@_ZN8crashpad14AnnotationList8IteratorD1Ev = hidden unnamed_addr alias void (%"class.crashpad::AnnotationList::Iterator"*), void (%"class.crashpad::AnnotationList::Iterator"*)* @_ZN8crashpad14AnnotationList8IteratorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8crashpad14AnnotationListC2Ev(%"class.crashpad::AnnotationList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::AnnotationList", %"class.crashpad::AnnotationList"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.crashpad::AnnotationList", %"class.crashpad::AnnotationList"* %0, i64 0, i32 2
  store %"class.crashpad::Annotation"* %3, %"class.crashpad::Annotation"** %2, align 8
  %4 = getelementptr inbounds %"class.crashpad::AnnotationList", %"class.crashpad::AnnotationList"* %0, i64 0, i32 1
  %5 = ptrtoint %"class.crashpad::Annotation"* %3 to i64
  %6 = bitcast %"class.crashpad::Annotation"* %4 to i64*
  %7 = bitcast %"class.crashpad::Annotation"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 30, i1 false)
  %8 = bitcast %"class.crashpad::Annotation"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 30, i1 false)
  store atomic i64 %5, i64* %6 seq_cst, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8crashpad14AnnotationListD2Ev(%"class.crashpad::AnnotationList"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crashpad::AnnotationList"* @_ZN8crashpad14AnnotationList3GetEv() local_unnamed_addr #2 align 2 {
  %1 = tail call %"struct.crashpad::CrashpadInfo"* @_ZN8crashpad12CrashpadInfo15GetCrashpadInfoEv() #10
  %2 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %1, i64 0, i32 12
  %3 = load %"class.crashpad::AnnotationList"*, %"class.crashpad::AnnotationList"** %2, align 8
  ret %"class.crashpad::AnnotationList"* %3
}

declare %"struct.crashpad::CrashpadInfo"* @_ZN8crashpad12CrashpadInfo15GetCrashpadInfoEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crashpad::AnnotationList"* @_ZN8crashpad14AnnotationList8RegisterEv() local_unnamed_addr #2 align 2 {
  %1 = tail call %"struct.crashpad::CrashpadInfo"* @_ZN8crashpad12CrashpadInfo15GetCrashpadInfoEv() #10
  %2 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %1, i64 0, i32 12
  %3 = load %"class.crashpad::AnnotationList"*, %"class.crashpad::AnnotationList"** %2, align 8
  %4 = icmp eq %"class.crashpad::AnnotationList"* %3, null
  br i1 %4, label %5, label %16

5:                                                ; preds = %0
  %6 = tail call i8* @_Znwm(i64 72) #11
  %7 = bitcast i8* %6 to %"class.crashpad::AnnotationList"*
  %8 = getelementptr inbounds i8, i8* %6, i64 40
  %9 = bitcast i8* %6 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = ptrtoint i8* %8 to i64
  %12 = bitcast i8* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 30, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 30, i1 false) #10
  store atomic i64 %11, i64* %12 seq_cst, align 8
  %13 = tail call %"struct.crashpad::CrashpadInfo"* @_ZN8crashpad12CrashpadInfo15GetCrashpadInfoEv() #10
  %14 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %13, i64 0, i32 12
  %15 = bitcast %"class.crashpad::AnnotationList"** %14 to i8**
  store i8* %6, i8** %15, align 8
  br label %16

16:                                               ; preds = %0, %5
  %17 = phi %"class.crashpad::AnnotationList"* [ %3, %0 ], [ %7, %5 ]
  ret %"class.crashpad::AnnotationList"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad14AnnotationList3AddEPNS_10AnnotationE(%"class.crashpad::AnnotationList"* nocapture, %"class.crashpad::Annotation"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::AnnotationList", %"class.crashpad::AnnotationList"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.crashpad::Annotation"* %1 to i64*
  %7 = cmpxchg i64* %6, i64 0, i64 %5 seq_cst seq_cst
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = ptrtoint %"class.crashpad::Annotation"* %1 to i64
  %11 = cmpxchg weak i64* %4, i64 %5, i64 %10 seq_cst seq_cst
  %12 = extractvalue { i64, i1 } %11, 1
  br i1 %12, label %18, label %13

13:                                               ; preds = %9, %13
  %14 = phi { i64, i1 } [ %16, %13 ], [ %11, %9 ]
  %15 = extractvalue { i64, i1 } %14, 0
  store atomic i64 %15, i64* %6 monotonic, align 8
  %16 = cmpxchg weak i64* %4, i64 %15, i64 %10 seq_cst seq_cst
  %17 = extractvalue { i64, i1 } %16, 1
  br i1 %17, label %18, label %13

18:                                               ; preds = %13, %9, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8crashpad14AnnotationList8IteratorC2EPNS_10AnnotationEPKS2_(%"class.crashpad::AnnotationList::Iterator"* nocapture, %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"*) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 0
  store %"class.crashpad::Annotation"* %1, %"class.crashpad::Annotation"** %4, align 8
  %5 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 1
  store %"class.crashpad::Annotation"* %2, %"class.crashpad::Annotation"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8crashpad14AnnotationList8IteratorD2Ev(%"class.crashpad::AnnotationList::Iterator"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crashpad::Annotation"* @_ZNK8crashpad14AnnotationList8IteratordeEv(%"class.crashpad::AnnotationList::Iterator"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 1
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %7, align 8
  %11 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %8, align 8
  %12 = icmp eq %"class.crashpad::Annotation"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.crashpad::AnnotationList::Iterator"* %0 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %17 = bitcast %"class.crashpad::Annotation"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 74, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %7, align 8
  ret %"class.crashpad::Annotation"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.crashpad::AnnotationList::Iterator"* @_ZN8crashpad14AnnotationList8IteratorppEv(%"class.crashpad::AnnotationList::Iterator"* returned) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 1
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %7, align 8
  %11 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %8, align 8
  %12 = icmp eq %"class.crashpad::Annotation"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.crashpad::AnnotationList::Iterator"* %0 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %17 = bitcast %"class.crashpad::Annotation"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 79, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = bitcast %"class.crashpad::AnnotationList::Iterator"* %0 to i64**
  %27 = load i64*, i64** %26, align 8
  %28 = load atomic i64, i64* %27 seq_cst, align 8
  %29 = inttoptr i64 %28 to %"class.crashpad::Annotation"*
  store %"class.crashpad::Annotation"* %29, %"class.crashpad::Annotation"** %7, align 8
  ret %"class.crashpad::AnnotationList::Iterator"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8crashpad14AnnotationList8IteratoreqERKS1_(%"class.crashpad::AnnotationList::Iterator"* nocapture readonly, %"class.crashpad::AnnotationList::Iterator"* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 0
  %4 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %3, align 8
  %5 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %1, i64 0, i32 0
  %6 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %5, align 8
  %7 = icmp eq %"class.crashpad::Annotation"* %4, %6
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8crashpad14AnnotationList5beginEv(%"class.crashpad::AnnotationList::Iterator"* noalias nocapture sret, %"class.crashpad::AnnotationList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::AnnotationList", %"class.crashpad::AnnotationList"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base"* %3 to i64*
  %5 = load atomic i64, i64* %4 seq_cst, align 8
  %6 = inttoptr i64 %5 to %"class.crashpad::Annotation"*
  %7 = bitcast %"class.crashpad::AnnotationList"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 0
  store %"class.crashpad::Annotation"* %6, %"class.crashpad::Annotation"** %9, align 8
  %10 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 1
  %11 = bitcast %"class.crashpad::Annotation"** %10 to i64*
  store i64 %8, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8crashpad14AnnotationList3endEv(%"class.crashpad::AnnotationList::Iterator"* noalias nocapture sret, %"class.crashpad::AnnotationList"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::AnnotationList", %"class.crashpad::AnnotationList"* %1, i64 0, i32 2
  %4 = bitcast %"class.crashpad::AnnotationList"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 0
  store %"class.crashpad::Annotation"* %3, %"class.crashpad::Annotation"** %6, align 8
  %7 = getelementptr inbounds %"class.crashpad::AnnotationList::Iterator", %"class.crashpad::AnnotationList::Iterator"* %0, i64 0, i32 1
  %8 = bitcast %"class.crashpad::Annotation"** %7 to i64*
  store i64 %5, i64* %8, align 8
  ret void
}

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN8crashpad10AnnotationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
