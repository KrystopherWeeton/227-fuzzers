; ModuleID = '../../third_party/webrtc/common_video/generic_frame_descriptor/generic_frame_info.cc'
source_filename = "../../third_party/webrtc/common_video/generic_frame_descriptor/generic_frame_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::GenericFrameInfo" = type { %"struct.webrtc::FrameDependencyTemplate", %"class.absl::InlinedVector.8", %"class.std::__1::vector", %"class.std::__1::bitset" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.0" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.1" = type { %"class.absl::inlined_vector_internal::Storage.2" }
%"class.absl::inlined_vector_internal::Storage.2" = type { %"class.absl::container_internal::CompressedTuple.3", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.8" = type { %"class.absl::inlined_vector_internal::Storage.9" }
%"class.absl::inlined_vector_internal::Storage.9" = type { %"class.absl::container_internal::CompressedTuple.10", %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" }
%"class.absl::container_internal::CompressedTuple.10" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.11" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.11" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated", [48 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated" = type { %"struct.webrtc::CodecBufferUsage"*, i64 }
%"struct.webrtc::CodecBufferUsage" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.webrtc::GenericFrameInfo::Builder" = type { %"struct.webrtc::GenericFrameInfo" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE8InitFromERKS7_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE8InitFromERKS7_ = comdat any

@_ZN6webrtc16GenericFrameInfoC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::GenericFrameInfo"*), void (%"struct.webrtc::GenericFrameInfo"*)* @_ZN6webrtc16GenericFrameInfoC2Ev
@_ZN6webrtc16GenericFrameInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.webrtc::GenericFrameInfo"*, %"struct.webrtc::GenericFrameInfo"*), void (%"struct.webrtc::GenericFrameInfo"*, %"struct.webrtc::GenericFrameInfo"*)* @_ZN6webrtc16GenericFrameInfoC2ERKS0_
@_ZN6webrtc16GenericFrameInfoD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::GenericFrameInfo"*), void (%"struct.webrtc::GenericFrameInfo"*)* @_ZN6webrtc16GenericFrameInfoD2Ev
@_ZN6webrtc16GenericFrameInfo7BuilderC1Ev = hidden unnamed_addr alias void (%"class.webrtc::GenericFrameInfo::Builder"*), void (%"class.webrtc::GenericFrameInfo::Builder"*)* @_ZN6webrtc16GenericFrameInfo7BuilderC2Ev
@_ZN6webrtc16GenericFrameInfo7BuilderD1Ev = hidden unnamed_addr alias void (%"class.webrtc::GenericFrameInfo::Builder"*), void (%"class.webrtc::GenericFrameInfo::Builder"*)* @_ZN6webrtc16GenericFrameInfo7BuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16GenericFrameInfoC2Ev(%"struct.webrtc::GenericFrameInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = bitcast %"struct.webrtc::GenericFrameInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 4294967295, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16GenericFrameInfoC2ERKS0_(%"struct.webrtc::GenericFrameInfo"*, %"struct.webrtc::GenericFrameInfo"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.webrtc::GenericFrameInfo"* %1 to i64*
  %4 = bitcast %"struct.webrtc::GenericFrameInfo"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %23, label %14

14:                                               ; preds = %2
  %15 = and i64 %12, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  store i64 %12, i64* %10, align 8
  %18 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %20 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %19 to i8*
  %21 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 40, i1 false) #9
  br label %23

22:                                               ; preds = %14
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage"* %9, %"class.absl::inlined_vector_internal::Storage"* dereferenceable(48) %8) #9
  br label %23

23:                                               ; preds = %22, %17, %2
  %24 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 3
  %25 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 0, i32 3
  %26 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %24, i64 0, i32 0
  %28 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %41, label %32

32:                                               ; preds = %23
  %33 = and i64 %30, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  store i64 %30, i64* %28, align 8
  %36 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 0, i32 3, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %38 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %37 to i8*
  %39 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #9
  br label %41

40:                                               ; preds = %32
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.2"* %27, %"class.absl::inlined_vector_internal::Storage.2"* dereferenceable(24) %26) #9
  br label %41

41:                                               ; preds = %40, %35, %23
  %42 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 4
  %43 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 0, i32 4
  %44 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %42, i64 0, i32 0
  %46 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %59, label %50

50:                                               ; preds = %41
  %51 = and i64 %48, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  store i64 %48, i64* %46, align 8
  %54 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 0, i32 4, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %56 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %55 to i8*
  %57 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #9
  br label %59

58:                                               ; preds = %50
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.2"* %45, %"class.absl::inlined_vector_internal::Storage.2"* dereferenceable(24) %44) #9
  br label %59

59:                                               ; preds = %41, %53, %58
  %60 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 1
  %62 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %60, i64 0, i32 0
  %64 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %66, 2
  br i1 %67, label %77, label %68

68:                                               ; preds = %59
  %69 = and i64 %66, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  store i64 %66, i64* %64, align 8
  %72 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %74 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %73 to i8*
  %75 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 64, i1 false) #9
  br label %77

76:                                               ; preds = %68
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage.9"* %63, %"class.absl::inlined_vector_internal::Storage.9"* dereferenceable(72) %62) #9
  br label %77

77:                                               ; preds = %59, %71, %76
  %78 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2
  %79 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector"* %78, %"class.std::__1::vector"* dereferenceable(24) %79)
  %80 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %1, i64 0, i32 3, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  %7 = load i64, i64* %5, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %2
  %10 = icmp slt i64 %7, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #10
  unreachable

13:                                               ; preds = %9
  %14 = add nsw i64 %7, -1
  %15 = lshr i64 %14, 6
  %16 = add nuw nsw i64 %15, 1
  %17 = shl nuw nsw i64 %16, 3
  %18 = tail call i8* @_Znwm(i64 %17) #11
  %19 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %18, i8** %19, align 8
  store i64 0, i64* %3, align 8
  store i64 %16, i64* %4, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %5, align 8
  store i64 %22, i64* %3, align 8
  %23 = icmp ult i64 %22, 65
  %24 = bitcast i8* %18 to i64*
  %25 = add i64 %22, -1
  %26 = lshr i64 %25, 6
  %27 = getelementptr inbounds i64, i64* %24, i64 %26
  %28 = select i1 %23, i64* %24, i64* %27
  store i64 0, i64* %28, align 8
  %29 = icmp sgt i64 %22, 0
  br i1 %29, label %30, label %48

30:                                               ; preds = %13
  %31 = lshr i64 %22, 6
  %32 = bitcast i64* %21 to i8*
  %33 = shl nuw nsw i64 %31, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %32, i64 %33, i1 false) #9, !noalias !2
  %34 = and i64 %22, 63
  %35 = bitcast i8* %18 to i64*
  %36 = getelementptr inbounds i64, i64* %35, i64 %31
  %37 = icmp eq i64 %34, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds i64, i64* %21, i64 %31
  %40 = sub nuw nsw i64 64, %34
  %41 = lshr i64 -1, %40
  %42 = load i64, i64* %39, align 8, !noalias !5
  %43 = and i64 %42, %41
  %44 = xor i64 %41, -1
  %45 = load i64, i64* %36, align 8, !noalias !2
  %46 = and i64 %45, %44
  %47 = or i64 %46, %43
  store i64 %47, i64* %36, align 8, !noalias !2
  br label %48

48:                                               ; preds = %38, %13, %30, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16GenericFrameInfoD2Ev(%"struct.webrtc::GenericFrameInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"struct.webrtc::CodecBufferUsage"** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %7, %12
  %17 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast i32** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %32 = bitcast i32** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %30, %25
  %35 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %41 = bitcast i32** %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %34, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16GenericFrameInfo7BuilderC2Ev(%"class.webrtc::GenericFrameInfo::Builder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = bitcast %"class.webrtc::GenericFrameInfo::Builder"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 4294967295, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16GenericFrameInfo7BuilderD2Ev(%"class.webrtc::GenericFrameInfo::Builder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc16GenericFrameInfoD2Ev(%"struct.webrtc::GenericFrameInfo"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16GenericFrameInfo7Builder5BuildEv(%"struct.webrtc::GenericFrameInfo"* noalias sret, %"class.webrtc::GenericFrameInfo::Builder"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %1, i64 0, i32 0
  tail call void @_ZN6webrtc16GenericFrameInfoC2ERKS0_(%"struct.webrtc::GenericFrameInfo"* %0, %"struct.webrtc::GenericFrameInfo"* dereferenceable(208) %3)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(208) %"class.webrtc::GenericFrameInfo::Builder"* @_ZN6webrtc16GenericFrameInfo7Builder1TEi(%"class.webrtc::GenericFrameInfo::Builder"* returned, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %1, i32* %3, align 4
  ret %"class.webrtc::GenericFrameInfo::Builder"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(208) %"class.webrtc::GenericFrameInfo::Builder"* @_ZN6webrtc16GenericFrameInfo7Builder1SEi(%"class.webrtc::GenericFrameInfo::Builder"* returned, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %3, align 8
  ret %"class.webrtc::GenericFrameInfo::Builder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %"class.webrtc::GenericFrameInfo::Builder"* @_ZN6webrtc16GenericFrameInfo7Builder4DtisEN4absl11string_viewE(%"class.webrtc::GenericFrameInfo::Builder"* returned, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::InlinedVector", align 8
  %5 = bitcast %"class.absl::InlinedVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #9
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector"* nonnull sret %4, i8* %1, i64 %2) #9
  %6 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = icmp eq %"class.absl::InlinedVector"* %4, %6
  br i1 %7, label %24, label %8, !prof !8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast i32** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %8, %13
  %18 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %9, align 8
  %20 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.webrtc::GenericFrameInfo::Builder", %"class.webrtc::GenericFrameInfo::Builder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %22 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %21 to i8*
  %23 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 40, i1 false) #9
  store i64 0, i64* %18, align 8
  br label %33

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast i32** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %17, %24, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #9
  ret %"class.webrtc::GenericFrameInfo::Builder"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage"*, %"class.absl::inlined_vector_internal::Storage"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %9 to i32*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %11 to i32*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 20
  %15 = select i1 %14, i64 %5, i64 20
  %16 = icmp ugt i64 %15, 4611686018427387903
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #10
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 2
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi i32* [ %26, %18 ], [ %12, %8 ]
  %29 = phi i32* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast i32* %29 to i8*
  %31 = bitcast i32* %28 to i8*
  %32 = shl i64 %5, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #9
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.2"*, %"class.absl::inlined_vector_internal::Storage.2"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %9 to i32*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %11 to i32*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 8
  %15 = select i1 %14, i64 %5, i64 8
  %16 = icmp ugt i64 %15, 4611686018427387903
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #10
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 2
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi i32* [ %26, %18 ], [ %12, %8 ]
  %29 = phi i32* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast i32* %29 to i8*
  %31 = bitcast i32* %28 to i8*
  %32 = shl i64 %5, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #9
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage.9"*, %"class.absl::inlined_vector_internal::Storage.9"* dereferenceable(72)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %9 to %"struct.webrtc::CodecBufferUsage"*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %11 to %"struct.webrtc::CodecBufferUsage"*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 16
  %15 = select i1 %14, i64 %5, i64 16
  %16 = icmp ugt i64 %15, 2305843009213693951
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #10
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to %"struct.webrtc::CodecBufferUsage"*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"struct.webrtc::CodecBufferUsage"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"struct.webrtc::CodecBufferUsage"*, %"struct.webrtc::CodecBufferUsage"** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi %"struct.webrtc::CodecBufferUsage"* [ %26, %18 ], [ %12, %8 ]
  %29 = phi %"struct.webrtc::CodecBufferUsage"* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast %"struct.webrtc::CodecBufferUsage"* %29 to i8*
  %31 = bitcast %"struct.webrtc::CodecBufferUsage"* %28 to i8*
  %32 = shl i64 %5, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #9
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!5 = !{!3, !6}
!6 = distinct !{!6, !7, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!8 = !{!"branch_weights", i32 1, i32 2000}
