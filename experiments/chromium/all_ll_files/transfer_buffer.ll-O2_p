; ModuleID = '../../gpu/command_buffer/client/transfer_buffer.cc'
source_filename = "../../gpu/command_buffer/client/transfer_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.gpu::TransferBuffer" = type <{ %"class.gpu::TransferBufferInterface", %"class.gpu::CommandBufferHelper"*, %"class.std::__1::unique_ptr.2", %"class.base::circular_deque.8", i32, i32, i32, i32, i32, i32, i32, i32, %class.scoped_refptr, i32, [4 x i8], i8*, i32, i8, i8, [2 x i8] }>
%"class.gpu::TransferBufferInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.gpu::RingBuffer"* }
%"class.gpu::RingBuffer" = type { %"class.gpu::CommandBufferHelper"*, %"class.base::circular_deque", i32, i32, i32, i32, i32, i32, i8* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.gpu::RingBuffer::Block"*, i64 }
%"struct.gpu::RingBuffer::Block" = type { i32, i32, i32, i32 }
%"class.base::circular_deque.8" = type { %"class.base::internal::VectorBuffer.9", i64, i64 }
%"class.base::internal::VectorBuffer.9" = type { %"class.std::__1::unique_ptr.2"*, i64 }
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"class.gpu::CommandBufferHelper" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gpu::ScopedTransferBufferPtr" = type { i8*, i32, %"class.gpu::CommandBufferHelper"*, %"class.gpu::TransferBufferInterface"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm = comdat any

@_ZTVN3gpu14TransferBufferE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBufferD2Ev to i8*), i8* bitcast (void (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBufferD0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.gpu::TransferBuffer"*)* @_ZNK3gpu14TransferBuffer18shared_memory_guidEv to i8*), i8* bitcast (i1 (%"class.gpu::TransferBuffer"*, i32, i32, i32, i32, i32)* @_ZN3gpu14TransferBuffer10InitializeEjjjjj to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBuffer8GetShmIdEv to i8*), i8* bitcast (void (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBuffer4FreeEv to i8*), i8* bitcast (i1 (%"class.gpu::TransferBuffer"*)* @_ZNK3gpu14TransferBuffer10HaveBufferEv to i8*), i8* bitcast (i8* (%"class.gpu::TransferBuffer"*, i32, i32*)* @_ZN3gpu14TransferBuffer9AllocUpToEjPj to i8*), i8* bitcast (i8* (%"class.gpu::TransferBuffer"*, i32)* @_ZN3gpu14TransferBuffer5AllocEj to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*, i8*)* @_ZNK3gpu14TransferBuffer9GetOffsetEPv to i8*), i8* bitcast (void (%"class.gpu::TransferBuffer"*, i8*)* @_ZN3gpu14TransferBuffer12DiscardBlockEPv to i8*), i8* bitcast (void (%"class.gpu::TransferBuffer"*, i8*, i32)* @_ZN3gpu14TransferBuffer16FreePendingTokenEPvj to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*)* @_ZNK3gpu14TransferBuffer7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*)* @_ZNK3gpu14TransferBuffer11GetFreeSizeEv to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*)* @_ZNK3gpu14TransferBuffer21GetFragmentedFreeSizeEv to i8*), i8* bitcast (void (%"class.gpu::TransferBuffer"*, i32)* @_ZN3gpu14TransferBuffer15ShrinkLastBlockEj to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*)* @_ZNK3gpu14TransferBuffer10GetMaxSizeEv to i8*), i8* bitcast (i8* (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBuffer19AcquireResultBufferEv to i8*), i8* bitcast (void (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBuffer19ReleaseResultBufferEv to i8*), i8* bitcast (i32 (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBuffer15GetResultOffsetEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [21 x i8] c"TransferBuffer::Free\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN3gpu14TransferBufferC1EPNS_19CommandBufferHelperE = hidden unnamed_addr alias void (%"class.gpu::TransferBuffer"*, %"class.gpu::CommandBufferHelper"*), void (%"class.gpu::TransferBuffer"*, %"class.gpu::CommandBufferHelper"*)* @_ZN3gpu14TransferBufferC2EPNS_19CommandBufferHelperE
@_ZN3gpu14TransferBufferD1Ev = hidden unnamed_addr alias void (%"class.gpu::TransferBuffer"*), void (%"class.gpu::TransferBuffer"*)* @_ZN3gpu14TransferBufferD2Ev
@_ZN3gpu23ScopedTransferBufferPtrC1EOS0_ = hidden unnamed_addr alias void (%"class.gpu::ScopedTransferBufferPtr"*, %"class.gpu::ScopedTransferBufferPtr"*), void (%"class.gpu::ScopedTransferBufferPtr"*, %"class.gpu::ScopedTransferBufferPtr"*)* @_ZN3gpu23ScopedTransferBufferPtrC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBufferC2EPNS_19CommandBufferHelperE(%"class.gpu::TransferBuffer"* nocapture, %"class.gpu::CommandBufferHelper"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN3gpu14TransferBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 1
  store %"class.gpu::CommandBufferHelper"* %1, %"class.gpu::CommandBufferHelper"** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 13
  %7 = bitcast %"class.std::__1::unique_ptr.2"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 80, i1 false)
  store i32 -1, i32* %6, align 8
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 15
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 16
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 17
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 18
  store i8 0, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBufferD2Ev(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN3gpu14TransferBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3gpu14TransferBuffer4FreeEv(%"class.gpu::TransferBuffer"* %0)
  %3 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 12, i32 0
  %4 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %3, align 8
  %5 = icmp eq %"class.gpu::Buffer"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %4) #13
  %11 = bitcast %"class.gpu::Buffer"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 2
  %17 = load i64, i64* %16, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque.8"* %13, i64 %15, i64 %17) #13
  %18 = bitcast %"class.base::circular_deque.8"* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @free(i8* %19) #13
  %20 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %20, align 8
  store %"class.gpu::RingBuffer"* null, %"class.gpu::RingBuffer"** %20, align 8
  %22 = icmp eq %"class.gpu::RingBuffer"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN3gpu10RingBufferD1Ev(%"class.gpu::RingBuffer"* nonnull %21) #13
  %24 = bitcast %"class.gpu::RingBuffer"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %12, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBufferD0Ev(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu14TransferBufferD2Ev(%"class.gpu::TransferBuffer"* %0) #13
  %2 = bitcast %"class.gpu::TransferBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK3gpu14TransferBuffer18shared_memory_guidEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %3 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %3, i64 6
  %5 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %6, label %7, label %21

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 12, i32 0
  %9 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.gpu::BufferBacking"*, %"class.gpu::BufferBacking"** %10, align 8
  %12 = icmp eq %"class.gpu::BufferBacking"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.gpu::BufferBacking"* %11 to { i64, i64 } (%"class.gpu::BufferBacking"*)***
  %15 = load { i64, i64 } (%"class.gpu::BufferBacking"*)**, { i64, i64 } (%"class.gpu::BufferBacking"*)*** %14, align 8
  %16 = getelementptr inbounds { i64, i64 } (%"class.gpu::BufferBacking"*)*, { i64, i64 } (%"class.gpu::BufferBacking"*)** %15, i64 3
  %17 = load { i64, i64 } (%"class.gpu::BufferBacking"*)*, { i64, i64 } (%"class.gpu::BufferBacking"*)** %16, align 8
  %18 = tail call { i64, i64 } %17(%"class.gpu::BufferBacking"* nonnull %11) #13
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  br label %21

21:                                               ; preds = %7, %1, %13
  %22 = phi i64 [ %19, %13 ], [ 0, %1 ], [ 0, %7 ]
  %23 = phi i64 [ %20, %13 ], [ 0, %1 ], [ 0, %7 ]
  %24 = insertvalue { i64, i64 } undef, i64 %22, 0
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1
  ret { i64, i64 } %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu14TransferBuffer10InitializeEjjjjj(%"class.gpu::TransferBuffer"*, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 4
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 10
  store i32 %5, i32* %8, align 8
  %9 = zext i32 %1 to i64
  %10 = zext i32 %5 to i64
  %11 = add nuw nsw i64 %10, 4294967295
  %12 = add nuw nsw i64 %11, %9
  %13 = sub nsw i64 0, %10
  %14 = and i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 5
  store i32 %15, i32* %16, align 4
  %17 = zext i32 %3 to i64
  %18 = add nuw nsw i64 %11, %17
  %19 = and i64 %18, %13
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 6
  store i32 %20, i32* %21, align 8
  %22 = zext i32 %4 to i64
  %23 = add nuw nsw i64 %11, %22
  %24 = and i64 %23, %13
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 7
  store i32 %25, i32* %26, align 4
  %27 = sub i32 %15, %2
  tail call void @_ZN3gpu14TransferBuffer20ReallocateRingBufferEjb(%"class.gpu::TransferBuffer"* %0, i32 %27, i1 zeroext false)
  %28 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %29 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %29, i64 6
  %31 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.gpu::TransferBuffer"* %0) #13
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer20ReallocateRingBufferEjb(%"class.gpu::TransferBuffer"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, %1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = add i32 %6, -1
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #13, !range !2
  %11 = sub nuw nsw i32 32, %10
  %12 = icmp slt i32 %11, 31
  %13 = select i1 %12, i32 %11, i32 31
  %14 = shl i32 1, %13
  br label %15

15:                                               ; preds = %3, %8
  %16 = phi i32 [ %14, %8 ], [ 0, %3 ]
  %17 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = icmp ult i32 %16, %18
  %20 = select i1 %19, i32 %18, i32 %16
  %21 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %22 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %22, i64 6
  %24 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %25, label %31, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %20, %28
  %30 = select i1 %29, i32 %28, i32 %20
  br label %31

31:                                               ; preds = %26, %15
  %32 = phi i32 [ %20, %15 ], [ %30, %26 ]
  %33 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 7
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, %32
  %36 = select i1 %35, i32 %34, i32 %32
  %37 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %21, align 8
  %38 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %37, i64 6
  %39 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %40, label %41, label %46

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 12, i32 0
  %43 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %42, align 8
  %44 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %43, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %31, %41
  %47 = phi i32 [ %45, %41 ], [ 0, %31 ]
  %48 = icmp eq i32 %47, %36
  br i1 %48, label %67, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 17
  %51 = load i8, i8* %50, align 4, !range !3
  %52 = icmp ne i8 %51, 0
  %53 = icmp ugt i32 %36, %47
  %54 = or i1 %53, %2
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %67

56:                                               ; preds = %49
  %57 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %21, align 8
  %58 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %57, i64 6
  %59 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = bitcast %"class.gpu::TransferBuffer"* %0 to void (%"class.gpu::TransferBuffer"*)***
  %63 = load void (%"class.gpu::TransferBuffer"*)**, void (%"class.gpu::TransferBuffer"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.gpu::TransferBuffer"*)*, void (%"class.gpu::TransferBuffer"*)** %63, i64 5
  %65 = load void (%"class.gpu::TransferBuffer"*)*, void (%"class.gpu::TransferBuffer"*)** %64, align 8
  tail call void %65(%"class.gpu::TransferBuffer"* %0) #13
  br label %66

66:                                               ; preds = %61, %56
  tail call void @_ZN3gpu14TransferBuffer18AllocateRingBufferEj(%"class.gpu::TransferBuffer"* %0, i32 %36)
  br label %67

67:                                               ; preds = %49, %66, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer4FreeEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %4 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, i64 6
  %6 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %7, label %8, label %85

8:                                                ; preds = %1
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !4

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %14 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %18

18:                                               ; preds = %8, %12
  %19 = phi i64 [ -6148914691236517206, %8 ], [ %17, %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %8 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), %12 ]
  %21 = phi i8* [ null, %8 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %12 ]
  %22 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 1
  %23 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %22, align 8
  call void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"* %23) #13
  %24 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %22, align 8
  %25 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %24, i64 0, i32 1
  %26 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %25, align 8
  %27 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 13
  %28 = load i32, i32* %27, align 8
  %29 = bitcast %"class.gpu::CommandBuffer"* %26 to void (%"class.gpu::CommandBuffer"*, i32)***
  %30 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %30, i64 9
  %32 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %31, align 8
  call void %32(%"class.gpu::CommandBuffer"* %26, i32 %28) #13
  %33 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %3, align 8
  %34 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %33, i64 6
  %35 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %34, align 8
  %36 = call zeroext i1 %35(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %36, label %37, label %79

37:                                               ; preds = %18
  store i32 -1, i32* %27, align 8
  %38 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 12
  %39 = bitcast %class.scoped_refptr* %38 to i64*
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %38, i64 0, i32 0
  %41 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %40, align 8
  store i64 0, i64* %39, align 8
  %42 = icmp eq %"class.gpu::Buffer"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %41) #13
  %48 = bitcast %"class.gpu::Buffer"* %41 to i8*
  call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %37, %43, %47
  %50 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 15
  store i8* null, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 16
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.8"* %52, i64 1) #13
  %54 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %52, i64 0, i32 0
  %55 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %54, i64 %56) #13
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %53, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.2"* %53 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.gpu::RingBuffer"* null, %"class.gpu::RingBuffer"** %58, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.2"* %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load i64, i64* %55, align 8
  %63 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, -1
  %66 = icmp eq i64 %62, %65
  br i1 %66, label %67, label %68

67:                                               ; preds = %49
  store i64 0, i64* %55, align 8
  br label %71

68:                                               ; preds = %49
  %69 = add i64 %62, 1
  store i64 %69, i64* %55, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68, %67
  br label %72

72:                                               ; preds = %68, %71
  %73 = phi i64 [ %65, %71 ], [ %62, %68 ]
  %74 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %54, i64 %73) #13
  %75 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 8
  store i32 0, i32* %75, align 8
  %76 = call i32 @_ZN3gpu14TransferBuffer30GetPreviousRingBufferUsedBytesEv(%"class.gpu::TransferBuffer"* %0)
  %77 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 9
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 11
  store i32 0, i32* %78, align 4
  br label %79

79:                                               ; preds = %18, %72
  %80 = icmp eq i8* %21, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %79
  %82 = load i8, i8* %21, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #13
  br label %85

85:                                               ; preds = %1, %79, %81, %84
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu14TransferBuffer30GetPreviousRingBufferUsedBytesEv(%"class.gpu::TransferBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  br label %11

11:                                               ; preds = %9, %21
  %12 = phi i64 [ %5, %9 ], [ %31, %21 ]
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %3, i64 %12) #13
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %14, align 8
  %16 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @_ZN3gpu10RingBuffer27GetLargestFreeSizeNoWaitingEv(%"class.gpu::RingBuffer"* %15) #13
  %19 = icmp eq i32 %17, %18
  %20 = load i64, i64* %4, align 8
  br i1 %19, label %21, label %34

21:                                               ; preds = %11
  %22 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %3, i64 %20) #13
  %23 = load i64, i64* %4, align 8
  %24 = add i64 %23, 1
  %25 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %3, i64 %24) #13
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.9"* %3, %"class.std::__1::unique_ptr.2"* %22, %"class.std::__1::unique_ptr.2"* %25) #13
  %26 = load i64, i64* %4, align 8
  %27 = add i64 %26, 1
  %28 = load i64, i64* %10, align 8
  %29 = icmp eq i64 %27, %28
  %30 = select i1 %29, i64 0, i64 %27
  store i64 %30, i64* %4, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.8"* %2) #13
  %31 = load i64, i64* %4, align 8
  %32 = load i64, i64* %6, align 8
  %33 = icmp eq i64 %31, %32
  br i1 %33, label %39, label %11

34:                                               ; preds = %11
  %35 = load i64, i64* %6, align 8
  %36 = icmp eq i64 %20, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  br label %41

39:                                               ; preds = %21, %41, %1, %34
  %40 = phi i32 [ 0, %34 ], [ 0, %1 ], [ %51, %41 ], [ 0, %21 ]
  ret i32 %40

41:                                               ; preds = %37, %41
  %42 = phi i32 [ 0, %37 ], [ %51, %41 ]
  %43 = phi i64 [ %20, %37 ], [ %55, %41 ]
  %44 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %3, i64 %43) #13
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %45, align 8
  %47 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %46, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 @_ZN3gpu10RingBuffer27GetLargestFreeSizeNoWaitingEv(%"class.gpu::RingBuffer"* %46) #13
  %50 = add i32 %48, %42
  %51 = sub i32 %50, %49
  %52 = add i64 %43, 1
  %53 = load i64, i64* %38, align 8
  %54 = icmp eq i64 %52, %53
  %55 = select i1 %54, i64 0, i64 %52
  %56 = icmp eq i64 %55, %35
  br i1 %56, label %39, label %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu14TransferBuffer10HaveBufferEv(%"class.gpu::TransferBuffer"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gpu14TransferBuffer9GetOffsetEPv(%"class.gpu::TransferBuffer"* nocapture readonly, i8*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %4, i64 0, i32 8
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i8* %1 to i64
  %9 = sub i64 %8, %7
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer12DiscardBlockEPv(%"class.gpu::TransferBuffer"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %3, align 8
  tail call void @_ZN3gpu10RingBuffer12DiscardBlockEPv(%"class.gpu::RingBuffer"* %4, i8* %1) #13
  ret void
}

declare void @_ZN3gpu10RingBuffer12DiscardBlockEPv(%"class.gpu::RingBuffer"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer16FreePendingTokenEPvj(%"class.gpu::TransferBuffer"* nocapture readonly, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %4, align 8
  tail call void @_ZN3gpu10RingBuffer16FreePendingTokenEPvj(%"class.gpu::RingBuffer"* %5, i8* %1, i32 %2) #13
  ret void
}

declare void @_ZN3gpu10RingBuffer16FreePendingTokenEPvj(%"class.gpu::RingBuffer"*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gpu14TransferBuffer7GetSizeEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %3 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %3, i64 6
  %5 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %9, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = urem i32 %11, %13
  %15 = sub i32 %11, %14
  br label %16

16:                                               ; preds = %1, %7
  %17 = phi i32 [ %15, %7 ], [ 0, %1 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gpu14TransferBuffer11GetFreeSizeEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %3 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %3, i64 6
  %5 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %8, align 8
  %10 = tail call i32 @_ZN3gpu10RingBuffer27GetLargestFreeSizeNoWaitingEv(%"class.gpu::RingBuffer"* %9) #13
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare i32 @_ZN3gpu10RingBuffer27GetLargestFreeSizeNoWaitingEv(%"class.gpu::RingBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gpu14TransferBuffer21GetFragmentedFreeSizeEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %3 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %3, i64 6
  %5 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %8, align 8
  %10 = tail call i32 @_ZN3gpu10RingBuffer25GetTotalFreeSizeNoWaitingEv(%"class.gpu::RingBuffer"* %9) #13
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare i32 @_ZN3gpu10RingBuffer25GetTotalFreeSizeNoWaitingEv(%"class.gpu::RingBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer15ShrinkLastBlockEj(%"class.gpu::TransferBuffer"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %3, align 8
  tail call void @_ZN3gpu10RingBuffer15ShrinkLastBlockEj(%"class.gpu::RingBuffer"* %4, i32 %1) #13
  ret void
}

declare void @_ZN3gpu10RingBuffer15ShrinkLastBlockEj(%"class.gpu::RingBuffer"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gpu14TransferBuffer10GetMaxSizeEv(%"class.gpu::TransferBuffer"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = sub i32 %3, %5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer18AllocateRingBufferEj(%"class.gpu::TransferBuffer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %101, label %7

7:                                                ; preds = %2
  %8 = bitcast i32* %3 to i8*
  %9 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 7
  br label %12

12:                                               ; preds = %7, %98
  %13 = phi i32 [ %1, %7 ], [ %85, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1, i32* %3, align 4
  %14 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %9, align 8
  %15 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %14, i64 0, i32 1
  %16 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %15, align 8
  %17 = bitcast %"class.gpu::CommandBuffer"* %16 to %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)***
  %18 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*** %17, align 8
  %19 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)** %18, i64 8
  %20 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)** %19, align 8
  %21 = call %"class.gpu::Buffer"* %20(%"class.gpu::CommandBuffer"* %16, i32 %13, i32* nonnull %3, i8 signext 0) #13
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %84, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 8
  store i32 %13, i32* %25, align 8
  %26 = icmp eq %"class.gpu::Buffer"* %21, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %24, %27
  %31 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 12
  %32 = ptrtoint %"class.gpu::Buffer"* %21 to i64
  %33 = bitcast %class.scoped_refptr* %31 to i64*
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %31, i64 0, i32 0
  %35 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.gpu::Buffer"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %35) #13
  %42 = bitcast %"class.gpu::Buffer"* %35 to i8*
  call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %30, %37, %41
  %44 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 4
  %45 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %34, align 8
  %46 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %45, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = load i32, i32* %44, align 8
  %49 = sub i32 %47, %48
  %50 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %45, i64 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = zext i32 %48 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = call i8* @_Znwm(i64 72) #14
  %55 = bitcast i8* %54 to %"class.gpu::RingBuffer"*
  %56 = load i32, i32* %10, align 4
  %57 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %9, align 8
  call void @_ZN3gpu10RingBufferC1EjjjPNS_19CommandBufferHelperEPv(%"class.gpu::RingBuffer"* nonnull %55, i32 %56, i32 %48, i32 %49, %"class.gpu::CommandBufferHelper"* %57, i8* %53) #13
  %58 = ptrtoint i8* %54 to i64
  %59 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.2"* %59 to i64*
  store i64 %58, i64* %62, align 8
  %63 = icmp eq %"class.gpu::RingBuffer"* %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %43
  call void @_ZN3gpu10RingBufferD1Ev(%"class.gpu::RingBuffer"* nonnull %61) #13
  %65 = bitcast %"class.gpu::RingBuffer"* %61 to i8*
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %64, %43
  %67 = load i32, i32* %3, align 4
  %68 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 13
  store i32 %67, i32* %68, align 8
  %69 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %34, align 8
  %70 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %69, i64 0, i32 3
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 15
  %74 = bitcast i8** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 16
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 11
  store i32 0, i32* %76, align 4
  br i1 %26, label %83, label %77

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %21) #13
  %82 = bitcast %"class.gpu::Buffer"* %21 to i8*
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %66, %77, %81
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  br label %103

84:                                               ; preds = %12
  %85 = lshr i32 %13, 1
  %86 = load i32, i32* %10, align 8
  %87 = add nsw i32 %85, -1
  %88 = add i32 %87, %86
  %89 = sub i32 0, %86
  %90 = and i32 %88, %89
  store i32 %90, i32* %11, align 4
  %91 = icmp eq %"class.gpu::Buffer"* %21, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i32* %93, i32 1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %21) #13
  %97 = bitcast %"class.gpu::Buffer"* %21 to i8*
  call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %84, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  %99 = load i32, i32* %4, align 8
  %100 = icmp ult i32 %85, %99
  br i1 %100, label %101, label %12

101:                                              ; preds = %98, %2
  %102 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 17
  store i8 0, i8* %102, align 4
  br label %103

103:                                              ; preds = %83, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer35ShrinkOrExpandRingBufferIfNecessaryEj(%"class.gpu::TransferBuffer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %4 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, i64 6
  %6 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %10, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %8, %2
  %15 = bitcast %"class.gpu::TransferBuffer"* %0 to i32 (%"class.gpu::TransferBuffer"*)***
  %16 = load i32 (%"class.gpu::TransferBuffer"*)**, i32 (%"class.gpu::TransferBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.gpu::TransferBuffer"*)*, i32 (%"class.gpu::TransferBuffer"*)** %16, i64 13
  %18 = load i32 (%"class.gpu::TransferBuffer"*)*, i32 (%"class.gpu::TransferBuffer"*)** %17, align 8
  %19 = tail call i32 %18(%"class.gpu::TransferBuffer"* %0) #13
  %20 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 8
  %23 = tail call i32 @_ZN3gpu14TransferBuffer30GetPreviousRingBufferUsedBytesEv(%"class.gpu::TransferBuffer"* %0)
  %24 = sub i32 %1, %19
  %25 = add i32 %24, %22
  %26 = add i32 %25, %23
  %27 = load i32, i32* %20, align 4
  %28 = icmp ult i32 %27, %26
  %29 = select i1 %28, i32 %26, i32 %27
  store i32 %29, i32* %20, align 4
  %30 = icmp ult i32 %19, %1
  br i1 %30, label %31, label %32

31:                                               ; preds = %14
  tail call void @_ZN3gpu14TransferBuffer20ReallocateRingBufferEjb(%"class.gpu::TransferBuffer"* %0, i32 %29, i1 zeroext false)
  br label %42

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 11
  %34 = load i32, i32* %33, align 4
  %35 = mul i32 %29, 120
  %36 = icmp ugt i32 %34, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  %38 = lshr i32 %29, 2
  %39 = add i32 %38, %29
  tail call void @_ZN3gpu14TransferBuffer20ReallocateRingBufferEjb(%"class.gpu::TransferBuffer"* %0, i32 %39, i1 zeroext true)
  %40 = tail call i32 @_ZN3gpu14TransferBuffer30GetPreviousRingBufferUsedBytesEv(%"class.gpu::TransferBuffer"* %0)
  %41 = add i32 %40, %1
  store i32 %41, i32* %20, align 4
  br label %42

42:                                               ; preds = %31, %37, %32, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3gpu14TransferBuffer9AllocUpToEjPj(%"class.gpu::TransferBuffer"*, i32, i32* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu14TransferBuffer35ShrinkOrExpandRingBufferIfNecessaryEj(%"class.gpu::TransferBuffer"* %0, i32 %1)
  %4 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %5 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %5, i64 6
  %7 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %8, label %9, label %26

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %10, align 8
  %12 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %11, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = urem i32 %13, %15
  %17 = sub i32 %13, %16
  %18 = icmp ugt i32 %17, %1
  %19 = select i1 %18, i32 %1, i32 %17
  store i32 %19, i32* %2, align 4
  %20 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 11
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %19, %21
  store i32 %22, i32* %20, align 4
  %23 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %10, align 8
  %24 = load i32, i32* %2, align 4
  %25 = tail call i8* @_ZN3gpu10RingBuffer5AllocEj(%"class.gpu::RingBuffer"* %23, i32 %24) #13
  br label %26

26:                                               ; preds = %3, %9
  %27 = phi i8* [ %25, %9 ], [ null, %3 ]
  ret i8* %27
}

declare i8* @_ZN3gpu10RingBuffer5AllocEj(%"class.gpu::RingBuffer"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3gpu14TransferBuffer5AllocEj(%"class.gpu::TransferBuffer"*, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu14TransferBuffer35ShrinkOrExpandRingBufferIfNecessaryEj(%"class.gpu::TransferBuffer"* %0, i32 %1)
  %3 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %4 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, i64 6
  %6 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %7, label %8, label %23

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %10, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = urem i32 %12, %14
  %16 = sub i32 %12, %15
  %17 = icmp ult i32 %16, %1
  br i1 %17, label %23, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, %1
  store i32 %21, i32* %19, align 4
  %22 = tail call i8* @_ZN3gpu10RingBuffer5AllocEj(%"class.gpu::RingBuffer"* %10, i32 %1) #13
  br label %23

23:                                               ; preds = %18, %8, %2
  %24 = phi i8* [ null, %2 ], [ %22, %18 ], [ null, %8 ]
  ret i8* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3gpu14TransferBuffer19AcquireResultBufferEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  tail call void @_ZN3gpu14TransferBuffer20ReallocateRingBufferEjb(%"class.gpu::TransferBuffer"* %0, i32 %3, i1 zeroext false)
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 15
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu14TransferBuffer19ReleaseResultBufferEv(%"class.gpu::TransferBuffer"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3gpu14TransferBuffer15GetResultOffsetEv(%"class.gpu::TransferBuffer"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu14TransferBuffer8GetShmIdEv(%"class.gpu::TransferBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  tail call void @_ZN3gpu14TransferBuffer20ReallocateRingBufferEjb(%"class.gpu::TransferBuffer"* %0, i32 %3, i1 zeroext false)
  %4 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 13
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gpu14TransferBuffer37GetCurrentMaxAllocationWithoutReallocEv(%"class.gpu::TransferBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::TransferBuffer"* %0 to i1 (%"class.gpu::TransferBuffer"*)***
  %3 = load i1 (%"class.gpu::TransferBuffer"*)**, i1 (%"class.gpu::TransferBuffer"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %3, i64 6
  %5 = load i1 (%"class.gpu::TransferBuffer"*)*, i1 (%"class.gpu::TransferBuffer"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.gpu::TransferBuffer"* %0) #13
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::TransferBuffer", %"class.gpu::TransferBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gpu::RingBuffer", %"class.gpu::RingBuffer"* %9, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = urem i32 %11, %13
  %15 = sub i32 %11, %14
  br label %16

16:                                               ; preds = %1, %7
  %17 = phi i32 [ %15, %7 ], [ 0, %1 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu23ScopedTransferBufferPtrC2EOS0_(%"class.gpu::ScopedTransferBufferPtr"* nocapture, %"class.gpu::ScopedTransferBufferPtr"* nocapture dereferenceable(32)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %1, i64 0, i32 0
  %4 = bitcast %"class.gpu::ScopedTransferBufferPtr"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.gpu::ScopedTransferBufferPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %1, i64 0, i32 2
  %12 = bitcast %"class.gpu::CommandBufferHelper"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.gpu::CommandBufferHelper"** %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %1, i64 0, i32 3
  %17 = bitcast %"class.gpu::TransferBufferInterface"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.gpu::TransferBufferInterface"** %15 to i64*
  store i64 %18, i64* %19, align 8
  store i8* null, i8** %3, align 8
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23ScopedTransferBufferPtr7ReleaseEv(%"class.gpu::ScopedTransferBufferPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 3
  %7 = load %"class.gpu::TransferBufferInterface"*, %"class.gpu::TransferBufferInterface"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 2
  %9 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %8, align 8
  %10 = tail call i32 @_ZN3gpu19CommandBufferHelper11InsertTokenEv(%"class.gpu::CommandBufferHelper"* %9) #13
  %11 = bitcast %"class.gpu::TransferBufferInterface"* %7 to void (%"class.gpu::TransferBufferInterface"*, i8*, i32)***
  %12 = load void (%"class.gpu::TransferBufferInterface"*, i8*, i32)**, void (%"class.gpu::TransferBufferInterface"*, i8*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gpu::TransferBufferInterface"*, i8*, i32)*, void (%"class.gpu::TransferBufferInterface"*, i8*, i32)** %12, i64 11
  %14 = load void (%"class.gpu::TransferBufferInterface"*, i8*, i32)*, void (%"class.gpu::TransferBufferInterface"*, i8*, i32)** %13, align 8
  tail call void %14(%"class.gpu::TransferBufferInterface"* %7, i8* nonnull %3, i32 %10) #13
  store i8* null, i8** %2, align 8
  %15 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  store i32 0, i32* %15, align 8
  br label %16

16:                                               ; preds = %1, %5
  ret void
}

declare i32 @_ZN3gpu19CommandBufferHelper11InsertTokenEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23ScopedTransferBufferPtr7DiscardEv(%"class.gpu::ScopedTransferBufferPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 3
  %7 = load %"class.gpu::TransferBufferInterface"*, %"class.gpu::TransferBufferInterface"** %6, align 8
  %8 = bitcast %"class.gpu::TransferBufferInterface"* %7 to void (%"class.gpu::TransferBufferInterface"*, i8*)***
  %9 = load void (%"class.gpu::TransferBufferInterface"*, i8*)**, void (%"class.gpu::TransferBufferInterface"*, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gpu::TransferBufferInterface"*, i8*)*, void (%"class.gpu::TransferBufferInterface"*, i8*)** %9, i64 10
  %11 = load void (%"class.gpu::TransferBufferInterface"*, i8*)*, void (%"class.gpu::TransferBufferInterface"*, i8*)** %10, align 8
  tail call void %11(%"class.gpu::TransferBufferInterface"* %7, i8* nonnull %3) #13
  store i8* null, i8** %2, align 8
  %12 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 8
  br label %13

13:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23ScopedTransferBufferPtr5ResetEj(%"class.gpu::ScopedTransferBufferPtr"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 3
  %8 = load %"class.gpu::TransferBufferInterface"*, %"class.gpu::TransferBufferInterface"** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 2
  %10 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %9, align 8
  %11 = tail call i32 @_ZN3gpu19CommandBufferHelper11InsertTokenEv(%"class.gpu::CommandBufferHelper"* %10) #13
  %12 = bitcast %"class.gpu::TransferBufferInterface"* %8 to void (%"class.gpu::TransferBufferInterface"*, i8*, i32)***
  %13 = load void (%"class.gpu::TransferBufferInterface"*, i8*, i32)**, void (%"class.gpu::TransferBufferInterface"*, i8*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gpu::TransferBufferInterface"*, i8*, i32)*, void (%"class.gpu::TransferBufferInterface"*, i8*, i32)** %13, i64 11
  %15 = load void (%"class.gpu::TransferBufferInterface"*, i8*, i32)*, void (%"class.gpu::TransferBufferInterface"*, i8*, i32)** %14, align 8
  tail call void %15(%"class.gpu::TransferBufferInterface"* %8, i8* nonnull %4, i32 %11) #13
  store i8* null, i8** %3, align 8
  %16 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  store i32 0, i32* %16, align 8
  br label %17

17:                                               ; preds = %2, %6
  %18 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 3
  %19 = load %"class.gpu::TransferBufferInterface"*, %"class.gpu::TransferBufferInterface"** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  %21 = bitcast %"class.gpu::TransferBufferInterface"* %19 to i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)***
  %22 = load i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)**, i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)*** %21, align 8
  %23 = getelementptr inbounds i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)*, i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)** %22, i64 7
  %24 = load i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)*, i8* (%"class.gpu::TransferBufferInterface"*, i32, i32*)** %23, align 8
  %25 = tail call i8* %24(%"class.gpu::TransferBufferInterface"* %19, i32 %1, i32* %20) #13
  store i8* %25, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23ScopedTransferBufferPtr6ShrinkEj(%"class.gpu::ScopedTransferBufferPtr"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 3
  %4 = load %"class.gpu::TransferBufferInterface"*, %"class.gpu::TransferBufferInterface"** %3, align 8
  %5 = bitcast %"class.gpu::TransferBufferInterface"* %4 to i1 (%"class.gpu::TransferBufferInterface"*)***
  %6 = load i1 (%"class.gpu::TransferBufferInterface"*)**, i1 (%"class.gpu::TransferBufferInterface"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.gpu::TransferBufferInterface"*)*, i1 (%"class.gpu::TransferBufferInterface"*)** %6, i64 6
  %8 = load i1 (%"class.gpu::TransferBufferInterface"*)*, i1 (%"class.gpu::TransferBufferInterface"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.gpu::TransferBufferInterface"* %4) #13
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, %1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = load %"class.gpu::TransferBufferInterface"*, %"class.gpu::TransferBufferInterface"** %3, align 8
  %16 = bitcast %"class.gpu::TransferBufferInterface"* %15 to void (%"class.gpu::TransferBufferInterface"*, i32)***
  %17 = load void (%"class.gpu::TransferBufferInterface"*, i32)**, void (%"class.gpu::TransferBufferInterface"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gpu::TransferBufferInterface"*, i32)*, void (%"class.gpu::TransferBufferInterface"*, i32)** %17, i64 15
  %19 = load void (%"class.gpu::TransferBufferInterface"*, i32)*, void (%"class.gpu::TransferBufferInterface"*, i32)** %18, align 8
  tail call void %19(%"class.gpu::TransferBufferInterface"* %15, i32 %1) #13
  store i32 %1, i32* %11, align 8
  br label %20

20:                                               ; preds = %10, %2, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu23ScopedTransferBufferPtr15BelongsToBufferEPc(%"class.gpu::ScopedTransferBufferPtr"* nocapture readonly, i8* readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = icmp ugt i8* %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::ScopedTransferBufferPtr", %"class.gpu::ScopedTransferBufferPtr"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = icmp uge i8* %12, %1
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN3gpu10RingBufferD1Ev(%"class.gpu::RingBuffer"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque.8"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.9"* %7, %"class.std::__1::unique_ptr.2"* %8, %"class.std::__1::unique_ptr.2"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr.2"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.9"* %7, %"class.std::__1::unique_ptr.2"* %15, %"class.std::__1::unique_ptr.2"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.9"*, %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr.2"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.2"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr.2"* %1, %"class.std::__1::unique_ptr.2"** %5, align 8
  store %"class.std::__1::unique_ptr.2"* %2, %"class.std::__1::unique_ptr.2"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr.2"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr.2"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %17 = bitcast %"class.std::__1::unique_ptr.2"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.2"* %26, %27
  br i1 %28, label %41, label %29

29:                                               ; preds = %25, %36
  %30 = phi %"class.std::__1::unique_ptr.2"* [ %38, %36 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %31, align 8
  store %"class.gpu::RingBuffer"* null, %"class.gpu::RingBuffer"** %31, align 8
  %33 = icmp eq %"class.gpu::RingBuffer"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  call void @_ZN3gpu10RingBufferD1Ev(%"class.gpu::RingBuffer"* nonnull %32) #13
  %35 = bitcast %"class.gpu::RingBuffer"* %32 to i8*
  call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %29, %34
  %37 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %5, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %37, i64 1
  store %"class.std::__1::unique_ptr.2"* %38, %"class.std::__1::unique_ptr.2"** %5, align 8
  %39 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %6, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.2"* %38, %39
  br i1 %40, label %41, label %29

41:                                               ; preds = %36, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %24, i64 %1
  ret %"class.std::__1::unique_ptr.2"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.9"*
  %5 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !5

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer.9"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.9"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque.8"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.8"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer.9"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.9"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %3, i64 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr.2"* %11, %"class.std::__1::unique_ptr.2"* %12, %"class.std::__1::unique_ptr.2"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %3, i64 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr.2"* %19, %"class.std::__1::unique_ptr.2"* %20, %"class.std::__1::unique_ptr.2"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr.2"* %24, %"class.std::__1::unique_ptr.2"* %25, %"class.std::__1::unique_ptr.2"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.std::__1::unique_ptr.2"* %0 to i64
  %6 = icmp ult %"class.std::__1::unique_ptr.2"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"class.std::__1::unique_ptr.2"* %2 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr.2"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #13
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !5

16:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"class.std::__1::unique_ptr.2"* %0, %1
  br i1 %24, label %40, label %25

25:                                               ; preds = %23, %36
  %26 = phi %"class.std::__1::unique_ptr.2"* [ %38, %36 ], [ %2, %23 ]
  %27 = phi %"class.std::__1::unique_ptr.2"* [ %37, %36 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.2"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.gpu::RingBuffer"* null, %"class.gpu::RingBuffer"** %28, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.2"* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load %"class.gpu::RingBuffer"*, %"class.gpu::RingBuffer"** %28, align 8
  store %"class.gpu::RingBuffer"* null, %"class.gpu::RingBuffer"** %28, align 8
  %33 = icmp eq %"class.gpu::RingBuffer"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %25
  call void @_ZN3gpu10RingBufferD1Ev(%"class.gpu::RingBuffer"* nonnull %32) #13
  %35 = bitcast %"class.gpu::RingBuffer"* %32 to i8*
  call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %25, %34
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %27, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %26, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.2"* %37, %1
  br i1 %39, label %40, label %25

40:                                               ; preds = %36, %23
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN3gpu10RingBufferC1EjjjPNS_19CommandBufferHelperEPv(%"class.gpu::RingBuffer"*, i32, i32, i32, %"class.gpu::CommandBufferHelper"*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.8"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.9"*
  %4 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !5

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.8", %"class.base::circular_deque.8"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3gpu10RingBufferENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer.9"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.9"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque.8"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.8"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3gpu10RingBufferENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer.9"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.9", %"class.base::internal::VectorBuffer.9"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %24, i64 %1
  ret %"class.std::__1::unique_ptr.2"* %25
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
