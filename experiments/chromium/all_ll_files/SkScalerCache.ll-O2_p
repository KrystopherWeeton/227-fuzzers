; ModuleID = '../../third_party/skia/src/core/SkScalerCache.cpp'
source_filename = "../../third_party/skia/src/core/SkScalerCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector", %class.SkArenaAlloc }
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkScalerContext* }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkPoint = type { float, float }
%struct.SkIPoint = type { i32, i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%struct.SkPackedGlyphID = type { i32 }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.24" }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.16, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.16 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.17, %class.SkTDArray.18, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.17 = type { i8*, i32, i32 }
%class.SkTDArray.18 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.19 }
%class.SkTDArray.19 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.20", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkDescriptor = type { i32, i32, i32 }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.6, %class.sk_sp.7, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.sk_sp.6 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.7 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkTMaskPreBlend = type { %class.sk_sp.8, i8*, i8*, i8* }
%class.sk_sp.8 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.34" = type { %"struct.std::__1::__tuple_impl.35" }
%"struct.std::__1::__tuple_impl.35" = type { %"class.std::__1::__tuple_leaf.36", %"class.std::__1::__tuple_leaf.27" }
%"class.std::__1::__tuple_leaf.36" = type { %class.SkSpan.37 }
%class.SkSpan.37 = type { %class.SkGlyph**, i64 }
%"class.std::__1::__tuple_leaf.27" = type { i64 }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.42, %class.SkAutoTMalloc }
%class.SkAutoTArray.42 = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon }
%union.anon = type { %class.SkGlyph* }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %struct.SkPoint* }
%class.SkEnumerate = type { %class.SkZip.80, i64, %"class.SkZip<SkGlyphVariant, SkPoint>::Iterator", %"class.SkZip<SkGlyphVariant, SkPoint>::Iterator" }
%class.SkZip.80 = type { %"class.std::__1::tuple.81", i64 }
%"class.std::__1::tuple.81" = type { %"struct.std::__1::__tuple_impl.82" }
%"struct.std::__1::__tuple_impl.82" = type { %"class.std::__1::__tuple_leaf.83", %"class.std::__1::__tuple_leaf.61" }
%"class.std::__1::__tuple_leaf.83" = type { %class.SkGlyphVariant* }
%"class.std::__1::__tuple_leaf.61" = type { %struct.SkPoint* }
%"class.SkZip<SkGlyphVariant, SkPoint>::Iterator" = type { %class.SkZip.80*, i64 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.57, %class.SkSTArray, %class.SkSTArray.62 }
%class.SkZip = type { %"class.std::__1::tuple.53", i64 }
%"class.std::__1::tuple.53" = type { %"struct.std::__1::__tuple_impl.54" }
%"struct.std::__1::__tuple_impl.54" = type { %"class.std::__1::__tuple_leaf.55", %"class.std::__1::__tuple_leaf.56" }
%"class.std::__1::__tuple_leaf.55" = type { i16* }
%"class.std::__1::__tuple_leaf.56" = type { %struct.SkPoint* }
%class.SkZip.57 = type { %"class.std::__1::tuple.58", i64 }
%"class.std::__1::tuple.58" = type { %"struct.std::__1::__tuple_impl.59" }
%"struct.std::__1::__tuple_impl.59" = type { %"class.std::__1::__tuple_leaf.60", %"class.std::__1::__tuple_leaf.61" }
%"class.std::__1::__tuple_leaf.60" = type { i16* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.62 = type { %class.SkAlignedSTStorage.63, %class.SkTArray.64 }
%class.SkAlignedSTStorage.63 = type { [32 x i8] }
%class.SkTArray.64 = type { %struct.SkPoint*, i64 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkString = type { %class.sk_sp.68 }
%class.sk_sp.68 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>

$_ZN10SkTHashMapI15SkPackedGlyphID13SkGlyphDigest10SkGoodHashE3setES0_S1_ = comdat any

$_ZNK18SkScalerContextRec4dumpEv = comdat any

$_ZN12SkTHashTableIN10SkTHashMapI15SkPackedGlyphID13SkGlyphDigest10SkGoodHashE4PairES1_S5_E6resizeEi = comdat any

$_ZN19SkSourceGlyphBuffer6rejectEm = comdat any

$_ZN8SkTArrayItLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN8SkTArrayI7SkPointLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@.str = private unnamed_addr constant [49 x i8] c"cache typeface:%x %25s:(%d,%d,%d)\0A %s glyphs:%3d\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"../../third_party/skia/src/core/SkScalerCache.cpp\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"    Rec\0A\00", align 1
@.str.4 = private unnamed_addr constant [61 x i8] c"      textsize %a prescale %a preskew %a post [%a %a %a %a]\0A\00", align 1
@.str.5 = private unnamed_addr constant [61 x i8] c"      frame %g miter %g format %d join %d cap %d flags %#hx\0A\00", align 1
@.str.6 = private unnamed_addr constant [64 x i8] c"      lum bits %x, device gamma %d, paint gamma %d contrast %d\0A\00", align 1

@_ZN13SkScalerCacheC1ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics = hidden unnamed_addr alias void (%class.SkScalerCache*, %class.SkDescriptor*, %class.SkScalerContext*, %struct.SkFontMetrics*), void (%class.SkScalerCache*, %class.SkDescriptor*, %class.SkScalerContext*, %struct.SkFontMetrics*)* @_ZN13SkScalerCacheC2ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScalerCacheC2ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEPK13SkFontMetrics(%class.SkScalerCache*, %class.SkDescriptor* dereferenceable(12), %class.SkScalerContext*, %struct.SkFontMetrics* readonly) unnamed_addr #0 align 2 {
  %5 = ptrtoint %class.SkScalerContext* %2 to i64
  %6 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 0
  tail call void @_ZN16SkAutoDescriptorC1ERK12SkDescriptor(%class.SkAutoDescriptor* %6, %class.SkDescriptor* dereferenceable(12) %1) #11
  %7 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 2
  %10 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %9, i64 0, i32 0
  store i32 -1431655766, i32* %10, align 4, !alias.scope !2
  %11 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 2, i32 1
  %12 = icmp eq %struct.SkFontMetrics* %3, null
  %13 = bitcast float* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 -1, i64 60, i1 false) #11, !alias.scope !2
  br i1 %12, label %17, label %14

14:                                               ; preds = %4
  %15 = bitcast %struct.SkFontMetrics* %9 to i8*
  %16 = bitcast %struct.SkFontMetrics* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* nonnull align 4 %16, i64 64, i1 false) #11
  br label %20

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN15SkScalerContext14getFontMetricsEP13SkFontMetrics(%class.SkScalerContext* %2, %struct.SkFontMetrics* %9) #11
  %19 = load %class.SkScalerContext*, %class.SkScalerContext** %18, align 8
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi %class.SkScalerContext* [ %19, %17 ], [ %2, %14 ]
  %22 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 3
  %23 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %21, i64 0, i32 1, i32 14
  %24 = load i16, i16* %23, align 2
  %25 = and i16 %24, 16
  %26 = icmp ne i16 %25, 0
  %27 = tail call i32 @_ZNK15SkScalerContext28computeAxisAlignmentForHTextEv(%class.SkScalerContext* %21) #11
  tail call void @_ZN27SkGlyphPositionRoundingSpecC1Eb15SkAxisAlignment(%struct.SkGlyphPositionRoundingSpec* %22, i1 zeroext %26, i32 %27) #11
  %28 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4, i32 0, i32 2
  %31 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %32 = bitcast %"struct.SkSemaphore::OSSemaphore"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 48, i1 false)
  tail call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %31, i8* null, i64 0, i64 1024) #11
  ret void
}

declare void @_ZN16SkAutoDescriptorC1ERK12SkDescriptor(%class.SkAutoDescriptor*, %class.SkDescriptor* dereferenceable(12)) unnamed_addr #1

declare i32 @_ZNK15SkScalerContext28computeAxisAlignmentForHTextEv(%class.SkScalerContext*) local_unnamed_addr #1

declare void @_ZN27SkGlyphPositionRoundingSpecC1Eb15SkAxisAlignment(%struct.SkGlyphPositionRoundingSpec*, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkGlyph*, i64 } @_ZN13SkScalerCache5glyphE15SkPackedGlyphID(%class.SkScalerCache*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %0, i32 %1)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  %6 = and i64 %4, 1048575
  %7 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load %class.SkGlyph**, %class.SkGlyph*** %7, align 8
  %9 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %8, i64 %6
  %10 = load %class.SkGlyph*, %class.SkGlyph** %9, align 8
  %11 = insertvalue { %class.SkGlyph*, i64 } undef, %class.SkGlyph* %10, 0
  %12 = insertvalue { %class.SkGlyph*, i64 } %11, i64 %5, 1
  ret { %class.SkGlyph*, i64 } %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkGlyph, align 8
  %4 = lshr i32 %1, 16
  %5 = xor i32 %4, %1
  %6 = mul i32 %5, -2048144789
  %7 = lshr i32 %6, 13
  %8 = xor i32 %7, %6
  %9 = mul i32 %8, -1028477387
  %10 = lshr i32 %9, 16
  %11 = xor i32 %10, %9
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 1, i32 %11
  %14 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %51

17:                                               ; preds = %2
  %18 = add nsw i32 %15, -1
  %19 = and i32 %18, %13
  %20 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %20, align 8
  br label %22

22:                                               ; preds = %36, %17
  %23 = phi i32 [ 0, %17 ], [ %41, %36 ]
  %24 = phi i32 [ %19, %17 ], [ %40, %36 ]
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %21, i64 %25, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %22
  %30 = icmp eq i32 %13, %27
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %21, i64 %25, i32 0
  %33 = getelementptr inbounds %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, %1
  br i1 %35, label %43, label %36

36:                                               ; preds = %31, %29
  %37 = add nsw i32 %24, -1
  %38 = icmp slt i32 %24, 1
  %39 = select i1 %38, i32 %15, i32 0
  %40 = add nsw i32 %37, %39
  %41 = add nuw nsw i32 %23, 1
  %42 = icmp eq i32 %41, %15
  br i1 %42, label %51, label %22

43:                                               ; preds = %31
  %44 = icmp eq %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair"* %32, null
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %21, i64 %25, i32 0, i32 0, i32 1
  %46 = icmp eq %class.SkGlyphDigest* %45, null
  %47 = or i1 %44, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = bitcast %class.SkGlyphDigest* %45 to i32*
  %50 = load i32, i32* %49, align 4
  br label %79

51:                                               ; preds = %22, %36, %2, %43
  %52 = bitcast %class.SkGlyph* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #11
  %53 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %class.SkScalerContext*, %class.SkScalerContext** %53, align 8
  call void @_ZN15SkScalerContext9makeGlyphE15SkPackedGlyphID(%class.SkGlyph* nonnull sret %3, %class.SkScalerContext* %54, i32 %1) #11
  %55 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 0, %57
  %59 = and i64 %58, 7
  %60 = or i64 %59, 40
  %61 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7, i32 2
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %57
  %65 = icmp ugt i64 %60, %64
  br i1 %65, label %66, label %71

66:                                               ; preds = %51
  %67 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %67, i32 40, i32 8) #11
  %68 = load i64, i64* %56, align 8
  %69 = sub i64 0, %68
  %70 = and i64 %69, 7
  br label %71

71:                                               ; preds = %51, %66
  %72 = phi i64 [ %68, %66 ], [ %57, %51 ]
  %73 = phi i64 [ %70, %66 ], [ %59, %51 ]
  %74 = inttoptr i64 %72 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  %76 = getelementptr inbounds i8, i8* %75, i64 40
  store i8* %76, i8** %55, align 8
  %77 = bitcast i8* %75 to %class.SkGlyph*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* nonnull align 8 %52, i64 40, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #11
  %78 = call i32 @_ZN13SkScalerCache8addGlyphEP7SkGlyph(%class.SkScalerCache* %0, %class.SkGlyph* %77)
  br label %79

79:                                               ; preds = %71, %48
  %80 = phi i32 [ %78, %71 ], [ %50, %48 ]
  %81 = phi i64 [ 40, %71 ], [ 0, %48 ]
  %82 = zext i32 %80 to i64
  %83 = insertvalue { i64, i64 } undef, i64 %82, 0
  %84 = insertvalue { i64, i64 } %83, i64 %81, 1
  ret { i64, i64 } %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN15SkScalerContext9makeGlyphE15SkPackedGlyphID(%class.SkGlyph* sret, %class.SkScalerContext*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkScalerCache8addGlyphEP7SkGlyph(%class.SkScalerCache*, %class.SkGlyph*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.SkGlyph* %1 to i64
  %4 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6
  %5 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 1
  %6 = bitcast %class.SkGlyph*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = lshr i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 983040
  %14 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 0
  %15 = load i16, i16* %14, align 8
  %16 = icmp eq i16 %15, 0
  %17 = zext i1 %16 to i32
  %18 = shl nuw nsw i32 %17, 20
  %19 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 8
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 3
  %22 = zext i1 %21 to i32
  %23 = shl nuw nsw i32 %22, 21
  %24 = tail call zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsMaskERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %1) #11
  %25 = zext i1 %24 to i32
  %26 = and i32 %12, 65280
  %27 = shl nuw nsw i32 %25, 22
  %28 = tail call zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsSDFTERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %1) #11
  %29 = zext i1 %28 to i32
  %30 = shl nuw nsw i32 %29, 23
  %31 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5
  %32 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %12, 255
  %35 = or i32 %13, %18
  %36 = or i32 %35, %26
  %37 = or i32 %36, %34
  %38 = or i32 %37, %23
  %39 = or i32 %38, %27
  %40 = or i32 %39, %30
  %41 = or i32 %40, -1442840576
  %42 = tail call %class.SkGlyphDigest* @_ZN10SkTHashMapI15SkPackedGlyphID13SkGlyphDigest10SkGoodHashE3setES0_S1_(%class.SkTHashMap* %31, i32 %33, i32 %41)
  %43 = load %class.SkGlyph**, %class.SkGlyph*** %5, align 8
  %44 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %45 = load %class.SkGlyph**, %class.SkGlyph*** %44, align 8
  %46 = icmp eq %class.SkGlyph** %43, %45
  %47 = ptrtoint %class.SkGlyph** %45 to i64
  br i1 %46, label %52, label %48

48:                                               ; preds = %2
  %49 = bitcast %class.SkGlyph** %43 to i64*
  store i64 %3, i64* %49, align 8
  %50 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %43, i64 1
  %51 = ptrtoint %class.SkGlyph** %50 to i64
  store i64 %51, i64* %6, align 8
  br label %107

52:                                               ; preds = %2
  %53 = ptrtoint %class.SkGlyph** %43 to i64
  %54 = load i64, i64* %8, align 8
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %52
  %62 = bitcast %class.SkGlyph*** %44 to i64*
  %63 = sub i64 %47, %54
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %74

66:                                               ; preds = %61
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %57
  %69 = select i1 %68, i64 %57, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @abort() #12
  unreachable

74:                                               ; preds = %71, %61
  %75 = phi i64 [ %69, %71 ], [ 2305843009213693951, %61 ]
  %76 = shl i64 %75, 3
  %77 = tail call i8* @_Znwm(i64 %76) #13
  %78 = bitcast i8* %77 to %class.SkGlyph**
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %class.SkGlyph** [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %81, i64 %56
  %83 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %81, i64 %80
  %84 = ptrtoint %class.SkGlyph** %83 to i64
  %85 = bitcast %class.SkGlyph** %82 to i64*
  store i64 %3, i64* %85, align 8
  %86 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %82, i64 1
  %87 = ptrtoint %class.SkGlyph** %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %89 = load %class.SkGlyph**, %class.SkGlyph*** %88, align 8
  %90 = load i64, i64* %6, align 8
  %91 = ptrtoint %class.SkGlyph** %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 3
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %82, i64 %94
  %96 = ptrtoint %class.SkGlyph** %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %79
  %99 = bitcast %class.SkGlyph** %95 to i8*
  %100 = bitcast %class.SkGlyph** %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %92, i1 false) #11
  %101 = load %class.SkGlyph**, %class.SkGlyph*** %88, align 8
  br label %102

102:                                              ; preds = %98, %79
  %103 = phi %class.SkGlyph** [ %89, %79 ], [ %101, %98 ]
  store i64 %96, i64* %8, align 8
  store i64 %87, i64* %6, align 8
  store i64 %84, i64* %62, align 8
  %104 = icmp eq %class.SkGlyph** %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %class.SkGlyph** %103 to i8*
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %48, %102, %105
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkGlyphDigest* @_ZN10SkTHashMapI15SkPackedGlyphID13SkGlyphDigest10SkGoodHashE3setES0_S1_(%class.SkTHashMap*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = trunc i32 %2 to i24
  %5 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 2
  %8 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 3
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0
  %14 = icmp sgt i32 %9, 0
  %15 = shl nsw i32 %9, 1
  %16 = select i1 %14, i32 %15, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapI15SkPackedGlyphID13SkGlyphDigest10SkGoodHashE4PairES1_S5_E6resizeEi(%class.SkTHashTable* %13, i32 %16) #11
  %17 = load i32, i32* %8, align 4
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i32 [ %9, %3 ], [ %17, %12 ]
  %20 = lshr i32 %1, 16
  %21 = xor i32 %20, %1
  %22 = mul i32 %21, -2048144789
  %23 = lshr i32 %22, 13
  %24 = xor i32 %23, %22
  %25 = mul i32 %24, -1028477387
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, i32 1, i32 %27
  %30 = icmp sgt i32 %19, 0
  br i1 %30, label %31, label %69

31:                                               ; preds = %18
  %32 = add nsw i32 %19, -1
  %33 = and i32 %32, %29
  %34 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %34, align 8
  br label %36

36:                                               ; preds = %62, %31
  %37 = phi i32 [ 0, %31 ], [ %67, %62 ]
  %38 = phi i32 [ %33, %31 ], [ %66, %62 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %35, i64 %39
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %35, i64 %39, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %35, i64 %39, i32 0, i32 0, i32 1, i32 0, i64 0
  %48 = bitcast i8* %47 to i24*
  store i24 %4, i24* %48, align 4
  store i32 %29, i32* %41, align 4
  %49 = load i32, i32* %5, align 8
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %5, align 8
  br label %69

51:                                               ; preds = %36
  %52 = icmp eq i32 %29, %42
  br i1 %52, label %53, label %62

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0
  store i32 %1, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %35, i64 %39, i32 0, i32 0, i32 1, i32 0, i64 0
  %61 = bitcast i8* %60 to i24*
  store i24 %4, i24* %61, align 4
  br label %69

62:                                               ; preds = %53, %51
  %63 = add nsw i32 %38, -1
  %64 = icmp slt i32 %38, 1
  %65 = select i1 %64, i32 %19, i32 0
  %66 = add nsw i32 %63, %65
  %67 = add nuw nsw i32 %37, 1
  %68 = icmp eq i32 %67, %19
  br i1 %68, label %69, label %36

69:                                               ; preds = %62, %18, %44, %57
  %70 = phi %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair"* [ %59, %57 ], [ %45, %44 ], [ null, %18 ], [ null, %62 ]
  %71 = getelementptr inbounds %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair"* %70, i64 0, i32 0, i32 1
  ret %class.SkGlyphDigest* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkPath*, i64 } @_ZN13SkScalerCache11preparePathEP7SkGlyph(%class.SkScalerCache*, %class.SkGlyph*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %4 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkScalerContext*, %class.SkScalerContext** %4, align 8
  %6 = tail call zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %1, %class.SkArenaAlloc* %3, %class.SkScalerContext* %5) #11
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %1) #11
  %9 = tail call i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath* %8) #11
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi i64 [ %9, %7 ], [ 0, %2 ]
  %12 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %1) #11
  %13 = insertvalue { %class.SkPath*, i64 } undef, %class.SkPath* %12, 0
  %14 = insertvalue { %class.SkPath*, i64 } %13, i64 %11, 1
  ret { %class.SkPath*, i64 } %14
}

declare zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph*, %class.SkArenaAlloc*, %class.SkScalerContext*) local_unnamed_addr #1

declare %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph*) local_unnamed_addr #1

declare i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkPath*, i64 } @_ZN13SkScalerCache9mergePathEP7SkGlyphPK6SkPath(%class.SkScalerCache*, %class.SkGlyph*, %class.SkPath*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #11
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %12 = tail call zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocPK6SkPath(%class.SkGlyph* %1, %class.SkArenaAlloc* %11, %class.SkPath* %2) #11
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %1) #11
  %15 = tail call i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath* %14) #11
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i64 [ %15, %13 ], [ 0, %10 ]
  %18 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %1) #11
  %19 = atomicrmw add i32* %5, i32 1 release
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %22, i32 1) #11
  br label %23

23:                                               ; preds = %16, %21
  %24 = insertvalue { %class.SkPath*, i64 } undef, %class.SkPath* %18, 0
  %25 = insertvalue { %class.SkPath*, i64 } %24, i64 %17, 1
  ret { %class.SkPath*, i64 } %25
}

declare zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocPK6SkPath(%class.SkGlyph*, %class.SkArenaAlloc*, %class.SkPath*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkDescriptor*, %class.SkDescriptor** %2, align 8
  ret %class.SkDescriptor* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkScalerCache17countCachedGlyphsEv(%class.SkScalerCache*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %3 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = atomicrmw add i32* %3, i32 1 release
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %2, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %14, i32 1) #11
  br label %15

15:                                               ; preds = %8, %13
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScalerCache15internalPrepareE6SkSpanIKtENS_10PathDetailEPPK7SkGlyph(%"class.std::__1::tuple.34"* noalias nocapture sret, %class.SkScalerCache*, i16*, i64, i32, %class.SkGlyph**) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds i16, i16* %2, i64 %3
  %8 = icmp eq i64 %3, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 6, i32 0, i32 0
  %11 = icmp eq i32 %4, 1
  %12 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 7
  %13 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %19

14:                                               ; preds = %45, %6
  %15 = phi i64 [ 0, %6 ], [ %46, %45 ]
  %16 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.SkGlyph** %5, %class.SkGlyph*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %15, i64* %18, align 8
  ret void

19:                                               ; preds = %9, %45
  %20 = phi %class.SkGlyph** [ %5, %9 ], [ %47, %45 ]
  %21 = phi i16* [ %2, %9 ], [ %49, %45 ]
  %22 = phi i64 [ 0, %9 ], [ %46, %45 ]
  %23 = load i16, i16* %21, align 2
  %24 = zext i16 %23 to i32
  %25 = shl nuw nsw i32 %24, 2
  %26 = tail call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %1, i32 %25) #11
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = extractvalue { i64, i64 } %26, 1
  %29 = and i64 %27, 1048575
  %30 = load %class.SkGlyph**, %class.SkGlyph*** %10, align 8
  %31 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %30, i64 %29
  %32 = load %class.SkGlyph*, %class.SkGlyph** %31, align 8
  %33 = ptrtoint %class.SkGlyph* %32 to i64
  %34 = add i64 %28, %22
  br i1 %11, label %35, label %45

35:                                               ; preds = %19
  %36 = load %class.SkScalerContext*, %class.SkScalerContext** %13, align 8
  %37 = tail call zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %32, %class.SkArenaAlloc* %12, %class.SkScalerContext* %36) #11
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %32) #11
  %40 = tail call i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath* %39) #11
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi i64 [ %40, %38 ], [ 0, %35 ]
  %43 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %32) #11
  %44 = add i64 %42, %34
  br label %45

45:                                               ; preds = %41, %19
  %46 = phi i64 [ %44, %41 ], [ %34, %19 ]
  %47 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %20, i64 1
  %48 = bitcast %class.SkGlyph** %20 to i64*
  store i64 %33, i64* %48, align 8
  %49 = getelementptr inbounds i16, i16* %21, i64 1
  %50 = icmp eq i16* %49, %7
  br i1 %50, label %14, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN13SkScalerCache12prepareImageEP7SkGlyph(%class.SkScalerCache*, %class.SkGlyph*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %4 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkScalerContext*, %class.SkScalerContext** %4, align 8
  %6 = tail call zeroext i1 @_ZN7SkGlyph8setImageEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %1, %class.SkArenaAlloc* %3, %class.SkScalerContext* %5) #11
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %1) #11
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i64 [ %8, %7 ], [ 0, %2 ]
  %11 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = insertvalue { i8*, i64 } undef, i8* %12, 0
  %14 = insertvalue { i8*, i64 } %13, i64 %10, 1
  ret { i8*, i64 } %14
}

declare zeroext i1 @_ZN7SkGlyph8setImageEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph*, %class.SkArenaAlloc*, %class.SkScalerContext*) local_unnamed_addr #1

declare i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkGlyph*, i64 } @_ZN13SkScalerCache18mergeGlyphAndImageE15SkPackedGlyphIDRK7SkGlyph(%class.SkScalerCache*, i32, %class.SkGlyph* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #11
  br label %10

10:                                               ; preds = %3, %8
  %11 = lshr i32 %1, 16
  %12 = xor i32 %11, %1
  %13 = mul i32 %12, -2048144789
  %14 = lshr i32 %13, 13
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, -1028477387
  %17 = lshr i32 %16, 16
  %18 = xor i32 %17, %16
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 1, i32 %18
  %21 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %65

24:                                               ; preds = %10
  %25 = add nsw i32 %22, -1
  %26 = and i32 %25, %20
  %27 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %27, align 8
  br label %29

29:                                               ; preds = %43, %24
  %30 = phi i32 [ 0, %24 ], [ %48, %43 ]
  %31 = phi i32 [ %26, %24 ], [ %47, %43 ]
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %28, i64 %32, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %29
  %37 = icmp eq i32 %20, %34
  br i1 %37, label %38, label %43

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %28, i64 %32, i32 0
  %40 = getelementptr inbounds %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %1
  br i1 %42, label %50, label %43

43:                                               ; preds = %38, %36
  %44 = add nsw i32 %31, -1
  %45 = icmp slt i32 %31, 1
  %46 = select i1 %45, i32 %22, i32 0
  %47 = add nsw i32 %44, %46
  %48 = add nuw nsw i32 %30, 1
  %49 = icmp eq i32 %48, %22
  br i1 %49, label %65, label %29

50:                                               ; preds = %38
  %51 = icmp eq %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair"* %39, null
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %28, i64 %32, i32 0, i32 0, i32 1
  %53 = icmp eq %class.SkGlyphDigest* %52, null
  %54 = or i1 %51, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = bitcast %class.SkGlyphDigest* %52 to i24*
  %57 = load i24, i24* %56, align 4
  %58 = and i24 %57, 1048575
  %59 = zext i24 %58 to i64
  %60 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 0
  %61 = load %class.SkGlyph**, %class.SkGlyph*** %60, align 8
  %62 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %61, i64 %59
  %63 = bitcast %class.SkGlyph** %62 to i64*
  %64 = load i64, i64* %63, align 8
  br label %95

65:                                               ; preds = %29, %43, %10, %50
  %66 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %67 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7, i32 1
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 0, %69
  %71 = and i64 %70, 7
  %72 = or i64 %71, 40
  %73 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7, i32 2
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %75, %69
  %77 = icmp ugt i64 %72, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %65
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %66, i32 40, i32 8) #11
  %79 = load i64, i64* %68, align 8
  %80 = sub i64 0, %79
  %81 = and i64 %80, 7
  br label %82

82:                                               ; preds = %65, %78
  %83 = phi i64 [ %79, %78 ], [ %69, %65 ]
  %84 = phi i64 [ %81, %78 ], [ %71, %65 ]
  %85 = inttoptr i64 %83 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 %84
  %87 = getelementptr inbounds i8, i8* %86, i64 40
  store i8* %87, i8** %67, align 8
  %88 = bitcast i8* %86 to %class.SkGlyph*
  %89 = getelementptr inbounds i8, i8* %86, i64 36
  %90 = bitcast i8* %89 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 34, i1 false) #11
  store i32 %1, i32* %90, align 4
  %91 = ptrtoint i8* %86 to i64
  %92 = tail call i64 @_ZN7SkGlyph18setMetricsAndImageEP12SkArenaAllocRKS_(%class.SkGlyph* %88, %class.SkArenaAlloc* %66, %class.SkGlyph* dereferenceable(40) %2) #11
  %93 = tail call i32 @_ZN13SkScalerCache8addGlyphEP7SkGlyph(%class.SkScalerCache* %0, %class.SkGlyph* %88)
  %94 = add i64 %92, 40
  br label %95

95:                                               ; preds = %82, %55
  %96 = phi i64 [ %91, %82 ], [ %64, %55 ]
  %97 = phi i64 [ %94, %82 ], [ 0, %55 ]
  %98 = atomicrmw add i32* %5, i32 1 release
  %99 = icmp slt i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %101, i32 1) #11
  br label %102

102:                                              ; preds = %95, %100
  %103 = inttoptr i64 %96 to %class.SkGlyph*
  %104 = insertvalue { %class.SkGlyph*, i64 } undef, %class.SkGlyph* %103, 0
  %105 = insertvalue { %class.SkGlyph*, i64 } %104, i64 %97, 1
  ret { %class.SkGlyph*, i64 } %105
}

declare i64 @_ZN7SkGlyph18setMetricsAndImageEP12SkArenaAllocRKS_(%class.SkGlyph*, %class.SkArenaAlloc*, %class.SkGlyph* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScalerCache7metricsE6SkSpanIKtEPPK7SkGlyph(%"class.std::__1::tuple.34"* noalias nocapture sret, %class.SkScalerCache*, i16* readonly, i64, %class.SkGlyph**) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 4
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acquire
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %11) #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds i16, i16* %2, i64 %3
  %14 = icmp eq i64 %3, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 6, i32 0, i32 0
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %class.SkGlyph** [ %4, %15 ], [ %33, %17 ]
  %19 = phi i16* [ %2, %15 ], [ %35, %17 ]
  %20 = phi i64 [ 0, %15 ], [ %32, %17 ]
  %21 = load i16, i16* %19, align 2, !noalias !5
  %22 = zext i16 %21 to i32
  %23 = shl nuw nsw i32 %22, 2
  %24 = tail call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %1, i32 %23) #11, !noalias !5
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  %27 = and i64 %25, 1048575
  %28 = load %class.SkGlyph**, %class.SkGlyph*** %16, align 8, !noalias !5
  %29 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %28, i64 %27
  %30 = bitcast %class.SkGlyph** %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !5
  %32 = add i64 %26, %20
  %33 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %18, i64 1
  %34 = bitcast %class.SkGlyph** %18 to i64*
  store i64 %31, i64* %34, align 8, !noalias !5
  %35 = getelementptr inbounds i16, i16* %19, i64 1
  %36 = icmp eq i16* %35, %13
  br i1 %36, label %37, label %17

37:                                               ; preds = %17, %12
  %38 = phi i64 [ 0, %12 ], [ %32, %17 ]
  %39 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.SkGlyph** %4, %class.SkGlyph*** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %38, i64* %41, align 8
  %42 = atomicrmw add i32* %7, i32 1 release
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %45, i32 1) #11
  br label %46

46:                                               ; preds = %37, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScalerCache12preparePathsE6SkSpanIKtEPPK7SkGlyph(%"class.std::__1::tuple.34"* noalias nocapture sret, %class.SkScalerCache*, i16* readonly, i64, %class.SkGlyph**) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 4
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acquire
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %11) #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds i16, i16* %2, i64 %3
  %14 = icmp eq i64 %3, 0
  br i1 %14, label %48, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 6, i32 0, i32 0
  %17 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 7
  %18 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %40, %15
  %20 = phi %class.SkGlyph** [ %4, %15 ], [ %44, %40 ]
  %21 = phi i16* [ %2, %15 ], [ %46, %40 ]
  %22 = phi i64 [ 0, %15 ], [ %43, %40 ]
  %23 = load i16, i16* %21, align 2, !noalias !8
  %24 = zext i16 %23 to i32
  %25 = shl nuw nsw i32 %24, 2
  %26 = tail call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %1, i32 %25) #11, !noalias !8
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = extractvalue { i64, i64 } %26, 1
  %29 = and i64 %27, 1048575
  %30 = load %class.SkGlyph**, %class.SkGlyph*** %16, align 8, !noalias !8
  %31 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %30, i64 %29
  %32 = load %class.SkGlyph*, %class.SkGlyph** %31, align 8, !noalias !8
  %33 = ptrtoint %class.SkGlyph* %32 to i64
  %34 = add i64 %28, %22
  %35 = load %class.SkScalerContext*, %class.SkScalerContext** %18, align 8, !noalias !8
  %36 = tail call zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %32, %class.SkArenaAlloc* %17, %class.SkScalerContext* %35) #11, !noalias !8
  br i1 %36, label %37, label %40

37:                                               ; preds = %19
  %38 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %32) #11, !noalias !8
  %39 = tail call i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath* %38) #11, !noalias !8
  br label %40

40:                                               ; preds = %37, %19
  %41 = phi i64 [ %39, %37 ], [ 0, %19 ]
  %42 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %32) #11, !noalias !8
  %43 = add i64 %34, %41
  %44 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %20, i64 1
  %45 = bitcast %class.SkGlyph** %20 to i64*
  store i64 %33, i64* %45, align 8, !noalias !8
  %46 = getelementptr inbounds i16, i16* %21, i64 1
  %47 = icmp eq i16* %46, %13
  br i1 %47, label %48, label %19

48:                                               ; preds = %40, %12
  %49 = phi i64 [ 0, %12 ], [ %43, %40 ]
  %50 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.SkGlyph** %4, %class.SkGlyph*** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %49, i64* %52, align 8
  %53 = atomicrmw add i32* %7, i32 1 release
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %56, i32 1) #11
  br label %57

57:                                               ; preds = %48, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScalerCache13prepareImagesE6SkSpanIK15SkPackedGlyphIDEPPK7SkGlyph(%"class.std::__1::tuple.34"* noalias nocapture sret, %class.SkScalerCache*, %struct.SkPackedGlyphID*, i64, %class.SkGlyph**) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 4
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acquire
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %11) #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds %struct.SkPackedGlyphID, %struct.SkPackedGlyphID* %2, i64 %3
  %14 = icmp eq i64 %3, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 6, i32 0, i32 0
  %17 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 7
  %18 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %29

19:                                               ; preds = %47, %12
  %20 = phi i64 [ 0, %12 ], [ %50, %47 ]
  %21 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.SkGlyph** %4, %class.SkGlyph*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.34", %"class.std::__1::tuple.34"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %20, i64* %23, align 8
  %24 = atomicrmw add i32* %7, i32 1 release
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %19
  %27 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %27, i32 1) #11
  br label %28

28:                                               ; preds = %19, %26
  ret void

29:                                               ; preds = %15, %47
  %30 = phi %class.SkGlyph** [ %4, %15 ], [ %51, %47 ]
  %31 = phi %struct.SkPackedGlyphID* [ %2, %15 ], [ %53, %47 ]
  %32 = phi i64 [ 0, %15 ], [ %50, %47 ]
  %33 = getelementptr inbounds %struct.SkPackedGlyphID, %struct.SkPackedGlyphID* %31, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = tail call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %1, i32 %34) #11
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = and i64 %36, 1048575
  %39 = load %class.SkGlyph**, %class.SkGlyph*** %16, align 8
  %40 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %39, i64 %38
  %41 = load %class.SkGlyph*, %class.SkGlyph** %40, align 8
  %42 = ptrtoint %class.SkGlyph* %41 to i64
  %43 = load %class.SkScalerContext*, %class.SkScalerContext** %18, align 8
  %44 = tail call zeroext i1 @_ZN7SkGlyph8setImageEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %41, %class.SkArenaAlloc* %17, %class.SkScalerContext* %43) #11
  br i1 %44, label %45, label %47

45:                                               ; preds = %29
  %46 = tail call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %41) #11
  br label %47

47:                                               ; preds = %29, %45
  %48 = phi i64 [ %46, %45 ], [ 0, %29 ]
  %49 = add i64 %37, %32
  %50 = add i64 %49, %48
  %51 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %30, i64 1
  %52 = bitcast %class.SkGlyph** %30 to i64*
  store i64 %42, i64* %52, align 8
  %53 = getelementptr inbounds %struct.SkPackedGlyphID, %struct.SkPackedGlyphID* %31, i64 1
  %54 = icmp eq %struct.SkPackedGlyphID* %53, %13
  br i1 %54, label %19, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkScalerCache25prepareForDrawingMasksCPUEP21SkDrawableGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*) local_unnamed_addr #4 align 2 {
  %3 = alloca %class.SkEnumerate, align 8
  %4 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = bitcast %class.SkEnumerate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #11
  %12 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !11
  %14 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %class.SkGlyphVariant** %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !11
  %17 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %struct.SkPoint** %17 to i64*
  %19 = load i64, i64* %18, align 8, !noalias !11
  %20 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 0
  %21 = bitcast %class.SkEnumerate* %3 to i64*
  store i64 %16, i64* %21, align 8
  %22 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__tuple_leaf.61"* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 0, i32 1
  store i64 %13, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 1
  store i64 0, i64* %25, align 8, !alias.scope !14
  %26 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 2, i32 0
  store %class.SkZip.80* %20, %class.SkZip.80** %26, align 8, !alias.scope !17
  %27 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 2, i32 1
  store i64 0, i64* %27, align 8, !alias.scope !17
  %28 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 3, i32 0
  store %class.SkZip.80* %20, %class.SkZip.80** %28, align 8, !alias.scope !22
  %29 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 3, i32 1
  store i64 %13, i64* %29, align 8, !alias.scope !22
  %30 = icmp eq i64 %13, 0
  br i1 %30, label %109, label %31

31:                                               ; preds = %10
  %32 = inttoptr i64 %19 to %struct.SkPoint*
  %33 = inttoptr i64 %16 to %class.SkGlyphVariant*
  %34 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 0
  %37 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %38 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  br label %40

40:                                               ; preds = %106, %31
  %41 = phi i64 [ 0, %31 ], [ %102, %106 ]
  %42 = phi %struct.SkPoint* [ %32, %31 ], [ %108, %106 ]
  %43 = phi %class.SkGlyphVariant* [ %33, %31 ], [ %107, %106 ]
  %44 = phi i64 [ 0, %31 ], [ %103, %106 ]
  %45 = phi i64 [ 0, %31 ], [ %104, %106 ]
  %46 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %43, i64 %45
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %42, i64 %45
  %48 = bitcast %struct.SkPoint* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 2139095040
  %51 = icmp eq i32 %50, 2139095040
  br i1 %51, label %101, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %42, i64 %45, i32 1
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 2139095040
  %57 = icmp eq i32 %56, 2139095040
  br i1 %57, label %101, label %58

58:                                               ; preds = %52
  %59 = bitcast %class.SkGlyphVariant* %46 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %0, i32 %60) #11
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = add i64 %63, %44
  %65 = and i64 %62, 1048576
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %101

67:                                               ; preds = %58
  %68 = and i64 %62, 1048575
  %69 = load %class.SkGlyph**, %class.SkGlyph*** %36, align 8
  %70 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %69, i64 %68
  %71 = load %class.SkGlyph*, %class.SkGlyph** %70, align 8
  %72 = load %class.SkScalerContext*, %class.SkScalerContext** %38, align 8
  %73 = call zeroext i1 @_ZN7SkGlyph8setImageEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %71, %class.SkArenaAlloc* %37, %class.SkScalerContext* %72) #11
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %71) #11
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i64 [ %75, %74 ], [ 0, %67 ]
  %78 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %71, i64 0, i32 4
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %101, label %81

81:                                               ; preds = %76
  %82 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8
  %83 = shl i64 %45, 32
  %84 = ashr exact i64 %83, 32
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %82, i64 %84
  %86 = load i64, i64* %39, align 8
  %87 = shl i64 %86, 32
  %88 = ashr exact i64 %87, 32
  %89 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %82, i64 %88
  %90 = bitcast %struct.SkPoint* %85 to i64*
  %91 = bitcast %struct.SkPoint* %89 to i64*
  %92 = load i64, i64* %90, align 4
  store i64 %92, i64* %91, align 4
  %93 = load i64, i64* %39, align 8
  %94 = shl i64 %93, 32
  %95 = ashr exact i64 %94, 32
  %96 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %14, align 8
  %97 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %96, i64 %95, i32 0, i32 0
  store %class.SkGlyph* %71, %class.SkGlyph** %97, align 8
  %98 = load i64, i64* %39, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %39, align 8
  %100 = add i64 %77, %41
  br label %101

101:                                              ; preds = %81, %76, %58, %52, %40
  %102 = phi i64 [ %41, %40 ], [ %41, %52 ], [ %41, %76 ], [ %100, %81 ], [ %41, %58 ]
  %103 = phi i64 [ %44, %40 ], [ %44, %52 ], [ %64, %76 ], [ %64, %81 ], [ %64, %58 ]
  %104 = add nuw i64 %45, 1
  %105 = icmp eq i64 %104, %13
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %34, align 8, !noalias !27
  %108 = load %struct.SkPoint*, %struct.SkPoint** %35, align 8, !noalias !27
  br label %40

109:                                              ; preds = %101, %10
  %110 = phi i64 [ 0, %10 ], [ %102, %101 ]
  %111 = phi i64 [ 0, %10 ], [ %103, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #11
  %112 = add i64 %111, %110
  %113 = atomicrmw add i32* %5, i32 1 release
  %114 = icmp slt i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %116, i32 1) #11
  br label %117

117:                                              ; preds = %109, %115
  ret i64 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkScalerCache21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkEnumerate, align 8
  %5 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %10) #11
  br label %11

11:                                               ; preds = %3, %9
  %12 = bitcast %class.SkEnumerate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #11
  %13 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !30
  %15 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %class.SkGlyphVariant** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !30
  %18 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %struct.SkPoint** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !30
  %21 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0
  %22 = bitcast %class.SkEnumerate* %4 to i64*
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tuple_leaf.61"* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 1
  store i64 %14, i64* %25, align 8
  %26 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 1
  store i64 0, i64* %26, align 8, !alias.scope !33
  %27 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 0
  store %class.SkZip.80* %21, %class.SkZip.80** %27, align 8, !alias.scope !36
  %28 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 1
  store i64 0, i64* %28, align 8, !alias.scope !36
  %29 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 0
  store %class.SkZip.80* %21, %class.SkZip.80** %29, align 8, !alias.scope !41
  %30 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 1
  store i64 %14, i64* %30, align 8, !alias.scope !41
  %31 = icmp eq i64 %14, 0
  br i1 %31, label %101, label %32

32:                                               ; preds = %11
  %33 = inttoptr i64 %20 to %struct.SkPoint*
  %34 = inttoptr i64 %17 to %class.SkGlyphVariant*
  %35 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 0
  %38 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  br label %39

39:                                               ; preds = %98, %32
  %40 = phi %struct.SkPoint* [ %33, %32 ], [ %100, %98 ]
  %41 = phi %class.SkGlyphVariant* [ %34, %32 ], [ %99, %98 ]
  %42 = phi i64 [ 0, %32 ], [ %95, %98 ]
  %43 = phi i64 [ 0, %32 ], [ %96, %98 ]
  %44 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %41, i64 %43
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %40, i64 %43
  %46 = bitcast %struct.SkPoint* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 2139095040
  %49 = icmp eq i32 %48, 2139095040
  br i1 %49, label %94, label %50

50:                                               ; preds = %39
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %40, i64 %43, i32 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 2139095040
  %55 = icmp eq i32 %54, 2139095040
  br i1 %55, label %94, label %56

56:                                               ; preds = %50
  %57 = bitcast %class.SkGlyphVariant* %44 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %0, i32 %58) #11
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = add i64 %61, %42
  %63 = and i64 %60, 1048576
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %94

65:                                               ; preds = %56
  %66 = and i64 %60, 4194304
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %93, label %68

68:                                               ; preds = %65
  %69 = and i64 %60, 1048575
  %70 = load %class.SkGlyph**, %class.SkGlyph*** %37, align 8
  %71 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %70, i64 %69
  %72 = bitcast %class.SkGlyph** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %75 = shl i64 %43, 32
  %76 = ashr exact i64 %75, 32
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %74, i64 %76
  %78 = load i64, i64* %38, align 8
  %79 = shl i64 %78, 32
  %80 = ashr exact i64 %79, 32
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %74, i64 %80
  %82 = bitcast %struct.SkPoint* %77 to i64*
  %83 = bitcast %struct.SkPoint* %81 to i64*
  %84 = load i64, i64* %82, align 4
  store i64 %84, i64* %83, align 4
  %85 = load i64, i64* %38, align 8
  %86 = shl i64 %85, 32
  %87 = ashr exact i64 %86, 32
  %88 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %15, align 8
  %89 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %88, i64 %87, i32 0, i32 0
  %90 = bitcast %class.SkGlyph** %89 to i64*
  store i64 %73, i64* %90, align 8
  %91 = load i64, i64* %38, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %38, align 8
  br label %94

93:                                               ; preds = %65
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %43) #11
  br label %94

94:                                               ; preds = %93, %68, %56, %50, %39
  %95 = phi i64 [ %42, %50 ], [ %62, %93 ], [ %62, %68 ], [ %62, %56 ], [ %42, %39 ]
  %96 = add nuw i64 %43, 1
  %97 = icmp eq i64 %96, %14
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %35, align 8, !noalias !46
  %100 = load %struct.SkPoint*, %struct.SkPoint** %36, align 8, !noalias !46
  br label %39

101:                                              ; preds = %94, %11
  %102 = phi i64 [ 0, %11 ], [ %95, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #11
  %103 = atomicrmw add i32* %6, i32 1 release
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %106, i32 1) #11
  br label %107

107:                                              ; preds = %101, %105
  ret i64 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkScalerCache21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkEnumerate, align 8
  %5 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %10) #11
  br label %11

11:                                               ; preds = %3, %9
  %12 = bitcast %class.SkEnumerate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #11
  %13 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !49
  %15 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %class.SkGlyphVariant** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !49
  %18 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %struct.SkPoint** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !49
  %21 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0
  %22 = bitcast %class.SkEnumerate* %4 to i64*
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tuple_leaf.61"* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 1
  store i64 %14, i64* %25, align 8
  %26 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 1
  store i64 0, i64* %26, align 8, !alias.scope !52
  %27 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 0
  store %class.SkZip.80* %21, %class.SkZip.80** %27, align 8, !alias.scope !55
  %28 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 1
  store i64 0, i64* %28, align 8, !alias.scope !55
  %29 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 0
  store %class.SkZip.80* %21, %class.SkZip.80** %29, align 8, !alias.scope !60
  %30 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 1
  store i64 %14, i64* %30, align 8, !alias.scope !60
  %31 = icmp eq i64 %14, 0
  br i1 %31, label %101, label %32

32:                                               ; preds = %11
  %33 = inttoptr i64 %20 to %struct.SkPoint*
  %34 = inttoptr i64 %17 to %class.SkGlyphVariant*
  %35 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 0
  %38 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  br label %39

39:                                               ; preds = %98, %32
  %40 = phi %struct.SkPoint* [ %33, %32 ], [ %100, %98 ]
  %41 = phi %class.SkGlyphVariant* [ %34, %32 ], [ %99, %98 ]
  %42 = phi i64 [ 0, %32 ], [ %95, %98 ]
  %43 = phi i64 [ 0, %32 ], [ %96, %98 ]
  %44 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %41, i64 %43
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %40, i64 %43
  %46 = bitcast %struct.SkPoint* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 2139095040
  %49 = icmp eq i32 %48, 2139095040
  br i1 %49, label %94, label %50

50:                                               ; preds = %39
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %40, i64 %43, i32 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 2139095040
  %55 = icmp eq i32 %54, 2139095040
  br i1 %55, label %94, label %56

56:                                               ; preds = %50
  %57 = bitcast %class.SkGlyphVariant* %44 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %0, i32 %58) #11
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = add i64 %61, %42
  %63 = and i64 %60, 1048576
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %94

65:                                               ; preds = %56
  %66 = trunc i64 %60 to i24
  %67 = icmp slt i24 %66, 0
  br i1 %67, label %68, label %93

68:                                               ; preds = %65
  %69 = and i64 %60, 1048575
  %70 = load %class.SkGlyph**, %class.SkGlyph*** %37, align 8
  %71 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %70, i64 %69
  %72 = bitcast %class.SkGlyph** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %75 = shl i64 %43, 32
  %76 = ashr exact i64 %75, 32
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %74, i64 %76
  %78 = load i64, i64* %38, align 8
  %79 = shl i64 %78, 32
  %80 = ashr exact i64 %79, 32
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %74, i64 %80
  %82 = bitcast %struct.SkPoint* %77 to i64*
  %83 = bitcast %struct.SkPoint* %81 to i64*
  %84 = load i64, i64* %82, align 4
  store i64 %84, i64* %83, align 4
  %85 = load i64, i64* %38, align 8
  %86 = shl i64 %85, 32
  %87 = ashr exact i64 %86, 32
  %88 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %15, align 8
  %89 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %88, i64 %87, i32 0, i32 0
  %90 = bitcast %class.SkGlyph** %89 to i64*
  store i64 %73, i64* %90, align 8
  %91 = load i64, i64* %38, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %38, align 8
  br label %94

93:                                               ; preds = %65
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %43) #11
  br label %94

94:                                               ; preds = %93, %68, %56, %50, %39
  %95 = phi i64 [ %42, %50 ], [ %62, %93 ], [ %62, %68 ], [ %62, %56 ], [ %42, %39 ]
  %96 = add nuw i64 %43, 1
  %97 = icmp eq i64 %96, %14
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %35, align 8, !noalias !65
  %100 = load %struct.SkPoint*, %struct.SkPoint** %36, align 8, !noalias !65
  br label %39

101:                                              ; preds = %94, %11
  %102 = phi i64 [ 0, %11 ], [ %95, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #11
  %103 = atomicrmw add i32* %6, i32 1 release
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %106, i32 1) #11
  br label %107

107:                                              ; preds = %101, %105
  ret i64 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13SkScalerCache21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkEnumerate, align 8
  %5 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %10) #11
  br label %11

11:                                               ; preds = %3, %9
  %12 = bitcast %class.SkEnumerate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #11
  %13 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !68
  %15 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %class.SkGlyphVariant** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !68
  %18 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %struct.SkPoint** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !68
  %21 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0
  %22 = bitcast %class.SkEnumerate* %4 to i64*
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tuple_leaf.61"* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 1
  store i64 %14, i64* %25, align 8
  %26 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 1
  store i64 0, i64* %26, align 8, !alias.scope !71
  %27 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 0
  store %class.SkZip.80* %21, %class.SkZip.80** %27, align 8, !alias.scope !74
  %28 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 1
  store i64 0, i64* %28, align 8, !alias.scope !74
  %29 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 0
  store %class.SkZip.80* %21, %class.SkZip.80** %29, align 8, !alias.scope !79
  %30 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 1
  store i64 %14, i64* %30, align 8, !alias.scope !79
  %31 = icmp eq i64 %14, 0
  br i1 %31, label %137, label %32

32:                                               ; preds = %11
  %33 = inttoptr i64 %20 to %struct.SkPoint*
  %34 = inttoptr i64 %17 to %class.SkGlyphVariant*
  %35 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 6, i32 0, i32 0
  %38 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %2, i64 0, i32 3
  %39 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  %40 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  br label %42

42:                                               ; preds = %134, %32
  %43 = phi i64 [ 0, %32 ], [ %130, %134 ]
  %44 = phi %struct.SkPoint* [ %33, %32 ], [ %136, %134 ]
  %45 = phi %class.SkGlyphVariant* [ %34, %32 ], [ %135, %134 ]
  %46 = phi i64 [ 0, %32 ], [ %131, %134 ]
  %47 = phi i64 [ 0, %32 ], [ %132, %134 ]
  %48 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %45, i64 %47
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 %47
  %50 = bitcast %struct.SkPoint* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 2139095040
  %53 = icmp eq i32 %52, 2139095040
  br i1 %53, label %129, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 %47, i32 1
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 2139095040
  %59 = icmp eq i32 %58, 2139095040
  br i1 %59, label %129, label %60

60:                                               ; preds = %54
  %61 = bitcast %class.SkGlyphVariant* %48 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = call { i64, i64 } @_ZN13SkScalerCache6digestE15SkPackedGlyphID(%class.SkScalerCache* %0, i32 %62) #11
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = add i64 %65, %46
  %67 = and i64 %64, 1048576
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %129

69:                                               ; preds = %60
  %70 = and i64 %64, 1048575
  %71 = load %class.SkGlyph**, %class.SkGlyph*** %37, align 8
  %72 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %71, i64 %70
  %73 = load %class.SkGlyph*, %class.SkGlyph** %72, align 8
  %74 = and i64 %64, 2097152
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %118

76:                                               ; preds = %69
  %77 = load %class.SkScalerContext*, %class.SkScalerContext** %40, align 8
  %78 = call zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %73, %class.SkArenaAlloc* %39, %class.SkScalerContext* %77) #11
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  %80 = call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %73) #11
  %81 = call i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath* %80) #11
  br label %82

82:                                               ; preds = %79, %76
  %83 = phi i64 [ %81, %79 ], [ 0, %76 ]
  %84 = call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %73) #11
  %85 = add i64 %83, %43
  %86 = icmp eq %class.SkPath* %84, null
  br i1 %86, label %107, label %87

87:                                               ; preds = %82
  %88 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %89 = shl i64 %47, 32
  %90 = ashr exact i64 %89, 32
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %88, i64 %90
  %92 = load i64, i64* %41, align 8
  %93 = shl i64 %92, 32
  %94 = ashr exact i64 %93, 32
  %95 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %88, i64 %94
  %96 = bitcast %struct.SkPoint* %91 to i64*
  %97 = bitcast %struct.SkPoint* %95 to i64*
  %98 = load i64, i64* %96, align 4
  store i64 %98, i64* %97, align 4
  %99 = load i64, i64* %41, align 8
  %100 = shl i64 %99, 32
  %101 = ashr exact i64 %100, 32
  %102 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %15, align 8
  %103 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %102, i64 %101
  %104 = bitcast %class.SkGlyphVariant* %103 to %class.SkPath**
  store %class.SkPath* %84, %class.SkPath** %104, align 8
  %105 = load i64, i64* %41, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %41, align 8
  br label %129

107:                                              ; preds = %82
  %108 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %73, i64 0, i32 0
  %109 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %73, i64 0, i32 1
  %110 = load i16, i16* %108, align 2
  %111 = load i16, i16* %109, align 2
  %112 = icmp ult i16 %110, %111
  %113 = select i1 %112, i16 %111, i16 %110
  %114 = zext i16 %113 to i32
  %115 = load i32, i32* %38, align 4
  %116 = icmp slt i32 %115, %114
  %117 = select i1 %116, i32 %114, i32 %115
  store i32 %117, i32* %38, align 4
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %47) #11
  br label %129

118:                                              ; preds = %69
  %119 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %73, i64 0, i32 0
  %120 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %73, i64 0, i32 1
  %121 = load i16, i16* %119, align 2
  %122 = load i16, i16* %120, align 2
  %123 = icmp ult i16 %121, %122
  %124 = select i1 %123, i16 %122, i16 %121
  %125 = zext i16 %124 to i32
  %126 = load i32, i32* %38, align 4
  %127 = icmp slt i32 %126, %125
  %128 = select i1 %127, i32 %125, i32 %126
  store i32 %128, i32* %38, align 4
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %47) #11
  br label %129

129:                                              ; preds = %118, %107, %87, %60, %54, %42
  %130 = phi i64 [ %43, %42 ], [ %43, %54 ], [ %85, %107 ], [ %85, %87 ], [ %43, %118 ], [ %43, %60 ]
  %131 = phi i64 [ %46, %42 ], [ %46, %54 ], [ %66, %107 ], [ %66, %87 ], [ %66, %118 ], [ %66, %60 ]
  %132 = add nuw i64 %47, 1
  %133 = icmp eq i64 %132, %14
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %35, align 8, !noalias !84
  %136 = load %struct.SkPoint*, %struct.SkPoint** %36, align 8, !noalias !84
  br label %42

137:                                              ; preds = %129, %11
  %138 = phi i64 [ 0, %11 ], [ %130, %129 ]
  %139 = phi i64 [ 0, %11 ], [ %131, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #11
  %140 = add i64 %139, %138
  %141 = atomicrmw add i32* %6, i32 1 release
  %142 = icmp slt i32 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %137
  %144 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %144, i32 1) #11
  br label %145

145:                                              ; preds = %137, %143
  ret i64 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScalerCache14findInterceptsEPKfffP7SkGlyphPfPi(%class.SkScalerCache*, float*, float, float, %class.SkGlyph*, float*, i32*) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acquire
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %13) #11
  br label %14

14:                                               ; preds = %7, %12
  %15 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 7
  tail call void @_ZN7SkGlyph16ensureInterceptsEPKfffPfPiP12SkArenaAlloc(%class.SkGlyph* %4, float* %1, float %2, float %3, float* %5, i32* %6, %class.SkArenaAlloc* %15) #11
  %16 = atomicrmw add i32* %9, i32 1 release
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %19, i32 1) #11
  br label %20

20:                                               ; preds = %14, %18
  ret void
}

declare void @_ZN7SkGlyph16ensureInterceptsEPKfffPfPiP12SkArenaAlloc(%class.SkGlyph*, float*, float, float, float*, i32*, %class.SkArenaAlloc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkScalerCache4dumpEv(%class.SkScalerCache*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkMatrix, align 16
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 4
  %7 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acquire
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %11) #11
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.SkScalerContext*, %class.SkScalerContext** %13, align 8
  %15 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %14, i64 0, i32 2, i32 0
  %16 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %17 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %14, i64 0, i32 1
  %18 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %20 = bitcast %class.SkMatrix* %2 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %20, align 16
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %22, align 16
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %23, align 16
  store i32 16, i32* %19, align 4
  call void @_ZNK18SkScalerContextRec15getSingleMatrixEP8SkMatrix(%struct.SkScalerContextRec* %17, %class.SkMatrix* nonnull %2) #11
  %24 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %14, i64 0, i32 1, i32 1
  %25 = load float, float* %24, align 4
  %26 = fdiv float 1.000000e+00, %25
  %27 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %2, float %26, float %26) #11
  %28 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %29, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #11
  call void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface* %16, %class.SkString* nonnull %3) #11
  %30 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %31, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #11
  %32 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %16, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %16, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %29, align 8
  %37 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %36, i64 0, i32 2
  %38 = and i32 %33, 65535
  %39 = lshr i32 %33, 16
  %40 = and i32 %39, 255
  %41 = lshr i32 %33, 24
  %42 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  call void @_ZNK18SkScalerContextRec4dumpEv(%class.SkString* nonnull sret %5, %struct.SkScalerContextRec* %17)
  %43 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  %44 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %43, align 8
  %45 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %44, i64 0, i32 2
  %46 = getelementptr inbounds %class.SkScalerCache, %class.SkScalerCache* %0, i64 0, i32 5, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 %35, i8* %37, i32 %38, i32 %40, i32 %41, i8* %45, i32 %47) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %48 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %31, align 8
  %49 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %48, i64 0, i32 2
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 272, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* %49) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  %50 = atomicrmw add i32* %7, i32 1 release
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %12
  %53 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %6, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %53, i32 1) #11
  br label %54

54:                                               ; preds = %12, %52
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK18SkScalerContextRec15getSingleMatrixEP8SkMatrix(%struct.SkScalerContextRec*, %class.SkMatrix*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

declare void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #1

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkScalerContextRec4dumpEv(%class.SkString* noalias sret, %struct.SkScalerContextRec*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %3, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %0) #11
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #11
  %4 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fpext float %5 to double
  %7 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = fpext float %8 to double
  %10 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 3
  %11 = load float, float* %10, align 4
  %12 = fpext float %11 to double
  %13 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 0, i64 0
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 0, i64 1
  %17 = load float, float* %16, align 4
  %18 = fpext float %17 to double
  %19 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 1, i64 0
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 1, i64 1
  %23 = load float, float* %22, align 4
  %24 = fpext float %23 to double
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), double %6, double %9, double %12, double %15, double %18, double %21, double %24) #11
  %25 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  %28 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 6
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  %31 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 12
  %32 = load i8, i8* %31, align 4
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 13
  %35 = load i8, i8* %34, align 1
  %36 = and i8 %35, 15
  %37 = zext i8 %36 to i32
  %38 = lshr i8 %35, 4
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 14
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.5, i64 0, i64 0), double %27, double %30, i32 %33, i32 %37, i32 %39, i32 %42) #11
  %43 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 8
  %46 = load i8, i8* %45, align 4
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 9
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 10
  %52 = load i8, i8* %51, align 2
  %53 = zext i8 %52 to i32
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 %44, i32 %47, i32 %50, i32 %53) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

declare void @_ZN15SkScalerContext14getFontMetricsEP13SkFontMetrics(%class.SkScalerContext*, %struct.SkFontMetrics*) local_unnamed_addr #1

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #1

declare zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsMaskERK7SkGlyph(%class.SkGlyph* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsSDFTERK7SkGlyph(%class.SkGlyph* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #1

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #1

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapI15SkPackedGlyphID13SkGlyphDigest10SkGoodHashE4PairES1_S5_E6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %33

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 12) #11
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #13
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %19, i64 %13
  br label %21

21:                                               ; preds = %21, %12
  %22 = phi %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* [ %19, %12 ], [ %25, %21 ]
  %23 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %22 to i64*
  store i64 4294967295, i64* %23, align 4
  %24 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %22, i64 0, i32 1
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %22, i64 1
  %26 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %25, %20
  br i1 %26, label %27, label %21

27:                                               ; preds = %21
  %28 = ptrtoint i8* %18 to i64
  %29 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %7, align 8
  %30 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %29, null
  store i64 %28, i64* %8, align 8
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #13
  br label %33

33:                                               ; preds = %31, %27, %11
  %34 = icmp sgt i32 %4, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = inttoptr i64 %9 to %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*
  %37 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %38 = zext i32 %4 to i64
  br label %44

39:                                               ; preds = %99, %33
  %40 = icmp eq i64 %9, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %42) #13
  br label %43

43:                                               ; preds = %39, %41
  ret void

44:                                               ; preds = %99, %35
  %45 = phi i64 [ 0, %35 ], [ %100, %99 ]
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %99, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = lshr i32 %51, 16
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, -2048144789
  %55 = lshr i32 %54, 13
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, -1028477387
  %58 = lshr i32 %57, 16
  %59 = xor i32 %58, %57
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, i32 1, i32 %59
  %62 = load i32, i32* %3, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %99

64:                                               ; preds = %49
  %65 = add nsw i32 %62, -1
  %66 = and i32 %61, %65
  %67 = load %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"** %37, align 8
  br label %68

68:                                               ; preds = %92, %64
  %69 = phi i32 [ 0, %64 ], [ %97, %92 ]
  %70 = phi i32 [ %66, %64 ], [ %96, %92 ]
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %67, i64 %71
  %73 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %67, i64 %71, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %51, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %67, i64 %71, i32 0, i32 0, i32 1, i32 0, i64 0
  %79 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 0, i32 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 3, i1 false) #11
  store i32 %61, i32* %73, align 4
  %80 = load i32, i32* %5, align 8
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %5, align 8
  br label %99

82:                                               ; preds = %68
  %83 = icmp eq i32 %61, %74
  br i1 %83, label %84, label %92

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %51, %86
  br i1 %87, label %88, label %92

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %51, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %67, i64 %71, i32 0, i32 0, i32 1, i32 0, i64 0
  %91 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 0, i32 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 3, i1 false) #11
  br label %99

92:                                               ; preds = %84, %82
  %93 = add nsw i32 %70, -1
  %94 = icmp slt i32 %70, 1
  %95 = select i1 %94, i32 %62, i32 0
  %96 = add nsw i32 %93, %95
  %97 = add nuw nsw i32 %69, 1
  %98 = icmp eq i32 %97, %62
  br i1 %98, label %99, label %68

99:                                               ; preds = %92, %88, %76, %49, %44
  %100 = add nuw nsw i64 %45, 1
  %101 = icmp eq i64 %100, %38
  br i1 %101, label %39, label %44
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 5, i32 0, i32 0, i64 8
  %6 = bitcast i8* %5 to i16**
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %4, %7
  %9 = getelementptr inbounds i16, i16* %4, i64 %1
  %10 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 %1
  br i1 %8, label %47, label %13

13:                                               ; preds = %2
  %14 = bitcast i8* %5 to %class.SkTArray*
  tail call void @_ZN8SkTArrayItLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %14, i32 1, i32 1) #11
  %15 = load i16*, i16** %6, align 8
  %16 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 5, i32 0, i32 0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds i16, i16* %15, i64 %20
  %22 = add i64 %18, 2
  %23 = and i64 %22, 4294967294
  %24 = and i64 %18, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %17, align 8
  %26 = load i16, i16* %9, align 2
  store i16 %26, i16* %21, align 2
  %27 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 6, i32 0, i32 0, i64 32
  %28 = bitcast i8* %27 to %class.SkTArray.64*
  tail call void @_ZN8SkTArrayI7SkPointLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.64* %28, i32 1, i32 1) #11
  %29 = bitcast i8* %27 to %struct.SkPoint**
  %30 = load %struct.SkPoint*, %struct.SkPoint** %29, align 8
  %31 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 6, i32 0, i32 0, i64 40
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 %35
  %37 = add i64 %33, 2
  %38 = and i64 %37, 4294967294
  %39 = and i64 %33, -4294967295
  %40 = or i64 %38, %39
  store i64 %40, i64* %32, align 8
  %41 = bitcast %struct.SkPoint* %12 to i64*
  %42 = bitcast %struct.SkPoint* %36 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %61

47:                                               ; preds = %2
  %48 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %52 = load i16*, i16** %51, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 %49
  %54 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0
  %55 = load %struct.SkPoint*, %struct.SkPoint** %54, align 8
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 %49
  %57 = load i16, i16* %9, align 2
  store i16 %57, i16* %53, align 2
  %58 = bitcast %struct.SkPoint* %12 to i64*
  %59 = bitcast %struct.SkPoint* %56 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 4
  br label %61

61:                                               ; preds = %47, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayItLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 2) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw i64 %51, 1
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i16*
  %55 = load i16*, i16** %49, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 %51
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %54, align 2
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #11
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI7SkPointLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.64, %class.SkTArray.64* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.64, %class.SkTArray.64* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.SkPoint*, %struct.SkPoint** %49, align 8
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %54, i64 %51
  %56 = bitcast %struct.SkPoint* %55 to i64*
  %57 = bitcast i8* %53 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 4
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.64* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #11
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL23use_or_generate_metricsPK13SkFontMetricsP15SkScalerContext: argument 0"}
!4 = distinct !{!4, !"_ZL23use_or_generate_metricsPK13SkFontMetricsP15SkScalerContext"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN13SkScalerCache15internalPrepareE6SkSpanIKtENS_10PathDetailEPPK7SkGlyph: argument 0"}
!7 = distinct !{!7, !"_ZN13SkScalerCache15internalPrepareE6SkSpanIKtENS_10PathDetailEPPK7SkGlyph"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN13SkScalerCache15internalPrepareE6SkSpanIKtENS_10PathDetailEPPK7SkGlyph: argument 0"}
!10 = distinct !{!10, !"_ZN13SkScalerCache15internalPrepareE6SkSpanIKtENS_10PathDetailEPPK7SkGlyph"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!13 = distinct !{!13, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!16 = distinct !{!16, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!17 = !{!18, !20, !15}
!18 = distinct !{!18, !19, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!20 = distinct !{!20, !21, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!22 = !{!23, !25, !15}
!23 = distinct !{!23, !24, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!25 = distinct !{!25, !26, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!29 = distinct !{!29, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!32 = distinct !{!32, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!35 = distinct !{!35, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!36 = !{!37, !39, !34}
!37 = distinct !{!37, !38, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!39 = distinct !{!39, !40, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!41 = !{!42, !44, !34}
!42 = distinct !{!42, !43, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!44 = distinct !{!44, !45, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!48 = distinct !{!48, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!51 = distinct !{!51, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!54 = distinct !{!54, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!55 = !{!56, !58, !53}
!56 = distinct !{!56, !57, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!57 = distinct !{!57, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!58 = distinct !{!58, !59, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!60 = !{!61, !63, !53}
!61 = distinct !{!61, !62, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!62 = distinct !{!62, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!63 = distinct !{!63, !64, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!67 = distinct !{!67, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!70 = distinct !{!70, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!73 = distinct !{!73, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!74 = !{!75, !77, !72}
!75 = distinct !{!75, !76, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!76 = distinct !{!76, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!77 = distinct !{!77, !78, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!78 = distinct !{!78, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!79 = !{!80, !82, !72}
!80 = distinct !{!80, !81, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!81 = distinct !{!81, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!82 = distinct !{!82, !83, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!86 = distinct !{!86, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
