; ModuleID = '../../third_party/dawn/src/common/RefCounted.cpp'
source_filename = "../../third_party/dawn/src/common/RefCounted.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }

$_ZN10RefCountedD2Ev = comdat any

$_ZN10RefCountedD0Ev = comdat any

@_ZTV10RefCounted = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCountedD2Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCountedD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*)] }, align 8

@_ZN10RefCountedC1Em = hidden unnamed_addr alias void (%class.RefCounted*, i64), void (%class.RefCounted*, i64)* @_ZN10RefCountedC2Em

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10RefCountedC2Em(%class.RefCounted* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV10RefCounted, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = add i64 %1, 2
  %5 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK10RefCounted21GetRefCountForTestingEv(%class.RefCounted* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 seq_cst, align 8
  %4 = lshr i64 %3, 1
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK10RefCounted18GetRefCountPayloadEv(%class.RefCounted* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = and i64 %3, 1
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10RefCounted9ReferenceEv(%class.RefCounted* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i64* %2, i64 2 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i64* %2, i64 2 release
  %4 = icmp ult i64 %3, 4
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  fence acquire
  %6 = bitcast %class.RefCounted* %0 to void (%class.RefCounted*)***
  %7 = load void (%class.RefCounted*)**, void (%class.RefCounted*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.RefCounted*)*, void (%class.RefCounted*)** %7, i64 2
  %9 = load void (%class.RefCounted*)*, void (%class.RefCounted*)** %8, align 8
  tail call void %9(%class.RefCounted* %0) #4
  br label %10

10:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10RefCounted12APIReferenceEv(%class.RefCounted* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i64* %2, i64 2 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10RefCounted10APIReleaseEv(%class.RefCounted*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.RefCounted, %class.RefCounted* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i64* %2, i64 2 release
  %4 = icmp ult i64 %3, 4
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  fence acquire
  %6 = bitcast %class.RefCounted* %0 to void (%class.RefCounted*)***
  %7 = load void (%class.RefCounted*)**, void (%class.RefCounted*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.RefCounted*)*, void (%class.RefCounted*)** %7, i64 2
  %9 = load void (%class.RefCounted*)*, void (%class.RefCounted*)** %8, align 8
  tail call void %9(%class.RefCounted* %0) #4
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #2 align 2 {
  %2 = icmp eq %class.RefCounted* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.RefCounted* %0 to void (%class.RefCounted*)***
  %5 = load void (%class.RefCounted*)**, void (%class.RefCounted*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.RefCounted*)*, void (%class.RefCounted*)** %5, i64 1
  %7 = load void (%class.RefCounted*)*, void (%class.RefCounted*)** %6, align 8
  tail call void %7(%class.RefCounted* nonnull %0) #4
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10RefCountedD2Ev(%class.RefCounted*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10RefCountedD0Ev(%class.RefCounted*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %class.RefCounted* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
