; ModuleID = 'gen/services/viz/privileged/mojom/compositing/frame_sink_video_capture.mojom-test-utils.cc'
source_filename = "gen/services/viz/privileged/mojom/compositing/frame_sink_video_capture.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter" = type { %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* }
%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks" = type { i32 (...)** }
%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter" = type { %"class.viz::mojom::FrameSinkVideoConsumer"* }
%"class.viz::mojom::FrameSinkVideoConsumer" = type { i32 (...)** }
%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter" = type { %"class.viz::mojom::FrameSinkVideoCapturer"* }
%"class.viz::mojom::FrameSinkVideoCapturer" = type { i32 (...)** }
%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter" = type { %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* }
%"class.viz::mojom::FrameSinkVideoCaptureOverlay" = type { i32 (...)** }
%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting" = type { %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks" }
%"struct.media::VideoCaptureFeedback" = type { double, float, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Size"* }
%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting" = type { %"class.viz::mojom::FrameSinkVideoConsumer" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.media::mojom::VideoFrameInfo"* }
%"class.media::mojom::VideoFrameInfo" = type { %"class.base::TimeDelta", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::Size", %"class.gfx::Rect", i8, %"class.absl::optional.38", %"class.mojo::StructPtr.43" }
%"class.base::TimeDelta" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.3", %"class.absl::optional.8", %"class.absl::optional.13", i8, %"class.absl::optional.18", %"class.absl::optional.23", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.28", i8, i8, i8, i8, i32, %"class.absl::optional.33", i8, %"class.absl::optional.23", %"class.absl::optional.23", %"class.absl::optional.23", %"class.absl::optional.23", %"class.absl::optional.23", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.18", %"class.absl::optional.23", %"class.absl::optional", %"class.absl::optional.18", %"class.absl::optional.3" }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.gfx::Rect" }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { i32 }
%"class.absl::optional.28" = type { %"class.absl::optional_internal::optional_data.29" }
%"class.absl::optional_internal::optional_data.29" = type { %"class.absl::optional_internal::optional_data_base.30" }
%"class.absl::optional_internal::optional_data_base.30" = type { %"class.absl::optional_internal::optional_data_dtor_base.31" }
%"class.absl::optional_internal::optional_data_dtor_base.31" = type { i8, [3 x i8], %union.anon.32 }
%union.anon.32 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.base::TimeDelta" }
%"class.absl::optional.3" = type { %"class.absl::optional_internal::optional_data.4" }
%"class.absl::optional_internal::optional_data.4" = type { %"class.absl::optional_internal::optional_data_base.5" }
%"class.absl::optional_internal::optional_data_base.5" = type { %"class.absl::optional_internal::optional_data_dtor_base.6" }
%"class.absl::optional_internal::optional_data_dtor_base.6" = type { i8, %union.anon.7 }
%union.anon.7 = type { i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.mojo::StructPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.media::mojom::PlaneStrides"* }
%"class.media::mojom::PlaneStrides" = type { %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i32*, i32*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i32* }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.60 }
%union.anon.60 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting" = type { %"class.viz::mojom::FrameSinkVideoCapturer" }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.mojo::PendingRemote.69" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.73, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.75", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.71 }
%class.scoped_refptr.71 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.72", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.72" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.73 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.74" }>
%"class.base::RefCountedThreadSafe.74" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting" = type { %"class.viz::mojom::FrameSinkVideoCaptureOverlay" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.86 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.80, i32, i32 }
%class.sk_sp.80 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.81" }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl.84" }
%"struct.std::__1::__cxx_atomic_impl.84" = type { %"struct.std::__1::__cxx_atomic_base_impl.85" }
%"struct.std::__1::__cxx_atomic_base_impl.85" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.86 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }

$_ZN3viz5mojom36FrameSinkVideoConsumerFrameCallbacksD2Ev = comdat any

$_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTestingD0Ev = comdat any

$_ZN3viz5mojom22FrameSinkVideoConsumerD2Ev = comdat any

$_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTestingD0Ev = comdat any

$_ZN3viz5mojom22FrameSinkVideoCapturerD2Ev = comdat any

$_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTestingD0Ev = comdat any

$_ZN3viz5mojom28FrameSinkVideoCaptureOverlayD2Ev = comdat any

$_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTestingD0Ev = comdat any

@_ZTVN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)* @_ZN3viz5mojom36FrameSinkVideoConsumerFrameCallbacksD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)* @_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)* @_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting4DoneEv to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*, %"struct.media::VideoCaptureFeedback"*)* @_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting15ProvideFeedbackERKN5media20VideoCaptureFeedbackE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3viz5mojom43FrameSinkVideoConsumerInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumer"*)* @_ZN3viz5mojom22FrameSinkVideoConsumerD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)* @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)* @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTesting15OnFrameCapturedEN4base26ReadOnlySharedMemoryRegionEN4mojo9StructPtrIN5media5mojom14VideoFrameInfoEEERKN3gfx4RectENS4_13PendingRemoteINS0_36FrameSinkVideoConsumerFrameCallbacksEEE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)* @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTesting9OnStoppedEv to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*, %"class.std::__1::basic_string"*)* @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTesting5OnLogERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3viz5mojom43FrameSinkVideoCapturerInterceptorForTestingE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturer"*)* @_ZN3viz5mojom22FrameSinkVideoCapturerD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i32, %"class.gfx::ColorSpace"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting9SetFormatEN5media16VideoPixelFormatERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i64)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting19SetMinCapturePeriodEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i64)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting22SetMinSizeChangePeriodEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting24SetResolutionConstraintsERKN3gfx4SizeES5_b to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i1)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting24SetAutoThrottlingEnabledEb to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting12ChangeTargetERKN4absl8optionalINS_11FrameSinkIdEEERKNS_16SubtreeCaptureIdE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, %"class.mojo::PendingRemote.69"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting5StartEN4mojo13PendingRemoteINS0_22FrameSinkVideoConsumerEEE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting4StopEv to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting19RequestRefreshFrameEv to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i32, %"class.mojo::PendingReceiver"*)* @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting13CreateOverlayEiN4mojo15PendingReceiverINS0_28FrameSinkVideoCaptureOverlayEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*)* @_ZN3viz5mojom28FrameSinkVideoCaptureOverlayD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)* @_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*, %class.SkBitmap*, %"class.gfx::RectF"*)* @_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTesting17SetImageAndBoundsERK8SkBitmapRKN3gfx5RectFE to i8*), i8* bitcast (void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*, %"class.gfx::RectF"*)* @_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTesting9SetBoundsERKN3gfx5RectFE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz5mojom47FrameSinkVideoConsumerFrameCallbacksAsyncWaiterC1EPNS0_36FrameSinkVideoConsumerFrameCallbacksE = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*), void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)* @_ZN3viz5mojom47FrameSinkVideoConsumerFrameCallbacksAsyncWaiterC2EPNS0_36FrameSinkVideoConsumerFrameCallbacksE
@_ZN3viz5mojom47FrameSinkVideoConsumerFrameCallbacksAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"*), void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"*)* @_ZN3viz5mojom47FrameSinkVideoConsumerFrameCallbacksAsyncWaiterD2Ev
@_ZN3viz5mojom33FrameSinkVideoConsumerAsyncWaiterC1EPNS0_22FrameSinkVideoConsumerE = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoConsumer"*), void (%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoConsumer"*)* @_ZN3viz5mojom33FrameSinkVideoConsumerAsyncWaiterC2EPNS0_22FrameSinkVideoConsumerE
@_ZN3viz5mojom33FrameSinkVideoConsumerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"*), void (%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"*)* @_ZN3viz5mojom33FrameSinkVideoConsumerAsyncWaiterD2Ev
@_ZN3viz5mojom33FrameSinkVideoCapturerAsyncWaiterC1EPNS0_22FrameSinkVideoCapturerE = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoCapturer"*), void (%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoCapturer"*)* @_ZN3viz5mojom33FrameSinkVideoCapturerAsyncWaiterC2EPNS0_22FrameSinkVideoCapturerE
@_ZN3viz5mojom33FrameSinkVideoCapturerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"*), void (%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"*)* @_ZN3viz5mojom33FrameSinkVideoCapturerAsyncWaiterD2Ev
@_ZN3viz5mojom39FrameSinkVideoCaptureOverlayAsyncWaiterC1EPNS0_28FrameSinkVideoCaptureOverlayE = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"*), void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"*, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"*)* @_ZN3viz5mojom39FrameSinkVideoCaptureOverlayAsyncWaiterC2EPNS0_28FrameSinkVideoCaptureOverlayE
@_ZN3viz5mojom39FrameSinkVideoCaptureOverlayAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"*), void (%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"*)* @_ZN3viz5mojom39FrameSinkVideoCaptureOverlayAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting4DoneEv(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)** %3, i64 4
  %5 = load %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %5(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %6 to void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)***
  %8 = load void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)**, void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)** %8, i64 2
  %10 = load void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting15ProvideFeedbackERKN5media20VideoCaptureFeedbackE(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*, %"struct.media::VideoCaptureFeedback"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)** %4, i64 4
  %6 = load %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %6(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %7 to void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)***
  %9 = load void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)**, void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)** %9, i64 3
  %11 = load void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*, %"struct.media::VideoCaptureFeedback"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %7, %"struct.media::VideoCaptureFeedback"* dereferenceable(48) %1) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom47FrameSinkVideoConsumerFrameCallbacksAsyncWaiterC2EPNS0_36FrameSinkVideoConsumerFrameCallbacksE(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"* nocapture, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter", %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"* %1, %"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom47FrameSinkVideoConsumerFrameCallbacksAsyncWaiterD2Ev(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTesting15OnFrameCapturedEN4base26ReadOnlySharedMemoryRegionEN4mojo9StructPtrIN5media5mojom14VideoFrameInfoEEERKN3gfx4RectENS4_13PendingRemoteINS0_36FrameSinkVideoConsumerFrameCallbacksEEE(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"* nocapture, %"class.gfx::Rect"* dereferenceable(16), %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::PendingRemote", align 4
  %9 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)***
  %10 = load %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)** %10, i64 5
  %12 = load %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.viz::mojom::FrameSinkVideoConsumer"* %12(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"* %0) #8
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %6, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64) %1) #8
  %14 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %8, i64 0, i32 0
  %19 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %18, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %19) #8
  %20 = bitcast %"class.viz::mojom::FrameSinkVideoConsumer"* %13 to void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)***
  %21 = load void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)**, void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)** %21, i64 2
  %23 = load void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.mojo::StructPtr"*, %"class.gfx::Rect"*, %"class.mojo::PendingRemote"*)** %22, align 8
  call void %23(%"class.viz::mojom::FrameSinkVideoConsumer"* %13, %"class.base::ReadOnlySharedMemoryRegion"* nonnull %6, %"class.mojo::StructPtr"* nonnull %7, %"class.gfx::Rect"* dereferenceable(16) %3, %"class.mojo::PendingRemote"* nonnull %8) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %18) #8
  %24 = load %"class.media::mojom::VideoFrameInfo"*, %"class.media::mojom::VideoFrameInfo"** %15, align 8
  store %"class.media::mojom::VideoFrameInfo"* null, %"class.media::mojom::VideoFrameInfo"** %15, align 8
  %25 = icmp eq %"class.media::mojom::VideoFrameInfo"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %5
  call void @_ZN5media5mojom14VideoFrameInfoD1Ev(%"class.media::mojom::VideoFrameInfo"* nonnull %24) #8
  %27 = bitcast %"class.media::mojom::VideoFrameInfo"* %24 to i8*
  call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %5, %26
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %6) #8
  ret void
}

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTesting9OnStoppedEv(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::FrameSinkVideoConsumer"* %5(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.viz::mojom::FrameSinkVideoConsumer"* %6 to void (%"class.viz::mojom::FrameSinkVideoConsumer"*)***
  %8 = load void (%"class.viz::mojom::FrameSinkVideoConsumer"*)**, void (%"class.viz::mojom::FrameSinkVideoConsumer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoConsumer"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumer"*)** %8, i64 3
  %10 = load void (%"class.viz::mojom::FrameSinkVideoConsumer"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumer"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::FrameSinkVideoConsumer"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTesting5OnLogERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoConsumer"* (%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::FrameSinkVideoConsumer"* %6(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.viz::mojom::FrameSinkVideoConsumer"* %7 to void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)***
  %9 = load void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)**, void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)** %9, i64 4
  %11 = load void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)*, void (%"class.viz::mojom::FrameSinkVideoConsumer"*, %"class.std::__1::basic_string"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::FrameSinkVideoConsumer"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom33FrameSinkVideoConsumerAsyncWaiterC2EPNS0_22FrameSinkVideoConsumerE(%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"* nocapture, %"class.viz::mojom::FrameSinkVideoConsumer"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter", %"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::FrameSinkVideoConsumer"* %1, %"class.viz::mojom::FrameSinkVideoConsumer"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom33FrameSinkVideoConsumerAsyncWaiterD2Ev(%"class.viz::mojom::FrameSinkVideoConsumerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting9SetFormatEN5media16VideoPixelFormatERKN3gfx10ColorSpaceE(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i32, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %5, i64 12
  %7 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %7(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %8 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)***
  %10 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)** %10, i64 2
  %12 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.gfx::ColorSpace"*)** %11, align 8
  tail call void %12(%"class.viz::mojom::FrameSinkVideoCapturer"* %8, i32 %1, %"class.gfx::ColorSpace"* dereferenceable(68) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting19SetMinCapturePeriodEN4base9TimeDeltaE(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %4, i64 12
  %6 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %6(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %7 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)***
  %9 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)** %9, i64 3
  %11 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)** %10, align 8
  tail call void %11(%"class.viz::mojom::FrameSinkVideoCapturer"* %7, i64 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting22SetMinSizeChangePeriodEN4base9TimeDeltaE(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %4, i64 12
  %6 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %6(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %7 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)***
  %9 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)** %9, i64 4
  %11 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i64)** %10, align 8
  tail call void %11(%"class.viz::mojom::FrameSinkVideoCapturer"* %7, i64 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting24SetResolutionConstraintsERKN3gfx4SizeES5_b(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %6 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %6, i64 12
  %8 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %8(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %10 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %9 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)***
  %11 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)** %11, i64 5
  %13 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)** %12, align 8
  tail call void %13(%"class.viz::mojom::FrameSinkVideoCapturer"* %9, %"class.gfx::Size"* dereferenceable(8) %1, %"class.gfx::Size"* dereferenceable(8) %2, i1 zeroext %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting24SetAutoThrottlingEnabledEb(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %4, i64 12
  %6 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %6(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %7 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)***
  %9 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)** %9, i64 6
  %11 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i1)** %10, align 8
  tail call void %11(%"class.viz::mojom::FrameSinkVideoCapturer"* %7, i1 zeroext %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting12ChangeTargetERKN4absl8optionalINS_11FrameSinkIdEEERKNS_16SubtreeCaptureIdE(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, %"class.absl::optional.64"* dereferenceable(12), %"class.viz::SubtreeCaptureId"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %5, i64 12
  %7 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %7(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %8 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)***
  %10 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)** %10, i64 7
  %12 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.absl::optional.64"*, %"class.viz::SubtreeCaptureId"*)** %11, align 8
  tail call void %12(%"class.viz::mojom::FrameSinkVideoCapturer"* %8, %"class.absl::optional.64"* dereferenceable(12) %1, %"class.viz::SubtreeCaptureId"* dereferenceable(4) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting5StartEN4mojo13PendingRemoteINS0_22FrameSinkVideoConsumerEEE(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, %"class.mojo::PendingRemote.69"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.69", align 4
  %4 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %5, i64 12
  %7 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %7(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %9 = getelementptr inbounds %"class.mojo::PendingRemote.69", %"class.mojo::PendingRemote.69"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.69", %"class.mojo::PendingRemote.69"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #8
  %11 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %8 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)***
  %12 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)** %12, i64 8
  %14 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, %"class.mojo::PendingRemote.69"*)** %13, align 8
  call void %14(%"class.viz::mojom::FrameSinkVideoCapturer"* %8, %"class.mojo::PendingRemote.69"* nonnull %3) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting4StopEv(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %3, i64 12
  %5 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %5(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %6 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*)***
  %8 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*)** %8, i64 9
  %10 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::FrameSinkVideoCapturer"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting19RequestRefreshFrameEv(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %3, i64 12
  %5 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %5(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %6 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*)***
  %8 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*)** %8, i64 10
  %10 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::FrameSinkVideoCapturer"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTesting13CreateOverlayEiN4mojo15PendingReceiverINS0_28FrameSinkVideoCaptureOverlayEEE(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*, i32, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = bitcast %"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)***
  %6 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %6, i64 12
  %8 = load %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCapturer"* (%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.viz::mojom::FrameSinkVideoCapturer"* %8(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"* %0) #8
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %10, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %11) #8
  %12 = bitcast %"class.viz::mojom::FrameSinkVideoCapturer"* %9 to void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)***
  %13 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)**, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)** %13, i64 11
  %15 = load void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)*, void (%"class.viz::mojom::FrameSinkVideoCapturer"*, i32, %"class.mojo::PendingReceiver"*)** %14, align 8
  call void %15(%"class.viz::mojom::FrameSinkVideoCapturer"* %9, i32 %1, %"class.mojo::PendingReceiver"* nonnull %4) #8
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %10) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom33FrameSinkVideoCapturerAsyncWaiterC2EPNS0_22FrameSinkVideoCapturerE(%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"* nocapture, %"class.viz::mojom::FrameSinkVideoCapturer"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter", %"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::FrameSinkVideoCapturer"* %1, %"class.viz::mojom::FrameSinkVideoCapturer"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom33FrameSinkVideoCapturerAsyncWaiterD2Ev(%"class.viz::mojom::FrameSinkVideoCapturerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTesting17SetImageAndBoundsERK8SkBitmapRKN3gfx5RectFE(%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*, %class.SkBitmap* dereferenceable(56), %"class.gfx::RectF"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %7(%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %8 to void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)***
  %10 = load void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)**, void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)*, void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)** %10, i64 2
  %12 = load void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)*, void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %class.SkBitmap*, %"class.gfx::RectF"*)** %11, align 8
  tail call void %12(%"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %8, %class.SkBitmap* dereferenceable(56) %1, %"class.gfx::RectF"* dereferenceable(16) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTesting9SetBoundsERKN3gfx5RectFE(%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*, %"class.gfx::RectF"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"* %0 to %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)**, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)** %4, i64 4
  %6 = load %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)*, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* (%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %6(%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %7 to void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)***
  %9 = load void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)**, void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)*, void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)** %9, i64 3
  %11 = load void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)*, void (%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*, %"class.gfx::RectF"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %7, %"class.gfx::RectF"* dereferenceable(16) %1) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom39FrameSinkVideoCaptureOverlayAsyncWaiterC2EPNS0_28FrameSinkVideoCaptureOverlayE(%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"* nocapture, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter", %"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::FrameSinkVideoCaptureOverlay"* %1, %"class.viz::mojom::FrameSinkVideoCaptureOverlay"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom39FrameSinkVideoCaptureOverlayAsyncWaiterD2Ev(%"class.viz::mojom::FrameSinkVideoCaptureOverlayAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom36FrameSinkVideoConsumerFrameCallbacksD2Ev(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacks"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom57FrameSinkVideoConsumerFrameCallbacksInterceptorForTestingD0Ev(%"class.viz::mojom::FrameSinkVideoConsumerFrameCallbacksInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom22FrameSinkVideoConsumerD2Ev(%"class.viz::mojom::FrameSinkVideoConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom43FrameSinkVideoConsumerInterceptorForTestingD0Ev(%"class.viz::mojom::FrameSinkVideoConsumerInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom22FrameSinkVideoCapturerD2Ev(%"class.viz::mojom::FrameSinkVideoCapturer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom43FrameSinkVideoCapturerInterceptorForTestingD0Ev(%"class.viz::mojom::FrameSinkVideoCapturerInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom28FrameSinkVideoCaptureOverlayD2Ev(%"class.viz::mojom::FrameSinkVideoCaptureOverlay"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom49FrameSinkVideoCaptureOverlayInterceptorForTestingD0Ev(%"class.viz::mojom::FrameSinkVideoCaptureOverlayInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5media5mojom14VideoFrameInfoD1Ev(%"class.media::mojom::VideoFrameInfo"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
