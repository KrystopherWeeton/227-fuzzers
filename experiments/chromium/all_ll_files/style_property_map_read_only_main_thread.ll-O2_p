; ModuleID = '../../third_party/blink/renderer/core/css/cssom/style_property_map_read_only_main_thread.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/style_property_map_read_only_main_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.74" }
%"class.blink::HeapHashMap.74" = type { %"class.WTF::HashMap.77" }
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.80"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.80" = type { %"class.blink::WeakMember.81", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.83", i32, [4 x i8], %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.260", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.199", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i64 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist.130"* }
%"class.blink::Worklist.130" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::Worklist.137"* }
%"class.blink::Worklist.137" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.179", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.193", [4 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { i64 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { float }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.202", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.130"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.137"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.158"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.268" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.303" }
%"struct.std::__1::atomic.303" = type { %"struct.std::__1::__atomic_base.304" }
%"struct.std::__1::__atomic_base.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__cxx_atomic_impl.306" }
%"struct.std::__1::__cxx_atomic_impl.306" = type { %"struct.std::__1::__cxx_atomic_base_impl.307" }
%"struct.std::__1::__cxx_atomic_base_impl.307" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.26", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.32", %"class.blink::Member.34", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.43", %"class.blink::Member.49", %"class.blink::Member.51", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.7" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.5" }
%"class.WTF::HashTable.5" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.7" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.8" }
%"class.blink::HeapHashMap.8" = type { %"class.WTF::HashMap.11" }
%"class.WTF::HashMap.11" = type { %"class.WTF::HashTable.12" }
%"class.WTF::HashTable.12" = type <{ %"struct.WTF::KeyValuePair.14"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.14" = type { i8*, %"class.blink::Member.284" }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.286" }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.15, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.23", i32, i32 }
%class.scoped_refptr.15 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.23" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.30"*, i32, i32 }
%"class.blink::Member.30" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.36", i32, i32 }
%"class.blink::HeapHashMap.36" = type { %"class.WTF::HashMap.39" }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.42"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.42" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.53" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.53" = type { %"class.v8::TracedReference.54" }
%"class.v8::TracedReference.54" = type { %"class.v8::BasicTracedReference.55" }
%"class.v8::BasicTracedReference.55" = type { %"class.v8::TracedReferenceBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::CSSPropertyName" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.blink::HeapVector.58" = type { %"class.WTF::Vector.61" }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63" }
%"class.WTF::VectorBufferBase.63" = type { %"class.blink::Member.64"*, i32, i32 }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::CSSStyleValue"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.288" = type { %"class.WTF::StringTypeAdapter.289" }
%"class.WTF::StringTypeAdapter.289" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSUnsupportedStyleValue" = type { %"class.blink::CSSStyleValue", %"class.absl::optional" }
%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource" = type { i32 (...)** }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.71, %"class.blink::Member.264", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.71 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.266" }
%"class.blink::Persistent.266" = type { %"class.blink::PersistentBase.267" }
%"class.blink::PersistentBase.267" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::HeapVector.273" = type { %"class.WTF::Vector.276" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"struct.std::__1::pair.279"*, i32, i32 }
%"struct.std::__1::pair.279" = type { %"class.WTF::String", %"class.blink::HeapVector.58" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)* }
%"class.blink::HeapVectorBacking.339" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.292 }
%union.anon.292 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource" = type { %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource", i32, %"class.blink::HeapVector.273" }

$_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink34StylePropertyMapReadOnlyMainThreadD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJNS_12AtomicStringES9_EEEPSA_PvDpOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS3_12VectorTraitsISA_EEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS5_12VectorTraitsISC_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJRKSA_EEEPSA_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceD2Ev = comdat any

$_ZNK3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEEaSERKS6_ = comdat any

$_ZN5blink24CSSUnsupportedStyleValueC2ERKNS_15CSSPropertyNameERKN3WTF6StringE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink24CSSUnsupportedStyleValueD2Ev = comdat any

$_ZN5blink24CSSUnsupportedStyleValueD0Ev = comdat any

$_ZNK5blink13CSSStyleValue18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink24CSSUnsupportedStyleValue7GetTypeEv = comdat any

$_ZNK5blink24CSSUnsupportedStyleValue10ToCSSValueEv = comdat any

$_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE = comdat any

$_ZNK5blink24CSSUnsupportedStyleValue8toStringEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink24CSSUnsupportedStyleValueE = comdat any

@.str = private unnamed_addr constant [23 x i8] c"Invalid propertyName: \00", align 1
@_ZTVN5blink34StylePropertyMapReadOnlyMainThreadE = hidden unnamed_addr constant { [20 x i8*], [3 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::StylePropertyMapReadOnlyMainThread"*)* @_ZN5blink34StylePropertyMapReadOnlyMainThreadD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::StylePropertyMapReadOnly"*)* @_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::CSSStyleValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)] }, align 8
@_ZN5blink24StylePropertyMapReadOnly18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.2 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleValueEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleValue>, WTF::VectorTraits<blink::Member<blink::CSSStyleValue> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS5_12VectorTraitsISC_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS_6StringENS1_10HeapVectorINS1_6MemberINS1_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISB_EEEEEEPKcv = private unnamed_addr constant [271 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >, WTF::VectorTraits<std::__1::pair<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> > > >]\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS4_11ScriptStateERNS4_14ExceptionStateEE3$_0FvRKNS4_15CSSPropertyNameERKNS4_8CSSValueEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8IterableINS_6StringENS1_10HeapVectorINS1_6MemberINS1_13CSSStyleValueEEELj0EEEE15IterationSourceEEEPKcv = private unnamed_addr constant [153 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_131StylePropertyMapIterationSourceE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*)* @_ZN5blink8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"*)* @_ZN5blink12_GLOBAL__N_131StylePropertyMapIterationSourceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::HeapVector.58"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_131StylePropertyMapIterationSource4NextEPNS_11ScriptStateERN3WTF6StringERNS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_131StylePropertyMapIterationSource5TraceEPNS_7VisitorE to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink24CSSUnsupportedStyleValueE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSUnsupportedStyleValue"*)* @_ZN5blink24CSSUnsupportedStyleValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSUnsupportedStyleValue"*)* @_ZN5blink24CSSUnsupportedStyleValueD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSStyleValue"*)* @_ZNK5blink13CSSStyleValue18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::CSSUnsupportedStyleValue"*)* @_ZNK5blink24CSSUnsupportedStyleValue7GetTypeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSUnsupportedStyleValue"*)* @_ZNK5blink24CSSUnsupportedStyleValue10ToCSSValueEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSUnsupportedStyleValue"*)* @_ZNK5blink24CSSUnsupportedStyleValue8toStringEv to i8*)] }, comdat, align 8
@_ZTVN5blink13CSSStyleValueE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZN5blink13CSSStyleValue18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.blink::HeapVector.58", align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional"* nonnull sret %5, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2)
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %102

12:                                               ; preds = %4
  %13 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %61, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %35

25:                                               ; preds = %18
  %26 = zext i32 %24 to i33
  %27 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #9
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %25
  call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %25
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %23, align 4
  br label %35

35:                                               ; preds = %33, %18
  %36 = phi i32 [ %34, %33 ], [ %24, %18 ]
  %37 = load atomic i32, i32* %19 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %50

40:                                               ; preds = %35
  %41 = zext i32 %36 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #9
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %40
  call void @llvm.trap() #9
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %23, align 4
  br label %50

50:                                               ; preds = %48, %35
  %51 = phi i32 [ %49, %48 ], [ %36, %35 ]
  %52 = load atomic i32, i32* %19 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = add i32 %51, -1
  store i32 %56, i32* %23, align 4
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i32 [ %56, %55 ], [ %51, %50 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #9
  br label %61

61:                                               ; preds = %12, %57, %60
  %62 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %63, align 8
  %64 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  %66 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %67 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %67, i64 3
  %69 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %68, align 8
  call void %69(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #9
  br label %85

85:                                               ; preds = %61, %81, %84
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #9
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %173

102:                                              ; preds = %4
  %103 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %105) #9
  %107 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %106, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 16
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %102
  %112 = call %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread20GetShorthandPropertyERKNS_11CSSPropertyE(%"class.blink::StylePropertyMapReadOnlyMainThread"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %106)
  br label %173

113:                                              ; preds = %102
  %114 = load i8, i8* %9, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %117, !prof !3

116:                                              ; preds = %113
  call void @llvm.trap() #9
  unreachable

117:                                              ; preds = %113
  %118 = load i32, i32* %104, align 8
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %127

120:                                              ; preds = %117
  %121 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %103) #9
  %122 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %0 to %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)***
  %123 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)**, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)*** %122, align 8
  %124 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)** %123, i64 14
  %125 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)** %124, align 8
  %126 = call %"class.blink::CSSValue"* %125(%"class.blink::StylePropertyMapReadOnlyMainThread"* %0, %"class.WTF::StringImpl"* %121) #9
  br label %133

127:                                              ; preds = %117
  %128 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %0 to %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)***
  %129 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*** %128, align 8
  %130 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)** %129, i64 13
  %131 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)** %130, align 8
  %132 = call %"class.blink::CSSValue"* %131(%"class.blink::StylePropertyMapReadOnlyMainThread"* %0, i32 %118) #9
  br label %133

133:                                              ; preds = %127, %120
  %134 = phi %"class.blink::CSSValue"* [ %126, %120 ], [ %132, %127 ]
  %135 = icmp eq %"class.blink::CSSValue"* %134, null
  br i1 %135, label %173, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %106, i64 0, i32 3
  %138 = load i8, i8* %137, align 8
  %139 = icmp eq i8 %138, 0
  %140 = load i8, i8* %9, align 8, !range !2
  br i1 %139, label %141, label %154

141:                                              ; preds = %136
  %142 = icmp eq i8 %140, 0
  br i1 %142, label %143, label %144, !prof !3

143:                                              ; preds = %141
  call void @llvm.trap() #9
  unreachable

144:                                              ; preds = %141
  %145 = load i32, i32* %104, align 8
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %171

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %134, i64 0, i32 2
  %149 = load i8, i8* %148, align 1
  %150 = icmp ugt i8 %149, 51
  br i1 %150, label %151, label %171

151:                                              ; preds = %147
  %152 = bitcast %"class.blink::HeapVector.58"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #9
  %153 = bitcast %"class.blink::HeapVector.58"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 16, i1 false)
  br label %159

154:                                              ; preds = %136
  %155 = bitcast %"class.blink::HeapVector.58"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #9
  %156 = icmp eq i8 %140, 0
  %157 = bitcast %"class.blink::HeapVector.58"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 16, i1 false)
  br i1 %156, label %158, label %159, !prof !3

158:                                              ; preds = %154
  call void @llvm.trap() #9
  unreachable

159:                                              ; preds = %151, %154
  %160 = phi i8* [ %152, %151 ], [ %155, %154 ]
  %161 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @_ZN5blink17StyleValueFactory26CssValueToStyleValueVectorERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::HeapVector.58"* nonnull sret %8, %"class.blink::CSSPropertyName"* dereferenceable(16) %103, %"class.blink::CSSValue"* nonnull dereferenceable(3) %134) #9
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %8, i64 0, i32 0
  %166 = call dereferenceable(8) %"class.blink::Member.64"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.61"* nonnull %165, i32 0) #9
  %167 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %167, align 8
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi %"class.blink::CSSStyleValue"* [ %168, %164 ], [ null, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #9
  br label %173

171:                                              ; preds = %144, %147
  %172 = call %"class.blink::CSSStyleValue"* @_ZN5blink17StyleValueFactory20CssValueToStyleValueERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::CSSPropertyName"* dereferenceable(16) %103, %"class.blink::CSSValue"* nonnull dereferenceable(3) %134) #9
  br label %173

173:                                              ; preds = %111, %133, %171, %169, %101
  %174 = phi %"class.blink::CSSStyleValue"* [ null, %101 ], [ %112, %111 ], [ %170, %169 ], [ %172, %171 ], [ null, %133 ]
  %175 = load i8, i8* %9, align 8, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %195, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %193, %190, %177
  store i8 0, i8* %9, align 8
  br label %195

195:                                              ; preds = %173, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret %"class.blink::CSSStyleValue"* %174
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional"* noalias sret, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #9
  switch i32 %4, label %86 [
    i32 0, label %5
    i32 1, label %7
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  br label %91

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = load atomic i32, i32* %12 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %16, %30
  %33 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  br label %38

34:                                               ; preds = %11
  %35 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %9) #9
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %32, %34
  %39 = phi i64 [ %33, %32 ], [ %36, %34 ]
  %40 = phi %"class.WTF::StringImpl"* [ %9, %32 ], [ %35, %34 ]
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #9
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  tail call void @llvm.trap() #9
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %57, align 8, !alias.scope !4
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %58, align 8, !alias.scope !4
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  store i64 %39, i64* %60, align 8, !alias.scope !4
  br label %74

61:                                               ; preds = %34, %7
  %62 = phi i64 [ %36, %34 ], [ 0, %7 ]
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %63, align 8, !alias.scope !4
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %64, align 8, !alias.scope !4
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %66 = bitcast %"class.WTF::AtomicString"* %65 to i64*
  store i64 %62, i64* %66, align 8, !alias.scope !4
  br label %91

67:                                               ; preds = %38
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %68, align 8, !alias.scope !4
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %69, align 8, !alias.scope !4
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  store i64 %39, i64* %71, align 8, !alias.scope !4
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %55, %67
  %75 = phi i32 [ %56, %55 ], [ %73, %67 ]
  %76 = load atomic i32, i32* %41 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %81 = add i32 %75, -1
  store i32 %81, i32* %80, align 4
  br label %82

82:                                               ; preds = %79, %74
  %83 = phi i32 [ %81, %79 ], [ %75, %74 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #9
  br label %91

86:                                               ; preds = %3
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8, !alias.scope !7
  %88 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %4, i32* %88, align 8, !alias.scope !7
  %89 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %90 = bitcast %"class.WTF::AtomicString"* %89 to i64*
  store i64 0, i64* %90, align 8, !alias.scope !7
  br label %91

91:                                               ; preds = %85, %82, %61, %86, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.288", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.288", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #9
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #9
  %29 = bitcast %"class.WTF::StringTypeAdapter.288"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.288", %"class.WTF::StringTypeAdapter.288"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.288", %"class.WTF::StringTypeAdapter.288"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #9
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.288"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #9
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.288", %"class.WTF::StringTypeAdapter.288"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.289"* nonnull %47, i8* %50) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #9
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #9
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #9
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #9
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #9
  %90 = bitcast %"class.WTF::StringTypeAdapter.288"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.288", %"class.WTF::StringTypeAdapter.288"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.288", %"class.WTF::StringTypeAdapter.288"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #9
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.288"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #9
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.288", %"class.WTF::StringTypeAdapter.288"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.289"* nonnull %108, i16* %111) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #9
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #9
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #9
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #9
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread20GetShorthandPropertyERKNS_11CSSPropertyE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %0 to %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)***
  %8 = load %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)**, %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)*, %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)** %8, i64 16
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)*, %"class.WTF::StringImpl"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::CSSProperty"*)** %9, align 8
  %11 = tail call %"class.WTF::StringImpl"* %10(%"class.blink::StylePropertyMapReadOnlyMainThread"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1) #9
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %6, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %63, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #9
  %24 = bitcast i8* %23 to %"class.blink::CSSUnsupportedStyleValue"*
  call void @_ZN5blink24CSSUnsupportedStyleValueC2ERKNS_15CSSPropertyNameERKN3WTF6StringE(%"class.blink::CSSUnsupportedStyleValue"* %24, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = bitcast i8* %23 to %"class.blink::CSSStyleValue"*
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %44, %41, %17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %63, label %48

48:                                               ; preds = %13, %45
  %49 = phi %"class.blink::CSSStyleValue"* [ %29, %45 ], [ null, %13 ]
  %50 = phi %"class.WTF::StringImpl"* [ %46, %45 ], [ %11, %13 ]
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %48
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %48
  %60 = phi i32 [ %58, %57 ], [ %56, %48 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #9
  br label %63

63:                                               ; preds = %2, %45, %59, %62
  %64 = phi %"class.blink::CSSStyleValue"* [ %29, %45 ], [ %49, %59 ], [ %49, %62 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret %"class.blink::CSSStyleValue"* %64
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #2

declare void @_ZN5blink17StyleValueFactory26CssValueToStyleValueVectorERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::HeapVector.58"* sret, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare %"class.blink::CSSStyleValue"* @_ZN5blink17StyleValueFactory20CssValueToStyleValueERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HeapVector.58"* noalias sret, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.blink::CSSStyleValue"*, align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional"* nonnull sret %6, %"class.blink::ExecutionContext"* %2, %"class.WTF::String"* dereferenceable(8) %3)
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %104

13:                                               ; preds = %5
  %14 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %62, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #9
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %26
  call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %34, %19
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %36
  %42 = zext i32 %37 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #9
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %41
  call void @llvm.trap() #9
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %24, align 4
  br label %51

51:                                               ; preds = %49, %36
  %52 = phi i32 [ %50, %49 ], [ %37, %36 ]
  %53 = load atomic i32, i32* %20 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = add i32 %52, -1
  store i32 %57, i32* %24, align 4
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i32 [ %57, %56 ], [ %52, %51 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %62

62:                                               ; preds = %13, %58, %61
  %63 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %64, align 8
  %65 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  %67 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %68 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %68, i64 3
  %70 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %69, align 8
  call void %70(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #9
  br label %86

86:                                               ; preds = %62, %82, %85
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %102

102:                                              ; preds = %86, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %103 = bitcast %"class.blink::HeapVector.58"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false)
  br label %172

104:                                              ; preds = %5
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %107) #9
  %109 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %108, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 16
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %142, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %116 = bitcast %"class.blink::HeapVector.58"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #9
  %117 = bitcast %"class.blink::CSSStyleValue"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9
  %118 = call %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread20GetShorthandPropertyERKNS_11CSSPropertyE(%"class.blink::StylePropertyMapReadOnlyMainThread"* %1, %"class.blink::CSSProperty"* dereferenceable(24) %108)
  store %"class.blink::CSSStyleValue"* %118, %"class.blink::CSSStyleValue"** %9, align 8
  %119 = icmp eq %"class.blink::CSSStyleValue"* %118, null
  %120 = ptrtoint %"class.blink::CSSStyleValue"* %118 to i64
  br i1 %119, label %141, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i32, i32* %115, align 4
  %124 = load i32, i32* %122, align 8
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %139, label %126, !prof !3

126:                                              ; preds = %121
  %127 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %114, align 8
  %128 = zext i32 %123 to i64
  %129 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %127, i64 %128
  %130 = bitcast %"class.blink::Member.64"* %129 to i64*
  store atomic i64 %120, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %126
  %134 = bitcast %"class.blink::CSSStyleValue"* %118 to i8*
  %135 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %134) #9
  br label %136

136:                                              ; preds = %133, %126
  %137 = load i32, i32* %115, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %115, align 4
  br label %141

139:                                              ; preds = %121
  %140 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.61"* %140, %"class.blink::CSSStyleValue"** nonnull dereferenceable(8) %9) #9
  br label %141

141:                                              ; preds = %139, %136, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9
  br label %172

142:                                              ; preds = %104
  %143 = load i8, i8* %10, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %146, !prof !3

145:                                              ; preds = %142
  call void @llvm.trap() #9
  unreachable

146:                                              ; preds = %142
  %147 = load i32, i32* %106, align 8
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %156

149:                                              ; preds = %146
  %150 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %105) #9
  %151 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %1 to %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)***
  %152 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)**, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)*** %151, align 8
  %153 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)** %152, i64 14
  %154 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.WTF::StringImpl"*)** %153, align 8
  %155 = call %"class.blink::CSSValue"* %154(%"class.blink::StylePropertyMapReadOnlyMainThread"* %1, %"class.WTF::StringImpl"* %150) #9
  br label %162

156:                                              ; preds = %146
  %157 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %1 to %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)***
  %158 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*** %157, align 8
  %159 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)** %158, i64 13
  %160 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)** %159, align 8
  %161 = call %"class.blink::CSSValue"* %160(%"class.blink::StylePropertyMapReadOnlyMainThread"* %1, i32 %147) #9
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi %"class.blink::CSSValue"* [ %155, %149 ], [ %161, %156 ]
  %164 = icmp eq %"class.blink::CSSValue"* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = bitcast %"class.blink::HeapVector.58"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false)
  br label %172

167:                                              ; preds = %162
  %168 = load i8, i8* %10, align 8, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %171, !prof !3

170:                                              ; preds = %167
  call void @llvm.trap() #9
  unreachable

171:                                              ; preds = %167
  call void @_ZN5blink17StyleValueFactory26CssValueToStyleValueVectorERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::HeapVector.58"* sret %0, %"class.blink::CSSPropertyName"* dereferenceable(16) %105, %"class.blink::CSSValue"* nonnull dereferenceable(3) %163) #9
  br label %172

172:                                              ; preds = %141, %171, %165, %102
  %173 = load i8, i8* %10, align 8, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %193, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #9
  br label %192

192:                                              ; preds = %191, %188, %175
  store i8 0, i8* %10, align 8
  br label %193

193:                                              ; preds = %172, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.58", align 8
  %6 = bitcast %"class.blink::HeapVector.58"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %0 to void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %8 = load void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %8, i64 10
  %10 = load void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::HeapVector.58"*, %"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %9, align 8
  call void %10(%"class.blink::HeapVector.58"* nonnull sret %5, %"class.blink::StylePropertyMapReadOnlyMainThread"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %11 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapVector.273", align 8
  %5 = alloca %"class.std::__1::function", align 8
  %6 = bitcast %"class.blink::HeapVector.273"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #9
  %10 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  %11 = ptrtoint %"class.blink::HeapVector.273"* %4 to i64
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)* @"_ZNSt3__110__function16__policy_invokerIFvRKN5blink15CSSPropertyNameERKNS2_8CSSValueEEE11__call_implINS0_20__default_alloc_funcIZNS2_34StylePropertyMapReadOnlyMainThread14StartIterationEPNS2_11ScriptStateERNS2_14ExceptionStateEE3$_0S9_EEEEvPKNS0_16__policy_storageES5_S8_", void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)** %12, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS4_11ScriptStateERNS4_14ExceptionStateEE3$_0FvRKNS4_15CSSPropertyNameERKNS4_8CSSValueEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %13, align 8
  %14 = bitcast %"class.std::__1::function"* %5 to i64*
  store i64 %11, i64* %14, align 8
  %15 = bitcast %"class.blink::StylePropertyMapReadOnlyMainThread"* %0 to void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)***
  %16 = load void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)**, void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)*, void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)** %16, i64 15
  %18 = load void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)*, void (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.std::__1::function"*)** %17, align 8
  call void %18(%"class.blink::StylePropertyMapReadOnlyMainThread"* %0, %"class.std::__1::function"* nonnull dereferenceable(32) %5) #9
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 1
  %21 = load void (i8*)*, void (i8*)** %20, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void %21(i8* %25) #9
  br label %26

26:                                               ; preds = %3, %23
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  %27 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEEEPhm(i64 32) #9
  %28 = load i32, i32* %8, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = zext i32 %28 to i64
  %32 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEEEmm(i64 %31) #9
  %33 = udiv i64 %32, 24
  %34 = call %"class.blink::HeapVectorBacking.339"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE4CallEm(i64 %33) #9
  %35 = ptrtoint %"class.blink::HeapVectorBacking.339"* %34 to i64
  %36 = trunc i64 %33 to i32
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  %39 = bitcast %"class.blink::HeapVectorBacking.339"* %34 to %"struct.std::__1::pair.279"*
  br i1 %38, label %43, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::HeapVectorBacking.339", %"class.blink::HeapVectorBacking.339"* %34, i64 0, i32 0
  %42 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #9
  br label %43

43:                                               ; preds = %40, %30, %26
  %44 = phi i32 [ 0, %26 ], [ %36, %30 ], [ %36, %40 ]
  %45 = phi i64 [ 0, %26 ], [ %35, %30 ], [ %35, %40 ]
  %46 = phi %"struct.std::__1::pair.279"* [ null, %26 ], [ %39, %30 ], [ %39, %40 ]
  %47 = load i32, i32* %9, align 4
  %48 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %7, align 8
  %49 = zext i32 %47 to i64
  %50 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %48, i64 %49
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"struct.std::__1::pair.279"* [ %57, %52 ], [ %46, %43 ]
  %54 = phi %"struct.std::__1::pair.279"* [ %58, %52 ], [ %48, %43 ]
  %55 = bitcast %"struct.std::__1::pair.279"* %53 to i8*
  %56 = call %"struct.std::__1::pair.279"* @_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJRKSA_EEEPSA_PvDpOT_(i8* %55, %"struct.std::__1::pair.279"* dereferenceable(24) %54) #9
  %57 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %53, i64 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %54, i64 1
  %59 = icmp eq %"struct.std::__1::pair.279"* %58, %50
  br i1 %59, label %60, label %52

60:                                               ; preds = %52, %43
  %61 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131StylePropertyMapIterationSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %27, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %27, i64 16
  %65 = bitcast i8* %64 to %"struct.std::__1::pair.279"**
  store %"struct.std::__1::pair.279"* null, %"struct.std::__1::pair.279"** %65, align 8
  %66 = getelementptr inbounds i8, i8* %27, i64 24
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 8
  %68 = icmp eq i32 %44, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %60
  %70 = zext i32 %44 to i64
  %71 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEEEmm(i64 %70) #9
  %72 = udiv i64 %71, 24
  %73 = call %"class.blink::HeapVectorBacking.339"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE4CallEm(i64 %72) #9
  %74 = ptrtoint %"class.blink::HeapVectorBacking.339"* %73 to i64
  %75 = bitcast i8* %64 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = trunc i64 %72 to i32
  store i32 %76, i32* %67, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  %79 = bitcast %"class.blink::HeapVectorBacking.339"* %73 to %"struct.std::__1::pair.279"*
  br i1 %78, label %84, label %80

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.blink::HeapVectorBacking.339", %"class.blink::HeapVectorBacking.339"* %73, i64 0, i32 0
  %82 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #9
  %83 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %65, align 8
  br label %84

84:                                               ; preds = %80, %69, %60
  %85 = phi %"struct.std::__1::pair.279"* [ null, %60 ], [ %79, %69 ], [ %83, %80 ]
  %86 = getelementptr inbounds i8, i8* %27, i64 28
  %87 = bitcast i8* %86 to i32*
  store i32 %47, i32* %87, align 4
  %88 = inttoptr i64 %45 to %"struct.std::__1::pair.279"*
  %89 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %88, i64 %49
  br i1 %51, label %98, label %90

90:                                               ; preds = %84, %90
  %91 = phi %"struct.std::__1::pair.279"* [ %95, %90 ], [ %85, %84 ]
  %92 = phi %"struct.std::__1::pair.279"* [ %96, %90 ], [ %88, %84 ]
  %93 = bitcast %"struct.std::__1::pair.279"* %91 to i8*
  %94 = call %"struct.std::__1::pair.279"* @_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJRKSA_EEEPSA_PvDpOT_(i8* %93, %"struct.std::__1::pair.279"* dereferenceable(24) %92) #9
  %95 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %91, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %92, i64 1
  %97 = icmp eq %"struct.std::__1::pair.279"* %96, %89
  br i1 %97, label %98, label %90

98:                                               ; preds = %90, %84
  %99 = getelementptr inbounds i8, i8* %27, i64 -4
  %100 = bitcast i8* %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = or i16 %101, 1
  store atomic i16 %102, i16* %100 release, align 2
  %103 = bitcast i8* %27 to %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* %103
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StylePropertyMapReadOnlyMainThread", %"class.blink::StylePropertyMapReadOnlyMainThread"* %0, i64 -1, i32 0, i32 0, i32 1
  %5 = bitcast %"class.blink::TraceWrapperV8Reference"* %4 to %"class.blink::StylePropertyMapReadOnlyMainThread"*
  %6 = tail call %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"* %5, %"class.blink::ScriptState"* undef, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  ret %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* %6
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink34StylePropertyMapReadOnlyMainThreadD0Ev(%"class.blink::StylePropertyMapReadOnlyMainThread"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv(%"class.blink::StylePropertyMapReadOnly"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink24StylePropertyMapReadOnly18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.289"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.289"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.64"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.61"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %24, i64 %25
  ret %"class.blink::Member.64"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.61"*, %"class.blink::CSSStyleValue"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.61"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleValue"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.64"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.61"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %8, align 8
  %10 = icmp eq %"class.blink::Member.64"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %8, align 8
  %26 = icmp eq %"class.blink::Member.64"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.64"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.61"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.61"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.64"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.64"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleValueEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.64"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.64"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRKN5blink15CSSPropertyNameERKNS2_8CSSValueEEE11__call_implINS0_20__default_alloc_funcIZNS2_34StylePropertyMapReadOnlyMainThread14StartIterationEPNS2_11ScriptStateERNS2_14ExceptionStateEE3$_0S9_EEEEvPKNS0_16__policy_storageES5_S8_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"* dereferenceable(3)) #0 align 2 {
  %4 = alloca %"class.blink::HeapVector.58", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.blink::HeapVector.58"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  call void @_ZN5blink17StyleValueFactory26CssValueToStyleValueVectorERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::HeapVector.58"* nonnull sret %4, %"class.blink::CSSPropertyName"* dereferenceable(16) %1, %"class.blink::CSSValue"* dereferenceable(3) %2) #9
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.WTF::Vector.276"**
  %8 = load %"class.WTF::Vector.276"*, %"class.WTF::Vector.276"** %7, align 8
  %9 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %1) #9
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %8, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %8, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %26, !prof !3

17:                                               ; preds = %3
  %18 = add i32 %13, 1
  %19 = lshr i32 %13, 2
  %20 = add i32 %18, %19
  %21 = icmp ugt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp ugt i32 %22, %18
  %24 = select i1 %23, i32 %22, i32 %18
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.276"* %8, i32 %24) #9
  %25 = load i32, i32* %12, align 4
  br label %26

26:                                               ; preds = %17, %3
  %27 = phi i32 [ %25, %17 ], [ %13, %3 ]
  %28 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %28, align 8
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %29, i64 %30
  %32 = bitcast %"struct.std::__1::pair.279"* %31 to i8*
  %33 = call %"struct.std::__1::pair.279"* @_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJNS_12AtomicStringES9_EEEPSA_PvDpOT_(i8* %32, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::HeapVector.58"* nonnull dereferenceable(16) %4) #9
  %34 = load i32, i32* %12, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %12, align 4
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %51

51:                                               ; preds = %26, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.279"* @_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJNS_12AtomicStringES9_EEEPSA_PvDpOT_(i8*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HeapVector.58"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.std::__1::pair.279"*
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #9
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds i8, i8* %0, i64 8
  %28 = getelementptr inbounds i8, i8* %0, i64 16
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i64 20
  %31 = bitcast i8* %30 to i32*
  %32 = bitcast %"class.blink::HeapVector.58"* %2 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #9
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %27 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %29, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %29, align 4
  store i32 %36, i32* %35, align 4
  %38 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %31, align 4
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %31, align 4
  store i32 %39, i32* %38, align 4
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %26
  %44 = bitcast i8* %27 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #9
  br label %47

47:                                               ; preds = %43, %26
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::HeapVector.58"* %2 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #9
  br label %54

54:                                               ; preds = %47, %50
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %81, label %57

57:                                               ; preds = %54
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #9
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !3

62:                                               ; preds = %57
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #9
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i8* [ %63, %62 ], [ %60, %57 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 9
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 13
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %76, i64 0, i32 0, i32 0
  %78 = bitcast i8* %27 to %"class.WTF::Vector.61"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.61"* %78, %"class.blink::Visitor"* %77) #9
  %79 = load i64, i64* %72, align 8
  %80 = add i64 %79, -1
  store i64 %80, i64* %72, align 8
  br label %81

81:                                               ; preds = %54, %64, %71
  ret %"struct.std::__1::pair.279"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.276"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.279"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking.339"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.339"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.276"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.339", %"class.blink::HeapVectorBacking.339"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.279"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.279"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.276"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.276"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.276"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.276"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEEEmm(i64 %14) #9
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking.339"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.339"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.339"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.279"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.279"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.276"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 24
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.339", %"class.blink::HeapVectorBacking.339"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.276"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.276"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.339", %"class.blink::HeapVectorBacking.339"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.339"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS3_12VectorTraitsISA_EEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.339"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.339"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS3_12VectorTraitsISA_EEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([271 x i8], [271 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS_6StringENS1_10HeapVectorINS1_6MemberINS1_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISB_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.279"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %30, i64 %56, i32 1
  %58 = bitcast %"class.blink::HeapVector.58"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.58"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #9
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS5_12VectorTraitsISC_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.std::__1::pair.279"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %47

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.61"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #9
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8IterableINS_6StringENS1_10HeapVectorINS1_6MemberINS1_13CSSStyleValueEEELj0EEEE15IterationSourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*
  %3 = bitcast i8* %0 to void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*)***
  %4 = load void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*)**, void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*)*** %3, align 8
  %5 = load void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*)*, void (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*)** %4, align 8
  tail call void %5(%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.279"* @_ZN3WTF15ConstructTraitsINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEENS_12VectorTraitsISA_EENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJRKSA_EEEPSA_PvDpOT_(i8*, %"struct.std::__1::pair.279"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.std::__1::pair.279"*
  %4 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to %"class.WTF::Vector.61"*
  %28 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.61"* %27, %"class.WTF::Vector.61"* dereferenceable(16) %28) #9
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %25
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #9
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #9
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 9
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 13
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %50, i64 0, i32 0, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.61"* %27, %"class.blink::Visitor"* %51) #9
  %52 = load i64, i64* %46, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %46, align 8
  br label %54

54:                                               ; preds = %25, %38, %45
  ret %"struct.std::__1::pair.279"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.61"*, %"class.WTF::Vector.61"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.64"* null, %"class.blink::Member.64"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64 %9) #9
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #9
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.64"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  %22 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.64"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %28, align 8
  %30 = icmp ne %"class.blink::Member.64"* %24, null
  %31 = icmp ne %"class.blink::Member.64"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !10

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.64"* %24 to i8*
  %37 = bitcast %"class.blink::Member.64"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #9
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.64"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.64"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE15IterationSourceD2Ev(%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131StylePropertyMapIterationSourceD0Ev(%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_131StylePropertyMapIterationSource4NextEPNS_11ScriptStateERN3WTF6StringERNS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"*, %"class.blink::ScriptState"* nocapture readnone, %"class.WTF::String"* nocapture dereferenceable(8), %"class.blink::HeapVector.58"* dereferenceable(16), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource", %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource", %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %7, %9
  br i1 %10, label %11, label %58

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource", %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"* %0, i64 0, i32 2, i32 0
  %13 = add nuw i32 %7, 1
  store i32 %13, i32* %6, align 8
  %14 = tail call dereferenceable(24) %"struct.std::__1::pair.279"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE2atEj(%"class.WTF::Vector.276"* %12, i32 %7)
  %15 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #9
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %23
  tail call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18, %11
  %36 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %37 = bitcast %"class.WTF::String"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %35, %50, %53
  %55 = getelementptr inbounds %"class.blink::HeapVector.58", %"class.blink::HeapVector.58"* %3, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %14, i64 0, i32 1, i32 0
  %57 = tail call dereferenceable(16) %"class.WTF::Vector.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.61"* %55, %"class.WTF::Vector.61"* dereferenceable(16) %56) #9
  br label %58

58:                                               ; preds = %5, %54
  %59 = phi i1 [ true, %54 ], [ false, %5 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_131StylePropertyMapIterationSource5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource", %"class.blink::(anonymous namespace)::StylePropertyMapIterationSource"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapVector.273"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector.273"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIN3WTF6StringENS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEENS4_12VectorTraitsISB_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"struct.std::__1::pair.279"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringEN5blink10HeapVectorINS4_6MemberINS4_13CSSStyleValueEEELj0EEEEELj0ENS4_13HeapAllocatorEE2atEj(%"class.WTF::Vector.276"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.279", %"struct.std::__1::pair.279"* %24, i64 %25
  ret %"struct.std::__1::pair.279"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.61"*, %"class.WTF::Vector.61"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.61"* %1, %0
  br i1 %3, label %87, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.64"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.64"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.64"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #9
  store i32 %8, i32* %5, align 4
  br label %41

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %8, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = icmp eq i32 %6, 0
  %29 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  br i1 %28, label %34, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %29, align 8
  %32 = zext i32 %6 to i64
  %33 = shl nuw nsw i64 %32, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %31, i64 %33) #9
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %30, %27
  %35 = load i8*, i8** %29, align 8
  %36 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  store i32 0, i32* %22, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %35) #9
  %37 = load i32, i32* %7, align 4
  br label %38

38:                                               ; preds = %25, %34
  %39 = phi i32 [ %8, %25 ], [ %37, %34 ]
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.61"* %0, i32 %39)
  %40 = load i32, i32* %5, align 4
  br label %41

41:                                               ; preds = %21, %38, %10
  %42 = phi i32 [ %6, %21 ], [ %40, %38 ], [ %8, %10 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::Vector.61"* %1 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = shl nuw nsw i64 %46, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %49, i8* %45, i64 %50) #9
  %51 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %43, align 8
  %52 = load i32, i32* %5, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %51, i64 %53
  %55 = load %"class.blink::Member.64"*, %"class.blink::Member.64"** %47, align 8
  %56 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %55, i64 %53
  %57 = icmp ne %"class.blink::Member.64"* %56, null
  %58 = icmp ne %"class.blink::Member.64"* %54, null
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %85, !prof !10

60:                                               ; preds = %41
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %51, i64 %62
  %64 = bitcast %"class.blink::Member.64"* %56 to i8*
  %65 = bitcast %"class.blink::Member.64"* %54 to i8*
  %66 = ptrtoint %"class.blink::Member.64"* %63 to i64
  %67 = ptrtoint %"class.blink::Member.64"* %54 to i64
  %68 = sub i64 %66, %67
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %64, i8* nonnull %65, i64 %68) #9
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %68, 3
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ %75, %82 ], [ %71, %70 ]
  %74 = phi %"class.blink::Member.64"* [ %83, %82 ], [ %56, %70 ]
  %75 = add i64 %73, -1
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Member.64"* %74 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #9
  br label %82

82:                                               ; preds = %78, %72
  %83 = getelementptr inbounds %"class.blink::Member.64", %"class.blink::Member.64"* %74, i64 1
  %84 = icmp eq i64 %75, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %41, %60
  %86 = load i32, i32* %7, align 4
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %2, %85
  ret %"class.WTF::Vector.61"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CSSUnsupportedStyleValueC2ERKNS_15CSSPropertyNameERKN3WTF6StringE(%"class.blink::CSSUnsupportedStyleValue"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24CSSUnsupportedStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %3, %15, %30
  %33 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #9
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %32
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.WTF::String"* %33 to i64*
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %54, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CSSUnsupportedStyleValueD2Ev(%"class.blink::CSSUnsupportedStyleValue"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24CSSUnsupportedStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %23

23:                                               ; preds = %22, %19, %6
  store i8 0, i8* %3, align 8
  br label %24

24:                                               ; preds = %1, %23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %25 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #9
  br label %41

41:                                               ; preds = %24, %37, %40
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CSSUnsupportedStyleValueD0Ev(%"class.blink::CSSUnsupportedStyleValue"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24CSSUnsupportedStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %23

23:                                               ; preds = %22, %19, %6
  store i8 0, i8* %3, align 8
  br label %24

24:                                               ; preds = %23, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %25 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #9
  br label %41

41:                                               ; preds = %24, %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13CSSStyleValue18GetWrapperTypeInfoEv(%"class.blink::CSSStyleValue"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13CSSStyleValue18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink24CSSUnsupportedStyleValue7GetTypeEv(%"class.blink::CSSUnsupportedStyleValue"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink24CSSUnsupportedStyleValue10ToCSSValueEv(%"class.blink::CSSUnsupportedStyleValue"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE(%"class.blink::CSSStyleValue"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSStyleValue"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %4 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %4, i64 10
  %6 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %5, align 8
  %7 = tail call %"class.blink::CSSValue"* %6(%"class.blink::CSSStyleValue"* %0) #9
  ret %"class.blink::CSSValue"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink24CSSUnsupportedStyleValue8toStringEv(%"class.blink::CSSUnsupportedStyleValue"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSUnsupportedStyleValue", %"class.blink::CSSUnsupportedStyleValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #9
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!6 = distinct !{!6, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!9 = distinct !{!9, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!10 = !{!"branch_weights", i32 2000, i32 1}
