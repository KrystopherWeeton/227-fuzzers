; ModuleID = '../../third_party/wayland/stubs/libwayland_variadic_support.cc'
source_filename = "../../third_party/wayland/stubs/libwayland_variadic_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.argument_details = type { i8, i32 }
%union.wl_argument = type { i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.wl_proxy = type opaque
%struct.wl_interface = type { i8*, i32, i32, %struct.wl_message*, i32, %struct.wl_message* }
%struct.wl_message = type { i8*, i8*, %struct.wl_interface** }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @get_next_argument(i8* readonly, %struct.argument_details* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.argument_details, %struct.argument_details* %1, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2, %14
  %7 = phi i8 [ %16, %14 ], [ %4, %2 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %2 ]
  %9 = sext i8 %7 to i32
  switch i32 %9, label %14 [
    i32 105, label %10
    i32 117, label %10
    i32 102, label %10
    i32 115, label %10
    i32 111, label %10
    i32 110, label %10
    i32 97, label %10
    i32 104, label %10
    i32 63, label %13
  ]

10:                                               ; preds = %6, %6, %6, %6, %6, %6, %6, %6
  %11 = getelementptr inbounds %struct.argument_details, %struct.argument_details* %1, i64 0, i32 0
  store i8 %7, i8* %11, align 4
  %12 = getelementptr inbounds i8, i8* %8, i64 1
  br label %21

13:                                               ; preds = %6
  store i32 1, i32* %3, align 4
  br label %14

14:                                               ; preds = %6, %13
  %15 = getelementptr inbounds i8, i8* %8, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %6

18:                                               ; preds = %14, %2
  %19 = phi i8* [ %0, %2 ], [ %15, %14 ]
  %20 = getelementptr inbounds %struct.argument_details, %struct.argument_details* %1, i64 0, i32 0
  store i8 0, i8* %20, align 4
  br label %21

21:                                               ; preds = %18, %10
  %22 = phi i8* [ %12, %10 ], [ %19, %18 ]
  ret i8* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @wl_argument_from_va_list(i8* nocapture readonly, %union.wl_argument* nocapture, i32, %struct.__va_list_tag*) local_unnamed_addr #1 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %165

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %3, i64 0, i32 0
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %3, i64 0, i32 2
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %3, i64 0, i32 3
  %10 = zext i32 %2 to i64
  br label %11

11:                                               ; preds = %162, %6
  %12 = phi i64 [ 0, %6 ], [ %163, %162 ]
  %13 = phi i8* [ %0, %6 ], [ %25, %162 ]
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %165, label %16

16:                                               ; preds = %11, %20
  %17 = phi i8 [ %22, %20 ], [ %14, %11 ]
  %18 = phi i8* [ %21, %20 ], [ %13, %11 ]
  %19 = sext i8 %17 to i32
  switch i32 %19, label %20 [
    i32 105, label %24
    i32 117, label %24
    i32 102, label %24
    i32 115, label %24
    i32 111, label %24
    i32 110, label %24
    i32 97, label %24
    i32 104, label %24
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds i8, i8* %18, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %165, label %16

24:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16
  %25 = getelementptr inbounds i8, i8* %18, i64 1
  switch i32 %19, label %162 [
    i32 105, label %26
    i32 117, label %43
    i32 102, label %60
    i32 115, label %77
    i32 111, label %94
    i32 110, label %111
    i32 97, label %128
    i32 104, label %145
  ]

26:                                               ; preds = %24
  %27 = load i32, i32* %7, align 8
  %28 = icmp ult i32 %27, 41
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = load i8*, i8** %9, align 8
  %31 = sext i32 %27 to i64
  %32 = getelementptr i8, i8* %30, i64 %31
  %33 = add nuw nsw i32 %27, 8
  store i32 %33, i32* %7, align 8
  br label %37

34:                                               ; preds = %26
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr i8, i8* %35, i64 8
  store i8* %36, i8** %8, align 8
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi i8* [ %32, %29 ], [ %35, %34 ]
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %42 = bitcast %union.wl_argument* %41 to i32*
  store i32 %40, i32* %42, align 8
  br label %162

43:                                               ; preds = %24
  %44 = load i32, i32* %7, align 8
  %45 = icmp ult i32 %44, 41
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = load i8*, i8** %9, align 8
  %48 = sext i32 %44 to i64
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = add nuw nsw i32 %44, 8
  store i32 %50, i32* %7, align 8
  br label %54

51:                                               ; preds = %43
  %52 = load i8*, i8** %8, align 8
  %53 = getelementptr i8, i8* %52, i64 8
  store i8* %53, i8** %8, align 8
  br label %54

54:                                               ; preds = %51, %46
  %55 = phi i8* [ %49, %46 ], [ %52, %51 ]
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %59 = bitcast %union.wl_argument* %58 to i32*
  store i32 %57, i32* %59, align 8
  br label %162

60:                                               ; preds = %24
  %61 = load i32, i32* %7, align 8
  %62 = icmp ult i32 %61, 41
  br i1 %62, label %63, label %68

63:                                               ; preds = %60
  %64 = load i8*, i8** %9, align 8
  %65 = sext i32 %61 to i64
  %66 = getelementptr i8, i8* %64, i64 %65
  %67 = add nuw nsw i32 %61, 8
  store i32 %67, i32* %7, align 8
  br label %71

68:                                               ; preds = %60
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr i8, i8* %69, i64 8
  store i8* %70, i8** %8, align 8
  br label %71

71:                                               ; preds = %68, %63
  %72 = phi i8* [ %66, %63 ], [ %69, %68 ]
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %76 = bitcast %union.wl_argument* %75 to i32*
  store i32 %74, i32* %76, align 8
  br label %162

77:                                               ; preds = %24
  %78 = load i32, i32* %7, align 8
  %79 = icmp ult i32 %78, 41
  br i1 %79, label %80, label %85

80:                                               ; preds = %77
  %81 = load i8*, i8** %9, align 8
  %82 = sext i32 %78 to i64
  %83 = getelementptr i8, i8* %81, i64 %82
  %84 = add nuw nsw i32 %78, 8
  store i32 %84, i32* %7, align 8
  br label %88

85:                                               ; preds = %77
  %86 = load i8*, i8** %8, align 8
  %87 = getelementptr i8, i8* %86, i64 8
  store i8* %87, i8** %8, align 8
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i8* [ %83, %80 ], [ %86, %85 ]
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %93 = bitcast %union.wl_argument* %92 to i64*
  store i64 %91, i64* %93, align 8
  br label %162

94:                                               ; preds = %24
  %95 = load i32, i32* %7, align 8
  %96 = icmp ult i32 %95, 41
  br i1 %96, label %97, label %102

97:                                               ; preds = %94
  %98 = load i8*, i8** %9, align 8
  %99 = sext i32 %95 to i64
  %100 = getelementptr i8, i8* %98, i64 %99
  %101 = add nuw nsw i32 %95, 8
  store i32 %101, i32* %7, align 8
  br label %105

102:                                              ; preds = %94
  %103 = load i8*, i8** %8, align 8
  %104 = getelementptr i8, i8* %103, i64 8
  store i8* %104, i8** %8, align 8
  br label %105

105:                                              ; preds = %102, %97
  %106 = phi i8* [ %100, %97 ], [ %103, %102 ]
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %110 = bitcast %union.wl_argument* %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %162

111:                                              ; preds = %24
  %112 = load i32, i32* %7, align 8
  %113 = icmp ult i32 %112, 41
  br i1 %113, label %114, label %119

114:                                              ; preds = %111
  %115 = load i8*, i8** %9, align 8
  %116 = sext i32 %112 to i64
  %117 = getelementptr i8, i8* %115, i64 %116
  %118 = add nuw nsw i32 %112, 8
  store i32 %118, i32* %7, align 8
  br label %122

119:                                              ; preds = %111
  %120 = load i8*, i8** %8, align 8
  %121 = getelementptr i8, i8* %120, i64 8
  store i8* %121, i8** %8, align 8
  br label %122

122:                                              ; preds = %119, %114
  %123 = phi i8* [ %117, %114 ], [ %120, %119 ]
  %124 = bitcast i8* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %127 = bitcast %union.wl_argument* %126 to i64*
  store i64 %125, i64* %127, align 8
  br label %162

128:                                              ; preds = %24
  %129 = load i32, i32* %7, align 8
  %130 = icmp ult i32 %129, 41
  br i1 %130, label %131, label %136

131:                                              ; preds = %128
  %132 = load i8*, i8** %9, align 8
  %133 = sext i32 %129 to i64
  %134 = getelementptr i8, i8* %132, i64 %133
  %135 = add nuw nsw i32 %129, 8
  store i32 %135, i32* %7, align 8
  br label %139

136:                                              ; preds = %128
  %137 = load i8*, i8** %8, align 8
  %138 = getelementptr i8, i8* %137, i64 8
  store i8* %138, i8** %8, align 8
  br label %139

139:                                              ; preds = %136, %131
  %140 = phi i8* [ %134, %131 ], [ %137, %136 ]
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %144 = bitcast %union.wl_argument* %143 to i64*
  store i64 %142, i64* %144, align 8
  br label %162

145:                                              ; preds = %24
  %146 = load i32, i32* %7, align 8
  %147 = icmp ult i32 %146, 41
  br i1 %147, label %148, label %153

148:                                              ; preds = %145
  %149 = load i8*, i8** %9, align 8
  %150 = sext i32 %146 to i64
  %151 = getelementptr i8, i8* %149, i64 %150
  %152 = add nuw nsw i32 %146, 8
  store i32 %152, i32* %7, align 8
  br label %156

153:                                              ; preds = %145
  %154 = load i8*, i8** %8, align 8
  %155 = getelementptr i8, i8* %154, i64 8
  store i8* %155, i8** %8, align 8
  br label %156

156:                                              ; preds = %153, %148
  %157 = phi i8* [ %151, %148 ], [ %154, %153 ]
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %union.wl_argument, %union.wl_argument* %1, i64 %12
  %161 = bitcast %union.wl_argument* %160 to i32*
  store i32 %159, i32* %161, align 8
  br label %162

162:                                              ; preds = %37, %54, %71, %88, %105, %122, %139, %156, %24
  %163 = add nuw nsw i64 %12, 1
  %164 = icmp eq i64 %163, %10
  br i1 %164, label %165, label %11

165:                                              ; preds = %11, %162, %20, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @wl_proxy_marshal(%struct.wl_proxy*, i32, ...) local_unnamed_addr #1 {
  %3 = alloca [20 x %union.wl_argument], align 16
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [20 x %union.wl_argument]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 160, i1 false)
  %6 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #3
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %6)
  %9 = bitcast %struct.wl_proxy* %0 to %struct.wl_interface**
  %10 = load %struct.wl_interface*, %struct.wl_interface** %9, align 8
  %11 = getelementptr inbounds %struct.wl_interface, %struct.wl_interface* %10, i64 0, i32 3
  %12 = load %struct.wl_message*, %struct.wl_message** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %struct.wl_message, %struct.wl_message* %12, i64 %13, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds [20 x %union.wl_argument], [20 x %union.wl_argument]* %3, i64 0, i64 0
  call void @wl_argument_from_va_list(i8* %15, %union.wl_argument* nonnull %16, i32 20, %struct.__va_list_tag* nonnull %7)
  call void @llvm.va_end(i8* nonnull %6)
  %17 = call %struct.wl_proxy* @wl_proxy_marshal_array_constructor(%struct.wl_proxy* %0, i32 %1, %union.wl_argument* nonnull %16, %struct.wl_interface* null) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

declare %struct.wl_proxy* @wl_proxy_marshal_array_constructor(%struct.wl_proxy*, i32, %union.wl_argument*, %struct.wl_interface*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.wl_proxy* @wl_proxy_marshal_constructor(%struct.wl_proxy*, i32, %struct.wl_interface*, ...) local_unnamed_addr #1 {
  %4 = alloca [20 x %union.wl_argument], align 16
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = bitcast [20 x %union.wl_argument]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 160, i1 false)
  %7 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #3
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %9 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %7)
  %10 = bitcast %struct.wl_proxy* %0 to %struct.wl_interface**
  %11 = load %struct.wl_interface*, %struct.wl_interface** %10, align 8
  %12 = getelementptr inbounds %struct.wl_interface, %struct.wl_interface* %11, i64 0, i32 3
  %13 = load %struct.wl_message*, %struct.wl_message** %12, align 8
  %14 = zext i32 %1 to i64
  %15 = getelementptr inbounds %struct.wl_message, %struct.wl_message* %13, i64 %14, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds [20 x %union.wl_argument], [20 x %union.wl_argument]* %4, i64 0, i64 0
  call void @wl_argument_from_va_list(i8* %16, %union.wl_argument* nonnull %17, i32 20, %struct.__va_list_tag* nonnull %8)
  call void @llvm.va_end(i8* nonnull %7)
  %18 = call %struct.wl_proxy* @wl_proxy_marshal_array_constructor(%struct.wl_proxy* %0, i32 %1, %union.wl_argument* nonnull %17, %struct.wl_interface* %2) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #3
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #3
  ret %struct.wl_proxy* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.wl_proxy* @wl_proxy_marshal_constructor_versioned(%struct.wl_proxy*, i32, %struct.wl_interface*, i32, ...) local_unnamed_addr #1 {
  %5 = alloca [20 x %union.wl_argument], align 16
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = bitcast [20 x %union.wl_argument]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 160, i1 false)
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #3
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %10 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %8)
  %11 = bitcast %struct.wl_proxy* %0 to %struct.wl_interface**
  %12 = load %struct.wl_interface*, %struct.wl_interface** %11, align 8
  %13 = getelementptr inbounds %struct.wl_interface, %struct.wl_interface* %12, i64 0, i32 3
  %14 = load %struct.wl_message*, %struct.wl_message** %13, align 8
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds %struct.wl_message, %struct.wl_message* %14, i64 %15, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds [20 x %union.wl_argument], [20 x %union.wl_argument]* %5, i64 0, i64 0
  call void @wl_argument_from_va_list(i8* %17, %union.wl_argument* nonnull %18, i32 20, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* nonnull %8)
  %19 = call %struct.wl_proxy* @wl_proxy_marshal_array_constructor_versioned(%struct.wl_proxy* %0, i32 %1, %union.wl_argument* nonnull %18, %struct.wl_interface* %2, i32 %3) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #3
  ret %struct.wl_proxy* %19
}

declare %struct.wl_proxy* @wl_proxy_marshal_array_constructor_versioned(%struct.wl_proxy*, i32, %union.wl_argument*, %struct.wl_interface*, i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
