; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_annotcontext.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_annotcontext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_AnnotContext = type { %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.95" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Form* }
%class.CPDF_Form = type { %class.CPDF_PageObjectHolder, %"class.CPDF_Font::FormIface", %"class.std::__1::set.66", %"class.fxcrt::RetainPtr.76" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::map.16", %"class.std::__1::map.27", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::unique_ptr.43", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set" }
%"class.std::__1::map.16" = type { %"class.std::__1::__tree.17" }
%"class.std::__1::__tree.17" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.47"**, %"class.std::__1::unique_ptr.47"**, %"class.std::__1::unique_ptr.47"**, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::unique_ptr.47"** }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::set" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.CPDF_Font::FormIface" = type { i32 (...)** }
%"class.std::__1::set.66" = type { %"class.std::__1::__tree.67" }
%"class.std::__1::__tree.67" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.fxcrt::RetainPtr.76" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.80", %"class.fxcrt::RetainPtr.84" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i8* }
%"class.fxcrt::RetainPtr.84" = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::UnownedPtr.95" = type { %class.IPDF_Page* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.3" }
%"class.fxcrt::RetainPtr.3" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.124" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.142", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.96" }
%"class.fxcrt::RetainPtr.96" = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108", %"class.fxcrt::ObservedPtr" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set.114" }
%"class.std::__1::set.114" = type { %"class.std::__1::__tree.115" }
%"class.std::__1::__tree.115" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.12" }

@.str = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1

@_ZN17CPDF_AnnotContextC1EP15CPDF_DictionaryP9IPDF_Page = hidden unnamed_addr alias void (%class.CPDF_AnnotContext*, %class.CPDF_Dictionary*, %class.IPDF_Page*), void (%class.CPDF_AnnotContext*, %class.CPDF_Dictionary*, %class.IPDF_Page*)* @_ZN17CPDF_AnnotContextC2EP15CPDF_DictionaryP9IPDF_Page
@_ZN17CPDF_AnnotContextD1Ev = hidden unnamed_addr alias void (%class.CPDF_AnnotContext*), void (%class.CPDF_AnnotContext*)* @_ZN17CPDF_AnnotContextD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN17CPDF_AnnotContextC2EP15CPDF_DictionaryP9IPDF_Page(%class.CPDF_AnnotContext* nocapture, %class.CPDF_Dictionary*, %class.IPDF_Page*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPDF_AnnotContext* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_AnnotContext, %class.CPDF_AnnotContext* %0, i64 0, i32 1
  %6 = ptrtoint %class.CPDF_Dictionary* %1 to i64
  %7 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  store i64 %6, i64* %7, align 8
  %8 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %10, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = getelementptr inbounds %class.CPDF_AnnotContext, %class.CPDF_AnnotContext* %0, i64 0, i32 2, i32 0
  store %class.IPDF_Page* %2, %class.IPDF_Page** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_AnnotContextD2Ev(%class.CPDF_AnnotContext* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_AnnotContext, %class.CPDF_AnnotContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %2, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %2, align 8
  %4 = icmp eq %class.CPDF_Dictionary* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Dictionary* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #6
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_AnnotContext, %class.CPDF_AnnotContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_Form*, %class.CPDF_Form** %17, align 8
  store %class.CPDF_Form* null, %class.CPDF_Form** %17, align 8
  %19 = icmp eq %class.CPDF_Form* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %class.CPDF_Form* %18 to void (%class.CPDF_Form*)***
  %22 = load void (%class.CPDF_Form*)**, void (%class.CPDF_Form*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %22, i64 1
  %24 = load void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %23, align 8
  tail call void %24(%class.CPDF_Form* nonnull %18) #6
  br label %25

25:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_AnnotContext7SetFormEP11CPDF_Stream(%class.CPDF_AnnotContext* nocapture, %class.CPDF_Stream*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %class.CFX_Matrix, align 16
  %5 = icmp eq %class.CPDF_Stream* %1, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %1) #6
  %8 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #6
  %9 = bitcast %class.CFX_Matrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6
  %10 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  store float 0.000000e+00, float* %11, align 16
  %12 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  store float 0.000000e+00, float* %12, align 4
  call void @_ZN15CPDF_Dictionary12SetMatrixForERKN5fxcrt10ByteStringERK10CFX_Matrix(%class.CPDF_Dictionary* %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, %class.CFX_Matrix* nonnull dereferenceable(24) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  %13 = getelementptr inbounds %class.CPDF_AnnotContext, %class.CPDF_AnnotContext* %0, i64 0, i32 2, i32 0
  %14 = load %class.IPDF_Page*, %class.IPDF_Page** %13, align 8
  %15 = bitcast %class.IPDF_Page* %14 to %class.CPDF_Document* (%class.IPDF_Page*)***
  %16 = load %class.CPDF_Document* (%class.IPDF_Page*)**, %class.CPDF_Document* (%class.IPDF_Page*)*** %15, align 8
  %17 = getelementptr inbounds %class.CPDF_Document* (%class.IPDF_Page*)*, %class.CPDF_Document* (%class.IPDF_Page*)** %16, i64 4
  %18 = load %class.CPDF_Document* (%class.IPDF_Page*)*, %class.CPDF_Document* (%class.IPDF_Page*)** %17, align 8
  %19 = call %class.CPDF_Document* %18(%class.IPDF_Page* %14) #6
  %20 = load %class.IPDF_Page*, %class.IPDF_Page** %13, align 8
  %21 = bitcast %class.IPDF_Page* %20 to %class.CPDF_Page* (%class.IPDF_Page*)***
  %22 = load %class.CPDF_Page* (%class.IPDF_Page*)**, %class.CPDF_Page* (%class.IPDF_Page*)*** %21, align 8
  %23 = getelementptr inbounds %class.CPDF_Page* (%class.IPDF_Page*)*, %class.CPDF_Page* (%class.IPDF_Page*)** %22, i64 2
  %24 = load %class.CPDF_Page* (%class.IPDF_Page*)*, %class.CPDF_Page* (%class.IPDF_Page*)** %23, align 8
  %25 = call %class.CPDF_Page* %24(%class.IPDF_Page* %20) #6
  %26 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %25, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %26, align 8
  %28 = call i8* @_Znwm(i64 280) #7
  %29 = bitcast i8* %28 to %class.CPDF_Form*
  call void @_ZN9CPDF_FormC1EP13CPDF_DocumentP15CPDF_DictionaryP11CPDF_Stream(%class.CPDF_Form* nonnull %29, %class.CPDF_Document* %19, %class.CPDF_Dictionary* %27, %class.CPDF_Stream* nonnull %1) #6
  %30 = ptrtoint i8* %28 to i64
  %31 = getelementptr inbounds %class.CPDF_AnnotContext, %class.CPDF_AnnotContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %class.CPDF_Form*, %class.CPDF_Form** %31, align 8
  %33 = bitcast %class.CPDF_AnnotContext* %0 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %class.CPDF_Form* %32, null
  %35 = bitcast i8* %28 to %class.CPDF_Form*
  br i1 %34, label %42, label %36

36:                                               ; preds = %6
  %37 = bitcast %class.CPDF_Form* %32 to void (%class.CPDF_Form*)***
  %38 = load void (%class.CPDF_Form*)**, void (%class.CPDF_Form*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %38, i64 1
  %40 = load void (%class.CPDF_Form*)*, void (%class.CPDF_Form*)** %39, align 8
  call void %40(%class.CPDF_Form* nonnull %32) #6
  %41 = load %class.CPDF_Form*, %class.CPDF_Form** %31, align 8
  br label %42

42:                                               ; preds = %36, %6
  %43 = phi %class.CPDF_Form* [ %41, %36 ], [ %35, %6 ]
  call void @_ZN9CPDF_Form12ParseContentEv(%class.CPDF_Form* %43) #6
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

declare %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #2

declare void @_ZN15CPDF_Dictionary12SetMatrixForERKN5fxcrt10ByteStringERK10CFX_Matrix(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

declare void @_ZN9CPDF_Form12ParseContentEv(%class.CPDF_Form*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN9CPDF_FormC1EP13CPDF_DocumentP15CPDF_DictionaryP11CPDF_Stream(%class.CPDF_Form*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Stream*) unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
