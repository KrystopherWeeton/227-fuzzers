; ModuleID = '../../ui/views/input_event_activation_protector.cc'
source_filename = "../../ui/views/input_event_activation_protector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::InputEventActivationProtector" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::flat_map.3"* }
%"class.base::flat_map.3" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views29InputEventActivationProtector17VisibilityChangedEb(%"class.views::InputEventActivationProtector"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %6

3:                                                ; preds = %2
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %5 = getelementptr inbounds %"class.views::InputEventActivationProtector", %"class.views::InputEventActivationProtector"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  br label %6

6:                                                ; preds = %3, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views29InputEventActivationProtector31IsPossiblyUnintendedInteractionERKN2ui5EventE(%"class.views::InputEventActivationProtector"* nocapture, %"class.ui::Event"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.views::InputEventActivationProtector", %"class.views::InputEventActivationProtector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %81, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -7
  %12 = icmp ult i32 %11, 2
  br i1 %12, label %13, label %21

13:                                               ; preds = %8
  %14 = tail call %"class.ui::KeyEvent"* @_ZNK2ui5Event10AsKeyEventEv(%"class.ui::Event"* %1) #6
  %15 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %14, i64 0, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 65536
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %81

19:                                               ; preds = %13
  %20 = load i32, i32* %9, align 8
  br label %21

21:                                               ; preds = %19, %8
  %22 = phi i32 [ %20, %19 ], [ %10, %8 ]
  switch i32 %22, label %23 [
    i32 1, label %26
    i32 2, label %26
    i32 3, label %26
    i32 4, label %26
    i32 5, label %26
    i32 6, label %26
    i32 9, label %26
    i32 10, label %26
  ]

23:                                               ; preds = %21
  %24 = add i32 %22, -11
  %25 = icmp ult i32 %24, 4
  br i1 %25, label %26, label %81

26:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21, %23
  %27 = tail call i32 @_ZN5views22GetDoubleClickIntervalEv() #6
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %28, 1000
  %30 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.views::InputEventActivationProtector", %"class.views::InputEventActivationProtector"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %29, -9223372036854775808
  br i1 %34, label %35, label %44

35:                                               ; preds = %26
  %36 = add i64 %33, -9223372036854775807
  %37 = icmp ugt i64 %36, 1
  %38 = icmp eq i64 %33, -9223372036854775808
  %39 = or i1 %38, %37
  br i1 %39, label %65, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #6
  %43 = load i64, i64* %30, align 8
  br label %65

44:                                               ; preds = %26
  %45 = icmp slt i32 %27, 0
  %46 = select i1 %45, i64 -9223372036854775808, i64 9223372036854775807
  %47 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %33, i64 %29) #6
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 %46, i64 %49, !prof !2
  %51 = icmp slt i64 %31, %50
  store i64 %31, i64* %32, align 8
  %52 = getelementptr inbounds %"class.views::InputEventActivationProtector", %"class.views::InputEventActivationProtector"* %0, i64 0, i32 2
  br i1 %51, label %53, label %56

53:                                               ; preds = %44
  %54 = load i64, i64* %52, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %52, align 8
  br label %81

56:                                               ; preds = %44
  store i64 0, i64* %52, align 8
  %57 = load i64, i64* %30, align 8
  %58 = load i64, i64* %5, align 8
  %59 = icmp slt i32 %27, 0
  %60 = select i1 %59, i64 -9223372036854775808, i64 9223372036854775807
  %61 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %58, i64 %29) #6
  %62 = extractvalue { i64, i1 } %61, 1
  %63 = extractvalue { i64, i1 } %61, 0
  %64 = select i1 %62, i64 %60, i64 %63, !prof !2
  br label %77

65:                                               ; preds = %35, %40
  %66 = phi i64 [ %43, %40 ], [ %31, %35 ]
  store i64 %66, i64* %32, align 8
  %67 = getelementptr inbounds %"class.views::InputEventActivationProtector", %"class.views::InputEventActivationProtector"* %0, i64 0, i32 2
  store i64 0, i64* %67, align 8
  %68 = load i64, i64* %30, align 8
  %69 = load i64, i64* %5, align 8
  %70 = add i64 %69, -9223372036854775807
  %71 = icmp ugt i64 %70, 1
  %72 = icmp eq i64 %69, -9223372036854775808
  %73 = or i1 %72, %71
  br i1 %73, label %77, label %74

74:                                               ; preds = %65
  %75 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #6
  br label %77

77:                                               ; preds = %56, %65, %74
  %78 = phi i64 [ %57, %56 ], [ %68, %65 ], [ %68, %74 ]
  %79 = phi i64 [ %64, %56 ], [ -9223372036854775808, %65 ], [ -9223372036854775808, %74 ]
  %80 = icmp slt i64 %78, %79
  br label %81

81:                                               ; preds = %13, %53, %77, %23, %2
  %82 = phi i1 [ false, %2 ], [ true, %13 ], [ false, %23 ], [ true, %53 ], [ %80, %77 ]
  ret i1 %82
}

declare %"class.ui::KeyEvent"* @_ZNK2ui5Event10AsKeyEventEv(%"class.ui::Event"*) local_unnamed_addr #2

declare i32 @_ZN5views22GetDoubleClickIntervalEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5views29InputEventActivationProtector15ResetForTestingEv(%"class.views::InputEventActivationProtector"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.views::InputEventActivationProtector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
