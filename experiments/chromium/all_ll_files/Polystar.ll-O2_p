; ModuleID = '../../third_party/skia/modules/skottie/src/layers/shapelayer/Polystar.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/shapelayer/Polystar.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.33 = type { i8*, i32, i32 }
%class.SkTDArray.34 = type { float*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.sk_sp.29 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkPath = type <{ %class.sk_sp.32, i32, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", i8, i8 }>
%class.sk_sp.32 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.33, %class.SkTDArray.34, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.40 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.40 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41", [3 x i8] }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%"class.sksg::Path" = type { %"class.sksg::GeometryNode.base", [6 x i8], %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%struct.SkV2 = type { float, float }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter" = type <{ %"class.skottie::internal::DiscardableAdapterBase", i32, %struct.SkV2, float, float, float, float, float, float, [4 x i8] }>
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.31 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.31 = type { %"class.sksg::Path"* }
%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.33, %class.SkTDArray.34, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZZN7skottie8internal12ShapeBuilder22AttachPolystarGeometryERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEE6gTypes = internal unnamed_addr constant [2 x i32] [i32 0, i32 1], align 4
@.str = private unnamed_addr constant [3 x i8] c"sy\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"Unknown polystar type.\00", align 1
@_ZTVN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapter6onSyncEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"ir\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@__const._ZN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapter6onSyncEv.poly = private unnamed_addr constant { %class.SkTDArray, %class.SkTDArray.33, %class.SkTDArray.34, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 } { %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.33 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.34 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder22AttachPolystarGeometryERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE(%class.sk_sp.29* noalias nocapture sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = alloca %class.sk_sp.6, align 8
  %6 = alloca i64, align 8
  %7 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #14
  %8 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  store i64 -6148914691236517206, i64* %6, align 8
  %9 = call zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %7, i64* nonnull %6) #14
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  br label %15

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %13 = add i64 %12, -1
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10, %11
  %16 = getelementptr inbounds %"class.skjson::ObjectValue", %"class.skjson::ObjectValue"* %1, i64 0, i32 0, i32 0
  call void (%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"* %2, i32 1, %"class.skjson::Value"* %16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #14
  %17 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %0, i64 0, i32 0
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %17, align 8
  br label %168

18:                                               ; preds = %11
  %19 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZN7skottie8internal12ShapeBuilder22AttachPolystarGeometryERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEE6gTypes, i64 0, i64 %13
  %20 = call i8* @_Znwm(i64 96) #15, !noalias !2
  %21 = load i32, i32* %19, align 4, !noalias !2
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 4, !noalias !2
  %24 = bitcast i8* %20 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %20, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 25, i1 false) #14, !noalias !2
  %26 = getelementptr inbounds i8, i8* %20, i64 48
  %27 = call i8* @_Znwm(i64 64) #15, !noalias !7
  %28 = bitcast i8* %27 to %"class.sksg::Path"*
  %29 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #14, !noalias !7
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %4) #14, !noalias !7
  call void @_ZN4sksg4PathC1ERK6SkPath(%"class.sksg::Path"* nonnull %28, %class.SkPath* nonnull dereferenceable(16) %4) #14, !noalias !7
  %30 = bitcast i8* %26 to i8**
  store i8* %27, i8** %30, align 8, !alias.scope !10, !noalias !2
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #14, !noalias !7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !noalias !2
  %31 = getelementptr inbounds i8, i8* %20, i64 56
  %32 = bitcast i8* %31 to i32*
  store i32 %21, i32* %32, align 8, !noalias !2
  %33 = getelementptr inbounds i8, i8* %20, i64 60
  %34 = bitcast i8* %33 to %struct.SkV2*
  %35 = getelementptr inbounds i8, i8* %20, i64 68
  %36 = bitcast i8* %35 to float*
  %37 = getelementptr inbounds i8, i8* %20, i64 72
  %38 = bitcast i8* %37 to float*
  %39 = getelementptr inbounds i8, i8* %20, i64 76
  %40 = bitcast i8* %39 to float*
  %41 = getelementptr inbounds i8, i8* %20, i64 80
  %42 = bitcast i8* %41 to float*
  %43 = getelementptr inbounds i8, i8* %20, i64 84
  %44 = bitcast i8* %43 to float*
  %45 = getelementptr inbounds i8, i8* %20, i64 88
  %46 = bitcast i8* %45 to float*
  %47 = bitcast i8* %20 to %"class.skottie::internal::AnimatablePropertyContainer"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 32, i1 false) #14, !noalias !2
  %48 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #14, !noalias !2
  %49 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %48, i64 0, i32 0, i64 0
  %50 = load i8, i8* %49, align 8, !noalias !2
  %51 = and i8 %50, 7
  %52 = icmp eq i8 %51, 7
  %53 = bitcast %"class.skjson::Value"* %48 to %"class.skjson::ObjectValue"*
  %54 = select i1 %52, %"class.skjson::ObjectValue"* %53, %"class.skjson::ObjectValue"* null
  %55 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %54, float* %36) #14, !noalias !2
  %56 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #14, !noalias !2
  %57 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %56, i64 0, i32 0, i64 0
  %58 = load i8, i8* %57, align 8, !noalias !2
  %59 = and i8 %58, 7
  %60 = icmp eq i8 %59, 7
  %61 = bitcast %"class.skjson::Value"* %56 to %"class.skjson::ObjectValue"*
  %62 = select i1 %60, %"class.skjson::ObjectValue"* %61, %"class.skjson::ObjectValue"* null
  %63 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %62, %struct.SkV2* %34) #14, !noalias !2
  %64 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #14, !noalias !2
  %65 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %64, i64 0, i32 0, i64 0
  %66 = load i8, i8* %65, align 8, !noalias !2
  %67 = and i8 %66, 7
  %68 = icmp eq i8 %67, 7
  %69 = bitcast %"class.skjson::Value"* %64 to %"class.skjson::ObjectValue"*
  %70 = select i1 %68, %"class.skjson::ObjectValue"* %69, %"class.skjson::ObjectValue"* null
  %71 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %70, float* %38) #14, !noalias !2
  %72 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #14, !noalias !2
  %73 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %72, i64 0, i32 0, i64 0
  %74 = load i8, i8* %73, align 8, !noalias !2
  %75 = and i8 %74, 7
  %76 = icmp eq i8 %75, 7
  %77 = bitcast %"class.skjson::Value"* %72 to %"class.skjson::ObjectValue"*
  %78 = select i1 %76, %"class.skjson::ObjectValue"* %77, %"class.skjson::ObjectValue"* null
  %79 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %78, float* %40) #14, !noalias !2
  %80 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #14, !noalias !2
  %81 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %80, i64 0, i32 0, i64 0
  %82 = load i8, i8* %81, align 8, !noalias !2
  %83 = and i8 %82, 7
  %84 = icmp eq i8 %83, 7
  %85 = bitcast %"class.skjson::Value"* %80 to %"class.skjson::ObjectValue"*
  %86 = select i1 %84, %"class.skjson::ObjectValue"* %85, %"class.skjson::ObjectValue"* null
  %87 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %86, float* %42) #14, !noalias !2
  %88 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #14, !noalias !2
  %89 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %88, i64 0, i32 0, i64 0
  %90 = load i8, i8* %89, align 8, !noalias !2
  %91 = and i8 %90, 7
  %92 = icmp eq i8 %91, 7
  %93 = bitcast %"class.skjson::Value"* %88 to %"class.skjson::ObjectValue"*
  %94 = select i1 %92, %"class.skjson::ObjectValue"* %93, %"class.skjson::ObjectValue"* null
  %95 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %94, float* %44) #14, !noalias !2
  %96 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #14, !noalias !2
  %97 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %96, i64 0, i32 0, i64 0
  %98 = load i8, i8* %97, align 8, !noalias !2
  %99 = and i8 %98, 7
  %100 = icmp eq i8 %99, 7
  %101 = bitcast %"class.skjson::Value"* %96 to %"class.skjson::ObjectValue"*
  %102 = select i1 %100, %"class.skjson::ObjectValue"* %101, %"class.skjson::ObjectValue"* null
  %103 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %102, float* %46) #14, !noalias !2
  %104 = ptrtoint i8* %20 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %47) #14, !noalias !2
  %105 = bitcast i8* %26 to %"class.sksg::Path"**
  %106 = load %"class.sksg::Path"*, %"class.sksg::Path"** %105, align 8, !noalias !11
  %107 = icmp eq %"class.sksg::Path"* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %18
  %109 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 1 monotonic
  br label %111

111:                                              ; preds = %18, %108
  %112 = ptrtoint %"class.sksg::Path"* %106 to i64
  %113 = bitcast i8* %25 to %class.sk_sp.6**
  %114 = load %class.sk_sp.6*, %class.sk_sp.6** %113, align 8, !noalias !11
  %115 = getelementptr inbounds i8, i8* %20, i64 24
  %116 = bitcast i8* %115 to %class.sk_sp.6**
  %117 = load %class.sk_sp.6*, %class.sk_sp.6** %116, align 8, !noalias !11
  %118 = icmp eq %class.sk_sp.6* %114, %117
  br i1 %118, label %151, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %2, i64 0, i32 11
  %121 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %120, align 8, !noalias !11
  %122 = bitcast %class.sk_sp.6* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #14, !noalias !11
  %123 = bitcast %class.sk_sp.6* %5 to i64*
  store i64 %104, i64* %123, align 8, !noalias !11
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %121, i64 0, i32 0, i32 1
  %125 = load %class.sk_sp.6*, %class.sk_sp.6** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %121, i64 0, i32 0, i32 2, i32 0, i32 0
  %127 = load %class.sk_sp.6*, %class.sk_sp.6** %126, align 8
  %128 = icmp ult %class.sk_sp.6* %125, %127
  br i1 %128, label %129, label %135

129:                                              ; preds = %119
  %130 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %130, align 8, !noalias !11
  %131 = bitcast %class.sk_sp.6* %125 to i64*
  store i64 %104, i64* %131, align 8
  %132 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %125, i64 1
  %133 = ptrtoint %class.sk_sp.6* %132 to i64
  %134 = bitcast %class.sk_sp.6** %124 to i64*
  store i64 %133, i64* %134, align 8
  br label %136

135:                                              ; preds = %119
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %121, %class.sk_sp.6* nonnull dereferenceable(8) %5) #14
  br label %136

136:                                              ; preds = %135, %129
  %137 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %138 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %137, align 8, !noalias !11
  %139 = icmp eq %"class.skottie::internal::Animator"* %138, null
  br i1 %139, label %150, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %138, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 -1 acq_rel
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = bitcast %"class.skottie::internal::Animator"* %138 to %class.SkRefCntBase*
  %146 = bitcast %"class.skottie::internal::Animator"* %138 to void (%class.SkRefCntBase*)***
  %147 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, i64 2
  %149 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, align 8
  call void %149(%class.SkRefCntBase* nonnull %145) #14
  br label %150

150:                                              ; preds = %144, %140, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #14, !noalias !11
  br label %166

151:                                              ; preds = %111
  %152 = bitcast i8* %20 to %"class.skottie::internal::Animator"*
  %153 = bitcast i8* %20 to i1 (%"class.skottie::internal::Animator"*, float)***
  %154 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %153, align 8, !noalias !11
  %155 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %154, i64 3
  %156 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %155, align 8
  %157 = call zeroext i1 %156(%"class.skottie::internal::Animator"* nonnull %152, float 0.000000e+00) #14
  %158 = atomicrmw add i32* %23, i32 -1 acq_rel, !noalias !11
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %166

160:                                              ; preds = %151
  %161 = bitcast i8* %20 to %class.SkRefCntBase*
  %162 = bitcast i8* %20 to void (%class.SkRefCntBase*)***
  %163 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %162, align 8, !noalias !11
  %164 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, i64 2
  %165 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, align 8
  call void %165(%class.SkRefCntBase* nonnull %161) #14
  br label %166

166:                                              ; preds = %160, %151, %150
  %167 = bitcast %class.sk_sp.29* %0 to i64*
  store i64 %112, i64* %167, align 8
  br label %168

168:                                              ; preds = %166, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i64*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.sksg::Path"*, %"class.sksg::Path"** %3, align 8
  %5 = icmp eq %"class.sksg::Path"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::Path"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::Path"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #14
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = alloca %class.SkPathBuilder, align 8
  %3 = alloca %class.SkPath, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 3
  %5 = load float, float* %4, align 4
  %6 = fadd float %5, 5.000000e-01
  %7 = tail call float @llvm.floor.f32(float %6)
  %8 = fcmp olt float %7, 0x41DFFFFFE0000000
  %9 = select i1 %8, float %7, float 0x41DFFFFFE0000000
  %10 = fcmp ogt float %9, 0xC1DFFFFFE0000000
  %11 = select i1 %10, float %9, float 0xC1DFFFFFE0000000
  %12 = fptosi float %11 to i32
  %13 = icmp slt i32 %12, 100000
  %14 = select i1 %13, i32 %12, i32 100000
  %15 = icmp sgt i32 %12, 0
  %16 = select i1 %15, i32 %14, i32 0
  %17 = uitofp i32 %16 to float
  %18 = fdiv float 0x401921FB60000000, %17
  %19 = bitcast %class.SkPathBuilder* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %19) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.33, %class.SkTDArray.34, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZN7skottie8internal12_GLOBAL__N_123PolystarGeometryAdapter6onSyncEv.poly to i8*), i64 88, i1 false)
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %2) #14
  %20 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 4
  %21 = load float, float* %20, align 8
  %22 = fadd float %21, -9.000000e+01
  %23 = fmul float %22, 0x3F91DF46A0000000
  %24 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 6
  %25 = load float, float* %24, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 2, i32 0
  %27 = load float, float* %26, align 4
  %28 = call float @cosf(float %23) #14
  %29 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 2, i32 1
  %30 = load float, float* %29, align 4
  %31 = call float @sinf(float %23) #14
  %32 = insertelement <2 x float> undef, float %25, i32 0
  %33 = shufflevector <2 x float> %32, <2 x float> undef, <2 x i32> zeroinitializer
  %34 = insertelement <2 x float> undef, float %28, i32 0
  %35 = insertelement <2 x float> %34, float %31, i32 1
  %36 = fmul <2 x float> %33, %35
  %37 = insertelement <2 x float> undef, float %27, i32 0
  %38 = insertelement <2 x float> %37, float %30, i32 1
  %39 = fadd <2 x float> %38, %36
  %40 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* nonnull %2, <2 x float> %39) #14
  %41 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  %44 = zext i1 %43 to i32
  %45 = shl i32 %16, %44
  call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* nonnull %2, i32 %45, i32 %45) #14
  br i1 %15, label %46, label %49

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 5
  %48 = fmul float %18, 5.000000e-01
  br label %60

49:                                               ; preds = %81, %1
  %50 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* nonnull %2) #14
  %51 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::PolystarGeometryAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %52 = load %"class.sksg::Path"*, %"class.sksg::Path"** %51, align 8
  %53 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %3, %class.SkPathBuilder* nonnull %2) #14
  %54 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %52, i64 0, i32 2
  %55 = call zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16) %54, %class.SkPath* nonnull dereferenceable(16) %3) #14
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %54, %class.SkPath* nonnull dereferenceable(16) %3) #14
  %58 = bitcast %"class.sksg::Path"* %52 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %58, i1 zeroext true) #14
  br label %59

59:                                               ; preds = %49, %56
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %19) #14
  ret void

60:                                               ; preds = %46, %81
  %61 = phi i32 [ 0, %46 ], [ %97, %81 ]
  %62 = phi float [ %23, %46 ], [ %82, %81 ]
  %63 = load i32, i32* %41, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %81

65:                                               ; preds = %60
  %66 = load float, float* %47, align 4
  %67 = fadd float %48, %62
  %68 = load float, float* %26, align 4
  %69 = call float @cosf(float %67) #14
  %70 = load float, float* %29, align 4
  %71 = call float @sinf(float %67) #14
  %72 = insertelement <2 x float> undef, float %66, i32 0
  %73 = shufflevector <2 x float> %72, <2 x float> undef, <2 x i32> zeroinitializer
  %74 = insertelement <2 x float> undef, float %69, i32 0
  %75 = insertelement <2 x float> %74, float %71, i32 1
  %76 = fmul <2 x float> %73, %75
  %77 = insertelement <2 x float> undef, float %68, i32 0
  %78 = insertelement <2 x float> %77, float %70, i32 1
  %79 = fadd <2 x float> %78, %76
  %80 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %2, <2 x float> %79) #14
  br label %81

81:                                               ; preds = %65, %60
  %82 = fadd float %18, %62
  %83 = load float, float* %24, align 8
  %84 = load float, float* %26, align 4
  %85 = call float @cosf(float %82) #14
  %86 = load float, float* %29, align 4
  %87 = call float @sinf(float %82) #14
  %88 = insertelement <2 x float> undef, float %83, i32 0
  %89 = shufflevector <2 x float> %88, <2 x float> undef, <2 x i32> zeroinitializer
  %90 = insertelement <2 x float> undef, float %85, i32 0
  %91 = insertelement <2 x float> %90, float %87, i32 1
  %92 = fmul <2 x float> %89, %91
  %93 = insertelement <2 x float> undef, float %84, i32 0
  %94 = insertelement <2 x float> %93, float %86, i32 1
  %95 = fadd <2 x float> %94, %92
  %96 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %2, <2 x float> %95) #14
  %97 = add nuw nsw i32 %61, 1
  %98 = icmp ult i32 %97, %16
  br i1 %98, label %60, label %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::Path"*, %"class.sksg::Path"** %3, align 8
  %5 = icmp eq %"class.sksg::Path"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::Path"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::Path"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #14
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare void @_ZN4sksg4PathC1ERK6SkPath(%"class.sksg::Path"*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #9

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %struct.SkV2*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder*) local_unnamed_addr #2

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #9

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #11

declare void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !12

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #15
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEE4MakeIJRKN6skjson11ObjectValueERPKNS0_16AnimationBuilderERKNS3_4TypeEEEE5sk_spIS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_123PolystarGeometryAdapterEN4sksg4PathEE4MakeIJRKN6skjson11ObjectValueERPKNS0_16AnimationBuilderERKNS3_4TypeEEEE5sk_spIS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_123PolystarGeometryAdapterEJRKN6skjson11ObjectValueERPKS1_RKNS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_123PolystarGeometryAdapterEJRKN6skjson11ObjectValueERPKS1_RKNS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_ZN4sksg4Path4MakeEv: argument 0"}
!9 = distinct !{!9, !"_ZN4sksg4Path4MakeEv"}
!10 = !{!8}
!11 = !{!5}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
