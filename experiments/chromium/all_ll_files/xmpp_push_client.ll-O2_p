; ModuleID = '../../jingle/notifier/listener/xmpp_push_client.cc'
source_filename = "../../jingle/notifier/listener/xmpp_push_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.notifier::XmppPushClient" = type { %"class.notifier::PushClient", %"class.notifier::Login::Delegate", %"class.notifier::PushNotificationsListenTask::Delegate", %"class.notifier::PushNotificationsSubscribeTask::Delegate", %"class.notifier::SendPingTask::Delegate", %"class.base::ThreadChecker", %"struct.notifier::NotifierOptions", %"class.base::ObserverList", %"class.std::__1::vector.176", %"class.jingle_xmpp::XmppClientSettings", %"class.std::__1::unique_ptr.183", %"class.base::WeakPtr.234", %"class.std::__1::vector.235" }
%"class.notifier::PushClient" = type { i32 (...)** }
%"class.notifier::Login::Delegate" = type { i32 (...)** }
%"class.notifier::PushNotificationsListenTask::Delegate" = type { i32 (...)** }
%"class.notifier::PushNotificationsSubscribeTask::Delegate" = type { i32 (...)** }
%"class.notifier::SendPingTask::Delegate" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"struct.notifier::NotifierOptions" = type { i8, i8, i8, [5 x i8], %"class.net::HostPortPair", i32, %"class.std::__1::basic_string", %"struct.jingle_glue::NetworkServiceConfig", %"class.network::NetworkConnectionTracker"* }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.jingle_glue::NetworkServiceConfig" = type { %"class.base::RepeatingCallback", %class.scoped_refptr.2 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.2 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3" }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.network::NetworkConnectionTracker" = type { %"class.network::mojom::NetworkChangeManagerClient", %"class.base::RepeatingCallback.4", %class.scoped_refptr.5, %"class.base::Lock", %"class.std::__1::list", i32, %class.scoped_refptr.11, %class.scoped_refptr.11, %"class.mojo::Receiver" }
%"class.network::mojom::NetworkChangeManagerClient" = type { i32 (...)** }
%"class.base::RepeatingCallback.4" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.5 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%class.scoped_refptr.11 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.network::mojom::NetworkChangeManagerClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.12, %"class.std::__1::unique_ptr.120", %"class.base::WeakPtrFactory.170" }
%class.scoped_refptr.12 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.5, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.83", %"class.absl::optional.88", %"class.absl::optional.46", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.111", i8, [7 x i8], %class.scoped_refptr.5, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13" }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.24", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.5, %"class.std::__1::unique_ptr.30", %"class.absl::optional", %"struct.std::__1::atomic.42", i8, i8, i8, i8, i32, i32, %"class.absl::optional.46", %"class.std::__1::unique_ptr.51", i8, i64, %class.scoped_refptr.79, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.82" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.5, i8, %"class.mojo::ScopedHandleBase.33", %class.scoped_refptr.34, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.35", i8*, %"class.base::WeakPtrFactory.36" }
%"class.mojo::ScopedHandleBase.33" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.34 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.35" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.36" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.41", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.41" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.54", i8, i64, %class.scoped_refptr.55, %class.scoped_refptr.75 }
%"class.base::RepeatingCallback.54" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.55 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.64", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%class.scoped_refptr.75 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.79 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.249", [4 x i8], %"class.base::RepeatingCallback.123", %class.scoped_refptr.5, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.250", [4 x i8] }>
%"class.base::RefCountedThreadSafe.249" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.123" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl.253" }
%"struct.std::__1::__cxx_atomic_impl.253" = type { %"struct.std::__1::__cxx_atomic_base_impl.254" }
%"struct.std::__1::__cxx_atomic_base_impl.254" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.82" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, [7 x i8], %union.anon.92 }
%union.anon.92 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.97 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.97 = type { %"class.std::__1::map.99" }
%"class.std::__1::map.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.110"*, i64 }
%"class.std::__1::unique_ptr.110" = type opaque
%"class.std::__1::map.111" = type { %"class.std::__1::__tree.112" }
%"class.std::__1::__tree.112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.123", %"class.base::OnceCallback.124", %"class.absl::optional.125", %"class.absl::optional.130", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.137", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.145", %"class.std::__1::map.156", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.165", i8, %class.scoped_refptr.5, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.166" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.124" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.5, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.135" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.135" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.140", %class.scoped_refptr.141 }
%"class.base::RepeatingCallback.140" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.141 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::OnceCallback.165" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.170" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.network::mojom::NetworkChangeManagerClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.network::mojom::NetworkChangeManagerClient"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.171" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"*, %"class.std::__1::__compressed_pair.178" }
%"struct.notifier::Subscription" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.notifier::Subscription"* }
%"class.jingle_xmpp::XmppClientSettings" = type <{ %"class.jingle_xmpp::XmppUserSettings", %"class.net::HostPortPair", i32, [4 x i8] }>
%"class.jingle_xmpp::XmppUserSettings" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.notifier::Login"* }
%"class.notifier::Login" = type { %"class.network::NetworkConnectionTracker::NetworkConnectionObserver", %"class.net::NetworkChangeNotifier::DNSObserver", %"class.notifier::SingleLoginAttempt::Delegate", %"class.notifier::Login::Delegate"*, %"class.notifier::LoginSettings", %"class.network::NetworkConnectionTracker"*, %"class.std::__1::unique_ptr.196", %"class.base::TimeDelta", %"class.base::OneShotTimer" }
%"class.network::NetworkConnectionTracker::NetworkConnectionObserver" = type { i32 (...)** }
%"class.net::NetworkChangeNotifier::DNSObserver" = type { i32 (...)**, %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.base::ObserverListThreadSafe.187"* }
%"class.base::ObserverListThreadSafe.187" = type opaque
%"class.notifier::SingleLoginAttempt::Delegate" = type { i32 (...)** }
%"class.notifier::LoginSettings" = type { %"class.jingle_xmpp::XmppClientSettings", %"class.base::RepeatingCallback", %"class.std::__1::vector.188", i8, %"class.std::__1::basic_string", %"struct.net::NetworkTrafficAnnotationTag", [4 x i8], %"struct.notifier::ServerInformation", %"class.base::Time" }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.notifier::ServerInformation"*, %"struct.notifier::ServerInformation"*, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.notifier::ServerInformation"* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"struct.notifier::ServerInformation" = type { %"class.net::HostPortPair", i32, [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.195" }
%"class.base::time_internal::TimeBase.195" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.notifier::SingleLoginAttempt"* }
%"class.notifier::SingleLoginAttempt" = type { %"class.notifier::XmppConnection::Delegate", %"class.notifier::LoginSettings", %"class.notifier::SingleLoginAttempt::Delegate"*, %"class.std::__1::vector.199", %"class.std::__1::__wrap_iter", %"class.std::__1::unique_ptr.206" }
%"class.notifier::XmppConnection::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.notifier::ConnectionSettings"*, %"struct.notifier::ConnectionSettings"*, %"class.std::__1::__compressed_pair.201" }
%"struct.notifier::ConnectionSettings" = type { %"class.net::HostPortPair", i32, i32 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.notifier::ConnectionSettings"* }
%"class.std::__1::__wrap_iter" = type { %"struct.notifier::ConnectionSettings"* }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.notifier::XmppConnection"* }
%"class.notifier::XmppConnection" = type { %"class.sigslot::has_slots", %"class.std::__1::unique_ptr.218", %"class.base::WeakPtr.224", i8, %"class.notifier::XmppConnection::Delegate"* }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.jingle_glue::TaskPump"* }
%"class.jingle_glue::TaskPump" = type opaque
%"class.base::WeakPtr.224" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.234" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.notifier::Notification"*, %"struct.notifier::Notification"*, %"class.std::__1::__compressed_pair.244" }
%"struct.notifier::Notification" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.237", %"class.std::__1::basic_string" }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.notifier::Recipient"*, %"struct.notifier::Recipient"*, %"class.std::__1::__compressed_pair.239" }
%"struct.notifier::Recipient" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.notifier::Recipient"* }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.notifier::Notification"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.jingle_xmpp::XmppTaskParentInterface" = type { %"class.jingle_xmpp::Task.base", [4 x i8] }
%"class.jingle_xmpp::Task.base" = type <{ %"class.jingle_xmpp::TaskParent", i32, i8, i8, i8, i8, i8, [7 x i8], i64, i64, i32, i8, [3 x i8], i32 }>
%"class.jingle_xmpp::TaskParent" = type { i32 (...)**, %"class.jingle_xmpp::TaskParent"*, %"class.jingle_xmpp::TaskRunner"*, i8, %"class.std::__1::unique_ptr.255" }
%"class.jingle_xmpp::TaskRunner" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::set.258"* }
%"class.std::__1::set.258" = type opaque
%"class.notifier::PushNotificationsListenTask" = type { %"class.jingle_xmpp::XmppTask", %"class.notifier::PushNotificationsListenTask::Delegate"* }
%"class.jingle_xmpp::XmppTask" = type { %"class.jingle_xmpp::XmppTaskBase", %"class.jingle_xmpp::XmppStanzaHandler", %"class.sigslot::has_slots", i8, %"class.std::__1::deque", %"class.std::__1::unique_ptr.271", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmppTaskBase" = type { %"class.jingle_xmpp::XmppTaskParentInterface.base", %"class.jingle_xmpp::XmppTaskParentInterface"* }
%"class.jingle_xmpp::XmppTaskParentInterface.base" = type { %"class.jingle_xmpp::Task.base" }
%"class.jingle_xmpp::XmppStanzaHandler" = type { i32 (...)** }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.267" }
%"struct.std::__1::__split_buffer" = type { %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"***, %"class.std::__1::__compressed_pair.262" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.jingle_xmpp::XmlElement"*** }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.jingle_xmpp::XmlElement"* }
%"class.jingle_xmpp::Task" = type <{ %"class.jingle_xmpp::TaskParent", i32, i8, i8, i8, i8, i8, [7 x i8], i64, i64, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.notifier::PushNotificationsSubscribeTask" = type { %"class.jingle_xmpp::XmppTask", %"class.std::__1::vector.176", %"class.notifier::PushNotificationsSubscribeTask::Delegate"* }
%"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.notifier::PushClientObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.notifier::PushNotificationsSendUpdateTask" = type { %"class.jingle_xmpp::XmppTask", %"struct.notifier::Notification" }
%"class.notifier::SendPingTask" = type { %"class.jingle_xmpp::XmppTask", %"class.std::__1::basic_string", %"class.notifier::SendPingTask::Delegate"* }

$_ZN11jingle_xmpp16XmppUserSettingsD2Ev = comdat any

$_ZN11jingle_xmpp16XmppUserSettingsaSEOS0_ = comdat any

$_ZNSt3__16vectorIN8notifier12SubscriptionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN8notifier12NotificationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZTVN8notifier14XmppPushClientE = hidden unnamed_addr constant { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClientD2Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClientD0Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"class.notifier::PushClientObserver"*)* @_ZN8notifier14XmppPushClient11AddObserverEPNS_18PushClientObserverE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"class.notifier::PushClientObserver"*)* @_ZN8notifier14XmppPushClient14RemoveObserverEPNS_18PushClientObserverE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"class.std::__1::vector.176"*)* @_ZN8notifier14XmppPushClient19UpdateSubscriptionsERKNSt3__16vectorINS_12SubscriptionENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN8notifier14XmppPushClient17UpdateCredentialsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKN3net27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)* @_ZN8notifier14XmppPushClient16SendNotificationERKNS_12NotificationE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClient8SendPingEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"class.base::WeakPtr.234"*)* @_ZN8notifier14XmppPushClient9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClient24OnTransientDisconnectionEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClient21OnCredentialsRejectedEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)* @_ZN8notifier14XmppPushClient22OnNotificationReceivedERKNS_12NotificationE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClient12OnSubscribedEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClient19OnSubscriptionErrorEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClient22OnPingResponseReceivedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"class.base::WeakPtr.234"*)* @_ZThn8_N8notifier14XmppPushClient9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn8_N8notifier14XmppPushClient24OnTransientDisconnectionEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn8_N8notifier14XmppPushClient21OnCredentialsRejectedEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn8_N8notifier14XmppPushClientD1Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn8_N8notifier14XmppPushClientD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)* @_ZThn16_N8notifier14XmppPushClient22OnNotificationReceivedERKNS_12NotificationE to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn16_N8notifier14XmppPushClientD1Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn16_N8notifier14XmppPushClientD0Ev to i8*)], [6 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn24_N8notifier14XmppPushClientD1Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn24_N8notifier14XmppPushClientD0Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn24_N8notifier14XmppPushClient12OnSubscribedEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn24_N8notifier14XmppPushClient19OnSubscriptionErrorEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn32_N8notifier14XmppPushClient22OnPingResponseReceivedEv to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn32_N8notifier14XmppPushClientD1Ev to i8*), i8* bitcast (void (%"class.notifier::XmppPushClient"*)* @_ZThn32_N8notifier14XmppPushClientD0Ev to i8*)] }, align 8

@_ZN8notifier14XmppPushClientC1ERKNS_15NotifierOptionsE = hidden unnamed_addr alias void (%"class.notifier::XmppPushClient"*, %"struct.notifier::NotifierOptions"*), void (%"class.notifier::XmppPushClient"*, %"struct.notifier::NotifierOptions"*)* @_ZN8notifier14XmppPushClientC2ERKNS_15NotifierOptionsE
@_ZN8notifier14XmppPushClientD1Ev = hidden unnamed_addr alias void (%"class.notifier::XmppPushClient"*), void (%"class.notifier::XmppPushClient"*)* @_ZN8notifier14XmppPushClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClientC2ERKNS_15NotifierOptionsE(%"class.notifier::XmppPushClient"*, %"struct.notifier::NotifierOptions"* dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 4, i32 0
  %5 = bitcast %"class.notifier::XmppPushClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 6
  tail call void @_ZN8notifier15NotifierOptionsC1ERKS0_(%"struct.notifier::NotifierOptions"* %7, %"struct.notifier::NotifierOptions"* dereferenceable(96) %1) #9
  %8 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %9 = bitcast %"class.base::ObserverList"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #9
  %10 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %10, %"class.base::internal::LinkNodeBase"* %10, %"class.base::internal::LinkNodeBase"* %10) #9
  %11 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 0, i32 8
  %15 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #9
  %16 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 1
  %17 = bitcast %"class.std::__1::vector.176"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 173, i1 false)
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %16) #9
  %18 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 2
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 10
  %20 = bitcast %"class.std::__1::unique_ptr.183"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %21) #9
  %22 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12
  %23 = bitcast %"class.std::__1::vector.235"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  ret void
}

declare void @_ZN8notifier15NotifierOptionsC1ERKS0_(%"struct.notifier::NotifierOptions"*, %"struct.notifier::NotifierOptions"* dereferenceable(96)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 1
  %3 = bitcast %"class.notifier::XmppPushClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 2
  %5 = bitcast %"class.notifier::PushNotificationsListenTask::Delegate"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.notifier::SendPingTask::Delegate", %"class.notifier::SendPingTask::Delegate"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }, { [17 x i8*], [7 x i8*], [5 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN8notifier14XmppPushClientE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12
  %9 = getelementptr inbounds %"class.std::__1::vector.235", %"class.std::__1::vector.235"* %8, i64 0, i32 0, i32 0
  %10 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %9, align 8
  %11 = icmp eq %"struct.notifier::Notification"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %1
  %13 = bitcast %"struct.notifier::Notification"* %10 to i8*
  %14 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12, i32 0, i32 1
  %15 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %14, align 8
  %16 = icmp eq %"struct.notifier::Notification"* %15, %10
  br i1 %16, label %24, label %17

17:                                               ; preds = %12, %17
  %18 = phi %"struct.notifier::Notification"* [ %19, %17 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %18, i64 -1
  tail call void @_ZN8notifier12NotificationD1Ev(%"struct.notifier::Notification"* %19) #9
  %20 = icmp eq %"struct.notifier::Notification"* %19, %10
  br i1 %20, label %21, label %17

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::vector.235"* %8 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %12
  %25 = phi i8* [ %23, %21 ], [ %13, %12 ]
  store %"struct.notifier::Notification"* %10, %"struct.notifier::Notification"** %14, align 8
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %27) #9
  %28 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %29 = load %"class.notifier::Login"*, %"class.notifier::Login"** %28, align 8
  store %"class.notifier::Login"* null, %"class.notifier::Login"** %28, align 8
  %30 = icmp eq %"class.notifier::Login"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.notifier::Login"* %29 to void (%"class.notifier::Login"*)***
  %33 = load void (%"class.notifier::Login"*)**, void (%"class.notifier::Login"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.notifier::Login"*)*, void (%"class.notifier::Login"*)** %33, i64 2
  %35 = load void (%"class.notifier::Login"*)*, void (%"class.notifier::Login"*)** %34, align 8
  tail call void %35(%"class.notifier::Login"* nonnull %29) #9
  br label %36

36:                                               ; preds = %26, %31
  %37 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 1
  %38 = bitcast %"class.net::HostPortPair"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %42
  %46 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN11jingle_xmpp16XmppUserSettingsD2Ev(%"class.jingle_xmpp::XmppUserSettings"* %46) #9
  %47 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 8
  %48 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %47, i64 0, i32 0, i32 0
  %49 = load %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"** %48, align 8
  %50 = icmp eq %"struct.notifier::Subscription"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %45
  %52 = bitcast %"struct.notifier::Subscription"* %49 to i8*
  %53 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 8, i32 0, i32 1
  %54 = load %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"** %53, align 8
  %55 = icmp eq %"struct.notifier::Subscription"* %54, %49
  br i1 %55, label %63, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"struct.notifier::Subscription"* [ %58, %56 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %57, i64 -1
  tail call void @_ZN8notifier12SubscriptionD1Ev(%"struct.notifier::Subscription"* %58) #9
  %59 = icmp eq %"struct.notifier::Subscription"* %58, %49
  br i1 %59, label %60, label %56

60:                                               ; preds = %56
  %61 = bitcast %"class.std::__1::vector.176"* %47 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %51
  %64 = phi i8* [ %62, %60 ], [ %52, %51 ]
  store %"struct.notifier::Subscription"* %49, %"struct.notifier::Subscription"** %53, align 8
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %45, %63
  %66 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  %67 = bitcast %"class.base::internal::LinkNodeBase"** %66 to %"class.base::LinkNode"**
  %68 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0
  %69 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %67, align 8
  %70 = icmp eq %"class.base::LinkNode"* %69, %68
  br i1 %70, label %83, label %71

71:                                               ; preds = %65, %80
  %72 = phi %"class.base::LinkNode"* [ %81, %80 ], [ %69, %65 ]
  %73 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %72, i64 1
  %74 = bitcast %"class.base::LinkNode"* %73 to %"class.base::ObserverList"**
  %75 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  %76 = icmp eq %"class.base::ObserverList"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %74, align 8
  %78 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %72, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %78) #9
  %79 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %67, align 8
  br label %80

80:                                               ; preds = %77, %71
  %81 = phi %"class.base::LinkNode"* [ %72, %71 ], [ %79, %77 ]
  %82 = icmp eq %"class.base::LinkNode"* %81, %68
  br i1 %82, label %83, label %71

83:                                               ; preds = %80, %65
  %84 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %85 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %84, align 8
  %86 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %85 to i64
  %89 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %90 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %85 to i8*
  tail call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %83, %87
  %93 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 6
  tail call void @_ZN8notifier15NotifierOptionsD1Ev(%"struct.notifier::NotifierOptions"* %93) #9
  tail call void @_ZN8notifier12SendPingTask8DelegateD2Ev(%"class.notifier::SendPingTask::Delegate"* %6) #9
  tail call void @_ZN8notifier27PushNotificationsListenTask8DelegateD2Ev(%"class.notifier::PushNotificationsListenTask::Delegate"* %4) #9
  tail call void @_ZN8notifier5Login8DelegateD2Ev(%"class.notifier::Login::Delegate"* %2) #9
  %94 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 0
  tail call void @_ZN8notifier10PushClientD2Ev(%"class.notifier::PushClient"* %94) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8notifier15NotifierOptionsD1Ev(%"struct.notifier::NotifierOptions"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8notifier12SendPingTask8DelegateD2Ev(%"class.notifier::SendPingTask::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8notifier27PushNotificationsListenTask8DelegateD2Ev(%"class.notifier::PushNotificationsListenTask::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8notifier5Login8DelegateD2Ev(%"class.notifier::Login::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8notifier10PushClientD2Ev(%"class.notifier::PushClient"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8notifier14XmppPushClientD1Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.244"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N8notifier14XmppPushClientD1Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast %"struct.notifier::Notification"** %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N8notifier14XmppPushClientD1Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12
  %3 = bitcast %"class.std::__1::vector.235"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N8notifier14XmppPushClientD1Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 11, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClientD0Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %0) #9
  %2 = bitcast %"class.notifier::XmppPushClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8notifier14XmppPushClientD0Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.244"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  %4 = bitcast %"class.std::__1::__compressed_pair.244"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N8notifier14XmppPushClientD0Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast %"struct.notifier::Notification"** %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  %4 = bitcast %"struct.notifier::Notification"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N8notifier14XmppPushClientD0Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12
  %3 = bitcast %"class.std::__1::vector.235"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  %4 = bitcast %"class.std::__1::vector.235"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N8notifier14XmppPushClientD0Ev(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 11, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClientD2Ev(%"class.notifier::XmppPushClient"* %3) #9
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE(%"class.notifier::XmppPushClient"*, %"class.base::WeakPtr.234"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.base::WeakPtr.234", %"class.base::WeakPtr.234"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %4, align 8
  %6 = icmp eq %"class.base::internal::WeakReference::Flag"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %7, %2
  %11 = ptrtoint %"class.base::internal::WeakReference::Flag"* %5 to i64
  %12 = bitcast %"class.base::WeakPtr.234"* %3 to i64*
  %13 = getelementptr inbounds %"class.base::WeakPtr.234", %"class.base::WeakPtr.234"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %13, align 8
  store i64 %11, i64* %12, align 8
  %15 = icmp eq %"class.base::internal::WeakReference::Flag"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %14) #9
  %21 = bitcast %"class.base::internal::WeakReference::Flag"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %10, %16, %20
  %23 = getelementptr inbounds %"class.base::WeakPtr.234", %"class.base::WeakPtr.234"* %1, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 1
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::WeakPtr.234", %"class.base::WeakPtr.234"* %3, i64 0, i32 0, i32 0
  %27 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %26) #9
  br i1 %27, label %28, label %78

28:                                               ; preds = %22
  %29 = bitcast i64* %25 to %"class.jingle_xmpp::XmppTaskParentInterface"**
  %30 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %29, align 8
  %31 = icmp eq %"class.jingle_xmpp::XmppTaskParentInterface"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 256) #10
  %34 = bitcast i8* %33 to %"class.notifier::PushNotificationsListenTask"*
  %35 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %26) #9
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %29, align 8
  br label %38

38:                                               ; preds = %32, %36
  %39 = phi %"class.jingle_xmpp::XmppTaskParentInterface"* [ %37, %36 ], [ null, %32 ]
  %40 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 2
  tail call void @_ZN8notifier27PushNotificationsListenTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE(%"class.notifier::PushNotificationsListenTask"* nonnull %34, %"class.jingle_xmpp::XmppTaskParentInterface"* %39, %"class.notifier::PushNotificationsListenTask::Delegate"* %40) #9
  %41 = bitcast i8* %33 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4Task5StartEv(%"class.jingle_xmpp::Task"* nonnull %41) #9
  %42 = tail call i8* @_Znwm(i64 280) #10
  %43 = bitcast i8* %42 to %"class.notifier::PushNotificationsSubscribeTask"*
  %44 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %26) #9
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %29, align 8
  br label %47

47:                                               ; preds = %38, %45
  %48 = phi %"class.jingle_xmpp::XmppTaskParentInterface"* [ %46, %45 ], [ null, %38 ]
  %49 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 8
  %50 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 3
  tail call void @_ZN8notifier30PushNotificationsSubscribeTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceERKNSt3__16vectorINS_12SubscriptionENS4_9allocatorIS6_EEEEPNS0_8DelegateE(%"class.notifier::PushNotificationsSubscribeTask"* nonnull %43, %"class.jingle_xmpp::XmppTaskParentInterface"* %48, %"class.std::__1::vector.176"* dereferenceable(24) %49, %"class.notifier::PushNotificationsSubscribeTask::Delegate"* %50) #9
  %51 = bitcast i8* %42 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4Task5StartEv(%"class.jingle_xmpp::Task"* nonnull %51) #9
  %52 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12
  %53 = bitcast %"class.std::__1::vector.235"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 0, i64* %53, align 8
  %55 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12, i32 0, i32 1
  %56 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %55, align 8
  %57 = inttoptr i64 %54 to %"struct.notifier::Notification"*
  %58 = icmp eq %"struct.notifier::Notification"* %56, %57
  %59 = bitcast %"struct.notifier::Notification"** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false)
  br i1 %58, label %62, label %60

60:                                               ; preds = %47
  %61 = bitcast %"class.notifier::XmppPushClient"* %0 to void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)***
  br label %71

62:                                               ; preds = %71, %47
  %63 = icmp eq i64 %54, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %62
  br i1 %58, label %69, label %65

65:                                               ; preds = %64, %65
  %66 = phi %"struct.notifier::Notification"* [ %67, %65 ], [ %56, %64 ]
  %67 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %66, i64 -1
  tail call void @_ZN8notifier12NotificationD1Ev(%"struct.notifier::Notification"* %67) #9
  %68 = icmp eq %"struct.notifier::Notification"* %67, %57
  br i1 %68, label %69, label %65

69:                                               ; preds = %65, %64
  %70 = inttoptr i64 %54 to i8*
  tail call void @_ZdlPv(i8* %70) #10
  br label %78

71:                                               ; preds = %60, %71
  %72 = phi %"struct.notifier::Notification"* [ %57, %60 ], [ %76, %71 ]
  %73 = load void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)**, void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)*** %61, align 8
  %74 = getelementptr inbounds void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)*, void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)** %73, i64 6
  %75 = load void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)*, void (%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"*)** %74, align 8
  tail call void %75(%"class.notifier::XmppPushClient"* %0, %"struct.notifier::Notification"* dereferenceable(72) %72) #9
  %76 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %72, i64 1
  %77 = icmp eq %"struct.notifier::Notification"* %76, %56
  br i1 %77, label %62, label %71

78:                                               ; preds = %22, %69, %62, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8notifier27PushNotificationsListenTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE(%"class.notifier::PushNotificationsListenTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.notifier::PushNotificationsListenTask::Delegate"*) unnamed_addr #1

declare void @_ZN11jingle_xmpp4Task5StartEv(%"class.jingle_xmpp::Task"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8notifier30PushNotificationsSubscribeTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceERKNSt3__16vectorINS_12SubscriptionENS4_9allocatorIS6_EEEEPNS0_8DelegateE(%"class.notifier::PushNotificationsSubscribeTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.std::__1::vector.176"* dereferenceable(24), %"class.notifier::PushNotificationsSubscribeTask::Delegate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8notifier14XmppPushClient9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE(%"class.notifier::XmppPushClient"*, %"class.base::WeakPtr.234"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.244"* %3 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient9OnConnectEN4base7WeakPtrIN11jingle_xmpp23XmppTaskParentInterfaceEEE(%"class.notifier::XmppPushClient"* %4, %"class.base::WeakPtr.234"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient24OnTransientDisconnectionEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0
  %6 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  %7 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %2, i64 0, i32 0, i32 0
  %8 = bitcast %"class.base::internal::WeakReference"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %7, align 8
  %10 = bitcast %"class.base::internal::WeakPtrBase"* %5 to i64*
  %11 = getelementptr inbounds %"class.base::internal::WeakPtrBase", %"class.base::internal::WeakPtrBase"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.base::internal::WeakReference::Flag"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %12) #9
  %19 = bitcast %"class.base::internal::WeakReference::Flag"* %12 to i8*
  call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %14, %18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %21 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 1
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %23 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %27, align 8, !noalias !2
  %30 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8, !noalias !2
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %29, %31
  %33 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %33) #9
  br i1 %32, label %34, label %36

34:                                               ; preds = %20
  %35 = bitcast %"class.base::ObserverList"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #9, !alias.scope !2
  br label %76

36:                                               ; preds = %20
  store %"class.base::ObserverList"* %22, %"class.base::ObserverList"** %24, align 8, !alias.scope !2
  %37 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %33, %"class.base::internal::LinkNodeBase"* %37) #9
  store i64 0, i64* %25, align 8, !alias.scope !2
  %38 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  %39 = load i32, i32* %38, align 8, !noalias !2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %30 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !2
  %44 = bitcast %"class.base::ObserverList"* %22 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !2
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  br label %48

48:                                               ; preds = %41, %36
  %49 = phi i64 [ %47, %41 ], [ -1, %36 ]
  store i64 %49, i64* %26, align 8, !alias.scope !2
  %50 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8, !alias.scope !2
  %51 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %50, i64 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::ObserverList"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %57, %49
  %59 = select i1 %58, i64 %57, i64 %49
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %48
  %62 = inttoptr i64 %55 to %"class.base::internal::UncheckedObserverAdapter"*
  %63 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %50, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %62, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %76

67:                                               ; preds = %61, %71
  %68 = phi i64 [ %69, %71 ], [ 0, %61 ]
  %69 = add nuw i64 %68, 1
  store i64 %69, i64* %25, align 8, !alias.scope !2
  %70 = icmp ult i64 %69, %59
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %63, align 8
  %73 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %72, i64 %69, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %67, label %76

76:                                               ; preds = %67, %71, %34, %48, %61
  %77 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %81 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %81) #9
  %83 = bitcast %"class.base::ObserverList"** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #9, !alias.scope !5
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  br label %85

85:                                               ; preds = %325, %76
  %86 = phi %"class.base::ObserverList"* [ %84, %76 ], [ %323, %325 ]
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %25, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %26, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %88
  %102 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  br label %119

103:                                              ; preds = %88, %85
  %104 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %105 = icmp eq %"class.base::ObserverList"* %104, null
  br i1 %105, label %219, label %106

106:                                              ; preds = %103
  %107 = load i64, i64* %79, align 8
  %108 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %104, i64 0, i32 0, i32 0, i32 1
  %109 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.base::ObserverList"* %104 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = ashr exact i64 %113, 3
  %115 = load i64, i64* %80, align 8
  %116 = icmp ult i64 %114, %115
  %117 = select i1 %116, i64 %114, i64 %115
  %118 = icmp eq i64 %107, %117
  br i1 %118, label %128, label %119

119:                                              ; preds = %106, %101
  %120 = phi %"class.base::ObserverList"* [ %102, %101 ], [ %104, %106 ]
  %121 = icmp eq %"class.base::ObserverList"* %86, %120
  %122 = load i64, i64* %25, align 8
  %123 = load i64, i64* %79, align 8
  %124 = icmp eq i64 %122, %123
  %125 = and i1 %121, %124
  br i1 %125, label %126, label %313

126:                                              ; preds = %119
  %127 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %127, label %219, label %128

128:                                              ; preds = %106, %126
  %129 = phi %"class.base::ObserverList"* [ %86, %126 ], [ %104, %106 ]
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 1
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 1, i32 0, i32 0, i32 1
  %132 = bitcast %"class.base::internal::LinkNodeBase"** %131 to %"class.base::LinkNode"**
  %133 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %132, align 8
  %134 = bitcast %"class.base::LinkedList"* %130 to %"class.base::LinkNode"**
  %135 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %134, align 8
  %136 = icmp eq %"class.base::LinkNode"* %133, %135
  br i1 %136, label %137, label %215

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %138, align 8
  %140 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 1
  %141 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %141
  br i1 %142, label %151, label %143

143:                                              ; preds = %137, %148
  %144 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %148 ], [ %139, %137 ]
  %145 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 1
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %149, %141
  br i1 %150, label %215, label %143

151:                                              ; preds = %143, %137
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %137 ], [ %144, %143 ]
  %153 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %152 to i64
  %154 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %152, %141
  br i1 %154, label %215, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %157 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %156, %141
  br i1 %157, label %210, label %158

158:                                              ; preds = %155
  %159 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %141, i64 -2, i32 0
  %160 = ptrtoint i8** %159 to i64
  %161 = sub i64 %160, %153
  %162 = lshr i64 %161, 3
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %184, label %166

166:                                              ; preds = %158, %179
  %167 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %181, %179 ], [ %156, %158 ]
  %168 = phi i64 [ %180, %179 ], [ %153, %158 ]
  %169 = phi i64 [ %182, %179 ], [ %164, %158 ]
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = icmp eq i8* %171, null
  br i1 %172, label %179, label %173

173:                                              ; preds = %166
  %174 = ptrtoint i8* %171 to i64
  %175 = inttoptr i64 %168 to %"class.base::internal::UncheckedObserverAdapter"*
  %176 = inttoptr i64 %168 to i64*
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %178 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %177 to i64
  br label %179

179:                                              ; preds = %173, %166
  %180 = phi i64 [ %168, %166 ], [ %178, %173 ]
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 1
  %182 = add i64 %169, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %166, !llvm.loop !8

184:                                              ; preds = %179, %158
  %185 = phi i64 [ undef, %158 ], [ %180, %179 ]
  %186 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %156, %158 ], [ %181, %179 ]
  %187 = phi i64 [ %153, %158 ], [ %180, %179 ]
  %188 = icmp ult i64 %161, 24
  br i1 %188, label %206, label %189

189:                                              ; preds = %184, %415
  %190 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %417, %415 ], [ %186, %184 ]
  %191 = phi i64 [ %416, %415 ], [ %187, %184 ]
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %189
  %196 = ptrtoint i8* %193 to i64
  %197 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %198 = inttoptr i64 %191 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %197, i64 1
  %200 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %199 to i64
  br label %201

201:                                              ; preds = %195, %189
  %202 = phi i64 [ %191, %189 ], [ %200, %195 ]
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %393, label %387

206:                                              ; preds = %415, %184
  %207 = phi i64 [ %185, %184 ], [ %416, %415 ]
  %208 = inttoptr i64 %207 to %"class.base::internal::UncheckedObserverAdapter"*
  %209 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  br label %210

210:                                              ; preds = %206, %155
  %211 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %155 ], [ %209, %206 ]
  %212 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %152, %155 ], [ %208, %206 ]
  %213 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %212, %211
  br i1 %213, label %215, label %214

214:                                              ; preds = %210
  store %"class.base::internal::UncheckedObserverAdapter"* %212, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  br label %215

215:                                              ; preds = %148, %214, %210, %151, %128
  %216 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %217 = icmp eq %"class.base::ObserverList"* %216, null
  br i1 %217, label %219, label %218

218:                                              ; preds = %215
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %78, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %81) #9
  br label %219

219:                                              ; preds = %103, %126, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #9
  %220 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %221 = icmp eq %"class.base::ObserverList"* %220, null
  br i1 %221, label %312, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 1
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 1, i32 0, i32 0, i32 1
  %225 = bitcast %"class.base::internal::LinkNodeBase"** %224 to %"class.base::LinkNode"**
  %226 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %225, align 8
  %227 = bitcast %"class.base::LinkedList"* %223 to %"class.base::LinkNode"**
  %228 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %227, align 8
  %229 = icmp eq %"class.base::LinkNode"* %226, %228
  br i1 %229, label %230, label %308

230:                                              ; preds = %222
  %231 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %231, align 8
  %233 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 0, i32 0, i32 1
  %234 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %234
  br i1 %235, label %244, label %236

236:                                              ; preds = %230, %241
  %237 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %241 ], [ %232, %230 ]
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 1
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %242, %234
  br i1 %243, label %308, label %236

244:                                              ; preds = %236, %230
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %230 ], [ %237, %236 ]
  %246 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %245 to i64
  %247 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %245, %234
  br i1 %247, label %308, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %250 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %249, %234
  br i1 %250, label %303, label %251

251:                                              ; preds = %248
  %252 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %234, i64 -2, i32 0
  %253 = ptrtoint i8** %252 to i64
  %254 = sub i64 %253, %246
  %255 = lshr i64 %254, 3
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %277, label %259

259:                                              ; preds = %251, %272
  %260 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %274, %272 ], [ %249, %251 ]
  %261 = phi i64 [ %273, %272 ], [ %246, %251 ]
  %262 = phi i64 [ %275, %272 ], [ %257, %251 ]
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 0, i32 0
  %264 = load i8*, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %272, label %266

266:                                              ; preds = %259
  %267 = ptrtoint i8* %264 to i64
  %268 = inttoptr i64 %261 to %"class.base::internal::UncheckedObserverAdapter"*
  %269 = inttoptr i64 %261 to i64*
  store i64 %267, i64* %269, align 8
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %271 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %270 to i64
  br label %272

272:                                              ; preds = %266, %259
  %273 = phi i64 [ %261, %259 ], [ %271, %266 ]
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 1
  %275 = add i64 %262, -1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %259, !llvm.loop !10

277:                                              ; preds = %272, %251
  %278 = phi i64 [ undef, %251 ], [ %273, %272 ]
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %249, %251 ], [ %274, %272 ]
  %280 = phi i64 [ %246, %251 ], [ %273, %272 ]
  %281 = icmp ult i64 %254, 24
  br i1 %281, label %299, label %282

282:                                              ; preds = %277, %383
  %283 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %385, %383 ], [ %279, %277 ]
  %284 = phi i64 [ %384, %383 ], [ %280, %277 ]
  %285 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = icmp eq i8* %286, null
  br i1 %287, label %294, label %288

288:                                              ; preds = %282
  %289 = ptrtoint i8* %286 to i64
  %290 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %291 = inttoptr i64 %284 to i64*
  store i64 %289, i64* %291, align 8
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %290, i64 1
  %293 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %292 to i64
  br label %294

294:                                              ; preds = %288, %282
  %295 = phi i64 [ %284, %282 ], [ %293, %288 ]
  %296 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = icmp eq i8* %297, null
  br i1 %298, label %361, label %355

299:                                              ; preds = %383, %277
  %300 = phi i64 [ %278, %277 ], [ %384, %383 ]
  %301 = inttoptr i64 %300 to %"class.base::internal::UncheckedObserverAdapter"*
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  br label %303

303:                                              ; preds = %299, %248
  %304 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %248 ], [ %302, %299 ]
  %305 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %245, %248 ], [ %301, %299 ]
  %306 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %305, %304
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  store %"class.base::internal::UncheckedObserverAdapter"* %305, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  br label %308

308:                                              ; preds = %241, %307, %303, %244, %222
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %24, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %33) #9
  br label %312

312:                                              ; preds = %219, %308, %311
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  ret void

313:                                              ; preds = %119
  %314 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %314, align 8
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %315, i64 %122
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %316 to %"class.notifier::PushClientObserver"**
  %318 = load %"class.notifier::PushClientObserver"*, %"class.notifier::PushClientObserver"** %317, align 8
  %319 = bitcast %"class.notifier::PushClientObserver"* %318 to void (%"class.notifier::PushClientObserver"*, i32)***
  %320 = load void (%"class.notifier::PushClientObserver"*, i32)**, void (%"class.notifier::PushClientObserver"*, i32)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.notifier::PushClientObserver"*, i32)*, void (%"class.notifier::PushClientObserver"*, i32)** %320, i64 3
  %322 = load void (%"class.notifier::PushClientObserver"*, i32)*, void (%"class.notifier::PushClientObserver"*, i32)** %321, align 8
  call void %322(%"class.notifier::PushClientObserver"* %318, i32 0) #9
  %323 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %324 = icmp eq %"class.base::ObserverList"* %323, null
  br i1 %324, label %325, label %326

325:                                              ; preds = %350, %346, %313, %326, %340
  br label %85

326:                                              ; preds = %313
  %327 = load i64, i64* %25, align 8
  %328 = add i64 %327, 1
  store i64 %328, i64* %25, align 8
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %323, i64 0, i32 0, i32 0, i32 1
  %330 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = bitcast %"class.base::ObserverList"* %323 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 %331, %333
  %335 = ashr exact i64 %334, 3
  %336 = load i64, i64* %26, align 8
  %337 = icmp ult i64 %335, %336
  %338 = select i1 %337, i64 %335, i64 %336
  %339 = icmp ult i64 %328, %338
  br i1 %339, label %340, label %325

340:                                              ; preds = %326
  %341 = inttoptr i64 %333 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %323, i64 0, i32 0, i32 0, i32 0
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 %328, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %346, label %325

346:                                              ; preds = %340, %350
  %347 = phi i64 [ %348, %350 ], [ %328, %340 ]
  %348 = add nuw i64 %347, 1
  store i64 %348, i64* %25, align 8
  %349 = icmp ult i64 %348, %338
  br i1 %349, label %350, label %325

350:                                              ; preds = %346
  %351 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %342, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 %348, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %346, label %325

355:                                              ; preds = %294
  %356 = ptrtoint i8* %297 to i64
  %357 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %358 = inttoptr i64 %295 to i64*
  store i64 %356, i64* %358, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 1
  %360 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %359 to i64
  br label %361

361:                                              ; preds = %355, %294
  %362 = phi i64 [ %295, %294 ], [ %360, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 2, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %361
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %362, %361 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 3, i32 0
  %375 = load i8*, i8** %374, align 8
  %376 = icmp eq i8* %375, null
  br i1 %376, label %383, label %377

377:                                              ; preds = %372
  %378 = ptrtoint i8* %375 to i64
  %379 = inttoptr i64 %373 to %"class.base::internal::UncheckedObserverAdapter"*
  %380 = inttoptr i64 %373 to i64*
  store i64 %378, i64* %380, align 8
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 1
  %382 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %381 to i64
  br label %383

383:                                              ; preds = %377, %372
  %384 = phi i64 [ %373, %372 ], [ %382, %377 ]
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 4
  %386 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %385, %234
  br i1 %386, label %299, label %282

387:                                              ; preds = %201
  %388 = ptrtoint i8* %204 to i64
  %389 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %390 = inttoptr i64 %202 to i64*
  store i64 %388, i64* %390, align 8
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 1
  %392 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %391 to i64
  br label %393

393:                                              ; preds = %387, %201
  %394 = phi i64 [ %202, %201 ], [ %392, %387 ]
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 2, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %393
  %399 = ptrtoint i8* %396 to i64
  %400 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = inttoptr i64 %394 to i64*
  store i64 %399, i64* %401, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 1
  %403 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %402 to i64
  br label %404

404:                                              ; preds = %398, %393
  %405 = phi i64 [ %394, %393 ], [ %403, %398 ]
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 3, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = icmp eq i8* %407, null
  br i1 %408, label %415, label %409

409:                                              ; preds = %404
  %410 = ptrtoint i8* %407 to i64
  %411 = inttoptr i64 %405 to %"class.base::internal::UncheckedObserverAdapter"*
  %412 = inttoptr i64 %405 to i64*
  store i64 %410, i64* %412, align 8
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %411, i64 1
  %414 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %413 to i64
  br label %415

415:                                              ; preds = %409, %404
  %416 = phi i64 [ %405, %404 ], [ %414, %409 ]
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 4
  %418 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %417, %141
  br i1 %418, label %206, label %189
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8notifier14XmppPushClient24OnTransientDisconnectionEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.244"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient24OnTransientDisconnectionEv(%"class.notifier::XmppPushClient"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient21OnCredentialsRejectedEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0
  %6 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  %7 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %2, i64 0, i32 0, i32 0
  %8 = bitcast %"class.base::internal::WeakReference"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %7, align 8
  %10 = bitcast %"class.base::internal::WeakPtrBase"* %5 to i64*
  %11 = getelementptr inbounds %"class.base::internal::WeakPtrBase", %"class.base::internal::WeakPtrBase"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.base::internal::WeakReference::Flag"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %12) #9
  %19 = bitcast %"class.base::internal::WeakReference::Flag"* %12 to i8*
  call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %1, %14, %18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %21 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 1
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %23 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %27, align 8, !noalias !11
  %30 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8, !noalias !11
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %29, %31
  %33 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %33) #9
  br i1 %32, label %34, label %36

34:                                               ; preds = %20
  %35 = bitcast %"class.base::ObserverList"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #9, !alias.scope !11
  br label %76

36:                                               ; preds = %20
  store %"class.base::ObserverList"* %22, %"class.base::ObserverList"** %24, align 8, !alias.scope !11
  %37 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %33, %"class.base::internal::LinkNodeBase"* %37) #9
  store i64 0, i64* %25, align 8, !alias.scope !11
  %38 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  %39 = load i32, i32* %38, align 8, !noalias !11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %30 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !11
  %44 = bitcast %"class.base::ObserverList"* %22 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !11
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  br label %48

48:                                               ; preds = %41, %36
  %49 = phi i64 [ %47, %41 ], [ -1, %36 ]
  store i64 %49, i64* %26, align 8, !alias.scope !11
  %50 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8, !alias.scope !11
  %51 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %50, i64 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::ObserverList"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %57, %49
  %59 = select i1 %58, i64 %57, i64 %49
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %48
  %62 = inttoptr i64 %55 to %"class.base::internal::UncheckedObserverAdapter"*
  %63 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %50, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %62, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %76

67:                                               ; preds = %61, %71
  %68 = phi i64 [ %69, %71 ], [ 0, %61 ]
  %69 = add nuw i64 %68, 1
  store i64 %69, i64* %25, align 8, !alias.scope !11
  %70 = icmp ult i64 %69, %59
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %63, align 8
  %73 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %72, i64 %69, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %67, label %76

76:                                               ; preds = %67, %71, %34, %48, %61
  %77 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %81 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %81) #9
  %83 = bitcast %"class.base::ObserverList"** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #9, !alias.scope !14
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  br label %85

85:                                               ; preds = %325, %76
  %86 = phi %"class.base::ObserverList"* [ %84, %76 ], [ %323, %325 ]
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %25, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %26, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %88
  %102 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  br label %119

103:                                              ; preds = %88, %85
  %104 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %105 = icmp eq %"class.base::ObserverList"* %104, null
  br i1 %105, label %219, label %106

106:                                              ; preds = %103
  %107 = load i64, i64* %79, align 8
  %108 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %104, i64 0, i32 0, i32 0, i32 1
  %109 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.base::ObserverList"* %104 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = ashr exact i64 %113, 3
  %115 = load i64, i64* %80, align 8
  %116 = icmp ult i64 %114, %115
  %117 = select i1 %116, i64 %114, i64 %115
  %118 = icmp eq i64 %107, %117
  br i1 %118, label %128, label %119

119:                                              ; preds = %106, %101
  %120 = phi %"class.base::ObserverList"* [ %102, %101 ], [ %104, %106 ]
  %121 = icmp eq %"class.base::ObserverList"* %86, %120
  %122 = load i64, i64* %25, align 8
  %123 = load i64, i64* %79, align 8
  %124 = icmp eq i64 %122, %123
  %125 = and i1 %121, %124
  br i1 %125, label %126, label %313

126:                                              ; preds = %119
  %127 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %127, label %219, label %128

128:                                              ; preds = %106, %126
  %129 = phi %"class.base::ObserverList"* [ %86, %126 ], [ %104, %106 ]
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 1
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 1, i32 0, i32 0, i32 1
  %132 = bitcast %"class.base::internal::LinkNodeBase"** %131 to %"class.base::LinkNode"**
  %133 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %132, align 8
  %134 = bitcast %"class.base::LinkedList"* %130 to %"class.base::LinkNode"**
  %135 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %134, align 8
  %136 = icmp eq %"class.base::LinkNode"* %133, %135
  br i1 %136, label %137, label %215

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %138, align 8
  %140 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 1
  %141 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %141
  br i1 %142, label %151, label %143

143:                                              ; preds = %137, %148
  %144 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %148 ], [ %139, %137 ]
  %145 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 1
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %149, %141
  br i1 %150, label %215, label %143

151:                                              ; preds = %143, %137
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %137 ], [ %144, %143 ]
  %153 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %152 to i64
  %154 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %152, %141
  br i1 %154, label %215, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %157 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %156, %141
  br i1 %157, label %210, label %158

158:                                              ; preds = %155
  %159 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %141, i64 -2, i32 0
  %160 = ptrtoint i8** %159 to i64
  %161 = sub i64 %160, %153
  %162 = lshr i64 %161, 3
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %184, label %166

166:                                              ; preds = %158, %179
  %167 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %181, %179 ], [ %156, %158 ]
  %168 = phi i64 [ %180, %179 ], [ %153, %158 ]
  %169 = phi i64 [ %182, %179 ], [ %164, %158 ]
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = icmp eq i8* %171, null
  br i1 %172, label %179, label %173

173:                                              ; preds = %166
  %174 = ptrtoint i8* %171 to i64
  %175 = inttoptr i64 %168 to %"class.base::internal::UncheckedObserverAdapter"*
  %176 = inttoptr i64 %168 to i64*
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %178 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %177 to i64
  br label %179

179:                                              ; preds = %173, %166
  %180 = phi i64 [ %168, %166 ], [ %178, %173 ]
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 1
  %182 = add i64 %169, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %166, !llvm.loop !17

184:                                              ; preds = %179, %158
  %185 = phi i64 [ undef, %158 ], [ %180, %179 ]
  %186 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %156, %158 ], [ %181, %179 ]
  %187 = phi i64 [ %153, %158 ], [ %180, %179 ]
  %188 = icmp ult i64 %161, 24
  br i1 %188, label %206, label %189

189:                                              ; preds = %184, %415
  %190 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %417, %415 ], [ %186, %184 ]
  %191 = phi i64 [ %416, %415 ], [ %187, %184 ]
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %189
  %196 = ptrtoint i8* %193 to i64
  %197 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %198 = inttoptr i64 %191 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %197, i64 1
  %200 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %199 to i64
  br label %201

201:                                              ; preds = %195, %189
  %202 = phi i64 [ %191, %189 ], [ %200, %195 ]
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %393, label %387

206:                                              ; preds = %415, %184
  %207 = phi i64 [ %185, %184 ], [ %416, %415 ]
  %208 = inttoptr i64 %207 to %"class.base::internal::UncheckedObserverAdapter"*
  %209 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  br label %210

210:                                              ; preds = %206, %155
  %211 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %155 ], [ %209, %206 ]
  %212 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %152, %155 ], [ %208, %206 ]
  %213 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %212, %211
  br i1 %213, label %215, label %214

214:                                              ; preds = %210
  store %"class.base::internal::UncheckedObserverAdapter"* %212, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  br label %215

215:                                              ; preds = %148, %214, %210, %151, %128
  %216 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %217 = icmp eq %"class.base::ObserverList"* %216, null
  br i1 %217, label %219, label %218

218:                                              ; preds = %215
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %78, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %81) #9
  br label %219

219:                                              ; preds = %103, %126, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #9
  %220 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %221 = icmp eq %"class.base::ObserverList"* %220, null
  br i1 %221, label %312, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 1
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 1, i32 0, i32 0, i32 1
  %225 = bitcast %"class.base::internal::LinkNodeBase"** %224 to %"class.base::LinkNode"**
  %226 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %225, align 8
  %227 = bitcast %"class.base::LinkedList"* %223 to %"class.base::LinkNode"**
  %228 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %227, align 8
  %229 = icmp eq %"class.base::LinkNode"* %226, %228
  br i1 %229, label %230, label %308

230:                                              ; preds = %222
  %231 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %231, align 8
  %233 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 0, i32 0, i32 1
  %234 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %234
  br i1 %235, label %244, label %236

236:                                              ; preds = %230, %241
  %237 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %241 ], [ %232, %230 ]
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 1
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %242, %234
  br i1 %243, label %308, label %236

244:                                              ; preds = %236, %230
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %230 ], [ %237, %236 ]
  %246 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %245 to i64
  %247 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %245, %234
  br i1 %247, label %308, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %250 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %249, %234
  br i1 %250, label %303, label %251

251:                                              ; preds = %248
  %252 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %234, i64 -2, i32 0
  %253 = ptrtoint i8** %252 to i64
  %254 = sub i64 %253, %246
  %255 = lshr i64 %254, 3
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %277, label %259

259:                                              ; preds = %251, %272
  %260 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %274, %272 ], [ %249, %251 ]
  %261 = phi i64 [ %273, %272 ], [ %246, %251 ]
  %262 = phi i64 [ %275, %272 ], [ %257, %251 ]
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 0, i32 0
  %264 = load i8*, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %272, label %266

266:                                              ; preds = %259
  %267 = ptrtoint i8* %264 to i64
  %268 = inttoptr i64 %261 to %"class.base::internal::UncheckedObserverAdapter"*
  %269 = inttoptr i64 %261 to i64*
  store i64 %267, i64* %269, align 8
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %271 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %270 to i64
  br label %272

272:                                              ; preds = %266, %259
  %273 = phi i64 [ %261, %259 ], [ %271, %266 ]
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 1
  %275 = add i64 %262, -1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %259, !llvm.loop !18

277:                                              ; preds = %272, %251
  %278 = phi i64 [ undef, %251 ], [ %273, %272 ]
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %249, %251 ], [ %274, %272 ]
  %280 = phi i64 [ %246, %251 ], [ %273, %272 ]
  %281 = icmp ult i64 %254, 24
  br i1 %281, label %299, label %282

282:                                              ; preds = %277, %383
  %283 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %385, %383 ], [ %279, %277 ]
  %284 = phi i64 [ %384, %383 ], [ %280, %277 ]
  %285 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = icmp eq i8* %286, null
  br i1 %287, label %294, label %288

288:                                              ; preds = %282
  %289 = ptrtoint i8* %286 to i64
  %290 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %291 = inttoptr i64 %284 to i64*
  store i64 %289, i64* %291, align 8
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %290, i64 1
  %293 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %292 to i64
  br label %294

294:                                              ; preds = %288, %282
  %295 = phi i64 [ %284, %282 ], [ %293, %288 ]
  %296 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = icmp eq i8* %297, null
  br i1 %298, label %361, label %355

299:                                              ; preds = %383, %277
  %300 = phi i64 [ %278, %277 ], [ %384, %383 ]
  %301 = inttoptr i64 %300 to %"class.base::internal::UncheckedObserverAdapter"*
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  br label %303

303:                                              ; preds = %299, %248
  %304 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %248 ], [ %302, %299 ]
  %305 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %245, %248 ], [ %301, %299 ]
  %306 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %305, %304
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  store %"class.base::internal::UncheckedObserverAdapter"* %305, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  br label %308

308:                                              ; preds = %241, %307, %303, %244, %222
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %24, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %33) #9
  br label %312

312:                                              ; preds = %219, %308, %311
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  ret void

313:                                              ; preds = %119
  %314 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %314, align 8
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %315, i64 %122
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %316 to %"class.notifier::PushClientObserver"**
  %318 = load %"class.notifier::PushClientObserver"*, %"class.notifier::PushClientObserver"** %317, align 8
  %319 = bitcast %"class.notifier::PushClientObserver"* %318 to void (%"class.notifier::PushClientObserver"*, i32)***
  %320 = load void (%"class.notifier::PushClientObserver"*, i32)**, void (%"class.notifier::PushClientObserver"*, i32)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.notifier::PushClientObserver"*, i32)*, void (%"class.notifier::PushClientObserver"*, i32)** %320, i64 3
  %322 = load void (%"class.notifier::PushClientObserver"*, i32)*, void (%"class.notifier::PushClientObserver"*, i32)** %321, align 8
  call void %322(%"class.notifier::PushClientObserver"* %318, i32 1) #9
  %323 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %324 = icmp eq %"class.base::ObserverList"* %323, null
  br i1 %324, label %325, label %326

325:                                              ; preds = %350, %346, %313, %326, %340
  br label %85

326:                                              ; preds = %313
  %327 = load i64, i64* %25, align 8
  %328 = add i64 %327, 1
  store i64 %328, i64* %25, align 8
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %323, i64 0, i32 0, i32 0, i32 1
  %330 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = bitcast %"class.base::ObserverList"* %323 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 %331, %333
  %335 = ashr exact i64 %334, 3
  %336 = load i64, i64* %26, align 8
  %337 = icmp ult i64 %335, %336
  %338 = select i1 %337, i64 %335, i64 %336
  %339 = icmp ult i64 %328, %338
  br i1 %339, label %340, label %325

340:                                              ; preds = %326
  %341 = inttoptr i64 %333 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %323, i64 0, i32 0, i32 0, i32 0
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 %328, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %346, label %325

346:                                              ; preds = %340, %350
  %347 = phi i64 [ %348, %350 ], [ %328, %340 ]
  %348 = add nuw i64 %347, 1
  store i64 %348, i64* %25, align 8
  %349 = icmp ult i64 %348, %338
  br i1 %349, label %350, label %325

350:                                              ; preds = %346
  %351 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %342, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 %348, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %346, label %325

355:                                              ; preds = %294
  %356 = ptrtoint i8* %297 to i64
  %357 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %358 = inttoptr i64 %295 to i64*
  store i64 %356, i64* %358, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 1
  %360 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %359 to i64
  br label %361

361:                                              ; preds = %355, %294
  %362 = phi i64 [ %295, %294 ], [ %360, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 2, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %361
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %362, %361 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 3, i32 0
  %375 = load i8*, i8** %374, align 8
  %376 = icmp eq i8* %375, null
  br i1 %376, label %383, label %377

377:                                              ; preds = %372
  %378 = ptrtoint i8* %375 to i64
  %379 = inttoptr i64 %373 to %"class.base::internal::UncheckedObserverAdapter"*
  %380 = inttoptr i64 %373 to i64*
  store i64 %378, i64* %380, align 8
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 1
  %382 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %381 to i64
  br label %383

383:                                              ; preds = %377, %372
  %384 = phi i64 [ %373, %372 ], [ %382, %377 ]
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 4
  %386 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %385, %234
  br i1 %386, label %299, label %282

387:                                              ; preds = %201
  %388 = ptrtoint i8* %204 to i64
  %389 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %390 = inttoptr i64 %202 to i64*
  store i64 %388, i64* %390, align 8
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 1
  %392 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %391 to i64
  br label %393

393:                                              ; preds = %387, %201
  %394 = phi i64 [ %202, %201 ], [ %392, %387 ]
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 2, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %393
  %399 = ptrtoint i8* %396 to i64
  %400 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = inttoptr i64 %394 to i64*
  store i64 %399, i64* %401, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 1
  %403 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %402 to i64
  br label %404

404:                                              ; preds = %398, %393
  %405 = phi i64 [ %394, %393 ], [ %403, %398 ]
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 3, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = icmp eq i8* %407, null
  br i1 %408, label %415, label %409

409:                                              ; preds = %404
  %410 = ptrtoint i8* %407 to i64
  %411 = inttoptr i64 %405 to %"class.base::internal::UncheckedObserverAdapter"*
  %412 = inttoptr i64 %405 to i64*
  store i64 %410, i64* %412, align 8
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %411, i64 1
  %414 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %413 to i64
  br label %415

415:                                              ; preds = %409, %404
  %416 = phi i64 [ %405, %404 ], [ %414, %409 ]
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 4
  %418 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %417, %141
  br i1 %418, label %206, label %189
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8notifier14XmppPushClient21OnCredentialsRejectedEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.244"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient21OnCredentialsRejectedEv(%"class.notifier::XmppPushClient"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient22OnNotificationReceivedERKNS_12NotificationE(%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %6 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !19
  %13 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !19
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #9
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9, !alias.scope !19
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !19
  %20 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #9
  store i64 0, i64* %8, align 8, !alias.scope !19
  %21 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !19
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !19
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !19
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !19
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !19
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !19
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #9
  %61 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #9
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #9, !alias.scope !22
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %308, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %306, %308 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !25

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %398
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %169, %167 ]
  %174 = phi i64 [ %399, %398 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %376, label %370

189:                                              ; preds = %398, %167
  %190 = phi i64 [ %168, %167 ], [ %399, %398 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #9
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #9
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !26

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %366
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %368, %366 ], [ %262, %260 ]
  %267 = phi i64 [ %367, %366 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %344, label %338

282:                                              ; preds = %366, %260
  %283 = phi i64 [ %261, %260 ], [ %367, %366 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #9
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.notifier::PushClientObserver"**
  %301 = load %"class.notifier::PushClientObserver"*, %"class.notifier::PushClientObserver"** %300, align 8
  %302 = bitcast %"class.notifier::PushClientObserver"* %301 to void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)***
  %303 = load void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)**, void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)*, void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)** %303, i64 4
  %305 = load void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)*, void (%"class.notifier::PushClientObserver"*, %"struct.notifier::Notification"*)** %304, align 8
  call void %305(%"class.notifier::PushClientObserver"* %301, %"struct.notifier::Notification"* dereferenceable(72) %1) #9
  %306 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %307 = icmp eq %"class.base::ObserverList"* %306, null
  br i1 %307, label %308, label %309

308:                                              ; preds = %333, %329, %296, %309, %323
  br label %68

309:                                              ; preds = %296
  %310 = load i64, i64* %8, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %8, align 8
  %312 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.base::ObserverList"* %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = load i64, i64* %9, align 8
  %320 = icmp ult i64 %318, %319
  %321 = select i1 %320, i64 %318, i64 %319
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %323, label %308

323:                                              ; preds = %309
  %324 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 %311, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %308

329:                                              ; preds = %323, %333
  %330 = phi i64 [ %331, %333 ], [ %311, %323 ]
  %331 = add nuw i64 %330, 1
  store i64 %331, i64* %8, align 8
  %332 = icmp ult i64 %331, %321
  br i1 %332, label %333, label %308

333:                                              ; preds = %329
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %325, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %331, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %329, label %308

338:                                              ; preds = %277
  %339 = ptrtoint i8* %280 to i64
  %340 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %278 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %277
  %345 = phi i64 [ %278, %277 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %355, label %349

349:                                              ; preds = %344
  %350 = ptrtoint i8* %347 to i64
  %351 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %345 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %344
  %356 = phi i64 [ %345, %344 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %369 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %368, %217
  br i1 %369, label %282, label %265

370:                                              ; preds = %184
  %371 = ptrtoint i8* %187 to i64
  %372 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %185 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %184
  %377 = phi i64 [ %185, %184 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %124
  br i1 %401, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N8notifier14XmppPushClient22OnNotificationReceivedERKNS_12NotificationE(%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12, i32 0, i32 1
  %4 = bitcast %"struct.notifier::Notification"** %3 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient22OnNotificationReceivedERKNS_12NotificationE(%"class.notifier::XmppPushClient"* %4, %"struct.notifier::Notification"* dereferenceable(72) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient22OnPingResponseReceivedEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %5 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !27
  %12 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !27
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9, !alias.scope !27
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8, !alias.scope !27
  %19 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #9
  store i64 0, i64* %7, align 8, !alias.scope !27
  %20 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !27
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !27
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !27
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !27
  %32 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8, !alias.scope !27
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8, !alias.scope !27
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %53, %16, %30, %43
  %59 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  %65 = bitcast %"class.base::ObserverList"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #9, !alias.scope !30
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode"**
  %115 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %114, align 8
  %116 = bitcast %"class.base::LinkedList"* %112 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !33

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #9
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode"**
  %208 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %207, align 8
  %209 = bitcast %"class.base::LinkedList"* %205 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !34

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #9
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.notifier::PushClientObserver"**
  %300 = load %"class.notifier::PushClientObserver"*, %"class.notifier::PushClientObserver"** %299, align 8
  %301 = bitcast %"class.notifier::PushClientObserver"* %300 to void (%"class.notifier::PushClientObserver"*)***
  %302 = load void (%"class.notifier::PushClientObserver"*)**, void (%"class.notifier::PushClientObserver"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.notifier::PushClientObserver"*)*, void (%"class.notifier::PushClientObserver"*)** %302, i64 5
  %304 = load void (%"class.notifier::PushClientObserver"*)*, void (%"class.notifier::PushClientObserver"*)** %303, align 8
  call void %304(%"class.notifier::PushClientObserver"* %300) #9
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N8notifier14XmppPushClient22OnPingResponseReceivedEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 11, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient22OnPingResponseReceivedEv(%"class.notifier::XmppPushClient"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient12OnSubscribedEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %5 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !35
  %12 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !35
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9, !alias.scope !35
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8, !alias.scope !35
  %19 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #9
  store i64 0, i64* %7, align 8, !alias.scope !35
  %20 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !35
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !35
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !35
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !35
  %32 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8, !alias.scope !35
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8, !alias.scope !35
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %53, %16, %30, %43
  %59 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  %65 = bitcast %"class.base::ObserverList"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #9, !alias.scope !38
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode"**
  %115 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %114, align 8
  %116 = bitcast %"class.base::LinkedList"* %112 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !41

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #9
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode"**
  %208 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %207, align 8
  %209 = bitcast %"class.base::LinkedList"* %205 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !42

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #9
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.notifier::PushClientObserver"**
  %300 = load %"class.notifier::PushClientObserver"*, %"class.notifier::PushClientObserver"** %299, align 8
  %301 = bitcast %"class.notifier::PushClientObserver"* %300 to void (%"class.notifier::PushClientObserver"*)***
  %302 = load void (%"class.notifier::PushClientObserver"*)**, void (%"class.notifier::PushClientObserver"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.notifier::PushClientObserver"*)*, void (%"class.notifier::PushClientObserver"*)** %302, i64 2
  %304 = load void (%"class.notifier::PushClientObserver"*)*, void (%"class.notifier::PushClientObserver"*)** %303, align 8
  call void %304(%"class.notifier::PushClientObserver"* %300) #9
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N8notifier14XmppPushClient12OnSubscribedEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12
  %3 = bitcast %"class.std::__1::vector.235"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient12OnSubscribedEv(%"class.notifier::XmppPushClient"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient19OnSubscriptionErrorEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %5 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !43
  %12 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !43
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9, !alias.scope !43
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8, !alias.scope !43
  %19 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #9
  store i64 0, i64* %7, align 8, !alias.scope !43
  %20 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !43
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !43
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !43
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !43
  %32 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8, !alias.scope !43
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8, !alias.scope !43
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %53, %16, %30, %43
  %59 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<notifier::PushClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  %65 = bitcast %"class.base::ObserverList"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #9, !alias.scope !46
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode"**
  %115 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %114, align 8
  %116 = bitcast %"class.base::LinkedList"* %112 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !49

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #9
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #9
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode"**
  %208 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %207, align 8
  %209 = bitcast %"class.base::LinkedList"* %205 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !50

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #9
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #9
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.notifier::PushClientObserver"**
  %300 = load %"class.notifier::PushClientObserver"*, %"class.notifier::PushClientObserver"** %299, align 8
  %301 = bitcast %"class.notifier::PushClientObserver"* %300 to void (%"class.notifier::PushClientObserver"*, i32)***
  %302 = load void (%"class.notifier::PushClientObserver"*, i32)**, void (%"class.notifier::PushClientObserver"*, i32)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.notifier::PushClientObserver"*, i32)*, void (%"class.notifier::PushClientObserver"*, i32)** %302, i64 3
  %304 = load void (%"class.notifier::PushClientObserver"*, i32)*, void (%"class.notifier::PushClientObserver"*, i32)** %303, align 8
  call void %304(%"class.notifier::PushClientObserver"* %300, i32 0) #9
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N8notifier14XmppPushClient19OnSubscriptionErrorEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 -1, i32 12
  %3 = bitcast %"class.std::__1::vector.235"* %2 to %"class.notifier::XmppPushClient"*
  tail call void @_ZN8notifier14XmppPushClient19OnSubscriptionErrorEv(%"class.notifier::XmppPushClient"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient11AddObserverEPNS_18PushClientObserverE(%"class.notifier::XmppPushClient"*, %"class.notifier::PushClientObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7
  %4 = icmp eq %"class.notifier::PushClientObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.notifier::PushClientObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.notifier::PushClientObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #9
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient14RemoveObserverEPNS_18PushClientObserverE(%"class.notifier::XmppPushClient"*, %"class.notifier::PushClientObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.notifier::PushClientObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 7, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #9
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient19UpdateSubscriptionsERKNSt3__16vectorINS_12SubscriptionENS1_9allocatorIS3_EEEE(%"class.notifier::XmppPushClient"*, %"class.std::__1::vector.176"* readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 8
  %4 = icmp eq %"class.std::__1::vector.176"* %3, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %1, i64 0, i32 0, i32 1
  %9 = load %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"** %8, align 8
  tail call void @_ZNSt3__16vectorIN8notifier12SubscriptionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.176"* %3, %"struct.notifier::Subscription"* %7, %"struct.notifier::Subscription"* %9) #9
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient17UpdateCredentialsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKN3net27NetworkTrafficAnnotationTagE(%"class.notifier::XmppPushClient"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.jingle_xmpp::XmppClientSettings", align 8
  %8 = alloca %"class.std::__1::vector.188", align 8
  %9 = bitcast %"class.jingle_xmpp::XmppClientSettings"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 6
  call void @_ZN8notifier22MakeXmppClientSettingsERKNS_15NotifierOptionsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"class.jingle_xmpp::XmppClientSettings"* nonnull sret %7, %"struct.notifier::NotifierOptions"* dereferenceable(96) %10, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  %11 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0
  %14 = call dereferenceable(176) %"class.jingle_xmpp::XmppUserSettings"* @_ZN11jingle_xmpp16XmppUserSettingsaSEOS0_(%"class.jingle_xmpp::XmppUserSettings"* %12, %"class.jingle_xmpp::XmppUserSettings"* nonnull dereferenceable(176) %13) #9
  %15 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 1
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 1
  %17 = bitcast %"class.net::HostPortPair"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %21, %4
  %25 = bitcast %"class.net::HostPortPair"* %15 to i8*
  %26 = bitcast %"class.net::HostPortPair"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #9
  %27 = bitcast %"class.net::HostPortPair"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 0, i8* %28, align 1
  store i8 0, i8* %26, align 8
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 1, i32 1
  %30 = load i16, i16* %29, align 8
  %31 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 1, i32 1
  store i16 %30, i16* %31, align 8
  %32 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 9, i32 2
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 8
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %40, %24
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 5
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %49, %43
  %53 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 4
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %58, %52
  %62 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 3
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %67, %61
  %71 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %76, %70
  %80 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #10
  br label %88

88:                                               ; preds = %85, %79
  %89 = bitcast %"class.jingle_xmpp::XmppClientSettings"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %9) #9
  %97 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 10
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.notifier::Login"*, %"class.notifier::Login"** %98, align 8
  %100 = icmp eq %"class.notifier::Login"* %99, null
  br i1 %100, label %102, label %101

101:                                              ; preds = %96
  call void @_ZN8notifier5Login18UpdateXmppSettingsERKN11jingle_xmpp18XmppClientSettingsE(%"class.notifier::Login"* nonnull %99, %"class.jingle_xmpp::XmppClientSettings"* dereferenceable(216) %11) #9
  br label %165

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0
  %104 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %6) #9
  %105 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %6, i64 0, i32 0, i32 0
  %106 = bitcast %"class.base::internal::WeakReference"* %6 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %105, align 8
  %108 = bitcast %"class.base::internal::WeakPtrBase"* %103 to i64*
  %109 = getelementptr inbounds %"class.base::internal::WeakPtrBase", %"class.base::internal::WeakPtrBase"* %103, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.base::internal::WeakReference::Flag"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %112
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %110) #9
  %117 = bitcast %"class.base::internal::WeakReference::Flag"* %110 to i8*
  call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %102, %112, %116
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #9
  %119 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 1
  store i64 0, i64* %119, align 8
  %120 = bitcast %"class.std::__1::vector.188"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #9
  call void @_ZN8notifier13GetServerListERKNS_15NotifierOptionsE(%"class.std::__1::vector.188"* nonnull sret %8, %"struct.notifier::NotifierOptions"* dereferenceable(96) %10) #9
  %121 = getelementptr inbounds %"struct.notifier::NotifierOptions", %"struct.notifier::NotifierOptions"* %10, i64 0, i32 0
  %122 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 6, i32 6
  %123 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 6, i32 8
  %124 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124)
  %125 = call i8* @_Znwm(i64 528) #10
  %126 = bitcast i8* %125 to %"class.notifier::Login"*
  %127 = icmp eq %"class.notifier::XmppPushClient"* %0, null
  %128 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 1
  %129 = select i1 %127, %"class.notifier::Login::Delegate"* null, %"class.notifier::Login::Delegate"* %128
  %130 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  %131 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %130, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %131) #9
  %132 = load i8, i8* %121, align 1, !range !51
  %133 = icmp ne i8 %132, 0
  %134 = load %"class.network::NetworkConnectionTracker"*, %"class.network::NetworkConnectionTracker"** %123, align 8
  call void @_ZN8notifier5LoginC1EPNS0_8DelegateERKN11jingle_xmpp18XmppClientSettingsEN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN7network5mojom27ProxyResolvingSocketFactoryEEEEEERKNSt3__16vectorINS_17ServerInformationENSH_9allocatorISJ_EEEEbRKNSH_12basic_stringIcNSH_11char_traitsIcEENSK_IcEEEERKN3net27NetworkTrafficAnnotationTagEPNSB_24NetworkConnectionTrackerE(%"class.notifier::Login"* nonnull %126, %"class.notifier::Login::Delegate"* %129, %"class.jingle_xmpp::XmppClientSettings"* dereferenceable(216) %11, %"class.base::RepeatingCallback"* nonnull %5, %"class.std::__1::vector.188"* nonnull dereferenceable(24) %8, i1 zeroext %133, %"class.std::__1::basic_string"* dereferenceable(24) %122, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %3, %"class.network::NetworkConnectionTracker"* %134) #9
  %135 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %135) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  %136 = ptrtoint i8* %125 to i64
  %137 = load %"class.notifier::Login"*, %"class.notifier::Login"** %98, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.183"* %97 to i64*
  store i64 %136, i64* %138, align 8
  %139 = icmp eq %"class.notifier::Login"* %137, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %118
  %141 = bitcast %"class.notifier::Login"* %137 to void (%"class.notifier::Login"*)***
  %142 = load void (%"class.notifier::Login"*)**, void (%"class.notifier::Login"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.notifier::Login"*)*, void (%"class.notifier::Login"*)** %142, i64 2
  %144 = load void (%"class.notifier::Login"*)*, void (%"class.notifier::Login"*)** %143, align 8
  call void %144(%"class.notifier::Login"* nonnull %137) #9
  br label %145

145:                                              ; preds = %140, %118
  %146 = getelementptr inbounds %"class.std::__1::vector.188", %"class.std::__1::vector.188"* %8, i64 0, i32 0, i32 0
  %147 = load %"struct.notifier::ServerInformation"*, %"struct.notifier::ServerInformation"** %146, align 8
  %148 = icmp eq %"struct.notifier::ServerInformation"* %147, null
  br i1 %148, label %163, label %149

149:                                              ; preds = %145
  %150 = bitcast %"struct.notifier::ServerInformation"* %147 to i8*
  %151 = getelementptr inbounds %"class.std::__1::vector.188", %"class.std::__1::vector.188"* %8, i64 0, i32 0, i32 1
  %152 = load %"struct.notifier::ServerInformation"*, %"struct.notifier::ServerInformation"** %151, align 8
  %153 = icmp eq %"struct.notifier::ServerInformation"* %152, %147
  br i1 %153, label %161, label %154

154:                                              ; preds = %149, %154
  %155 = phi %"struct.notifier::ServerInformation"* [ %156, %154 ], [ %152, %149 ]
  %156 = getelementptr inbounds %"struct.notifier::ServerInformation", %"struct.notifier::ServerInformation"* %155, i64 -1
  call void @_ZN8notifier17ServerInformationD1Ev(%"struct.notifier::ServerInformation"* %156) #9
  %157 = icmp eq %"struct.notifier::ServerInformation"* %156, %147
  br i1 %157, label %158, label %154

158:                                              ; preds = %154
  %159 = bitcast %"class.std::__1::vector.188"* %8 to i8**
  %160 = load i8*, i8** %159, align 8
  br label %161

161:                                              ; preds = %158, %149
  %162 = phi i8* [ %160, %158 ], [ %150, %149 ]
  store %"struct.notifier::ServerInformation"* %147, %"struct.notifier::ServerInformation"** %151, align 8
  call void @_ZdlPv(i8* %162) #10
  br label %163

163:                                              ; preds = %145, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #9
  %164 = load %"class.notifier::Login"*, %"class.notifier::Login"** %98, align 8
  call void @_ZN8notifier5Login15StartConnectionEv(%"class.notifier::Login"* %164) #9
  br label %165

165:                                              ; preds = %163, %101
  ret void
}

declare void @_ZN8notifier22MakeXmppClientSettingsERKNS_15NotifierOptionsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"class.jingle_xmpp::XmppClientSettings"* sret, %"struct.notifier::NotifierOptions"* dereferenceable(96), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8notifier5Login18UpdateXmppSettingsERKN11jingle_xmpp18XmppClientSettingsE(%"class.notifier::Login"*, %"class.jingle_xmpp::XmppClientSettings"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN8notifier13GetServerListERKNS_15NotifierOptionsE(%"class.std::__1::vector.188"* sret, %"struct.notifier::NotifierOptions"* dereferenceable(96)) local_unnamed_addr #1

declare void @_ZN8notifier5Login15StartConnectionEv(%"class.notifier::Login"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient16SendNotificationERKNS_12NotificationE(%"class.notifier::XmppPushClient"*, %"struct.notifier::Notification"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #9
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.jingle_xmpp::XmppTaskParentInterface"**
  %8 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %7, align 8
  %9 = icmp eq %"class.jingle_xmpp::XmppTaskParentInterface"* %8, null
  br i1 %9, label %10, label %22

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12, i32 0, i32 1
  %12 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %11, align 8
  %13 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %13, align 8
  %15 = icmp eq %"struct.notifier::Notification"* %12, %14
  br i1 %15, label %20, label %16

16:                                               ; preds = %10
  tail call void @_ZN8notifier12NotificationC1ERKS0_(%"struct.notifier::Notification"* %12, %"struct.notifier::Notification"* dereferenceable(72) %1) #9
  %17 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %12, i64 1
  %18 = ptrtoint %"struct.notifier::Notification"* %17 to i64
  %19 = bitcast %"struct.notifier::Notification"** %11 to i64*
  store i64 %18, i64* %19, align 8
  br label %31

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 12
  tail call void @_ZNSt3__16vectorIN8notifier12NotificationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.235"* %21, %"struct.notifier::Notification"* dereferenceable(72) %1) #9
  br label %31

22:                                               ; preds = %5
  %23 = tail call i8* @_Znwm(i64 320) #10
  %24 = bitcast i8* %23 to %"class.notifier::PushNotificationsSendUpdateTask"*
  %25 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #9
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %7, align 8
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.jingle_xmpp::XmppTaskParentInterface"* [ %27, %26 ], [ null, %22 ]
  tail call void @_ZN8notifier31PushNotificationsSendUpdateTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceERKNS_12NotificationE(%"class.notifier::PushNotificationsSendUpdateTask"* nonnull %24, %"class.jingle_xmpp::XmppTaskParentInterface"* %29, %"struct.notifier::Notification"* dereferenceable(72) %1) #9
  %30 = bitcast i8* %23 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4Task5StartEv(%"class.jingle_xmpp::Task"* nonnull %30) #9
  br label %31

31:                                               ; preds = %20, %16, %28
  ret void
}

declare void @_ZN8notifier31PushNotificationsSendUpdateTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceERKNS_12NotificationE(%"class.notifier::PushNotificationsSendUpdateTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"struct.notifier::Notification"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier14XmppPushClient8SendPingEv(%"class.notifier::XmppPushClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %2) #9
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 11, i32 0, i32 1
  %6 = bitcast i64* %5 to %"class.jingle_xmpp::XmppTaskParentInterface"**
  %7 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %6, align 8
  %8 = icmp eq %"class.jingle_xmpp::XmppTaskParentInterface"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %4
  %10 = tail call i8* @_Znwm(i64 280) #10
  %11 = bitcast i8* %10 to %"class.notifier::SendPingTask"*
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %2) #9
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %6, align 8
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.jingle_xmpp::XmppTaskParentInterface"* [ %14, %13 ], [ null, %9 ]
  %17 = getelementptr inbounds %"class.notifier::XmppPushClient", %"class.notifier::XmppPushClient"* %0, i64 0, i32 4
  tail call void @_ZN8notifier12SendPingTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE(%"class.notifier::SendPingTask"* nonnull %11, %"class.jingle_xmpp::XmppTaskParentInterface"* %16, %"class.notifier::SendPingTask::Delegate"* %17) #9
  %18 = bitcast i8* %10 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4Task5StartEv(%"class.jingle_xmpp::Task"* nonnull %18) #9
  br label %19

19:                                               ; preds = %1, %4, %15
  ret void
}

declare void @_ZN8notifier12SendPingTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE(%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.notifier::SendPingTask::Delegate"*) unnamed_addr #1

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp16XmppUserSettingsD2Ev(%"class.jingle_xmpp::XmppUserSettings"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 5
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 4
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 3
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %46, %52
  %56 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %55, %60
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

declare void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(176) %"class.jingle_xmpp::XmppUserSettings"* @_ZN11jingle_xmpp16XmppUserSettingsaSEOS0_(%"class.jingle_xmpp::XmppUserSettings"*, %"class.jingle_xmpp::XmppUserSettings"* dereferenceable(176)) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %0 to i8*
  %12 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  %13 = bitcast %"class.jingle_xmpp::XmppUserSettings"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %14, align 1
  store i8 0, i8* %12, align 1
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %10, %21
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #9
  %27 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 0, i8* %28, align 1
  store i8 0, i8* %26, align 1
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 2
  %31 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %24, %35
  %39 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #9
  %41 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 0, i8* %42, align 1
  store i8 0, i8* %40, align 1
  %43 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 3
  %45 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %38, %49
  %53 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #9
  %55 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 0, i8* %56, align 1
  store i8 0, i8* %54, align 1
  %57 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 4
  %59 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %52, %63
  %67 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #9
  %69 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  store i8 0, i8* %70, align 1
  store i8 0, i8* %68, align 1
  %71 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 5
  %72 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 5
  %73 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %66, %77
  %81 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #9
  %83 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  store i8 0, i8* %84, align 1
  store i8 0, i8* %82, align 1
  %85 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 6
  %86 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 6
  %87 = bitcast i32* %85 to i8*
  %88 = bitcast i32* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 5, i1 false)
  %89 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %0, i64 0, i32 8
  %90 = getelementptr inbounds %"class.jingle_xmpp::XmppUserSettings", %"class.jingle_xmpp::XmppUserSettings"* %1, i64 0, i32 8
  %91 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  tail call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %80, %95
  %99 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #9
  %101 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 0, i8* %102, align 1
  store i8 0, i8* %100, align 1
  ret %"class.jingle_xmpp::XmppUserSettings"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8notifier12SubscriptionD1Ev(%"struct.notifier::Subscription"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8notifier12NotificationD1Ev(%"struct.notifier::Notification"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8notifier12SubscriptionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.176"*, %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.notifier::Subscription"* %2 to i64
  %5 = ptrtoint %"struct.notifier::Subscription"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.notifier::Subscription"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.176"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.notifier::Subscription"*
  br i1 %15, label %150, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.notifier::Subscription"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %1, i64 %22
  %25 = select i1 %23, %"struct.notifier::Subscription"* %24, %"struct.notifier::Subscription"* %2
  %26 = icmp eq %"struct.notifier::Subscription"* %25, %1
  br i1 %26, label %96, label %27

27:                                               ; preds = %17, %92
  %28 = phi %"struct.notifier::Subscription"* [ %94, %92 ], [ %16, %17 ]
  %29 = phi %"struct.notifier::Subscription"* [ %93, %92 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.notifier::Subscription"* %28, %29
  br i1 %31, label %92, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.notifier::Subscription"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.notifier::Subscription"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.notifier::Subscription"* %28 to i8*
  %44 = bitcast %"struct.notifier::Subscription"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #9
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #9
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.notifier::Subscription"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #9
  br label %61

61:                                               ; preds = %51, %45, %42
  %62 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %28, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %67, label %82, label %72

72:                                               ; preds = %61
  br i1 %71, label %76, label %73

73:                                               ; preds = %72
  %74 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #9
  br label %92

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %78, i64 %80) #9
  br label %92

82:                                               ; preds = %61
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %88 = zext i8 %70 to i64
  %89 = select i1 %71, i8* %84, i8* %87
  %90 = select i1 %71, i64 %86, i64 %88
  %91 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %89, i64 %90) #9
  br label %92

92:                                               ; preds = %82, %76, %73, %27
  %93 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %29, i64 1
  %94 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %28, i64 1
  %95 = icmp eq %"struct.notifier::Subscription"* %93, %25
  br i1 %95, label %96, label %27

96:                                               ; preds = %92, %17
  %97 = phi %"struct.notifier::Subscription"* [ %16, %17 ], [ %94, %92 ]
  br i1 %23, label %98, label %142

98:                                               ; preds = %96
  %99 = load i64, i64* %19, align 8
  %100 = icmp eq %"struct.notifier::Subscription"* %25, %2
  br i1 %100, label %140, label %101

101:                                              ; preds = %98
  %102 = inttoptr i64 %99 to %"struct.notifier::Subscription"*
  br label %103

103:                                              ; preds = %134, %101
  %104 = phi %"struct.notifier::Subscription"* [ %136, %134 ], [ %102, %101 ]
  %105 = phi %"struct.notifier::Subscription"* [ %135, %134 ], [ %24, %101 ]
  %106 = bitcast %"struct.notifier::Subscription"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = bitcast %"struct.notifier::Subscription"* %104 to i8*
  %112 = bitcast %"struct.notifier::Subscription"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #9
  br label %119

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %104, i64 0, i32 0
  %115 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %114, i8* %116, i64 %118) #9
  br label %119

119:                                              ; preds = %113, %110
  %120 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %104, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %105, i64 0, i32 1
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %128 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 24, i1 false) #9
  br label %134

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %105, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %120, i8* %131, i64 %133) #9
  br label %134

134:                                              ; preds = %129, %126
  %135 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %105, i64 1
  %136 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %104, i64 1
  %137 = icmp eq %"struct.notifier::Subscription"* %135, %2
  br i1 %137, label %138, label %103

138:                                              ; preds = %134
  %139 = ptrtoint %"struct.notifier::Subscription"* %136 to i64
  br label %140

140:                                              ; preds = %98, %138
  %141 = phi i64 [ %99, %98 ], [ %139, %138 ]
  store i64 %141, i64* %19, align 8
  br label %230

142:                                              ; preds = %96
  %143 = load %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"** %18, align 8
  %144 = icmp eq %"struct.notifier::Subscription"* %143, %97
  br i1 %144, label %149, label %145

145:                                              ; preds = %142, %145
  %146 = phi %"struct.notifier::Subscription"* [ %147, %145 ], [ %143, %142 ]
  %147 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %146, i64 -1
  tail call void @_ZN8notifier12SubscriptionD1Ev(%"struct.notifier::Subscription"* %147) #9
  %148 = icmp eq %"struct.notifier::Subscription"* %147, %97
  br i1 %148, label %149, label %145

149:                                              ; preds = %145, %142
  store %"struct.notifier::Subscription"* %97, %"struct.notifier::Subscription"** %18, align 8
  br label %230

150:                                              ; preds = %3
  %151 = icmp eq i64 %12, 0
  br i1 %151, label %167, label %152

152:                                              ; preds = %150
  %153 = inttoptr i64 %12 to i8*
  %154 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %0, i64 0, i32 0, i32 1
  %155 = load %"struct.notifier::Subscription"*, %"struct.notifier::Subscription"** %154, align 8
  %156 = icmp eq %"struct.notifier::Subscription"* %155, %16
  br i1 %156, label %164, label %157

157:                                              ; preds = %152, %157
  %158 = phi %"struct.notifier::Subscription"* [ %159, %157 ], [ %155, %152 ]
  %159 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %158, i64 -1
  tail call void @_ZN8notifier12SubscriptionD1Ev(%"struct.notifier::Subscription"* %159) #9
  %160 = icmp eq %"struct.notifier::Subscription"* %159, %16
  br i1 %160, label %161, label %157

161:                                              ; preds = %157
  %162 = bitcast %"class.std::__1::vector.176"* %0 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %161, %152
  %165 = phi i8* [ %163, %161 ], [ %153, %152 ]
  store %"struct.notifier::Subscription"* %16, %"struct.notifier::Subscription"** %154, align 8
  tail call void @_ZdlPv(i8* %165) #10
  %166 = bitcast %"class.std::__1::vector.176"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 24, i1 false) #9
  br label %167

167:                                              ; preds = %150, %164
  %168 = phi i64 [ %10, %150 ], [ 0, %164 ]
  %169 = icmp ugt i64 %7, 384307168202282325
  br i1 %169, label %170, label %172

170:                                              ; preds = %167
  %171 = bitcast %"class.std::__1::vector.176"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #11
  unreachable

172:                                              ; preds = %167
  %173 = sdiv exact i64 %168, 48
  %174 = icmp ult i64 %173, 192153584101141162
  br i1 %174, label %175, label %179

175:                                              ; preds = %172
  %176 = shl nsw i64 %173, 1
  %177 = icmp ult i64 %176, %7
  %178 = select i1 %177, i64 %7, i64 %176
  br label %179

179:                                              ; preds = %175, %172
  %180 = phi i64 [ %178, %175 ], [ 384307168202282325, %172 ]
  %181 = mul i64 %180, 48
  %182 = tail call i8* @_Znwm(i64 %181) #10
  %183 = bitcast i8* %182 to %"struct.notifier::Subscription"*
  %184 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %0, i64 0, i32 0, i32 1
  %185 = bitcast %"struct.notifier::Subscription"** %184 to i8**
  store i8* %182, i8** %185, align 8
  %186 = bitcast %"class.std::__1::vector.176"* %0 to i8**
  store i8* %182, i8** %186, align 8
  %187 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %183, i64 %180
  store %"struct.notifier::Subscription"* %187, %"struct.notifier::Subscription"** %8, align 8
  %188 = bitcast %"struct.notifier::Subscription"** %184 to i64*
  %189 = ptrtoint i8* %182 to i64
  %190 = icmp eq %"struct.notifier::Subscription"* %1, %2
  br i1 %190, label %228, label %191

191:                                              ; preds = %179, %222
  %192 = phi %"struct.notifier::Subscription"* [ %224, %222 ], [ %183, %179 ]
  %193 = phi %"struct.notifier::Subscription"* [ %223, %222 ], [ %1, %179 ]
  %194 = bitcast %"struct.notifier::Subscription"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %191
  %199 = bitcast %"struct.notifier::Subscription"* %192 to i8*
  %200 = bitcast %"struct.notifier::Subscription"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 24, i1 false) #9
  br label %207

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %192, i64 0, i32 0
  %203 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %202, i8* %204, i64 %206) #9
  br label %207

207:                                              ; preds = %201, %198
  %208 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %192, i64 0, i32 1
  %209 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %193, i64 0, i32 1
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %207
  %215 = bitcast %"class.std::__1::basic_string"* %208 to i8*
  %216 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 24, i1 false) #9
  br label %222

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %193, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = load i64, i64* %220, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %208, i8* %219, i64 %221) #9
  br label %222

222:                                              ; preds = %217, %214
  %223 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %193, i64 1
  %224 = getelementptr inbounds %"struct.notifier::Subscription", %"struct.notifier::Subscription"* %192, i64 1
  %225 = icmp eq %"struct.notifier::Subscription"* %223, %2
  br i1 %225, label %226, label %191

226:                                              ; preds = %222
  %227 = ptrtoint %"struct.notifier::Subscription"* %224 to i64
  br label %228

228:                                              ; preds = %179, %226
  %229 = phi i64 [ %189, %179 ], [ %227, %226 ]
  store i64 %229, i64* %188, align 8
  br label %230

230:                                              ; preds = %140, %149, %228
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8notifier17ServerInformationD1Ev(%"struct.notifier::ServerInformation"*) unnamed_addr #2

declare void @_ZN8notifier5LoginC1EPNS0_8DelegateERKN11jingle_xmpp18XmppClientSettingsEN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN7network5mojom27ProxyResolvingSocketFactoryEEEEEERKNSt3__16vectorINS_17ServerInformationENSH_9allocatorISJ_EEEEbRKNSH_12basic_stringIcNSH_11char_traitsIcEENSK_IcEEEERKN3net27NetworkTrafficAnnotationTagEPNSB_24NetworkConnectionTrackerE(%"class.notifier::Login"*, %"class.notifier::Login::Delegate"*, %"class.jingle_xmpp::XmppClientSettings"* dereferenceable(216), %"class.base::RepeatingCallback"*, %"class.std::__1::vector.188"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4), %"class.network::NetworkConnectionTracker"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8notifier12NotificationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.235"*, %"struct.notifier::Notification"* dereferenceable(72)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.235", %"class.std::__1::vector.235"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.notifier::Notification"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.235"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.235"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.235", %"class.std::__1::vector.235"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.notifier::Notification"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.notifier::Notification"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.notifier::Notification"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %33, i64 %32
  %36 = ptrtoint %"struct.notifier::Notification"* %35 to i64
  tail call void @_ZN8notifier12NotificationC1ERKS0_(%"struct.notifier::Notification"* %34, %"struct.notifier::Notification"* dereferenceable(72) %1) #9
  %37 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %34, i64 1
  %38 = ptrtoint %"struct.notifier::Notification"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.235", %"class.std::__1::vector.235"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %39, align 8
  %41 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %3, align 8
  %42 = icmp eq %"struct.notifier::Notification"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.notifier::Notification"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.notifier::Notification"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.notifier::Notification"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %47, i64 -1
  tail call void @_ZN8notifier12NotificationC1ERKS0_(%"struct.notifier::Notification"* %48, %"struct.notifier::Notification"* dereferenceable(72) %49) #9
  %50 = icmp eq %"struct.notifier::Notification"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.notifier::Notification"*, %"struct.notifier::Notification"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.notifier::Notification"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.notifier::Notification"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.notifier::Notification"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.notifier::Notification"*
  %60 = icmp eq %"struct.notifier::Notification"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.notifier::Notification"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.notifier::Notification", %"struct.notifier::Notification"* %62, i64 -1
  tail call void @_ZN8notifier12NotificationD1Ev(%"struct.notifier::Notification"* %63) #9
  %64 = icmp eq %"struct.notifier::Notification"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN8notifier12NotificationC1ERKS0_(%"struct.notifier::Notification"*, %"struct.notifier::Notification"* dereferenceable(72)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !9}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !9}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !9}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !9}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!45 = distinct !{!45, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4base12ObserverListIN8notifier18PushClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!49 = distinct !{!49, !9}
!50 = distinct !{!50, !9}
!51 = !{i8 0, i8 2}
