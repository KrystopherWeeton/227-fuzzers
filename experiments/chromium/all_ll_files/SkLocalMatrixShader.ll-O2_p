; ModuleID = '../../third_party/skia/src/shaders/SkLocalMatrixShader.cpp'
source_filename = "../../third_party/skia/src/shaders/SkLocalMatrixShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOverrideDeviceMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider* }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.SkLocalMatrixShader = type { %class.SkShaderBase.base, %class.sk_sp }
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.3", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.2 }
%class.sk_sp.2 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.6, %class.SkTHashMap, %class.SkTHashMap.14, %class.SkTArray.23, %class.SkTArray.25, i32, i8, [3 x i8] }>
%class.SkTArray.6 = type { %"class.std::__1::unique_ptr.7"*, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.25, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.26 }
%class.sk_sp.26 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.110" }
%"struct.std::__1::pair.110" = type { i32, i32 }
%class.SkTHashMap.14 = type { %class.SkTHashTable.15 }
%class.SkTHashTable.15 = type { i32, i32, %class.SkAutoTArray.16 }
%class.SkAutoTArray.16 = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.111" }
%"struct.std::__1::pair.111" = type { i32, %class.SkTArray.112* }
%class.SkTArray.112 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.23 = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.112, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.25 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.39 }
%class.SkFibBlockSizes.39 = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrColorInfo = type opaque
%"class.GrFPArgs::WithPreLocalMatrix" = type { %struct.GrFPArgs, %class.SkMatrix }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.sk_sp.72 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.55, i32, [4 x i8], %class.sk_sp.64*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.55 = type { %class.SkTHashTable.56 }
%class.SkTHashTable.56 = type { i32, i32, %class.SkAutoTArray.57 }
%class.SkAutoTArray.57 = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.72*, %class.SkReadBuffer*)* }
%class.sk_sp.64 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.65" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.64*, i8*, i64, i8*)*, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.77*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.77*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.77*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.77 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.73", [7 x i8] }>
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl.75" }
%"struct.std::__1::__cxx_atomic_impl.75" = type { %"struct.std::__1::__cxx_atomic_base_impl.76" }
%"struct.std::__1::__cxx_atomic_base_impl.76" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.78, i32, i32 }
%class.sk_sp.78 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.79, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.79 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%class.SkTCopyOnFirstWrite = type { %class.SkMatrix*, %class.SkTLazy }
%class.SkTLazy = type { [40 x i8], %class.SkMatrix* }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type opaque
%class.SkPaint = type <{ %class.sk_sp.80, %class.sk_sp, %class.sk_sp.81, %class.sk_sp.82, %class.sk_sp.83, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.80 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.81 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.82 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.83 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.84, %"class.std::__1::vector", %"class.std::__1::vector.96", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.84 = type { %class.SkTHashTable.85 }
%class.SkTHashTable.85 = type { i32, i32, %class.SkAutoTArray.86 }
%class.SkAutoTArray.86 = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.93" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { i32*, i32*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.96" }
%"struct.skvm::Ptr" = type { i32 }
%class.SkCTMShader = type { %class.SkShaderBase.base, %class.sk_sp, %class.SkMatrix }
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkRuntimeEffect = type opaque
%class.SkStageUpdater = type { i32 (...)** }

$_ZN8GrFPArgs18WithPreLocalMatrixC2ERKS_RK8SkMatrix = comdat any

$_ZN19SkLocalMatrixShaderD2Ev = comdat any

$_ZN19SkLocalMatrixShaderD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK19SkLocalMatrixShader10getFactoryEv = comdat any

$_ZNK19SkLocalMatrixShader11getTypeNameEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK8SkShader8isOpaqueEv = comdat any

$_ZNK19SkLocalMatrixShader11asAGradientEPN8SkShader12GradientInfoE = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK19SkLocalMatrixShader24makeAsALocalMatrixShaderEP8SkMatrix = comdat any

$_ZNK12SkShaderBase18onAsLuminanceColorEPj = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

$_ZN11SkCTMShaderD2Ev = comdat any

$_ZN11SkCTMShaderD0Ev = comdat any

$_ZNK11SkCTMShader10getFactoryEv = comdat any

$_ZNK11SkCTMShader11getTypeNameEv = comdat any

$_ZNK11SkCTMShader7flattenER13SkWriteBuffer = comdat any

$_ZNK11SkCTMShader11asAGradientEPN8SkShader12GradientInfoE = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK11SkCTMShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc = comdat any

$_ZNK11SkCTMShader14onAppendStagesERK10SkStageRec = comdat any

$_ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZN30SkOverrideDeviceMatrixProviderD0Ev = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZTV30SkOverrideDeviceMatrixProvider = comdat any

@_ZTV19SkLocalMatrixShader = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkLocalMatrixShader*)* @_ZN19SkLocalMatrixShaderD2Ev to i8*), i8* bitcast (void (%class.SkLocalMatrixShader*)* @_ZN19SkLocalMatrixShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.72*, %class.SkReadBuffer*)* (%class.SkLocalMatrixShader*)* @_ZNK19SkLocalMatrixShader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkLocalMatrixShader*)* @_ZNK19SkLocalMatrixShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkLocalMatrixShader*, %class.SkWriteBuffer*)* @_ZNK19SkLocalMatrixShader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkShader*)* @_ZNK8SkShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkLocalMatrixShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK19SkLocalMatrixShader11asAGradientEPN8SkShader12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkLocalMatrixShader*, %struct.GrFPArgs*)* @_ZNK19SkLocalMatrixShader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkLocalMatrixShader*, %class.SkMatrix*, i32*)* @_ZNK19SkLocalMatrixShader10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp*, %class.SkLocalMatrixShader*, %class.SkMatrix*)* @_ZNK19SkLocalMatrixShader24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkLocalMatrixShader*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK19SkLocalMatrixShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkLocalMatrixShader*, %struct.SkStageRec*)* @_ZNK19SkLocalMatrixShader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkLocalMatrixShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK19SkLocalMatrixShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@_ZTV11SkCTMShader = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCTMShader*)* @_ZN11SkCTMShaderD2Ev to i8*), i8* bitcast (void (%class.SkCTMShader*)* @_ZN11SkCTMShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.72*, %class.SkReadBuffer*)* (%class.SkCTMShader*)* @_ZNK11SkCTMShader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkCTMShader*)* @_ZNK11SkCTMShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkCTMShader*, %class.SkWriteBuffer*)* @_ZNK11SkCTMShader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkShader*)* @_ZNK8SkShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkCTMShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK11SkCTMShader11asAGradientEPN8SkShader12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkCTMShader*, %struct.GrFPArgs*)* @_ZNK11SkCTMShader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkCTMShader*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK11SkCTMShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkCTMShader*, %struct.SkStageRec*)* @_ZNK11SkCTMShader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkCTMShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@_ZTV30SkOverrideDeviceMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkOverrideDeviceMatrixProvider*)* @_ZN30SkOverrideDeviceMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*)* @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*)* @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV19GrDeviceSpaceEffect = external unnamed_addr constant { [10 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [20 x i8] c"SkLocalMatrixShader\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"SkCTMShader\00", align 1
@__const._ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc.matrixProvider = private unnamed_addr constant %class.SkOverrideDeviceMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*) }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK19SkLocalMatrixShader19asFragmentProcessorERK8GrFPArgs(%class.SkLocalMatrixShader*, %struct.GrFPArgs* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.GrFPArgs::WithPreLocalMatrix", align 8
  %4 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1
  %5 = bitcast %class.sk_sp* %4 to %class.SkShaderBase**
  %6 = load %class.SkShaderBase*, %class.SkShaderBase** %5, align 8
  %7 = bitcast %"class.GrFPArgs::WithPreLocalMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #8
  %8 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 1
  call void @_ZN8GrFPArgs18WithPreLocalMatrixC2ERKS_RK8SkMatrix(%"class.GrFPArgs::WithPreLocalMatrix"* nonnull %3, %struct.GrFPArgs* dereferenceable(40) %1, %class.SkMatrix* dereferenceable(40) %8)
  %9 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %3, i64 0, i32 0
  %10 = bitcast %class.SkShaderBase* %6 to %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)***
  %11 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*** %10, align 8
  %12 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %11, i64 10
  %13 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %12, align 8
  %14 = call %class.GrFragmentProcessor* %13(%class.SkShaderBase* %6, %struct.GrFPArgs* nonnull dereferenceable(40) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #8
  ret %class.GrFragmentProcessor* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrFPArgs18WithPreLocalMatrixC2ERKS_RK8SkMatrix(%"class.GrFPArgs::WithPreLocalMatrix"*, %struct.GrFPArgs* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.GrFPArgs::WithPreLocalMatrix"* %0 to i8*
  %5 = bitcast %struct.GrFPArgs* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  %6 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %0, i64 0, i32 1
  %7 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %7, align 4
  %8 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %0, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %0, i64 0, i32 1, i32 0, i64 8
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %0, i64 0, i32 1, i32 1
  store i32 16, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #8
  %18 = zext i8 %17 to i32
  store i32 %18, i32* %12, align 4
  br label %19

19:                                               ; preds = %3, %16
  %20 = phi i32 [ %18, %16 ], [ %13, %3 ]
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %0, i64 0, i32 0, i32 2
  %25 = load %class.SkMatrix*, %class.SkMatrix** %24, align 8
  %26 = icmp eq %class.SkMatrix* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* %6, %class.SkMatrix* dereferenceable(40) %2, %class.SkMatrix* nonnull dereferenceable(40) %25) #8
  %29 = load i32, i32* %11, align 4
  %30 = trunc i32 %29 to i8
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %6) #8
  %34 = zext i8 %33 to i32
  store i32 %34, i32* %11, align 4
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi i32 [ %34, %32 ], [ %29, %27 ]
  %37 = and i32 %36, 15
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, %class.SkMatrix* null, %class.SkMatrix* %6
  br label %40

40:                                               ; preds = %23, %35
  %41 = phi %class.SkMatrix* [ %39, %35 ], [ %2, %23 ]
  store %class.SkMatrix* %41, %class.SkMatrix** %24, align 8
  br label %42

42:                                               ; preds = %40, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkLocalMatrixShader10CreateProcER12SkReadBuffer(%class.sk_sp.72* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.sk_sp, align 8
  %5 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #8
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %7 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %7, align 16
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 16
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %10, align 16
  store i32 16, i32* %6, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %3) #8
  %11 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 8) #8, !noalias !2
  %12 = icmp eq %class.SkFlattenable* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %14, align 8
  br label %30

15:                                               ; preds = %2
  %16 = bitcast %class.SkFlattenable* %11 to %class.SkShader*
  %17 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp* nonnull sret %4, %class.SkShader* nonnull %16, %class.SkMatrix* nonnull dereferenceable(40) %3)
  %18 = bitcast %class.sk_sp* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.sk_sp.72* %0 to i64*
  store i64 %19, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %21 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %15
  %25 = bitcast %class.SkFlattenable* %11 to %class.SkRefCntBase*
  %26 = bitcast %class.SkFlattenable* %11 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #8
  br label %30

30:                                               ; preds = %13, %15, %24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp* noalias nocapture sret, %class.SkShader*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.sk_sp, align 8
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #8
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i32 [ %12, %10 ], [ %7, %3 ]
  %15 = and i32 %14, 15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %13
  %18 = icmp eq %class.SkShader* %1, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.SkShader, %class.SkShader* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !7
  br label %22

22:                                               ; preds = %17, %19
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkShader* %1, %class.SkShader** %23, align 8, !alias.scope !7
  br label %76

24:                                               ; preds = %13
  %25 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #8
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %27 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %27, align 16
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %29, align 16
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %30, align 16
  store i32 16, i32* %26, align 4
  %31 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %32, align 8
  %33 = bitcast %class.SkShader* %1 to %class.SkShaderBase*
  %34 = bitcast %class.SkShader* %1 to void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)***
  %35 = load void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)**, void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)*, void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)** %35, i64 13
  %37 = load void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)*, void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)** %36, align 8
  call void %37(%class.sk_sp* nonnull sret %5, %class.SkShaderBase* %33, %class.SkMatrix* nonnull %4) #8
  %38 = load %class.SkShader*, %class.SkShader** %32, align 8
  %39 = icmp eq %class.SkShader* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %24
  %41 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %4, %class.SkMatrix* dereferenceable(40) %2) #8
  %42 = load %class.SkShader*, %class.SkShader** %32, align 8
  %43 = icmp eq %class.SkShader* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkShader, %class.SkShader* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %52

47:                                               ; preds = %24
  %48 = icmp eq %class.SkShader* %1, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %class.SkShader, %class.SkShader* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic, !noalias !10
  br label %52

52:                                               ; preds = %49, %47, %44, %40
  %53 = phi %class.SkShader* [ null, %40 ], [ %42, %44 ], [ null, %47 ], [ %1, %49 ]
  %54 = phi %class.SkMatrix* [ %4, %40 ], [ %4, %44 ], [ %2, %47 ], [ %2, %49 ]
  %55 = ptrtoint %class.SkShader* %53 to i64
  %56 = call i8* @_Znwm(i64 64) #9, !noalias !13
  %57 = bitcast i8* %56 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %57, %class.SkMatrix* %54) #8, !noalias !13
  %58 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV19SkLocalMatrixShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8, !noalias !13
  %59 = getelementptr inbounds i8, i8* %56, i64 56
  %60 = bitcast i8* %59 to i64*
  store i64 %55, i64* %60, align 8, !noalias !13
  %61 = ptrtoint i8* %56 to i64
  %62 = bitcast %class.sk_sp* %0 to i64*
  store i64 %61, i64* %62, align 8
  %63 = load %class.SkShader*, %class.SkShader** %32, align 8
  %64 = icmp eq %class.SkShader* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %52
  %66 = getelementptr inbounds %class.SkShader, %class.SkShader* %63, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.SkShader* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.SkShader* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #8
  br label %75

75:                                               ; preds = %69, %65, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #8
  br label %76

76:                                               ; preds = %75, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkLocalMatrixShader7flattenER13SkWriteBuffer(%class.SkLocalMatrixShader*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %5 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %5, i64 20
  %7 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %6, align 8
  tail call void %7(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %3) #8
  %8 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1, i32 0
  %9 = bitcast %class.SkShader** %8 to %class.SkFlattenable**
  %10 = load %class.SkFlattenable*, %class.SkFlattenable** %9, align 8
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %12 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %12, i64 11
  %14 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, %class.SkFlattenable* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaderBase::Context"* @_ZNK19SkLocalMatrixShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc(%class.SkLocalMatrixShader*, %"struct.SkShaderBase::ContextRec"* nocapture readonly dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkTCopyOnFirstWrite, align 8
  %5 = alloca %"struct.SkShaderBase::ContextRec", align 8
  %6 = bitcast %class.SkTCopyOnFirstWrite* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 0
  store %class.SkMatrix* %8, %class.SkMatrix** %9, align 8
  %10 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 1, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %10, align 8
  %11 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 1
  %12 = load %class.SkMatrix*, %class.SkMatrix** %11, align 8
  %13 = icmp eq %class.SkMatrix* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = ptrtoint %class.SkMatrix* %8 to i64
  br label %26

16:                                               ; preds = %3
  %17 = bitcast %class.SkMatrix* %8 to i8*
  %18 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %18, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %17, i64 40, i1 false) #8
  %20 = bitcast %class.SkMatrix** %10 to %class.SkTLazy**
  store %class.SkTLazy* %18, %class.SkTLazy** %20, align 8
  %21 = ptrtoint %class.SkTLazy* %18 to i64
  %22 = bitcast %class.SkTCopyOnFirstWrite* %4 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %class.SkTLazy* %18 to %class.SkMatrix*
  %24 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* %23, %class.SkMatrix* nonnull dereferenceable(40) %12) #8
  %25 = load i64, i64* %22, align 8
  br label %26

26:                                               ; preds = %14, %16
  %27 = phi i64 [ %15, %14 ], [ %25, %16 ]
  %28 = bitcast %"struct.SkShaderBase::ContextRec"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #8
  %29 = bitcast %"struct.SkShaderBase::ContextRec"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 40, i1 false)
  %30 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %5, i64 0, i32 1
  %31 = bitcast %class.SkMatrix** %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1
  %33 = bitcast %class.sk_sp* %32 to %class.SkShaderBase**
  %34 = load %class.SkShaderBase*, %class.SkShaderBase** %33, align 8
  %35 = call %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase* %34, %"struct.SkShaderBase::ContextRec"* nonnull dereferenceable(40) %5, %class.SkArenaAlloc* %2) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #8
  %36 = load %class.SkMatrix*, %class.SkMatrix** %10, align 8
  %37 = icmp eq %class.SkMatrix* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %26
  store %class.SkMatrix* null, %class.SkMatrix** %10, align 8
  br label %39

39:                                               ; preds = %26, %38
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  ret %"class.SkShaderBase::Context"* %35
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImage* @_ZNK19SkLocalMatrixShader10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkLocalMatrixShader*, %class.SkMatrix*, i32*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.SkMatrix, align 16
  %6 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %8 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %11, align 16
  store i32 16, i32* %7, align 4
  %12 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkShader*, %class.SkShader** %12, align 8
  %14 = call %class.SkImage* @_ZNK8SkShader8isAImageEP8SkMatrixP10SkTileMode(%class.SkShader* %13, %class.SkMatrix* nonnull %4, i32* %2) #8
  %15 = icmp ne %class.SkImage* %14, null
  %16 = icmp ne %class.SkMatrix* %1, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %28

18:                                               ; preds = %3
  %19 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #8
  %20 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %22 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %22, align 16, !alias.scope !16
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %24, align 16, !alias.scope !16
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %25, align 16, !alias.scope !16
  store i32 16, i32* %21, align 4, !alias.scope !16
  %26 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %5, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkMatrix* dereferenceable(40) %20) #8
  %27 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* nonnull align 16 %19, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #8
  br label %28

28:                                               ; preds = %18, %3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #8
  ret %class.SkImage* %14
}

declare %class.SkImage* @_ZNK8SkShader8isAImageEP8SkMatrixP10SkTileMode(%class.SkShader*, %class.SkMatrix*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SkLocalMatrixShader14onAppendStagesERK10SkStageRec(%class.SkLocalMatrixShader*, %struct.SkStageRec* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkTCopyOnFirstWrite, align 8
  %4 = alloca %struct.SkStageRec, align 8
  %5 = bitcast %class.SkTCopyOnFirstWrite* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  %7 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 0
  store %class.SkMatrix* %7, %class.SkMatrix** %8, align 8
  %9 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %9, align 8
  %10 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 5
  %11 = load %class.SkMatrix*, %class.SkMatrix** %10, align 8
  %12 = icmp eq %class.SkMatrix* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = ptrtoint %class.SkMatrix* %7 to i64
  br label %25

15:                                               ; preds = %2
  %16 = bitcast %class.SkMatrix* %7 to i8*
  %17 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1
  %18 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %17, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %16, i64 40, i1 false) #8
  %19 = bitcast %class.SkMatrix** %9 to %class.SkTLazy**
  store %class.SkTLazy* %17, %class.SkTLazy** %19, align 8
  %20 = ptrtoint %class.SkTLazy* %17 to i64
  %21 = bitcast %class.SkTCopyOnFirstWrite* %3 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %class.SkTLazy* %17 to %class.SkMatrix*
  %23 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* %22, %class.SkMatrix* nonnull dereferenceable(40) %11) #8
  %24 = load i64, i64* %21, align 8
  br label %25

25:                                               ; preds = %13, %15
  %26 = phi i64 [ %14, %13 ], [ %24, %15 ]
  %27 = bitcast %struct.SkStageRec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %27) #8
  %28 = bitcast %struct.SkStageRec* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %28, i64 56, i1 false)
  %29 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %4, i64 0, i32 5
  %30 = bitcast %class.SkMatrix** %29 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1
  %32 = bitcast %class.sk_sp* %31 to %class.SkShaderBase**
  %33 = load %class.SkShaderBase*, %class.SkShaderBase** %32, align 8
  %34 = call zeroext i1 @_ZNK12SkShaderBase12appendStagesERK10SkStageRec(%class.SkShaderBase* %33, %struct.SkStageRec* nonnull dereferenceable(56) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %27) #8
  %35 = load %class.SkMatrix*, %class.SkMatrix** %9, align 8
  %36 = icmp eq %class.SkMatrix* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %25
  store %class.SkMatrix* null, %class.SkMatrix** %9, align 8
  br label %38

38:                                               ; preds = %25, %37
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  ret i1 %34
}

declare zeroext i1 @_ZNK12SkShaderBase12appendStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkLocalMatrixShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkLocalMatrixShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 align 2 {
  %12 = alloca %class.SkTCopyOnFirstWrite, align 8
  %13 = bitcast %class.SkTCopyOnFirstWrite* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #8
  %14 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %1, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 0
  store %class.SkMatrix* %15, %class.SkMatrix** %16, align 8
  %17 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %17, align 8
  %18 = icmp eq %class.SkMatrix* %7, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %11
  %20 = bitcast %class.SkMatrix* %15 to i8*
  %21 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %21, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 4 %20, i64 40, i1 false) #8
  %23 = bitcast %class.SkMatrix** %17 to %class.SkTLazy**
  store %class.SkTLazy* %21, %class.SkTLazy** %23, align 8
  %24 = ptrtoint %class.SkTLazy* %21 to i64
  %25 = bitcast %class.SkTCopyOnFirstWrite* %12 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %class.SkTLazy* %21 to %class.SkMatrix*
  %27 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* %26, %class.SkMatrix* nonnull dereferenceable(40) %7) #8
  %28 = load %class.SkMatrix*, %class.SkMatrix** %16, align 8
  br label %29

29:                                               ; preds = %11, %19
  %30 = phi %class.SkMatrix* [ %15, %11 ], [ %28, %19 ]
  %31 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %1, i64 0, i32 1
  %32 = bitcast %class.sk_sp* %31 to %class.SkShaderBase**
  %33 = load %class.SkShaderBase*, %class.SkShaderBase** %32, align 8
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret %0, %class.SkShaderBase* %33, %"class.skvm::Builder"* %2, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %3, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %5, %class.SkMatrixProvider* dereferenceable(112) %6, %class.SkMatrix* %30, %class.SkColorInfo* dereferenceable(16) %8, %"struct.skvm::Uniforms"* %9, %class.SkArenaAlloc* %10) #8
  %34 = load %class.SkMatrix*, %class.SkMatrix** %17, align 8
  %35 = icmp eq %class.SkMatrix* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  store %class.SkMatrix* null, %class.SkMatrix** %17, align 8
  br label %37

37:                                               ; preds = %29, %36
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #8
  ret void
}

declare void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK11SkCTMShader19asFragmentProcessorERK8GrFPArgs(%class.SkCTMShader*, %struct.GrFPArgs* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.SkOverrideDeviceMatrixProvider, align 8
  %5 = alloca %"class.GrFPArgs::WithPreLocalMatrix", align 8
  %6 = alloca %struct.GrFPArgs, align 8
  %7 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %9 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 16
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %11, align 16
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %12, align 16
  store i32 16, i32* %8, align 4
  %13 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2
  %14 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i8
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %13) #8
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %18, %2
  %22 = phi i32 [ %20, %18 ], [ %15, %2 ]
  %23 = and i32 %22, 15
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #8
  br label %29

27:                                               ; preds = %21
  %28 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %13, %class.SkMatrix* nonnull %3) #8
  br i1 %28, label %29, label %151

29:                                               ; preds = %25, %27
  %30 = bitcast %class.SkOverrideDeviceMatrixProvider* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %30) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast (%class.SkOverrideDeviceMatrixProvider* @__const._ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc.matrixProvider to i8*), i64 112, i1 false)
  %31 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 1
  %32 = bitcast %class.SkMatrixProvider** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1
  %36 = bitcast %class.SkMatrix* %13 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 2
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 3
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 4
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 5
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 6
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 7
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 8
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = bitcast %class.SkM44* %35 to i32*
  store i32 %37, i32* %62, align 8
  %63 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 1
  %64 = bitcast float* %63 to i32*
  store i32 %46, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %65, align 8
  %66 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 3
  %67 = bitcast float* %66 to i32*
  store i32 %55, i32* %67, align 4
  %68 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 4
  %69 = bitcast float* %68 to i32*
  store i32 %40, i32* %69, align 8
  %70 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 5
  %71 = bitcast float* %70 to i32*
  store i32 %49, i32* %71, align 4
  %72 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %72, align 8
  %73 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 7
  %74 = bitcast float* %73 to i32*
  store i32 %58, i32* %74, align 4
  %75 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 8
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %76, align 8
  %77 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 12
  %78 = bitcast float* %77 to i32*
  store i32 %43, i32* %78, align 8
  %79 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 13
  %80 = bitcast float* %79 to i32*
  store i32 %52, i32* %80, align 4
  %81 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %81, align 8
  %82 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 1, i32 0, i64 15
  %83 = bitcast float* %82 to i32*
  store i32 %61, i32* %83, align 4
  %84 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0, i32 2
  %85 = bitcast %class.SkMatrix* %84 to i8*
  %86 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 4 %86, i64 40, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV30SkOverrideDeviceMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %87 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 1
  %88 = bitcast %class.SkMatrixProvider** %87 to i64*
  store i64 %33, i64* %88, align 8
  %89 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 1
  %90 = bitcast %class.sk_sp* %89 to %class.SkShaderBase**
  %91 = load %class.SkShaderBase*, %class.SkShaderBase** %90, align 8
  %92 = bitcast %"class.GrFPArgs::WithPreLocalMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %92) #8
  %93 = bitcast %struct.GrFPArgs* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #8
  %94 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 32, i1 false) #8, !alias.scope !19
  %95 = bitcast %struct.GrFPArgs* %1 to i64*
  %96 = load i64, i64* %95, align 8, !noalias !19
  %97 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %98 = bitcast %class.GrColorInfo** %97 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !19
  %100 = bitcast %struct.GrFPArgs* %6 to i64*
  store i64 %96, i64* %100, align 8, !alias.scope !19
  %101 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %6, i64 0, i32 1
  store %class.SkMatrixProvider* %94, %class.SkMatrixProvider** %101, align 8, !alias.scope !19
  %102 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %6, i64 0, i32 2
  %103 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %6, i64 0, i32 3
  %104 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %6, i64 0, i32 4
  %105 = bitcast %class.GrColorInfo** %104 to i64*
  store i64 %99, i64* %105, align 8, !alias.scope !19
  %106 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 3
  %107 = load i8, i8* %106, align 8, !range !22, !noalias !19
  store i8 %107, i8* %103, align 8, !alias.scope !19
  %108 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 2
  %109 = bitcast %class.SkMatrix** %108 to i64*
  %110 = load i64, i64* %109, align 8, !noalias !19
  %111 = bitcast %class.SkMatrix** %102 to i64*
  store i64 %110, i64* %111, align 8, !alias.scope !19
  %112 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 0, i32 1
  call void @_ZN8GrFPArgs18WithPreLocalMatrixC2ERKS_RK8SkMatrix(%"class.GrFPArgs::WithPreLocalMatrix"* nonnull %5, %struct.GrFPArgs* nonnull dereferenceable(40) %6, %class.SkMatrix* dereferenceable(40) %112)
  %113 = getelementptr inbounds %"class.GrFPArgs::WithPreLocalMatrix", %"class.GrFPArgs::WithPreLocalMatrix"* %5, i64 0, i32 0
  %114 = bitcast %class.SkShaderBase* %91 to %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)***
  %115 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*** %114, align 8
  %116 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %115, i64 10
  %117 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %116, align 8
  %118 = call %class.GrFragmentProcessor* %117(%class.SkShaderBase* %91, %struct.GrFPArgs* nonnull dereferenceable(40) %113) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %92) #8
  %119 = icmp eq %class.GrFragmentProcessor* %118, null
  br i1 %119, label %149, label %120

120:                                              ; preds = %29
  %121 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %3, %class.GrFragmentProcessor* nonnull %118) #8
  %122 = call i8* @_ZN11GrProcessornwEm(i64 64) #8
  %123 = bitcast i8* %122 to %class.GrFragmentProcessor*
  %124 = icmp eq %class.GrFragmentProcessor* %121, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %121, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 7
  br label %129

129:                                              ; preds = %125, %120
  %130 = phi i32 [ %128, %125 ], [ 7, %120 ]
  %131 = bitcast i8* %122 to i32 (...)***
  %132 = getelementptr inbounds i8, i8* %122, i64 8
  %133 = bitcast i8* %132 to i32*
  store i32 37, i32* %133, align 8
  %134 = getelementptr inbounds i8, i8* %122, i64 12
  %135 = bitcast i8* %134 to i32*
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds i8, i8* %122, i64 24
  %137 = getelementptr inbounds i8, i8* %122, i64 16
  %138 = getelementptr inbounds i8, i8* %122, i64 32
  %139 = bitcast i8* %138 to i64*
  %140 = bitcast i8* %136 to i8**
  store i8* %137, i8** %140, align 8
  store i64 8589934592, i64* %139, align 8
  %141 = getelementptr inbounds i8, i8* %122, i64 40
  %142 = bitcast i8* %141 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %142, align 8
  %143 = getelementptr inbounds i8, i8* %122, i64 48
  %144 = bitcast i8* %143 to i32*
  store i32 %130, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %122, i64 52
  %146 = bitcast i8* %145 to i32*
  store i32 0, i32* %146, align 4
  %147 = getelementptr inbounds i8, i8* %122, i64 56
  store i8 0, i8* %147, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrDeviceSpaceEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %123, %class.GrFragmentProcessor* %121, i64 3) #8
  %148 = ptrtoint i8* %122 to i64
  br label %149

149:                                              ; preds = %29, %129
  %150 = phi i64 [ %148, %129 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %30) #8
  br label %151

151:                                              ; preds = %27, %149
  %152 = phi i64 [ %150, %149 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  %153 = inttoptr i64 %152 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %153
}

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11SkCTMShader10CreateProcER12SkReadBuffer(%class.sk_sp.72* noalias nocapture sret, %class.SkReadBuffer* nocapture readnone dereferenceable(136)) #3 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkShaderBase11makeWithCTMERK8SkMatrix(%class.sk_sp* noalias nocapture sret, %class.SkShaderBase*, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #9
  %5 = icmp eq %class.SkShaderBase* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkShaderBase, %class.SkShaderBase* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic, !noalias !23
  br label %9

9:                                                ; preds = %3, %6
  %10 = ptrtoint %class.SkShaderBase* %1 to i64
  %11 = bitcast i8* %4 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %11, %class.SkMatrix* null) #8
  %12 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV11SkCTMShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 56
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 64
  %16 = bitcast %class.SkMatrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 40, i1 false) #8
  %17 = bitcast %class.sk_sp* %0 to i8**
  store i8* %4, i8** %17, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkLocalMatrixShaderD2Ev(%class.SkLocalMatrixShader*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV19SkLocalMatrixShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkLocalMatrixShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkLocalMatrixShaderD0Ev(%class.SkLocalMatrixShader*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV19SkLocalMatrixShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkLocalMatrixShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #8
  %18 = bitcast %class.SkLocalMatrixShader* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.72*, %class.SkReadBuffer*)* @_ZNK19SkLocalMatrixShader10getFactoryEv(%class.SkLocalMatrixShader*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.72*, %class.SkReadBuffer*)* @_ZN19SkLocalMatrixShader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK19SkLocalMatrixShader11getTypeNameEv(%class.SkLocalMatrixShader*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkShader8isOpaqueEv(%class.SkShader*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK19SkLocalMatrixShader11asAGradientEPN8SkShader12GradientInfoE(%class.SkLocalMatrixShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = bitcast %class.SkShader* %4 to i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)***
  %6 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)**, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %6, i64 8
  %8 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %7, align 8
  %9 = tail call i32 %8(%class.SkShader* %4, %"struct.SkShader::GradientInfo"* %1) #8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19SkLocalMatrixShader24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp* noalias sret, %class.SkLocalMatrixShader*, %class.SkMatrix*) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %class.SkMatrix* %2, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %1, i64 0, i32 0, i32 1
  %7 = bitcast %class.SkMatrix* %2 to i8*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 40, i1 false)
  br label %9

9:                                                ; preds = %3, %5
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %11 = getelementptr inbounds %class.SkLocalMatrixShader, %class.SkLocalMatrixShader* %1, i64 0, i32 1, i32 0
  %12 = load %class.SkShader*, %class.SkShader** %11, align 8
  %13 = icmp eq %class.SkShader* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.SkShader, %class.SkShader* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %9, %14
  store %class.SkShader* %12, %class.SkShader** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase18onAsLuminanceColorEPj(%class.SkShaderBase*, i32*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkCTMShaderD2Ev(%class.SkCTMShader*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV11SkCTMShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkCTMShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkCTMShaderD0Ev(%class.SkCTMShader*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV11SkCTMShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkCTMShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #8
  %18 = bitcast %class.SkCTMShader* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.72*, %class.SkReadBuffer*)* @_ZNK11SkCTMShader10getFactoryEv(%class.SkCTMShader*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.72*, %class.SkReadBuffer*)* @_ZN11SkCTMShader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK11SkCTMShader11getTypeNameEv(%class.SkCTMShader*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11SkCTMShader7flattenER13SkWriteBuffer(%class.SkCTMShader*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK11SkCTMShader11asAGradientEPN8SkShader12GradientInfoE(%class.SkCTMShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = bitcast %class.SkShader* %4 to i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)***
  %6 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)**, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %6, i64 8
  %8 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %7, align 8
  %9 = tail call i32 %8(%class.SkShader* %4, %"struct.SkShader::GradientInfo"* %1) #8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkShaderBase::Context"* @_ZNK11SkCTMShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc(%class.SkCTMShader*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  ret %"class.SkShaderBase::Context"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11SkCTMShader14onAppendStagesERK10SkStageRec(%class.SkCTMShader*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkOverrideDeviceMatrixProvider, align 8
  %4 = alloca %struct.SkStageRec, align 16
  %5 = bitcast %class.SkOverrideDeviceMatrixProvider* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast (%class.SkOverrideDeviceMatrixProvider* @__const._ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc.matrixProvider to i8*), i64 112, i1 false)
  %6 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 6
  %7 = bitcast %class.SkMatrixProvider** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1
  %12 = bitcast %class.SkMatrix* %9 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 2
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 3
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 4
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 5
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 6
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 7
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 2, i32 0, i64 8
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %class.SkM44* %11 to i32*
  store i32 %13, i32* %38, align 8
  %39 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 1
  %40 = bitcast float* %39 to i32*
  store i32 %22, i32* %40, align 4
  %41 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %41, align 8
  %42 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 3
  %43 = bitcast float* %42 to i32*
  store i32 %31, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 4
  %45 = bitcast float* %44 to i32*
  store i32 %16, i32* %45, align 8
  %46 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 5
  %47 = bitcast float* %46 to i32*
  store i32 %25, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %48, align 8
  %49 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 7
  %50 = bitcast float* %49 to i32*
  store i32 %34, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 8
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %52, align 8
  %53 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 12
  %54 = bitcast float* %53 to i32*
  store i32 %19, i32* %54, align 8
  %55 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 13
  %56 = bitcast float* %55 to i32*
  store i32 %28, i32* %56, align 4
  %57 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %57, align 8
  %58 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 1, i32 0, i64 15
  %59 = bitcast float* %58 to i32*
  store i32 %37, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0, i32 2
  %61 = bitcast %class.SkMatrix* %60 to i8*
  %62 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 4 %62, i64 40, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV30SkOverrideDeviceMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %63 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 1
  %64 = bitcast %class.SkMatrixProvider** %63 to i64*
  store i64 %8, i64* %64, align 8
  %65 = bitcast %struct.SkStageRec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %65) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %65, i8 -86, i64 24, i1 false)
  %66 = bitcast %struct.SkStageRec* %1 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 8
  %68 = bitcast %struct.SkStageRec* %4 to <2 x i64>*
  store <2 x i64> %67, <2 x i64>* %68, align 16
  %69 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %4, i64 0, i32 2
  %70 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %69, align 16
  %72 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %4, i64 0, i32 3
  %73 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 3
  %74 = bitcast %class.SkColorSpace** %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = bitcast %class.SkColorSpace** %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  %77 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %4, i64 0, i32 5
  %78 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 5
  %79 = bitcast %class.SkMatrix** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %class.SkMatrix** %77 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %4, i64 0, i32 6
  %83 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %3, i64 0, i32 0
  store %class.SkMatrixProvider* %83, %class.SkMatrixProvider** %82, align 16
  %84 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %0, i64 0, i32 1
  %85 = bitcast %class.sk_sp* %84 to %class.SkShaderBase**
  %86 = load %class.SkShaderBase*, %class.SkShaderBase** %85, align 8
  %87 = call zeroext i1 @_ZNK12SkShaderBase12appendStagesERK10SkStageRec(%class.SkShaderBase* %86, %struct.SkStageRec* nonnull dereferenceable(56) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #8
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkCTMShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %12 = alloca %class.SkOverrideDeviceMatrixProvider, align 8
  %13 = bitcast %class.SkOverrideDeviceMatrixProvider* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%class.SkOverrideDeviceMatrixProvider* @__const._ZNK11SkCTMShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc.matrixProvider to i8*), i64 112, i1 false)
  %14 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2
  %15 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1
  %17 = bitcast %class.SkMatrix* %14 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 1
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 2
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 3
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 4
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 5
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 6
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 7
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 2, i32 0, i64 8
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %class.SkM44* %16 to i32*
  store i32 %18, i32* %43, align 8
  %44 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 1
  %45 = bitcast float* %44 to i32*
  store i32 %27, i32* %45, align 4
  %46 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %46, align 8
  %47 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 3
  %48 = bitcast float* %47 to i32*
  store i32 %36, i32* %48, align 4
  %49 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 4
  %50 = bitcast float* %49 to i32*
  store i32 %21, i32* %50, align 8
  %51 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 5
  %52 = bitcast float* %51 to i32*
  store i32 %30, i32* %52, align 4
  %53 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %53, align 8
  %54 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 7
  %55 = bitcast float* %54 to i32*
  store i32 %39, i32* %55, align 4
  %56 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 8
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %57, align 8
  %58 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 12
  %59 = bitcast float* %58 to i32*
  store i32 %24, i32* %59, align 8
  %60 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 13
  %61 = bitcast float* %60 to i32*
  store i32 %33, i32* %61, align 4
  %62 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %62, align 8
  %63 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 1, i32 0, i64 15
  %64 = bitcast float* %63 to i32*
  store i32 %42, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0, i32 2
  %66 = bitcast %class.SkMatrix* %65 to i8*
  %67 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 4 %67, i64 40, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV30SkOverrideDeviceMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %68 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 1
  store %class.SkMatrixProvider* %6, %class.SkMatrixProvider** %68, align 8
  %69 = getelementptr inbounds %class.SkCTMShader, %class.SkCTMShader* %1, i64 0, i32 1
  %70 = bitcast %class.sk_sp* %69 to %class.SkShaderBase**
  %71 = load %class.SkShaderBase*, %class.SkShaderBase** %70, align 8
  %72 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %12, i64 0, i32 0
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret %0, %class.SkShaderBase* %71, %"class.skvm::Builder"* %2, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %3, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %5, %class.SkMatrixProvider* nonnull dereferenceable(112) %72, %class.SkMatrix* %7, %class.SkColorInfo* dereferenceable(16) %8, %"struct.skvm::Uniforms"* %9, %class.SkArenaAlloc* %10) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #8
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN30SkOverrideDeviceMatrixProviderD0Ev(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkOverrideDeviceMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #8
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

declare void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN12SkReadBuffer15readFlattenableI12SkShaderBaseEE5sk_spIT_Ev: argument 0"}
!4 = distinct !{!4, !"_ZN12SkReadBuffer15readFlattenableI12SkShaderBaseEE5sk_spIT_Ev"}
!5 = distinct !{!5, !6, !"_ZN12SkReadBuffer10readShaderEv: argument 0"}
!6 = distinct !{!6, !"_ZN12SkReadBuffer10readShaderEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_: argument 0"}
!9 = distinct !{!9, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_: argument 0"}
!12 = distinct !{!12, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_Z10sk_make_spI19SkLocalMatrixShaderJ5sk_spI8SkShaderERK8SkMatrixEES1_IT_EDpOT0_: argument 0"}
!15 = distinct !{!15, !"_Z10sk_make_spI19SkLocalMatrixShaderJ5sk_spI8SkShaderERK8SkMatrixEES1_IT_EDpOT0_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!18 = distinct !{!18, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK8GrFPArgs21withNewMatrixProviderERK16SkMatrixProvider: argument 0"}
!21 = distinct !{!21, !"_ZNK8GrFPArgs21withNewMatrixProviderERK16SkMatrixProvider"}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_Z9sk_ref_spI12SkShaderBaseE5sk_spIT_EPKS2_: argument 0"}
!25 = distinct !{!25, !"_Z9sk_ref_spI12SkShaderBaseE5sk_spIT_EPKS2_"}
