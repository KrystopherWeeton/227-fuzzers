; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_trusted_type_policy_factory.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_trusted_type_policy_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::TrustedTypePolicyFactory" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::Member.209", %"class.blink::Member.211", %"class.blink::HeapHashMap.213", i8, [7 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.200" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.186" }
%"class.WTF::Vector.186" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188", [32 x i8] }
%"class.WTF::VectorBufferBase.188" = type { %"struct.std::__1::pair.189"*, i32, i32 }
%"struct.std::__1::pair.189" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::HeapVector.197"* }
%"class.blink::HeapVector.197" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.WTF::Vector.203"* }
%"class.WTF::Vector.203" = type opaque
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.207" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::TrustedHTML"* }
%"class.blink::TrustedHTML" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::TrustedScript"* }
%"class.blink::TrustedScript" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::HeapHashMap.213" = type { %"class.WTF::HashMap.216" }
%"class.WTF::HashMap.216" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair.219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.219" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.222, %"class.blink::Member.223", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.222 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.225" }
%"class.blink::Persistent.225" = type { %"class.blink::PersistentBase.226" }
%"class.blink::PersistentBase.226" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::TrustedTypePolicy" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.blink::Member.233" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::TrustedTypePolicyOptions"* }
%"class.blink::TrustedTypePolicyOptions" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member.237", %"class.blink::Member.243", %"class.blink::Member.245" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::V8CreateHTMLCallback"* }
%"class.blink::V8CreateHTMLCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.241", %"class.blink::Member.241" }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::ScriptState"* }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::V8CreateScriptCallback"* }
%"class.blink::V8CreateScriptCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8CreateURLCallback"* }
%"class.blink::V8CreateURLCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.247" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.247" = type { %"class.v8::TracedReference.248" }
%"class.v8::TracedReference.248" = type { %"class.v8::BasicTracedReference.249" }
%"class.v8::BasicTracedReference.249" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.250", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.250" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.251" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i8* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.276", %"class.WTF::HashMap.276", %"class.WTF::HashMap.281", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.333", %"class.blink::Persistent.225", i8, i8, i8, %"class.WTF::Vector.347", %"class.std::__1::unique_ptr.352", %"class.blink::Persistent.358", %"class.blink::Persistent.362", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.258", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.270", i32, i32 }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.276" = type { %"class.WTF::HashTable.277" }
%"class.WTF::HashTable.277" = type <{ %"struct.WTF::KeyValuePair.280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.280" = type opaque
%"class.WTF::HashMap.281" = type { %"class.WTF::HashTable.282" }
%"class.WTF::HashTable.282" = type <{ %"struct.WTF::KeyValuePair.285"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.285" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.294", %class.scoped_refptr.190 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.289", i8* }
%"class.WTF::HashMap.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"struct.WTF::KeyValuePair.293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.293" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.294" = type { %"class.v8::PersistentValueMapBase.295" }
%"class.v8::PersistentValueMapBase.295" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.296", i8* }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.301", %"class.WTF::String", %"class.std::__1::unique_ptr.303" }
%"class.WTF::RefCounted.301" = type { %"class.base::RefCounted.302" }
%"class.base::RefCounted.302" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.317", %"class.WTF::Vector.323", i8, i32 }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.WTF::Vector.309"* }
%"class.WTF::Vector.309" = type { %"class.WTF::VectorBuffer.310" }
%"class.WTF::VectorBuffer.310" = type { %"class.WTF::VectorBufferBase.311" }
%"class.WTF::VectorBufferBase.311" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.311", [32 x i8] }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.336", %"class.WTF::HashMap.339" }
%"class.blink::ScopedPersistent.336" = type { %"class.v8::Persistent.337" }
%"class.v8::Persistent.337" = type { %"class.v8::PersistentBase.338" }
%"class.v8::PersistentBase.338" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.343" = type opaque
%"class.WTF::Vector.347" = type { %"class.WTF::VectorBuffer.348" }
%"class.WTF::VectorBuffer.348" = type { %"class.WTF::VectorBufferBase.349" }
%"class.WTF::VectorBufferBase.349" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.358" = type { %"class.blink::PersistentBase.359" }
%"class.blink::PersistentBase.359" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.362" = type { %"class.blink::PersistentBase.363" }
%"class.blink::PersistentBase.363" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.366", i64 }
%"class.blink::HeapVector.366" = type { %"class.WTF::Vector.369" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"struct.std::__1::pair.372"*, i32, i32 }
%"struct.std::__1::pair.372" = type { %"class.blink::UntracedMember", %"class.blink::Member.374" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.247", %class.scoped_refptr.377 }
%class.scoped_refptr.377 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.384 }
%union.anon.384 = type { i64 }
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::JSEventHandler" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.385", i32, [4 x i8] }>
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

@.str = private unnamed_addr constant [25 x i8] c"TrustedTypePolicyFactory\00", align 1
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink26V8TrustedTypePolicyFactory18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink26V8TrustedTypePolicyFactory24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8EventTarget18wrapper_type_info_E, i8 8 }, align 8
@_ZN5blink24TrustedTypePolicyFactory18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink26V8TrustedTypePolicyFactory18wrapper_type_info_E, align 8
@_ZZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory29EmptyHTMLAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory31EmptyScriptAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory33DefaultPolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [10 x i8] c"emptyHTML\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"emptyScript\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"defaultPolicy\00", align 1
@_ZZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory29CreatePolicyOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory33GetAttributeTypeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory32GetPropertyTypeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory31GetTypeMappingOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory23IsHTMLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory25IsScriptOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory28IsScriptURLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }], align 16
@.str.4 = private unnamed_addr constant [13 x i8] c"createPolicy\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"getAttributeType\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"getPropertyType\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"getTypeMapping\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"isHTML\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"isScript\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"isScriptURL\00", align 1
@_ZZN5blink26V8TrustedTypePolicyFactory35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory40OnbeforecreatepolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory40OnbeforecreatepolicyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.11 = private unnamed_addr constant [21 x i8] c"onbeforecreatepolicy\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.12 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase53is_trusted_type_before_policy_creation_event_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink16event_type_names19kBeforecreatepolicyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26V8TrustedTypePolicyFactory24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %7) #6
  %9 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %7) #6
  %10 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #6
  %11 = bitcast %"class.v8::Template"* %10 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink26V8TrustedTypePolicyFactory18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %8, %"class.v8::ObjectTemplate"* %9, %"class.v8::FunctionTemplate"* %7, %"class.v8::FunctionTemplate"* %11) #6
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.v8::ObjectTemplate"* %9 to %"class.v8::Template"*
  %14 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #6
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 3, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %18, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %12, %"class.v8::Template"* %13, %"class.v8::Template"* %2, %"class.v8::Signature"* %16, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %19 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 7, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %20, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %12, %"class.v8::Template"* %13, %"class.v8::Template"* %2, %"class.v8::Signature"* %16, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  %21 = bitcast %"class.base::span"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %22 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase53is_trusted_type_before_policy_creation_event_enabled_E, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %3
  %25 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #6
  %26 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink26V8TrustedTypePolicyFactory35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %27, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %12, %"class.v8::Template"* %13, %"class.v8::Template"* %2, %"class.v8::Signature"* %25, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  br label %28

28:                                               ; preds = %3, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 7, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink26V8TrustedTypePolicyFactory30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26V8TrustedTypePolicyFactory35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase53is_trusted_type_before_policy_creation_event_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %10) #6
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink26V8TrustedTypePolicyFactory35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %11, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  br label %14

14:                                               ; preds = %5, %9
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory29EmptyHTMLAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::TrustedTypePolicyFactory"*
  %25 = tail call %"class.blink::TrustedHTML"* @_ZNK5blink24TrustedTypePolicyFactory9emptyHTMLEv(%"class.blink::TrustedTypePolicyFactory"* %24) #6
  %26 = getelementptr inbounds %"class.blink::TrustedHTML", %"class.blink::TrustedHTML"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::TrustedHTML"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #6
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #6
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #6
  %49 = bitcast %"class.blink::TrustedHTML"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #6
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory31EmptyScriptAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::TrustedTypePolicyFactory"*
  %25 = tail call %"class.blink::TrustedScript"* @_ZNK5blink24TrustedTypePolicyFactory11emptyScriptEv(%"class.blink::TrustedTypePolicyFactory"* %24) #6
  %26 = getelementptr inbounds %"class.blink::TrustedScript", %"class.blink::TrustedScript"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::TrustedScript"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #6
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #6
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #6
  %49 = bitcast %"class.blink::TrustedScript"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #6
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory33DefaultPolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::TrustedTypePolicyFactory"*
  %25 = tail call %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"* %24) #6
  %26 = getelementptr inbounds %"class.blink::TrustedTypePolicy", %"class.blink::TrustedTypePolicy"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::TrustedTypePolicy"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #6
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #6
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #6
  %49 = bitcast %"class.blink::TrustedTypePolicy"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #6
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory29CreatePolicyOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %17 = bitcast i8** %16 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #6
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %46, !prof !3

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %24) #6
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %313

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %50, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load i16, i16* %58, align 2
  switch i16 %59, label %64 [
    i16 1057, label %60
    i16 1056, label %60
    i16 1040, label %60
  ]

60:                                               ; preds = %46, %46, %46
  %61 = add i64 %50, 19
  %62 = inttoptr i64 %61 to i8**
  %63 = load i8*, i8** %62, align 1
  br label %68

64:                                               ; preds = %46
  %65 = bitcast i64* %49 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #6
  %67 = load i32, i32* %23, align 8
  br label %68

68:                                               ; preds = %60, %64
  %69 = phi i32 [ %24, %60 ], [ %67, %64 ]
  %70 = phi i8* [ %63, %60 ], [ %66, %64 ]
  %71 = bitcast i8* %70 to %"class.blink::TrustedTypePolicyFactory"*
  %72 = sext i32 %69 to i64
  br label %73

73:                                               ; preds = %106, %68
  %74 = phi i64 [ %75, %106 ], [ %72, %68 ]
  %75 = add nsw i64 %74, -1
  %76 = icmp sgt i64 %74, 0
  br i1 %76, label %77, label %118

77:                                               ; preds = %73
  %78 = icmp sgt i64 %74, %72
  br i1 %78, label %79, label %85

79:                                               ; preds = %77
  %80 = load i64*, i64** %7, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %77
  %86 = load i64*, i64** %47, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 %75
  %88 = bitcast i64* %87 to %"class.v8::Value"*
  br label %89

89:                                               ; preds = %85, %79
  %90 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %91 = bitcast %"class.v8::Value"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 1
  br i1 %94, label %95, label %114

95:                                               ; preds = %89
  %96 = add i64 %92, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %92, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, 67
  br i1 %105, label %106, label %112

106:                                              ; preds = %95
  %107 = add i64 %92, 23
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, -2
  %111 = icmp eq i32 %110, 10
  br i1 %111, label %73, label %116

112:                                              ; preds = %95
  %113 = trunc i64 %74 to i32
  br label %118

114:                                              ; preds = %89
  %115 = trunc i64 %74 to i32
  br label %118

116:                                              ; preds = %106
  %117 = trunc i64 %74 to i32
  br label %118

118:                                              ; preds = %73, %112, %114, %116
  %119 = phi i32 [ %113, %112 ], [ %115, %114 ], [ %117, %116 ], [ 0, %73 ]
  %120 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %120) #6
  %121 = icmp sgt i32 %69, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = load i64*, i64** %7, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 1
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 160
  %127 = inttoptr i64 %126 to %"class.v8::Value"*
  br label %131

128:                                              ; preds = %118
  %129 = bitcast i64** %47 to %"class.v8::Value"**
  %130 = load %"class.v8::Value"*, %"class.v8::Value"** %129, align 8
  br label %131

131:                                              ; preds = %122, %128
  %132 = phi %"class.v8::Value"* [ %127, %122 ], [ %130, %128 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %11, %"class.v8::Value"* %132, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %133 = load i32, i32* %20, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %251

135:                                              ; preds = %131
  %136 = icmp slt i32 %119, 2
  br i1 %136, label %137, label %185

137:                                              ; preds = %135
  %138 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #6
  %139 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %140 = load %"class.v8::String"*, %"class.v8::String"** %139, align 8
  %141 = icmp eq %"class.v8::String"* %140, null
  br i1 %141, label %144, label %142, !prof !3

142:                                              ; preds = %137
  %143 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %140, i32 0) #6
  br label %165

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %165, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %165

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i33
  %157 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #6
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !3

162:                                              ; preds = %153
  call void @llvm.trap() #6
  unreachable

163:                                              ; preds = %153
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %154, align 4
  br label %165

165:                                              ; preds = %142, %144, %148, %163
  %166 = phi %"class.WTF::StringImpl"* [ %143, %142 ], [ null, %144 ], [ %146, %148 ], [ %146, %163 ]
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %167, align 8
  %168 = call %"class.blink::TrustedTypePolicy"* @_ZN5blink24TrustedTypePolicyFactory12createPolicyERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicyFactory"* %71, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #6
  br label %184

184:                                              ; preds = %165, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #6
  br label %251

185:                                              ; preds = %135
  %186 = load i32, i32* %23, align 8
  %187 = icmp sgt i32 %186, 1
  br i1 %187, label %194, label %188

188:                                              ; preds = %185
  %189 = load i64*, i64** %7, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 160
  %193 = inttoptr i64 %192 to %"class.v8::Value"*
  br label %198

194:                                              ; preds = %185
  %195 = load i64*, i64** %47, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 1
  %197 = bitcast i64* %196 to %"class.v8::Value"*
  br label %198

198:                                              ; preds = %188, %194
  %199 = phi %"class.v8::Value"* [ %193, %188 ], [ %197, %194 ]
  %200 = call %"class.blink::TrustedTypePolicyOptions"* @_ZN5blink17NativeValueTraitsINS_24TrustedTypePolicyOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %199, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %201 = load i32, i32* %20, align 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %251

203:                                              ; preds = %198
  %204 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #6
  %205 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %206 = load %"class.v8::String"*, %"class.v8::String"** %205, align 8
  %207 = icmp eq %"class.v8::String"* %206, null
  br i1 %207, label %210, label %208, !prof !3

208:                                              ; preds = %203
  %209 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %206, i32 0) #6
  br label %231

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %231, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i33
  %223 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #6
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !3

228:                                              ; preds = %219
  call void @llvm.trap() #6
  unreachable

229:                                              ; preds = %219
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %220, align 4
  br label %231

231:                                              ; preds = %208, %210, %214, %229
  %232 = phi %"class.WTF::StringImpl"* [ %209, %208 ], [ null, %210 ], [ %212, %214 ], [ %212, %229 ]
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %233, align 8
  %234 = call %"class.blink::TrustedTypePolicy"* @_ZN5blink24TrustedTypePolicyFactory12createPolicyERKN3WTF6StringEPKNS_24TrustedTypePolicyOptionsERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicyFactory"* %71, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::TrustedTypePolicyOptions"* %200, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %231
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #6
  br label %250

250:                                              ; preds = %231, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #6
  br label %251

251:                                              ; preds = %198, %131, %250, %184
  %252 = phi %"class.blink::TrustedTypePolicy"* [ %168, %184 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::TrustedTypePolicy"*), %131 ], [ %234, %250 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::TrustedTypePolicy"*), %198 ]
  %253 = phi i32 [ 6, %184 ], [ 1, %131 ], [ 0, %250 ], [ 1, %198 ]
  %254 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  store i8* null, i8** %254, align 8
  %256 = icmp eq i8* %255, null
  br i1 %256, label %258, label %257

257:                                              ; preds = %251
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %255) #6
  br label %258

258:                                              ; preds = %257, %251
  %259 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #6
  br label %275

275:                                              ; preds = %258, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %120) #6
  switch i32 %253, label %313 [
    i32 0, label %276
    i32 6, label %276
  ]

276:                                              ; preds = %275, %275
  %277 = load i32, i32* %20, align 8
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %313

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"class.blink::TrustedTypePolicy", %"class.blink::TrustedTypePolicy"* %252, i64 0, i32 0
  %281 = icmp eq %"class.blink::TrustedTypePolicy"* %252, null
  %282 = load i64*, i64** %7, align 8
  %283 = getelementptr inbounds i64, i64* %282, i64 3
  br i1 %281, label %284, label %290, !prof !3

284:                                              ; preds = %279
  %285 = getelementptr inbounds i64, i64* %282, i64 1
  %286 = load i64, i64* %285, align 8
  %287 = add i64 %286, 176
  %288 = inttoptr i64 %287 to i64*
  %289 = load i64, i64* %288, align 8
  store i64 %289, i64* %283, align 8
  br label %313

290:                                              ; preds = %279
  %291 = bitcast i8* %70 to %"class.blink::ScriptWrappable"*
  %292 = load i64*, i64** %47, align 8
  %293 = getelementptr inbounds i64, i64* %292, i64 -1
  %294 = bitcast i64* %293 to %"class.v8::Object"*
  %295 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %283, %"class.blink::ScriptWrappable"* nonnull %280, %"class.v8::Object"* %294, %"class.blink::ScriptWrappable"* %291) #6
  br i1 %295, label %313, label %296

296:                                              ; preds = %290
  %297 = load i64*, i64** %47, align 8
  %298 = getelementptr inbounds i64, i64* %297, i64 -1
  %299 = bitcast i64* %298 to %"class.v8::Object"*
  %300 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %299) #6
  %301 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %300) #6
  %302 = bitcast %"class.blink::TrustedTypePolicy"* %252 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %303 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %302, align 8
  %304 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %303, i64 7
  %305 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %304, align 8
  %306 = call %"class.v8::Value"* %305(%"class.blink::ScriptWrappable"* nonnull %280, %"class.blink::ScriptState"* %301) #6
  %307 = icmp eq %"class.v8::Value"* %306, null
  br i1 %307, label %313, label %308

308:                                              ; preds = %296
  %309 = load i64*, i64** %7, align 8
  %310 = getelementptr inbounds i64, i64* %309, i64 3
  %311 = bitcast %"class.v8::Value"* %306 to i64*
  %312 = load i64, i64* %311, align 8
  store i64 %312, i64* %310, align 8
  br label %313

313:                                              ; preds = %276, %308, %296, %290, %284, %275, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %314 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %315 = load i64*, i64** %314, align 8
  %316 = icmp eq i64* %315, null
  br i1 %316, label %326, label %317

317:                                              ; preds = %313
  %318 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %319 = bitcast %"class.v8::Isolate"* %318 to %"class.v8::internal::Isolate"*
  %320 = load i64, i64* %315, align 8
  %321 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %319, i64 %320) #6
  %322 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %318) #6
  br i1 %322, label %326, label %323

323:                                              ; preds = %317
  %324 = bitcast i64* %321 to %"class.v8::Value"*
  %325 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %318, %"class.v8::Value"* %324) #6
  br label %326

326:                                              ; preds = %323, %317, %313
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %327, null
  br i1 %328, label %342, label %329

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  br i1 %333, label %336, label %338

336:                                              ; preds = %329
  %337 = add i32 %335, -1
  store i32 %337, i32* %334, align 4
  br label %338

338:                                              ; preds = %336, %329
  %339 = phi i32 [ %337, %336 ], [ %335, %329 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %327) #6
  br label %342

342:                                              ; preds = %326, %338, %341
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory33GetAttributeTypeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::ExceptionState", align 8
  %11 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::ExceptionState", align 8
  %16 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 1
  %24 = bitcast i64* %23 to %"class.v8::Isolate"**
  %25 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 2
  %29 = ptrtoint %"class.v8::Isolate"* %25 to i64
  br i1 %28, label %30, label %90, !prof !3

30:                                               ; preds = %1
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %25, %"class.v8::Isolate"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #6
  %42 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %27) #6
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #6
  br label %60

60:                                               ; preds = %30, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %66 = bitcast %"class.v8::Isolate"* %65 to %"class.v8::internal::Isolate"*
  %67 = load i64, i64* %62, align 8
  %68 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %67) #6
  %69 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %65) #6
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast i64* %68 to %"class.v8::Value"*
  %72 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %65, %"class.v8::Value"* %71) #6
  br label %73

73:                                               ; preds = %70, %64, %60
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #6
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #6
  br label %1158

90:                                               ; preds = %1
  %91 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %92 = sext i32 %27 to i64
  %93 = add i64 %29, 160
  %94 = inttoptr i64 %93 to %"class.v8::Value"*
  br label %95

95:                                               ; preds = %122, %90
  %96 = phi i64 [ %97, %122 ], [ %92, %90 ]
  %97 = add nsw i64 %96, -1
  %98 = icmp sgt i64 %96, 0
  br i1 %98, label %99, label %134

99:                                               ; preds = %95
  %100 = icmp sgt i64 %96, %92
  br i1 %100, label %105, label %101

101:                                              ; preds = %99
  %102 = load i64*, i64** %91, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 %97
  %104 = bitcast i64* %103 to %"class.v8::Value"*
  br label %105

105:                                              ; preds = %99, %101
  %106 = phi %"class.v8::Value"* [ %104, %101 ], [ %94, %99 ]
  %107 = bitcast %"class.v8::Value"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 3
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %130

111:                                              ; preds = %105
  %112 = add i64 %108, -1
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = and i64 %108, -4294967296
  %116 = zext i32 %114 to i64
  %117 = or i64 %115, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load i16, i16* %119, align 2
  %121 = icmp eq i16 %120, 67
  br i1 %121, label %122, label %128

122:                                              ; preds = %111
  %123 = add i64 %108, 23
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, -2
  %127 = icmp eq i32 %126, 10
  br i1 %127, label %95, label %132

128:                                              ; preds = %111
  %129 = trunc i64 %96 to i32
  br label %134

130:                                              ; preds = %105
  %131 = trunc i64 %96 to i32
  br label %134

132:                                              ; preds = %122
  %133 = trunc i64 %96 to i32
  br label %134

134:                                              ; preds = %95, %128, %130, %132
  %135 = phi i32 [ %129, %128 ], [ %131, %130 ], [ %133, %132 ], [ 0, %95 ]
  %136 = load i64*, i64** %91, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 -1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = and i64 %138, -4294967296
  %143 = zext i32 %141 to i64
  %144 = or i64 %142, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load i16, i16* %146, align 2
  switch i16 %147, label %152 [
    i16 1057, label %148
    i16 1056, label %148
    i16 1040, label %148
  ]

148:                                              ; preds = %134, %134, %134
  %149 = add i64 %138, 19
  %150 = inttoptr i64 %149 to i8**
  %151 = load i8*, i8** %150, align 1
  br label %156

152:                                              ; preds = %134
  %153 = bitcast i64* %137 to %"class.v8::Object"*
  %154 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %153, i32 1) #6
  %155 = load i32, i32* %26, align 8
  br label %156

156:                                              ; preds = %148, %152
  %157 = phi i32 [ %27, %148 ], [ %155, %152 ]
  %158 = phi i8* [ %151, %148 ], [ %154, %152 ]
  %159 = bitcast i8* %158 to %"class.blink::TrustedTypePolicyFactory"*
  %160 = icmp sgt i32 %157, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = load i64*, i64** %21, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 160
  %166 = inttoptr i64 %165 to %"class.v8::Value"*
  br label %170

167:                                              ; preds = %156
  %168 = bitcast i64** %91 to %"class.v8::Value"**
  %169 = load %"class.v8::Value"*, %"class.v8::Value"** %168, align 8
  br label %170

170:                                              ; preds = %161, %167
  %171 = phi %"class.v8::Value"* [ %166, %161 ], [ %169, %167 ]
  %172 = bitcast %"class.v8::Value"* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = and i64 %173, 3
  %175 = icmp eq i64 %174, 1
  br i1 %175, label %176, label %200, !prof !4

176:                                              ; preds = %170
  %177 = add i64 %173, -1
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = and i64 %173, -4294967296
  %181 = zext i32 %179 to i64
  %182 = or i64 %180, %181
  %183 = add i64 %182, 7
  %184 = inttoptr i64 %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = icmp ult i16 %185, 64
  br i1 %186, label %187, label %200, !prof !5

187:                                              ; preds = %176
  br i1 %160, label %194, label %188

188:                                              ; preds = %187
  %189 = load i64*, i64** %21, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 160
  %193 = inttoptr i64 %192 to %"class.v8::Value"*
  br label %197

194:                                              ; preds = %187
  %195 = bitcast i64** %91 to %"class.v8::Value"**
  %196 = load %"class.v8::Value"*, %"class.v8::Value"** %195, align 8
  br label %197

197:                                              ; preds = %188, %194
  %198 = phi %"class.v8::Value"* [ %193, %188 ], [ %196, %194 ]
  %199 = ptrtoint %"class.v8::Value"* %198 to i64
  br label %266

200:                                              ; preds = %170, %176
  %201 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %201) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 -86, i64 56, i1 false)
  %202 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %202, align 8
  %203 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %203, align 8
  %204 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %204, align 2
  %205 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %206 = bitcast i8** %205 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %206, align 8
  %207 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %207, align 8
  %208 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %25, %"class.v8::Isolate"** %208, align 8
  %209 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %209, align 8
  %210 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %211 = bitcast %"class.WTF::StringImpl"** %210 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 16, i1 false) #6
  %212 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %212) #6
  br i1 %160, label %219, label %213

213:                                              ; preds = %200
  %214 = load i64*, i64** %21, align 8
  %215 = getelementptr inbounds i64, i64* %214, i64 1
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 160
  %218 = inttoptr i64 %217 to %"class.v8::Value"*
  br label %222

219:                                              ; preds = %200
  %220 = bitcast i64** %91 to %"class.v8::Value"**
  %221 = load %"class.v8::Value"*, %"class.v8::Value"** %220, align 8
  br label %222

222:                                              ; preds = %213, %219
  %223 = phi %"class.v8::Value"* [ %218, %213 ], [ %221, %219 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %25, %"class.v8::Value"* %223, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %224 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %226, i64 0, i32 0, i32 0
  %228 = bitcast %"class.WTF::String"* %226 to i64*
  %229 = load i64, i64* %228, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %227, align 8
  %230 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %231 = bitcast %"class.std::__1::unique_ptr.251"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %212) #6
  %233 = load i32, i32* %209, align 8
  %234 = icmp eq i32 %233, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %202, align 8
  %235 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %236 = load i64*, i64** %235, align 8
  %237 = icmp eq i64* %236, null
  br i1 %237, label %247, label %238

238:                                              ; preds = %222
  %239 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %208, align 8
  %240 = bitcast %"class.v8::Isolate"* %239 to %"class.v8::internal::Isolate"*
  %241 = load i64, i64* %236, align 8
  %242 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %240, i64 %241) #6
  %243 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %239) #6
  br i1 %243, label %247, label %244

244:                                              ; preds = %238
  %245 = bitcast i64* %242 to %"class.v8::Value"*
  %246 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %239, %"class.v8::Value"* %245) #6
  br label %247

247:                                              ; preds = %244, %238, %222
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %263, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #6
  br label %263

263:                                              ; preds = %247, %259, %262
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %201) #6
  br i1 %234, label %264, label %1086

264:                                              ; preds = %263
  %265 = load i32, i32* %26, align 8
  br label %266

266:                                              ; preds = %264, %197
  %267 = phi i32 [ %157, %197 ], [ %265, %264 ]
  %268 = phi i64 [ 0, %197 ], [ %232, %264 ]
  %269 = phi i64 [ 0, %197 ], [ %229, %264 ]
  %270 = phi i64 [ %199, %197 ], [ %225, %264 ]
  %271 = icmp sgt i32 %267, 1
  br i1 %271, label %278, label %272

272:                                              ; preds = %266
  %273 = load i64*, i64** %21, align 8
  %274 = getelementptr inbounds i64, i64* %273, i64 1
  %275 = load i64, i64* %274, align 8
  %276 = add i64 %275, 160
  %277 = inttoptr i64 %276 to %"class.v8::Value"*
  br label %282

278:                                              ; preds = %266
  %279 = load i64*, i64** %91, align 8
  %280 = getelementptr inbounds i64, i64* %279, i64 1
  %281 = bitcast i64* %280 to %"class.v8::Value"*
  br label %282

282:                                              ; preds = %272, %278
  %283 = phi %"class.v8::Value"* [ %277, %272 ], [ %281, %278 ]
  %284 = bitcast %"class.v8::Value"* %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = and i64 %285, 3
  %287 = icmp eq i64 %286, 1
  br i1 %287, label %288, label %313, !prof !4

288:                                              ; preds = %282
  %289 = add i64 %285, -1
  %290 = inttoptr i64 %289 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = and i64 %285, -4294967296
  %293 = zext i32 %291 to i64
  %294 = or i64 %292, %293
  %295 = add i64 %294, 7
  %296 = inttoptr i64 %295 to i16*
  %297 = load i16, i16* %296, align 2
  %298 = icmp ult i16 %297, 64
  br i1 %298, label %299, label %313, !prof !5

299:                                              ; preds = %288
  br i1 %271, label %306, label %300

300:                                              ; preds = %299
  %301 = load i64*, i64** %21, align 8
  %302 = getelementptr inbounds i64, i64* %301, i64 1
  %303 = load i64, i64* %302, align 8
  %304 = add i64 %303, 160
  %305 = inttoptr i64 %304 to %"class.v8::Value"*
  br label %310

306:                                              ; preds = %299
  %307 = load i64*, i64** %91, align 8
  %308 = getelementptr inbounds i64, i64* %307, i64 1
  %309 = bitcast i64* %308 to %"class.v8::Value"*
  br label %310

310:                                              ; preds = %300, %306
  %311 = phi %"class.v8::Value"* [ %305, %300 ], [ %309, %306 ]
  %312 = ptrtoint %"class.v8::Value"* %311 to i64
  br label %378

313:                                              ; preds = %282, %288
  %314 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %314) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 -86, i64 56, i1 false)
  %315 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %315, align 8
  %316 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %316, align 8
  %317 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %317, align 2
  %318 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %319 = bitcast i8** %318 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %319, align 8
  %320 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %320, align 8
  %321 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %25, %"class.v8::Isolate"** %321, align 8
  %322 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %322, align 8
  %323 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %324 = bitcast %"class.WTF::StringImpl"** %323 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %324, i8 0, i64 16, i1 false) #6
  %325 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %325) #6
  br i1 %271, label %332, label %326

326:                                              ; preds = %313
  %327 = load i64*, i64** %21, align 8
  %328 = getelementptr inbounds i64, i64* %327, i64 1
  %329 = load i64, i64* %328, align 8
  %330 = add i64 %329, 160
  %331 = inttoptr i64 %330 to %"class.v8::Value"*
  br label %336

332:                                              ; preds = %313
  %333 = load i64*, i64** %91, align 8
  %334 = getelementptr inbounds i64, i64* %333, i64 1
  %335 = bitcast i64* %334 to %"class.v8::Value"*
  br label %336

336:                                              ; preds = %326, %332
  %337 = phi %"class.v8::Value"* [ %331, %326 ], [ %335, %332 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %7, %"class.v8::Isolate"* %25, %"class.v8::Value"* %337, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #6
  %338 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1
  %341 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %340, i64 0, i32 0, i32 0
  %342 = bitcast %"class.WTF::String"* %340 to i64*
  %343 = load i64, i64* %342, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %341, align 8
  %344 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 2, i32 1
  %345 = bitcast %"class.std::__1::unique_ptr.251"* %344 to i64*
  %346 = load i64, i64* %345, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %325) #6
  %347 = load i32, i32* %322, align 8
  %348 = icmp eq i32 %347, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %315, align 8
  %349 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %350 = load i64*, i64** %349, align 8
  %351 = icmp eq i64* %350, null
  br i1 %351, label %361, label %352

352:                                              ; preds = %336
  %353 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %321, align 8
  %354 = bitcast %"class.v8::Isolate"* %353 to %"class.v8::internal::Isolate"*
  %355 = load i64, i64* %350, align 8
  %356 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %354, i64 %355) #6
  %357 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %353) #6
  br i1 %357, label %361, label %358

358:                                              ; preds = %352
  %359 = bitcast i64* %356 to %"class.v8::Value"*
  %360 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %353, %"class.v8::Value"* %359) #6
  br label %361

361:                                              ; preds = %358, %352, %336
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %377, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %362) #6
  br label %377

377:                                              ; preds = %361, %373, %376
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %314) #6
  br i1 %348, label %378, label %1062

378:                                              ; preds = %377, %310
  %379 = phi i64 [ 0, %310 ], [ %346, %377 ]
  %380 = phi i64 [ 0, %310 ], [ %343, %377 ]
  %381 = phi i64 [ %312, %310 ], [ %339, %377 ]
  %382 = icmp slt i32 %135, 3
  br i1 %382, label %383, label %474

383:                                              ; preds = %378
  %384 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #6
  %385 = icmp eq i64 %270, 0
  br i1 %385, label %389, label %386, !prof !3

386:                                              ; preds = %383
  %387 = inttoptr i64 %270 to %"class.v8::String"*
  %388 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %387, i32 0) #6
  br label %409

389:                                              ; preds = %383
  %390 = inttoptr i64 %269 to %"class.WTF::StringImpl"*
  %391 = icmp eq i64 %269, 0
  br i1 %391, label %409, label %392

392:                                              ; preds = %389
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %409

397:                                              ; preds = %392
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  %400 = zext i32 %399 to i33
  %401 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %400, i33 1) #6
  %402 = extractvalue { i33, i1 } %401, 1
  %403 = extractvalue { i33, i1 } %401, 0
  %404 = icmp slt i33 %403, 0
  %405 = or i1 %402, %404
  br i1 %405, label %406, label %407, !prof !3

406:                                              ; preds = %397
  call void @llvm.trap() #6
  unreachable

407:                                              ; preds = %397
  %408 = trunc i33 %403 to i32
  store i32 %408, i32* %398, align 4
  br label %409

409:                                              ; preds = %386, %389, %392, %407
  %410 = phi %"class.WTF::StringImpl"* [ %388, %386 ], [ null, %389 ], [ %390, %392 ], [ %390, %407 ]
  %411 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %410, %"class.WTF::StringImpl"** %411, align 8
  %412 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %412) #6
  %413 = icmp eq i64 %381, 0
  br i1 %413, label %417, label %414, !prof !3

414:                                              ; preds = %409
  %415 = inttoptr i64 %381 to %"class.v8::String"*
  %416 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %415, i32 0) #6
  br label %437

417:                                              ; preds = %409
  %418 = inttoptr i64 %380 to %"class.WTF::StringImpl"*
  %419 = icmp eq i64 %380, 0
  br i1 %419, label %437, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %437

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  %428 = zext i32 %427 to i33
  %429 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %428, i33 1) #6
  %430 = extractvalue { i33, i1 } %429, 1
  %431 = extractvalue { i33, i1 } %429, 0
  %432 = icmp slt i33 %431, 0
  %433 = or i1 %430, %432
  br i1 %433, label %434, label %435, !prof !3

434:                                              ; preds = %425
  call void @llvm.trap() #6
  unreachable

435:                                              ; preds = %425
  %436 = trunc i33 %431 to i32
  store i32 %436, i32* %426, align 4
  br label %437

437:                                              ; preds = %414, %417, %420, %435
  %438 = phi %"class.WTF::StringImpl"* [ %416, %414 ], [ null, %417 ], [ %418, %420 ], [ %418, %435 ]
  %439 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %438, %"class.WTF::StringImpl"** %439, align 8
  %440 = call %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory16getAttributeTypeERKN3WTF6StringES4_(%"class.blink::TrustedTypePolicyFactory"* %159, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #6
  %441 = ptrtoint %"class.WTF::StringImpl"* %440 to i64
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %443 = icmp eq %"class.WTF::StringImpl"* %442, null
  br i1 %443, label %457, label %444

444:                                              ; preds = %437
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %442, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = load atomic i32, i32* %445 monotonic, align 4
  %447 = and i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %442, i64 0, i32 0
  %450 = load i32, i32* %449, align 4
  br i1 %448, label %451, label %453

451:                                              ; preds = %444
  %452 = add i32 %450, -1
  store i32 %452, i32* %449, align 4
  br label %453

453:                                              ; preds = %451, %444
  %454 = phi i32 [ %452, %451 ], [ %450, %444 ]
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %453
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %442) #6
  br label %457

457:                                              ; preds = %437, %453, %456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412) #6
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %459 = icmp eq %"class.WTF::StringImpl"* %458, null
  br i1 %459, label %473, label %460

460:                                              ; preds = %457
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %458) #6
  br label %473

473:                                              ; preds = %457, %469, %472
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #6
  br label %1062

474:                                              ; preds = %378
  %475 = load i32, i32* %26, align 8
  %476 = icmp sgt i32 %475, 2
  br i1 %476, label %483, label %477

477:                                              ; preds = %474
  %478 = load i64*, i64** %21, align 8
  %479 = getelementptr inbounds i64, i64* %478, i64 1
  %480 = load i64, i64* %479, align 8
  %481 = add i64 %480, 160
  %482 = inttoptr i64 %481 to %"class.v8::Value"*
  br label %487

483:                                              ; preds = %474
  %484 = load i64*, i64** %91, align 8
  %485 = getelementptr inbounds i64, i64* %484, i64 2
  %486 = bitcast i64* %485 to %"class.v8::Value"*
  br label %487

487:                                              ; preds = %477, %483
  %488 = phi %"class.v8::Value"* [ %482, %477 ], [ %486, %483 ]
  %489 = bitcast %"class.v8::Value"* %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = and i64 %490, 3
  %492 = icmp eq i64 %491, 1
  br i1 %492, label %493, label %518, !prof !4

493:                                              ; preds = %487
  %494 = add i64 %490, -1
  %495 = inttoptr i64 %494 to i32*
  %496 = load i32, i32* %495, align 4
  %497 = and i64 %490, -4294967296
  %498 = zext i32 %496 to i64
  %499 = or i64 %497, %498
  %500 = add i64 %499, 7
  %501 = inttoptr i64 %500 to i16*
  %502 = load i16, i16* %501, align 2
  %503 = icmp ult i16 %502, 64
  br i1 %503, label %504, label %518, !prof !5

504:                                              ; preds = %493
  br i1 %476, label %511, label %505

505:                                              ; preds = %504
  %506 = load i64*, i64** %21, align 8
  %507 = getelementptr inbounds i64, i64* %506, i64 1
  %508 = load i64, i64* %507, align 8
  %509 = add i64 %508, 160
  %510 = inttoptr i64 %509 to %"class.v8::Value"*
  br label %515

511:                                              ; preds = %504
  %512 = load i64*, i64** %91, align 8
  %513 = getelementptr inbounds i64, i64* %512, i64 2
  %514 = bitcast i64* %513 to %"class.v8::Value"*
  br label %515

515:                                              ; preds = %505, %511
  %516 = phi %"class.v8::Value"* [ %510, %505 ], [ %514, %511 ]
  %517 = ptrtoint %"class.v8::Value"* %516 to i64
  br label %583

518:                                              ; preds = %487, %493
  %519 = bitcast %"class.blink::ExceptionState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %519) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %519, i8 -86, i64 56, i1 false)
  %520 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %520, align 8
  %521 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 0
  store i16 6, i16* %521, align 8
  %522 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 1
  store i16 0, i16* %522, align 2
  %523 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 2
  %524 = bitcast i8** %523 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %524, align 8
  %525 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %525, align 8
  %526 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 3
  store %"class.v8::Isolate"* %25, %"class.v8::Isolate"** %526, align 8
  %527 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 4
  store i32 0, i32* %527, align 8
  %528 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 5, i32 0, i32 0
  %529 = bitcast %"class.WTF::StringImpl"** %528 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %529, i8 0, i64 16, i1 false) #6
  %530 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %530) #6
  br i1 %476, label %537, label %531

531:                                              ; preds = %518
  %532 = load i64*, i64** %21, align 8
  %533 = getelementptr inbounds i64, i64* %532, i64 1
  %534 = load i64, i64* %533, align 8
  %535 = add i64 %534, 160
  %536 = inttoptr i64 %535 to %"class.v8::Value"*
  br label %541

537:                                              ; preds = %518
  %538 = load i64*, i64** %91, align 8
  %539 = getelementptr inbounds i64, i64* %538, i64 2
  %540 = bitcast i64* %539 to %"class.v8::Value"*
  br label %541

541:                                              ; preds = %531, %537
  %542 = phi %"class.v8::Value"* [ %536, %531 ], [ %540, %537 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %11, %"class.v8::Isolate"* %25, %"class.v8::Value"* %542, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #6
  %543 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 1
  %546 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %545, i64 0, i32 0, i32 0
  %547 = bitcast %"class.WTF::String"* %545 to i64*
  %548 = load i64, i64* %547, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %546, align 8
  %549 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 2, i32 1
  %550 = bitcast %"class.std::__1::unique_ptr.251"* %549 to i64*
  %551 = load i64, i64* %550, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %530) #6
  %552 = load i32, i32* %527, align 8
  %553 = icmp eq i32 %552, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %520, align 8
  %554 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %555 = load i64*, i64** %554, align 8
  %556 = icmp eq i64* %555, null
  br i1 %556, label %566, label %557

557:                                              ; preds = %541
  %558 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %526, align 8
  %559 = bitcast %"class.v8::Isolate"* %558 to %"class.v8::internal::Isolate"*
  %560 = load i64, i64* %555, align 8
  %561 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %559, i64 %560) #6
  %562 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %558) #6
  br i1 %562, label %566, label %563

563:                                              ; preds = %557
  %564 = bitcast i64* %561 to %"class.v8::Value"*
  %565 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %558, %"class.v8::Value"* %564) #6
  br label %566

566:                                              ; preds = %563, %557, %541
  %567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %528, align 8
  %568 = icmp eq %"class.WTF::StringImpl"* %567, null
  br i1 %568, label %582, label %569

569:                                              ; preds = %566
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = load atomic i32, i32* %570 monotonic, align 4
  %572 = and i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %567, i64 0, i32 0
  %575 = load i32, i32* %574, align 4
  br i1 %573, label %576, label %578

576:                                              ; preds = %569
  %577 = add i32 %575, -1
  store i32 %577, i32* %574, align 4
  br label %578

578:                                              ; preds = %576, %569
  %579 = phi i32 [ %577, %576 ], [ %575, %569 ]
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %578
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %567) #6
  br label %582

582:                                              ; preds = %566, %578, %581
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %519) #6
  br i1 %553, label %583, label %1038

583:                                              ; preds = %582, %515
  %584 = phi i64 [ %517, %515 ], [ %544, %582 ]
  %585 = phi i64 [ 0, %515 ], [ %548, %582 ]
  %586 = phi i64 [ 0, %515 ], [ %551, %582 ]
  %587 = icmp slt i32 %135, 4
  br i1 %587, label %588, label %723

588:                                              ; preds = %583
  %589 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589) #6
  %590 = icmp eq i64 %270, 0
  br i1 %590, label %594, label %591, !prof !3

591:                                              ; preds = %588
  %592 = inttoptr i64 %270 to %"class.v8::String"*
  %593 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %592, i32 0) #6
  br label %614

594:                                              ; preds = %588
  %595 = inttoptr i64 %269 to %"class.WTF::StringImpl"*
  %596 = icmp eq i64 %269, 0
  br i1 %596, label %614, label %597

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = load atomic i32, i32* %598 monotonic, align 4
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %614

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  %605 = zext i32 %604 to i33
  %606 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %605, i33 1) #6
  %607 = extractvalue { i33, i1 } %606, 1
  %608 = extractvalue { i33, i1 } %606, 0
  %609 = icmp slt i33 %608, 0
  %610 = or i1 %607, %609
  br i1 %610, label %611, label %612, !prof !3

611:                                              ; preds = %602
  call void @llvm.trap() #6
  unreachable

612:                                              ; preds = %602
  %613 = trunc i33 %608 to i32
  store i32 %613, i32* %603, align 4
  br label %614

614:                                              ; preds = %591, %594, %597, %612
  %615 = phi %"class.WTF::StringImpl"* [ %593, %591 ], [ null, %594 ], [ %595, %597 ], [ %595, %612 ]
  %616 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %615, %"class.WTF::StringImpl"** %616, align 8
  %617 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %617) #6
  %618 = icmp eq i64 %381, 0
  br i1 %618, label %622, label %619, !prof !3

619:                                              ; preds = %614
  %620 = inttoptr i64 %381 to %"class.v8::String"*
  %621 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %620, i32 0) #6
  br label %642

622:                                              ; preds = %614
  %623 = inttoptr i64 %380 to %"class.WTF::StringImpl"*
  %624 = icmp eq i64 %380, 0
  br i1 %624, label %642, label %625

625:                                              ; preds = %622
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %642

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 0
  %632 = load i32, i32* %631, align 4
  %633 = zext i32 %632 to i33
  %634 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %633, i33 1) #6
  %635 = extractvalue { i33, i1 } %634, 1
  %636 = extractvalue { i33, i1 } %634, 0
  %637 = icmp slt i33 %636, 0
  %638 = or i1 %635, %637
  br i1 %638, label %639, label %640, !prof !3

639:                                              ; preds = %630
  call void @llvm.trap() #6
  unreachable

640:                                              ; preds = %630
  %641 = trunc i33 %636 to i32
  store i32 %641, i32* %631, align 4
  br label %642

642:                                              ; preds = %619, %622, %625, %640
  %643 = phi %"class.WTF::StringImpl"* [ %621, %619 ], [ null, %622 ], [ %623, %625 ], [ %623, %640 ]
  %644 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %643, %"class.WTF::StringImpl"** %644, align 8
  %645 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %645) #6
  %646 = icmp eq i64 %584, 0
  br i1 %646, label %650, label %647, !prof !3

647:                                              ; preds = %642
  %648 = inttoptr i64 %584 to %"class.v8::String"*
  %649 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %648, i32 0) #6
  br label %670

650:                                              ; preds = %642
  %651 = inttoptr i64 %585 to %"class.WTF::StringImpl"*
  %652 = icmp eq i64 %585, 0
  br i1 %652, label %670, label %653

653:                                              ; preds = %650
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %670

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 0
  %660 = load i32, i32* %659, align 4
  %661 = zext i32 %660 to i33
  %662 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %661, i33 1) #6
  %663 = extractvalue { i33, i1 } %662, 1
  %664 = extractvalue { i33, i1 } %662, 0
  %665 = icmp slt i33 %664, 0
  %666 = or i1 %663, %665
  br i1 %666, label %667, label %668, !prof !3

667:                                              ; preds = %658
  call void @llvm.trap() #6
  unreachable

668:                                              ; preds = %658
  %669 = trunc i33 %664 to i32
  store i32 %669, i32* %659, align 4
  br label %670

670:                                              ; preds = %647, %650, %653, %668
  %671 = phi %"class.WTF::StringImpl"* [ %649, %647 ], [ null, %650 ], [ %651, %653 ], [ %651, %668 ]
  %672 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %671, %"class.WTF::StringImpl"** %672, align 8
  %673 = call %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory16getAttributeTypeERKN3WTF6StringES4_S4_(%"class.blink::TrustedTypePolicyFactory"* %159, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #6
  %674 = ptrtoint %"class.WTF::StringImpl"* %673 to i64
  %675 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %672, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %676, label %690, label %677

677:                                              ; preds = %670
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %686

684:                                              ; preds = %677
  %685 = add i32 %683, -1
  store i32 %685, i32* %682, align 4
  br label %686

686:                                              ; preds = %684, %677
  %687 = phi i32 [ %685, %684 ], [ %683, %677 ]
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #6
  br label %690

690:                                              ; preds = %670, %686, %689
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %645) #6
  %691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %644, align 8
  %692 = icmp eq %"class.WTF::StringImpl"* %691, null
  br i1 %692, label %706, label %693

693:                                              ; preds = %690
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %695 = load atomic i32, i32* %694 monotonic, align 4
  %696 = and i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 0
  %699 = load i32, i32* %698, align 4
  br i1 %697, label %700, label %702

700:                                              ; preds = %693
  %701 = add i32 %699, -1
  store i32 %701, i32* %698, align 4
  br label %702

702:                                              ; preds = %700, %693
  %703 = phi i32 [ %701, %700 ], [ %699, %693 ]
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %706

705:                                              ; preds = %702
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %691) #6
  br label %706

706:                                              ; preds = %690, %702, %705
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %617) #6
  %707 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %708 = icmp eq %"class.WTF::StringImpl"* %707, null
  br i1 %708, label %722, label %709

709:                                              ; preds = %706
  %710 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load atomic i32, i32* %710 monotonic, align 4
  %712 = and i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 0
  %715 = load i32, i32* %714, align 4
  br i1 %713, label %716, label %718

716:                                              ; preds = %709
  %717 = add i32 %715, -1
  store i32 %717, i32* %714, align 4
  br label %718

718:                                              ; preds = %716, %709
  %719 = phi i32 [ %717, %716 ], [ %715, %709 ]
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %722

721:                                              ; preds = %718
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %707) #6
  br label %722

722:                                              ; preds = %706, %718, %721
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #6
  br label %1038

723:                                              ; preds = %583
  %724 = load i32, i32* %26, align 8
  %725 = icmp sgt i32 %724, 3
  br i1 %725, label %732, label %726

726:                                              ; preds = %723
  %727 = load i64*, i64** %21, align 8
  %728 = getelementptr inbounds i64, i64* %727, i64 1
  %729 = load i64, i64* %728, align 8
  %730 = add i64 %729, 160
  %731 = inttoptr i64 %730 to %"class.v8::Value"*
  br label %736

732:                                              ; preds = %723
  %733 = load i64*, i64** %91, align 8
  %734 = getelementptr inbounds i64, i64* %733, i64 3
  %735 = bitcast i64* %734 to %"class.v8::Value"*
  br label %736

736:                                              ; preds = %726, %732
  %737 = phi %"class.v8::Value"* [ %731, %726 ], [ %735, %732 ]
  %738 = bitcast %"class.v8::Value"* %737 to i64*
  %739 = load i64, i64* %738, align 8
  %740 = and i64 %739, 3
  %741 = icmp eq i64 %740, 1
  br i1 %741, label %742, label %767, !prof !4

742:                                              ; preds = %736
  %743 = add i64 %739, -1
  %744 = inttoptr i64 %743 to i32*
  %745 = load i32, i32* %744, align 4
  %746 = and i64 %739, -4294967296
  %747 = zext i32 %745 to i64
  %748 = or i64 %746, %747
  %749 = add i64 %748, 7
  %750 = inttoptr i64 %749 to i16*
  %751 = load i16, i16* %750, align 2
  %752 = icmp ult i16 %751, 64
  br i1 %752, label %753, label %767, !prof !5

753:                                              ; preds = %742
  br i1 %725, label %760, label %754

754:                                              ; preds = %753
  %755 = load i64*, i64** %21, align 8
  %756 = getelementptr inbounds i64, i64* %755, i64 1
  %757 = load i64, i64* %756, align 8
  %758 = add i64 %757, 160
  %759 = inttoptr i64 %758 to %"class.v8::Value"*
  br label %764

760:                                              ; preds = %753
  %761 = load i64*, i64** %91, align 8
  %762 = getelementptr inbounds i64, i64* %761, i64 3
  %763 = bitcast i64* %762 to %"class.v8::Value"*
  br label %764

764:                                              ; preds = %754, %760
  %765 = phi %"class.v8::Value"* [ %759, %754 ], [ %763, %760 ]
  %766 = ptrtoint %"class.v8::Value"* %765 to i64
  br label %832

767:                                              ; preds = %736, %742
  %768 = bitcast %"class.blink::ExceptionState"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %768) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %768, i8 -86, i64 56, i1 false)
  %769 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %769, align 8
  %770 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 1, i32 0
  store i16 6, i16* %770, align 8
  %771 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 1, i32 1
  store i16 0, i16* %771, align 2
  %772 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 1, i32 2
  %773 = bitcast i8** %772 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %773, align 8
  %774 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %774, align 8
  %775 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 3
  store %"class.v8::Isolate"* %25, %"class.v8::Isolate"** %775, align 8
  %776 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 4
  store i32 0, i32* %776, align 8
  %777 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 5, i32 0, i32 0
  %778 = bitcast %"class.WTF::StringImpl"** %777 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %778, i8 0, i64 16, i1 false) #6
  %779 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %779) #6
  br i1 %725, label %786, label %780

780:                                              ; preds = %767
  %781 = load i64*, i64** %21, align 8
  %782 = getelementptr inbounds i64, i64* %781, i64 1
  %783 = load i64, i64* %782, align 8
  %784 = add i64 %783, 160
  %785 = inttoptr i64 %784 to %"class.v8::Value"*
  br label %790

786:                                              ; preds = %767
  %787 = load i64*, i64** %91, align 8
  %788 = getelementptr inbounds i64, i64* %787, i64 3
  %789 = bitcast i64* %788 to %"class.v8::Value"*
  br label %790

790:                                              ; preds = %780, %786
  %791 = phi %"class.v8::Value"* [ %785, %780 ], [ %789, %786 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %16, %"class.v8::Isolate"* %25, %"class.v8::Value"* %791, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #6
  %792 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %16 to i64*
  %793 = load i64, i64* %792, align 8
  %794 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %16, i64 0, i32 1
  %795 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %794, i64 0, i32 0, i32 0
  %796 = bitcast %"class.WTF::String"* %794 to i64*
  %797 = load i64, i64* %796, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %795, align 8
  %798 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %16, i64 0, i32 2, i32 1
  %799 = bitcast %"class.std::__1::unique_ptr.251"* %798 to i64*
  %800 = load i64, i64* %799, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %779) #6
  %801 = load i32, i32* %776, align 8
  %802 = icmp eq i32 %801, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %769, align 8
  %803 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %15, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %804 = load i64*, i64** %803, align 8
  %805 = icmp eq i64* %804, null
  br i1 %805, label %815, label %806

806:                                              ; preds = %790
  %807 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %775, align 8
  %808 = bitcast %"class.v8::Isolate"* %807 to %"class.v8::internal::Isolate"*
  %809 = load i64, i64* %804, align 8
  %810 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %808, i64 %809) #6
  %811 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %807) #6
  br i1 %811, label %815, label %812

812:                                              ; preds = %806
  %813 = bitcast i64* %810 to %"class.v8::Value"*
  %814 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %807, %"class.v8::Value"* %813) #6
  br label %815

815:                                              ; preds = %812, %806, %790
  %816 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %777, align 8
  %817 = icmp eq %"class.WTF::StringImpl"* %816, null
  br i1 %817, label %831, label %818

818:                                              ; preds = %815
  %819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = and i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 0
  %824 = load i32, i32* %823, align 4
  br i1 %822, label %825, label %827

825:                                              ; preds = %818
  %826 = add i32 %824, -1
  store i32 %826, i32* %823, align 4
  br label %827

827:                                              ; preds = %825, %818
  %828 = phi i32 [ %826, %825 ], [ %824, %818 ]
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %831

830:                                              ; preds = %827
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %816) #6
  br label %831

831:                                              ; preds = %815, %827, %830
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %768) #6
  br i1 %802, label %832, label %1014

832:                                              ; preds = %831, %764
  %833 = phi i64 [ %766, %764 ], [ %793, %831 ]
  %834 = phi i64 [ 0, %764 ], [ %797, %831 ]
  %835 = phi i64 [ 0, %764 ], [ %800, %831 ]
  %836 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %836) #6
  %837 = icmp eq i64 %270, 0
  br i1 %837, label %841, label %838, !prof !3

838:                                              ; preds = %832
  %839 = inttoptr i64 %270 to %"class.v8::String"*
  %840 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %839, i32 0) #6
  br label %861

841:                                              ; preds = %832
  %842 = inttoptr i64 %269 to %"class.WTF::StringImpl"*
  %843 = icmp eq i64 %269, 0
  br i1 %843, label %861, label %844

844:                                              ; preds = %841
  %845 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %842, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %846 = load atomic i32, i32* %845 monotonic, align 4
  %847 = and i32 %846, 2
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %849, label %861

849:                                              ; preds = %844
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %842, i64 0, i32 0
  %851 = load i32, i32* %850, align 4
  %852 = zext i32 %851 to i33
  %853 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %852, i33 1) #6
  %854 = extractvalue { i33, i1 } %853, 1
  %855 = extractvalue { i33, i1 } %853, 0
  %856 = icmp slt i33 %855, 0
  %857 = or i1 %854, %856
  br i1 %857, label %858, label %859, !prof !3

858:                                              ; preds = %849
  call void @llvm.trap() #6
  unreachable

859:                                              ; preds = %849
  %860 = trunc i33 %855 to i32
  store i32 %860, i32* %850, align 4
  br label %861

861:                                              ; preds = %838, %841, %844, %859
  %862 = phi %"class.WTF::StringImpl"* [ %840, %838 ], [ null, %841 ], [ %842, %844 ], [ %842, %859 ]
  %863 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %862, %"class.WTF::StringImpl"** %863, align 8
  %864 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %864) #6
  %865 = icmp eq i64 %381, 0
  br i1 %865, label %869, label %866, !prof !3

866:                                              ; preds = %861
  %867 = inttoptr i64 %381 to %"class.v8::String"*
  %868 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %867, i32 0) #6
  br label %889

869:                                              ; preds = %861
  %870 = inttoptr i64 %380 to %"class.WTF::StringImpl"*
  %871 = icmp eq i64 %380, 0
  br i1 %871, label %889, label %872

872:                                              ; preds = %869
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %870, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %874 = load atomic i32, i32* %873 monotonic, align 4
  %875 = and i32 %874, 2
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %889

877:                                              ; preds = %872
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %870, i64 0, i32 0
  %879 = load i32, i32* %878, align 4
  %880 = zext i32 %879 to i33
  %881 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %880, i33 1) #6
  %882 = extractvalue { i33, i1 } %881, 1
  %883 = extractvalue { i33, i1 } %881, 0
  %884 = icmp slt i33 %883, 0
  %885 = or i1 %882, %884
  br i1 %885, label %886, label %887, !prof !3

886:                                              ; preds = %877
  call void @llvm.trap() #6
  unreachable

887:                                              ; preds = %877
  %888 = trunc i33 %883 to i32
  store i32 %888, i32* %878, align 4
  br label %889

889:                                              ; preds = %866, %869, %872, %887
  %890 = phi %"class.WTF::StringImpl"* [ %868, %866 ], [ null, %869 ], [ %870, %872 ], [ %870, %887 ]
  %891 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %890, %"class.WTF::StringImpl"** %891, align 8
  %892 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %892) #6
  %893 = icmp eq i64 %584, 0
  br i1 %893, label %897, label %894, !prof !3

894:                                              ; preds = %889
  %895 = inttoptr i64 %584 to %"class.v8::String"*
  %896 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %895, i32 0) #6
  br label %917

897:                                              ; preds = %889
  %898 = inttoptr i64 %585 to %"class.WTF::StringImpl"*
  %899 = icmp eq i64 %585, 0
  br i1 %899, label %917, label %900

900:                                              ; preds = %897
  %901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %902 = load atomic i32, i32* %901 monotonic, align 4
  %903 = and i32 %902, 2
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %917

905:                                              ; preds = %900
  %906 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 0
  %907 = load i32, i32* %906, align 4
  %908 = zext i32 %907 to i33
  %909 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %908, i33 1) #6
  %910 = extractvalue { i33, i1 } %909, 1
  %911 = extractvalue { i33, i1 } %909, 0
  %912 = icmp slt i33 %911, 0
  %913 = or i1 %910, %912
  br i1 %913, label %914, label %915, !prof !3

914:                                              ; preds = %905
  call void @llvm.trap() #6
  unreachable

915:                                              ; preds = %905
  %916 = trunc i33 %911 to i32
  store i32 %916, i32* %906, align 4
  br label %917

917:                                              ; preds = %894, %897, %900, %915
  %918 = phi %"class.WTF::StringImpl"* [ %896, %894 ], [ null, %897 ], [ %898, %900 ], [ %898, %915 ]
  %919 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %918, %"class.WTF::StringImpl"** %919, align 8
  %920 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %920) #6
  %921 = icmp eq i64 %833, 0
  br i1 %921, label %925, label %922, !prof !3

922:                                              ; preds = %917
  %923 = inttoptr i64 %833 to %"class.v8::String"*
  %924 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %923, i32 0) #6
  br label %945

925:                                              ; preds = %917
  %926 = inttoptr i64 %834 to %"class.WTF::StringImpl"*
  %927 = icmp eq i64 %834, 0
  br i1 %927, label %945, label %928

928:                                              ; preds = %925
  %929 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %926, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %930 = load atomic i32, i32* %929 monotonic, align 4
  %931 = and i32 %930, 2
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %945

933:                                              ; preds = %928
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %926, i64 0, i32 0
  %935 = load i32, i32* %934, align 4
  %936 = zext i32 %935 to i33
  %937 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %936, i33 1) #6
  %938 = extractvalue { i33, i1 } %937, 1
  %939 = extractvalue { i33, i1 } %937, 0
  %940 = icmp slt i33 %939, 0
  %941 = or i1 %938, %940
  br i1 %941, label %942, label %943, !prof !3

942:                                              ; preds = %933
  call void @llvm.trap() #6
  unreachable

943:                                              ; preds = %933
  %944 = trunc i33 %939 to i32
  store i32 %944, i32* %934, align 4
  br label %945

945:                                              ; preds = %922, %925, %928, %943
  %946 = phi %"class.WTF::StringImpl"* [ %924, %922 ], [ null, %925 ], [ %926, %928 ], [ %926, %943 ]
  %947 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %946, %"class.WTF::StringImpl"** %947, align 8
  %948 = call %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory16getAttributeTypeERKN3WTF6StringES4_S4_S4_(%"class.blink::TrustedTypePolicyFactory"* %159, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.WTF::String"* nonnull dereferenceable(8) %20) #6
  %949 = ptrtoint %"class.WTF::StringImpl"* %948 to i64
  %950 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %947, align 8
  %951 = icmp eq %"class.WTF::StringImpl"* %950, null
  br i1 %951, label %965, label %952

952:                                              ; preds = %945
  %953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %954 = load atomic i32, i32* %953 monotonic, align 4
  %955 = and i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  br i1 %956, label %959, label %961

959:                                              ; preds = %952
  %960 = add i32 %958, -1
  store i32 %960, i32* %957, align 4
  br label %961

961:                                              ; preds = %959, %952
  %962 = phi i32 [ %960, %959 ], [ %958, %952 ]
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %964, label %965

964:                                              ; preds = %961
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %950) #6
  br label %965

965:                                              ; preds = %945, %961, %964
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %920) #6
  %966 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %919, align 8
  %967 = icmp eq %"class.WTF::StringImpl"* %966, null
  br i1 %967, label %981, label %968

968:                                              ; preds = %965
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %966, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %970 = load atomic i32, i32* %969 monotonic, align 4
  %971 = and i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %966, i64 0, i32 0
  %974 = load i32, i32* %973, align 4
  br i1 %972, label %975, label %977

975:                                              ; preds = %968
  %976 = add i32 %974, -1
  store i32 %976, i32* %973, align 4
  br label %977

977:                                              ; preds = %975, %968
  %978 = phi i32 [ %976, %975 ], [ %974, %968 ]
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %981

980:                                              ; preds = %977
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %966) #6
  br label %981

981:                                              ; preds = %965, %977, %980
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %892) #6
  %982 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %891, align 8
  %983 = icmp eq %"class.WTF::StringImpl"* %982, null
  br i1 %983, label %997, label %984

984:                                              ; preds = %981
  %985 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %982, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %986 = load atomic i32, i32* %985 monotonic, align 4
  %987 = and i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %982, i64 0, i32 0
  %990 = load i32, i32* %989, align 4
  br i1 %988, label %991, label %993

991:                                              ; preds = %984
  %992 = add i32 %990, -1
  store i32 %992, i32* %989, align 4
  br label %993

993:                                              ; preds = %991, %984
  %994 = phi i32 [ %992, %991 ], [ %990, %984 ]
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %997

996:                                              ; preds = %993
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %982) #6
  br label %997

997:                                              ; preds = %981, %993, %996
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %864) #6
  %998 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %863, align 8
  %999 = icmp eq %"class.WTF::StringImpl"* %998, null
  br i1 %999, label %1013, label %1000

1000:                                             ; preds = %997
  %1001 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %998, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1002 = load atomic i32, i32* %1001 monotonic, align 4
  %1003 = and i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %998, i64 0, i32 0
  %1006 = load i32, i32* %1005, align 4
  br i1 %1004, label %1007, label %1009

1007:                                             ; preds = %1000
  %1008 = add i32 %1006, -1
  store i32 %1008, i32* %1005, align 4
  br label %1009

1009:                                             ; preds = %1007, %1000
  %1010 = phi i32 [ %1008, %1007 ], [ %1006, %1000 ]
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1013

1012:                                             ; preds = %1009
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %998) #6
  br label %1013

1013:                                             ; preds = %997, %1009, %1012
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %836) #6
  br label %1014

1014:                                             ; preds = %831, %1013
  %1015 = phi i64 [ %834, %1013 ], [ %797, %831 ]
  %1016 = phi i64 [ %835, %1013 ], [ %800, %831 ]
  %1017 = phi i64 [ %949, %1013 ], [ 0, %831 ]
  %1018 = phi i32 [ 0, %1013 ], [ 1, %831 ]
  %1019 = icmp eq i64 %1016, 0
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1014
  %1021 = inttoptr i64 %1016 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1021) #6
  br label %1022

1022:                                             ; preds = %1020, %1014
  %1023 = inttoptr i64 %1015 to %"class.WTF::StringImpl"*
  %1024 = icmp eq i64 %1015, 0
  br i1 %1024, label %1038, label %1025

1025:                                             ; preds = %1022
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1027 = load atomic i32, i32* %1026 monotonic, align 4
  %1028 = and i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 0
  %1031 = load i32, i32* %1030, align 4
  br i1 %1029, label %1032, label %1034

1032:                                             ; preds = %1025
  %1033 = add i32 %1031, -1
  store i32 %1033, i32* %1030, align 4
  br label %1034

1034:                                             ; preds = %1032, %1025
  %1035 = phi i32 [ %1033, %1032 ], [ %1031, %1025 ]
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1034
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1023) #6
  br label %1038

1038:                                             ; preds = %1037, %1034, %1022, %582, %722
  %1039 = phi i64 [ %585, %722 ], [ %548, %582 ], [ %585, %1022 ], [ %585, %1034 ], [ %585, %1037 ]
  %1040 = phi i64 [ %586, %722 ], [ %551, %582 ], [ %586, %1022 ], [ %586, %1034 ], [ %586, %1037 ]
  %1041 = phi i64 [ %674, %722 ], [ 0, %582 ], [ %1017, %1022 ], [ %1017, %1034 ], [ %1017, %1037 ]
  %1042 = phi i32 [ 6, %722 ], [ 1, %582 ], [ %1018, %1022 ], [ %1018, %1034 ], [ %1018, %1037 ]
  %1043 = icmp eq i64 %1040, 0
  br i1 %1043, label %1046, label %1044

1044:                                             ; preds = %1038
  %1045 = inttoptr i64 %1040 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1045) #6
  br label %1046

1046:                                             ; preds = %1044, %1038
  %1047 = inttoptr i64 %1039 to %"class.WTF::StringImpl"*
  %1048 = icmp eq i64 %1039, 0
  br i1 %1048, label %1062, label %1049

1049:                                             ; preds = %1046
  %1050 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load atomic i32, i32* %1050 monotonic, align 4
  %1052 = and i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 0
  %1055 = load i32, i32* %1054, align 4
  br i1 %1053, label %1056, label %1058

1056:                                             ; preds = %1049
  %1057 = add i32 %1055, -1
  store i32 %1057, i32* %1054, align 4
  br label %1058

1058:                                             ; preds = %1056, %1049
  %1059 = phi i32 [ %1057, %1056 ], [ %1055, %1049 ]
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1058
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1047) #6
  br label %1062

1062:                                             ; preds = %1061, %1058, %1046, %377, %473
  %1063 = phi i64 [ %379, %473 ], [ %346, %377 ], [ %379, %1046 ], [ %379, %1058 ], [ %379, %1061 ]
  %1064 = phi i64 [ %380, %473 ], [ %343, %377 ], [ %380, %1046 ], [ %380, %1058 ], [ %380, %1061 ]
  %1065 = phi i64 [ %441, %473 ], [ 0, %377 ], [ %1041, %1046 ], [ %1041, %1058 ], [ %1041, %1061 ]
  %1066 = phi i32 [ 6, %473 ], [ 1, %377 ], [ %1042, %1046 ], [ %1042, %1058 ], [ %1042, %1061 ]
  %1067 = icmp eq i64 %1063, 0
  br i1 %1067, label %1070, label %1068

1068:                                             ; preds = %1062
  %1069 = inttoptr i64 %1063 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1069) #6
  br label %1070

1070:                                             ; preds = %1068, %1062
  %1071 = inttoptr i64 %1064 to %"class.WTF::StringImpl"*
  %1072 = icmp eq i64 %1064, 0
  br i1 %1072, label %1086, label %1073

1073:                                             ; preds = %1070
  %1074 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1071, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1075 = load atomic i32, i32* %1074 monotonic, align 4
  %1076 = and i32 %1075, 2
  %1077 = icmp eq i32 %1076, 0
  %1078 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1071, i64 0, i32 0
  %1079 = load i32, i32* %1078, align 4
  br i1 %1077, label %1080, label %1082

1080:                                             ; preds = %1073
  %1081 = add i32 %1079, -1
  store i32 %1081, i32* %1078, align 4
  br label %1082

1082:                                             ; preds = %1080, %1073
  %1083 = phi i32 [ %1081, %1080 ], [ %1079, %1073 ]
  %1084 = icmp eq i32 %1083, 0
  br i1 %1084, label %1085, label %1086

1085:                                             ; preds = %1082
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1071) #6
  br label %1086

1086:                                             ; preds = %1085, %1082, %1070, %263
  %1087 = phi i64 [ %232, %263 ], [ %268, %1070 ], [ %268, %1082 ], [ %268, %1085 ]
  %1088 = phi i64 [ %229, %263 ], [ %269, %1070 ], [ %269, %1082 ], [ %269, %1085 ]
  %1089 = phi i64 [ 0, %263 ], [ %1065, %1070 ], [ %1065, %1082 ], [ %1065, %1085 ]
  %1090 = phi i32 [ 1, %263 ], [ %1066, %1070 ], [ %1066, %1082 ], [ %1066, %1085 ]
  %1091 = icmp eq i64 %1087, 0
  br i1 %1091, label %1094, label %1092

1092:                                             ; preds = %1086
  %1093 = inttoptr i64 %1087 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1093) #6
  br label %1094

1094:                                             ; preds = %1092, %1086
  %1095 = inttoptr i64 %1088 to %"class.WTF::StringImpl"*
  %1096 = icmp eq i64 %1088, 0
  br i1 %1096, label %1110, label %1097

1097:                                             ; preds = %1094
  %1098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1095, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1099 = load atomic i32, i32* %1098 monotonic, align 4
  %1100 = and i32 %1099, 2
  %1101 = icmp eq i32 %1100, 0
  %1102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1095, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 4
  br i1 %1101, label %1104, label %1106

1104:                                             ; preds = %1097
  %1105 = add i32 %1103, -1
  store i32 %1105, i32* %1102, align 4
  br label %1106

1106:                                             ; preds = %1104, %1097
  %1107 = phi i32 [ %1105, %1104 ], [ %1103, %1097 ]
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1110

1109:                                             ; preds = %1106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1095) #6
  br label %1110

1110:                                             ; preds = %1094, %1106, %1109
  switch i32 %1090, label %1141 [
    i32 0, label %1111
    i32 6, label %1111
  ]

1111:                                             ; preds = %1110, %1110
  %1112 = inttoptr i64 %1089 to %"class.WTF::StringImpl"*
  %1113 = icmp eq i64 %1089, 0
  br i1 %1113, label %1114, label %1122

1114:                                             ; preds = %1111
  %1115 = load i64*, i64** %21, align 8
  %1116 = getelementptr inbounds i64, i64* %1115, i64 3
  %1117 = getelementptr inbounds i64, i64* %1115, i64 1
  %1118 = load i64, i64* %1117, align 8
  %1119 = add i64 %1118, 176
  %1120 = inttoptr i64 %1119 to i64*
  %1121 = load i64, i64* %1120, align 8
  store i64 %1121, i64* %1116, align 8
  br label %1158

1122:                                             ; preds = %1111
  %1123 = add i64 %29, 8
  %1124 = inttoptr i64 %1123 to %"class.blink::V8PerIsolateData"**
  %1125 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1124, align 8
  %1126 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %1125, i64 0, i32 5, i32 0, i32 0, i32 0
  %1127 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %1126, align 8
  %1128 = load i64*, i64** %21, align 8
  %1129 = getelementptr inbounds i64, i64* %1128, i64 3
  %1130 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1127, i64 0, i32 3, i32 0
  %1131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1130, align 8
  %1132 = icmp eq %"class.WTF::StringImpl"* %1131, %1112
  br i1 %1132, label %1133, label %1140

1133:                                             ; preds = %1122
  %1134 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %1127, i64 0, i32 1, i32 0
  %1135 = load i64, i64* %1134, align 8
  %1136 = icmp eq i64 %1135, 0
  br i1 %1136, label %1144, label %1137

1137:                                             ; preds = %1133
  %1138 = inttoptr i64 %1135 to i64*
  %1139 = load i64, i64* %1138, align 8
  store i64 %1139, i64* %1129, align 8
  br label %1144

1140:                                             ; preds = %1122
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %1127, i64* %1129, %"class.WTF::StringImpl"* nonnull %1112) #6
  br label %1144

1141:                                             ; preds = %1110
  %1142 = inttoptr i64 %1089 to %"class.WTF::StringImpl"*
  %1143 = icmp eq i64 %1089, 0
  br i1 %1143, label %1158, label %1144

1144:                                             ; preds = %1133, %1137, %1140, %1141
  %1145 = phi %"class.WTF::StringImpl"* [ %1142, %1141 ], [ %1112, %1140 ], [ %1112, %1137 ], [ %1112, %1133 ]
  %1146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1147 = load atomic i32, i32* %1146 monotonic, align 4
  %1148 = and i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1145, i64 0, i32 0
  %1151 = load i32, i32* %1150, align 4
  br i1 %1149, label %1152, label %1154

1152:                                             ; preds = %1144
  %1153 = add i32 %1151, -1
  store i32 %1153, i32* %1150, align 4
  br label %1154

1154:                                             ; preds = %1152, %1144
  %1155 = phi i32 [ %1153, %1152 ], [ %1151, %1144 ]
  %1156 = icmp eq i32 %1155, 0
  br i1 %1156, label %1157, label %1158

1157:                                             ; preds = %1154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1145) #6
  br label %1158

1158:                                             ; preds = %1114, %1157, %1154, %1141, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory32GetPropertyTypeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::ExceptionState", align 8
  %11 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = bitcast i64* %17 to %"class.v8::Isolate"**
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  %23 = ptrtoint %"class.v8::Isolate"* %19 to i64
  br i1 %22, label %24, label %84, !prof !3

24:                                               ; preds = %1
  %25 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 56, i1 false)
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %30 = bitcast i8** %29 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %19, %"class.v8::Isolate"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %35 = bitcast %"class.WTF::StringImpl"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #6
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %24, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %56, null
  br i1 %57, label %67, label %58

58:                                               ; preds = %54
  %59 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8
  %60 = bitcast %"class.v8::Isolate"* %59 to %"class.v8::internal::Isolate"*
  %61 = load i64, i64* %56, align 8
  %62 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %60, i64 %61) #6
  %63 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %59) #6
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = bitcast i64* %62 to %"class.v8::Value"*
  %66 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %59, %"class.v8::Value"* %65) #6
  br label %67

67:                                               ; preds = %64, %58, %54
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #6
  br label %83

83:                                               ; preds = %67, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #6
  br label %835

84:                                               ; preds = %1
  %85 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %86 = sext i32 %21 to i64
  %87 = add i64 %23, 160
  %88 = inttoptr i64 %87 to %"class.v8::Value"*
  br label %89

89:                                               ; preds = %116, %84
  %90 = phi i64 [ %91, %116 ], [ %86, %84 ]
  %91 = add nsw i64 %90, -1
  %92 = icmp sgt i64 %90, 0
  br i1 %92, label %93, label %128

93:                                               ; preds = %89
  %94 = icmp sgt i64 %90, %86
  br i1 %94, label %99, label %95

95:                                               ; preds = %93
  %96 = load i64*, i64** %85, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 %91
  %98 = bitcast i64* %97 to %"class.v8::Value"*
  br label %99

99:                                               ; preds = %93, %95
  %100 = phi %"class.v8::Value"* [ %98, %95 ], [ %88, %93 ]
  %101 = bitcast %"class.v8::Value"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 3
  %104 = icmp eq i64 %103, 1
  br i1 %104, label %105, label %124

105:                                              ; preds = %99
  %106 = add i64 %102, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = and i64 %102, -4294967296
  %110 = zext i32 %108 to i64
  %111 = or i64 %109, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, 67
  br i1 %115, label %116, label %122

116:                                              ; preds = %105
  %117 = add i64 %102, 23
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, -2
  %121 = icmp eq i32 %120, 10
  br i1 %121, label %89, label %126

122:                                              ; preds = %105
  %123 = trunc i64 %90 to i32
  br label %128

124:                                              ; preds = %99
  %125 = trunc i64 %90 to i32
  br label %128

126:                                              ; preds = %116
  %127 = trunc i64 %90 to i32
  br label %128

128:                                              ; preds = %89, %122, %124, %126
  %129 = phi i32 [ %123, %122 ], [ %125, %124 ], [ %127, %126 ], [ 0, %89 ]
  %130 = load i64*, i64** %85, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 -1
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, -1
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = and i64 %132, -4294967296
  %137 = zext i32 %135 to i64
  %138 = or i64 %136, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load i16, i16* %140, align 2
  switch i16 %141, label %146 [
    i16 1057, label %142
    i16 1056, label %142
    i16 1040, label %142
  ]

142:                                              ; preds = %128, %128, %128
  %143 = add i64 %132, 19
  %144 = inttoptr i64 %143 to i8**
  %145 = load i8*, i8** %144, align 1
  br label %150

146:                                              ; preds = %128
  %147 = bitcast i64* %131 to %"class.v8::Object"*
  %148 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %147, i32 1) #6
  %149 = load i32, i32* %20, align 8
  br label %150

150:                                              ; preds = %142, %146
  %151 = phi i32 [ %21, %142 ], [ %149, %146 ]
  %152 = phi i8* [ %145, %142 ], [ %148, %146 ]
  %153 = bitcast i8* %152 to %"class.blink::TrustedTypePolicyFactory"*
  %154 = icmp sgt i32 %151, 0
  br i1 %154, label %161, label %155

155:                                              ; preds = %150
  %156 = load i64*, i64** %15, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 1
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 160
  %160 = inttoptr i64 %159 to %"class.v8::Value"*
  br label %164

161:                                              ; preds = %150
  %162 = bitcast i64** %85 to %"class.v8::Value"**
  %163 = load %"class.v8::Value"*, %"class.v8::Value"** %162, align 8
  br label %164

164:                                              ; preds = %155, %161
  %165 = phi %"class.v8::Value"* [ %160, %155 ], [ %163, %161 ]
  %166 = bitcast %"class.v8::Value"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = and i64 %167, 3
  %169 = icmp eq i64 %168, 1
  br i1 %169, label %170, label %194, !prof !4

170:                                              ; preds = %164
  %171 = add i64 %167, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = and i64 %167, -4294967296
  %175 = zext i32 %173 to i64
  %176 = or i64 %174, %175
  %177 = add i64 %176, 7
  %178 = inttoptr i64 %177 to i16*
  %179 = load i16, i16* %178, align 2
  %180 = icmp ult i16 %179, 64
  br i1 %180, label %181, label %194, !prof !5

181:                                              ; preds = %170
  br i1 %154, label %188, label %182

182:                                              ; preds = %181
  %183 = load i64*, i64** %15, align 8
  %184 = getelementptr inbounds i64, i64* %183, i64 1
  %185 = load i64, i64* %184, align 8
  %186 = add i64 %185, 160
  %187 = inttoptr i64 %186 to %"class.v8::Value"*
  br label %191

188:                                              ; preds = %181
  %189 = bitcast i64** %85 to %"class.v8::Value"**
  %190 = load %"class.v8::Value"*, %"class.v8::Value"** %189, align 8
  br label %191

191:                                              ; preds = %182, %188
  %192 = phi %"class.v8::Value"* [ %187, %182 ], [ %190, %188 ]
  %193 = ptrtoint %"class.v8::Value"* %192 to i64
  br label %260

194:                                              ; preds = %164, %170
  %195 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %195) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 56, i1 false)
  %196 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8
  %197 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %197, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %198, align 2
  %199 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %200 = bitcast i8** %199 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %200, align 8
  %201 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %201, align 8
  %202 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %19, %"class.v8::Isolate"** %202, align 8
  %203 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %205 = bitcast %"class.WTF::StringImpl"** %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %205, i8 0, i64 16, i1 false) #6
  %206 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %206) #6
  br i1 %154, label %213, label %207

207:                                              ; preds = %194
  %208 = load i64*, i64** %15, align 8
  %209 = getelementptr inbounds i64, i64* %208, i64 1
  %210 = load i64, i64* %209, align 8
  %211 = add i64 %210, 160
  %212 = inttoptr i64 %211 to %"class.v8::Value"*
  br label %216

213:                                              ; preds = %194
  %214 = bitcast i64** %85 to %"class.v8::Value"**
  %215 = load %"class.v8::Value"*, %"class.v8::Value"** %214, align 8
  br label %216

216:                                              ; preds = %207, %213
  %217 = phi %"class.v8::Value"* [ %212, %207 ], [ %215, %213 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %19, %"class.v8::Value"* %217, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %218 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %221 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %220, i64 0, i32 0, i32 0
  %222 = bitcast %"class.WTF::String"* %220 to i64*
  %223 = load i64, i64* %222, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %221, align 8
  %224 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %225 = bitcast %"class.std::__1::unique_ptr.251"* %224 to i64*
  %226 = load i64, i64* %225, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %206) #6
  %227 = load i32, i32* %203, align 8
  %228 = icmp eq i32 %227, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8
  %229 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = icmp eq i64* %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %216
  %233 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %202, align 8
  %234 = bitcast %"class.v8::Isolate"* %233 to %"class.v8::internal::Isolate"*
  %235 = load i64, i64* %230, align 8
  %236 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %234, i64 %235) #6
  %237 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %233) #6
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = bitcast i64* %236 to %"class.v8::Value"*
  %240 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %233, %"class.v8::Value"* %239) #6
  br label %241

241:                                              ; preds = %238, %232, %216
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #6
  br label %257

257:                                              ; preds = %241, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %195) #6
  br i1 %228, label %258, label %763

258:                                              ; preds = %257
  %259 = load i32, i32* %20, align 8
  br label %260

260:                                              ; preds = %258, %191
  %261 = phi i32 [ %151, %191 ], [ %259, %258 ]
  %262 = phi i64 [ 0, %191 ], [ %226, %258 ]
  %263 = phi i64 [ 0, %191 ], [ %223, %258 ]
  %264 = phi i64 [ %193, %191 ], [ %219, %258 ]
  %265 = icmp sgt i32 %261, 1
  br i1 %265, label %272, label %266

266:                                              ; preds = %260
  %267 = load i64*, i64** %15, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 1
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %269, 160
  %271 = inttoptr i64 %270 to %"class.v8::Value"*
  br label %276

272:                                              ; preds = %260
  %273 = load i64*, i64** %85, align 8
  %274 = getelementptr inbounds i64, i64* %273, i64 1
  %275 = bitcast i64* %274 to %"class.v8::Value"*
  br label %276

276:                                              ; preds = %266, %272
  %277 = phi %"class.v8::Value"* [ %271, %266 ], [ %275, %272 ]
  %278 = bitcast %"class.v8::Value"* %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 3
  %281 = icmp eq i64 %280, 1
  br i1 %281, label %282, label %307, !prof !4

282:                                              ; preds = %276
  %283 = add i64 %279, -1
  %284 = inttoptr i64 %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = and i64 %279, -4294967296
  %287 = zext i32 %285 to i64
  %288 = or i64 %286, %287
  %289 = add i64 %288, 7
  %290 = inttoptr i64 %289 to i16*
  %291 = load i16, i16* %290, align 2
  %292 = icmp ult i16 %291, 64
  br i1 %292, label %293, label %307, !prof !5

293:                                              ; preds = %282
  br i1 %265, label %300, label %294

294:                                              ; preds = %293
  %295 = load i64*, i64** %15, align 8
  %296 = getelementptr inbounds i64, i64* %295, i64 1
  %297 = load i64, i64* %296, align 8
  %298 = add i64 %297, 160
  %299 = inttoptr i64 %298 to %"class.v8::Value"*
  br label %304

300:                                              ; preds = %293
  %301 = load i64*, i64** %85, align 8
  %302 = getelementptr inbounds i64, i64* %301, i64 1
  %303 = bitcast i64* %302 to %"class.v8::Value"*
  br label %304

304:                                              ; preds = %294, %300
  %305 = phi %"class.v8::Value"* [ %299, %294 ], [ %303, %300 ]
  %306 = ptrtoint %"class.v8::Value"* %305 to i64
  br label %372

307:                                              ; preds = %276, %282
  %308 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %308) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 -86, i64 56, i1 false)
  %309 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %309, align 8
  %310 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %310, align 8
  %311 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %311, align 2
  %312 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %313 = bitcast i8** %312 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %313, align 8
  %314 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %314, align 8
  %315 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %19, %"class.v8::Isolate"** %315, align 8
  %316 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %316, align 8
  %317 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %318 = bitcast %"class.WTF::StringImpl"** %317 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 16, i1 false) #6
  %319 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %319) #6
  br i1 %265, label %326, label %320

320:                                              ; preds = %307
  %321 = load i64*, i64** %15, align 8
  %322 = getelementptr inbounds i64, i64* %321, i64 1
  %323 = load i64, i64* %322, align 8
  %324 = add i64 %323, 160
  %325 = inttoptr i64 %324 to %"class.v8::Value"*
  br label %330

326:                                              ; preds = %307
  %327 = load i64*, i64** %85, align 8
  %328 = getelementptr inbounds i64, i64* %327, i64 1
  %329 = bitcast i64* %328 to %"class.v8::Value"*
  br label %330

330:                                              ; preds = %320, %326
  %331 = phi %"class.v8::Value"* [ %325, %320 ], [ %329, %326 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %7, %"class.v8::Isolate"* %19, %"class.v8::Value"* %331, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #6
  %332 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1
  %335 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %334, i64 0, i32 0, i32 0
  %336 = bitcast %"class.WTF::String"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %335, align 8
  %338 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 2, i32 1
  %339 = bitcast %"class.std::__1::unique_ptr.251"* %338 to i64*
  %340 = load i64, i64* %339, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %319) #6
  %341 = load i32, i32* %316, align 8
  %342 = icmp eq i32 %341, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %309, align 8
  %343 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %344 = load i64*, i64** %343, align 8
  %345 = icmp eq i64* %344, null
  br i1 %345, label %355, label %346

346:                                              ; preds = %330
  %347 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %315, align 8
  %348 = bitcast %"class.v8::Isolate"* %347 to %"class.v8::internal::Isolate"*
  %349 = load i64, i64* %344, align 8
  %350 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %348, i64 %349) #6
  %351 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %347) #6
  br i1 %351, label %355, label %352

352:                                              ; preds = %346
  %353 = bitcast i64* %350 to %"class.v8::Value"*
  %354 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %347, %"class.v8::Value"* %353) #6
  br label %355

355:                                              ; preds = %352, %346, %330
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %371, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %367

365:                                              ; preds = %358
  %366 = add i32 %364, -1
  store i32 %366, i32* %363, align 4
  br label %367

367:                                              ; preds = %365, %358
  %368 = phi i32 [ %366, %365 ], [ %364, %358 ]
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #6
  br label %371

371:                                              ; preds = %355, %367, %370
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %308) #6
  br i1 %342, label %372, label %739

372:                                              ; preds = %371, %304
  %373 = phi i64 [ %306, %304 ], [ %333, %371 ]
  %374 = phi i64 [ 0, %304 ], [ %337, %371 ]
  %375 = phi i64 [ 0, %304 ], [ %340, %371 ]
  %376 = icmp slt i32 %129, 3
  br i1 %376, label %377, label %468

377:                                              ; preds = %372
  %378 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #6
  %379 = icmp eq i64 %264, 0
  br i1 %379, label %383, label %380, !prof !3

380:                                              ; preds = %377
  %381 = inttoptr i64 %264 to %"class.v8::String"*
  %382 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %381, i32 0) #6
  br label %403

383:                                              ; preds = %377
  %384 = inttoptr i64 %263 to %"class.WTF::StringImpl"*
  %385 = icmp eq i64 %263, 0
  br i1 %385, label %403, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %403

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i33
  %395 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %394, i33 1) #6
  %396 = extractvalue { i33, i1 } %395, 1
  %397 = extractvalue { i33, i1 } %395, 0
  %398 = icmp slt i33 %397, 0
  %399 = or i1 %396, %398
  br i1 %399, label %400, label %401, !prof !3

400:                                              ; preds = %391
  call void @llvm.trap() #6
  unreachable

401:                                              ; preds = %391
  %402 = trunc i33 %397 to i32
  store i32 %402, i32* %392, align 4
  br label %403

403:                                              ; preds = %380, %383, %386, %401
  %404 = phi %"class.WTF::StringImpl"* [ %382, %380 ], [ null, %383 ], [ %384, %386 ], [ %384, %401 ]
  %405 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %404, %"class.WTF::StringImpl"** %405, align 8
  %406 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %406) #6
  %407 = icmp eq i64 %373, 0
  br i1 %407, label %411, label %408, !prof !3

408:                                              ; preds = %403
  %409 = inttoptr i64 %373 to %"class.v8::String"*
  %410 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %409, i32 0) #6
  br label %431

411:                                              ; preds = %403
  %412 = inttoptr i64 %374 to %"class.WTF::StringImpl"*
  %413 = icmp eq i64 %374, 0
  br i1 %413, label %431, label %414

414:                                              ; preds = %411
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load atomic i32, i32* %415 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %431

419:                                              ; preds = %414
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = zext i32 %421 to i33
  %423 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %422, i33 1) #6
  %424 = extractvalue { i33, i1 } %423, 1
  %425 = extractvalue { i33, i1 } %423, 0
  %426 = icmp slt i33 %425, 0
  %427 = or i1 %424, %426
  br i1 %427, label %428, label %429, !prof !3

428:                                              ; preds = %419
  call void @llvm.trap() #6
  unreachable

429:                                              ; preds = %419
  %430 = trunc i33 %425 to i32
  store i32 %430, i32* %420, align 4
  br label %431

431:                                              ; preds = %408, %411, %414, %429
  %432 = phi %"class.WTF::StringImpl"* [ %410, %408 ], [ null, %411 ], [ %412, %414 ], [ %412, %429 ]
  %433 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %432, %"class.WTF::StringImpl"** %433, align 8
  %434 = call %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory15getPropertyTypeERKN3WTF6StringES4_(%"class.blink::TrustedTypePolicyFactory"* %153, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #6
  %435 = ptrtoint %"class.WTF::StringImpl"* %434 to i64
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %437, label %451, label %438

438:                                              ; preds = %431
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #6
  br label %451

451:                                              ; preds = %431, %447, %450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %406) #6
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %451
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #6
  br label %467

467:                                              ; preds = %451, %463, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #6
  br label %739

468:                                              ; preds = %372
  %469 = load i32, i32* %20, align 8
  %470 = icmp sgt i32 %469, 2
  br i1 %470, label %477, label %471

471:                                              ; preds = %468
  %472 = load i64*, i64** %15, align 8
  %473 = getelementptr inbounds i64, i64* %472, i64 1
  %474 = load i64, i64* %473, align 8
  %475 = add i64 %474, 160
  %476 = inttoptr i64 %475 to %"class.v8::Value"*
  br label %481

477:                                              ; preds = %468
  %478 = load i64*, i64** %85, align 8
  %479 = getelementptr inbounds i64, i64* %478, i64 2
  %480 = bitcast i64* %479 to %"class.v8::Value"*
  br label %481

481:                                              ; preds = %471, %477
  %482 = phi %"class.v8::Value"* [ %476, %471 ], [ %480, %477 ]
  %483 = bitcast %"class.v8::Value"* %482 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = and i64 %484, 3
  %486 = icmp eq i64 %485, 1
  br i1 %486, label %487, label %512, !prof !4

487:                                              ; preds = %481
  %488 = add i64 %484, -1
  %489 = inttoptr i64 %488 to i32*
  %490 = load i32, i32* %489, align 4
  %491 = and i64 %484, -4294967296
  %492 = zext i32 %490 to i64
  %493 = or i64 %491, %492
  %494 = add i64 %493, 7
  %495 = inttoptr i64 %494 to i16*
  %496 = load i16, i16* %495, align 2
  %497 = icmp ult i16 %496, 64
  br i1 %497, label %498, label %512, !prof !5

498:                                              ; preds = %487
  br i1 %470, label %505, label %499

499:                                              ; preds = %498
  %500 = load i64*, i64** %15, align 8
  %501 = getelementptr inbounds i64, i64* %500, i64 1
  %502 = load i64, i64* %501, align 8
  %503 = add i64 %502, 160
  %504 = inttoptr i64 %503 to %"class.v8::Value"*
  br label %509

505:                                              ; preds = %498
  %506 = load i64*, i64** %85, align 8
  %507 = getelementptr inbounds i64, i64* %506, i64 2
  %508 = bitcast i64* %507 to %"class.v8::Value"*
  br label %509

509:                                              ; preds = %499, %505
  %510 = phi %"class.v8::Value"* [ %504, %499 ], [ %508, %505 ]
  %511 = ptrtoint %"class.v8::Value"* %510 to i64
  br label %577

512:                                              ; preds = %481, %487
  %513 = bitcast %"class.blink::ExceptionState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %513) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %513, i8 -86, i64 56, i1 false)
  %514 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %514, align 8
  %515 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 0
  store i16 6, i16* %515, align 8
  %516 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 1
  store i16 0, i16* %516, align 2
  %517 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 2
  %518 = bitcast i8** %517 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %518, align 8
  %519 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %519, align 8
  %520 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 3
  store %"class.v8::Isolate"* %19, %"class.v8::Isolate"** %520, align 8
  %521 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 4
  store i32 0, i32* %521, align 8
  %522 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 5, i32 0, i32 0
  %523 = bitcast %"class.WTF::StringImpl"** %522 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %523, i8 0, i64 16, i1 false) #6
  %524 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %524) #6
  br i1 %470, label %531, label %525

525:                                              ; preds = %512
  %526 = load i64*, i64** %15, align 8
  %527 = getelementptr inbounds i64, i64* %526, i64 1
  %528 = load i64, i64* %527, align 8
  %529 = add i64 %528, 160
  %530 = inttoptr i64 %529 to %"class.v8::Value"*
  br label %535

531:                                              ; preds = %512
  %532 = load i64*, i64** %85, align 8
  %533 = getelementptr inbounds i64, i64* %532, i64 2
  %534 = bitcast i64* %533 to %"class.v8::Value"*
  br label %535

535:                                              ; preds = %525, %531
  %536 = phi %"class.v8::Value"* [ %530, %525 ], [ %534, %531 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %11, %"class.v8::Isolate"* %19, %"class.v8::Value"* %536, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #6
  %537 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 1
  %540 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %539, i64 0, i32 0, i32 0
  %541 = bitcast %"class.WTF::String"* %539 to i64*
  %542 = load i64, i64* %541, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %540, align 8
  %543 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 2, i32 1
  %544 = bitcast %"class.std::__1::unique_ptr.251"* %543 to i64*
  %545 = load i64, i64* %544, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %524) #6
  %546 = load i32, i32* %521, align 8
  %547 = icmp eq i32 %546, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %514, align 8
  %548 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %549 = load i64*, i64** %548, align 8
  %550 = icmp eq i64* %549, null
  br i1 %550, label %560, label %551

551:                                              ; preds = %535
  %552 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %520, align 8
  %553 = bitcast %"class.v8::Isolate"* %552 to %"class.v8::internal::Isolate"*
  %554 = load i64, i64* %549, align 8
  %555 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %553, i64 %554) #6
  %556 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %552) #6
  br i1 %556, label %560, label %557

557:                                              ; preds = %551
  %558 = bitcast i64* %555 to %"class.v8::Value"*
  %559 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %552, %"class.v8::Value"* %558) #6
  br label %560

560:                                              ; preds = %557, %551, %535
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %522, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %561, null
  br i1 %562, label %576, label %563

563:                                              ; preds = %560
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 0
  %569 = load i32, i32* %568, align 4
  br i1 %567, label %570, label %572

570:                                              ; preds = %563
  %571 = add i32 %569, -1
  store i32 %571, i32* %568, align 4
  br label %572

572:                                              ; preds = %570, %563
  %573 = phi i32 [ %571, %570 ], [ %569, %563 ]
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %572
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %561) #6
  br label %576

576:                                              ; preds = %560, %572, %575
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %513) #6
  br i1 %547, label %577, label %715

577:                                              ; preds = %576, %509
  %578 = phi i64 [ %511, %509 ], [ %538, %576 ]
  %579 = phi i64 [ 0, %509 ], [ %542, %576 ]
  %580 = phi i64 [ 0, %509 ], [ %545, %576 ]
  %581 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %581) #6
  %582 = icmp eq i64 %264, 0
  br i1 %582, label %586, label %583, !prof !3

583:                                              ; preds = %577
  %584 = inttoptr i64 %264 to %"class.v8::String"*
  %585 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %584, i32 0) #6
  br label %606

586:                                              ; preds = %577
  %587 = inttoptr i64 %263 to %"class.WTF::StringImpl"*
  %588 = icmp eq i64 %263, 0
  br i1 %588, label %606, label %589

589:                                              ; preds = %586
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %591 = load atomic i32, i32* %590 monotonic, align 4
  %592 = and i32 %591, 2
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %606

594:                                              ; preds = %589
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 0
  %596 = load i32, i32* %595, align 4
  %597 = zext i32 %596 to i33
  %598 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %597, i33 1) #6
  %599 = extractvalue { i33, i1 } %598, 1
  %600 = extractvalue { i33, i1 } %598, 0
  %601 = icmp slt i33 %600, 0
  %602 = or i1 %599, %601
  br i1 %602, label %603, label %604, !prof !3

603:                                              ; preds = %594
  call void @llvm.trap() #6
  unreachable

604:                                              ; preds = %594
  %605 = trunc i33 %600 to i32
  store i32 %605, i32* %595, align 4
  br label %606

606:                                              ; preds = %583, %586, %589, %604
  %607 = phi %"class.WTF::StringImpl"* [ %585, %583 ], [ null, %586 ], [ %587, %589 ], [ %587, %604 ]
  %608 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %607, %"class.WTF::StringImpl"** %608, align 8
  %609 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %609) #6
  %610 = icmp eq i64 %373, 0
  br i1 %610, label %614, label %611, !prof !3

611:                                              ; preds = %606
  %612 = inttoptr i64 %373 to %"class.v8::String"*
  %613 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %612, i32 0) #6
  br label %634

614:                                              ; preds = %606
  %615 = inttoptr i64 %374 to %"class.WTF::StringImpl"*
  %616 = icmp eq i64 %374, 0
  br i1 %616, label %634, label %617

617:                                              ; preds = %614
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %634

622:                                              ; preds = %617
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  %625 = zext i32 %624 to i33
  %626 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %625, i33 1) #6
  %627 = extractvalue { i33, i1 } %626, 1
  %628 = extractvalue { i33, i1 } %626, 0
  %629 = icmp slt i33 %628, 0
  %630 = or i1 %627, %629
  br i1 %630, label %631, label %632, !prof !3

631:                                              ; preds = %622
  call void @llvm.trap() #6
  unreachable

632:                                              ; preds = %622
  %633 = trunc i33 %628 to i32
  store i32 %633, i32* %623, align 4
  br label %634

634:                                              ; preds = %611, %614, %617, %632
  %635 = phi %"class.WTF::StringImpl"* [ %613, %611 ], [ null, %614 ], [ %615, %617 ], [ %615, %632 ]
  %636 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %635, %"class.WTF::StringImpl"** %636, align 8
  %637 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %637) #6
  %638 = icmp eq i64 %578, 0
  br i1 %638, label %642, label %639, !prof !3

639:                                              ; preds = %634
  %640 = inttoptr i64 %578 to %"class.v8::String"*
  %641 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %640, i32 0) #6
  br label %662

642:                                              ; preds = %634
  %643 = inttoptr i64 %579 to %"class.WTF::StringImpl"*
  %644 = icmp eq i64 %579, 0
  br i1 %644, label %662, label %645

645:                                              ; preds = %642
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = load atomic i32, i32* %646 monotonic, align 4
  %648 = and i32 %647, 2
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %662

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 0
  %652 = load i32, i32* %651, align 4
  %653 = zext i32 %652 to i33
  %654 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %653, i33 1) #6
  %655 = extractvalue { i33, i1 } %654, 1
  %656 = extractvalue { i33, i1 } %654, 0
  %657 = icmp slt i33 %656, 0
  %658 = or i1 %655, %657
  br i1 %658, label %659, label %660, !prof !3

659:                                              ; preds = %650
  call void @llvm.trap() #6
  unreachable

660:                                              ; preds = %650
  %661 = trunc i33 %656 to i32
  store i32 %661, i32* %651, align 4
  br label %662

662:                                              ; preds = %639, %642, %645, %660
  %663 = phi %"class.WTF::StringImpl"* [ %641, %639 ], [ null, %642 ], [ %643, %645 ], [ %643, %660 ]
  %664 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %663, %"class.WTF::StringImpl"** %664, align 8
  %665 = call %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory15getPropertyTypeERKN3WTF6StringES4_S4_(%"class.blink::TrustedTypePolicyFactory"* %153, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #6
  %666 = ptrtoint %"class.WTF::StringImpl"* %665 to i64
  %667 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %668 = icmp eq %"class.WTF::StringImpl"* %667, null
  br i1 %668, label %682, label %669

669:                                              ; preds = %662
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %667, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %671 = load atomic i32, i32* %670 monotonic, align 4
  %672 = and i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %667, i64 0, i32 0
  %675 = load i32, i32* %674, align 4
  br i1 %673, label %676, label %678

676:                                              ; preds = %669
  %677 = add i32 %675, -1
  store i32 %677, i32* %674, align 4
  br label %678

678:                                              ; preds = %676, %669
  %679 = phi i32 [ %677, %676 ], [ %675, %669 ]
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %682

681:                                              ; preds = %678
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %667) #6
  br label %682

682:                                              ; preds = %662, %678, %681
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637) #6
  %683 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %636, align 8
  %684 = icmp eq %"class.WTF::StringImpl"* %683, null
  br i1 %684, label %698, label %685

685:                                              ; preds = %682
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load atomic i32, i32* %686 monotonic, align 4
  %688 = and i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 0
  %691 = load i32, i32* %690, align 4
  br i1 %689, label %692, label %694

692:                                              ; preds = %685
  %693 = add i32 %691, -1
  store i32 %693, i32* %690, align 4
  br label %694

694:                                              ; preds = %692, %685
  %695 = phi i32 [ %693, %692 ], [ %691, %685 ]
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %698

697:                                              ; preds = %694
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %683) #6
  br label %698

698:                                              ; preds = %682, %694, %697
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %609) #6
  %699 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %608, align 8
  %700 = icmp eq %"class.WTF::StringImpl"* %699, null
  br i1 %700, label %714, label %701

701:                                              ; preds = %698
  %702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %699, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load atomic i32, i32* %702 monotonic, align 4
  %704 = and i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %699, i64 0, i32 0
  %707 = load i32, i32* %706, align 4
  br i1 %705, label %708, label %710

708:                                              ; preds = %701
  %709 = add i32 %707, -1
  store i32 %709, i32* %706, align 4
  br label %710

710:                                              ; preds = %708, %701
  %711 = phi i32 [ %709, %708 ], [ %707, %701 ]
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %714

713:                                              ; preds = %710
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %699) #6
  br label %714

714:                                              ; preds = %698, %710, %713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %581) #6
  br label %715

715:                                              ; preds = %576, %714
  %716 = phi i64 [ %579, %714 ], [ %542, %576 ]
  %717 = phi i64 [ %580, %714 ], [ %545, %576 ]
  %718 = phi i64 [ %666, %714 ], [ 0, %576 ]
  %719 = phi i32 [ 0, %714 ], [ 1, %576 ]
  %720 = icmp eq i64 %717, 0
  br i1 %720, label %723, label %721

721:                                              ; preds = %715
  %722 = inttoptr i64 %717 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %722) #6
  br label %723

723:                                              ; preds = %721, %715
  %724 = inttoptr i64 %716 to %"class.WTF::StringImpl"*
  %725 = icmp eq i64 %716, 0
  br i1 %725, label %739, label %726

726:                                              ; preds = %723
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %724, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %728 = load atomic i32, i32* %727 monotonic, align 4
  %729 = and i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %724, i64 0, i32 0
  %732 = load i32, i32* %731, align 4
  br i1 %730, label %733, label %735

733:                                              ; preds = %726
  %734 = add i32 %732, -1
  store i32 %734, i32* %731, align 4
  br label %735

735:                                              ; preds = %733, %726
  %736 = phi i32 [ %734, %733 ], [ %732, %726 ]
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %739

738:                                              ; preds = %735
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %724) #6
  br label %739

739:                                              ; preds = %738, %735, %723, %371, %467
  %740 = phi i64 [ %374, %467 ], [ %337, %371 ], [ %374, %723 ], [ %374, %735 ], [ %374, %738 ]
  %741 = phi i64 [ %375, %467 ], [ %340, %371 ], [ %375, %723 ], [ %375, %735 ], [ %375, %738 ]
  %742 = phi i64 [ %435, %467 ], [ 0, %371 ], [ %718, %723 ], [ %718, %735 ], [ %718, %738 ]
  %743 = phi i32 [ 6, %467 ], [ 1, %371 ], [ %719, %723 ], [ %719, %735 ], [ %719, %738 ]
  %744 = icmp eq i64 %741, 0
  br i1 %744, label %747, label %745

745:                                              ; preds = %739
  %746 = inttoptr i64 %741 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %746) #6
  br label %747

747:                                              ; preds = %745, %739
  %748 = inttoptr i64 %740 to %"class.WTF::StringImpl"*
  %749 = icmp eq i64 %740, 0
  br i1 %749, label %763, label %750

750:                                              ; preds = %747
  %751 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %752 = load atomic i32, i32* %751 monotonic, align 4
  %753 = and i32 %752, 2
  %754 = icmp eq i32 %753, 0
  %755 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 0
  %756 = load i32, i32* %755, align 4
  br i1 %754, label %757, label %759

757:                                              ; preds = %750
  %758 = add i32 %756, -1
  store i32 %758, i32* %755, align 4
  br label %759

759:                                              ; preds = %757, %750
  %760 = phi i32 [ %758, %757 ], [ %756, %750 ]
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %763

762:                                              ; preds = %759
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %748) #6
  br label %763

763:                                              ; preds = %762, %759, %747, %257
  %764 = phi i64 [ %226, %257 ], [ %262, %747 ], [ %262, %759 ], [ %262, %762 ]
  %765 = phi i64 [ %223, %257 ], [ %263, %747 ], [ %263, %759 ], [ %263, %762 ]
  %766 = phi i64 [ 0, %257 ], [ %742, %747 ], [ %742, %759 ], [ %742, %762 ]
  %767 = phi i32 [ 1, %257 ], [ %743, %747 ], [ %743, %759 ], [ %743, %762 ]
  %768 = icmp eq i64 %764, 0
  br i1 %768, label %771, label %769

769:                                              ; preds = %763
  %770 = inttoptr i64 %764 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %770) #6
  br label %771

771:                                              ; preds = %769, %763
  %772 = inttoptr i64 %765 to %"class.WTF::StringImpl"*
  %773 = icmp eq i64 %765, 0
  br i1 %773, label %787, label %774

774:                                              ; preds = %771
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #6
  br label %787

787:                                              ; preds = %771, %783, %786
  switch i32 %767, label %818 [
    i32 0, label %788
    i32 6, label %788
  ]

788:                                              ; preds = %787, %787
  %789 = inttoptr i64 %766 to %"class.WTF::StringImpl"*
  %790 = icmp eq i64 %766, 0
  br i1 %790, label %791, label %799

791:                                              ; preds = %788
  %792 = load i64*, i64** %15, align 8
  %793 = getelementptr inbounds i64, i64* %792, i64 3
  %794 = getelementptr inbounds i64, i64* %792, i64 1
  %795 = load i64, i64* %794, align 8
  %796 = add i64 %795, 176
  %797 = inttoptr i64 %796 to i64*
  %798 = load i64, i64* %797, align 8
  store i64 %798, i64* %793, align 8
  br label %835

799:                                              ; preds = %788
  %800 = add i64 %23, 8
  %801 = inttoptr i64 %800 to %"class.blink::V8PerIsolateData"**
  %802 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %801, align 8
  %803 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %802, i64 0, i32 5, i32 0, i32 0, i32 0
  %804 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %803, align 8
  %805 = load i64*, i64** %15, align 8
  %806 = getelementptr inbounds i64, i64* %805, i64 3
  %807 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %804, i64 0, i32 3, i32 0
  %808 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %807, align 8
  %809 = icmp eq %"class.WTF::StringImpl"* %808, %789
  br i1 %809, label %810, label %817

810:                                              ; preds = %799
  %811 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %804, i64 0, i32 1, i32 0
  %812 = load i64, i64* %811, align 8
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %821, label %814

814:                                              ; preds = %810
  %815 = inttoptr i64 %812 to i64*
  %816 = load i64, i64* %815, align 8
  store i64 %816, i64* %806, align 8
  br label %821

817:                                              ; preds = %799
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %804, i64* %806, %"class.WTF::StringImpl"* nonnull %789) #6
  br label %821

818:                                              ; preds = %787
  %819 = inttoptr i64 %766 to %"class.WTF::StringImpl"*
  %820 = icmp eq i64 %766, 0
  br i1 %820, label %835, label %821

821:                                              ; preds = %810, %814, %817, %818
  %822 = phi %"class.WTF::StringImpl"* [ %819, %818 ], [ %789, %817 ], [ %789, %814 ], [ %789, %810 ]
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %824 = load atomic i32, i32* %823 monotonic, align 4
  %825 = and i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 0
  %828 = load i32, i32* %827, align 4
  br i1 %826, label %829, label %831

829:                                              ; preds = %821
  %830 = add i32 %828, -1
  store i32 %830, i32* %827, align 4
  br label %831

831:                                              ; preds = %829, %821
  %832 = phi i32 [ %830, %829 ], [ %828, %821 ]
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %835

834:                                              ; preds = %831
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %822) #6
  br label %835

835:                                              ; preds = %791, %834, %831, %818, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory31GetTypeMappingOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ScriptValue", align 8
  %3 = alloca %"class.blink::ScriptValue", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 -1
  %11 = bitcast i64* %10 to %"class.v8::Object"*
  %12 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %11) #6
  %13 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %12)
  %14 = bitcast %"class.blink::ScriptValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #6
  %17 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %20 = sext i32 %18 to i64
  br label %21

21:                                               ; preds = %54, %1
  %22 = phi i64 [ %23, %54 ], [ %20, %1 ]
  %23 = add nsw i64 %22, -1
  %24 = icmp sgt i64 %22, 0
  br i1 %24, label %25, label %66

25:                                               ; preds = %21
  %26 = icmp sgt i64 %22, %20
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = load i64*, i64** %19, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 160
  %32 = inttoptr i64 %31 to %"class.v8::Value"*
  br label %37

33:                                               ; preds = %25
  %34 = load i64*, i64** %8, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 %23
  %36 = bitcast i64* %35 to %"class.v8::Value"*
  br label %37

37:                                               ; preds = %33, %27
  %38 = phi %"class.v8::Value"* [ %32, %27 ], [ %36, %33 ]
  %39 = bitcast %"class.v8::Value"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %43, label %62

43:                                               ; preds = %37
  %44 = add i64 %40, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i64 %40, -4294967296
  %48 = zext i32 %46 to i64
  %49 = or i64 %47, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 67
  br i1 %53, label %54, label %60

54:                                               ; preds = %43
  %55 = add i64 %40, 23
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, -2
  %59 = icmp eq i32 %58, 10
  br i1 %59, label %21, label %64

60:                                               ; preds = %43
  %61 = trunc i64 %22 to i32
  br label %66

62:                                               ; preds = %37
  %63 = trunc i64 %22 to i32
  br label %66

64:                                               ; preds = %54
  %65 = trunc i64 %22 to i32
  br label %66

66:                                               ; preds = %21, %60, %62, %64
  %67 = phi i32 [ %61, %60 ], [ %63, %62 ], [ %65, %64 ], [ 0, %21 ]
  %68 = load i64, i64* %10, align 8
  %69 = add i64 %68, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i64 %68, -4294967296
  %73 = zext i32 %71 to i64
  %74 = or i64 %72, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load i16, i16* %76, align 2
  switch i16 %77, label %82 [
    i16 1057, label %78
    i16 1056, label %78
    i16 1040, label %78
  ]

78:                                               ; preds = %66, %66, %66
  %79 = add i64 %68, 19
  %80 = inttoptr i64 %79 to i8**
  %81 = load i8*, i8** %80, align 1
  br label %84

82:                                               ; preds = %66
  %83 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %11, i32 1) #6
  br label %84

84:                                               ; preds = %78, %82
  %85 = phi i8* [ %81, %78 ], [ %83, %82 ]
  %86 = bitcast i8* %85 to %"class.blink::TrustedTypePolicyFactory"*
  %87 = icmp slt i32 %67, 1
  br i1 %87, label %88, label %107

88:                                               ; preds = %84
  %89 = bitcast %"class.blink::ScriptValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #6
  call void @_ZNK5blink24TrustedTypePolicyFactory14getTypeMappingEPNS_11ScriptStateE(%"class.blink::ScriptValue"* nonnull sret %3, %"class.blink::TrustedTypePolicyFactory"* %86, %"class.blink::ScriptState"* %13) #6
  %90 = bitcast %"class.blink::ScriptValue"* %3 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1
  %94 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %3, i64 0, i32 1
  %95 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %93, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %94) #6
  %96 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %3, i64 0, i32 1, i32 1, i32 0
  %97 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %96, align 8
  %98 = icmp eq %"class.blink::DOMWrapperWorld"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %97, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #6
  %101 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %97) #6
  %105 = bitcast %"class.blink::DOMWrapperWorld"* %97 to i8*
  call void @free(i8* %105) #6
  br label %106

106:                                              ; preds = %104, %99, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #6
  br label %306

107:                                              ; preds = %84
  %108 = load i32, i32* %17, align 8
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %107
  %111 = load i64*, i64** %19, align 8
  %112 = getelementptr inbounds i64, i64* %111, i64 1
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 160
  %115 = inttoptr i64 %114 to %"class.v8::Value"*
  br label %119

116:                                              ; preds = %107
  %117 = bitcast i64** %8 to %"class.v8::Value"**
  %118 = load %"class.v8::Value"*, %"class.v8::Value"** %117, align 8
  br label %119

119:                                              ; preds = %110, %116
  %120 = phi %"class.v8::Value"* [ %115, %110 ], [ %118, %116 ]
  %121 = bitcast %"class.v8::Value"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, 3
  %124 = icmp eq i64 %123, 1
  br i1 %124, label %125, label %149, !prof !4

125:                                              ; preds = %119
  %126 = add i64 %122, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = and i64 %122, -4294967296
  %130 = zext i32 %128 to i64
  %131 = or i64 %129, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load i16, i16* %133, align 2
  %135 = icmp ult i16 %134, 64
  br i1 %135, label %136, label %149, !prof !5

136:                                              ; preds = %125
  br i1 %109, label %143, label %137

137:                                              ; preds = %136
  %138 = load i64*, i64** %19, align 8
  %139 = getelementptr inbounds i64, i64* %138, i64 1
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, 160
  %142 = inttoptr i64 %141 to %"class.v8::Value"*
  br label %146

143:                                              ; preds = %136
  %144 = bitcast i64** %8 to %"class.v8::Value"**
  %145 = load %"class.v8::Value"*, %"class.v8::Value"** %144, align 8
  br label %146

146:                                              ; preds = %137, %143
  %147 = phi %"class.v8::Value"* [ %142, %137 ], [ %145, %143 ]
  %148 = ptrtoint %"class.v8::Value"* %147 to i64
  br label %215

149:                                              ; preds = %119, %125
  %150 = load i64*, i64** %19, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = bitcast i64* %151 to %"class.v8::Isolate"**
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %152, align 8
  %154 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %154) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 56, i1 false)
  %155 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %156, align 8
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %157, align 2
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %159 = bitcast i8** %158 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %153, %"class.v8::Isolate"** %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %164 = bitcast %"class.WTF::StringImpl"** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #6
  %165 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %165) #6
  br i1 %109, label %170, label %166

166:                                              ; preds = %149
  %167 = load i64, i64* %151, align 8
  %168 = add i64 %167, 160
  %169 = inttoptr i64 %168 to %"class.v8::Value"*
  br label %173

170:                                              ; preds = %149
  %171 = bitcast i64** %8 to %"class.v8::Value"**
  %172 = load %"class.v8::Value"*, %"class.v8::Value"** %171, align 8
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi %"class.v8::Value"* [ %169, %166 ], [ %172, %170 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %153, %"class.v8::Value"* %174, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %175 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %177, i64 0, i32 0, i32 0
  %179 = bitcast %"class.WTF::String"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %178, align 8
  %181 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %182 = bitcast %"class.std::__1::unique_ptr.251"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %165) #6
  %184 = load i32, i32* %162, align 8
  %185 = icmp eq i32 %184, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %186 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %187, null
  br i1 %188, label %198, label %189

189:                                              ; preds = %173
  %190 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %161, align 8
  %191 = bitcast %"class.v8::Isolate"* %190 to %"class.v8::internal::Isolate"*
  %192 = load i64, i64* %187, align 8
  %193 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %191, i64 %192) #6
  %194 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %190) #6
  br i1 %194, label %198, label %195

195:                                              ; preds = %189
  %196 = bitcast i64* %193 to %"class.v8::Value"*
  %197 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %190, %"class.v8::Value"* %196) #6
  br label %198

198:                                              ; preds = %195, %189, %173
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #6
  br label %214

214:                                              ; preds = %198, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %154) #6
  br i1 %185, label %215, label %281

215:                                              ; preds = %214, %146
  %216 = phi i64 [ 0, %146 ], [ %180, %214 ]
  %217 = phi i64 [ 0, %146 ], [ %183, %214 ]
  %218 = phi i64 [ %148, %146 ], [ %176, %214 ]
  %219 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #6
  %220 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #6
  %221 = icmp eq i64 %218, 0
  br i1 %221, label %225, label %222, !prof !3

222:                                              ; preds = %215
  %223 = inttoptr i64 %218 to %"class.v8::String"*
  %224 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %223, i32 0) #6
  br label %245

225:                                              ; preds = %215
  %226 = inttoptr i64 %216 to %"class.WTF::StringImpl"*
  %227 = icmp eq i64 %216, 0
  br i1 %227, label %245, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i33
  %237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #6
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !3

242:                                              ; preds = %233
  call void @llvm.trap() #6
  unreachable

243:                                              ; preds = %233
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %234, align 4
  br label %245

245:                                              ; preds = %222, %225, %228, %243
  %246 = phi %"class.WTF::StringImpl"* [ %224, %222 ], [ null, %225 ], [ %226, %228 ], [ %226, %243 ]
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %246, %"class.WTF::StringImpl"** %247, align 8
  call void @_ZNK5blink24TrustedTypePolicyFactory14getTypeMappingEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptValue"* nonnull sret %6, %"class.blink::TrustedTypePolicyFactory"* %86, %"class.blink::ScriptState"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %7) #6
  %248 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1
  %252 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %253 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %251, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %252) #6
  %254 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %255 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %254, align 8
  %256 = icmp eq %"class.blink::DOMWrapperWorld"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %245
  %258 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %255, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #6
  %259 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %255) #6
  %263 = bitcast %"class.blink::DOMWrapperWorld"* %255 to i8*
  call void @free(i8* %263) #6
  br label %264

264:                                              ; preds = %245, %257, %262
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #6
  br label %280

280:                                              ; preds = %264, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #6
  br label %281

281:                                              ; preds = %214, %280
  %282 = phi i64 [ %216, %280 ], [ %180, %214 ]
  %283 = phi i64 [ %217, %280 ], [ %183, %214 ]
  %284 = phi i32 [ 0, %280 ], [ 1, %214 ]
  %285 = icmp eq i64 %283, 0
  br i1 %285, label %288, label %286

286:                                              ; preds = %281
  %287 = inttoptr i64 %283 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %287) #6
  br label %288

288:                                              ; preds = %286, %281
  %289 = inttoptr i64 %282 to %"class.WTF::StringImpl"*
  %290 = icmp eq i64 %282, 0
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #6
  br label %304

304:                                              ; preds = %303, %300, %288
  %305 = icmp eq i32 %284, 0
  br i1 %305, label %306, label %324

306:                                              ; preds = %304, %106
  %307 = load i64*, i64** %15, align 8
  %308 = icmp eq i64* %307, null
  br i1 %308, label %309, label %314

309:                                              ; preds = %306
  %310 = bitcast %"class.blink::ScriptState"* %13 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = add i64 %311, 176
  %313 = inttoptr i64 %312 to %"class.v8::Value"*
  br label %316

314:                                              ; preds = %306
  %315 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %2) #6
  br label %316

316:                                              ; preds = %309, %314
  %317 = phi %"class.v8::Value"* [ %313, %309 ], [ %315, %314 ]
  %318 = icmp eq %"class.v8::Value"* %317, null
  br i1 %318, label %324, label %319

319:                                              ; preds = %316
  %320 = load i64*, i64** %19, align 8
  %321 = getelementptr inbounds i64, i64* %320, i64 3
  %322 = bitcast %"class.v8::Value"* %317 to i64*
  %323 = load i64, i64* %322, align 8
  store i64 %323, i64* %321, align 8
  br label %324

324:                                              ; preds = %316, %304, %319
  %325 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %16, align 8
  %326 = icmp eq %"class.blink::DOMWrapperWorld"* %325, null
  br i1 %326, label %334, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %325, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %328) #6
  %329 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %325, i64 0, i32 0, i32 0, i32 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %327
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %325) #6
  %333 = bitcast %"class.blink::DOMWrapperWorld"* %325 to i8*
  call void @free(i8* %333) #6
  br label %334

334:                                              ; preds = %324, %327, %332
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory23IsHTMLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %44, !prof !3

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %22) #6
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #6
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %110

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #6
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = bitcast i8* %66 to %"class.blink::TrustedTypePolicyFactory"*
  %68 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #6
  %69 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %68)
  %70 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #6
  %71 = load i32, i32* %21, align 8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %65
  %74 = load i64*, i64** %5, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 160
  %78 = inttoptr i64 %77 to %"class.v8::Value"*
  br label %82

79:                                               ; preds = %65
  %80 = bitcast i64** %45 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi %"class.v8::Value"* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 0
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %84, align 8, !alias.scope !6
  %85 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %85, %"class.v8::Isolate"* %9, %"class.v8::Value"* %83) #6
  %86 = load i32, i32* %18, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %82
  %89 = call zeroext i1 @_ZN5blink24TrustedTypePolicyFactory6isHTMLEPNS_11ScriptStateERKNS_11ScriptValueE(%"class.blink::TrustedTypePolicyFactory"* %67, %"class.blink::ScriptState"* %69, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %4) #6
  %90 = load i64*, i64** %5, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = load i64, i64* %92, align 8
  %94 = select i1 %89, i64 184, i64 192
  %95 = add i64 %93, %94
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %91, align 8
  br label %98

98:                                               ; preds = %82, %88
  %99 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %100 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %99, align 8
  %101 = icmp eq %"class.blink::DOMWrapperWorld"* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %100, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %103) #6
  %104 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %100) #6
  %108 = bitcast %"class.blink::DOMWrapperWorld"* %100 to i8*
  call void @free(i8* %108) #6
  br label %109

109:                                              ; preds = %98, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #6
  br label %110

110:                                              ; preds = %109, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %111 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %110
  %115 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %116 = bitcast %"class.v8::Isolate"* %115 to %"class.v8::internal::Isolate"*
  %117 = load i64, i64* %112, align 8
  %118 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %116, i64 %117) #6
  %119 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %115) #6
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast i64* %118 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %115, %"class.v8::Value"* %121) #6
  br label %123

123:                                              ; preds = %120, %114, %110
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #6
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory25IsScriptOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %44, !prof !3

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %22) #6
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #6
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %110

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #6
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = bitcast i8* %66 to %"class.blink::TrustedTypePolicyFactory"*
  %68 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #6
  %69 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %68)
  %70 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #6
  %71 = load i32, i32* %21, align 8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %65
  %74 = load i64*, i64** %5, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 160
  %78 = inttoptr i64 %77 to %"class.v8::Value"*
  br label %82

79:                                               ; preds = %65
  %80 = bitcast i64** %45 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi %"class.v8::Value"* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 0
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %84, align 8, !alias.scope !11
  %85 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %85, %"class.v8::Isolate"* %9, %"class.v8::Value"* %83) #6
  %86 = load i32, i32* %18, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %82
  %89 = call zeroext i1 @_ZN5blink24TrustedTypePolicyFactory8isScriptEPNS_11ScriptStateERKNS_11ScriptValueE(%"class.blink::TrustedTypePolicyFactory"* %67, %"class.blink::ScriptState"* %69, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %4) #6
  %90 = load i64*, i64** %5, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = load i64, i64* %92, align 8
  %94 = select i1 %89, i64 184, i64 192
  %95 = add i64 %93, %94
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %91, align 8
  br label %98

98:                                               ; preds = %82, %88
  %99 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %100 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %99, align 8
  %101 = icmp eq %"class.blink::DOMWrapperWorld"* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %100, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %103) #6
  %104 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %100) #6
  %108 = bitcast %"class.blink::DOMWrapperWorld"* %100 to i8*
  call void @free(i8* %108) #6
  br label %109

109:                                              ; preds = %98, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #6
  br label %110

110:                                              ; preds = %109, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %111 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %110
  %115 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %116 = bitcast %"class.v8::Isolate"* %115 to %"class.v8::internal::Isolate"*
  %117 = load i64, i64* %112, align 8
  %118 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %116, i64 %117) #6
  %119 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %115) #6
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast i64* %118 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %115, %"class.v8::Value"* %121) #6
  br label %123

123:                                              ; preds = %120, %114, %110
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #6
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory28IsScriptURLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %44, !prof !3

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %22) #6
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #6
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %110

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #6
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = bitcast i8* %66 to %"class.blink::TrustedTypePolicyFactory"*
  %68 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #6
  %69 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %68)
  %70 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #6
  %71 = load i32, i32* %21, align 8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %65
  %74 = load i64*, i64** %5, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 160
  %78 = inttoptr i64 %77 to %"class.v8::Value"*
  br label %82

79:                                               ; preds = %65
  %80 = bitcast i64** %45 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi %"class.v8::Value"* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 0
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %84, align 8, !alias.scope !16
  %85 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %85, %"class.v8::Isolate"* %9, %"class.v8::Value"* %83) #6
  %86 = load i32, i32* %18, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %82
  %89 = call zeroext i1 @_ZN5blink24TrustedTypePolicyFactory11isScriptURLEPNS_11ScriptStateERKNS_11ScriptValueE(%"class.blink::TrustedTypePolicyFactory"* %67, %"class.blink::ScriptState"* %69, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %4) #6
  %90 = load i64*, i64** %5, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = load i64, i64* %92, align 8
  %94 = select i1 %89, i64 184, i64 192
  %95 = add i64 %93, %94
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %91, align 8
  br label %98

98:                                               ; preds = %82, %88
  %99 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %100 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %99, align 8
  %101 = icmp eq %"class.blink::DOMWrapperWorld"* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %100, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %103) #6
  %104 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %100) #6
  %108 = bitcast %"class.blink::DOMWrapperWorld"* %100 to i8*
  call void @free(i8* %108) #6
  br label %109

109:                                              ; preds = %98, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #6
  br label %110

110:                                              ; preds = %109, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %111 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %110
  %115 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %116 = bitcast %"class.v8::Isolate"* %115 to %"class.v8::internal::Isolate"*
  %117 = load i64, i64* %112, align 8
  %118 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %116, i64 %117) #6
  %119 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %115) #6
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast i64* %118 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %115, %"class.v8::Value"* %121) #6
  br label %123

123:                                              ; preds = %120, %114, %110
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #6
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory40OnbeforecreatepolicyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::EventTarget"*
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kBeforecreatepolicyE, align 8
  %26 = tail call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %25) #6
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %28, i64 3
  %32 = icmp eq %"class.blink::EventListener"* %26, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %22
  %34 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::EventListener"*)***
  %35 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %35, i64 10
  %37 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::EventListener"* nonnull %26) #6
  br i1 %38, label %39, label %53

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSBasedEventListener"*
  %41 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::JSBasedEventListener"*)***
  %42 = load i1 (%"class.blink::JSBasedEventListener"*)**, i1 (%"class.blink::JSBasedEventListener"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %42, i64 16
  %44 = load i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::JSBasedEventListener"* nonnull %40) #6
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSEventHandler"*
  %48 = bitcast %"class.blink::EventListener"* %26 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %49 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %49, i64 12
  %51 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %50, align 8
  %52 = tail call %"class.v8::Value"* %51(%"class.blink::JSEventHandler"* nonnull %47, %"class.blink::EventTarget"* dereferenceable(16) %24) #6
  br label %56

53:                                               ; preds = %39, %33, %22
  %54 = add i64 %30, 176
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.v8::Value"* [ %55, %53 ], [ %52, %46 ]
  %58 = icmp eq %"class.v8::Value"* %57, null
  %59 = bitcast %"class.v8::Value"* %57 to i64*
  %60 = getelementptr inbounds i64, i64* %28, i64 2
  %61 = select i1 %58, i64* %60, i64* %59, !prof !3
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130v8_trusted_type_policy_factory40OnbeforecreatepolicyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 160
  %11 = inttoptr i64 %10 to %"class.v8::Value"*
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %14 = bitcast i64** %13 to %"class.v8::Value"**
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %14, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi %"class.v8::Value"* [ %11, %5 ], [ %15, %12 ]
  %18 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %17, i32 0) #6
  %19 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %16, %16, %16
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %16
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::EventTarget"*
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kBeforecreatepolicyE, align 8
  %44 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %42, %"class.WTF::AtomicString"* dereferenceable(8) %43, %"class.blink::EventListener"* %19) #6
  ret void
}

declare %"class.blink::TrustedHTML"* @_ZNK5blink24TrustedTypePolicyFactory9emptyHTMLEv(%"class.blink::TrustedTypePolicyFactory"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #6
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #6
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #6
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.blink::TrustedScript"* @_ZNK5blink24TrustedTypePolicyFactory11emptyScriptEv(%"class.blink::TrustedTypePolicyFactory"*) local_unnamed_addr #2

declare %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare %"class.blink::TrustedTypePolicy"* @_ZN5blink24TrustedTypePolicyFactory12createPolicyERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::TrustedTypePolicy"* @_ZN5blink24TrustedTypePolicyFactory12createPolicyERKN3WTF6StringEPKNS_24TrustedTypePolicyOptionsERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::TrustedTypePolicyOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.251"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.251"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.251"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %"class.blink::TrustedTypePolicyOptions"* @_ZN5blink17NativeValueTraitsINS_24TrustedTypePolicyOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory16getAttributeTypeERKN3WTF6StringES4_(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory16getAttributeTypeERKN3WTF6StringES4_S4_(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory16getAttributeTypeERKN3WTF6StringES4_S4_S4_(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory15getPropertyTypeERKN3WTF6StringES4_(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24TrustedTypePolicyFactory15getPropertyTypeERKN3WTF6StringES4_S4_(%"class.blink::TrustedTypePolicyFactory"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink24TrustedTypePolicyFactory14getTypeMappingEPNS_11ScriptStateE(%"class.blink::ScriptValue"* sret, %"class.blink::TrustedTypePolicyFactory"*, %"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZNK5blink24TrustedTypePolicyFactory14getTypeMappingEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptValue"* sret, %"class.blink::TrustedTypePolicyFactory"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #6
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #6
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.247"* dereferenceable(8) %3) #6
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #6
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.377* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.377, %class.scoped_refptr.377* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #6
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #6
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #6
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.247"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink24TrustedTypePolicyFactory6isHTMLEPNS_11ScriptStateERKNS_11ScriptValueE(%"class.blink::TrustedTypePolicyFactory"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.377, %class.scoped_refptr.377* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #6
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.247"* dereferenceable(8) %9) #6
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #6
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #6
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #6
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.377* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #6
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #6
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #6
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #6
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #6
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #6
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #6
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.377* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #6
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #6
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #6
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink24TrustedTypePolicyFactory8isScriptEPNS_11ScriptStateERKNS_11ScriptValueE(%"class.blink::TrustedTypePolicyFactory"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink24TrustedTypePolicyFactory11isScriptURLEPNS_11ScriptStateERKNS_11ScriptValueE(%"class.blink::TrustedTypePolicyFactory"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!9 = distinct !{!9, !10, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!14 = distinct !{!14, !15, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!15 = distinct !{!15, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!19 = distinct !{!19, !20, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!20 = distinct !{!20, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
