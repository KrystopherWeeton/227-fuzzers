; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkPromotedExtensions.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkPromotedExtensions.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%struct.VkDevice_T = type opaque
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle.3, i64 }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.3, i64 }
%struct.VkDescriptorUpdateTemplateCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorUpdateTemplateEntry*, i32, %class.VkNonDispatchableHandle.13, i32, %class.VkNonDispatchableHandle.10, i32 }
%struct.VkDescriptorUpdateTemplateEntry = type { i32, i32, i32, i32, i64, i64 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkCommandBuffer_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VkPhysicalDeviceGroupProperties = type { i32, i8*, i32, [32 x %struct.VkPhysicalDevice_T*], i32 }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceExternalFenceInfo = type { i32, i8*, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %class.VkNonDispatchableHandle.0 }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %class.VkNonDispatchableHandle }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %class.VkNonDispatchableHandle.0 }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %class.VkNonDispatchableHandle.14* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo2 = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription2*, i32, %struct.VkSubpassDescription2*, i32, %struct.VkSubpassDependency2*, i32, i32* }
%struct.VkAttachmentDescription2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription2 = type { i32, i8*, i32, i32, i32, i32, %struct.VkAttachmentReference2*, i32, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, i32, i32* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSubpassDependency2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.17, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkSubpassBeginInfo = type { i32, i8*, i32 }
%struct.VkSubpassEndInfo = type { i32, i8* }
%struct.VkSemaphoreSignalInfo = type { i32, i8*, %class.VkNonDispatchableHandle.1, i64 }
%struct.VkSemaphoreWaitInfo = type { i32, i8*, i32, i32, %class.VkNonDispatchableHandle.1*, i64* }
%struct.VkBufferDeviceAddressInfo = type { i32, i8*, %class.VkNonDispatchableHandle }
%struct.VkDeviceMemoryOpaqueCaptureAddressInfo = type { i32, i8*, %class.VkNonDispatchableHandle.3 }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBindBufferMemory2KHR(%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*) local_unnamed_addr #0 {
  %4 = tail call i32 @vkBindBufferMemory2(%struct.VkDevice_T* %0, i32 %1, %struct.VkBindBufferMemoryInfo* %2) #2
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @vkBindBufferMemory2(%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBindImageMemory2KHR(%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*) local_unnamed_addr #0 {
  %4 = tail call i32 @vkBindImageMemory2(%struct.VkDevice_T* %0, i32 %1, %struct.VkBindImageMemoryInfo* %2) #2
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @vkBindImageMemory2(%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateDescriptorUpdateTemplateKHR(%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 {
  %5 = tail call i32 @vkCreateDescriptorUpdateTemplate(%struct.VkDevice_T* %0, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.20* %3) #2
  ret i32 %5
}

; Function Attrs: optsize
declare i32 @vkCreateDescriptorUpdateTemplate(%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.20*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyDescriptorUpdateTemplateKHR(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  tail call void @vkDestroyDescriptorUpdateTemplate(%struct.VkDevice_T* %0, i64 %1, %struct.VkAllocationCallbacks* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkDestroyDescriptorUpdateTemplate(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkUpdateDescriptorSetWithTemplateKHR(%struct.VkDevice_T*, i64, i64, i8*) local_unnamed_addr #0 {
  tail call void @vkUpdateDescriptorSetWithTemplate(%struct.VkDevice_T* %0, i64 %1, i64 %2, i8* %3) #2
  ret void
}

; Function Attrs: optsize
declare void @vkUpdateDescriptorSetWithTemplate(%struct.VkDevice_T*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDeviceGroupPeerMemoryFeaturesKHR(%struct.VkDevice_T*, i32, i32, i32, i32*) local_unnamed_addr #0 {
  tail call void @vkGetDeviceGroupPeerMemoryFeatures(%struct.VkDevice_T* %0, i32 %1, i32 %2, i32 %3, i32* %4) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetDeviceGroupPeerMemoryFeatures(%struct.VkDevice_T*, i32, i32, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetDeviceMaskKHR(%struct.VkCommandBuffer_T*, i32) local_unnamed_addr #0 {
  tail call void @vkCmdSetDeviceMask(%struct.VkCommandBuffer_T* %0, i32 %1) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdSetDeviceMask(%struct.VkCommandBuffer_T*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDispatchBaseKHR(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  tail call void @vkCmdDispatchBase(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdDispatchBase(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumeratePhysicalDeviceGroupsKHR(%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*) local_unnamed_addr #0 {
  %4 = tail call i32 @vkEnumeratePhysicalDeviceGroups(%struct.VkInstance_T* %0, i32* %1, %struct.VkPhysicalDeviceGroupProperties* %2) #2
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @vkEnumeratePhysicalDeviceGroups(%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceExternalFencePropertiesKHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceExternalFenceProperties(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceExternalFenceInfo* %1, %struct.VkExternalFenceProperties* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceExternalFenceProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceExternalBufferPropertiesKHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceExternalBufferProperties(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceExternalBufferInfo* %1, %struct.VkExternalBufferProperties* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceExternalBufferProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceExternalSemaphoreProperties(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, %struct.VkExternalSemaphoreProperties* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceExternalSemaphoreProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageMemoryRequirements2KHR(%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) local_unnamed_addr #0 {
  tail call void @vkGetImageMemoryRequirements2(%struct.VkDevice_T* %0, %struct.VkImageMemoryRequirementsInfo2* %1, %struct.VkMemoryRequirements2* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetImageMemoryRequirements2(%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetBufferMemoryRequirements2KHR(%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) local_unnamed_addr #0 {
  tail call void @vkGetBufferMemoryRequirements2(%struct.VkDevice_T* %0, %struct.VkBufferMemoryRequirementsInfo2* %1, %struct.VkMemoryRequirements2* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetBufferMemoryRequirements2(%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageSparseMemoryRequirements2KHR(%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*) local_unnamed_addr #0 {
  tail call void @vkGetImageSparseMemoryRequirements2(%struct.VkDevice_T* %0, %struct.VkImageSparseMemoryRequirementsInfo2* %1, i32* %2, %struct.VkSparseImageMemoryRequirements2* %3) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetImageSparseMemoryRequirements2(%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceFeatures2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceFeatures2(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceFeatures2* %1) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceFeatures2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceProperties2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceProperties2(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceProperties2* %1) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceFormatProperties2KHR(%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceFormatProperties2(%struct.VkPhysicalDevice_T* %0, i32 %1, %struct.VkFormatProperties2* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceFormatProperties2(%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceImageFormatProperties2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*) local_unnamed_addr #0 {
  %4 = tail call i32 @vkGetPhysicalDeviceImageFormatProperties2(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceImageFormatInfo2* %1, %struct.VkImageFormatProperties2* %2) #2
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @vkGetPhysicalDeviceImageFormatProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceQueueFamilyProperties2KHR(%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceQueueFamilyProperties2(%struct.VkPhysicalDevice_T* %0, i32* %1, %struct.VkQueueFamilyProperties2* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceQueueFamilyProperties2(%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceMemoryProperties2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceMemoryProperties2(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceMemoryProperties2* %1) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceMemoryProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceSparseImageFormatProperties2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*) local_unnamed_addr #0 {
  tail call void @vkGetPhysicalDeviceSparseImageFormatProperties2(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i32* %2, %struct.VkSparseImageFormatProperties2* %3) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetPhysicalDeviceSparseImageFormatProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkTrimCommandPoolKHR(%struct.VkDevice_T*, i64, i32) local_unnamed_addr #0 {
  tail call void @vkTrimCommandPool(%struct.VkDevice_T* %0, i64 %1, i32 %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkTrimCommandPool(%struct.VkDevice_T*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDescriptorSetLayoutSupportKHR(%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*) local_unnamed_addr #0 {
  tail call void @vkGetDescriptorSetLayoutSupport(%struct.VkDevice_T* %0, %struct.VkDescriptorSetLayoutCreateInfo* %1, %struct.VkDescriptorSetLayoutSupport* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkGetDescriptorSetLayoutSupport(%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateSamplerYcbcrConversionKHR(%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 {
  %5 = tail call i32 @vkCreateSamplerYcbcrConversion(%struct.VkDevice_T* %0, %struct.VkSamplerYcbcrConversionCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.19* %3) #2
  ret i32 %5
}

; Function Attrs: optsize
declare i32 @vkCreateSamplerYcbcrConversion(%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.19*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroySamplerYcbcrConversionKHR(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  tail call void @vkDestroySamplerYcbcrConversion(%struct.VkDevice_T* %0, i64 %1, %struct.VkAllocationCallbacks* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkDestroySamplerYcbcrConversion(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateRenderPass2KHR(%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 {
  %5 = tail call i32 @vkCreateRenderPass2(%struct.VkDevice_T* %0, %struct.VkRenderPassCreateInfo2* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.12* %3) #2
  ret i32 %5
}

; Function Attrs: optsize
declare i32 @vkCreateRenderPass2(%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.12*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBeginRenderPass2KHR(%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*) local_unnamed_addr #0 {
  tail call void @vkCmdBeginRenderPass2(%struct.VkCommandBuffer_T* %0, %struct.VkRenderPassBeginInfo* %1, %struct.VkSubpassBeginInfo* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdBeginRenderPass2(%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdEndRenderPass2KHR(%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*) local_unnamed_addr #0 {
  tail call void @vkCmdEndRenderPass2(%struct.VkCommandBuffer_T* %0, %struct.VkSubpassEndInfo* %1) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdEndRenderPass2(%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdNextSubpass2KHR(%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*) local_unnamed_addr #0 {
  tail call void @vkCmdNextSubpass2(%struct.VkCommandBuffer_T* %0, %struct.VkSubpassBeginInfo* %1, %struct.VkSubpassEndInfo* %2) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdNextSubpass2(%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkResetQueryPoolEXT(%struct.VkDevice_T*, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @vkResetQueryPool(%struct.VkDevice_T* %0, i64 %1, i32 %2, i32 %3) #2
  ret void
}

; Function Attrs: optsize
declare void @vkResetQueryPool(%struct.VkDevice_T*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetSemaphoreCounterValueKHR(%struct.VkDevice_T*, i64, i64*) local_unnamed_addr #0 {
  %4 = tail call i32 @vkGetSemaphoreCounterValue(%struct.VkDevice_T* %0, i64 %1, i64* %2) #2
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @vkGetSemaphoreCounterValue(%struct.VkDevice_T*, i64, i64*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkSignalSemaphoreKHR(%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*) local_unnamed_addr #0 {
  %3 = tail call i32 @vkSignalSemaphore(%struct.VkDevice_T* %0, %struct.VkSemaphoreSignalInfo* %1) #2
  ret i32 %3
}

; Function Attrs: optsize
declare i32 @vkSignalSemaphore(%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkWaitSemaphoresKHR(%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64) local_unnamed_addr #0 {
  %4 = tail call i32 @vkWaitSemaphores(%struct.VkDevice_T* %0, %struct.VkSemaphoreWaitInfo* %1, i64 %2) #2
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @vkWaitSemaphores(%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndirectCountKHR(%struct.VkCommandBuffer_T*, i64, i64, i64, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @vkCmdDrawIndirectCount(%struct.VkCommandBuffer_T* %0, i64 %1, i64 %2, i64 %3, i64 %4, i32 %5, i32 %6) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdDrawIndirectCount(%struct.VkCommandBuffer_T*, i64, i64, i64, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndexedIndirectCountKHR(%struct.VkCommandBuffer_T*, i64, i64, i64, i64, i32, i32) local_unnamed_addr #0 {
  tail call void @vkCmdDrawIndexedIndirectCount(%struct.VkCommandBuffer_T* %0, i64 %1, i64 %2, i64 %3, i64 %4, i32 %5, i32 %6) #2
  ret void
}

; Function Attrs: optsize
declare void @vkCmdDrawIndexedIndirectCount(%struct.VkCommandBuffer_T*, i64, i64, i64, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @vkGetBufferDeviceAddressKHR(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) local_unnamed_addr #0 {
  %3 = tail call i64 @vkGetBufferDeviceAddress(%struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #2
  ret i64 %3
}

; Function Attrs: optsize
declare i64 @vkGetBufferDeviceAddress(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @vkGetBufferOpaqueCaptureAddressKHR(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) local_unnamed_addr #0 {
  %3 = tail call i64 @vkGetBufferOpaqueCaptureAddress(%struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #2
  ret i64 %3
}

; Function Attrs: optsize
declare i64 @vkGetBufferOpaqueCaptureAddress(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @vkGetDeviceMemoryOpaqueCaptureAddressKHR(%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*) local_unnamed_addr #0 {
  %3 = tail call i64 @vkGetDeviceMemoryOpaqueCaptureAddress(%struct.VkDevice_T* %0, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo* %1) #2
  ret i64 %3
}

; Function Attrs: optsize
declare i64 @vkGetDeviceMemoryOpaqueCaptureAddress(%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*) local_unnamed_addr #1

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
