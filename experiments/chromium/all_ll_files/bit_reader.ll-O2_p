; ModuleID = '../../media/base/bit_reader.cc'
source_filename = "../../media/base/bit_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::BitReader" = type { %"class.media::BitReaderCore::ByteStreamProvider", i32, i8*, i32, %"class.media::BitReaderCore" }
%"class.media::BitReaderCore::ByteStreamProvider" = type { i32 (...)** }
%"class.media::BitReaderCore" = type { %"class.media::BitReaderCore::ByteStreamProvider"*, i32, i32, i64, i32, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN5media9BitReaderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::BitReader"*)* @_ZN5media9BitReaderD2Ev to i8*), i8* bitcast (void (%"class.media::BitReader"*)* @_ZN5media9BitReaderD0Ev to i8*), i8* bitcast (i32 (%"class.media::BitReader"*, i32, i8**)* @_ZN5media9BitReader8GetBytesEiPPKh to i8*)] }, align 8

@_ZN5media9BitReaderC1EPKhi = hidden unnamed_addr alias void (%"class.media::BitReader"*, i8*, i32), void (%"class.media::BitReader"*, i8*, i32)* @_ZN5media9BitReaderC2EPKhi
@_ZN5media9BitReaderD1Ev = hidden unnamed_addr alias void (%"class.media::BitReader"*), void (%"class.media::BitReader"*)* @_ZN5media9BitReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media9BitReaderC2EPKhi(%"class.media::BitReader"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 0
  tail call void @_ZN5media13BitReaderCore18ByteStreamProviderC2Ev(%"class.media::BitReaderCore::ByteStreamProvider"* %4) #6
  %5 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media9BitReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 2
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 3
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  tail call void @_ZN5media13BitReaderCoreC1EPNS0_18ByteStreamProviderE(%"class.media::BitReaderCore"* %9, %"class.media::BitReaderCore::ByteStreamProvider"* %4) #6
  ret void
}

declare void @_ZN5media13BitReaderCore18ByteStreamProviderC2Ev(%"class.media::BitReaderCore::ByteStreamProvider"*) unnamed_addr #1

declare void @_ZN5media13BitReaderCoreC1EPNS0_18ByteStreamProviderE(%"class.media::BitReaderCore"*, %"class.media::BitReaderCore::ByteStreamProvider"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media9BitReaderD2Ev(%"class.media::BitReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media9BitReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  tail call void @_ZN5media13BitReaderCoreD1Ev(%"class.media::BitReaderCore"* %3) #6
  %4 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 0
  tail call void @_ZN5media13BitReaderCore18ByteStreamProviderD2Ev(%"class.media::BitReaderCore::ByteStreamProvider"* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media13BitReaderCoreD1Ev(%"class.media::BitReaderCore"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media13BitReaderCore18ByteStreamProviderD2Ev(%"class.media::BitReaderCore::ByteStreamProvider"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media9BitReaderD0Ev(%"class.media::BitReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media9BitReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  tail call void @_ZN5media13BitReaderCoreD1Ev(%"class.media::BitReaderCore"* %3) #6
  %4 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 0
  tail call void @_ZN5media13BitReaderCore18ByteStreamProviderD2Ev(%"class.media::BitReaderCore::ByteStreamProvider"* %4) #6
  %5 = bitcast %"class.media::BitReader"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media9BitReader10ReadStringEiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.media::BitReader"*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = sdiv i32 %1, 8
  %6 = sext i32 %5 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %6, i8 signext 0) #6
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %16

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i8* [ %13, %11 ], [ %15, %14 ]
  %18 = add i32 %1, 7
  %19 = icmp ult i32 %18, 15
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  %22 = bitcast i64* %4 to i8*
  br label %23

23:                                               ; preds = %20, %28
  %24 = phi i8* [ %17, %20 ], [ %29, %28 ]
  %25 = phi i32 [ %5, %20 ], [ %30, %28 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  store i64 0, i64* %4, align 8
  %26 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %21, i32 8, i64* nonnull %4) #6
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, i8* %24, i64 1
  %30 = add nsw i32 %25, -1
  %31 = load i64, i64* %4, align 8
  %32 = trunc i64 %31 to i8
  store i8 %32, i8* %24, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %34, label %23

34:                                               ; preds = %28, %16, %27
  %35 = phi i1 [ false, %27 ], [ true, %16 ], [ true, %28 ]
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5media9BitReader8GetBytesEiPPKh(%"class.media::BitReader"* nocapture, i32, i8** nocapture) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, %1
  %7 = select i1 %6, i32 %5, i32 %1
  %8 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8** %2 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = sext i32 %7 to i64
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  store i8* %14, i8** %8, align 8
  %15 = load i32, i32* %4, align 8
  %16 = sub nsw i32 %15, %7
  store i32 %16, i32* %4, align 8
  ret i32 %7
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #1

declare zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"*, i32, i64*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
