; ModuleID = '../../third_party/blink/renderer/core/editing/state_machines/backspace_state_machine.cc'
source_filename = "../../third_party/blink/renderer/core/editing/state_machines/backspace_state_machine.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::BackspaceStateMachine" = type { i16, i32, i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_21BackspaceStateMachine14BackspaceStateEE6kTexts = internal unnamed_addr constant [13 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [7 x i8] c"kStart\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"kBeforeLF\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"kBeforeKeycap\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"kBeforeVSAndKeycap\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"kBeforeEmojiModifier\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"kBeforeVSAndEmojiModifier\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"kBeforeVS\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"kBeforeZWJEmoji\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"kBeforeZWJ\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"kBeforeVSAndZWJ\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"kOddNumberedRIS\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"kEvenNumberedRIS\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"kFinished\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5blink21BackspaceStateMachineC1Ev = hidden unnamed_addr alias void (%"class.blink::BackspaceStateMachine"*), void (%"class.blink::BackspaceStateMachine"*)* @_ZN5blink21BackspaceStateMachineC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_21BackspaceStateMachine14BackspaceStateE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [13 x i8*], [13 x i8*]* @_ZZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_21BackspaceStateMachine14BackspaceStateEE6kTexts, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i64 @strlen(i8* %5) #10
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %5, i64 %6) #10
  ret %"class.std::__1::basic_ostream"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21BackspaceStateMachineC2Ev(%"class.blink::BackspaceStateMachine"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 0
  store i16 0, i16* %2, align 4
  %3 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21BackspaceStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::BackspaceStateMachine"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i16 %1 to i32
  %4 = and i32 %3, 64512
  %5 = icmp eq i32 %4, 55296
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 0
  %8 = load i16, i16* %7, align 4
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4
  br label %189

14:                                               ; preds = %6
  %15 = zext i16 %8 to i32
  %16 = shl nuw nsw i32 %3, 10
  %17 = add nsw i32 %16, -56613888
  %18 = add nsw i32 %17, %15
  store i16 0, i16* %7, align 4
  br label %27

19:                                               ; preds = %2
  %20 = icmp eq i32 %4, 56320
  %21 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 0
  %22 = load i16, i16* %21, align 4
  %23 = icmp ne i16 %22, 0
  br i1 %20, label %24, label %26

24:                                               ; preds = %19
  br i1 %23, label %189, label %25

25:                                               ; preds = %24
  store i16 %1, i16* %21, align 4
  br label %189

26:                                               ; preds = %19
  br i1 %23, label %189, label %27

27:                                               ; preds = %26, %14
  %28 = phi i32 [ %18, %14 ], [ %3, %26 ]
  %29 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  switch i32 %30, label %189 [
    i32 0, label %31
    i32 1, label %55
    i32 2, label %62
    i32 3, label %78
    i32 4, label %90
    i32 5, label %106
    i32 6, label %118
    i32 7, label %139
    i32 8, label %143
    i32 9, label %163
    i32 10, label %175
    i32 11, label %182
  ]

31:                                               ; preds = %27
  %32 = icmp ult i32 %28, 65536
  %33 = select i1 %32, i32 1, i32 2
  %34 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  store i32 %33, i32* %34, align 4
  %35 = icmp eq i32 %28, 10
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  store i32 1, i32* %29, align 4
  br label %189

37:                                               ; preds = %31
  %38 = tail call signext i8 @u_hasBinaryProperty_69(i32 %28, i32 36) #10
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  store i32 6, i32* %29, align 4
  br label %189

41:                                               ; preds = %37
  %42 = tail call zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32 %28) #10
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  store i32 10, i32* %29, align 4
  br label %189

44:                                               ; preds = %41
  %45 = add nsw i32 %28, -127995
  %46 = icmp ult i32 %45, 5
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store i32 4, i32* %29, align 4
  br label %189

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink9Character7IsEmojiEi(i32 %28) #10
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  store i32 7, i32* %29, align 4
  br label %189

51:                                               ; preds = %48
  %52 = icmp eq i32 %28, 8419
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  store i32 2, i32* %29, align 4
  br label %189

54:                                               ; preds = %51
  store i32 12, i32* %29, align 4
  br label %189

55:                                               ; preds = %27
  %56 = icmp eq i32 %28, 13
  br i1 %56, label %57, label %61

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %57, %55
  store i32 12, i32* %29, align 4
  br label %189

62:                                               ; preds = %27
  %63 = tail call signext i8 @u_hasBinaryProperty_69(i32 %28, i32 36) #10
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = icmp ult i32 %28, 65536
  %67 = select i1 %66, i32 1, i32 2
  %68 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  store i32 %67, i32* %68, align 4
  store i32 3, i32* %29, align 4
  br label %189

69:                                               ; preds = %62
  %70 = add nsw i32 %28, -48
  %71 = icmp ult i32 %70, 10
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  switch i32 %28, label %77 [
    i32 42, label %73
    i32 35, label %73
  ]

73:                                               ; preds = %72, %72, %69
  %74 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 4
  br label %77

77:                                               ; preds = %72, %73
  store i32 12, i32* %29, align 4
  br label %189

78:                                               ; preds = %27
  %79 = add nsw i32 %28, -48
  %80 = icmp ult i32 %79, 10
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  switch i32 %28, label %89 [
    i32 42, label %82
    i32 35, label %82
  ]

82:                                               ; preds = %81, %81, %78
  %83 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, 1
  %86 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %85, %87
  store i32 %88, i32* %86, align 4
  br label %89

89:                                               ; preds = %81, %82
  store i32 12, i32* %29, align 4
  br label %189

90:                                               ; preds = %27
  %91 = tail call signext i8 @u_hasBinaryProperty_69(i32 %28, i32 36) #10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = icmp ult i32 %28, 65536
  %95 = select i1 %94, i32 1, i32 2
  %96 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  store i32 %95, i32* %96, align 4
  store i32 5, i32* %29, align 4
  br label %189

97:                                               ; preds = %90
  %98 = tail call zeroext i1 @_ZN5blink9Character19IsEmojiModifierBaseEi(i32 %28) #10
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  %100 = icmp ult i32 %28, 65536
  %101 = select i1 %100, i32 1, i32 2
  %102 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, %101
  store i32 %104, i32* %102, align 4
  br label %105

105:                                              ; preds = %99, %97
  store i32 12, i32* %29, align 4
  br label %189

106:                                              ; preds = %27
  %107 = tail call zeroext i1 @_ZN5blink9Character19IsEmojiModifierBaseEi(i32 %28) #10
  br i1 %107, label %108, label %117

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp ult i32 %28, 65536
  %112 = select i1 %111, i32 1, i32 2
  %113 = add nsw i32 %110, %112
  %114 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = add nsw i32 %113, %115
  store i32 %116, i32* %114, align 4
  br label %117

117:                                              ; preds = %108, %106
  store i32 12, i32* %29, align 4
  br label %189

118:                                              ; preds = %27
  %119 = tail call zeroext i1 @_ZN5blink9Character7IsEmojiEi(i32 %28) #10
  br i1 %119, label %120, label %126

120:                                              ; preds = %118
  %121 = icmp ult i32 %28, 65536
  %122 = select i1 %121, i32 1, i32 2
  %123 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = add nsw i32 %124, %122
  store i32 %125, i32* %123, align 4
  store i32 7, i32* %29, align 4
  br label %189

126:                                              ; preds = %118
  %127 = tail call signext i8 @u_hasBinaryProperty_69(i32 %28, i32 36) #10
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %138

129:                                              ; preds = %126
  %130 = tail call zeroext i8 @u_getCombiningClass_69(i32 %28) #10
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %138

132:                                              ; preds = %129
  %133 = icmp ult i32 %28, 65536
  %134 = select i1 %133, i32 1, i32 2
  %135 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = add nsw i32 %136, %134
  store i32 %137, i32* %135, align 4
  br label %138

138:                                              ; preds = %126, %132, %129
  store i32 12, i32* %29, align 4
  br label %189

139:                                              ; preds = %27
  %140 = icmp eq i32 %28, 8205
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  store i32 8, i32* %29, align 4
  br label %189

142:                                              ; preds = %139
  store i32 12, i32* %29, align 4
  br label %189

143:                                              ; preds = %27
  %144 = tail call zeroext i1 @_ZN5blink9Character7IsEmojiEi(i32 %28) #10
  br i1 %144, label %145, label %155

145:                                              ; preds = %143
  %146 = icmp ult i32 %28, 65536
  %147 = select i1 %146, i32 2, i32 3
  %148 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %149, %147
  store i32 %150, i32* %148, align 4
  %151 = add nsw i32 %28, -127995
  %152 = icmp ult i32 %151, 5
  br i1 %152, label %153, label %154

153:                                              ; preds = %145
  store i32 4, i32* %29, align 4
  br label %189

154:                                              ; preds = %145
  store i32 7, i32* %29, align 4
  br label %189

155:                                              ; preds = %143
  %156 = tail call signext i8 @u_hasBinaryProperty_69(i32 %28, i32 36) #10
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = icmp ult i32 %28, 65536
  %160 = select i1 %159, i32 1, i32 2
  %161 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  store i32 %160, i32* %161, align 4
  store i32 9, i32* %29, align 4
  br label %189

162:                                              ; preds = %155
  store i32 12, i32* %29, align 4
  br label %189

163:                                              ; preds = %27
  %164 = tail call zeroext i1 @_ZN5blink9Character7IsEmojiEi(i32 %28) #10
  br i1 %164, label %166, label %165

165:                                              ; preds = %163
  store i32 12, i32* %29, align 4
  br label %189

166:                                              ; preds = %163
  %167 = icmp ult i32 %28, 65536
  %168 = select i1 %167, i32 2, i32 3
  %169 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = add nsw i32 %170, %168
  %172 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = add nsw i32 %171, %173
  store i32 %174, i32* %172, align 4
  store i32 0, i32* %169, align 4
  store i32 7, i32* %29, align 4
  br label %189

175:                                              ; preds = %27
  %176 = tail call zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32 %28) #10
  br i1 %176, label %178, label %177

177:                                              ; preds = %175
  store i32 12, i32* %29, align 4
  br label %189

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = add nsw i32 %180, 2
  store i32 %181, i32* %179, align 4
  store i32 11, i32* %29, align 4
  br label %189

182:                                              ; preds = %27
  %183 = tail call zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32 %28) #10
  br i1 %183, label %185, label %184

184:                                              ; preds = %182
  store i32 12, i32* %29, align 4
  br label %189

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, -2
  store i32 %188, i32* %186, align 4
  store i32 10, i32* %29, align 4
  br label %189

189:                                              ; preds = %27, %153, %154, %141, %142, %26, %24, %185, %184, %178, %177, %166, %165, %162, %158, %138, %120, %117, %105, %93, %89, %77, %65, %61, %54, %53, %50, %47, %43, %40, %36, %25, %10
  %190 = phi i32 [ 3, %10 ], [ 1, %185 ], [ 3, %184 ], [ 1, %178 ], [ 3, %177 ], [ 1, %166 ], [ 3, %165 ], [ 1, %158 ], [ 3, %162 ], [ 1, %120 ], [ 3, %138 ], [ 3, %117 ], [ 1, %93 ], [ 3, %105 ], [ 3, %89 ], [ 1, %65 ], [ 3, %77 ], [ 3, %61 ], [ 1, %36 ], [ 1, %40 ], [ 1, %43 ], [ 1, %47 ], [ 1, %50 ], [ 1, %53 ], [ 3, %54 ], [ 1, %25 ], [ 3, %24 ], [ 3, %26 ], [ 1, %141 ], [ 3, %142 ], [ 1, %154 ], [ 1, %153 ], [ 0, %27 ]
  ret i32 %190
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN5blink21BackspaceStateMachine15MoveToNextStateENS0_14BackspaceStateE(%"class.blink::BackspaceStateMachine"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  ret i32 1
}

declare signext i8 @u_hasBinaryProperty_69(i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink9Character7IsEmojiEi(i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN5blink21BackspaceStateMachine6FinishEv(%"class.blink::BackspaceStateMachine"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 3
  store i32 12, i32* %2, align 4
  ret i32 3
}

declare zeroext i1 @_ZN5blink9Character19IsEmojiModifierBaseEi(i32) local_unnamed_addr #3

declare zeroext i8 @u_getCombiningClass_69(i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink21BackspaceStateMachine22TellEndOfPrecedingTextEv(%"class.blink::BackspaceStateMachine"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  store i16 0, i16* %2, align 4
  br label %9

9:                                                ; preds = %1, %5
  ret i32 3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink21BackspaceStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::BackspaceStateMachine"* nocapture readnone, i16 zeroext) local_unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink21BackspaceStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::BackspaceStateMachine"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  store i16 0, i16* %2, align 4
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 12
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  store i32 0, i32* %14, align 4
  store i32 12, i32* %10, align 4
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 0, %17
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21BackspaceStateMachine5ResetEv(%"class.blink::BackspaceStateMachine"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 0
  store i16 0, i16* %3, align 4
  %4 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::BackspaceStateMachine", %"class.blink::BackspaceStateMachine"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
