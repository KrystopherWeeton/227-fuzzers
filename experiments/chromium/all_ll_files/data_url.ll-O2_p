; ModuleID = '../../net/base/data_url.cc'
source_filename = "../../net/base/data_url.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.5" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::BasicStringPiece"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.scoped_refptr = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.12", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.14" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }

@.str = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"base64\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"charset=\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"text/\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"xml\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c";charset=\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"HTTP/1.1 200 OK\0D\0AContent-Type:\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net7DataURL5ParseERK4GURLPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_SB_(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %563, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %563

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* nonnull sret %5, %class.GURL* %0) #9
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i8*, i8** %25, align 8
  %33 = ptrtoint i8* %32 to i64
  %34 = load i64, i64* %26, align 8
  %35 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %36 = zext i8 %30 to i64
  %37 = select i1 %31, i64 %33, i64 %35
  %38 = select i1 %31, i8* %32, i8* %24
  %39 = select i1 %31, i64 %34, i64 %36
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %23, %47
  %44 = phi i8* [ %48, %47 ], [ %38, %23 ]
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 44
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = icmp eq i8* %48, %40
  br i1 %49, label %556, label %43

50:                                               ; preds = %43, %23
  %51 = phi i8* [ %38, %23 ], [ %44, %43 ]
  %52 = icmp eq i8* %51, %40
  br i1 %52, label %556, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %57 = ptrtoint i8* %51 to i64
  %58 = sub i64 %57, %37
  %59 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %6, i8* %38, i64 %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #9
  %60 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #9
  %63 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #9
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #9
  %66 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %55, align 8
  %67 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %56, align 8
  %68 = icmp eq %"class.base::BasicStringPiece"* %66, %67
  br i1 %68, label %158, label %69

69:                                               ; preds = %53
  %70 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #9
  %71 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* %72, i64 %74) #9
  %75 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %69
  %80 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %69, %79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* nonnull align 8 %70, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 1
  %83 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %56, align 8
  %84 = icmp eq %"class.base::BasicStringPiece"* %82, %83
  br i1 %84, label %158, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  br label %94

94:                                               ; preds = %85, %153
  %95 = phi i8 [ 0, %85 ], [ %154, %153 ]
  %96 = phi %"class.base::BasicStringPiece"* [ %82, %85 ], [ %155, %153 ]
  %97 = and i8 %95, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %96, i64 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %96, i64 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %101, i64 %103, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6) #9
  br i1 %104, label %153, label %105

105:                                              ; preds = %94, %99
  %106 = load i8, i8* %87, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i64, i64* %65, align 8
  %109 = zext i8 %106 to i64
  %110 = select i1 %107, i64 %108, i64 %109
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %153

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %96, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %96, i64 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %114, i64 %116, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8, i32 1) #9
  br i1 %117, label %118, label %153

118:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #9
  %119 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %96, i64 8, i64 -1)
  %120 = extractvalue { i8*, i64 } %119, 0
  %121 = extractvalue { i8*, i64 } %119, 1
  %122 = icmp ugt i64 %121, -17
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #11
  unreachable

125:                                              ; preds = %118
  %126 = icmp ult i64 %121, 23
  br i1 %126, label %132, label %127

127:                                              ; preds = %125
  %128 = add nuw i64 %121, 16
  %129 = and i64 %128, -16
  %130 = call i8* @_Znwm(i64 %129) #10
  store i8* %130, i8** %89, align 8, !alias.scope !3
  %131 = or i64 %129, -9223372036854775808
  store i64 %131, i64* %90, align 8, !alias.scope !3
  store i64 %121, i64* %91, align 8, !alias.scope !3
  br label %135

132:                                              ; preds = %125
  %133 = trunc i64 %121 to i8
  store i8 %133, i8* %93, align 1, !alias.scope !3
  %134 = icmp eq i64 %121, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %132, %127
  %136 = phi i8* [ %130, %127 ], [ %88, %132 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %136, i8* align 1 %120, i64 %121, i1 false) #9
  br label %137

137:                                              ; preds = %132, %135
  %138 = phi i8* [ %88, %132 ], [ %136, %135 ]
  %139 = getelementptr inbounds i8, i8* %138, i64 %121
  store i8 0, i8* %139, align 1
  %140 = load i8, i8* %87, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  %143 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %142, %137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %88, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  %145 = load i8, i8* %87, align 1
  %146 = icmp slt i8 %145, 0
  %147 = load i8*, i8** %64, align 8
  %148 = select i1 %146, i8* %147, i8* %63
  %149 = load i64, i64* %65, align 8
  %150 = zext i8 %145 to i64
  %151 = select i1 %146, i64 %149, i64 %150
  %152 = call zeroext i1 @_ZN3net8HttpUtil7IsTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %148, i64 %151) #9
  br i1 %152, label %153, label %532

153:                                              ; preds = %99, %144, %112, %105
  %154 = phi i8 [ %95, %144 ], [ %95, %112 ], [ %95, %105 ], [ 1, %99 ]
  %155 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %96, i64 1
  %156 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %56, align 8
  %157 = icmp eq %"class.base::BasicStringPiece"* %155, %156
  br i1 %157, label %158, label %94

158:                                              ; preds = %153, %53, %81
  %159 = phi i8 [ 0, %81 ], [ 0, %53 ], [ %154, %153 ]
  %160 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  %164 = load i64, i64* %62, align 8
  %165 = zext i8 %162 to i64
  %166 = select i1 %163, i64 %164, i64 %165
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %191

168:                                              ; preds = %158
  br i1 %163, label %169, label %171

169:                                              ; preds = %168
  store i64 10, i64* %62, align 8
  %170 = load i8*, i8** %61, align 8
  br label %172

171:                                              ; preds = %168
  store i8 10, i8* %161, align 1
  br label %172

172:                                              ; preds = %169, %171
  %173 = phi i8* [ %170, %169 ], [ %60, %171 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10, i1 false) #9
  %174 = getelementptr inbounds i8, i8* %173, i64 10
  store i8 0, i8* %174, align 1
  %175 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  %179 = load i64, i64* %65, align 8
  %180 = zext i8 %177 to i64
  %181 = select i1 %178, i64 %179, i64 %180
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %213

183:                                              ; preds = %172
  br i1 %178, label %184, label %186

184:                                              ; preds = %183
  store i64 8, i64* %65, align 8
  %185 = load i8*, i8** %64, align 8
  br label %187

186:                                              ; preds = %183
  store i8 8, i8* %176, align 1
  br label %187

187:                                              ; preds = %184, %186
  %188 = phi i8* [ %185, %184 ], [ %63, %186 ]
  %189 = bitcast i8* %188 to i64*
  store i64 5280826062923453269, i64* %189, align 1
  %190 = getelementptr inbounds i8, i8* %188, i64 8
  store i8 0, i8* %190, align 1
  br label %213

191:                                              ; preds = %158
  %192 = call zeroext i1 @_ZN3net29ParseMimeTypeWithoutParameterERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_S9_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null) #9
  br i1 %192, label %213, label %193

193:                                              ; preds = %191
  %194 = load i8, i8* %161, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  store i64 10, i64* %62, align 8
  %197 = load i8*, i8** %61, align 8
  br label %199

198:                                              ; preds = %193
  store i8 10, i8* %161, align 1
  br label %199

199:                                              ; preds = %196, %198
  %200 = phi i8* [ %197, %196 ], [ %60, %198 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10, i1 false) #9
  %201 = getelementptr inbounds i8, i8* %200, i64 10
  store i8 0, i8* %201, align 1
  %202 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %199
  store i64 8, i64* %65, align 8
  %207 = load i8*, i8** %64, align 8
  br label %209

208:                                              ; preds = %199
  store i8 8, i8* %203, align 1
  br label %209

209:                                              ; preds = %206, %208
  %210 = phi i8* [ %207, %206 ], [ %63, %208 ]
  %211 = bitcast i8* %210 to i64*
  store i64 5280826062923453269, i64* %211, align 1
  %212 = getelementptr inbounds i8, i8* %210, i64 8
  store i8 0, i8* %212, align 1
  br label %213

213:                                              ; preds = %209, %187, %191, %172
  %214 = icmp eq %"class.std::__1::basic_string"* %3, null
  br i1 %214, label %511, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds i8, i8* %51, i64 1
  %217 = ptrtoint i8* %216 to i64
  %218 = sub i64 %41, %217
  %219 = and i8 %159, 1
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %341, label %221

221:                                              ; preds = %215
  %222 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #9
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 -86, i64 24, i1 false)
  call void @_ZN4base26UnescapeBinaryURLComponentENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string"* nonnull sret %11, i8* %216, i64 %218, i32 1) #9
  %226 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  %230 = load i8*, i8** %223, align 8
  %231 = load i64, i64* %224, align 8
  %232 = zext i8 %228 to i64
  %233 = select i1 %229, i8* %230, i8* %222
  %234 = select i1 %229, i64 %231, i64 %232
  %235 = getelementptr inbounds i8, i8* %233, i64 %234
  %236 = icmp eq i64 %234, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %221, %240
  %238 = phi i8* [ %241, %240 ], [ %233, %221 ]
  %239 = load i8, i8* %238, align 1
  switch i8 %239, label %240 [
    i8 32, label %245
    i8 13, label %245
    i8 10, label %245
    i8 9, label %245
    i8 12, label %245
  ]

240:                                              ; preds = %237
  %241 = getelementptr inbounds i8, i8* %238, i64 1
  %242 = icmp eq i8* %241, %235
  br i1 %242, label %243, label %237

243:                                              ; preds = %240
  %244 = ptrtoint i8* %235 to i64
  br label %269

245:                                              ; preds = %237, %237, %237, %237, %237, %221
  %246 = phi i8* [ %233, %221 ], [ %238, %237 ], [ %238, %237 ], [ %238, %237 ], [ %238, %237 ], [ %238, %237 ]
  %247 = ptrtoint i8* %246 to i64
  %248 = icmp eq i8* %246, %235
  br i1 %248, label %269, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds i8, i8* %246, i64 1
  %251 = icmp eq i8* %250, %235
  br i1 %251, label %269, label %252

252:                                              ; preds = %249, %260
  %253 = phi i8* [ %262, %260 ], [ %250, %249 ]
  %254 = phi i64 [ %261, %260 ], [ %247, %249 ]
  %255 = load i8, i8* %253, align 1
  switch i8 %255, label %256 [
    i8 32, label %260
    i8 13, label %260
    i8 10, label %260
    i8 9, label %260
    i8 12, label %260
  ]

256:                                              ; preds = %252
  %257 = inttoptr i64 %254 to i8*
  store i8 %255, i8* %257, align 1
  %258 = getelementptr inbounds i8, i8* %257, i64 1
  %259 = ptrtoint i8* %258 to i64
  br label %260

260:                                              ; preds = %252, %252, %252, %252, %252, %256
  %261 = phi i64 [ %259, %256 ], [ %254, %252 ], [ %254, %252 ], [ %254, %252 ], [ %254, %252 ], [ %254, %252 ]
  %262 = getelementptr inbounds i8, i8* %253, i64 1
  %263 = icmp eq i8* %262, %235
  br i1 %263, label %264, label %252

264:                                              ; preds = %260
  %265 = load i8, i8* %227, align 1
  %266 = load i8*, i8** %223, align 8
  %267 = load i64, i64* %224, align 8
  %268 = zext i8 %265 to i64
  br label %269

269:                                              ; preds = %264, %249, %245, %243
  %270 = phi i64 [ %268, %264 ], [ %232, %249 ], [ %232, %245 ], [ %232, %243 ]
  %271 = phi i64 [ %267, %264 ], [ %231, %249 ], [ %231, %245 ], [ %231, %243 ]
  %272 = phi i8* [ %266, %264 ], [ %230, %249 ], [ %230, %245 ], [ %230, %243 ]
  %273 = phi i8 [ %265, %264 ], [ %228, %249 ], [ %228, %245 ], [ %228, %243 ]
  %274 = phi i64 [ %261, %264 ], [ %247, %249 ], [ %247, %245 ], [ %244, %243 ]
  %275 = icmp slt i8 %273, 0
  %276 = getelementptr inbounds i8, i8* %272, i64 %271
  %277 = ptrtoint i8* %272 to i64
  %278 = getelementptr inbounds i8, i8* %222, i64 %270
  %279 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %280 = select i1 %275, i8* %276, i8* %278
  %281 = select i1 %275, i64 %277, i64 %279
  %282 = select i1 %275, i64 %271, i64 %270
  %283 = ptrtoint i8* %280 to i64
  %284 = sub i64 %274, %281
  %285 = sub i64 %283, %274
  %286 = icmp ult i64 %282, %284
  br i1 %286, label %287, label %289

287:                                              ; preds = %269
  %288 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %288) #11
  unreachable

289:                                              ; preds = %269
  %290 = icmp eq i64 %285, -1
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  br i1 %275, label %292, label %294

292:                                              ; preds = %291
  %293 = getelementptr inbounds i8, i8* %272, i64 %284
  store i8 0, i8* %293, align 1
  store i64 %284, i64* %224, align 8
  br label %298

294:                                              ; preds = %291
  %295 = getelementptr inbounds i8, i8* %222, i64 %284
  store i8 0, i8* %295, align 1
  %296 = trunc i64 %284 to i8
  store i8 %296, i8* %227, align 1
  br label %300

297:                                              ; preds = %289
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %11, i64 %284, i64 %285) #9
  br label %298

298:                                              ; preds = %297, %292
  %299 = load i8, i8* %227, align 1
  br label %300

300:                                              ; preds = %298, %294
  %301 = phi i8 [ %299, %298 ], [ %296, %294 ]
  %302 = icmp slt i8 %301, 0
  %303 = load i64, i64* %224, align 8
  %304 = zext i8 %301 to i64
  %305 = select i1 %302, i64 %303, i64 %304
  %306 = and i64 %305, 3
  %307 = xor i64 %306, 2
  %308 = icmp ult i64 %307, 2
  br i1 %308, label %309, label %322

309:                                              ; preds = %300
  %310 = add i64 %305, -1
  %311 = load i8*, i8** %223, align 8
  %312 = select i1 %302, i8* %311, i8* %222
  %313 = getelementptr inbounds i8, i8* %312, i64 %310
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 61
  br i1 %315, label %322, label %316

316:                                              ; preds = %309
  %317 = add i64 %305, 4
  %318 = sub i64 %317, %306
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %11, i64 %318, i8 signext 61) #9
  %319 = load i8, i8* %227, align 1
  %320 = load i64, i64* %224, align 8
  %321 = zext i8 %319 to i64
  br label %322

322:                                              ; preds = %309, %300, %316
  %323 = phi i64 [ %304, %309 ], [ %304, %300 ], [ %321, %316 ]
  %324 = phi i64 [ %303, %309 ], [ %303, %300 ], [ %320, %316 ]
  %325 = phi i8 [ %301, %309 ], [ %301, %300 ], [ %319, %316 ]
  %326 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %326) #9
  %327 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %328 = icmp slt i8 %325, 0
  %329 = load i8*, i8** %223, align 8
  %330 = select i1 %328, i8* %329, i8* %222
  store i8* %330, i8** %327, align 8
  %331 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %332 = select i1 %328, i64 %324, i64 %323
  store i64 %332, i64* %331, align 8
  %333 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %12, %"class.std::__1::basic_string"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %326) #9
  %334 = load i8, i8* %227, align 1
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %322
  %337 = load i8*, i8** %223, align 8
  call void @_ZdlPv(i8* %337) #10
  br label %338

338:                                              ; preds = %322, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #9
  br i1 %333, label %511, label %339

339:                                              ; preds = %338
  %340 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %532

341:                                              ; preds = %215
  %342 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %342) #9
  %343 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %342, i8 0, i64 24, i1 false) #9
  %345 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #9
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %491, label %347

347:                                              ; preds = %341
  %348 = load i8, i8* %161, align 1
  %349 = icmp slt i8 %348, 0
  %350 = load i8*, i8** %61, align 8
  %351 = select i1 %349, i8* %350, i8* %60
  %352 = load i64, i64* %62, align 8
  %353 = zext i8 %348 to i64
  %354 = select i1 %349, i64 %352, i64 %353
  %355 = getelementptr inbounds i8, i8* %351, i64 %354
  %356 = ptrtoint i8* %355 to i64
  %357 = ptrtoint i8* %351 to i64
  %358 = icmp slt i64 %354, 3
  br i1 %358, label %381, label %359

359:                                              ; preds = %347, %370
  %360 = phi i64 [ %373, %370 ], [ %354, %347 ]
  %361 = phi i8* [ %371, %370 ], [ %351, %347 ]
  %362 = add nsw i64 %360, -2
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %381, label %364

364:                                              ; preds = %359
  %365 = call i8* @memchr(i8* %361, i32 120, i64 %362) #9
  %366 = icmp eq i8* %365, null
  br i1 %366, label %381, label %367

367:                                              ; preds = %364
  %368 = call i32 @bcmp(i8* nonnull %365, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #9
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %375, label %370

370:                                              ; preds = %367
  %371 = getelementptr inbounds i8, i8* %365, i64 1
  %372 = ptrtoint i8* %371 to i64
  %373 = sub i64 %356, %372
  %374 = icmp slt i64 %373, 3
  br i1 %374, label %381, label %359

375:                                              ; preds = %367
  %376 = ptrtoint i8* %365 to i64
  %377 = icmp eq i8* %365, %355
  %378 = sub i64 %376, %357
  %379 = icmp eq i64 %378, -1
  %380 = or i1 %377, %379
  br i1 %380, label %381, label %491

381:                                              ; preds = %370, %364, %359, %347, %375
  %382 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %382) #9
  %383 = icmp ugt i64 %218, -17
  br i1 %383, label %384, label %386

384:                                              ; preds = %381
  %385 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %385) #11
  unreachable

386:                                              ; preds = %381
  %387 = icmp ult i64 %218, 23
  br i1 %387, label %396, label %388

388:                                              ; preds = %386
  %389 = add nuw i64 %218, 16
  %390 = and i64 %389, -16
  %391 = call i8* @_Znwm(i64 %390) #10
  %392 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %391, i8** %392, align 8, !alias.scope !6
  %393 = or i64 %390, -9223372036854775808
  %394 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %393, i64* %394, align 8, !alias.scope !6
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %218, i64* %395, align 8, !alias.scope !6
  br label %401

396:                                              ; preds = %386
  %397 = trunc i64 %218 to i8
  %398 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %398, i64 0, i32 1, i32 0
  store i8 %397, i8* %399, align 1, !alias.scope !6
  %400 = icmp eq i64 %218, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %396, %388
  %402 = phi i8* [ %391, %388 ], [ %382, %396 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %402, i8* align 1 %216, i64 %218, i1 false) #9
  br label %403

403:                                              ; preds = %396, %401
  %404 = phi i8* [ %382, %396 ], [ %402, %401 ]
  %405 = getelementptr inbounds i8, i8* %404, i64 %218
  store i8 0, i8* %405, align 1
  %406 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %407 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %406, i64 0, i32 1, i32 0
  %408 = load i8, i8* %407, align 1
  %409 = icmp slt i8 %408, 0
  br i1 %409, label %410, label %412

410:                                              ; preds = %403
  %411 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %411) #10
  br label %412

412:                                              ; preds = %410, %403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %342, i8* nonnull align 8 %382, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %382) #9
  %413 = load i8, i8* %407, align 1
  %414 = icmp slt i8 %413, 0
  %415 = load i8*, i8** %343, align 8
  %416 = load i64, i64* %344, align 8
  %417 = zext i8 %413 to i64
  %418 = select i1 %414, i8* %415, i8* %342
  %419 = select i1 %414, i64 %416, i64 %417
  %420 = getelementptr inbounds i8, i8* %418, i64 %419
  %421 = icmp eq i64 %419, 0
  br i1 %421, label %430, label %422

422:                                              ; preds = %412, %425
  %423 = phi i8* [ %426, %425 ], [ %418, %412 ]
  %424 = load i8, i8* %423, align 1
  switch i8 %424, label %425 [
    i8 32, label %430
    i8 13, label %430
    i8 10, label %430
    i8 9, label %430
    i8 12, label %430
  ]

425:                                              ; preds = %422
  %426 = getelementptr inbounds i8, i8* %423, i64 1
  %427 = icmp eq i8* %426, %420
  br i1 %427, label %428, label %422

428:                                              ; preds = %425
  %429 = ptrtoint i8* %420 to i64
  br label %454

430:                                              ; preds = %422, %422, %422, %422, %422, %412
  %431 = phi i8* [ %418, %412 ], [ %423, %422 ], [ %423, %422 ], [ %423, %422 ], [ %423, %422 ], [ %423, %422 ]
  %432 = ptrtoint i8* %431 to i64
  %433 = icmp eq i8* %431, %420
  br i1 %433, label %454, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds i8, i8* %431, i64 1
  %436 = icmp eq i8* %435, %420
  br i1 %436, label %454, label %437

437:                                              ; preds = %434, %445
  %438 = phi i8* [ %447, %445 ], [ %435, %434 ]
  %439 = phi i64 [ %446, %445 ], [ %432, %434 ]
  %440 = load i8, i8* %438, align 1
  switch i8 %440, label %441 [
    i8 32, label %445
    i8 13, label %445
    i8 10, label %445
    i8 9, label %445
    i8 12, label %445
  ]

441:                                              ; preds = %437
  %442 = inttoptr i64 %439 to i8*
  store i8 %440, i8* %442, align 1
  %443 = getelementptr inbounds i8, i8* %442, i64 1
  %444 = ptrtoint i8* %443 to i64
  br label %445

445:                                              ; preds = %437, %437, %437, %437, %437, %441
  %446 = phi i64 [ %444, %441 ], [ %439, %437 ], [ %439, %437 ], [ %439, %437 ], [ %439, %437 ], [ %439, %437 ]
  %447 = getelementptr inbounds i8, i8* %438, i64 1
  %448 = icmp eq i8* %447, %420
  br i1 %448, label %449, label %437

449:                                              ; preds = %445
  %450 = load i8, i8* %407, align 1
  %451 = load i8*, i8** %343, align 8
  %452 = load i64, i64* %344, align 8
  %453 = zext i8 %450 to i64
  br label %454

454:                                              ; preds = %449, %434, %430, %428
  %455 = phi i64 [ %453, %449 ], [ %417, %434 ], [ %417, %430 ], [ %417, %428 ]
  %456 = phi i64 [ %452, %449 ], [ %416, %434 ], [ %416, %430 ], [ %416, %428 ]
  %457 = phi i8* [ %451, %449 ], [ %415, %434 ], [ %415, %430 ], [ %415, %428 ]
  %458 = phi i8 [ %450, %449 ], [ %413, %434 ], [ %413, %430 ], [ %413, %428 ]
  %459 = phi i64 [ %446, %449 ], [ %432, %434 ], [ %432, %430 ], [ %429, %428 ]
  %460 = icmp slt i8 %458, 0
  %461 = getelementptr inbounds i8, i8* %457, i64 %456
  %462 = ptrtoint i8* %457 to i64
  %463 = getelementptr inbounds i8, i8* %342, i64 %455
  %464 = ptrtoint %"class.std::__1::basic_string"* %13 to i64
  %465 = select i1 %460, i8* %461, i8* %463
  %466 = select i1 %460, i64 %462, i64 %464
  %467 = select i1 %460, i64 %456, i64 %455
  %468 = ptrtoint i8* %465 to i64
  %469 = sub i64 %459, %466
  %470 = sub i64 %468, %459
  %471 = icmp ult i64 %467, %469
  br i1 %471, label %472, label %474

472:                                              ; preds = %454
  %473 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %473) #11
  unreachable

474:                                              ; preds = %454
  %475 = icmp eq i64 %470, -1
  br i1 %475, label %476, label %482

476:                                              ; preds = %474
  br i1 %460, label %477, label %479

477:                                              ; preds = %476
  %478 = getelementptr inbounds i8, i8* %457, i64 %469
  store i8 0, i8* %478, align 1
  store i64 %469, i64* %344, align 8
  br label %483

479:                                              ; preds = %476
  %480 = getelementptr inbounds i8, i8* %342, i64 %469
  store i8 0, i8* %480, align 1
  %481 = trunc i64 %469 to i8
  store i8 %481, i8* %407, align 1
  br label %483

482:                                              ; preds = %474
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %13, i64 %469, i64 %470) #9
  br label %483

483:                                              ; preds = %477, %479, %482
  %484 = load i8, i8* %407, align 1
  %485 = icmp slt i8 %484, 0
  %486 = load i8*, i8** %343, align 8
  %487 = select i1 %485, i8* %486, i8* %342
  %488 = load i64, i64* %344, align 8
  %489 = zext i8 %484 to i64
  %490 = select i1 %485, i64 %488, i64 %489
  br label %491

491:                                              ; preds = %375, %483, %341
  %492 = phi i64 [ %218, %341 ], [ %490, %483 ], [ %218, %375 ]
  %493 = phi i8* [ %216, %341 ], [ %487, %483 ], [ %216, %375 ]
  %494 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %494) #9
  call void @_ZN4base26UnescapeBinaryURLComponentENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string"* nonnull sret %15, i8* %493, i64 %492, i32 1) #9
  %495 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %496 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %495, i64 0, i32 1, i32 0
  %497 = load i8, i8* %496, align 1
  %498 = icmp slt i8 %497, 0
  br i1 %498, label %499, label %502

499:                                              ; preds = %491
  %500 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load i8*, i8** %500, align 8
  call void @_ZdlPv(i8* %501) #10
  br label %502

502:                                              ; preds = %499, %491
  %503 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %503, i8* nonnull align 8 %494, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %494) #9
  %504 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %505 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %504, i64 0, i32 1, i32 0
  %506 = load i8, i8* %505, align 1
  %507 = icmp slt i8 %506, 0
  br i1 %507, label %508, label %510

508:                                              ; preds = %502
  %509 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %509) #10
  br label %510

510:                                              ; preds = %502, %508
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %342) #9
  br label %511

511:                                              ; preds = %338, %510, %213
  %512 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %513 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %512, i64 0, i32 1, i32 0
  %514 = load i8, i8* %513, align 1
  %515 = icmp slt i8 %514, 0
  br i1 %515, label %516, label %519

516:                                              ; preds = %511
  %517 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load i8*, i8** %517, align 8
  call void @_ZdlPv(i8* %518) #10
  br label %519

519:                                              ; preds = %511, %516
  %520 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %520, i8* nonnull align 8 %60, i64 24, i1 false) #9
  store i8 0, i8* %161, align 1
  store i8 0, i8* %60, align 8
  %521 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %522 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %521, i64 0, i32 1, i32 0
  %523 = load i8, i8* %522, align 1
  %524 = icmp slt i8 %523, 0
  br i1 %524, label %525, label %528

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load i8*, i8** %526, align 8
  call void @_ZdlPv(i8* %527) #10
  br label %528

528:                                              ; preds = %519, %525
  %529 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %529, i8* nonnull align 8 %63, i64 24, i1 false) #9
  %530 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %531 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %530, i64 0, i32 1, i32 0
  store i8 0, i8* %531, align 1
  store i8 0, i8* %63, align 8
  br label %532

532:                                              ; preds = %144, %339, %528
  %533 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %340, %339 ], [ %530, %528 ], [ %86, %144 ]
  %534 = phi i1 [ false, %339 ], [ true, %528 ], [ false, %144 ]
  %535 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %533, i64 0, i32 1, i32 0
  %536 = load i8, i8* %535, align 1
  %537 = icmp slt i8 %536, 0
  br i1 %537, label %538, label %540

538:                                              ; preds = %532
  %539 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %539) #10
  br label %540

540:                                              ; preds = %532, %538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  %541 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %542 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %541, i64 0, i32 1, i32 0
  %543 = load i8, i8* %542, align 1
  %544 = icmp slt i8 %543, 0
  br i1 %544, label %545, label %547

545:                                              ; preds = %540
  %546 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %546) #10
  br label %547

547:                                              ; preds = %540, %545
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  %548 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %55, align 8
  %549 = icmp eq %"class.base::BasicStringPiece"* %548, null
  br i1 %549, label %554, label %550

550:                                              ; preds = %547
  %551 = ptrtoint %"class.base::BasicStringPiece"* %548 to i64
  %552 = bitcast %"class.base::BasicStringPiece"** %56 to i64*
  store i64 %551, i64* %552, align 8
  %553 = bitcast %"class.base::BasicStringPiece"* %548 to i8*
  call void @_ZdlPv(i8* %553) #10
  br label %554

554:                                              ; preds = %547, %550
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  %555 = load i8, i8* %29, align 1
  br label %556

556:                                              ; preds = %47, %50, %554
  %557 = phi i8 [ %555, %554 ], [ %30, %50 ], [ %30, %47 ]
  %558 = phi i1 [ %534, %554 ], [ false, %50 ], [ false, %47 ]
  %559 = icmp slt i8 %557, 0
  br i1 %559, label %560, label %562

560:                                              ; preds = %556
  %561 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %561) #10
  br label %562

562:                                              ; preds = %556, %560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  br label %563

563:                                              ; preds = %4, %19, %562
  %564 = phi i1 [ %558, %562 ], [ false, %19 ], [ false, %4 ]
  ret i1 %564
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* sret, %class.GURL*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN3net8HttpUtil7IsTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net29ParseMimeTypeWithoutParameterERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_S9_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base26UnescapeBinaryURLComponentENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string"* sret, i8*, i64, i32) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"*, i64, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net7DataURL13BuildResponseERK4GURLN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS6_12basic_stringIcS8_NS6_9allocatorIcEEEESE_SE_P13scoped_refptrINS_19HttpResponseHeadersEE(%class.GURL* dereferenceable(120), i8*, i64, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %class.scoped_refptr* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = tail call zeroext i1 @_ZN3net7DataURL5ParseERK4GURLPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_SB_(%class.GURL* dereferenceable(120) %0, %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %5)
  br i1 %11, label %12, label %110

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %21, i64 24, i1 false) #9
  br label %27

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %24, i64 %26) #9
  br label %27

27:                                               ; preds = %20, %22
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  br label %37

35:                                               ; preds = %27
  %36 = zext i8 %30 to i64
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i64 [ %34, %32 ], [ %36, %35 ]
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %59, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %4) #9
  %42 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %44 to i64
  %51 = select i1 %45, i8* %47, i8* %41
  %52 = select i1 %45, i64 %49, i64 %50
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %51, i64 %52) #9
  %54 = load i8, i8* %43, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %40
  %57 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %40, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br label %59

59:                                               ; preds = %58, %37
  %60 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #9
  %61 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = select i1 %64, i8* %66, i8* %60
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %63 to i64
  %71 = select i1 %64, i64 %69, i64 %70
  %72 = call %"class.net::HttpResponseHeaders"* @_ZN3net19HttpResponseHeaders11TryToCreateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %67, i64 %71) #9
  %73 = ptrtoint %"class.net::HttpResponseHeaders"* %72 to i64
  %74 = bitcast %class.scoped_refptr* %6 to i64*
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %76 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.net::HttpResponseHeaders"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %59
  %79 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw sub i32* %79, i32 1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %76) #9
  %83 = bitcast %"class.net::HttpResponseHeaders"* %76 to i8*
  call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %59, %78, %82
  %85 = load i8, i8* %62, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  %90 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %1, i64 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #9
  br i1 %90, label %91, label %102

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %99, align 8
  br label %102

100:                                              ; preds = %91
  %101 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  store i8 0, i8* %101, align 1
  store i8 0, i8* %93, align 1
  br label %102

102:                                              ; preds = %100, %96, %89
  %103 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  %108 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %108) #10
  br label %109

109:                                              ; preds = %102, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %110

110:                                              ; preds = %7, %109
  %111 = phi i32 [ 0, %109 ], [ -300, %7 ]
  ret i32 %111
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.net::HttpResponseHeaders"* @_ZN3net19HttpResponseHeaders11TryToCreateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
