; ModuleID = '../../third_party/skia/src/shaders/gradients/Sk4fGradientBase.cpp'
source_filename = "../../third_party/skia/src/shaders/gradients/Sk4fGradientBase.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%class.Sk4fGradientIntervalBuffer = type { %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [320 x i8] }
%class.SkTArray = type { %struct.Sk4fGradientInterval*, i64 }
%struct.Sk4fGradientInterval = type { %struct.SkRGBA4f, %struct.SkRGBA4f, float, float }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkGradientShaderBase = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f.1*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8, [7 x i8] }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRGBA4f.1 = type { float, float, float, float }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkAutoSTMalloc = type { i8*, %union.anon }
%union.anon = type { [20 x i32] }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.(anonymous namespace)::IntervalIterator" = type <{ %class.SkGradientShaderBase*, float, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)* }
%"class.(anonymous namespace)::SkNx" = type { <4 x float> }
%struct.SkColor4fXformer = type { %struct.SkRGBA4f.1*, %class.SkSTArray.7 }
%class.SkSTArray.7 = type { %class.SkAlignedSTStorage.8, %class.SkTArray.9 }
%class.SkAlignedSTStorage.8 = type { [64 x i8] }
%class.SkTArray.9 = type { %struct.SkRGBA4f.1*, i64 }
%"class.SkGradientShaderBase::GradientShaderBase4fContext" = type <{ %"class.SkShaderBase::Context.base", [7 x i8], %class.Sk4fGradientIntervalBuffer, %class.SkMatrix, void (%class.SkMatrix*, float, float, %struct.SkPoint*)*, i8, i8, i8, [5 x i8] }>
%"class.SkShaderBase::Context.base" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8 }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon.11 }
%class.anon.11 = type { %class.SkSTArray**, i8*, %"class.(anonymous namespace)::SkNx"* }
%"class.std::__1::__function::__default_alloc_func.13" = type { %class.anon }
%class.anon = type { %class.Sk4fGradientIntervalBuffer*, i8*, %"class.(anonymous namespace)::SkNx"* }

$_ZN20SkGradientShaderBase27GradientShaderBase4fContextD2Ev = comdat any

$_ZN20SkGradientShaderBase27GradientShaderBase4fContextD0Ev = comdat any

$_ZNK20SkGradientShaderBase27GradientShaderBase4fContext8getFlagsEv = comdat any

$_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZTVN20SkGradientShaderBase27GradientShaderBase4fContextE = comdat any

@_ZTVN20SkGradientShaderBase27GradientShaderBase4fContextE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkGradientShaderBase::GradientShaderBase4fContext"*)* @_ZN20SkGradientShaderBase27GradientShaderBase4fContextD2Ev to i8*), i8* bitcast (void (%"class.SkGradientShaderBase::GradientShaderBase4fContext"*)* @_ZN20SkGradientShaderBase27GradientShaderBase4fContextD0Ev to i8*), i8* bitcast (i32 (%"class.SkGradientShaderBase::GradientShaderBase4fContext"*)* @_ZNK20SkGradientShaderBase27GradientShaderBase4fContext8getFlagsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@_ZN8SkMatrix11gMapXYProcsE = external local_unnamed_addr constant [0 x void (%class.SkMatrix*, float, float, %struct.SkPoint*)*], align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfb(%class.Sk4fGradientIntervalBuffer*, %class.SkGradientShaderBase* dereferenceable(232), %class.SkColorSpace*, i32, i1 zeroext, float, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca i8, align 1
  %9 = alloca %class.SkSTArray*, align 8
  %10 = alloca %"class.(anonymous namespace)::IntervalIterator", align 8
  %11 = alloca %"class.std::__1::function", align 8
  %12 = alloca i8, align 1
  %13 = alloca %class.SkSTArray*, align 8
  %14 = alloca %"class.(anonymous namespace)::IntervalIterator", align 8
  %15 = alloca %"class.std::__1::function", align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.(anonymous namespace)::SkNx", align 16
  %18 = alloca %struct.SkColor4fXformer, align 8
  %19 = alloca %"class.(anonymous namespace)::IntervalIterator", align 8
  %20 = alloca %"class.std::__1::function", align 8
  %21 = zext i1 %4 to i8
  store i8 %21, i8* %16, align 1
  %22 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %1, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0
  %25 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0, i32 0, i32 0, i64 320
  %26 = bitcast i8* %25 to %class.SkTArray*
  %27 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0, i32 0, i32 0, i64 328
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, -4294967295
  store i64 %30, i64* %28, align 8
  tail call void @_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %26, i32 0, i32 2) #11
  %31 = load i64, i64* %28, align 8
  %32 = and i64 %31, -4294967297
  store i64 %32, i64* %28, align 8
  %33 = bitcast %"class.(anonymous namespace)::SkNx"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %17, i64 0, i32 0
  %35 = insertelement <4 x float> undef, float %5, i32 0
  %36 = shufflevector <4 x float> %35, <4 x float> undef, <4 x i32> zeroinitializer
  %37 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float undef>, float %5, i32 3
  %38 = select i1 %4, <4 x float> %36, <4 x float> %37
  store <4 x float> %38, <4 x float>* %34, align 16
  %39 = add nsw i32 %23, -1
  %40 = select i1 %6, i32 %39, i32 0
  %41 = sub nsw i32 %39, %40
  %42 = select i1 %6, float 1.000000e+00, float 0.000000e+00
  %43 = fsub float 1.000000e+00, %42
  %44 = bitcast %struct.SkColor4fXformer* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 88, i1 false)
  %45 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %1, i64 0, i32 5
  %46 = load %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1** %45, align 8
  %47 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %1, i64 0, i32 9, i32 0
  %48 = load %class.SkColorSpace*, %class.SkColorSpace** %47, align 8
  call void @_ZN16SkColor4fXformerC1EPK8SkRGBA4fIL11SkAlphaType3EEiP12SkColorSpaceS6_(%struct.SkColor4fXformer* nonnull %18, %struct.SkRGBA4f.1* %46, i32 %23, %class.SkColorSpace* %48, %class.SkColorSpace* %2) #11
  %49 = icmp eq i32 %3, 0
  br i1 %49, label %50, label %117

50:                                               ; preds = %7
  %51 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %18, i64 0, i32 0
  %52 = load %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1** %51, align 8
  %53 = sext i32 %40 to i64
  %54 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %52, i64 %53
  br i1 %4, label %58, label %55

55:                                               ; preds = %50
  %56 = bitcast %struct.SkRGBA4f.1* %54 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 1
  br label %77

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %52, i64 %53, i32 3
  %60 = load float, float* %59, align 4
  %61 = bitcast %struct.SkRGBA4f.1* %54 to <2 x float>*
  %62 = load <2 x float>, <2 x float>* %61, align 4
  %63 = insertelement <2 x float> undef, float %60, i32 0
  %64 = shufflevector <2 x float> %63, <2 x float> undef, <2 x i32> zeroinitializer
  %65 = fmul <2 x float> %62, %64
  %66 = shufflevector <2 x float> %65, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %67 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %52, i64 %53, i32 2
  %68 = load float, float* %67, align 4
  %69 = fmul float %60, %68
  %70 = insertelement <4 x float> undef, float %69, i32 2
  %71 = insertelement <4 x float> %70, float %60, i32 3
  %72 = shufflevector <4 x float> %66, <4 x float> %71, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %73 = insertelement <4 x float> undef, float %60, i32 0
  %74 = shufflevector <4 x float> %73, <4 x float> undef, <4 x i32> zeroinitializer
  %75 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %72, <4 x float> %74) #11
  %76 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %75) #11
  br label %77

77:                                               ; preds = %55, %58
  %78 = phi <4 x float> [ %76, %58 ], [ %57, %55 ]
  %79 = fmul <4 x float> %78, %38
  %80 = select i1 %6, float 0x7FF0000000000000, float 0xFFF0000000000000
  call void @_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %26, i32 1, i32 1) #11
  %81 = bitcast i8* %25 to %struct.Sk4fGradientInterval**
  %82 = load %struct.Sk4fGradientInterval*, %struct.Sk4fGradientInterval** %81, align 8
  %83 = load i64, i64* %28, align 8
  %84 = lshr i64 %83, 1
  %85 = and i64 %84, 2147483647
  %86 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %82, i64 %85
  %87 = add i64 %83, 2
  %88 = and i64 %87, 4294967294
  %89 = and i64 %83, -4294967295
  %90 = or i64 %88, %89
  store i64 %90, i64* %28, align 8
  %91 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %82, i64 %85, i32 2
  store float %80, float* %91, align 4
  %92 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %82, i64 %85, i32 3
  store float %42, float* %92, align 4
  %93 = select i1 %6, float 0xFFF0000000000000, float 0x7FF0000000000000
  %94 = bitcast float %93 to i32
  %95 = and i32 %94, 2139095040
  %96 = icmp eq i32 %95, 2139095040
  br i1 %96, label %102, label %97

97:                                               ; preds = %77
  %98 = fsub <4 x float> %79, %79
  %99 = insertelement <4 x float> undef, float %93, i32 0
  %100 = shufflevector <4 x float> %99, <4 x float> undef, <4 x i32> zeroinitializer
  %101 = fdiv <4 x float> %98, %100
  br label %102

102:                                              ; preds = %97, %77
  %103 = phi <4 x float> [ %101, %97 ], [ zeroinitializer, %77 ]
  %104 = bitcast float %80 to i32
  %105 = and i32 %104, 2139095040
  %106 = icmp eq i32 %105, 2139095040
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = insertelement <4 x float> undef, float %80, i32 0
  %109 = shufflevector <4 x float> %108, <4 x float> undef, <4 x i32> zeroinitializer
  %110 = fmul <4 x float> %109, %103
  br label %111

111:                                              ; preds = %102, %107
  %112 = phi <4 x float> [ %110, %107 ], [ zeroinitializer, %102 ]
  %113 = fsub <4 x float> %79, %112
  %114 = bitcast %struct.Sk4fGradientInterval* %86 to <4 x float>*
  store <4 x float> %113, <4 x float>* %114, align 1
  %115 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %82, i64 %85, i32 1, i32 0
  %116 = bitcast float* %115 to <4 x float>*
  store <4 x float> %103, <4 x float>* %116, align 1
  br label %148

117:                                              ; preds = %7
  %118 = icmp ne i32 %3, 2
  %119 = xor i1 %6, true
  %120 = or i1 %118, %119
  br i1 %120, label %148, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %18, i64 0, i32 0
  %123 = load %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1** %122, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  %124 = bitcast %class.SkSTArray** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124)
  %125 = bitcast %"class.std::__1::function"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125)
  store i8 %21, i8* %8, align 1
  store %class.SkSTArray* %24, %class.SkSTArray** %9, align 8
  %126 = bitcast %"class.(anonymous namespace)::IntervalIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #11
  %127 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %10, i64 0, i32 0
  %128 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %10, i64 0, i32 1
  %129 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %10, i64 0, i32 2
  %130 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %10, i64 0, i32 3
  %131 = getelementptr inbounds i32, i32* %129, i64 2
  store i32 -1431655766, i32* %131, align 4
  store %class.SkGradientShaderBase* %1, %class.SkGradientShaderBase** %127, align 8
  store float 0.000000e+00, float* %128, align 8
  store i32 0, i32* %129, align 4
  store i32 1, i32* %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 1, i32 0
  %133 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)* @"_ZNSt3__110__function16__policy_invokerIFvRK8SkRGBA4fIL11SkAlphaType3EES6_ffEE11__call_implINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePS5_RKNSB_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1S7_EEEEvPKNS0_16__policy_storageES6_S6_ff", void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)** %132, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %133, align 8
  %134 = call i8* @_Znwm(i64 24) #12, !noalias !2
  %135 = bitcast i8* %134 to %class.SkSTArray***
  store %class.SkSTArray** %9, %class.SkSTArray*** %135, align 8
  %136 = getelementptr inbounds i8, i8* %134, i64 8
  %137 = bitcast i8* %136 to i8**
  store i8* %8, i8** %137, align 8
  %138 = getelementptr inbounds i8, i8* %134, i64 16
  %139 = bitcast i8* %138 to %"class.(anonymous namespace)::SkNx"**
  store %"class.(anonymous namespace)::SkNx"* %17, %"class.(anonymous namespace)::SkNx"** %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* %134, i8** %140, align 8
  call fastcc void @_ZNK12_GLOBAL__N_116IntervalIterator7iterateEPK8SkRGBA4fIL11SkAlphaType3EENSt3__18functionIFvRS4_S8_ffEEE(%"class.(anonymous namespace)::IntervalIterator"* nonnull %10, %struct.SkRGBA4f.1* %123, %"class.std::__1::function"* nonnull %11) #11
  %141 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %133, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %141, i64 0, i32 1
  %143 = load void (i8*)*, void (i8*)** %142, align 8
  %144 = icmp eq void (i8*)* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %121
  %146 = load i8*, i8** %140, align 8
  call void %143(i8* %146) #11
  br label %147

147:                                              ; preds = %121, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125)
  br label %148

148:                                              ; preds = %117, %147, %111
  %149 = bitcast %"class.(anonymous namespace)::IntervalIterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #11
  %150 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %19, i64 0, i32 0
  %151 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %19, i64 0, i32 1
  %152 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %19, i64 0, i32 2
  %153 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %19, i64 0, i32 3
  %154 = bitcast i32* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %154, i8 -86, i64 12, i1 false)
  store %class.SkGradientShaderBase* %1, %class.SkGradientShaderBase** %150, align 8
  store float %42, float* %151, align 8
  br i1 %6, label %155, label %158

155:                                              ; preds = %148
  %156 = load i32, i32* %22, align 8
  %157 = add nsw i32 %156, -1
  br label %158

158:                                              ; preds = %148, %155
  %159 = phi i32 [ %157, %155 ], [ 0, %148 ]
  store i32 %159, i32* %152, align 4
  %160 = select i1 %6, i32 -1, i32 1
  store i32 %160, i32* %153, align 8
  %161 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %18, i64 0, i32 0
  %162 = load %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %20, i64 0, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %20, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)* @"_ZNSt3__110__function16__policy_invokerIFvRK8SkRGBA4fIL11SkAlphaType3EES6_ffEE11__call_implINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0S7_EEEEvPKNS0_16__policy_storageES6_S6_ff", void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)** %163, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %164, align 8
  %165 = call i8* @_Znwm(i64 24) #12, !noalias !7
  %166 = bitcast i8* %165 to %class.Sk4fGradientIntervalBuffer**
  store %class.Sk4fGradientIntervalBuffer* %0, %class.Sk4fGradientIntervalBuffer** %166, align 8
  %167 = getelementptr inbounds i8, i8* %165, i64 8
  %168 = bitcast i8* %167 to i8**
  store i8* %16, i8** %168, align 8
  %169 = getelementptr inbounds i8, i8* %165, i64 16
  %170 = bitcast i8* %169 to %"class.(anonymous namespace)::SkNx"**
  store %"class.(anonymous namespace)::SkNx"* %17, %"class.(anonymous namespace)::SkNx"** %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %20, i64 0, i32 0, i32 0, i32 0
  store i8* %165, i8** %171, align 8
  call fastcc void @_ZNK12_GLOBAL__N_116IntervalIterator7iterateEPK8SkRGBA4fIL11SkAlphaType3EENSt3__18functionIFvRS4_S8_ffEEE(%"class.(anonymous namespace)::IntervalIterator"* nonnull %19, %struct.SkRGBA4f.1* %162, %"class.std::__1::function"* nonnull %20)
  %172 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %164, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %172, i64 0, i32 1
  %174 = load void (i8*)*, void (i8*)** %173, align 8
  %175 = icmp eq void (i8*)* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %158
  %177 = load i8*, i8** %171, align 8
  call void %174(i8* %177) #11
  br label %178

178:                                              ; preds = %158, %176
  br i1 %49, label %179, label %248

179:                                              ; preds = %178
  %180 = load %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1** %161, align 8
  %181 = sext i32 %41 to i64
  %182 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %180, i64 %181
  %183 = load i8, i8* %16, align 1, !range !12
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %179
  %186 = bitcast %struct.SkRGBA4f.1* %182 to <4 x float>*
  %187 = load <4 x float>, <4 x float>* %186, align 1
  br label %207

188:                                              ; preds = %179
  %189 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %180, i64 %181, i32 3
  %190 = load float, float* %189, align 4
  %191 = bitcast %struct.SkRGBA4f.1* %182 to <2 x float>*
  %192 = load <2 x float>, <2 x float>* %191, align 4
  %193 = insertelement <2 x float> undef, float %190, i32 0
  %194 = shufflevector <2 x float> %193, <2 x float> undef, <2 x i32> zeroinitializer
  %195 = fmul <2 x float> %192, %194
  %196 = shufflevector <2 x float> %195, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %197 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %180, i64 %181, i32 2
  %198 = load float, float* %197, align 4
  %199 = fmul float %190, %198
  %200 = insertelement <4 x float> undef, float %199, i32 2
  %201 = insertelement <4 x float> %200, float %190, i32 3
  %202 = shufflevector <4 x float> %196, <4 x float> %201, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %203 = insertelement <4 x float> undef, float %190, i32 0
  %204 = shufflevector <4 x float> %203, <4 x float> undef, <4 x i32> zeroinitializer
  %205 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %202, <4 x float> %204) #11
  %206 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %205) #11
  br label %207

207:                                              ; preds = %185, %188
  %208 = phi <4 x float> [ %206, %188 ], [ %187, %185 ]
  %209 = load <4 x float>, <4 x float>* %34, align 16
  %210 = fmul <4 x float> %208, %209
  %211 = select i1 %6, float 0xFFF0000000000000, float 0x7FF0000000000000
  call void @_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %26, i32 1, i32 1) #11
  %212 = bitcast i8* %25 to %struct.Sk4fGradientInterval**
  %213 = load %struct.Sk4fGradientInterval*, %struct.Sk4fGradientInterval** %212, align 8
  %214 = load i64, i64* %28, align 8
  %215 = lshr i64 %214, 1
  %216 = and i64 %215, 2147483647
  %217 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %213, i64 %216
  %218 = add i64 %214, 2
  %219 = and i64 %218, 4294967294
  %220 = and i64 %214, -4294967295
  %221 = or i64 %219, %220
  store i64 %221, i64* %28, align 8
  %222 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %213, i64 %216, i32 2
  store float %43, float* %222, align 4
  %223 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %213, i64 %216, i32 3
  store float %211, float* %223, align 4
  %224 = fsub float %211, %43
  %225 = bitcast float %224 to i32
  %226 = and i32 %225, 2139095040
  %227 = icmp eq i32 %226, 2139095040
  br i1 %227, label %233, label %228

228:                                              ; preds = %207
  %229 = fsub <4 x float> %210, %210
  %230 = insertelement <4 x float> undef, float %224, i32 0
  %231 = shufflevector <4 x float> %230, <4 x float> undef, <4 x i32> zeroinitializer
  %232 = fdiv <4 x float> %229, %231
  br label %233

233:                                              ; preds = %228, %207
  %234 = phi <4 x float> [ %232, %228 ], [ zeroinitializer, %207 ]
  %235 = bitcast float %43 to i32
  %236 = and i32 %235, 2139095040
  %237 = icmp eq i32 %236, 2139095040
  br i1 %237, label %242, label %238

238:                                              ; preds = %233
  %239 = insertelement <4 x float> undef, float %43, i32 0
  %240 = shufflevector <4 x float> %239, <4 x float> undef, <4 x i32> zeroinitializer
  %241 = fmul <4 x float> %240, %234
  br label %242

242:                                              ; preds = %233, %238
  %243 = phi <4 x float> [ %241, %238 ], [ zeroinitializer, %233 ]
  %244 = fsub <4 x float> %210, %243
  %245 = bitcast %struct.Sk4fGradientInterval* %217 to <4 x float>*
  store <4 x float> %244, <4 x float>* %245, align 1
  %246 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %213, i64 %216, i32 1, i32 0
  %247 = bitcast float* %246 to <4 x float>*
  store <4 x float> %234, <4 x float>* %247, align 1
  br label %280

248:                                              ; preds = %178
  %249 = icmp ne i32 %3, 2
  %250 = or i1 %249, %6
  br i1 %250, label %280, label %251

251:                                              ; preds = %248
  %252 = load %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1** %161, align 8
  %253 = load i8, i8* %16, align 1, !range !12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  %254 = bitcast %class.SkSTArray** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254)
  %255 = bitcast %"class.std::__1::function"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %255)
  store i8 %253, i8* %12, align 1
  store %class.SkSTArray* %24, %class.SkSTArray** %13, align 8
  %256 = bitcast %"class.(anonymous namespace)::IntervalIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %256) #11
  %257 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %14, i64 0, i32 0
  %258 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %14, i64 0, i32 1
  %259 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %14, i64 0, i32 2
  %260 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %14, i64 0, i32 3
  %261 = getelementptr inbounds i32, i32* %259, i64 2
  store i32 -1431655766, i32* %261, align 4
  store %class.SkGradientShaderBase* %1, %class.SkGradientShaderBase** %257, align 8
  store float 1.000000e+00, float* %258, align 8
  %262 = load i32, i32* %22, align 8
  %263 = add nsw i32 %262, -1
  store i32 %263, i32* %259, align 4
  store i32 -1, i32* %260, align 8
  %264 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %15, i64 0, i32 0, i32 1, i32 0
  %265 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %15, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)* @"_ZNSt3__110__function16__policy_invokerIFvRK8SkRGBA4fIL11SkAlphaType3EES6_ffEE11__call_implINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePS5_RKNSB_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1S7_EEEEvPKNS0_16__policy_storageES6_S6_ff", void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)** %264, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %265, align 8
  %266 = call i8* @_Znwm(i64 24) #12, !noalias !13
  %267 = bitcast i8* %266 to %class.SkSTArray***
  store %class.SkSTArray** %13, %class.SkSTArray*** %267, align 8
  %268 = getelementptr inbounds i8, i8* %266, i64 8
  %269 = bitcast i8* %268 to i8**
  store i8* %12, i8** %269, align 8
  %270 = getelementptr inbounds i8, i8* %266, i64 16
  %271 = bitcast i8* %270 to %"class.(anonymous namespace)::SkNx"**
  store %"class.(anonymous namespace)::SkNx"* %17, %"class.(anonymous namespace)::SkNx"** %271, align 8
  %272 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %15, i64 0, i32 0, i32 0, i32 0
  store i8* %266, i8** %272, align 8
  call fastcc void @_ZNK12_GLOBAL__N_116IntervalIterator7iterateEPK8SkRGBA4fIL11SkAlphaType3EENSt3__18functionIFvRS4_S8_ffEEE(%"class.(anonymous namespace)::IntervalIterator"* nonnull %14, %struct.SkRGBA4f.1* %252, %"class.std::__1::function"* nonnull %15) #11
  %273 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %265, align 8
  %274 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %273, i64 0, i32 1
  %275 = load void (i8*)*, void (i8*)** %274, align 8
  %276 = icmp eq void (i8*)* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %251
  %278 = load i8*, i8** %272, align 8
  call void %275(i8* %278) #11
  br label %279

279:                                              ; preds = %251, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %256) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %255)
  br label %280

280:                                              ; preds = %248, %279, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #11
  %281 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %18, i64 0, i32 1, i32 0, i32 0, i64 72
  %282 = bitcast i8* %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %290, label %286

286:                                              ; preds = %280
  %287 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %18, i64 0, i32 1, i32 0, i32 0, i64 64
  %288 = bitcast i8* %287 to i8**
  %289 = load i8*, i8** %288, align 8
  call void @_Z7sk_freePv(i8* %289) #11
  br label %290

290:                                              ; preds = %280, %286
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16SkColor4fXformerC1EPK8SkRGBA4fIL11SkAlphaType3EEiP12SkColorSpaceS6_(%struct.SkColor4fXformer*, %struct.SkRGBA4f.1*, i32, %class.SkColorSpace*, %class.SkColorSpace*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK12_GLOBAL__N_116IntervalIterator7iterateEPK8SkRGBA4fIL11SkAlphaType3EENSt3__18functionIFvRS4_S8_ffEEE(%"class.(anonymous namespace)::IntervalIterator"* nocapture readonly, %struct.SkRGBA4f.1*, %"class.std::__1::function"*) unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::function", align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 0
  %6 = load %class.SkGradientShaderBase*, %class.SkGradientShaderBase** %5, align 8
  %7 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %6, i64 0, i32 6
  %8 = load float*, float** %7, align 8
  %9 = icmp eq float* %8, null
  br i1 %9, label %10, label %98

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::function"* %4 to i8*
  %12 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 16, i1 false) #11
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::__function::__policy_invoker"* %14 to i64*
  %16 = bitcast %"struct.std::__1::__function::__policy_invoker"* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %20 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  store %"struct.std::__1::__function::__policy"* %20, %"struct.std::__1::__function::__policy"** %18, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %20, i64 0, i32 0
  %22 = load i8* (i8*)*, i8* (i8*)** %21, align 8
  %23 = icmp eq i8* (i8*)* %22, null
  %24 = inttoptr i64 %17 to void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)*
  br i1 %23, label %31, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = tail call i8* %22(i8* %27) #11
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = load %class.SkGradientShaderBase*, %class.SkGradientShaderBase** %5, align 8
  br label %31

31:                                               ; preds = %10, %25
  %32 = phi %class.SkGradientShaderBase* [ %6, %10 ], [ %30, %25 ]
  %33 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = sitofp i32 %34 to float
  %36 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %32, i64 0, i32 7
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, -1
  %39 = sitofp i32 %38 to float
  %40 = fdiv float %35, %39
  %41 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %37, -2
  %44 = mul nsw i32 %43, %34
  %45 = add nsw i32 %44, %42
  %46 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 1
  %47 = load float, float* %46, align 8
  %48 = icmp eq i32 %44, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0
  %52 = add nsw i32 %42, %34
  %53 = fadd float %40, %47
  %54 = sext i32 %42 to i64
  %55 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %54
  %56 = sext i32 %52 to i64
  %57 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %56
  call void %24(%"union.std::__1::__function::__policy_storage"* nonnull %51, %struct.SkRGBA4f.1* dereferenceable(16) %55, %struct.SkRGBA4f.1* dereferenceable(16) %57, float %47, float %53) #11
  %58 = icmp eq i32 %52, %45
  %59 = load i32, i32* %33, align 8
  br i1 %58, label %73, label %60

60:                                               ; preds = %49, %60
  %61 = phi i32 [ %72, %60 ], [ %59, %49 ]
  %62 = phi float [ %66, %60 ], [ %53, %49 ]
  %63 = phi i32 [ %65, %60 ], [ %52, %49 ]
  %64 = load void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)*, void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)** %50, align 8
  %65 = add nsw i32 %63, %61
  %66 = fadd float %40, %62
  %67 = sext i32 %63 to i64
  %68 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %67
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %69
  call void %64(%"union.std::__1::__function::__policy_storage"* nonnull %51, %struct.SkRGBA4f.1* dereferenceable(16) %68, %struct.SkRGBA4f.1* dereferenceable(16) %70, float %62, float %66) #11
  %71 = icmp eq i32 %65, %45
  %72 = load i32, i32* %33, align 8
  br i1 %71, label %73, label %60

73:                                               ; preds = %60, %49
  %74 = phi float [ %53, %49 ], [ %66, %60 ]
  %75 = phi i32 [ %59, %49 ], [ %72, %60 ]
  %76 = load float, float* %46, align 8
  %77 = load void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)*, void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)** %50, align 8
  br label %78

78:                                               ; preds = %31, %73
  %79 = phi void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)* [ %24, %31 ], [ %77, %73 ]
  %80 = phi float [ %47, %31 ], [ %76, %73 ]
  %81 = phi i32 [ %34, %31 ], [ %75, %73 ]
  %82 = phi i32 [ %42, %31 ], [ %45, %73 ]
  %83 = phi float [ %47, %31 ], [ %74, %73 ]
  %84 = sext i32 %82 to i64
  %85 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %84
  %86 = add nsw i32 %82, %81
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %87
  %89 = fsub float 1.000000e+00, %80
  %90 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0
  call void %79(%"union.std::__1::__function::__policy_storage"* nonnull %90, %struct.SkRGBA4f.1* dereferenceable(16) %85, %struct.SkRGBA4f.1* dereferenceable(16) %88, float %83, float %89) #11
  %91 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %91, i64 0, i32 1
  %93 = load void (i8*)*, void (i8*)** %92, align 8
  %94 = icmp eq void (i8*)* %93, null
  br i1 %94, label %134, label %95

95:                                               ; preds = %78
  %96 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void %93(i8* %97) #11
  br label %134

98:                                               ; preds = %3
  %99 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %6, i64 0, i32 7
  %104 = load i32, i32* %103, align 8
  %105 = add nsw i32 %104, -1
  %106 = mul nsw i32 %105, %102
  %107 = add nsw i32 %106, %100
  %108 = getelementptr inbounds %"class.(anonymous namespace)::IntervalIterator", %"class.(anonymous namespace)::IntervalIterator"* %0, i64 0, i32 1
  %109 = load float, float* %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %111 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %129, %98
  %113 = phi float* [ %8, %98 ], [ %133, %129 ]
  %114 = phi i32 [ %102, %98 ], [ %130, %129 ]
  %115 = phi i32 [ %100, %98 ], [ %117, %129 ]
  %116 = phi float [ %109, %98 ], [ %120, %129 ]
  %117 = add nsw i32 %114, %115
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds float, float* %113, i64 %118
  %120 = load float, float* %119, align 4
  %121 = fcmp une float %120, %116
  br i1 %121, label %122, label %127

122:                                              ; preds = %112
  %123 = sext i32 %115 to i64
  %124 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %123
  %125 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 %118
  %126 = load void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)*, void (%"union.std::__1::__function::__policy_storage"*, %struct.SkRGBA4f.1*, %struct.SkRGBA4f.1*, float, float)** %110, align 8
  tail call void %126(%"union.std::__1::__function::__policy_storage"* %111, %struct.SkRGBA4f.1* dereferenceable(16) %124, %struct.SkRGBA4f.1* dereferenceable(16) %125, float %116, float %120) #11
  br label %127

127:                                              ; preds = %122, %112
  %128 = icmp eq i32 %117, %107
  br i1 %128, label %134, label %129

129:                                              ; preds = %127
  %130 = load i32, i32* %101, align 8
  %131 = load %class.SkGradientShaderBase*, %class.SkGradientShaderBase** %5, align 8
  %132 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %131, i64 0, i32 6
  %133 = load float*, float** %132, align 8
  br label %112

134:                                              ; preds = %127, %95, %78
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.Sk4fGradientInterval* @_ZNK26Sk4fGradientIntervalBuffer4findEf(%class.Sk4fGradientIntervalBuffer* nocapture readonly, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0, i32 0, i32 0, i64 320
  %4 = bitcast i8* %3 to %struct.Sk4fGradientInterval**
  %5 = load %struct.Sk4fGradientInterval*, %struct.Sk4fGradientInterval** %4, align 8
  %6 = icmp eq %struct.Sk4fGradientInterval* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0, i32 0, i32 0, i64 328
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = and i64 %11, 2147483647
  %13 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %5, i64 %12
  br label %14

14:                                               ; preds = %2, %7
  %15 = phi %struct.Sk4fGradientInterval* [ %13, %7 ], [ null, %2 ]
  %16 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %15, i64 -1
  %17 = icmp eq %struct.Sk4fGradientInterval* %5, %16
  br i1 %17, label %34, label %18

18:                                               ; preds = %14, %18
  %19 = phi %struct.Sk4fGradientInterval* [ %32, %18 ], [ %5, %14 ]
  %20 = phi %struct.Sk4fGradientInterval* [ %31, %18 ], [ %16, %14 ]
  %21 = ptrtoint %struct.Sk4fGradientInterval* %20 to i64
  %22 = ptrtoint %struct.Sk4fGradientInterval* %19 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 40
  %25 = ashr i64 %24, 1
  %26 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %19, i64 %25
  %27 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %19, i64 %25, i32 3
  %28 = load float, float* %27, align 4
  %29 = fcmp olt float %28, %1
  %30 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %26, i64 1
  %31 = select i1 %29, %struct.Sk4fGradientInterval* %20, %struct.Sk4fGradientInterval* %26
  %32 = select i1 %29, %struct.Sk4fGradientInterval* %30, %struct.Sk4fGradientInterval* %19
  %33 = icmp eq %struct.Sk4fGradientInterval* %32, %31
  br i1 %33, label %34, label %18

34:                                               ; preds = %18, %14
  %35 = phi %struct.Sk4fGradientInterval* [ %5, %14 ], [ %31, %18 ]
  ret %struct.Sk4fGradientInterval* %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.Sk4fGradientInterval* @_ZNK26Sk4fGradientIntervalBuffer8findNextEfPK20Sk4fGradientIntervalb(%class.Sk4fGradientIntervalBuffer* nocapture readonly, float, %struct.Sk4fGradientInterval* readonly, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0, i32 0, i32 0, i64 320
  %6 = bitcast i8* %5 to %struct.Sk4fGradientInterval**
  %7 = load %struct.Sk4fGradientInterval*, %struct.Sk4fGradientInterval** %6, align 8
  %8 = icmp eq %struct.Sk4fGradientInterval* %7, null
  %9 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %0, i64 0, i32 0, i32 0, i32 0, i64 328
  %10 = bitcast i8* %9 to i64*
  br i1 %3, label %11, label %31

11:                                               ; preds = %4, %26
  %12 = phi %struct.Sk4fGradientInterval* [ %22, %26 ], [ %2, %4 ]
  %13 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %12, i64 1
  br i1 %8, label %20, label %14

14:                                               ; preds = %11
  %15 = load i64, i64* %10, align 8
  %16 = lshr i64 %15, 1
  %17 = and i64 %16, 2147483647
  %18 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %7, i64 %17
  %19 = icmp ult %struct.Sk4fGradientInterval* %13, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %11, %14
  br label %21

21:                                               ; preds = %14, %20
  %22 = phi %struct.Sk4fGradientInterval* [ %7, %20 ], [ %13, %14 ]
  %23 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %22, i64 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fcmp ugt float %24, %1
  br i1 %25, label %26, label %27

26:                                               ; preds = %21, %27
  br label %11

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %22, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fcmp ult float %29, %1
  br i1 %30, label %26, label %54

31:                                               ; preds = %4, %49
  %32 = phi %struct.Sk4fGradientInterval* [ %45, %49 ], [ %2, %4 ]
  %33 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %32, i64 -1
  %34 = icmp ult %struct.Sk4fGradientInterval* %33, %7
  br i1 %34, label %35, label %44

35:                                               ; preds = %31
  br i1 %8, label %41, label %36

36:                                               ; preds = %35
  %37 = load i64, i64* %10, align 8
  %38 = lshr i64 %37, 1
  %39 = and i64 %38, 2147483647
  %40 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %7, i64 %39
  br label %41

41:                                               ; preds = %35, %36
  %42 = phi %struct.Sk4fGradientInterval* [ %40, %36 ], [ null, %35 ]
  %43 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %42, i64 -1
  br label %44

44:                                               ; preds = %31, %41
  %45 = phi %struct.Sk4fGradientInterval* [ %43, %41 ], [ %33, %31 ]
  %46 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %45, i64 0, i32 2
  %47 = load float, float* %46, align 4
  %48 = fcmp ugt float %47, %1
  br i1 %48, label %49, label %50

49:                                               ; preds = %44, %50
  br label %31

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %45, i64 0, i32 3
  %52 = load float, float* %51, align 4
  %53 = fcmp ult float %52, %1
  br i1 %53, label %49, label %54

54:                                               ; preds = %50, %27
  %55 = phi %struct.Sk4fGradientInterval* [ %22, %27 ], [ %45, %50 ]
  ret %struct.Sk4fGradientInterval* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SkGradientShaderBase27GradientShaderBase4fContextC2ERKS_RKN12SkShaderBase10ContextRecE(%"class.SkGradientShaderBase::GradientShaderBase4fContext"*, %class.SkGradientShaderBase* dereferenceable(232), %"struct.SkShaderBase::ContextRec"* dereferenceable(40)) unnamed_addr #3 align 2 {
  %4 = bitcast %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0 to %"class.SkShaderBase::Context"*
  %5 = bitcast %class.SkGradientShaderBase* %1 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBase7ContextC2ERKS_RKNS_10ContextRecE(%"class.SkShaderBase::Context"* %4, %class.SkShaderBase* dereferenceable(56) %5, %"struct.SkShaderBase::ContextRec"* dereferenceable(40) %2) #11
  %6 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN20SkGradientShaderBase27GradientShaderBase4fContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 320
  %8 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 328
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 68719476736, i64* %10, align 8
  %12 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3
  %13 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 4
  %14 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 4
  %16 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 1
  store i32 16, i32* %17, align 4
  %18 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 5
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 7
  %20 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %2, i64 0, i32 6
  %21 = load i8, i8* %20, align 1, !range !12
  store i8 %21, i8* %19, align 2
  %22 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 0, i32 3
  %23 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %1, i64 0, i32 1
  %24 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* %12, %class.SkMatrix* dereferenceable(40) %23, %class.SkMatrix* dereferenceable(40) %22) #11
  %25 = load i32, i32* %17, align 4
  %26 = trunc i32 %25 to i8
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %3
  %29 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %12) #11
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %17, align 4
  br label %31

31:                                               ; preds = %3, %28
  %32 = phi i32 [ %30, %28 ], [ %25, %3 ]
  %33 = and i32 %32, 15
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [0 x void (%class.SkMatrix*, float, float, %struct.SkPoint*)*], [0 x void (%class.SkMatrix*, float, float, %struct.SkPoint*)*]* @_ZN8SkMatrix11gMapXYProcsE, i64 0, i64 %34
  %36 = bitcast void (%class.SkMatrix*, float, float, %struct.SkPoint*)** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 4
  %39 = bitcast void (%class.SkMatrix*, float, float, %struct.SkPoint*)** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %1, i64 0, i32 11
  %41 = load i8, i8* %40, align 8, !range !12
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 0, i32 4
  %45 = load i8, i8* %44, align 8
  %46 = icmp eq i8 %45, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = load i8, i8* %18, align 8
  %49 = or i8 %48, 1
  store i8 %49, i8* %18, align 8
  br label %50

50:                                               ; preds = %31, %47, %43
  %51 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %1, i64 0, i32 3
  %52 = load i8, i8* %51, align 8
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = load i8, i8* %40, align 8, !range !12
  br label %57

57:                                               ; preds = %50, %55
  %58 = phi i8 [ 1, %50 ], [ %56, %55 ]
  %59 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 6
  store i8 %58, i8* %59, align 1
  ret void
}

declare void @_ZN12SkShaderBase7ContextC2ERKS_RKNS_10ContextRecE(%"class.SkShaderBase::Context"*, %class.SkShaderBase* dereferenceable(56), %"struct.SkShaderBase::ContextRec"* dereferenceable(40)) unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK20SkGradientShaderBase27GradientShaderBase4fContext7isValidEv(%"class.SkGradientShaderBase::GradientShaderBase4fContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = fmul float %3, 0.000000e+00
  %5 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 1
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  %8 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 2
  %9 = load float, float* %8, align 4
  %10 = fmul float %7, %9
  %11 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 3
  %12 = load float, float* %11, align 4
  %13 = fmul float %10, %12
  %14 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 4
  %15 = load float, float* %14, align 4
  %16 = fmul float %13, %15
  %17 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 5
  %18 = load float, float* %17, align 4
  %19 = fmul float %16, %18
  %20 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 6
  %21 = load float, float* %20, align 4
  %22 = fmul float %19, %21
  %23 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 7
  %24 = load float, float* %23, align 4
  %25 = fmul float %22, %24
  %26 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 3, i32 0, i64 8
  %27 = load float, float* %26, align 4
  %28 = fmul float %25, %27
  %29 = fcmp oeq float %28, 0.000000e+00
  ret i1 %29
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkGradientShaderBase27GradientShaderBase4fContextD2Ev(%"class.SkGradientShaderBase::GradientShaderBase4fContext"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN20SkGradientShaderBase27GradientShaderBase4fContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 328
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 320
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %8
  %13 = bitcast %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0 to %"class.SkShaderBase::Context"*
  tail call void @_ZN12SkShaderBase7ContextD2Ev(%"class.SkShaderBase::Context"* %13) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkGradientShaderBase27GradientShaderBase4fContextD0Ev(%"class.SkGradientShaderBase::GradientShaderBase4fContext"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK20SkGradientShaderBase27GradientShaderBase4fContext8getFlagsEv(%"class.SkGradientShaderBase::GradientShaderBase4fContext"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkGradientShaderBase::GradientShaderBase4fContext", %"class.SkGradientShaderBase::GradientShaderBase4fContext"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8
  %4 = zext i8 %3 to i32
  ret i32 %4
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.max.ps(<4 x float>, <4 x float>) #6

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.min.ps(<4 x float>, <4 x float>) #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRK8SkRGBA4fIL11SkAlphaType3EES6_ffEE11__call_implINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePS5_RKNSB_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1S7_EEEEvPKNS0_16__policy_storageES6_S6_ff"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %struct.SkRGBA4f.1* nocapture readonly dereferenceable(16), %struct.SkRGBA4f.1* nocapture readonly dereferenceable(16), float, float) #0 align 2 {
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %7 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %6, align 8
  %8 = fsub float 2.000000e+00, %3
  %9 = fsub float 2.000000e+00, %4
  %10 = fcmp une float %8, %9
  br i1 %10, label %11, label %114

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::__function::__default_alloc_func"* %7 to i8***
  %13 = load i8**, i8*** %12, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 320
  %16 = bitcast i8* %15 to %class.SkTArray*
  %17 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %7, i64 0, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = load i8, i8* %18, align 1, !range !12
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %7, i64 0, i32 0, i32 2
  %22 = load %"class.(anonymous namespace)::SkNx"*, %"class.(anonymous namespace)::SkNx"** %21, align 8
  br i1 %20, label %23, label %31

23:                                               ; preds = %11
  %24 = bitcast %struct.SkRGBA4f.1* %1 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 1
  %26 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %22, i64 0, i32 0
  %27 = load <4 x float>, <4 x float>* %26, align 16
  %28 = fmul <4 x float> %25, %27
  %29 = bitcast %struct.SkRGBA4f.1* %2 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 1
  br label %71

31:                                               ; preds = %11
  %32 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 0, i32 3
  %33 = load float, float* %32, align 4
  %34 = bitcast %struct.SkRGBA4f.1* %1 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = insertelement <2 x float> undef, float %33, i32 0
  %37 = shufflevector <2 x float> %36, <2 x float> undef, <2 x i32> zeroinitializer
  %38 = fmul <2 x float> %35, %37
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %40 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 0, i32 2
  %41 = load float, float* %40, align 4
  %42 = fmul float %33, %41
  %43 = insertelement <4 x float> undef, float %42, i32 2
  %44 = insertelement <4 x float> %43, float %33, i32 3
  %45 = shufflevector <4 x float> %39, <4 x float> %44, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %46 = insertelement <4 x float> undef, float %33, i32 0
  %47 = shufflevector <4 x float> %46, <4 x float> undef, <4 x i32> zeroinitializer
  %48 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %45, <4 x float> %47) #11
  %49 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %48) #11
  %50 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %22, i64 0, i32 0
  %51 = load <4 x float>, <4 x float>* %50, align 16
  %52 = fmul <4 x float> %49, %51
  %53 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %2, i64 0, i32 3
  %54 = load float, float* %53, align 4
  %55 = bitcast %struct.SkRGBA4f.1* %2 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  %57 = insertelement <2 x float> undef, float %54, i32 0
  %58 = shufflevector <2 x float> %57, <2 x float> undef, <2 x i32> zeroinitializer
  %59 = fmul <2 x float> %56, %58
  %60 = shufflevector <2 x float> %59, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %61 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %2, i64 0, i32 2
  %62 = load float, float* %61, align 4
  %63 = fmul float %54, %62
  %64 = insertelement <4 x float> undef, float %63, i32 2
  %65 = insertelement <4 x float> %64, float %54, i32 3
  %66 = shufflevector <4 x float> %60, <4 x float> %65, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %67 = insertelement <4 x float> undef, float %54, i32 0
  %68 = shufflevector <4 x float> %67, <4 x float> undef, <4 x i32> zeroinitializer
  %69 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %66, <4 x float> %68) #11
  %70 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %69) #11
  br label %71

71:                                               ; preds = %31, %23
  %72 = phi <4 x float> [ %52, %31 ], [ %28, %23 ]
  %73 = phi <4 x float> [ %51, %31 ], [ %27, %23 ]
  %74 = phi <4 x float> [ %70, %31 ], [ %30, %23 ]
  tail call void @_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %16, i32 1, i32 1) #11
  %75 = bitcast i8* %15 to %struct.Sk4fGradientInterval**
  %76 = load %struct.Sk4fGradientInterval*, %struct.Sk4fGradientInterval** %75, align 8
  %77 = getelementptr inbounds i8, i8* %14, i64 328
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = lshr i64 %79, 1
  %81 = and i64 %80, 2147483647
  %82 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %76, i64 %81
  %83 = add i64 %79, 2
  %84 = and i64 %83, 4294967294
  %85 = and i64 %79, -4294967295
  %86 = or i64 %84, %85
  store i64 %86, i64* %78, align 8
  %87 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %76, i64 %81, i32 2
  store float %8, float* %87, align 4
  %88 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %76, i64 %81, i32 3
  store float %9, float* %88, align 4
  %89 = fsub float %9, %8
  %90 = bitcast float %89 to i32
  %91 = and i32 %90, 2139095040
  %92 = icmp eq i32 %91, 2139095040
  br i1 %92, label %99, label %93

93:                                               ; preds = %71
  %94 = fmul <4 x float> %73, %74
  %95 = fsub <4 x float> %94, %72
  %96 = insertelement <4 x float> undef, float %89, i32 0
  %97 = shufflevector <4 x float> %96, <4 x float> undef, <4 x i32> zeroinitializer
  %98 = fdiv <4 x float> %95, %97
  br label %99

99:                                               ; preds = %93, %71
  %100 = phi <4 x float> [ %98, %93 ], [ zeroinitializer, %71 ]
  %101 = bitcast float %8 to i32
  %102 = and i32 %101, 2139095040
  %103 = icmp eq i32 %102, 2139095040
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = insertelement <4 x float> undef, float %8, i32 0
  %106 = shufflevector <4 x float> %105, <4 x float> undef, <4 x i32> zeroinitializer
  %107 = fmul <4 x float> %106, %100
  br label %108

108:                                              ; preds = %104, %99
  %109 = phi <4 x float> [ %107, %104 ], [ zeroinitializer, %99 ]
  %110 = fsub <4 x float> %72, %109
  %111 = bitcast %struct.Sk4fGradientInterval* %82 to <4 x float>*
  store <4 x float> %110, <4 x float>* %111, align 1
  %112 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %76, i64 %81, i32 1, i32 0
  %113 = bitcast float* %112 to <4 x float>*
  store <4 x float> %100, <4 x float>* %113, align 1
  br label %114

114:                                              ; preds = %5, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #11
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 40
  %51 = bitcast %class.SkTArray* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #11
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #11
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEPvPKv"(i8* nocapture readonly) #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEEvPv"(i8*) #3 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRK8SkRGBA4fIL11SkAlphaType3EES6_ffEE11__call_implINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0S7_EEEEvPKNS0_16__policy_storageES6_S6_ff"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %struct.SkRGBA4f.1* nocapture readonly dereferenceable(16), %struct.SkRGBA4f.1* nocapture readonly dereferenceable(16), float, float) #0 align 2 {
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.13"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.13"*, %"class.std::__1::__function::__default_alloc_func.13"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.13", %"class.std::__1::__function::__default_alloc_func.13"* %7, i64 0, i32 0, i32 0
  %9 = load %class.Sk4fGradientIntervalBuffer*, %class.Sk4fGradientIntervalBuffer** %8, align 8
  %10 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %9, i64 0, i32 0, i32 0, i32 0, i64 320
  %11 = bitcast i8* %10 to %class.SkTArray*
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.13", %"class.std::__1::__function::__default_alloc_func.13"* %7, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1, !range !12
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.13", %"class.std::__1::__function::__default_alloc_func.13"* %7, i64 0, i32 0, i32 2
  %17 = load %"class.(anonymous namespace)::SkNx"*, %"class.(anonymous namespace)::SkNx"** %16, align 8
  br i1 %15, label %18, label %26

18:                                               ; preds = %5
  %19 = bitcast %struct.SkRGBA4f.1* %1 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 1
  %21 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %17, i64 0, i32 0
  %22 = load <4 x float>, <4 x float>* %21, align 16
  %23 = fmul <4 x float> %20, %22
  %24 = bitcast %struct.SkRGBA4f.1* %2 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 1
  br label %66

26:                                               ; preds = %5
  %27 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 0, i32 3
  %28 = load float, float* %27, align 4
  %29 = bitcast %struct.SkRGBA4f.1* %1 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = insertelement <2 x float> undef, float %28, i32 0
  %32 = shufflevector <2 x float> %31, <2 x float> undef, <2 x i32> zeroinitializer
  %33 = fmul <2 x float> %30, %32
  %34 = shufflevector <2 x float> %33, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %35 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %1, i64 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = fmul float %28, %36
  %38 = insertelement <4 x float> undef, float %37, i32 2
  %39 = insertelement <4 x float> %38, float %28, i32 3
  %40 = shufflevector <4 x float> %34, <4 x float> %39, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %41 = insertelement <4 x float> undef, float %28, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %40, <4 x float> %42) #11
  %44 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %43) #11
  %45 = getelementptr inbounds %"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* %17, i64 0, i32 0
  %46 = load <4 x float>, <4 x float>* %45, align 16
  %47 = fmul <4 x float> %44, %46
  %48 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %2, i64 0, i32 3
  %49 = load float, float* %48, align 4
  %50 = bitcast %struct.SkRGBA4f.1* %2 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  %52 = insertelement <2 x float> undef, float %49, i32 0
  %53 = shufflevector <2 x float> %52, <2 x float> undef, <2 x i32> zeroinitializer
  %54 = fmul <2 x float> %51, %53
  %55 = shufflevector <2 x float> %54, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %56 = getelementptr inbounds %struct.SkRGBA4f.1, %struct.SkRGBA4f.1* %2, i64 0, i32 2
  %57 = load float, float* %56, align 4
  %58 = fmul float %49, %57
  %59 = insertelement <4 x float> undef, float %58, i32 2
  %60 = insertelement <4 x float> %59, float %49, i32 3
  %61 = shufflevector <4 x float> %55, <4 x float> %60, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %62 = insertelement <4 x float> undef, float %49, i32 0
  %63 = shufflevector <4 x float> %62, <4 x float> undef, <4 x i32> zeroinitializer
  %64 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %61, <4 x float> %63) #11
  %65 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %64) #11
  br label %66

66:                                               ; preds = %26, %18
  %67 = phi <4 x float> [ %47, %26 ], [ %23, %18 ]
  %68 = phi <4 x float> [ %46, %26 ], [ %22, %18 ]
  %69 = phi <4 x float> [ %65, %26 ], [ %25, %18 ]
  tail call void @_ZN8SkTArrayI20Sk4fGradientIntervalLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %11, i32 1, i32 1) #11
  %70 = bitcast i8* %10 to %struct.Sk4fGradientInterval**
  %71 = load %struct.Sk4fGradientInterval*, %struct.Sk4fGradientInterval** %70, align 8
  %72 = getelementptr inbounds %class.Sk4fGradientIntervalBuffer, %class.Sk4fGradientIntervalBuffer* %9, i64 0, i32 0, i32 0, i32 0, i64 328
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %71, i64 %76
  %78 = add i64 %74, 2
  %79 = and i64 %78, 4294967294
  %80 = and i64 %74, -4294967295
  %81 = or i64 %79, %80
  store i64 %81, i64* %73, align 8
  %82 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %71, i64 %76, i32 2
  store float %3, float* %82, align 4
  %83 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %71, i64 %76, i32 3
  store float %4, float* %83, align 4
  %84 = fsub float %4, %3
  %85 = bitcast float %84 to i32
  %86 = and i32 %85, 2139095040
  %87 = icmp eq i32 %86, 2139095040
  br i1 %87, label %94, label %88

88:                                               ; preds = %66
  %89 = fmul <4 x float> %68, %69
  %90 = fsub <4 x float> %89, %67
  %91 = insertelement <4 x float> undef, float %84, i32 0
  %92 = shufflevector <4 x float> %91, <4 x float> undef, <4 x i32> zeroinitializer
  %93 = fdiv <4 x float> %90, %92
  br label %94

94:                                               ; preds = %88, %66
  %95 = phi <4 x float> [ %93, %88 ], [ zeroinitializer, %66 ]
  %96 = bitcast float %3 to i32
  %97 = and i32 %96, 2139095040
  %98 = icmp eq i32 %97, 2139095040
  br i1 %98, label %103, label %99

99:                                               ; preds = %94
  %100 = insertelement <4 x float> undef, float %3, i32 0
  %101 = shufflevector <4 x float> %100, <4 x float> undef, <4 x i32> zeroinitializer
  %102 = fmul <4 x float> %101, %95
  br label %103

103:                                              ; preds = %94, %99
  %104 = phi <4 x float> [ %102, %99 ], [ zeroinitializer, %94 ]
  %105 = fsub <4 x float> %67, %104
  %106 = bitcast %struct.Sk4fGradientInterval* %77 to <4 x float>*
  store <4 x float> %105, <4 x float>* %106, align 1
  %107 = getelementptr inbounds %struct.Sk4fGradientInterval, %struct.Sk4fGradientInterval* %71, i64 %76, i32 1, i32 0
  %108 = bitcast float* %107 to <4 x float>*
  store <4 x float> %95, <4 x float>* %108, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEEPvPKv"(i8* nocapture readonly) #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !23
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEEvPv"(i8*) #3 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12SkShaderBase7ContextD2Ev(%"class.SkShaderBase::Context"*) unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!12 = !{i8 0, i8 2}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!16 = distinct !{!16, !17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12_GLOBAL__N_118addMirrorIntervalsERK20SkGradientShaderBasePK8SkRGBA4fIL11SkAlphaType3EERKNS4_4SkNxILi4EfEEbbP9SkSTArrayILi8E20Sk4fGradientIntervalLb1EEE3$_1FvRSB_SM_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!26 = distinct !{!26, !27, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN26Sk4fGradientIntervalBuffer4initERK20SkGradientShaderBaseP12SkColorSpace10SkTileModebfbE3$_0FvRK8SkRGBA4fIL11SkAlphaType3EESG_ffEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
