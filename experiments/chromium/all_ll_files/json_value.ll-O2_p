; ModuleID = '../../third_party/openscreen/src/util/json/json_value.cc'
source_filename = "../../third_party/openscreen/src/util/json/json_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.anon.11 = type { %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.Json::Value" = type { %"union.Json::Value::ValueHolder", %struct.anon, %"class.Json::Value::Comments", i64, i64 }
%"union.Json::Value::ValueHolder" = type { i64 }
%struct.anon = type { i16, [2 x i8] }
%"class.Json::Value::Comments" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::array"* }
%"struct.std::__1::array" = type opaque
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }

@__const._ZN10openscreen14MaybeGetStringERKN4Json5ValueEPKcS5_.result = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.11 } } } } { { { { i8, [7 x i8], %union.anon.11 } } } { { { i8, [7 x i8], %union.anon.11 } } { { i8, [7 x i8], %union.anon.11 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.11 { %"class.absl::string_view" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 } } } } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen11MaybeGetIntERKN4Json5ValueEPKcS5_(%"class.Json::Value"* dereferenceable(40), i8*, i8*) local_unnamed_addr #0 {
  %4 = tail call %"class.Json::Value"* @_ZNK4Json5Value4findEPKcS2_(%"class.Json::Value"* %0, i8* %1, i8* %2) #4
  %5 = icmp eq %"class.Json::Value"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"* nonnull %4) #4
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = tail call i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"* nonnull %4) #4
  %10 = zext i32 %9 to i64
  %11 = shl nuw i64 %10, 32
  br label %12

12:                                               ; preds = %3, %8, %6
  %13 = phi i64 [ 0, %3 ], [ 1, %8 ], [ 0, %6 ]
  %14 = phi i64 [ -6148914691236517376, %3 ], [ %11, %8 ], [ -6148914691236517376, %6 ]
  %15 = or i64 %14, %13
  ret i64 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.Json::Value"* @_ZNK4Json5Value4findEPKcS2_(%"class.Json::Value"*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"*) local_unnamed_addr #2

declare i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen14MaybeGetStringERKN4Json5ValueE(%"class.absl::optional.7"* noalias nocapture sret, %"class.Json::Value"* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = tail call zeroext i1 @_ZNK4Json5Value8isStringEv(%"class.Json::Value"* %1) #4
  br i1 %5, label %6, label %26

6:                                                ; preds = %2
  %7 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  store i8* null, i8** %3, align 8
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  store i8* null, i8** %4, align 8
  %9 = call zeroext i1 @_ZNK4Json5Value9getStringEPPKcS3_(%"class.Json::Value"* %1, i8** nonnull %3, i8** nonnull %4) #4
  %10 = load i8*, i8** %3, align 8
  %11 = icmp eq i8* %10, null
  %12 = load i8*, i8** %4, align 8
  %13 = icmp ult i8* %12, %10
  %14 = or i1 %11, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %6
  %16 = ptrtoint i8* %12 to i64
  %17 = ptrtoint i8* %10 to i64
  %18 = sub i64 %16, %17
  %19 = icmp sgt i64 %18, -1
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %15
  call void @llvm.trap() #4
  unreachable

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8* %10, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %18, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  br label %28

25:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  br label %26

26:                                               ; preds = %25, %2
  %27 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 8
  br label %28

28:                                               ; preds = %21, %26
  ret void
}

declare zeroext i1 @_ZNK4Json5Value8isStringEv(%"class.Json::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4Json5Value9getStringEPPKcS3_(%"class.Json::Value"*, i8**, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen14MaybeGetStringERKN4Json5ValueEPKcS5_(%"class.absl::optional.7"* noalias nocapture sret, %"class.Json::Value"* dereferenceable(40), i8*, i8*) local_unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = tail call %"class.Json::Value"* @_ZNK4Json5Value4findEPKcS2_(%"class.Json::Value"* %1, i8* %2, i8* %3) #4
  %8 = icmp eq %"class.Json::Value"* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK4Json5Value8isStringEv(%"class.Json::Value"* nonnull %7) #4
  br i1 %10, label %11, label %35

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK4Json5Value8isStringEv(%"class.Json::Value"* nonnull %7) #4, !noalias !3
  br i1 %12, label %13, label %33

13:                                               ; preds = %11
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4, !noalias !3
  store i8* null, i8** %5, align 8, !noalias !3
  %15 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4, !noalias !3
  store i8* null, i8** %6, align 8, !noalias !3
  %16 = call zeroext i1 @_ZNK4Json5Value9getStringEPPKcS3_(%"class.Json::Value"* nonnull %7, i8** nonnull %5, i8** nonnull %6) #4, !noalias !3
  %17 = load i8*, i8** %5, align 8, !noalias !3
  %18 = icmp eq i8* %17, null
  %19 = load i8*, i8** %6, align 8, !noalias !3
  %20 = icmp ult i8* %19, %17
  %21 = or i1 %18, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %13
  %23 = ptrtoint i8* %19 to i64
  %24 = ptrtoint i8* %17 to i64
  %25 = sub i64 %23, %24
  %26 = icmp sgt i64 %25, -1
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %22
  call void @llvm.trap() #4, !noalias !3
  unreachable

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %29, align 8, !alias.scope !3
  %30 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8* %17, i8** %30, align 8, !alias.scope !3
  %31 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %25, i64* %31, align 8, !alias.scope !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4, !noalias !3
  br label %38

32:                                               ; preds = %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4, !noalias !3
  br label %33

33:                                               ; preds = %32, %11
  %34 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 8, !alias.scope !3
  br label %38

35:                                               ; preds = %4, %9
  %36 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* nonnull align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.11 } } } }, { { { { i8, [7 x i8], %union.anon.11 } } } }* @__const._ZN10openscreen14MaybeGetStringERKN4Json5ValueEPKcS5_.result, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 23, i1 false)
  br label %38

38:                                               ; preds = %33, %28, %35
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN10openscreen14MaybeGetStringERKN4Json5ValueE: argument 0"}
!5 = distinct !{!5, !"_ZN10openscreen14MaybeGetStringERKN4Json5ValueE"}
