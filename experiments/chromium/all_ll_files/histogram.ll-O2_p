; ModuleID = '../../base/metrics/histogram.cc'
source_filename = "../../base/metrics/histogram.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::Histogram" = type { %"class.base::HistogramBase.base", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36" }
%"class.base::HistogramBase.base" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.base::SampleVectorBase"* }
%"class.base::SampleVectorBase" = type { %"class.base::HistogramSamples", %"struct.std::__1::atomic.39", %"class.base::BucketRanges"* }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i32* }
%"class.base::BucketRanges" = type { %"class.std::__1::vector", i32, %"struct.std::__1::atomic.7" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.base::DelayedPersistentAllocation" = type { %"class.base::PersistentMemoryAllocator"*, i32, i32, i32, i8, %"struct.std::__1::atomic"* }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic.18", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::LinearHistogram" = type { %"class.base::Histogram", %"class.std::__1::map.96" }
%"class.std::__1::map.96" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64 }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BooleanHistogram" = type { %"class.base::LinearHistogram" }
%"class.base::CustomHistogram" = type { %"class.base::Histogram" }
%"class.base::Histogram::Factory" = type <{ i32 (...)**, %"class.std::__1::basic_string"*, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::GlobalHistogramAllocator" = type { %"class.base::PersistentHistogramAllocator.base", %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::FilePath" }
%"class.base::PersistentHistogramAllocator.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.15", %"class.base::PersistentSparseHistogramDataManager", i32 }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::PersistentMemoryAllocator"* }
%"class.base::PersistentSparseHistogramDataManager" = type { %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator", %"class.std::__1::map", %"class.base::Lock" }
%"class.base::PersistentMemoryAllocator::Iterator" = type { %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::PersistentHistogramAllocator::Iterator" = type { %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator" }
%"class.base::PersistentHistogramAllocator" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.15", %"class.base::PersistentSparseHistogramDataManager", i32, [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::DummyHistogram" = type { %"class.base::HistogramBase.base", [4 x i8] }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::SampleVector" = type { %"class.base::SampleVectorBase", %"class.std::__1::vector" }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.61" }
%"union.absl::variant_internal::DestructibleUnionImpl.61" = type { %"union.absl::variant_internal::DestructibleUnionImpl.62" }
%"union.absl::variant_internal::DestructibleUnionImpl.62" = type { %"union.absl::variant_internal::DestructibleUnionImpl.63" }
%"union.absl::variant_internal::DestructibleUnionImpl.63" = type { %"union.absl::variant_internal::DestructibleUnionImpl.64" }
%"union.absl::variant_internal::DestructibleUnionImpl.64" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::PersistentSampleVector" = type { %"class.base::SampleVectorBase", %"class.base::DelayedPersistentAllocation" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.113" }
%"struct.std::__1::pair.113" = type { i32, %"class.std::__1::basic_string" }
%"class.base::LinearHistogram::Factory" = type { %"class.base::Histogram::Factory.base", %"struct.base::LinearHistogram::DescriptionPair"* }
%"class.base::Histogram::Factory.base" = type <{ i32 (...)**, %"class.std::__1::basic_string"*, i32, i32, i32, i32, i32 }>
%"struct.base::LinearHistogram::DescriptionPair" = type { i32, i8* }
%"class.base::BooleanHistogram::Factory" = type { %"class.base::Histogram::Factory.base", [4 x i8] }
%"class.base::CustomHistogram::Factory" = type { %"class.base::Histogram::Factory.base", %"class.std::__1::vector"* }
%"class.base::CheckedContiguousIterator" = type { i32*, i32*, i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::BinaryPredicateProjector" = type { %"struct.std::__1::less.134"*, %"struct.base::identity"*, %"struct.base::identity"* }
%"struct.std::__1::less.134" = type { i8 }
%"struct.base::identity" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK4base25CheckedContiguousIteratorIKiEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKiEppEv = comdat any

$_ZN4base16BooleanHistogramD0Ev = comdat any

$_ZN4base15CustomHistogramD0Ev = comdat any

$_ZN4base9Histogram7Factory12CreateRangesEv = comdat any

$_ZN4base9Histogram7Factory9HeapAllocEPKNS_12BucketRangesE = comdat any

$_ZN4base9Histogram7Factory13FillHistogramEPNS_13HistogramBaseE = comdat any

$_ZN4base15LinearHistogram7Factory12CreateRangesEv = comdat any

$_ZN4base15LinearHistogram7Factory9HeapAllocEPKNS_12BucketRangesE = comdat any

$_ZN4base15LinearHistogram7Factory13FillHistogramEPNS_13HistogramBaseE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base16BooleanHistogram7Factory12CreateRangesEv = comdat any

$_ZN4base16BooleanHistogram7Factory9HeapAllocEPKNS_12BucketRangesE = comdat any

$_ZN4base15CustomHistogram7Factory12CreateRangesEv = comdat any

$_ZN4base15CustomHistogram7Factory9HeapAllocEPKNS_12BucketRangesE = comdat any

$_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEbT0_SA_T_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKiEC2EPS1_S3_S3_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKiE15CheckComparableERKS2_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi = comdat any

$_ZTVN4base9Histogram7FactoryE = comdat any

$_ZTVN4base15LinearHistogram7FactoryE = comdat any

$_ZTVN4base16BooleanHistogram7FactoryE = comdat any

$_ZTVN4base15CustomHistogram7FactoryE = comdat any

@_ZN4base9Histogram16kBucketCount_MAXE = hidden local_unnamed_addr constant i32 1002, align 4
@.str = private unnamed_addr constant [42 x i8] c"Histogram.MismatchedConstructionArguments\00", align 1
@_ZN4base13HistogramBase15kSampleType_MAXE = external local_unnamed_addr constant i32, align 4
@_ZN4base9Histogram29kCommonRaceBasedCountMismatchE = hidden local_unnamed_addr constant i32 5, align 4
@.str.1 = private unnamed_addr constant [30 x i8] c"Histogram.TooManyBuckets.1000\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"Blink.UseCounter\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"Histogram.BadConstructionArguments\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/metrics/histogram.cc\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"unlogged_samples_\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"unlogged_samples_->bucket_ranges()\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"logged_samples_\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"logged_samples_->bucket_ranges()\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"0U != logged_samples_->id()\00", align 1
@_ZTVN4base9HistogramE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Histogram"*)* @_ZN4base9HistogramD2Ev to i8*), i8* bitcast (void (%"class.base::Histogram"*)* @_ZN4base9HistogramD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"*)* @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i64 (%"class.base::Histogram"*)* @_ZNK4base9Histogram9name_hashEv to i8*), i8* bitcast (i32 (%"class.base::Histogram"*)* @_ZNK4base9Histogram16GetHistogramTypeEv to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, i32, i32, i32)* @_ZNK4base9Histogram24HasConstructionArgumentsEiij to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32)* @_ZN4base9Histogram3AddEi to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32, i32)* @_ZN4base9Histogram8AddCountEii to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZN4base9Histogram10AddSamplesERKNS_16HistogramSamplesE to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, %"class.base::PickleIterator"*)* @_ZN4base9Histogram20AddSamplesFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZNK4base9Histogram14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram15SnapshotSamplesEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZN4base9Histogram13SnapshotDeltaEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram18SnapshotFinalDeltaEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*)* @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.base::DictionaryValue"*, %"class.base::Histogram"*)* @_ZNK4base9Histogram11ToGraphDictEv to i8*), i8* bitcast (void (%"class.base::Histogram"*)* @_ZNK4base9Histogram25ValidateHistogramContentsEv to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::Pickle"*)* @_ZNK4base9Histogram17SerializeInfoImplEPNS_6PickleE to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::DictionaryValue"*)* @_ZNK4base9Histogram13GetParametersEPNS_15DictionaryValueE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, i32)* @_ZNK4base9Histogram6rangesEj to i8*), i8* bitcast (i32 (%"class.base::Histogram"*)* @_ZNK4base9Histogram12bucket_countEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::Histogram"*, i32)* @_ZNK4base9Histogram19GetAsciiBucketRangeEj to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"bucket_count\00", align 1
@_ZTVN4base15LinearHistogramE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::LinearHistogram"*)* @_ZN4base15LinearHistogramD2Ev to i8*), i8* bitcast (void (%"class.base::LinearHistogram"*)* @_ZN4base15LinearHistogramD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"*)* @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i64 (%"class.base::Histogram"*)* @_ZNK4base9Histogram9name_hashEv to i8*), i8* bitcast (i32 (%"class.base::LinearHistogram"*)* @_ZNK4base15LinearHistogram16GetHistogramTypeEv to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, i32, i32, i32)* @_ZNK4base9Histogram24HasConstructionArgumentsEiij to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32)* @_ZN4base9Histogram3AddEi to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32, i32)* @_ZN4base9Histogram8AddCountEii to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZN4base9Histogram10AddSamplesERKNS_16HistogramSamplesE to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, %"class.base::PickleIterator"*)* @_ZN4base9Histogram20AddSamplesFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZNK4base9Histogram14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram15SnapshotSamplesEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZN4base9Histogram13SnapshotDeltaEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram18SnapshotFinalDeltaEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*)* @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.base::DictionaryValue"*, %"class.base::Histogram"*)* @_ZNK4base9Histogram11ToGraphDictEv to i8*), i8* bitcast (void (%"class.base::Histogram"*)* @_ZNK4base9Histogram25ValidateHistogramContentsEv to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::Pickle"*)* @_ZNK4base9Histogram17SerializeInfoImplEPNS_6PickleE to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::DictionaryValue"*)* @_ZNK4base9Histogram13GetParametersEPNS_15DictionaryValueE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, i32)* @_ZNK4base9Histogram6rangesEj to i8*), i8* bitcast (i32 (%"class.base::Histogram"*)* @_ZNK4base9Histogram12bucket_countEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::LinearHistogram"*, i32)* @_ZNK4base15LinearHistogram19GetAsciiBucketRangeEj to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [59 x i8] c"static_cast<Sample>(bucket_count) == maximum - minimum + 2\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c" ScaledLinearHistogram requires buckets of size 1\00", align 1
@_ZTVN4base16BooleanHistogramE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::LinearHistogram"*)* @_ZN4base15LinearHistogramD2Ev to i8*), i8* bitcast (void (%"class.base::BooleanHistogram"*)* @_ZN4base16BooleanHistogramD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"*)* @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i64 (%"class.base::Histogram"*)* @_ZNK4base9Histogram9name_hashEv to i8*), i8* bitcast (i32 (%"class.base::BooleanHistogram"*)* @_ZNK4base16BooleanHistogram16GetHistogramTypeEv to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, i32, i32, i32)* @_ZNK4base9Histogram24HasConstructionArgumentsEiij to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32)* @_ZN4base9Histogram3AddEi to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32, i32)* @_ZN4base9Histogram8AddCountEii to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZN4base9Histogram10AddSamplesERKNS_16HistogramSamplesE to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, %"class.base::PickleIterator"*)* @_ZN4base9Histogram20AddSamplesFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZNK4base9Histogram14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram15SnapshotSamplesEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZN4base9Histogram13SnapshotDeltaEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram18SnapshotFinalDeltaEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*)* @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.base::DictionaryValue"*, %"class.base::Histogram"*)* @_ZNK4base9Histogram11ToGraphDictEv to i8*), i8* bitcast (void (%"class.base::Histogram"*)* @_ZNK4base9Histogram25ValidateHistogramContentsEv to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::Pickle"*)* @_ZNK4base9Histogram17SerializeInfoImplEPNS_6PickleE to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::DictionaryValue"*)* @_ZNK4base9Histogram13GetParametersEPNS_15DictionaryValueE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, i32)* @_ZNK4base9Histogram6rangesEj to i8*), i8* bitcast (i32 (%"class.base::Histogram"*)* @_ZNK4base9Histogram12bucket_countEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::LinearHistogram"*, i32)* @_ZNK4base15LinearHistogram19GetAsciiBucketRangeEj to i8*)] }, align 8
@.str.16 = private unnamed_addr constant [36 x i8] c"ValidateCustomRanges(custom_ranges)\00", align 1
@_ZTVN4base15CustomHistogramE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Histogram"*)* @_ZN4base9HistogramD2Ev to i8*), i8* bitcast (void (%"class.base::CustomHistogram"*)* @_ZN4base15CustomHistogramD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"*)* @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i64 (%"class.base::Histogram"*)* @_ZNK4base9Histogram9name_hashEv to i8*), i8* bitcast (i32 (%"class.base::CustomHistogram"*)* @_ZNK4base15CustomHistogram16GetHistogramTypeEv to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, i32, i32, i32)* @_ZNK4base9Histogram24HasConstructionArgumentsEiij to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32)* @_ZN4base9Histogram3AddEi to i8*), i8* bitcast (void (%"class.base::Histogram"*, i32, i32)* @_ZN4base9Histogram8AddCountEii to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZN4base9Histogram10AddSamplesERKNS_16HistogramSamplesE to i8*), i8* bitcast (i1 (%"class.base::Histogram"*, %"class.base::PickleIterator"*)* @_ZN4base9Histogram20AddSamplesFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, %"class.base::HistogramSamples"*)* @_ZNK4base9Histogram14FindCorruptionERKNS_16HistogramSamplesE to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram15SnapshotSamplesEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZN4base9Histogram13SnapshotDeltaEv to i8*), i8* bitcast (%"class.base::HistogramSamples"* (%"class.base::Histogram"*)* @_ZNK4base9Histogram18SnapshotFinalDeltaEv to i8*), i8* bitcast (void (%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*)* @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.base::DictionaryValue"*, %"class.base::Histogram"*)* @_ZNK4base9Histogram11ToGraphDictEv to i8*), i8* bitcast (void (%"class.base::Histogram"*)* @_ZNK4base9Histogram25ValidateHistogramContentsEv to i8*), i8* bitcast (void (%"class.base::CustomHistogram"*, %"class.base::Pickle"*)* @_ZNK4base15CustomHistogram17SerializeInfoImplEPNS_6PickleE to i8*), i8* bitcast (void (%"class.base::Histogram"*, %"class.base::DictionaryValue"*)* @_ZNK4base9Histogram13GetParametersEPNS_15DictionaryValueE to i8*), i8* bitcast (i32 (%"class.base::Histogram"*, i32)* @_ZNK4base9Histogram6rangesEj to i8*), i8* bitcast (i32 (%"class.base::Histogram"*)* @_ZNK4base9Histogram12bucket_countEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::Histogram"*, i32)* @_ZNK4base9Histogram19GetAsciiBucketRangeEj to i8*)] }, align 8
@_ZTVN4base9Histogram7FactoryE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (%"class.base::BucketRanges"* (%"class.base::Histogram::Factory"*)* @_ZN4base9Histogram7Factory12CreateRangesEv to i8*), i8* bitcast (%"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)* @_ZN4base9Histogram7Factory9HeapAllocEPKNS_12BucketRangesE to i8*), i8* bitcast (void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)* @_ZN4base9Histogram7Factory13FillHistogramEPNS_13HistogramBaseE to i8*)] }, comdat, align 8
@.str.17 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZN4base18StatisticsRecorder22have_active_callbacks_E = external local_unnamed_addr global %"struct.std::__1::atomic.18", align 1
@_ZTVN4base15LinearHistogram7FactoryE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (%"class.base::BucketRanges"* (%"class.base::LinearHistogram::Factory"*)* @_ZN4base15LinearHistogram7Factory12CreateRangesEv to i8*), i8* bitcast (%"class.base::HistogramBase"* (%"class.base::LinearHistogram::Factory"*, %"class.base::BucketRanges"*)* @_ZN4base15LinearHistogram7Factory9HeapAllocEPKNS_12BucketRangesE to i8*), i8* bitcast (void (%"class.base::LinearHistogram::Factory"*, %"class.base::HistogramBase"*)* @_ZN4base15LinearHistogram7Factory13FillHistogramEPNS_13HistogramBaseE to i8*)] }, comdat, align 8
@_ZTVN4base16BooleanHistogram7FactoryE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (%"class.base::BucketRanges"* (%"class.base::BooleanHistogram::Factory"*)* @_ZN4base16BooleanHistogram7Factory12CreateRangesEv to i8*), i8* bitcast (%"class.base::HistogramBase"* (%"class.base::BooleanHistogram::Factory"*, %"class.base::BucketRanges"*)* @_ZN4base16BooleanHistogram7Factory9HeapAllocEPKNS_12BucketRangesE to i8*), i8* bitcast (void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)* @_ZN4base9Histogram7Factory13FillHistogramEPNS_13HistogramBaseE to i8*)] }, comdat, align 8
@_ZTVN4base15CustomHistogram7FactoryE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (%"class.base::BucketRanges"* (%"class.base::CustomHistogram::Factory"*)* @_ZN4base15CustomHistogram7Factory12CreateRangesEv to i8*), i8* bitcast (%"class.base::HistogramBase"* (%"class.base::CustomHistogram::Factory"*, %"class.base::BucketRanges"*)* @_ZN4base15CustomHistogram7Factory9HeapAllocEPKNS_12BucketRangesE to i8*), i8* bitcast (void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)* @_ZN4base9Histogram7Factory13FillHistogramEPNS_13HistogramBaseE to i8*)] }, comdat, align 8
@.str.20 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4base9HistogramC1EPKciiPKNS_12BucketRangesE = hidden unnamed_addr alias void (%"class.base::Histogram"*, i8*, i32, i32, %"class.base::BucketRanges"*), void (%"class.base::Histogram"*, i8*, i32, i32, %"class.base::BucketRanges"*)* @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE
@_ZN4base9HistogramC1EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_ = hidden unnamed_addr alias void (%"class.base::Histogram"*, i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*), void (%"class.base::Histogram"*, i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*)* @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_
@_ZN4base9HistogramD1Ev = hidden unnamed_addr alias void (%"class.base::Histogram"*), void (%"class.base::Histogram"*)* @_ZN4base9HistogramD2Ev
@_ZN4base15LinearHistogramD1Ev = hidden unnamed_addr alias void (%"class.base::LinearHistogram"*), void (%"class.base::LinearHistogram"*)* @_ZN4base15LinearHistogramD2Ev
@_ZN4base15LinearHistogramC1EPKciiPKNS_12BucketRangesE = hidden unnamed_addr alias void (%"class.base::LinearHistogram"*, i8*, i32, i32, %"class.base::BucketRanges"*), void (%"class.base::LinearHistogram"*, i8*, i32, i32, %"class.base::BucketRanges"*)* @_ZN4base15LinearHistogramC2EPKciiPKNS_12BucketRangesE
@_ZN4base15LinearHistogramC1EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_ = hidden unnamed_addr alias void (%"class.base::LinearHistogram"*, i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*), void (%"class.base::LinearHistogram"*, i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*)* @_ZN4base15LinearHistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_
@_ZN4base21ScaledLinearHistogramC1EPKciijii = hidden unnamed_addr alias void (%"class.base::ScaledLinearHistogram"*, i8*, i32, i32, i32, i32, i32), void (%"class.base::ScaledLinearHistogram"*, i8*, i32, i32, i32, i32, i32)* @_ZN4base21ScaledLinearHistogramC2EPKciijii
@_ZN4base21ScaledLinearHistogramC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiijii = hidden unnamed_addr alias void (%"class.base::ScaledLinearHistogram"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, i32), void (%"class.base::ScaledLinearHistogram"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, i32)* @_ZN4base21ScaledLinearHistogramC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiijii
@_ZN4base21ScaledLinearHistogramD1Ev = hidden unnamed_addr alias void (%"class.base::ScaledLinearHistogram"*), void (%"class.base::ScaledLinearHistogram"*)* @_ZN4base21ScaledLinearHistogramD2Ev
@_ZN4base16BooleanHistogramC1EPKcPKNS_12BucketRangesE = hidden unnamed_addr alias void (%"class.base::BooleanHistogram"*, i8*, %"class.base::BucketRanges"*), void (%"class.base::BooleanHistogram"*, i8*, %"class.base::BucketRanges"*)* @_ZN4base16BooleanHistogramC2EPKcPKNS_12BucketRangesE
@_ZN4base16BooleanHistogramC1EPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_ = hidden unnamed_addr alias void (%"class.base::BooleanHistogram"*, i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*), void (%"class.base::BooleanHistogram"*, i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*)* @_ZN4base16BooleanHistogramC2EPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_
@_ZN4base15CustomHistogramC1EPKcPKNS_12BucketRangesE = hidden unnamed_addr alias void (%"class.base::CustomHistogram"*, i8*, %"class.base::BucketRanges"*), void (%"class.base::CustomHistogram"*, i8*, %"class.base::BucketRanges"*)* @_ZN4base15CustomHistogramC2EPKcPKNS_12BucketRangesE
@_ZN4base15CustomHistogramC1EPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_ = hidden unnamed_addr alias void (%"class.base::CustomHistogram"*, i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*), void (%"class.base::CustomHistogram"*, i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"*, %"class.base::DelayedPersistentAllocation"*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*)* @_ZN4base15CustomHistogramC2EPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = tail call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder13FindHistogramENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %12, i64 %16) #15
  %18 = icmp eq %"class.base::HistogramBase"* %17, null
  br i1 %18, label %19, label %107

19:                                               ; preds = %1
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %23 to i64
  %32 = select i1 %24, i64 %30, i64 %31
  %33 = tail call i32 @_ZN4base22HashMetricNameAs32BitsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %28, i64 %32) #15
  %34 = tail call zeroext i1 @_ZN4base18StatisticsRecorder21ShouldRecordHistogramEj(i32 %33) #15
  br i1 %34, label %35, label %104

35:                                               ; preds = %19
  %36 = bitcast %"class.base::Histogram::Factory"* %0 to %"class.base::BucketRanges"* (%"class.base::Histogram::Factory"*)***
  %37 = load %"class.base::BucketRanges"* (%"class.base::Histogram::Factory"*)**, %"class.base::BucketRanges"* (%"class.base::Histogram::Factory"*)*** %36, align 8
  %38 = load %"class.base::BucketRanges"* (%"class.base::Histogram::Factory"*)*, %"class.base::BucketRanges"* (%"class.base::Histogram::Factory"*)** %37, align 8
  %39 = tail call %"class.base::BucketRanges"* %38(%"class.base::Histogram::Factory"* %0) #15
  %40 = tail call %"class.base::BucketRanges"* @_ZN4base18StatisticsRecorder31RegisterOrDeleteDuplicateRangesEPKNS_12BucketRangesE(%"class.base::BucketRanges"* %39) #15
  %41 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %65

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %40, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast i32** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::BucketRanges"* %40 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = lshr exact i64 %50, 2
  %52 = trunc i64 %51 to i32
  %53 = add i32 %52, -1
  store i32 %53, i32* %41, align 4
  %54 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %40, i64 0, i32 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 3
  store i32 %57, i32* %58, align 4
  %59 = add nuw nsw i64 %51, 4294967294
  %60 = and i64 %59, 4294967295
  %61 = load i32*, i32** %54, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %60
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 4
  store i32 %63, i32* %64, align 8
  br label %65

65:                                               ; preds = %44, %35
  %66 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #15
  store i32 0, i32* %2, align 4
  %67 = tail call %"class.base::GlobalHistogramAllocator"* @_ZN4base24GlobalHistogramAllocator3GetEv() #15
  %68 = bitcast %"class.base::GlobalHistogramAllocator"* %67 to %"class.base::PersistentHistogramAllocator"*
  %69 = icmp eq %"class.base::GlobalHistogramAllocator"* %67, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %74 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 6
  %79 = load i32, i32* %78, align 8
  %80 = call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator17AllocateHistogramENS_13HistogramTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiiPKNS_12BucketRangesEiPj(%"class.base::PersistentHistogramAllocator"* nonnull %68, i32 %72, %"class.std::__1::basic_string"* dereferenceable(24) %73, i32 %75, i32 %77, %"class.base::BucketRanges"* %40, i32 %79, i32* nonnull %2) #15
  %81 = icmp eq %"class.base::HistogramBase"* %80, null
  br i1 %81, label %82, label %92

82:                                               ; preds = %70, %65
  %83 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 6
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, -65
  store i32 %85, i32* %83, align 8
  %86 = bitcast %"class.base::Histogram::Factory"* %0 to %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)***
  %87 = load %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)**, %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)*, %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)** %87, i64 1
  %89 = load %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)*, %"class.base::HistogramBase"* (%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*)** %88, align 8
  %90 = call %"class.base::HistogramBase"* %89(%"class.base::Histogram::Factory"* %0, %"class.base::BucketRanges"* %40) #15
  %91 = load i32, i32* %83, align 8
  call void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"* %90, i32 %91) #15
  br label %92

92:                                               ; preds = %70, %82
  %93 = phi %"class.base::HistogramBase"* [ %80, %70 ], [ %90, %82 ]
  %94 = bitcast %"class.base::Histogram::Factory"* %0 to void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)***
  %95 = load void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)**, void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)*, void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)** %95, i64 2
  %97 = load void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)*, void (%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*)** %96, align 8
  call void %97(%"class.base::Histogram::Factory"* %0, %"class.base::HistogramBase"* %93) #15
  %98 = call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"* %93) #15
  %99 = load i32, i32* %2, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %92
  %102 = icmp eq %"class.base::HistogramBase"* %98, %93
  call void @_ZN4base28PersistentHistogramAllocator17FinalizeHistogramEjb(%"class.base::PersistentHistogramAllocator"* %68, i32 %99, i1 zeroext %102) #15
  br label %103

103:                                              ; preds = %92, %101
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #15
  br label %107

104:                                              ; preds = %19
  %105 = tail call %"class.base::DummyHistogram"* @_ZN4base14DummyHistogram11GetInstanceEv() #15
  %106 = bitcast %"class.base::DummyHistogram"* %105 to %"class.base::HistogramBase"*
  br label %149

107:                                              ; preds = %103, %1
  %108 = phi %"class.base::HistogramBase"* [ %17, %1 ], [ %98, %103 ]
  %109 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = bitcast %"class.base::HistogramBase"* %108 to i32 (%"class.base::HistogramBase"*)***
  %112 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %111, align 8
  %113 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %112, i64 4
  %114 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %113, align 8
  %115 = call i32 %114(%"class.base::HistogramBase"* %108) #15
  %116 = icmp eq i32 %110, %115
  br i1 %116, label %117, label %131

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 5
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %149, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 4
  %125 = load i32, i32* %124, align 8
  %126 = bitcast %"class.base::HistogramBase"* %108 to i1 (%"class.base::HistogramBase"*, i32, i32, i32)***
  %127 = load i1 (%"class.base::HistogramBase"*, i32, i32, i32)**, i1 (%"class.base::HistogramBase"*, i32, i32, i32)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.base::HistogramBase"*, i32, i32, i32)*, i1 (%"class.base::HistogramBase"*, i32, i32, i32)** %127, i64 5
  %129 = load i1 (%"class.base::HistogramBase"*, i32, i32, i32)*, i1 (%"class.base::HistogramBase"*, i32, i32, i32)** %128, align 8
  %130 = call zeroext i1 %129(%"class.base::HistogramBase"* %108, i32 %123, i32 %125, i32 %119) #15
  br i1 %130, label %149, label %131

131:                                              ; preds = %107, %121
  %132 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  %140 = select i1 %136, i8* %138, i8* %139
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = zext i8 %135 to i64
  %144 = select i1 %136, i64 %142, i64 %143
  %145 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %140, i64 %144) #15
  %146 = trunc i64 %145 to i32
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 %146) #15
  %147 = call %"class.base::DummyHistogram"* @_ZN4base14DummyHistogram11GetInstanceEv() #15
  %148 = bitcast %"class.base::DummyHistogram"* %147 to %"class.base::HistogramBase"*
  br label %149

149:                                              ; preds = %104, %121, %117, %131
  %150 = phi %"class.base::HistogramBase"* [ %148, %131 ], [ %106, %104 ], [ %108, %117 ], [ %108, %121 ]
  ret %"class.base::HistogramBase"* %150
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder13FindHistogramENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base18StatisticsRecorder21ShouldRecordHistogramEj(i32) local_unnamed_addr #2

declare i32 @_ZN4base22HashMetricNameAs32BitsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare %"class.base::DummyHistogram"* @_ZN4base14DummyHistogram11GetInstanceEv() local_unnamed_addr #2

declare %"class.base::BucketRanges"* @_ZN4base18StatisticsRecorder31RegisterOrDeleteDuplicateRangesEPKNS_12BucketRangesE(%"class.base::BucketRanges"*) local_unnamed_addr #2

declare %"class.base::GlobalHistogramAllocator"* @_ZN4base24GlobalHistogramAllocator3GetEv() local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator17AllocateHistogramENS_13HistogramTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiiPKNS_12BucketRangesEiPj(%"class.base::PersistentHistogramAllocator"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.base::BucketRanges"*, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"*, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"*) local_unnamed_addr #2

declare void @_ZN4base28PersistentHistogramAllocator17FinalizeHistogramEjb(%"class.base::PersistentHistogramAllocator"*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #2

declare i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Histogram::Factory", align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %17, i64 %21, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %23 = bitcast %"class.base::Histogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #15
  %24 = load i32, i32* %6, align 4
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %8, align 4
  %27 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %28, align 8
  %29 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 2
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 3
  store i32 %24, i32* %30, align 4
  %31 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 4
  store i32 %25, i32* %31, align 8
  %32 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 5
  store i32 %26, i32* %32, align 4
  %33 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 6
  store i32 %4, i32* %33, align 8
  %34 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #15
  ret %"class.base::HistogramBase"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8*, i64, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %2, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  store i32 %7, i32* %2, align 4
  store i32 %6, i32* %3, align 4
  %10 = load i32, i32* %2, align 4
  br label %11

11:                                               ; preds = %9, %5
  %12 = phi i32 [ %6, %9 ], [ %7, %5 ]
  %13 = phi i32 [ %10, %9 ], [ %6, %5 ]
  %14 = phi i8 [ 0, %9 ], [ 1, %5 ]
  %15 = icmp slt i32 %13, 1
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  store i32 1, i32* %2, align 4
  %17 = load i32, i32* %3, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i32 1, i32* %3, align 4
  br label %20

20:                                               ; preds = %16, %19, %11
  %21 = phi i32 [ %17, %16 ], [ 1, %19 ], [ %12, %11 ]
  %22 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = add nsw i32 %22, -1
  store i32 %25, i32* %3, align 4
  br label %26

26:                                               ; preds = %20, %24
  %27 = load i32, i32* %4, align 4
  %28 = icmp ugt i32 %27, 1002
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1) #15
  %31 = trunc i64 %30 to i32
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 %31) #15
  %32 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 16, i32 0) #15
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  store i32 102, i32* %4, align 4
  br label %34

34:                                               ; preds = %29, %33, %26
  %35 = phi i8 [ 0, %33 ], [ %14, %29 ], [ %14, %26 ]
  %36 = load i32, i32* %3, align 4
  %37 = load i32, i32* %2, align 4
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = add nsw i32 %36, 1
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %39, %34
  %42 = phi i32 [ %40, %39 ], [ %36, %34 ]
  %43 = phi i8 [ 0, %39 ], [ %35, %34 ]
  %44 = load i32, i32* %4, align 4
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  store i32 3, i32* %4, align 4
  %47 = load i32, i32* %3, align 4
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi i32 [ %47, %46 ], [ %42, %41 ]
  %50 = phi i32 [ 3, %46 ], [ %44, %41 ]
  %51 = phi i8 [ 0, %46 ], [ %43, %41 ]
  %52 = load i32, i32* %2, align 4
  %53 = sub nsw i32 %49, %52
  %54 = add nsw i32 %53, 2
  %55 = icmp ugt i32 %50, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %48
  store i32 %54, i32* %4, align 4
  br label %60

57:                                               ; preds = %48
  %58 = and i8 %51, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57, %56
  %61 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1) #15
  %62 = trunc i64 %61 to i32
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 %62) #15
  br label %63

63:                                               ; preds = %57, %60
  %64 = phi i1 [ false, %60 ], [ true, %57 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Histogram::Factory", align 8
  %10 = alloca %"class.base::TimeDelta", align 8
  %11 = alloca %"class.base::TimeDelta", align 8
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %10, i64 0, i32 0
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %10) #15
  %15 = trunc i64 %14 to i32
  %16 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %11) #15
  %17 = trunc i64 %16 to i32
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store i32 %15, i32* %6, align 4
  store i32 %17, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %23 to i64
  %32 = select i1 %24, i64 %30, i64 %31
  %33 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %28, i64 %32, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %34 = bitcast %"class.base::Histogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #15
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* %7, align 4
  %37 = load i32, i32* %8, align 4
  %38 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %39, align 8
  %40 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 2
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 3
  store i32 %35, i32* %41, align 4
  %42 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 4
  store i32 %36, i32* %42, align 8
  %43 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 5
  store i32 %37, i32* %43, align 4
  %44 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 6
  store i32 %4, i32* %44, align 8
  %45 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  ret %"class.base::HistogramBase"* %45
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Histogram::Factory", align 8
  %10 = trunc i64 %1 to i32
  %11 = trunc i64 %2 to i32
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 %10, i32* %6, align 4
  store i32 %11, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %17 to i64
  %26 = select i1 %18, i64 %24, i64 %25
  %27 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %22, i64 %26, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %28 = bitcast %"class.base::Histogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #15
  %29 = load i32, i32* %6, align 4
  %30 = load i32, i32* %7, align 4
  %31 = load i32, i32* %8, align 4
  %32 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %33, align 8
  %34 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 2
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 3
  store i32 %29, i32* %35, align 4
  %36 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 4
  store i32 %30, i32* %36, align 8
  %37 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 5
  store i32 %31, i32* %37, align 4
  %38 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 6
  store i32 %4, i32* %38, align 8
  %39 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  ret %"class.base::HistogramBase"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Histogram::Factory", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = tail call i64 @strlen(i8* %0) #15
  %13 = icmp ugt i64 %12, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #16
  unreachable

16:                                               ; preds = %5
  %17 = icmp ult i64 %12, 23
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %12, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %25, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %32

27:                                               ; preds = %16
  %28 = trunc i64 %12 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27, %18
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %26, %18 ]
  %34 = phi i8* [ %11, %27 ], [ %21, %18 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %0, i64 %12, i1 false) #15
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %33, %32 ]
  %37 = phi i8* [ %11, %27 ], [ %34, %32 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %12
  store i8 0, i8* %38, align 1
  %39 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  %40 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40)
  %41 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41)
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = select i1 %44, i8* %46, i8* %11
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %43 to i64
  %51 = select i1 %44, i64 %49, i64 %50
  %52 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %47, i64 %51, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %53 = bitcast %"class.base::Histogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #15
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* %7, align 4
  %56 = load i32, i32* %8, align 4
  %57 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 1
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %58, align 8
  %59 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 2
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 3
  store i32 %54, i32* %60, align 4
  %61 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 4
  store i32 %55, i32* %61, align 8
  %62 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 5
  store i32 %56, i32* %62, align 4
  %63 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 6
  store i32 %4, i32* %63, align 8
  %64 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41)
  %65 = load i8, i8* %42, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %35
  %68 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %35, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  ret %"class.base::HistogramBase"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* nocapture readonly, i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Histogram::Factory", align 8
  %10 = alloca %"class.base::TimeDelta", align 8
  %11 = alloca %"class.base::TimeDelta", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  %14 = tail call i64 @strlen(i8* %0) #15
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %5
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #17
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %13, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %0, i64 %14, i1 false) #15
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %13, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  %41 = bitcast %"class.base::TimeDelta"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = bitcast %"class.base::TimeDelta"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %10, i64 0, i32 0
  store i64 %1, i64* %43, align 8
  %44 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  store i64 %2, i64* %44, align 8
  %45 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %10) #15
  %46 = trunc i64 %45 to i32
  %47 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %11) #15
  %48 = trunc i64 %47 to i32
  %49 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #15
  %50 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #15
  %51 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #15
  store i32 %46, i32* %6, align 4
  store i32 %48, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = select i1 %54, i8* %56, i8* %13
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %53 to i64
  %61 = select i1 %54, i64 %59, i64 %60
  %62 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %57, i64 %61, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %63 = bitcast %"class.base::Histogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #15
  %64 = load i32, i32* %6, align 4
  %65 = load i32, i32* %7, align 4
  %66 = load i32, i32* %8, align 4
  %67 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 1
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %68, align 8
  %69 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 2
  store i32 0, i32* %69, align 8
  %70 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 3
  store i32 %64, i32* %70, align 4
  %71 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 4
  store i32 %65, i32* %71, align 8
  %72 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 5
  store i32 %66, i32* %72, align 4
  %73 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 6
  store i32 %4, i32* %73, align 8
  %74 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %75 = load i8, i8* %52, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %37
  %78 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %78) #17
  br label %79

79:                                               ; preds = %37, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  ret %"class.base::HistogramBase"* %74
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* nocapture readonly, i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::Histogram::Factory", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = tail call i64 @strlen(i8* %0) #15
  %13 = icmp ugt i64 %12, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #16
  unreachable

16:                                               ; preds = %5
  %17 = icmp ult i64 %12, 23
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %12, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %25, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %32

27:                                               ; preds = %16
  %28 = trunc i64 %12 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27, %18
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %26, %18 ]
  %34 = phi i8* [ %11, %27 ], [ %21, %18 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %0, i64 %12, i1 false) #15
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %33, %32 ]
  %37 = phi i8* [ %11, %27 ], [ %34, %32 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %12
  store i8 0, i8* %38, align 1
  %39 = trunc i64 %1 to i32
  %40 = trunc i64 %2 to i32
  %41 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #15
  %42 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #15
  %43 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #15
  store i32 %39, i32* %6, align 4
  store i32 %40, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = select i1 %46, i8* %48, i8* %11
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %45 to i64
  %53 = select i1 %46, i64 %51, i64 %52
  %54 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %49, i64 %53, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %55 = bitcast %"class.base::Histogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55) #15
  %56 = load i32, i32* %6, align 4
  %57 = load i32, i32* %7, align 4
  %58 = load i32, i32* %8, align 4
  %59 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 1
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %60, align 8
  %61 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 3
  store i32 %56, i32* %62, align 4
  %63 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 4
  store i32 %57, i32* %63, align 8
  %64 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 5
  store i32 %58, i32* %64, align 4
  %65 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %9, i64 0, i32 6
  store i32 %4, i32* %65, align 8
  %66 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #15
  %67 = load i8, i8* %44, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %35
  %70 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %70) #17
  br label %71

71:                                               ; preds = %35, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  ret %"class.base::HistogramBase"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram16PersistentCreateEPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #0 align 2 {
  %9 = tail call i8* @_Znwm(i64 40) #17
  %10 = bitcast i8* %9 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* nonnull %10, i8* %0, i32 undef, i32 undef, %"class.base::BucketRanges"* %3, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %4, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %5, %"struct.base::HistogramSamples::Metadata"* %6, %"struct.base::HistogramSamples::Metadata"* %7)
  %11 = bitcast i8* %9 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9Histogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32, i32, %"class.base::BucketRanges"*) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = sitofp i32 %1 to double
  %6 = tail call double @log(double %5) #15
  %7 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 1
  store i32 %0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::BucketRanges"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = add nsw i64 %16, -1
  %18 = icmp ugt i64 %17, 2
  br i1 %18, label %19, label %48

19:                                               ; preds = %3
  %20 = bitcast double* %4 to i8*
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 2, %19 ], [ %40, %21 ]
  %23 = phi i32 [ %0, %19 ], [ %37, %21 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %24 = sitofp i32 %23 to double
  %25 = call double @log(double %24) #15
  store double %25, double* %4, align 8
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %20) #15
  %26 = load double, double* %4, align 8
  %27 = fsub double %6, %26
  %28 = sub i64 %17, %22
  %29 = uitofp i64 %28 to double
  %30 = fdiv double %27, %29
  %31 = fadd double %26, %30
  %32 = call double @exp(double %31) #15
  %33 = call double @llvm.round.f64(double %32)
  %34 = fptosi double %33 to i32
  %35 = icmp slt i32 %23, %34
  %36 = add nsw i32 %23, 1
  %37 = select i1 %35, i32 %34, i32 %36
  %38 = load i32*, i32** %7, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %22
  store i32 %37, i32* %39, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  %40 = add nuw i64 %22, 1
  %41 = icmp eq i64 %40, %17
  br i1 %41, label %42, label %21

42:                                               ; preds = %21
  %43 = load i64, i64* %11, align 8
  %44 = load i64, i64* %13, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 2
  %47 = add nsw i64 %46, -1
  br label %48

48:                                               ; preds = %42, %3
  %49 = phi i64 [ %47, %42 ], [ %17, %3 ]
  %50 = phi i64 [ %44, %42 ], [ %14, %3 ]
  %51 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %52 = inttoptr i64 %50 to i32*
  %53 = getelementptr inbounds i32, i32* %52, i64 %49
  store i32 %51, i32* %53, align 4
  call void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"* %2) #15
  ret void
}

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #4

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #5

declare void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base9Histogram14FindCorruptionERKNS_16HistogramSamplesE(%"class.base::Histogram"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::Histogram"* %0 to i32 (%"class.base::Histogram"*)***
  %4 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %4, i64 20
  %6 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %5, align 8
  %7 = tail call i32 %6(%"class.base::Histogram"* %0) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.base::Histogram"* %0 to i32 (%"class.base::Histogram"*, i32)***
  br label %32

11:                                               ; preds = %32, %2
  %12 = phi i32 [ 0, %2 ], [ %42, %32 ]
  %13 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %13, align 8
  %15 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %14, i64 0, i32 2
  %16 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK4base12BucketRanges16HasValidChecksumEv(%"class.base::BucketRanges"* %16) #15
  %18 = xor i1 %17, true
  %19 = zext i1 %18 to i32
  %20 = or i32 %12, %19
  %21 = getelementptr inbounds %"class.base::HistogramSamples", %"class.base::HistogramSamples"* %1, i64 0, i32 1
  %22 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %21, align 8
  %23 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %22, i64 0, i32 2
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = bitcast %"class.base::HistogramSamples"* %1 to i32 (%"class.base::HistogramSamples"*)***
  %26 = load i32 (%"class.base::HistogramSamples"*)**, i32 (%"class.base::HistogramSamples"*)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.base::HistogramSamples"*)*, i32 (%"class.base::HistogramSamples"*)** %26, i64 4
  %28 = load i32 (%"class.base::HistogramSamples"*)*, i32 (%"class.base::HistogramSamples"*)** %27, align 8
  %29 = tail call i32 %28(%"class.base::HistogramSamples"* %1) #15
  %30 = sub nsw i32 %24, %29
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %59, label %49

32:                                               ; preds = %9, %32
  %33 = phi i32 [ 0, %9 ], [ %42, %32 ]
  %34 = phi i32 [ 0, %9 ], [ %43, %32 ]
  %35 = phi i32 [ -1, %9 ], [ %39, %32 ]
  %36 = load i32 (%"class.base::Histogram"*, i32)**, i32 (%"class.base::Histogram"*, i32)*** %10, align 8
  %37 = getelementptr inbounds i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %36, i64 19
  %38 = load i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %37, align 8
  %39 = tail call i32 %38(%"class.base::Histogram"* %0, i32 %34) #15
  %40 = icmp slt i32 %35, %39
  %41 = or i32 %33, 2
  %42 = select i1 %40, i32 %33, i32 %41
  %43 = add nuw i32 %34, 1
  %44 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %3, align 8
  %45 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %44, i64 20
  %46 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %45, align 8
  %47 = tail call i32 %46(%"class.base::Histogram"* %0) #15
  %48 = icmp ult i32 %43, %47
  br i1 %48, label %32, label %11

49:                                               ; preds = %11
  %50 = icmp sgt i32 %30, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %49
  %52 = icmp sgt i32 %30, 5
  %53 = or i32 %20, 4
  %54 = select i1 %52, i32 %53, i32 %20
  br label %59

55:                                               ; preds = %49
  %56 = icmp slt i32 %30, -5
  %57 = or i32 %20, 8
  %58 = select i1 %56, i32 %57, i32 %20
  ret i32 %58

59:                                               ; preds = %51, %11
  %60 = phi i32 [ %20, %11 ], [ %54, %51 ]
  ret i32 %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::BucketRanges"* @_ZNK4base9Histogram13bucket_rangesEv(%"class.base::Histogram"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %3, i64 0, i32 2
  %5 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %4, align 8
  ret %"class.base::BucketRanges"* %5
}

declare zeroext i1 @_ZNK4base12BucketRanges16HasValidChecksumEv(%"class.base::BucketRanges"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base9Histogram12declared_minEv(%"class.base::Histogram"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %3, i64 0, i32 2
  %5 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %4, align 8
  %6 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::BucketRanges"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = add nsw i64 %12, -1
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = inttoptr i64 %10 to i32*
  %17 = getelementptr inbounds i32, i32* %16, i64 1
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %1, %15
  %20 = phi i32 [ %18, %15 ], [ -1, %1 ]
  ret i32 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base9Histogram12declared_maxEv(%"class.base::Histogram"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %3, i64 0, i32 2
  %5 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %4, align 8
  %6 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::BucketRanges"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = add nsw i64 %12, -1
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = inttoptr i64 %10 to i32*
  %17 = add nsw i64 %12, -2
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %15
  %21 = phi i32 [ %19, %15 ], [ -1, %1 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base9Histogram6rangesEj(%"class.base::Histogram"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %3, align 8
  %5 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %4, i64 0, i32 2
  %6 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base9Histogram12bucket_countEv(%"class.base::Histogram"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %3, i64 0, i32 2
  %5 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %4, align 8
  %6 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::BucketRanges"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 2
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, -1
  ret i32 %14
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base9Histogram9name_hashEv(%"class.base::Histogram"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %3, i64 0, i32 0, i32 1
  %5 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %4, align 8
  %6 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  ret i64 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base9Histogram16GetHistogramTypeEv(%"class.base::Histogram"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base9Histogram24HasConstructionArgumentsEiij(%"class.base::Histogram"*, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.base::Histogram"* %0 to i32 (%"class.base::Histogram"*)***
  %6 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %6, i64 20
  %8 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %7, align 8
  %9 = tail call i32 %8(%"class.base::Histogram"* %0) #15
  %10 = icmp eq i32 %9, %3
  br i1 %10, label %11, label %41

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %12, align 8
  %14 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %13, i64 0, i32 2
  %15 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %14, align 8
  %16 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %15, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::BucketRanges"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, -1
  %24 = icmp ult i64 %23, 2
  br i1 %24, label %29, label %25

25:                                               ; preds = %11
  %26 = inttoptr i64 %20 to i32*
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %11, %25
  %30 = phi i32 [ %28, %25 ], [ -1, %11 ]
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %32, label %41

32:                                               ; preds = %29
  br i1 %24, label %38, label %33

33:                                               ; preds = %32
  %34 = inttoptr i64 %20 to i32*
  %35 = add nsw i64 %22, -2
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  %37 = load i32, i32* %36, align 4
  br label %38

38:                                               ; preds = %32, %33
  %39 = phi i32 [ %37, %33 ], [ -1, %32 ]
  %40 = icmp eq i32 %39, %2
  br label %41

41:                                               ; preds = %38, %29, %4
  %42 = phi i1 [ false, %29 ], [ false, %4 ], [ %40, %38 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9Histogram3AddEi(%"class.base::Histogram"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::Histogram"* %0 to void (%"class.base::Histogram"*, i32, i32)***
  %4 = load void (%"class.base::Histogram"*, i32, i32)**, void (%"class.base::Histogram"*, i32, i32)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.base::Histogram"*, i32, i32)*, void (%"class.base::Histogram"*, i32, i32)** %4, i64 7
  %6 = load void (%"class.base::Histogram"*, i32, i32)*, void (%"class.base::Histogram"*, i32, i32)** %5, align 8
  tail call void %6(%"class.base::Histogram"* %0, i32 %1, i32 1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9Histogram8AddCountEii(%"class.base::Histogram"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %5 = icmp sgt i32 %4, %1
  %6 = add nsw i32 %4, -1
  %7 = select i1 %5, i32 %1, i32 %6
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = icmp slt i32 %2, 1
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %12, align 8
  %14 = bitcast %"class.base::SampleVectorBase"* %13 to void (%"class.base::SampleVectorBase"*, i32, i32)***
  %15 = load void (%"class.base::SampleVectorBase"*, i32, i32)**, void (%"class.base::SampleVectorBase"*, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::SampleVectorBase"*, i32, i32)*, void (%"class.base::SampleVectorBase"*, i32, i32)** %15, i64 2
  %17 = load void (%"class.base::SampleVectorBase"*, i32, i32)*, void (%"class.base::SampleVectorBase"*, i32, i32)** %16, align 8
  tail call void %17(%"class.base::SampleVectorBase"* %13, i32 %9, i32 %2) #15
  %18 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.18", %"struct.std::__1::atomic.18"* @_ZN4base18StatisticsRecorder22have_active_callbacks_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21, !prof !2

21:                                               ; preds = %11
  %22 = bitcast %"class.base::Histogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZNK4base13HistogramBase18FindAndRunCallbackEi(%"class.base::HistogramBase"* %22, i32 %9) #15
  br label %23

23:                                               ; preds = %11, %3, %21
  ret void
}

declare void @_ZNK4base13HistogramBase18FindAndRunCallbackEi(%"class.base::HistogramBase"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZNK4base9Histogram15SnapshotSamplesEv(%"class.base::Histogram"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #17
  %3 = bitcast i8* %2 to %"class.base::SampleVector"*
  %4 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 0, i32 1
  %7 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 2
  %11 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %10, align 8
  tail call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %3, i64 %9, %"class.base::BucketRanges"* %11) #15
  %12 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %14 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %13, i64 0, i32 0
  %15 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %16 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %16, i64 5
  %18 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %17, align 8
  tail call void %18(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %14) #15
  %19 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %19, align 8
  %21 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %20, i64 0, i32 0
  %22 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %23 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %22, i64 5
  %24 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %23, align 8
  tail call void %24(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %21) #15
  ret %"class.base::HistogramSamples"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SampleVector"* @_ZNK4base9Histogram18SnapshotAllSamplesEv(%"class.base::Histogram"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #17
  %3 = bitcast i8* %2 to %"class.base::SampleVector"*
  %4 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 0, i32 1
  %7 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 2
  %11 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %10, align 8
  tail call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %3, i64 %9, %"class.base::BucketRanges"* %11) #15
  %12 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %14 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %13, i64 0, i32 0
  %15 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %16 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %16, i64 5
  %18 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %17, align 8
  tail call void %18(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %14) #15
  %19 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %19, align 8
  %21 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %20, i64 0, i32 0
  %22 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %23 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %22, i64 5
  %24 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %23, align 8
  tail call void %24(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %21) #15
  ret %"class.base::SampleVector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZN4base9Histogram13SnapshotDeltaEv(%"class.base::Histogram"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #17
  %3 = bitcast i8* %2 to %"class.base::SampleVector"*
  %4 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 0, i32 1
  %7 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 2
  %11 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %10, align 8
  tail call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %3, i64 %9, %"class.base::BucketRanges"* %11) #15
  %12 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %14 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %13, i64 0, i32 0
  %15 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %16 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %16, i64 5
  %18 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %17, align 8
  tail call void %18(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %14) #15
  %19 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %20 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %19, i64 0, i32 0
  %21 = bitcast %"class.base::SampleVectorBase"* %19 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %22 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %22, i64 7
  %24 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %23, align 8
  tail call void %24(%"class.base::HistogramSamples"* %20, %"class.base::HistogramSamples"* nonnull dereferenceable(16) %12) #15
  %25 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %26, i64 0, i32 0
  %28 = bitcast %"class.base::SampleVectorBase"* %26 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %29 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %29, i64 5
  %31 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %30, align 8
  tail call void %31(%"class.base::HistogramSamples"* %27, %"class.base::HistogramSamples"* nonnull dereferenceable(16) %12) #15
  ret %"class.base::HistogramSamples"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SampleVector"* @_ZNK4base9Histogram23SnapshotUnloggedSamplesEv(%"class.base::Histogram"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #17
  %3 = bitcast i8* %2 to %"class.base::SampleVector"*
  %4 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 0, i32 1
  %7 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 2
  %11 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %10, align 8
  tail call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %3, i64 %9, %"class.base::BucketRanges"* %11) #15
  %12 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %14 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %13, i64 0, i32 0
  %15 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %16 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %16, i64 5
  %18 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %17, align 8
  tail call void %18(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %14) #15
  ret %"class.base::SampleVector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramSamples"* @_ZNK4base9Histogram18SnapshotFinalDeltaEv(%"class.base::Histogram"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #17
  %3 = bitcast i8* %2 to %"class.base::SampleVector"*
  %4 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 0, i32 1
  %7 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %5, i64 0, i32 2
  %11 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %10, align 8
  tail call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %3, i64 %9, %"class.base::BucketRanges"* %11) #15
  %12 = bitcast i8* %2 to %"class.base::HistogramSamples"*
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %4, align 8
  %14 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %13, i64 0, i32 0
  %15 = bitcast i8* %2 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %16 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %16, i64 5
  %18 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %17, align 8
  tail call void %18(%"class.base::HistogramSamples"* nonnull %12, %"class.base::HistogramSamples"* dereferenceable(16) %14) #15
  ret %"class.base::HistogramSamples"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9Histogram10AddSamplesERKNS_16HistogramSamplesE(%"class.base::Histogram"* nocapture readonly, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %3, align 8
  %5 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %4, i64 0, i32 0
  %6 = bitcast %"class.base::SampleVectorBase"* %4 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %7 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %7, i64 5
  %9 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %8, align 8
  tail call void %9(%"class.base::HistogramSamples"* %5, %"class.base::HistogramSamples"* dereferenceable(16) %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base9Histogram20AddSamplesFromPickleEPNS_14PickleIteratorE(%"class.base::Histogram"* nocapture readonly, %"class.base::PickleIterator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %3, align 8
  %5 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %4, i64 0, i32 0
  %6 = bitcast %"class.base::SampleVectorBase"* %4 to i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)***
  %7 = load i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)**, i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)*, i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)** %7, i64 6
  %9 = load i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)*, i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.base::HistogramSamples"* %5, %"class.base::PickleIterator"* %1) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base9Histogram11ToGraphDictEv(%"class.base::DictionaryValue"* noalias sret, %"class.base::Histogram"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = tail call i8* @_Znwm(i64 56) #17
  %5 = bitcast i8* %4 to %"class.base::SampleVector"*
  %6 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %6, align 8
  %8 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %7, i64 0, i32 0, i32 1
  %9 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %7, i64 0, i32 2
  %13 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %12, align 8
  tail call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %5, i64 %11, %"class.base::BucketRanges"* %13) #15
  %14 = bitcast i8* %4 to %"class.base::HistogramSamples"*
  %15 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %6, align 8
  %16 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %15, i64 0, i32 0
  %17 = bitcast i8* %4 to void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)***
  %18 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %18, i64 5
  %20 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %19, align 8
  tail call void %20(%"class.base::HistogramSamples"* nonnull %14, %"class.base::HistogramSamples"* dereferenceable(16) %16) #15
  %21 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %21, align 8
  %23 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %22, i64 0, i32 0
  %24 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*** %17, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %24, i64 5
  %26 = load void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)** %25, align 8
  tail call void %26(%"class.base::HistogramSamples"* nonnull %14, %"class.base::HistogramSamples"* dereferenceable(16) %23) #15
  %27 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %1, i64 0, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %2
  %31 = tail call i64 @strlen(i8* nonnull %28) #15
  br label %35

32:                                               ; preds = %2
  %33 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #15
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  br label %35

35:                                               ; preds = %30, %32
  %36 = phi i64 [ 0, %32 ], [ %31, %30 ]
  %37 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  call void @_ZNK4base16HistogramSamples11ToGraphDictENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* sret %0, %"class.base::HistogramSamples"* nonnull %14, i8* %28, i64 %36, i32 %38) #15
  %39 = bitcast i8* %4 to void (%"class.base::SampleVector"*)***
  %40 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %40, i64 1
  %42 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %41, align 8
  call void %42(%"class.base::SampleVector"* nonnull %5) #15
  ret void
}

declare void @_ZNK4base16HistogramSamples11ToGraphDictENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* sret, %"class.base::HistogramSamples"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base9Histogram25ValidateHistogramContentsEv(%"class.base::Histogram"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %9, align 8
  %11 = icmp eq %"class.base::SampleVectorBase"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 580, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)) #15
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %15 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %9, align 8
  br label %16

16:                                               ; preds = %1, %12
  %17 = phi %"class.base::SampleVectorBase"* [ %10, %1 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %17, i64 0, i32 2
  %19 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %18, align 8
  %20 = icmp eq %"class.base::BucketRanges"* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 581, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #15
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  br label %24

24:                                               ; preds = %16, %21
  %25 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  %27 = icmp eq %"class.base::SampleVectorBase"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 582, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #15
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %31 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  br label %32

32:                                               ; preds = %24, %28
  %33 = phi %"class.base::SampleVectorBase"* [ %26, %24 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %33, i64 0, i32 2
  %35 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %34, align 8
  %36 = icmp eq %"class.base::BucketRanges"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 583, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #15
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #15
  %40 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  br label %41

41:                                               ; preds = %32, %37
  %42 = phi %"class.base::SampleVectorBase"* [ %33, %32 ], [ %40, %37 ]
  %43 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %44, align 8
  %45 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %42, i64 0, i32 0, i32 1
  %46 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %45, align 8
  %47 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %46, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* null, i8** %44, align 8
  br label %61

52:                                               ; preds = %41
  %53 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  %54 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i8* %53, i8* %54) #15
  %55 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* %56, i8** %44, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 584, %"class.logging::CheckOpResult"* nonnull %7) #15
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  br label %61

61:                                               ; preds = %51, %52, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base9Histogram17SerializeInfoImplEPNS_6PickleE(%"class.base::Histogram"*, %"class.base::Pickle"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %15 = icmp eq i8* %12, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = tail call i64 @strlen(i8* nonnull %12) #15
  store i64 %17, i64* %14, align 8
  br label %21

18:                                               ; preds = %2
  store i64 0, i64* %14, align 8
  %19 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #15
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  br label %21

21:                                               ; preds = %16, %18
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  %22 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  store i32 %23, i32* %6, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %26, i64 0, i32 2
  %28 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %27, align 8
  %29 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %28, i64 0, i32 0, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::BucketRanges"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 2
  %36 = add nsw i64 %35, -1
  %37 = icmp ult i64 %36, 2
  br i1 %37, label %42, label %38

38:                                               ; preds = %21
  %39 = inttoptr i64 %33 to i32*
  %40 = getelementptr inbounds i32, i32* %39, i64 1
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %21, %38
  %43 = phi i32 [ %41, %38 ], [ -1, %21 ]
  %44 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44)
  store i32 %43, i32* %5, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %44) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44)
  %45 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  %46 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %45, i64 0, i32 2
  %47 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %46, align 8
  %48 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %47, i64 0, i32 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.base::BucketRanges"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 2
  %55 = add nsw i64 %54, -1
  %56 = icmp ult i64 %55, 2
  br i1 %56, label %62, label %57

57:                                               ; preds = %42
  %58 = inttoptr i64 %52 to i32*
  %59 = add nsw i64 %54, -2
  %60 = getelementptr inbounds i32, i32* %58, i64 %59
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %42, %57
  %63 = phi i32 [ %61, %57 ], [ -1, %42 ]
  %64 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store i32 %63, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %64) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  %65 = bitcast %"class.base::Histogram"* %0 to i32 (%"class.base::Histogram"*)***
  %66 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %66, i64 20
  %68 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %67, align 8
  %69 = call i32 %68(%"class.base::Histogram"* %0) #15
  %70 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  store i32 %69, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %70) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70)
  %71 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %25, align 8
  %72 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %71, i64 0, i32 2
  %73 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %72, align 8
  %74 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76)
  store i32 %75, i32* %8, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %76) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76)
  ret void
}

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"*, i8*, i32, i32, %"class.base::BucketRanges"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.base::Histogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"* %7, i8* %1) #15
  %8 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2
  %11 = icmp eq i8* %1, null
  %12 = bitcast %"class.std::__1::unique_ptr.36"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br i1 %11, label %15, label %13

13:                                               ; preds = %5
  %14 = tail call i64 @strlen(i8* nonnull %1) #15
  br label %18

15:                                               ; preds = %5
  %16 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #15
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi i64 [ 0, %15 ], [ %14, %13 ]
  %20 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %19) #15
  %21 = call i8* @_Znwm(i64 56) #17
  %22 = bitcast i8* %21 to %"class.base::SampleVector"*
  call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %22, i64 %20, %"class.base::BucketRanges"* %4) #15
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %9, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.36"* %9 to i8**
  store i8* %21, i8** %25, align 8
  %26 = icmp eq %"class.base::SampleVectorBase"* %24, null
  %27 = bitcast i8* %21 to %"class.base::SampleVectorBase"*
  br i1 %26, label %34, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.base::SampleVectorBase"* %24 to void (%"class.base::SampleVectorBase"*)***
  %30 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %30, i64 1
  %32 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %31, align 8
  call void %32(%"class.base::SampleVectorBase"* nonnull %24) #15
  %33 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %23, align 8
  br label %34

34:                                               ; preds = %28, %18
  %35 = phi %"class.base::SampleVectorBase"* [ %33, %28 ], [ %27, %18 ]
  %36 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %35, i64 0, i32 0, i32 1
  %37 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %36, align 8
  %38 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %37, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = call i8* @_Znwm(i64 56) #17
  %41 = bitcast i8* %40 to %"class.base::SampleVector"*
  call void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %41, i64 %39, %"class.base::BucketRanges"* %4) #15
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %10, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.36"* %10 to i8**
  store i8* %40, i8** %44, align 8
  %45 = icmp eq %"class.base::SampleVectorBase"* %43, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %34
  %47 = bitcast %"class.base::SampleVectorBase"* %43 to void (%"class.base::SampleVectorBase"*)***
  %48 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %48, i64 1
  %50 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %49, align 8
  call void %50(%"class.base::SampleVectorBase"* nonnull %43) #15
  br label %51

51:                                               ; preds = %46, %34
  ret void
}

declare void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"*, i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #0 align 2 {
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = bitcast %"class.base::Histogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseC2EPKc(%"class.base::HistogramBase"* %11, i8* %1) #15
  %12 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2
  %15 = icmp eq i8* %1, null
  %16 = bitcast %"class.std::__1::unique_ptr.36"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  br i1 %15, label %19, label %17

17:                                               ; preds = %9
  %18 = tail call i64 @strlen(i8* nonnull %1) #15
  br label %22

19:                                               ; preds = %9
  %20 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi i64 [ 0, %19 ], [ %18, %17 ]
  %24 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %23) #15
  %25 = call i8* @_Znwm(i64 64) #17
  %26 = bitcast i8* %25 to %"class.base::PersistentSampleVector"*
  call void @_ZN4base22PersistentSampleVectorC1EmPKNS_12BucketRangesEPNS_16HistogramSamples8MetadataERKNS_27DelayedPersistentAllocationE(%"class.base::PersistentSampleVector"* nonnull %26, i64 %24, %"class.base::BucketRanges"* %4, %"struct.base::HistogramSamples::Metadata"* %7, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %5) #15
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %13, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.36"* %13 to i8**
  store i8* %25, i8** %29, align 8
  %30 = icmp eq %"class.base::SampleVectorBase"* %28, null
  %31 = bitcast i8* %25 to %"class.base::SampleVectorBase"*
  br i1 %30, label %38, label %32

32:                                               ; preds = %22
  %33 = bitcast %"class.base::SampleVectorBase"* %28 to void (%"class.base::SampleVectorBase"*)***
  %34 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %34, i64 1
  %36 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %35, align 8
  call void %36(%"class.base::SampleVectorBase"* nonnull %28) #15
  %37 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %27, align 8
  br label %38

38:                                               ; preds = %32, %22
  %39 = phi %"class.base::SampleVectorBase"* [ %37, %32 ], [ %31, %22 ]
  %40 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %39, i64 0, i32 0, i32 1
  %41 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %40, align 8
  %42 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %41, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = call i8* @_Znwm(i64 64) #17
  %45 = bitcast i8* %44 to %"class.base::PersistentSampleVector"*
  call void @_ZN4base22PersistentSampleVectorC1EmPKNS_12BucketRangesEPNS_16HistogramSamples8MetadataERKNS_27DelayedPersistentAllocationE(%"class.base::PersistentSampleVector"* nonnull %45, i64 %43, %"class.base::BucketRanges"* %4, %"struct.base::HistogramSamples::Metadata"* %8, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %6) #15
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %14, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.36"* %14 to i8**
  store i8* %44, i8** %48, align 8
  %49 = icmp eq %"class.base::SampleVectorBase"* %47, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.base::SampleVectorBase"* %47 to void (%"class.base::SampleVectorBase"*)***
  %52 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %52, i64 1
  %54 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %53, align 8
  call void %54(%"class.base::SampleVectorBase"* nonnull %47) #15
  br label %55

55:                                               ; preds = %50, %38
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9HistogramD0Ev(%"class.base::Histogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %3, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %3, align 8
  %5 = icmp eq %"class.base::SampleVectorBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::SampleVectorBase"* %4 to void (%"class.base::SampleVectorBase"*)***
  %8 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %8, i64 1
  %10 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %9, align 8
  tail call void %10(%"class.base::SampleVectorBase"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %12, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %12, align 8
  %14 = icmp eq %"class.base::SampleVectorBase"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.base::SampleVectorBase"* %13 to void (%"class.base::SampleVectorBase"*)***
  %17 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %17, i64 1
  %19 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %18, align 8
  tail call void %19(%"class.base::SampleVectorBase"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.base::Histogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %21) #15
  %22 = bitcast %"class.base::Histogram"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base9Histogram19GetAsciiBucketRangeEj(%"class.std::__1::basic_string"* noalias sret, %"class.base::Histogram"*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.base::Histogram"* %1 to %"class.base::HistogramBase"*
  %5 = bitcast %"class.base::Histogram"* %1 to i32 (%"class.base::Histogram"*, i32)***
  %6 = load i32 (%"class.base::Histogram"*, i32)**, i32 (%"class.base::Histogram"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %6, i64 19
  %8 = load i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.base::Histogram"* %1, i32 %2) #15
  tail call void @_ZNK4base13HistogramBase25GetSimpleAsciiBucketRangeEi(%"class.std::__1::basic_string"* sret %0, %"class.base::HistogramBase"* %4, i32 %9) #15
  ret void
}

declare void @_ZNK4base13HistogramBase25GetSimpleAsciiBucketRangeEi(%"class.std::__1::basic_string"* sret, %"class.base::HistogramBase"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base9Histogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::Histogram::Factory", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #15
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #15
  store i32 -1431655766, i32* %7, align 4
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #15
  store i32 -1431655766, i32* %8, align 4
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #15
  store i32 -1431655766, i32* %9, align 4
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15
  store i32 -1431655766, i32* %10, align 4
  %18 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 -1431655766, i32* %11, align 4
  %19 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_122ReadHistogramArgumentsEPNS_14PickleIteratorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPiSB_SB_PjSC_(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* nonnull %6, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11)
  br i1 %19, label %22, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %72

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = load i32, i32* %10, align 4
  %27 = load i32, i32* %7, align 4
  %28 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  %30 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store i32 %24, i32* %2, align 4
  store i32 %25, i32* %3, align 4
  store i32 %26, i32* %4, align 4
  %31 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %13, align 8
  %36 = select i1 %34, i8* %35, i8* %12
  %37 = load i64, i64* %23, align 8
  %38 = zext i8 %33 to i64
  %39 = select i1 %34, i64 %37, i64 %38
  %40 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %36, i64 %39, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4) #15
  %41 = bitcast %"class.base::Histogram::Factory"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #15
  %42 = load i32, i32* %2, align 4
  %43 = load i32, i32* %3, align 4
  %44 = load i32, i32* %4, align 4
  %45 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base9Histogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %46, align 8
  %47 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 2
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 3
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 4
  store i32 %43, i32* %49, align 8
  %50 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 5
  store i32 %44, i32* %50, align 4
  %51 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %5, i64 0, i32 6
  store i32 %27, i32* %51, align 8
  %52 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30)
  %53 = icmp eq %"class.base::HistogramBase"* %52, null
  br i1 %53, label %72, label %54

54:                                               ; preds = %22
  %55 = load i32, i32* %11, align 4
  %56 = bitcast %"class.base::HistogramBase"* %52 to i32 (%"class.base::HistogramBase"*)***
  %57 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %57, i64 4
  %59 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %58, align 8
  %60 = call i32 %59(%"class.base::HistogramBase"* nonnull %52) #15
  %61 = icmp eq i32 %60, 5
  br i1 %61, label %71, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %52, i64 1
  %64 = bitcast %"class.base::HistogramBase"* %63 to %"class.base::SampleVectorBase"**
  %65 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %64, align 8
  %66 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %65, i64 0, i32 2
  %67 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %66, align 8
  %68 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %67, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, %55
  br i1 %70, label %71, label %72

71:                                               ; preds = %54, %62
  br label %72

72:                                               ; preds = %20, %71, %62, %22
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %20 ], [ %31, %71 ], [ %31, %62 ], [ %31, %22 ]
  %74 = phi %"class.base::HistogramBase"* [ null, %20 ], [ %52, %71 ], [ null, %62 ], [ null, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #15
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %79) #17
  br label %80

80:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  ret %"class.base::HistogramBase"* %74
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4base12_GLOBAL__N_122ReadHistogramArgumentsEPNS_14PickleIteratorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPiSB_SB_PjSC_(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*, i32*, i32*, i32*, i32*, i32*) unnamed_addr #0 {
  %8 = tail call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* %1) #15
  br i1 %8, label %9, label %34

9:                                                ; preds = %7
  %10 = tail call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* %2) #15
  br i1 %10, label %11, label %34

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* %3) #15
  br i1 %12, label %13, label %34

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* %4) #15
  br i1 %14, label %15, label %34

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* %0, i32* %5) #15
  br i1 %16, label %17, label %34

17:                                               ; preds = %15
  %18 = tail call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* %0, i32* %6) #15
  br i1 %18, label %19, label %34

19:                                               ; preds = %17
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %3, align 4
  %24 = icmp slt i32 %23, 1
  %25 = icmp slt i32 %20, %23
  %26 = or i1 %24, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = load i32, i32* %5, align 4
  %29 = add i32 %28, -2
  %30 = icmp ugt i32 %29, 536870908
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %2, align 4
  %33 = and i32 %32, -17
  store i32 %33, i32* %2, align 4
  br label %34

34:                                               ; preds = %19, %22, %27, %7, %9, %11, %13, %15, %17, %31
  %35 = phi i1 [ true, %31 ], [ false, %17 ], [ false, %15 ], [ false, %13 ], [ false, %11 ], [ false, %9 ], [ false, %7 ], [ false, %27 ], [ false, %22 ], [ false, %19 ]
  ret i1 %35
}

declare void @_ZN4base12SampleVectorC1EmPKNS_12BucketRangesE(%"class.base::SampleVector"*, i64, %"class.base::BucketRanges"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base9Histogram13GetParametersEPNS_15DictionaryValueE(%"class.base::Histogram"*, %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = bitcast %"class.base::Histogram"* %0 to i32 (%"class.base::Histogram"*)***
  %6 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %6, i64 4
  %8 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %7, align 8
  %9 = tail call i32 %8(%"class.base::Histogram"* %0) #15
  call void @_ZN4base21HistogramTypeToStringENS_13HistogramTypeE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %9) #15
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  %21 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4, i8* %16, i64 %20) #15
  %22 = load i8, i8* %11, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  %27 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %1, i64 0, i32 0
  %28 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %28, align 8
  %30 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %29, i64 0, i32 2
  %31 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %30, align 8
  %32 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %31, i64 0, i32 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.base::BucketRanges"* %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 2
  %39 = add nsw i64 %38, -1
  %40 = icmp ult i64 %39, 2
  br i1 %40, label %45, label %41

41:                                               ; preds = %26
  %42 = inttoptr i64 %36 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 1
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %26, %41
  %46 = phi i32 [ %44, %41 ], [ -1, %26 ]
  %47 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 3, i32 %46) #15
  %48 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %28, align 8
  %49 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %48, i64 0, i32 2
  %50 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %49, align 8
  %51 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %50, i64 0, i32 0, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::BucketRanges"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 2
  %58 = add nsw i64 %57, -1
  %59 = icmp ult i64 %58, 2
  br i1 %59, label %65, label %60

60:                                               ; preds = %45
  %61 = inttoptr i64 %55 to i32*
  %62 = add nsw i64 %57, -2
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %45, %60
  %66 = phi i32 [ %64, %60 ], [ -1, %45 ]
  %67 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i64 3, i32 %66) #15
  %68 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %5, align 8
  %69 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %68, i64 20
  %70 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %69, align 8
  %71 = call i32 %70(%"class.base::Histogram"* %0) #15
  %72 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i32 %71) #15
  ret void
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base21HistogramTypeToStringENS_13HistogramTypeE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15LinearHistogramD0Ev(%"class.base::LinearHistogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.97"* %3, %"class.std::__1::__tree_node"* %6) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %7 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %7, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %7, align 8
  %9 = icmp eq %"class.base::SampleVectorBase"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.base::SampleVectorBase"* %8 to void (%"class.base::SampleVectorBase"*)***
  %12 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %12, i64 1
  %14 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %13, align 8
  tail call void %14(%"class.base::SampleVectorBase"* nonnull %8) #15
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %16, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %16, align 8
  %18 = icmp eq %"class.base::SampleVectorBase"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.base::SampleVectorBase"* %17 to void (%"class.base::SampleVectorBase"*)***
  %21 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %21, i64 1
  %23 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %22, align 8
  tail call void %23(%"class.base::SampleVectorBase"* nonnull %17) #15
  br label %24

24:                                               ; preds = %15, %19
  %25 = bitcast %"class.base::LinearHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %25) #15
  %26 = bitcast %"class.base::LinearHistogram"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::LinearHistogram::Factory", align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %13 = icmp eq i32 %2, 1
  %14 = icmp eq i32 %3, 2
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %5
  store i32 2, i32* %7, align 4
  store i32 3, i32* %8, align 4
  br label %17

17:                                               ; preds = %5, %16
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %20 to i64
  %29 = select i1 %21, i64 %27, i64 %28
  %30 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %25, i64 %29, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %31 = bitcast %"class.base::LinearHistogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #15
  %32 = load i32, i32* %6, align 4
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %8, align 4
  %35 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %36, align 8
  %37 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 2
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 3
  store i32 %32, i32* %38, align 4
  %39 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 4
  store i32 %33, i32* %39, align 8
  %40 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 5
  store i32 %34, i32* %40, align 4
  %41 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 6
  store i32 %4, i32* %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15LinearHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %42 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 1
  store %"struct.base::LinearHistogram::DescriptionPair"* null, %"struct.base::LinearHistogram::DescriptionPair"** %42, align 8
  %43 = bitcast %"class.base::LinearHistogram::Factory"* %9 to %"class.base::Histogram::Factory"*
  %44 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %43) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  ret %"class.base::HistogramBase"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram30FactoryGetWithRangeDescriptionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiijiPKNS0_15DescriptionPairE(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32, %"struct.base::LinearHistogram::DescriptionPair"*) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.base::LinearHistogram::Factory", align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %11 = icmp eq i32 %2, 1
  %12 = icmp eq i32 %3, 2
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  store i32 2, i32* %8, align 4
  store i32 3, i32* %9, align 4
  br label %15

15:                                               ; preds = %14, %6
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %18 to i64
  %27 = select i1 %19, i64 %25, i64 %26
  %28 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %23, i64 %27, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9)
  %29 = bitcast %"class.base::LinearHistogram::Factory"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #15
  %30 = load i32, i32* %7, align 4
  %31 = load i32, i32* %8, align 4
  %32 = load i32, i32* %9, align 4
  %33 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %34, align 8
  %35 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 2
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 3
  store i32 %30, i32* %36, align 4
  %37 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 4
  store i32 %31, i32* %37, align 8
  %38 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 5
  store i32 %32, i32* %38, align 4
  %39 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 0, i32 6
  store i32 %4, i32* %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15LinearHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %40 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %10, i64 0, i32 1
  store %"struct.base::LinearHistogram::DescriptionPair"* %5, %"struct.base::LinearHistogram::DescriptionPair"** %40, align 8
  %41 = bitcast %"class.base::LinearHistogram::Factory"* %10 to %"class.base::Histogram::Factory"*
  %42 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %41)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #15
  ret %"class.base::HistogramBase"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram14FactoryTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::LinearHistogram::Factory", align 8
  %10 = alloca %"class.base::TimeDelta", align 8
  %11 = alloca %"class.base::TimeDelta", align 8
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %10, i64 0, i32 0
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %10) #15
  %15 = trunc i64 %14 to i32
  %16 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %11) #15
  %17 = trunc i64 %16 to i32
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #15
  store i32 %15, i32* %6, align 4
  store i32 %17, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %21 = icmp eq i32 %17, 1
  %22 = icmp eq i32 %3, 2
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %25

24:                                               ; preds = %5
  store i32 2, i32* %7, align 4
  store i32 3, i32* %8, align 4
  br label %25

25:                                               ; preds = %5, %24
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  %38 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %33, i64 %37, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %39 = bitcast %"class.base::LinearHistogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #15
  %40 = load i32, i32* %6, align 4
  %41 = load i32, i32* %7, align 4
  %42 = load i32, i32* %8, align 4
  %43 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %44, align 8
  %45 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 2
  store i32 1, i32* %45, align 8
  %46 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 3
  store i32 %40, i32* %46, align 4
  %47 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 4
  store i32 %41, i32* %47, align 8
  %48 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 5
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 6
  store i32 %4, i32* %49, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15LinearHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %50 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 1
  store %"struct.base::LinearHistogram::DescriptionPair"* null, %"struct.base::LinearHistogram::DescriptionPair"** %50, align 8
  %51 = bitcast %"class.base::LinearHistogram::Factory"* %9 to %"class.base::Histogram::Factory"*
  %52 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #15
  ret %"class.base::HistogramBase"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::LinearHistogram::Factory", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = tail call i64 @strlen(i8* %0) #15
  %13 = icmp ugt i64 %12, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #16
  unreachable

16:                                               ; preds = %5
  %17 = icmp ult i64 %12, 23
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %12, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %25, align 8
  br label %31

26:                                               ; preds = %16
  %27 = trunc i64 %12 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %12, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26, %18
  %32 = phi i8* [ %21, %18 ], [ %11, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %0, i64 %12, i1 false) #15
  br label %33

33:                                               ; preds = %26, %31
  %34 = phi i8* [ %11, %26 ], [ %32, %31 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %12
  store i8 0, i8* %35, align 1
  %36 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #15
  %37 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #15
  %38 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #15
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %39 = icmp eq i32 %2, 1
  %40 = icmp eq i32 %3, 2
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %33
  store i32 2, i32* %7, align 4
  store i32 3, i32* %8, align 4
  br label %43

43:                                               ; preds = %33, %42
  %44 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = select i1 %47, i8* %49, i8* %11
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %46 to i64
  %54 = select i1 %47, i64 %52, i64 %53
  %55 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %50, i64 %54, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8) #15
  %56 = bitcast %"class.base::LinearHistogram::Factory"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %56) #15
  %57 = load i32, i32* %6, align 4
  %58 = load i32, i32* %7, align 4
  %59 = load i32, i32* %8, align 4
  %60 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %61, align 8
  %62 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 2
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 3
  store i32 %57, i32* %63, align 4
  %64 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 4
  store i32 %58, i32* %64, align 8
  %65 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 5
  store i32 %59, i32* %65, align 4
  %66 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 0, i32 6
  store i32 %4, i32* %66, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15LinearHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %67 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %9, i64 0, i32 1
  store %"struct.base::LinearHistogram::DescriptionPair"* null, %"struct.base::LinearHistogram::DescriptionPair"** %67, align 8
  %68 = bitcast %"class.base::LinearHistogram::Factory"* %9 to %"class.base::Histogram::Factory"*
  %69 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %68) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %56) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #15
  %70 = load i8, i8* %45, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %43
  %73 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %43, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  ret %"class.base::HistogramBase"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* nocapture readonly, i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = tail call i64 @strlen(i8* %0) #15
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %11) #16
  unreachable

12:                                               ; preds = %5
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #17
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %28

23:                                               ; preds = %12
  %24 = trunc i64 %8 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23, %14
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %23 ], [ %22, %14 ]
  %30 = phi i8* [ %7, %23 ], [ %17, %14 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 %0, i64 %8, i1 false) #15
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %23 ], [ %29, %28 ]
  %33 = phi i8* [ %7, %23 ], [ %30, %28 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %8
  store i8 0, i8* %34, align 1
  %35 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram14FactoryTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 %1, i64 %2, i32 %3, i32 %4)
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #17
  br label %42

42:                                               ; preds = %31, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret %"class.base::HistogramBase"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram16PersistentCreateEPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #0 align 2 {
  %9 = tail call i8* @_Znwm(i64 64) #17
  %10 = bitcast i8* %9 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* nonnull %10, i8* %0, i32 undef, i32 undef, %"class.base::BucketRanges"* %3, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %4, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %5, %"struct.base::HistogramSamples::Metadata"* %6, %"struct.base::HistogramSamples::Metadata"* %7) #15
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 48
  %13 = getelementptr inbounds i8, i8* %9, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #15
  %14 = bitcast i8* %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = bitcast i8* %9 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base15LinearHistogram16GetHistogramTypeEv(%"class.base::LinearHistogram"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15LinearHistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::LinearHistogram"*, i8*, i32, i32, %"class.base::BucketRanges"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* %6, i8* %1, i32 undef, i32 undef, %"class.base::BucketRanges"* %4)
  %7 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15LinearHistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::LinearHistogram"*, i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* %10, i8* %1, i32 undef, i32 undef, %"class.base::BucketRanges"* %4, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %5, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %6, %"struct.base::HistogramSamples::Metadata"* %7, %"struct.base::HistogramSamples::Metadata"* %8)
  %11 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base15LinearHistogram19GetAsciiBucketRangeEj(%"class.std::__1::basic_string"* noalias sret, %"class.base::LinearHistogram"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %1, i64 0, i32 0
  %5 = bitcast %"class.base::LinearHistogram"* %1 to i32 (%"class.base::Histogram"*, i32)***
  %6 = load i32 (%"class.base::Histogram"*, i32)**, i32 (%"class.base::Histogram"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %6, i64 19
  %8 = load i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.base::Histogram"* %4, i32 %2) #15
  %10 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %3, %14
  %15 = phi %"class.std::__1::__tree_end_node"* [ %25, %14 ], [ %10, %3 ]
  %16 = phi %"class.std::__1::__tree_node"* [ %26, %14 ], [ %12, %3 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %9
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node"* %16 to %"class.std::__1::__tree_node"**
  %24 = select i1 %19, %"class.std::__1::__tree_node"** %21, %"class.std::__1::__tree_node"** %23
  %25 = select i1 %19, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %22
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %25, %10
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %9, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %30, %28, %3
  %36 = bitcast %"class.base::LinearHistogram"* %1 to %"class.base::HistogramBase"*
  %37 = load i32 (%"class.base::Histogram"*, i32)**, i32 (%"class.base::Histogram"*, i32)*** %5, align 8, !noalias !3
  %38 = getelementptr inbounds i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %37, i64 19
  %39 = load i32 (%"class.base::Histogram"*, i32)*, i32 (%"class.base::Histogram"*, i32)** %38, align 8, !noalias !3
  %40 = tail call i32 %39(%"class.base::Histogram"* %4, i32 %2) #15, !noalias !3
  tail call void @_ZNK4base13HistogramBase25GetSimpleAsciiBucketRangeEi(%"class.std::__1::basic_string"* sret %0, %"class.base::HistogramBase"* %36, i32 %40) #15
  br label %56

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 5
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %49 = bitcast %"class.std::__1::__tree_end_node"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #15
  br label %56

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::__tree_end_node"* %42 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 6
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %52, i64 %55) #15
  br label %56

56:                                               ; preds = %50, %47, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15LinearHistogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32, i32, %"class.base::BucketRanges"*) local_unnamed_addr #0 align 2 {
  %4 = sitofp i32 %0 to double
  %5 = sitofp i32 %1 to double
  %6 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %2, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::BucketRanges"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = add nsw i64 %12, -1
  %14 = icmp ugt i64 %13, 1
  %15 = inttoptr i64 %10 to i32*
  br i1 %14, label %16, label %27

16:                                               ; preds = %3
  %17 = add nsw i64 %12, -3
  %18 = uitofp i64 %17 to double
  %19 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %2, i64 0, i32 0, i32 0, i32 0
  br label %32

20:                                               ; preds = %32
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* %9, align 8
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 2
  %25 = add nsw i64 %24, -1
  %26 = inttoptr i64 %22 to i32*
  br label %27

27:                                               ; preds = %20, %3
  %28 = phi i32* [ %26, %20 ], [ %15, %3 ]
  %29 = phi i64 [ %25, %20 ], [ %13, %3 ]
  %30 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %31 = getelementptr inbounds i32, i32* %28, i64 %29
  store i32 %30, i32* %31, align 4
  tail call void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"* %2) #15
  ret void

32:                                               ; preds = %49, %16
  %33 = phi i32* [ %15, %16 ], [ %50, %49 ]
  %34 = phi i64 [ 1, %16 ], [ %47, %49 ]
  %35 = xor i64 %34, -1
  %36 = add i64 %13, %35
  %37 = uitofp i64 %36 to double
  %38 = fmul double %4, %37
  %39 = add i64 %34, -1
  %40 = uitofp i64 %39 to double
  %41 = fmul double %5, %40
  %42 = fadd double %38, %41
  %43 = fdiv double %42, %18
  %44 = fadd double %43, 5.000000e-01
  %45 = fptosi double %44 to i32
  %46 = getelementptr inbounds i32, i32* %33, i64 %34
  store i32 %45, i32* %46, align 4
  %47 = add nuw i64 %34, 1
  %48 = icmp eq i64 %47, %13
  br i1 %48, label %20, label %49

49:                                               ; preds = %32
  %50 = load i32*, i32** %19, align 8
  br label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::LinearHistogram::Factory", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #15
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #15
  store i32 -1431655766, i32* %7, align 4
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #15
  store i32 -1431655766, i32* %8, align 4
  %17 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15
  store i32 -1431655766, i32* %9, align 4
  %18 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 -1431655766, i32* %10, align 4
  %19 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 -1431655766, i32* %11, align 4
  %20 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_122ReadHistogramArgumentsEPNS_14PickleIteratorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPiSB_SB_PjSC_(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* nonnull %6, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11)
  br i1 %20, label %23, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %79

23:                                               ; preds = %1
  %24 = load i32, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = load i32, i32* %10, align 4
  %27 = load i32, i32* %7, align 4
  %28 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #15
  %29 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #15
  %30 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #15
  store i32 %24, i32* %2, align 4
  store i32 %25, i32* %3, align 4
  store i32 %26, i32* %4, align 4
  %31 = icmp eq i32 %25, 1
  %32 = icmp eq i32 %26, 2
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %23
  store i32 2, i32* %3, align 4
  store i32 3, i32* %4, align 4
  br label %35

35:                                               ; preds = %23, %34
  %36 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %13, align 8
  %41 = select i1 %39, i8* %40, i8* %12
  %42 = load i64, i64* %14, align 8
  %43 = zext i8 %38 to i64
  %44 = select i1 %39, i64 %42, i64 %43
  %45 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %41, i64 %44, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4) #15
  %46 = bitcast %"class.base::LinearHistogram::Factory"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %46) #15
  %47 = load i32, i32* %2, align 4
  %48 = load i32, i32* %3, align 4
  %49 = load i32, i32* %4, align 4
  %50 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %51, align 8
  %52 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 2
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 3
  store i32 %47, i32* %53, align 4
  %54 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 4
  store i32 %48, i32* %54, align 8
  %55 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 5
  store i32 %49, i32* %55, align 4
  %56 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 0, i32 6
  store i32 %27, i32* %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15LinearHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %57 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %5, i64 0, i32 1
  store %"struct.base::LinearHistogram::DescriptionPair"* null, %"struct.base::LinearHistogram::DescriptionPair"** %57, align 8
  %58 = bitcast %"class.base::LinearHistogram::Factory"* %5 to %"class.base::Histogram::Factory"*
  %59 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %58) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15
  %60 = icmp eq %"class.base::HistogramBase"* %59, null
  br i1 %60, label %79, label %61

61:                                               ; preds = %35
  %62 = load i32, i32* %11, align 4
  %63 = bitcast %"class.base::HistogramBase"* %59 to i32 (%"class.base::HistogramBase"*)***
  %64 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %64, i64 4
  %66 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %65, align 8
  %67 = call i32 %66(%"class.base::HistogramBase"* nonnull %59) #15
  %68 = icmp eq i32 %67, 5
  br i1 %68, label %78, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %59, i64 1
  %71 = bitcast %"class.base::HistogramBase"* %70 to %"class.base::SampleVectorBase"**
  %72 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %71, align 8
  %73 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %72, i64 0, i32 2
  %74 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %73, align 8
  %75 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %62
  br i1 %77, label %78, label %79

78:                                               ; preds = %61, %69
  br label %79

79:                                               ; preds = %21, %78, %69, %35
  %80 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %21 ], [ %36, %78 ], [ %36, %69 ], [ %36, %35 ]
  %81 = phi %"class.base::HistogramBase"* [ null, %21 ], [ %59, %78 ], [ null, %69 ], [ null, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #15
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  %86 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %86) #17
  br label %87

87:                                               ; preds = %79, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  ret %"class.base::HistogramBase"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21ScaledLinearHistogramC2EPKciijii(%"class.base::ScaledLinearHistogram"*, i8* nocapture readonly, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = tail call i64 @strlen(i8* %1) #15
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %13) #16
  unreachable

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #17
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %30

25:                                               ; preds = %14
  %26 = trunc i64 %10 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25, %16
  %31 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %24, %16 ]
  %32 = phi i8* [ %9, %25 ], [ %19, %16 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %1, i64 %10, i1 false) #15
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i8* [ %9, %25 ], [ %32, %30 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  store i8 0, i8* %36, align 1
  call void @_ZN4base21ScaledLinearHistogramC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiijii(%"class.base::ScaledLinearHistogram"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6)
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %33, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21ScaledLinearHistogramC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiijii(%"class.base::ScaledLinearHistogram"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.base::LinearHistogram::Factory", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 0
  %17 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15
  %18 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  %19 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %20 = icmp eq i32 %3, 1
  %21 = icmp eq i32 %4, 2
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %7
  store i32 2, i32* %10, align 4
  store i32 3, i32* %11, align 4
  br label %24

24:                                               ; preds = %7, %23
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %32 = select i1 %28, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %27 to i64
  %36 = select i1 %28, i64 %34, i64 %35
  %37 = call zeroext i1 @_ZN4base9Histogram28InspectConstructionArgumentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPiS6_Pj(i8* %32, i64 %36, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11) #15
  %38 = bitcast %"class.base::LinearHistogram::Factory"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #15
  %39 = load i32, i32* %9, align 4
  %40 = load i32, i32* %10, align 4
  %41 = load i32, i32* %11, align 4
  %42 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %43, align 8
  %44 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 2
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 3
  store i32 %39, i32* %45, align 4
  %46 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 4
  store i32 %40, i32* %46, align 8
  %47 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 5
  store i32 %41, i32* %47, align 4
  %48 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 0, i32 6
  store i32 %6, i32* %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15LinearHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %49 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %12, i64 0, i32 1
  store %"struct.base::LinearHistogram::DescriptionPair"* null, %"struct.base::LinearHistogram::DescriptionPair"** %49, align 8
  %50 = bitcast %"class.base::LinearHistogram::Factory"* %12 to %"class.base::Histogram::Factory"*
  %51 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %50) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  store %"class.base::HistogramBase"* %51, %"class.base::HistogramBase"** %16, align 8
  %52 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 1
  store i32 %5, i32* %52, align 8
  %53 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 2
  %54 = bitcast %"class.std::__1::vector"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #15
  %55 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %56, align 8
  %57 = sub nsw i32 %3, %2
  %58 = add nsw i32 %57, 2
  %59 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = icmp eq i32 %58, %4
  br i1 %60, label %61, label %62

61:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  store i8* null, i8** %56, align 8
  br label %72

62:                                               ; preds = %24
  %63 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %4) #15
  %64 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %58) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i8* %63, i8* %64) #15
  %65 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  store i8* %66, i8** %56, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 929, %"class.logging::CheckOpResult"* nonnull %13) #15
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #15
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %70, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0), i64 49) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #15
  br label %72

72:                                               ; preds = %61, %62, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  %73 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %16, align 8
  %74 = bitcast %"class.base::HistogramBase"* %73 to i32 (%"class.base::HistogramBase"*)***
  %75 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %74, align 8
  %76 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %75, i64 4
  %77 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %76, align 8
  %78 = call i32 %77(%"class.base::HistogramBase"* %73) #15
  %79 = icmp eq i32 %78, 5
  br i1 %79, label %106, label %80

80:                                               ; preds = %72
  %81 = bitcast %"class.base::ScaledLinearHistogram"* %0 to %"class.base::Histogram"**
  %82 = load %"class.base::Histogram"*, %"class.base::Histogram"** %81, align 8
  %83 = bitcast %"class.base::Histogram"* %82 to i32 (%"class.base::Histogram"*)***
  %84 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %83, align 8
  %85 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %84, i64 20
  %86 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %85, align 8
  %87 = call i32 %86(%"class.base::Histogram"* %82) #15
  %88 = zext i32 %87 to i64
  %89 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #15
  store i32 0, i32* %15, align 4
  %90 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 2, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::vector"* %53 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 2
  %97 = icmp ult i64 %96, %88
  %98 = inttoptr i64 %94 to i32*
  br i1 %97, label %99, label %101

99:                                               ; preds = %80
  %100 = sub nsw i64 %88, %96
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi(%"class.std::__1::vector"* %53, i64 %100, i32* nonnull dereferenceable(4) %15) #15
  br label %105

101:                                              ; preds = %80
  %102 = icmp ugt i64 %96, %88
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = getelementptr inbounds i32, i32* %98, i64 %88
  store i32* %104, i32** %90, align 8
  br label %105

105:                                              ; preds = %99, %101, %103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #15
  br label %106

106:                                              ; preds = %72, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21ScaledLinearHistogramD2Ev(%"class.base::ScaledLinearHistogram"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #17
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 0
  %5 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %4, align 8
  %6 = bitcast %"class.base::HistogramBase"* %5 to i32 (%"class.base::HistogramBase"*)***
  %7 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %7, i64 4
  %9 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %8, align 8
  %10 = tail call i32 %9(%"class.base::HistogramBase"* %5) #15
  %11 = icmp eq i32 %10, 5
  %12 = icmp slt i32 %2, 1
  %13 = or i1 %12, %11
  br i1 %13, label %57, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.base::ScaledLinearHistogram"* %0 to %"class.base::Histogram"**
  %16 = load %"class.base::Histogram"*, %"class.base::Histogram"** %15, align 8
  %17 = bitcast %"class.base::Histogram"* %16 to i32 (%"class.base::Histogram"*)***
  %18 = load i32 (%"class.base::Histogram"*)**, i32 (%"class.base::Histogram"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %18, i64 20
  %20 = load i32 (%"class.base::Histogram"*)*, i32 (%"class.base::Histogram"*)** %19, align 8
  %21 = tail call i32 %20(%"class.base::Histogram"* %16) #15
  %22 = add i32 %21, -1
  %23 = icmp slt i32 %22, %1
  %24 = select i1 %23, i32 %22, i32 %1
  %25 = icmp sgt i32 %24, 0
  %26 = select i1 %25, i32 %24, i32 0
  %27 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = sdiv i32 %2, %28
  %30 = mul nsw i32 %29, %28
  %31 = sub nsw i32 %2, %30
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %14
  %34 = zext i32 %26 to i64
  %35 = getelementptr inbounds %"class.base::ScaledLinearHistogram", %"class.base::ScaledLinearHistogram"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 %34
  %38 = atomicrmw volatile add i32* %37, i32 %31 monotonic
  %39 = add nsw i32 %38, %31
  %40 = load i32, i32* %27, align 8
  %41 = sdiv i32 %40, 2
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %49, label %43

43:                                               ; preds = %33
  %44 = add nsw i32 %29, 1
  %45 = load i32*, i32** %35, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %34
  %47 = sub nsw i32 0, %40
  %48 = atomicrmw volatile add i32* %46, i32 %47 monotonic
  br label %49

49:                                               ; preds = %33, %43, %14
  %50 = phi i32 [ %44, %43 ], [ %29, %33 ], [ %29, %14 ]
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = bitcast %"class.base::Histogram"* %16 to void (%"class.base::Histogram"*, i32, i32)***
  %54 = load void (%"class.base::Histogram"*, i32, i32)**, void (%"class.base::Histogram"*, i32, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.base::Histogram"*, i32, i32)*, void (%"class.base::Histogram"*, i32, i32)** %54, i64 7
  %56 = load void (%"class.base::Histogram"*, i32, i32)*, void (%"class.base::Histogram"*, i32, i32)** %55, align 8
  tail call void %56(%"class.base::Histogram"* %16, i32 %26, i32 %50) #15
  br label %57

57:                                               ; preds = %49, %52, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BooleanHistogram::Factory", align 8
  %4 = bitcast %"class.base::BooleanHistogram::Factory"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %6, align 8
  %7 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 2
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 2, i32 1, i32 2, i32 3>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 6
  store i32 %1, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base16BooleanHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %10 = bitcast %"class.base::BooleanHistogram::Factory"* %3 to %"class.base::Histogram::Factory"*
  %11 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #15
  ret %"class.base::HistogramBase"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BooleanHistogram::Factory", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = tail call i64 @strlen(i8* %0) #15
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #16
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #17
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %0, i64 %6, i1 false) #15
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.base::BooleanHistogram::Factory"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %35, align 8
  %36 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 2
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 2, i32 1, i32 2, i32 3>, <4 x i32>* %37, align 8
  %38 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %3, i64 0, i32 0, i32 6
  store i32 %1, i32* %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base16BooleanHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %39 = bitcast %"class.base::BooleanHistogram::Factory"* %3 to %"class.base::Histogram::Factory"*
  %40 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #15
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %29, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret %"class.base::HistogramBase"* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram16PersistentCreateEPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #0 align 2 {
  %7 = tail call i8* @_Znwm(i64 64) #17
  %8 = bitcast i8* %7 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* nonnull %8, i8* %0, i32 undef, i32 undef, %"class.base::BucketRanges"* %1, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %2, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %3, %"struct.base::HistogramSamples::Metadata"* %4, %"struct.base::HistogramSamples::Metadata"* %5) #15
  %9 = bitcast i8* %7 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %7, i64 48
  %11 = getelementptr inbounds i8, i8* %7, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #15
  %12 = bitcast i8* %11 to i8**
  store i8* %10, i8** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base16BooleanHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %13 = bitcast i8* %7 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base16BooleanHistogram16GetHistogramTypeEv(%"class.base::BooleanHistogram"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16BooleanHistogramC2EPKcPKNS_12BucketRangesE(%"class.base::BooleanHistogram"*, i8*, %"class.base::BucketRanges"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* %4, i8* %1, i32 undef, i32 undef, %"class.base::BucketRanges"* %2) #15
  %5 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base16BooleanHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16BooleanHistogramC2EPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::BooleanHistogram"*, i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* %8, i8* %1, i32 undef, i32 undef, %"class.base::BucketRanges"* %2, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %3, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %4, %"struct.base::HistogramSamples::Metadata"* %5, %"struct.base::HistogramSamples::Metadata"* %6) #15
  %9 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base16BooleanHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::BooleanHistogram::Factory", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #15
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 -1431655766, i32* %4, align 4
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #15
  store i32 -1431655766, i32* %5, align 4
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 -1431655766, i32* %6, align 4
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #15
  store i32 -1431655766, i32* %7, align 4
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #15
  store i32 -1431655766, i32* %8, align 4
  %16 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_122ReadHistogramArgumentsEPNS_14PickleIteratorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPiSB_SB_PjSC_(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  br i1 %16, label %17, label %46

17:                                               ; preds = %1
  %18 = load i32, i32* %4, align 4
  %19 = bitcast %"class.base::BooleanHistogram::Factory"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %2, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %2, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"** %21, align 8
  %22 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %2, i64 0, i32 0, i32 2
  %23 = bitcast i32* %22 to <4 x i32>*
  store <4 x i32> <i32 2, i32 1, i32 2, i32 3>, <4 x i32>* %23, align 8
  %24 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %2, i64 0, i32 0, i32 6
  store i32 %18, i32* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base16BooleanHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %25 = bitcast %"class.base::BooleanHistogram::Factory"* %2 to %"class.base::Histogram::Factory"*
  %26 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #15
  %27 = icmp eq %"class.base::HistogramBase"* %26, null
  br i1 %27, label %46, label %28

28:                                               ; preds = %17
  %29 = load i32, i32* %8, align 4
  %30 = bitcast %"class.base::HistogramBase"* %26 to i32 (%"class.base::HistogramBase"*)***
  %31 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %31, i64 4
  %33 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %32, align 8
  %34 = call i32 %33(%"class.base::HistogramBase"* nonnull %26) #15
  %35 = icmp eq i32 %34, 5
  br i1 %35, label %45, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %26, i64 1
  %38 = bitcast %"class.base::HistogramBase"* %37 to %"class.base::SampleVectorBase"**
  %39 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %38, align 8
  %40 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %39, i64 0, i32 2
  %41 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %40, align 8
  %42 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, %29
  br i1 %44, label %45, label %46

45:                                               ; preds = %28, %36
  br label %46

46:                                               ; preds = %45, %36, %17, %1
  %47 = phi %"class.base::HistogramBase"* [ null, %1 ], [ null, %17 ], [ %26, %45 ], [ null, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  %48 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %46, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret %"class.base::HistogramBase"* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::CustomHistogram::Factory", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  %12 = inttoptr i64 %10 to i32*
  br i1 %11, label %35, label %13

13:                                               ; preds = %3
  %14 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %15 = sub i64 %8, %10
  %16 = ashr exact i64 %15, 2
  br label %17

17:                                               ; preds = %26, %13
  %18 = phi i64 [ 0, %13 ], [ %30, %26 ]
  %19 = phi i32 [ 0, %13 ], [ %29, %26 ]
  %20 = phi i8 [ 0, %13 ], [ %28, %26 ]
  %21 = getelementptr inbounds i32, i32* %12, i64 %18
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, -1
  %24 = icmp slt i32 %22, %14
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %35

26:                                               ; preds = %17
  %27 = icmp eq i32 %22, 0
  %28 = select i1 %27, i8 %20, i8 1
  %29 = add i32 %19, 1
  %30 = zext i32 %29 to i64
  %31 = icmp ugt i64 %16, %30
  br i1 %31, label %17, label %32

32:                                               ; preds = %26
  %33 = and i8 %28, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %17, %32, %3
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 1123, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %32, %35
  %39 = bitcast %"class.base::CustomHistogram::Factory"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %5, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %5, i64 0, i32 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %41, align 8
  %42 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %5, i64 0, i32 0, i32 2
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, <4 x i32>* %43, align 8
  %44 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %5, i64 0, i32 0, i32 6
  store i32 %2, i32* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base15CustomHistogram7FactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %45 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %5, i64 0, i32 1
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %45, align 8
  %46 = bitcast %"class.base::CustomHistogram::Factory"* %5 to %"class.base::Histogram::Factory"*
  %47 = call %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory5BuildEv(%"class.base::Histogram::Factory"* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #15
  ret %"class.base::HistogramBase"* %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base15CustomHistogram20ValidateCustomRangesERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %3 = bitcast i32** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  %8 = inttoptr i64 %6 to i32*
  br i1 %7, label %31, label %9

9:                                                ; preds = %1
  %10 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %11 = sub i64 %4, %6
  %12 = ashr exact i64 %11, 2
  br label %13

13:                                               ; preds = %9, %22
  %14 = phi i64 [ 0, %9 ], [ %26, %22 ]
  %15 = phi i32 [ 0, %9 ], [ %25, %22 ]
  %16 = phi i8 [ 0, %9 ], [ %24, %22 ]
  %17 = getelementptr inbounds i32, i32* %8, i64 %14
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  %20 = icmp slt i32 %18, %10
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %31

22:                                               ; preds = %13
  %23 = icmp eq i32 %18, 0
  %24 = select i1 %23, i8 %16, i8 1
  %25 = add i32 %15, 1
  %26 = zext i32 %25 to i64
  %27 = icmp ugt i64 %12, %26
  br i1 %27, label %13, label %28

28:                                               ; preds = %22
  %29 = and i8 %24, 1
  %30 = icmp ne i8 %29, 0
  br label %31

31:                                               ; preds = %13, %1, %28
  %32 = phi i1 [ false, %1 ], [ %30, %28 ], [ false, %13 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetEPKcRKNSt3__16vectorIiNS3_9allocatorIiEEEEi(i8* nocapture readonly, %"class.std::__1::vector"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = tail call i64 @strlen(i8* %0) #15
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #16
  unreachable

10:                                               ; preds = %3
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #17
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %0, i64 %6, i1 false) #15
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = call %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::vector"* dereferenceable(24) %1, i32 %2)
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #17
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret %"class.base::HistogramBase"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15CustomHistogram16PersistentCreateEPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #0 align 2 {
  %7 = tail call i8* @_Znwm(i64 40) #17
  %8 = bitcast i8* %7 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* nonnull %8, i8* %0, i32 undef, i32 undef, %"class.base::BucketRanges"* %1, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %2, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %3, %"struct.base::HistogramSamples::Metadata"* %4, %"struct.base::HistogramSamples::Metadata"* %5) #15
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15CustomHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %7 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK4base15CustomHistogram16GetHistogramTypeEv(%"class.base::CustomHistogram"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15CustomHistogram23ArrayToCustomEnumRangesENS_4spanIKiLm18446744073709551615EEE(%"class.std::__1::vector"* noalias sret, i64, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #15
  %9 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %11 = getelementptr inbounds i32, i32* %2, i64 %1
  %12 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKiEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %4, i32* %2, i32* %2, i32* %11) #15
  %13 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKiEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %5, i32* %2, i32* %11, i32* %11) #15
  call void @_ZNK4base25CheckedContiguousIteratorIKiE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #15
  %16 = load i32*, i32** %10, align 8
  %17 = load i32*, i32** %14, align 8
  %18 = icmp eq i32* %16, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %3
  %20 = bitcast i32** %6 to i64*
  %21 = bitcast %"class.std::__1::vector"* %0 to i64*
  %22 = bitcast i32** %7 to i64*
  br label %24

23:                                               ; preds = %138, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret void

24:                                               ; preds = %143, %19
  %25 = phi i64 [ %146, %143 ], [ 0, %19 ]
  %26 = phi i32* [ %145, %143 ], [ null, %19 ]
  %27 = phi i32* [ %144, %143 ], [ null, %19 ]
  %28 = call dereferenceable(4) i32* @_ZNK4base25CheckedContiguousIteratorIKiEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32* %27, %26
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  store i32 %29, i32* %27, align 4
  %32 = getelementptr inbounds i32, i32* %27, i64 1
  %33 = ptrtoint i32* %32 to i64
  store i64 %33, i64* %20, align 8
  br label %81

34:                                               ; preds = %24
  %35 = ptrtoint i32* %26 to i64
  %36 = load i64, i64* %21, align 8
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 2
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 4611686018427387903
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #16
  unreachable

43:                                               ; preds = %34
  %44 = icmp ult i64 %38, 2305843009213693951
  br i1 %44, label %45, label %53

45:                                               ; preds = %43
  %46 = ashr exact i64 %37, 1
  %47 = icmp ult i64 %46, %39
  %48 = select i1 %47, i64 %39, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = icmp ugt i64 %48, 4611686018427387903
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  call void @abort() #16
  unreachable

53:                                               ; preds = %50, %43
  %54 = phi i64 [ %48, %50 ], [ 4611686018427387903, %43 ]
  %55 = shl i64 %54, 2
  %56 = call i8* @_Znwm(i64 %55) #17
  %57 = bitcast i8* %56 to i32*
  br label %58

58:                                               ; preds = %53, %45
  %59 = phi i64 [ %54, %53 ], [ 0, %45 ]
  %60 = phi i32* [ %57, %53 ], [ null, %45 ]
  %61 = getelementptr inbounds i32, i32* %60, i64 %38
  %62 = getelementptr inbounds i32, i32* %60, i64 %59
  %63 = ptrtoint i32* %62 to i64
  store i32 %29, i32* %61, align 4
  %64 = getelementptr inbounds i32, i32* %61, i64 1
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %25, %36
  %67 = ashr exact i64 %66, 2
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i32, i32* %61, i64 %68
  %70 = ptrtoint i32* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %58
  %73 = bitcast i32* %69 to i8*
  %74 = inttoptr i64 %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 %66, i1 false) #15
  br label %75

75:                                               ; preds = %72, %58
  store i64 %70, i64* %21, align 8
  store i64 %65, i64* %20, align 8
  store i64 %63, i64* %22, align 8
  %76 = icmp eq i64 %36, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %75
  %78 = inttoptr i64 %36 to i8*
  call void @_ZdlPv(i8* %78) #17
  %79 = load i32*, i32** %6, align 8
  %80 = ptrtoint i32* %79 to i64
  br label %81

81:                                               ; preds = %31, %75, %77
  %82 = phi i64 [ %33, %31 ], [ %65, %75 ], [ %80, %77 ]
  %83 = phi i32* [ %32, %31 ], [ %64, %75 ], [ %79, %77 ]
  %84 = add nsw i32 %29, 1
  %85 = load i32*, i32** %7, align 8
  %86 = icmp ult i32* %83, %85
  %87 = ptrtoint i32* %85 to i64
  br i1 %86, label %88, label %91

88:                                               ; preds = %81
  store i32 %84, i32* %83, align 4
  %89 = getelementptr inbounds i32, i32* %83, i64 1
  %90 = ptrtoint i32* %89 to i64
  store i64 %90, i64* %20, align 8
  br label %138

91:                                               ; preds = %81
  %92 = ptrtoint i32* %83 to i64
  %93 = load i64, i64* %21, align 8
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 2
  %96 = add nsw i64 %95, 1
  %97 = icmp ugt i64 %96, 4611686018427387903
  br i1 %97, label %98, label %100

98:                                               ; preds = %91
  %99 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %99) #16
  unreachable

100:                                              ; preds = %91
  %101 = sub i64 %87, %93
  %102 = ashr exact i64 %101, 2
  %103 = icmp ult i64 %102, 2305843009213693951
  br i1 %103, label %104, label %112

104:                                              ; preds = %100
  %105 = ashr exact i64 %101, 1
  %106 = icmp ult i64 %105, %96
  %107 = select i1 %106, i64 %96, i64 %105
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = icmp ugt i64 %107, 4611686018427387903
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  call void @abort() #16
  unreachable

112:                                              ; preds = %109, %100
  %113 = phi i64 [ %107, %109 ], [ 4611686018427387903, %100 ]
  %114 = shl i64 %113, 2
  %115 = call i8* @_Znwm(i64 %114) #17
  %116 = bitcast i8* %115 to i32*
  br label %117

117:                                              ; preds = %112, %104
  %118 = phi i64 [ %113, %112 ], [ 0, %104 ]
  %119 = phi i32* [ %116, %112 ], [ null, %104 ]
  %120 = getelementptr inbounds i32, i32* %119, i64 %95
  %121 = getelementptr inbounds i32, i32* %119, i64 %118
  %122 = ptrtoint i32* %121 to i64
  store i32 %84, i32* %120, align 4
  %123 = getelementptr inbounds i32, i32* %120, i64 1
  %124 = ptrtoint i32* %123 to i64
  %125 = sub i64 %82, %93
  %126 = ashr exact i64 %125, 2
  %127 = sub nsw i64 0, %126
  %128 = getelementptr inbounds i32, i32* %120, i64 %127
  %129 = ptrtoint i32* %128 to i64
  %130 = icmp sgt i64 %125, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %117
  %132 = bitcast i32* %128 to i8*
  %133 = inttoptr i64 %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 %125, i1 false) #15
  br label %134

134:                                              ; preds = %131, %117
  store i64 %129, i64* %21, align 8
  store i64 %124, i64* %20, align 8
  store i64 %122, i64* %22, align 8
  %135 = icmp eq i64 %93, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %93 to i8*
  call void @_ZdlPv(i8* %137) #17
  br label %138

138:                                              ; preds = %88, %134, %136
  %139 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKiEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKiE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #15
  %140 = load i32*, i32** %10, align 8
  %141 = load i32*, i32** %14, align 8
  %142 = icmp eq i32* %140, %141
  br i1 %142, label %23, label %143

143:                                              ; preds = %138
  %144 = load i32*, i32** %6, align 8
  %145 = load i32*, i32** %7, align 8
  %146 = ptrtoint i32* %144 to i64
  br label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK4base25CheckedContiguousIteratorIKiEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i32*, i32** %7, align 8
  %11 = load i32*, i32** %8, align 8
  %12 = icmp eq i32* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i32** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %17 = bitcast i32** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %26 = load i32*, i32** %7, align 8
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKiEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i32*, i32** %7, align 8
  %11 = load i32*, i32** %8, align 8
  %12 = icmp eq i32* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i32** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %17 = bitcast i32** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %26 = load i32*, i32** %7, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32* %27, i32** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15CustomHistogramC2EPKcPKNS_12BucketRangesE(%"class.base::CustomHistogram"*, i8*, %"class.base::BucketRanges"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* %4, i8* %1, i32 undef, i32 undef, %"class.base::BucketRanges"* %2)
  %5 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15CustomHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15CustomHistogramC2EPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::CustomHistogram"*, i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(%"class.base::Histogram"* %8, i8* %1, i32 undef, i32 undef, %"class.base::BucketRanges"* %2, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %3, %"class.base::DelayedPersistentAllocation"* dereferenceable(32) %4, %"struct.base::HistogramSamples::Metadata"* %5, %"struct.base::HistogramSamples::Metadata"* %6)
  %9 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15CustomHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base15CustomHistogram17SerializeInfoImplEPNS_6PickleE(%"class.base::CustomHistogram"*, %"class.base::Pickle"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0
  tail call void @_ZNK4base9Histogram17SerializeInfoImplEPNS_6PickleE(%"class.base::Histogram"* %4, %"class.base::Pickle"* %1)
  %5 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %5, align 8
  %7 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %6, i64 0, i32 2
  %8 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %7, align 8
  %9 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::BucketRanges"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = add nsw i64 %15, -1
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast i32* %3 to i8*
  br label %21

20:                                               ; preds = %21, %2
  ret void

21:                                               ; preds = %18, %21
  %22 = phi %"class.base::BucketRanges"* [ %8, %18 ], [ %33, %21 ]
  %23 = phi i64 [ 1, %18 ], [ %30, %21 ]
  %24 = phi i32 [ 1, %18 ], [ %29, %21 ]
  %25 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 %23
  %28 = load i32, i32* %27, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  store i32 %28, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  %29 = add i32 %24, 1
  %30 = zext i32 %29 to i64
  %31 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %5, align 8
  %32 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %31, i64 0, i32 2
  %33 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %32, align 8
  %34 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::BucketRanges"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 2
  %41 = add nsw i64 %40, -1
  %42 = icmp ugt i64 %41, %30
  br i1 %42, label %21, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base15CustomHistogram19DeserializeInfoImplEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #15
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 -1431655766, i32* %3, align 4
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #15
  store i32 -1431655766, i32* %4, align 4
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #15
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #15
  store i32 -1431655766, i32* %7, align 4
  %16 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_122ReadHistogramArgumentsEPNS_14PickleIteratorEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPiSB_SB_PjSC_(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7)
  br i1 %16, label %17, label %93

17:                                               ; preds = %1
  %18 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %21 = load i32, i32* %6, align 4
  %22 = add i32 %21, -1
  %23 = zext i32 %22 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #15
  %24 = icmp eq i32 %22, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = bitcast i32** %20 to i64*
  br label %61

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = shl nuw nsw i64 %23, 2
  %30 = call i8* @_Znwm(i64 %29) #17
  %31 = bitcast i8* %30 to i32*
  %32 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds i32, i32* %31, i64 %23
  store i32* %33, i32** %28, align 8
  %34 = bitcast i32** %20 to i64*
  %35 = ptrtoint i8* %30 to i64
  %36 = add nsw i64 %23, -1
  %37 = getelementptr i32, i32* %31, i64 %36
  %38 = ptrtoint i32* %37 to i64
  %39 = sub i64 4, %35
  %40 = add i64 %39, %38
  %41 = and i64 %40, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 0, i64 %41, i1 false) #15
  %42 = ptrtoint i32* %33 to i64
  store i64 %42, i64* %34, align 8
  %43 = bitcast %"class.std::__1::vector"* %8 to i64*
  %44 = bitcast i8* %30 to i32*
  %45 = icmp eq i32* %33, %44
  br i1 %45, label %61, label %54

46:                                               ; preds = %54
  %47 = zext i32 %60 to i64
  %48 = load i64, i64* %34, align 8
  %49 = load i64, i64* %43, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = icmp ugt i64 %51, %47
  %53 = inttoptr i64 %49 to i32*
  br i1 %52, label %54, label %61

54:                                               ; preds = %27, %46
  %55 = phi i32* [ %53, %46 ], [ %31, %27 ]
  %56 = phi i64 [ %47, %46 ], [ 0, %27 ]
  %57 = phi i32 [ %60, %46 ], [ 0, %27 ]
  %58 = getelementptr inbounds i32, i32* %55, i64 %56
  %59 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* %58) #15
  %60 = add i32 %57, 1
  br i1 %59, label %46, label %84

61:                                               ; preds = %46, %25, %27
  %62 = phi i64* [ %26, %25 ], [ %34, %27 ], [ %34, %46 ]
  %63 = load i32, i32* %3, align 4
  %64 = call %"class.base::HistogramBase"* @_ZN4base15CustomHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIiNS5_IiEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, i32 %63)
  %65 = icmp eq %"class.base::HistogramBase"* %64, null
  br i1 %65, label %84, label %66

66:                                               ; preds = %61
  %67 = load i32, i32* %7, align 4
  %68 = bitcast %"class.base::HistogramBase"* %64 to i32 (%"class.base::HistogramBase"*)***
  %69 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %69, i64 4
  %71 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %70, align 8
  %72 = call i32 %71(%"class.base::HistogramBase"* nonnull %64) #15
  %73 = icmp eq i32 %72, 5
  br i1 %73, label %83, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %64, i64 1
  %76 = bitcast %"class.base::HistogramBase"* %75 to %"class.base::SampleVectorBase"**
  %77 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %76, align 8
  %78 = getelementptr inbounds %"class.base::SampleVectorBase", %"class.base::SampleVectorBase"* %77, i64 0, i32 2
  %79 = load %"class.base::BucketRanges"*, %"class.base::BucketRanges"** %78, align 8
  %80 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, %67
  br i1 %82, label %83, label %84

83:                                               ; preds = %66, %74
  br label %84

84:                                               ; preds = %54, %83, %74, %61
  %85 = phi i64* [ %62, %61 ], [ %62, %83 ], [ %62, %74 ], [ %34, %54 ]
  %86 = phi %"class.base::HistogramBase"* [ null, %61 ], [ %64, %83 ], [ null, %74 ], [ null, %54 ]
  %87 = load i32*, i32** %19, align 8
  %88 = icmp eq i32* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = ptrtoint i32* %87 to i64
  store i64 %90, i64* %85, align 8
  %91 = bitcast i32* %87 to i8*
  call void @_ZdlPv(i8* %91) #17
  br label %92

92:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  br label %93

93:                                               ; preds = %1, %92
  %94 = phi %"class.base::HistogramBase"* [ %86, %92 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  %95 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %100) #17
  br label %101

101:                                              ; preds = %93, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret %"class.base::HistogramBase"* %94
}

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

declare void @_ZNK4base13HistogramBase9CheckNameERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::HistogramBase"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK4base13HistogramBase10WriteAsciiEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::HistogramBase"*, %"class.std::__1::basic_string"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15LinearHistogramD2Ev(%"class.base::LinearHistogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.97"* %3, %"class.std::__1::__tree_node"* %6) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %7 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %7, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %7, align 8
  %9 = icmp eq %"class.base::SampleVectorBase"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.base::SampleVectorBase"* %8 to void (%"class.base::SampleVectorBase"*)***
  %12 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %12, i64 1
  %14 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %13, align 8
  tail call void %14(%"class.base::SampleVectorBase"* nonnull %8) #15
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds %"class.base::LinearHistogram", %"class.base::LinearHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %16, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %16, align 8
  %18 = icmp eq %"class.base::SampleVectorBase"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.base::SampleVectorBase"* %17 to void (%"class.base::SampleVectorBase"*)***
  %21 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %21, i64 1
  %23 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %22, align 8
  tail call void %23(%"class.base::SampleVectorBase"* nonnull %17) #15
  br label %24

24:                                               ; preds = %15, %19
  %25 = bitcast %"class.base::LinearHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %25) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16BooleanHistogramD0Ev(%"class.base::BooleanHistogram"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.97"* %3, %"class.std::__1::__tree_node"* %6) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %7 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %7, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %7, align 8
  %9 = icmp eq %"class.base::SampleVectorBase"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.base::SampleVectorBase"* %8 to void (%"class.base::SampleVectorBase"*)***
  %12 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %12, i64 1
  %14 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %13, align 8
  tail call void %14(%"class.base::SampleVectorBase"* nonnull %8) #15
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds %"class.base::BooleanHistogram", %"class.base::BooleanHistogram"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %16, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %16, align 8
  %18 = icmp eq %"class.base::SampleVectorBase"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.base::SampleVectorBase"* %17 to void (%"class.base::SampleVectorBase"*)***
  %21 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %21, i64 1
  %23 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %22, align 8
  tail call void %23(%"class.base::SampleVectorBase"* nonnull %17) #15
  br label %24

24:                                               ; preds = %15, %19
  %25 = bitcast %"class.base::BooleanHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %25) #15
  %26 = bitcast %"class.base::BooleanHistogram"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9HistogramD2Ev(%"class.base::Histogram"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %3, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %3, align 8
  %5 = icmp eq %"class.base::SampleVectorBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::SampleVectorBase"* %4 to void (%"class.base::SampleVectorBase"*)***
  %8 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %8, i64 1
  %10 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %9, align 8
  tail call void %10(%"class.base::SampleVectorBase"* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.base::Histogram", %"class.base::Histogram"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %12, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %12, align 8
  %14 = icmp eq %"class.base::SampleVectorBase"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.base::SampleVectorBase"* %13 to void (%"class.base::SampleVectorBase"*)***
  %17 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %17, i64 1
  %19 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %18, align 8
  tail call void %19(%"class.base::SampleVectorBase"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.base::Histogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %21) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base15CustomHistogramD0Ev(%"class.base::CustomHistogram"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base9HistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %3, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %3, align 8
  %5 = icmp eq %"class.base::SampleVectorBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::SampleVectorBase"* %4 to void (%"class.base::SampleVectorBase"*)***
  %8 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %8, i64 1
  %10 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %9, align 8
  tail call void %10(%"class.base::SampleVectorBase"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.base::CustomHistogram", %"class.base::CustomHistogram"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::SampleVectorBase"*, %"class.base::SampleVectorBase"** %12, align 8
  store %"class.base::SampleVectorBase"* null, %"class.base::SampleVectorBase"** %12, align 8
  %14 = icmp eq %"class.base::SampleVectorBase"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.base::SampleVectorBase"* %13 to void (%"class.base::SampleVectorBase"*)***
  %17 = load void (%"class.base::SampleVectorBase"*)**, void (%"class.base::SampleVectorBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %17, i64 1
  %19 = load void (%"class.base::SampleVectorBase"*)*, void (%"class.base::SampleVectorBase"*)** %18, align 8
  tail call void %19(%"class.base::SampleVectorBase"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.base::CustomHistogram"* %0 to %"class.base::HistogramBase"*
  tail call void @_ZN4base13HistogramBaseD2Ev(%"class.base::HistogramBase"* %21) #15
  %22 = bitcast %"class.base::CustomHistogram"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BucketRanges"* @_ZN4base9Histogram7Factory12CreateRangesEv(%"class.base::Histogram::Factory"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #17
  %3 = bitcast i8* %2 to %"class.base::BucketRanges"*
  %4 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = zext i32 %6 to i64
  tail call void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"* nonnull %3, i64 %7) #15
  %8 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  tail call void @_ZN4base9Histogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32 %9, i32 %11, %"class.base::BucketRanges"* nonnull %3)
  ret %"class.base::BucketRanges"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::HistogramBase"* @_ZN4base9Histogram7Factory9HeapAllocEPKNS_12BucketRangesE(%"class.base::Histogram::Factory"*, %"class.base::BucketRanges"*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = bitcast i8* %3 to %"class.base::Histogram"*
  %5 = getelementptr inbounds %"class.base::Histogram::Factory", %"class.base::Histogram::Factory"* %0, i64 0, i32 1
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = tail call i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %6) #15
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* nonnull %4, i8* %7, i32 undef, i32 undef, %"class.base::BucketRanges"* %1)
  %8 = bitcast i8* %3 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9Histogram7Factory13FillHistogramEPNS_13HistogramBaseE(%"class.base::Histogram::Factory"*, %"class.base::HistogramBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"*, i64) unnamed_addr #2

declare i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BucketRanges"* @_ZN4base15LinearHistogram7Factory12CreateRangesEv(%"class.base::LinearHistogram::Factory"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #17
  %3 = bitcast i8* %2 to %"class.base::BucketRanges"*
  %4 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %0, i64 0, i32 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = zext i32 %6 to i64
  tail call void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"* nonnull %3, i64 %7) #15
  %8 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %0, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %0, i64 0, i32 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = sitofp i32 %9 to double
  %13 = sitofp i32 %11 to double
  %14 = getelementptr inbounds i8, i8* %2, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, -1
  %22 = icmp ugt i64 %21, 1
  %23 = inttoptr i64 %18 to i32*
  br i1 %22, label %24, label %54

24:                                               ; preds = %1
  %25 = add nsw i64 %20, -3
  %26 = uitofp i64 %25 to double
  %27 = bitcast i8* %2 to i32**
  br label %35

28:                                               ; preds = %35
  %29 = load i64, i64* %15, align 8
  %30 = load i64, i64* %17, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 2
  %33 = add nsw i64 %32, -1
  %34 = inttoptr i64 %30 to i32*
  br label %54

35:                                               ; preds = %52, %24
  %36 = phi i32* [ %23, %24 ], [ %53, %52 ]
  %37 = phi i64 [ 1, %24 ], [ %50, %52 ]
  %38 = xor i64 %37, -1
  %39 = add i64 %21, %38
  %40 = uitofp i64 %39 to double
  %41 = fmul double %12, %40
  %42 = add i64 %37, -1
  %43 = uitofp i64 %42 to double
  %44 = fmul double %13, %43
  %45 = fadd double %41, %44
  %46 = fdiv double %45, %26
  %47 = fadd double %46, 5.000000e-01
  %48 = fptosi double %47 to i32
  %49 = getelementptr inbounds i32, i32* %36, i64 %37
  store i32 %48, i32* %49, align 4
  %50 = add nuw i64 %37, 1
  %51 = icmp eq i64 %50, %21
  br i1 %51, label %28, label %52

52:                                               ; preds = %35
  %53 = load i32*, i32** %27, align 8
  br label %35

54:                                               ; preds = %1, %28
  %55 = phi i32* [ %34, %28 ], [ %23, %1 ]
  %56 = phi i64 [ %33, %28 ], [ %21, %1 ]
  %57 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %58 = getelementptr inbounds i32, i32* %55, i64 %56
  store i32 %57, i32* %58, align 4
  tail call void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"* nonnull %3) #15
  ret %"class.base::BucketRanges"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::HistogramBase"* @_ZN4base15LinearHistogram7Factory9HeapAllocEPKNS_12BucketRangesE(%"class.base::LinearHistogram::Factory"*, %"class.base::BucketRanges"*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #17
  %4 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = tail call i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %5) #15
  %7 = bitcast i8* %3 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* nonnull %7, i8* %6, i32 undef, i32 undef, %"class.base::BucketRanges"* %1) #15
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15LinearHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  %10 = getelementptr inbounds i8, i8* %3, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #15
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = bitcast i8* %3 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base15LinearHistogram7Factory13FillHistogramEPNS_13HistogramBaseE(%"class.base::LinearHistogram::Factory"*, %"class.base::HistogramBase"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.base::HistogramBase"* %1 to i32 (%"class.base::HistogramBase"*)***
  %4 = load i32 (%"class.base::HistogramBase"*)**, i32 (%"class.base::HistogramBase"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %4, i64 4
  %6 = load i32 (%"class.base::HistogramBase"*)*, i32 (%"class.base::HistogramBase"*)** %5, align 8
  %7 = tail call i32 %6(%"class.base::HistogramBase"* %1) #15
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %127, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::LinearHistogram::Factory", %"class.base::LinearHistogram::Factory"* %0, i64 0, i32 1
  %11 = load %"struct.base::LinearHistogram::DescriptionPair"*, %"struct.base::LinearHistogram::DescriptionPair"** %10, align 8
  %12 = icmp eq %"struct.base::LinearHistogram::DescriptionPair"* %11, null
  br i1 %12, label %127, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.base::LinearHistogram::DescriptionPair", %"struct.base::LinearHistogram::DescriptionPair"* %11, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %127, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %1, i64 1, i32 2
  %19 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %18, i64 2
  %20 = bitcast %"struct.std::__1::atomic"* %19 to %"class.std::__1::__tree_node"**
  %21 = bitcast %"struct.std::__1::atomic"* %19 to %"class.std::__1::__tree_node_base"**
  %22 = bitcast %"struct.std::__1::atomic"* %19 to %"class.std::__1::__tree_end_node"*
  %23 = bitcast %"struct.std::__1::atomic"* %18 to %"class.std::__1::__tree_end_node"**
  %24 = bitcast %"struct.std::__1::atomic"* %18 to i64*
  %25 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %18, i64 4
  %26 = bitcast %"struct.std::__1::atomic"* %25 to i64*
  br label %27

27:                                               ; preds = %17, %121
  %28 = phi i64 [ 0, %17 ], [ %122, %121 ]
  %29 = phi i8* [ %15, %17 ], [ %125, %121 ]
  %30 = phi %"struct.base::LinearHistogram::DescriptionPair"* [ %11, %17 ], [ %123, %121 ]
  %31 = getelementptr inbounds %"struct.base::LinearHistogram::DescriptionPair", %"struct.base::LinearHistogram::DescriptionPair"* %30, i64 %28, i32 0
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %27
  %35 = load i32, i32* %31, align 4
  br label %36

36:                                               ; preds = %58, %34
  %37 = phi %"class.std::__1::__tree_node"* [ %61, %58 ], [ %32, %34 ]
  %38 = phi %"class.std::__1::__tree_node_base"** [ %60, %58 ], [ %21, %34 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 1, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %35, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 0
  br label %62

48:                                               ; preds = %36
  %49 = icmp slt i32 %40, %35
  br i1 %49, label %50, label %56

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 1
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 0
  br label %62

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 0
  br label %62

58:                                               ; preds = %50, %42
  %59 = phi %"class.std::__1::__tree_node_base"* [ %44, %42 ], [ %52, %50 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %43, %42 ], [ %51, %50 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"* %59 to %"class.std::__1::__tree_node"*
  br label %36

62:                                               ; preds = %27, %56, %54, %46
  %63 = phi %"class.std::__1::__tree_end_node"* [ %47, %46 ], [ %55, %54 ], [ %57, %56 ], [ %22, %27 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %43, %46 ], [ %51, %54 ], [ %38, %56 ], [ %21, %27 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %68, label %91

68:                                               ; preds = %62
  %69 = tail call i8* @_Znwm(i64 64) #17, !noalias !6
  %70 = getelementptr inbounds i8, i8* %69, i64 32
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %31, align 4, !noalias !6
  store i32 %72, i32* %71, align 8, !noalias !6
  %73 = getelementptr inbounds i8, i8* %69, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #15, !noalias !6
  %74 = bitcast i8* %69 to %"class.std::__1::__tree_node"*
  %75 = bitcast i8* %69 to %"class.std::__1::__tree_node_base"*
  %76 = getelementptr inbounds i8, i8* %69, i64 16
  %77 = bitcast i8* %76 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %77, align 8
  %78 = bitcast %"class.std::__1::__tree_node_base"** %64 to i8**
  store i8* %69, i8** %78, align 8
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %68
  %84 = ptrtoint %"class.std::__1::__tree_node_base"* %81 to i64
  store i64 %84, i64* %24, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  br label %86

86:                                               ; preds = %83, %68
  %87 = phi %"class.std::__1::__tree_node_base"* [ %75, %68 ], [ %85, %83 ]
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %88, %"class.std::__1::__tree_node_base"* %87) #15
  %89 = load i64, i64* %26, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %26, align 8
  br label %91

91:                                               ; preds = %62, %86
  %92 = phi %"class.std::__1::__tree_node"* [ %74, %86 ], [ %66, %62 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1, i32 0, i32 1
  %94 = load i8, i8* %29, align 1
  %95 = tail call i1 @llvm.is.constant.i8(i8 %94) #15
  br i1 %95, label %96, label %119

96:                                               ; preds = %91
  %97 = tail call i64 @strlen(i8* nonnull %29) #15
  %98 = icmp ult i64 %97, 23
  br i1 %98, label %99, label %117

99:                                               ; preds = %96
  %100 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %97, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  br label %111

108:                                              ; preds = %99
  %109 = trunc i64 %97 to i8
  store i8 %109, i8* %101, align 1
  %110 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  br label %111

111:                                              ; preds = %108, %104
  %112 = phi i8* [ %107, %104 ], [ %110, %108 ]
  %113 = icmp eq i64 %97, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %112, i8* nonnull align 1 %29, i64 %97, i1 false) #15
  br label %115

115:                                              ; preds = %114, %111
  %116 = getelementptr inbounds i8, i8* %112, i64 %97
  store i8 0, i8* %116, align 1
  br label %121

117:                                              ; preds = %96
  %118 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %93, i8* nonnull %29, i64 %97) #15
  br label %121

119:                                              ; preds = %91
  %120 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %93, i8* nonnull %29) #15
  br label %121

121:                                              ; preds = %115, %117, %119
  %122 = add nuw i64 %28, 1
  %123 = load %"struct.base::LinearHistogram::DescriptionPair"*, %"struct.base::LinearHistogram::DescriptionPair"** %10, align 8
  %124 = getelementptr inbounds %"struct.base::LinearHistogram::DescriptionPair", %"struct.base::LinearHistogram::DescriptionPair"* %123, i64 %122, i32 1
  %125 = load i8*, i8** %124, align 8
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %27

127:                                              ; preds = %121, %13, %9, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !9
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #13

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BucketRanges"* @_ZN4base16BooleanHistogram7Factory12CreateRangesEv(%"class.base::BooleanHistogram::Factory"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #17
  %3 = bitcast i8* %2 to %"class.base::BucketRanges"*
  tail call void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"* nonnull %3, i64 4) #15
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = add nsw i64 %10, -1
  %12 = icmp ugt i64 %11, 1
  %13 = inttoptr i64 %8 to i32*
  br i1 %12, label %14, label %43

14:                                               ; preds = %1
  %15 = add nsw i64 %10, -3
  %16 = uitofp i64 %15 to double
  %17 = bitcast i8* %2 to i32**
  br label %25

18:                                               ; preds = %25
  %19 = load i64, i64* %5, align 8
  %20 = load i64, i64* %7, align 8
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, -1
  %24 = inttoptr i64 %20 to i32*
  br label %43

25:                                               ; preds = %41, %14
  %26 = phi i32* [ %13, %14 ], [ %42, %41 ]
  %27 = phi i64 [ 1, %14 ], [ %39, %41 ]
  %28 = xor i64 %27, -1
  %29 = add i64 %11, %28
  %30 = uitofp i64 %29 to double
  %31 = add i64 %27, -1
  %32 = uitofp i64 %31 to double
  %33 = fmul double %32, 2.000000e+00
  %34 = fadd double %33, %30
  %35 = fdiv double %34, %16
  %36 = fadd double %35, 5.000000e-01
  %37 = fptosi double %36 to i32
  %38 = getelementptr inbounds i32, i32* %26, i64 %27
  store i32 %37, i32* %38, align 4
  %39 = add nuw i64 %27, 1
  %40 = icmp eq i64 %39, %11
  br i1 %40, label %18, label %41

41:                                               ; preds = %25
  %42 = load i32*, i32** %17, align 8
  br label %25

43:                                               ; preds = %1, %18
  %44 = phi i32* [ %24, %18 ], [ %13, %1 ]
  %45 = phi i64 [ %23, %18 ], [ %11, %1 ]
  %46 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  %47 = getelementptr inbounds i32, i32* %44, i64 %45
  store i32 %46, i32* %47, align 4
  tail call void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"* nonnull %3) #15
  ret %"class.base::BucketRanges"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram7Factory9HeapAllocEPKNS_12BucketRangesE(%"class.base::BooleanHistogram::Factory"*, %"class.base::BucketRanges"*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #17
  %4 = getelementptr inbounds %"class.base::BooleanHistogram::Factory", %"class.base::BooleanHistogram::Factory"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = tail call i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %5) #15
  %7 = bitcast i8* %3 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* nonnull %7, i8* %6, i32 undef, i32 undef, %"class.base::BucketRanges"* %1) #15
  %8 = bitcast i8* %3 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  %10 = getelementptr inbounds i8, i8* %3, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #15
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base16BooleanHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = bitcast i8* %3 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BucketRanges"* @_ZN4base15CustomHistogram7Factory12CreateRangesEv(%"class.base::CustomHistogram::Factory"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::internal::BinaryPredicateProjector", align 8
  %3 = alloca %"struct.std::__1::less.134", align 1
  %4 = alloca %"struct.base::identity", align 1
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #15
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 2
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %1
  %21 = icmp ugt i64 %18, 4611686018427387903
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #16
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #17
  %26 = bitcast i8* %25 to i32*
  %27 = bitcast i32** %8 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %25, i8** %28, align 8
  %29 = getelementptr inbounds i32, i32* %26, i64 %18
  store i32* %29, i32** %9, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i64, i64* %13, align 8
  %33 = bitcast i32** %8 to i64*
  %34 = ptrtoint i8* %25 to i64
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %24
  %39 = lshr exact i64 %36, 2
  %40 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 %40, i64 %36, i1 false) #15
  %41 = getelementptr inbounds i32, i32* %26, i64 %39
  %42 = ptrtoint i32* %41 to i64
  br label %43

43:                                               ; preds = %24, %38
  %44 = phi i64 [ %42, %38 ], [ %34, %24 ]
  store i64 %44, i64* %33, align 8
  %45 = inttoptr i64 %44 to i32*
  %46 = icmp ugt i32* %29, %45
  %47 = ptrtoint i32* %29 to i64
  br i1 %46, label %48, label %54

48:                                               ; preds = %43
  store i32 0, i32* %45, align 4
  %49 = getelementptr inbounds i32, i32* %45, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32** %8 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load i32*, i32** %9, align 8
  %53 = ptrtoint i32* %52 to i64
  br label %108

54:                                               ; preds = %1, %43
  %55 = phi i64 [ %47, %43 ], [ 0, %1 ]
  %56 = phi i32* [ %45, %43 ], [ null, %1 ]
  %57 = phi i64 [ %34, %43 ], [ 0, %1 ]
  %58 = phi i32* [ %26, %43 ], [ null, %1 ]
  %59 = phi i8* [ %25, %43 ], [ null, %1 ]
  %60 = phi i64 [ %44, %43 ], [ 0, %1 ]
  %61 = ptrtoint i32* %56 to i64
  %62 = bitcast i32** %8 to i64*
  %63 = bitcast %"class.std::__1::vector"* %5 to i64*
  %64 = sub i64 %61, %57
  %65 = ashr exact i64 %64, 2
  %66 = add nsw i64 %65, 1
  %67 = icmp ugt i64 %66, 4611686018427387903
  br i1 %67, label %68, label %70

68:                                               ; preds = %54
  %69 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %69) #16
  unreachable

70:                                               ; preds = %54
  %71 = bitcast i32** %9 to i64*
  %72 = sub i64 %55, %57
  %73 = ashr exact i64 %72, 2
  %74 = icmp ult i64 %73, 2305843009213693951
  br i1 %74, label %75, label %83

75:                                               ; preds = %70
  %76 = ashr exact i64 %72, 1
  %77 = icmp ult i64 %76, %66
  %78 = select i1 %77, i64 %66, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %75
  %81 = icmp ugt i64 %78, 4611686018427387903
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  tail call void @abort() #16
  unreachable

83:                                               ; preds = %80, %70
  %84 = phi i64 [ %78, %80 ], [ 4611686018427387903, %70 ]
  %85 = shl i64 %84, 2
  %86 = tail call i8* @_Znwm(i64 %85) #17
  %87 = bitcast i8* %86 to i32*
  br label %88

88:                                               ; preds = %83, %75
  %89 = phi i64 [ %84, %83 ], [ 0, %75 ]
  %90 = phi i32* [ %87, %83 ], [ null, %75 ]
  %91 = getelementptr inbounds i32, i32* %90, i64 %65
  %92 = getelementptr inbounds i32, i32* %90, i64 %89
  %93 = ptrtoint i32* %92 to i64
  store i32 0, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %91, i64 1
  %95 = ptrtoint i32* %94 to i64
  %96 = ptrtoint i32* %58 to i64
  %97 = sub i64 %60, %96
  %98 = ashr exact i64 %97, 2
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds i32, i32* %91, i64 %99
  %101 = ptrtoint i32* %100 to i64
  %102 = icmp sgt i64 %97, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %88
  %104 = bitcast i32* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %59, i64 %97, i1 false) #15
  br label %105

105:                                              ; preds = %103, %88
  store i64 %101, i64* %63, align 8
  store i64 %95, i64* %62, align 8
  store i64 %93, i64* %71, align 8
  %106 = icmp eq i32* %58, null
  br i1 %106, label %108, label %107

107:                                              ; preds = %105
  tail call void @_ZdlPv(i8* %59) #17
  br label %108

108:                                              ; preds = %48, %105, %107
  %109 = phi i64 [ %53, %48 ], [ %93, %105 ], [ %93, %107 ]
  %110 = phi i64 [ %50, %48 ], [ %95, %105 ], [ %95, %107 ]
  %111 = phi i32* [ %52, %48 ], [ %92, %105 ], [ %92, %107 ]
  %112 = phi i32* [ %49, %48 ], [ %94, %105 ], [ %94, %107 ]
  %113 = icmp eq i32* %112, %111
  br i1 %113, label %120, label %114

114:                                              ; preds = %108
  %115 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  store i32 %115, i32* %112, align 4
  %116 = getelementptr inbounds i32, i32* %112, i64 1
  %117 = ptrtoint i32* %116 to i64
  %118 = bitcast i32** %8 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load i32*, i32** %7, align 8
  br label %168

120:                                              ; preds = %108
  %121 = bitcast i32** %8 to i64*
  %122 = bitcast %"class.std::__1::vector"* %5 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %109, %123
  %125 = ashr exact i64 %124, 2
  %126 = add nsw i64 %125, 1
  %127 = icmp ugt i64 %126, 4611686018427387903
  br i1 %127, label %128, label %130

128:                                              ; preds = %120
  %129 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %129) #16
  unreachable

130:                                              ; preds = %120
  %131 = bitcast i32** %9 to i64*
  %132 = icmp ult i64 %125, 2305843009213693951
  br i1 %132, label %133, label %141

133:                                              ; preds = %130
  %134 = ashr exact i64 %124, 1
  %135 = icmp ult i64 %134, %126
  %136 = select i1 %135, i64 %126, i64 %134
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %133
  %139 = icmp ugt i64 %136, 4611686018427387903
  br i1 %139, label %140, label %141

140:                                              ; preds = %138
  tail call void @abort() #16
  unreachable

141:                                              ; preds = %138, %130
  %142 = phi i64 [ %136, %138 ], [ 4611686018427387903, %130 ]
  %143 = shl i64 %142, 2
  %144 = tail call i8* @_Znwm(i64 %143) #17
  %145 = bitcast i8* %144 to i32*
  br label %146

146:                                              ; preds = %141, %133
  %147 = phi i64 [ %142, %141 ], [ 0, %133 ]
  %148 = phi i32* [ %145, %141 ], [ null, %133 ]
  %149 = getelementptr inbounds i32, i32* %148, i64 %125
  %150 = getelementptr inbounds i32, i32* %148, i64 %147
  %151 = ptrtoint i32* %150 to i64
  %152 = load i32, i32* @_ZN4base13HistogramBase15kSampleType_MAXE, align 4
  store i32 %152, i32* %149, align 4
  %153 = getelementptr inbounds i32, i32* %149, i64 1
  %154 = ptrtoint i32* %153 to i64
  %155 = sub i64 %110, %123
  %156 = ashr exact i64 %155, 2
  %157 = sub nsw i64 0, %156
  %158 = getelementptr inbounds i32, i32* %149, i64 %157
  %159 = ptrtoint i32* %158 to i64
  %160 = icmp sgt i64 %155, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %146
  %162 = bitcast i32* %158 to i8*
  %163 = inttoptr i64 %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %163, i64 %155, i1 false) #15
  br label %164

164:                                              ; preds = %161, %146
  store i64 %159, i64* %122, align 8
  store i64 %154, i64* %121, align 8
  store i64 %151, i64* %131, align 8
  %165 = icmp eq i64 %123, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %164
  %167 = inttoptr i64 %123 to i8*
  tail call void @_ZdlPv(i8* %167) #17
  br label %168

168:                                              ; preds = %114, %164, %166
  %169 = phi i32* [ %116, %114 ], [ %153, %164 ], [ %153, %166 ]
  %170 = phi i32* [ %119, %114 ], [ %158, %164 ], [ %158, %166 ]
  %171 = getelementptr inbounds %"struct.std::__1::less.134", %"struct.std::__1::less.134"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %171) #15
  %172 = getelementptr inbounds %"struct.base::identity", %"struct.base::identity"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172) #15
  %173 = bitcast %"class.base::internal::BinaryPredicateProjector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #15
  %174 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %2, i64 0, i32 0
  store %"struct.std::__1::less.134"* %3, %"struct.std::__1::less.134"** %174, align 8
  %175 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %2, i64 0, i32 1
  store %"struct.base::identity"* %4, %"struct.base::identity"** %175, align 8
  %176 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %2, i64 0, i32 2
  store %"struct.base::identity"* %4, %"struct.base::identity"** %176, align 8
  call void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEvT0_SA_T_(i32* %170, i32* %169, %"class.base::internal::BinaryPredicateProjector"* nonnull dereferenceable(24) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %171) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #15
  %177 = load i32*, i32** %7, align 8
  %178 = load i32*, i32** %8, align 8
  %179 = icmp eq i32* %177, %178
  %180 = ptrtoint i32* %178 to i64
  br i1 %179, label %189, label %181

181:                                              ; preds = %168, %185
  %182 = phi i32* [ %183, %185 ], [ %177, %168 ]
  %183 = getelementptr inbounds i32, i32* %182, i64 1
  %184 = icmp eq i32* %183, %178
  br i1 %184, label %268, label %185

185:                                              ; preds = %181
  %186 = load i32, i32* %182, align 4
  %187 = load i32, i32* %183, align 4
  %188 = icmp eq i32 %186, %187
  br i1 %188, label %189, label %181

189:                                              ; preds = %185, %168
  %190 = phi i32* [ %177, %168 ], [ %182, %185 ]
  %191 = ptrtoint i32* %190 to i64
  %192 = icmp eq i32* %190, %178
  br i1 %192, label %268, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds i32, i32* %190, i64 2
  %195 = icmp eq i32* %194, %178
  br i1 %195, label %251, label %196

196:                                              ; preds = %193
  %197 = getelementptr i32, i32* %178, i64 -3
  %198 = ptrtoint i32* %197 to i64
  %199 = sub i64 %198, %191
  %200 = lshr i64 %199, 2
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %223, label %204

204:                                              ; preds = %196, %215
  %205 = phi i32* [ %218, %215 ], [ %190, %196 ]
  %206 = phi i32* [ %217, %215 ], [ %194, %196 ]
  %207 = phi i64 [ %216, %215 ], [ %191, %196 ]
  %208 = phi i64 [ %219, %215 ], [ %202, %196 ]
  %209 = load i32, i32* %205, align 4
  %210 = load i32, i32* %206, align 4
  %211 = icmp eq i32 %209, %210
  br i1 %211, label %215, label %212

212:                                              ; preds = %204
  %213 = getelementptr inbounds i32, i32* %205, i64 1
  %214 = ptrtoint i32* %213 to i64
  store i32 %210, i32* %213, align 4
  br label %215

215:                                              ; preds = %212, %204
  %216 = phi i64 [ %207, %204 ], [ %214, %212 ]
  %217 = getelementptr inbounds i32, i32* %206, i64 1
  %218 = inttoptr i64 %216 to i32*
  %219 = add i64 %208, -1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %204, !llvm.loop !10

221:                                              ; preds = %215
  %222 = inttoptr i64 %216 to i32*
  br label %223

223:                                              ; preds = %196, %221
  %224 = phi i64 [ undef, %196 ], [ %216, %221 ]
  %225 = phi i32* [ %190, %196 ], [ %222, %221 ]
  %226 = phi i32* [ %194, %196 ], [ %217, %221 ]
  %227 = phi i64 [ %191, %196 ], [ %216, %221 ]
  %228 = icmp ult i64 %199, 12
  br i1 %228, label %246, label %229

229:                                              ; preds = %223, %328
  %230 = phi i32* [ %332, %328 ], [ %225, %223 ]
  %231 = phi i32* [ %330, %328 ], [ %226, %223 ]
  %232 = phi i64 [ %329, %328 ], [ %227, %223 ]
  %233 = load i32, i32* %230, align 4
  %234 = load i32, i32* %231, align 4
  %235 = icmp eq i32 %233, %234
  br i1 %235, label %239, label %236

236:                                              ; preds = %229
  %237 = getelementptr inbounds i32, i32* %230, i64 1
  %238 = ptrtoint i32* %237 to i64
  store i32 %234, i32* %237, align 4
  br label %239

239:                                              ; preds = %236, %229
  %240 = phi i64 [ %232, %229 ], [ %238, %236 ]
  %241 = getelementptr inbounds i32, i32* %231, i64 1
  %242 = inttoptr i64 %240 to i32*
  %243 = load i32, i32* %242, align 4
  %244 = load i32, i32* %241, align 4
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %308, label %305

246:                                              ; preds = %328, %223
  %247 = phi i64 [ %224, %223 ], [ %329, %328 ]
  %248 = inttoptr i64 %247 to i32*
  %249 = load i32*, i32** %8, align 8
  %250 = ptrtoint i32* %249 to i64
  br label %251

251:                                              ; preds = %193, %246
  %252 = phi i64 [ %250, %246 ], [ %180, %193 ]
  %253 = phi i32* [ %249, %246 ], [ %178, %193 ]
  %254 = phi i32* [ %248, %246 ], [ %190, %193 ]
  %255 = getelementptr inbounds i32, i32* %254, i64 1
  %256 = icmp eq i32* %255, %253
  br i1 %256, label %268, label %257

257:                                              ; preds = %251
  %258 = ptrtoint i32* %253 to i64
  %259 = sub i64 %252, %258
  %260 = ashr exact i64 %259, 2
  %261 = icmp eq i64 %259, 0
  br i1 %261, label %265, label %262

262:                                              ; preds = %257
  %263 = bitcast i32* %255 to i8*
  %264 = bitcast i32* %253 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 %259, i1 false) #15
  br label %265

265:                                              ; preds = %262, %257
  %266 = getelementptr inbounds i32, i32* %255, i64 %260
  store i32* %266, i32** %8, align 8
  %267 = ptrtoint i32* %266 to i64
  br label %268

268:                                              ; preds = %181, %189, %251, %265
  %269 = phi i64 [ %267, %265 ], [ %252, %251 ], [ %180, %189 ], [ %180, %181 ]
  %270 = bitcast i32** %8 to i64*
  %271 = call i8* @_Znwm(i64 32) #17
  %272 = bitcast i8* %271 to %"class.base::BucketRanges"*
  %273 = bitcast %"class.std::__1::vector"* %5 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = sub i64 %269, %274
  %276 = ashr exact i64 %275, 2
  call void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"* nonnull %272, i64 %276) #15
  %277 = load i64, i64* %270, align 8
  %278 = load i64, i64* %273, align 8
  %279 = icmp eq i64 %277, %278
  br i1 %279, label %282, label %280

280:                                              ; preds = %268
  %281 = bitcast i8* %271 to i32**
  br label %289

282:                                              ; preds = %289, %268
  call void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"* nonnull %272) #15
  %283 = load i32*, i32** %7, align 8
  %284 = icmp eq i32* %283, null
  br i1 %284, label %288, label %285

285:                                              ; preds = %282
  %286 = ptrtoint i32* %283 to i64
  store i64 %286, i64* %270, align 8
  %287 = bitcast i32* %283 to i8*
  call void @_ZdlPv(i8* %287) #17
  br label %288

288:                                              ; preds = %282, %285
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"class.base::BucketRanges"* %272

289:                                              ; preds = %280, %289
  %290 = phi i64 [ %278, %280 ], [ %301, %289 ]
  %291 = phi i64 [ 0, %280 ], [ %299, %289 ]
  %292 = phi i32 [ 0, %280 ], [ %298, %289 ]
  %293 = inttoptr i64 %290 to i32*
  %294 = getelementptr inbounds i32, i32* %293, i64 %291
  %295 = load i32, i32* %294, align 4
  %296 = load i32*, i32** %281, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %291
  store i32 %295, i32* %297, align 4
  %298 = add i32 %292, 1
  %299 = zext i32 %298 to i64
  %300 = load i64, i64* %270, align 8
  %301 = load i64, i64* %273, align 8
  %302 = sub i64 %300, %301
  %303 = ashr exact i64 %302, 2
  %304 = icmp ugt i64 %303, %299
  br i1 %304, label %289, label %282

305:                                              ; preds = %239
  %306 = getelementptr inbounds i32, i32* %242, i64 1
  %307 = ptrtoint i32* %306 to i64
  store i32 %244, i32* %306, align 4
  br label %308

308:                                              ; preds = %305, %239
  %309 = phi i64 [ %240, %239 ], [ %307, %305 ]
  %310 = getelementptr inbounds i32, i32* %231, i64 2
  %311 = inttoptr i64 %309 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = load i32, i32* %310, align 4
  %314 = icmp eq i32 %312, %313
  br i1 %314, label %318, label %315

315:                                              ; preds = %308
  %316 = getelementptr inbounds i32, i32* %311, i64 1
  %317 = ptrtoint i32* %316 to i64
  store i32 %313, i32* %316, align 4
  br label %318

318:                                              ; preds = %315, %308
  %319 = phi i64 [ %309, %308 ], [ %317, %315 ]
  %320 = getelementptr inbounds i32, i32* %231, i64 3
  %321 = inttoptr i64 %319 to i32*
  %322 = load i32, i32* %321, align 4
  %323 = load i32, i32* %320, align 4
  %324 = icmp eq i32 %322, %323
  br i1 %324, label %328, label %325

325:                                              ; preds = %318
  %326 = getelementptr inbounds i32, i32* %321, i64 1
  %327 = ptrtoint i32* %326 to i64
  store i32 %323, i32* %326, align 4
  br label %328

328:                                              ; preds = %325, %318
  %329 = phi i64 [ %319, %318 ], [ %327, %325 ]
  %330 = getelementptr inbounds i32, i32* %231, i64 4
  %331 = icmp eq i32* %330, %178
  %332 = inttoptr i64 %329 to i32*
  br i1 %331, label %246, label %229
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::HistogramBase"* @_ZN4base15CustomHistogram7Factory9HeapAllocEPKNS_12BucketRangesE(%"class.base::CustomHistogram::Factory"*, %"class.base::BucketRanges"*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = getelementptr inbounds %"class.base::CustomHistogram::Factory", %"class.base::CustomHistogram::Factory"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = tail call i8* @_ZN4base13HistogramBase16GetPermanentNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %5) #15
  %7 = bitcast i8* %3 to %"class.base::Histogram"*
  tail call void @_ZN4base9HistogramC2EPKciiPKNS_12BucketRangesE(%"class.base::Histogram"* nonnull %7, i8* %6, i32 undef, i32 undef, %"class.base::BucketRanges"* %1) #15
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN4base15CustomHistogramE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = bitcast i8* %3 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %9
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEvT0_SA_T_(i32*, i32*, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %247, %3
  %5 = phi i32* [ %1, %3 ], [ %231, %247 ]
  %6 = phi i32* [ %0, %3 ], [ %13, %247 ]
  %7 = ptrtoint i32* %5 to i64
  %8 = getelementptr inbounds i32, i32* %5, i64 -1
  %9 = ptrtoint i32* %5 to i64
  br label %10

10:                                               ; preds = %256, %4
  %11 = phi i32* [ %6, %4 ], [ %257, %256 ]
  br label %12

12:                                               ; preds = %192, %10
  %13 = phi i32* [ %11, %10 ], [ %183, %192 ]
  %14 = ptrtoint i32* %13 to i64
  %15 = sub i64 %7, %14
  %16 = ashr exact i64 %15, 2
  switch i64 %16, label %79 [
    i64 0, label %260
    i64 1, label %260
    i64 2, label %17
    i64 3, label %23
    i64 4, label %43
    i64 5, label %73
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds i32, i32* %5, i64 -1
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %13, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %260

22:                                               ; preds = %17
  store i32 %19, i32* %13, align 4
  store i32 %20, i32* %18, align 4
  br label %260

23:                                               ; preds = %12
  %24 = getelementptr inbounds i32, i32* %13, i64 1
  %25 = getelementptr inbounds i32, i32* %5, i64 -1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %13, align 4
  %28 = icmp slt i32 %26, %27
  %29 = load i32, i32* %25, align 4
  %30 = icmp slt i32 %29, %26
  br i1 %28, label %37, label %31

31:                                               ; preds = %23
  br i1 %30, label %32, label %260

32:                                               ; preds = %31
  store i32 %29, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %33 = load i32, i32* %24, align 4
  %34 = load i32, i32* %13, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %260

36:                                               ; preds = %32
  store i32 %33, i32* %13, align 4
  store i32 %34, i32* %24, align 4
  br label %260

37:                                               ; preds = %23
  br i1 %30, label %38, label %39

38:                                               ; preds = %37
  store i32 %29, i32* %13, align 4
  store i32 %27, i32* %25, align 4
  br label %260

39:                                               ; preds = %37
  store i32 %26, i32* %13, align 4
  store i32 %27, i32* %24, align 4
  %40 = load i32, i32* %25, align 4
  %41 = icmp slt i32 %40, %27
  br i1 %41, label %42, label %260

42:                                               ; preds = %39
  store i32 %40, i32* %24, align 4
  store i32 %27, i32* %25, align 4
  br label %260

43:                                               ; preds = %12
  %44 = getelementptr inbounds i32, i32* %13, i64 1
  %45 = getelementptr inbounds i32, i32* %13, i64 2
  %46 = getelementptr inbounds i32, i32* %5, i64 -1
  %47 = load i32, i32* %44, align 4
  %48 = load i32, i32* %13, align 4
  %49 = icmp slt i32 %47, %48
  %50 = load i32, i32* %45, align 4
  %51 = icmp slt i32 %50, %47
  br i1 %49, label %56, label %52

52:                                               ; preds = %43
  br i1 %51, label %53, label %61

53:                                               ; preds = %52
  store i32 %50, i32* %44, align 4
  store i32 %47, i32* %45, align 4
  %54 = icmp slt i32 %50, %48
  br i1 %54, label %55, label %61

55:                                               ; preds = %53
  store i32 %50, i32* %13, align 4
  store i32 %48, i32* %44, align 4
  br label %61

56:                                               ; preds = %43
  br i1 %51, label %57, label %58

57:                                               ; preds = %56
  store i32 %50, i32* %13, align 4
  store i32 %48, i32* %45, align 4
  br label %61

58:                                               ; preds = %56
  store i32 %47, i32* %13, align 4
  store i32 %48, i32* %44, align 4
  %59 = icmp slt i32 %50, %48
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  store i32 %50, i32* %44, align 4
  store i32 %48, i32* %45, align 4
  br label %61

61:                                               ; preds = %60, %58, %57, %55, %53, %52
  %62 = phi i32 [ %48, %57 ], [ %50, %52 ], [ %47, %55 ], [ %47, %53 ], [ %48, %60 ], [ %50, %58 ]
  %63 = load i32, i32* %46, align 4
  %64 = icmp slt i32 %63, %62
  br i1 %64, label %65, label %260

65:                                               ; preds = %61
  store i32 %63, i32* %45, align 4
  store i32 %62, i32* %46, align 4
  %66 = load i32, i32* %45, align 4
  %67 = load i32, i32* %44, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %260

69:                                               ; preds = %65
  store i32 %66, i32* %44, align 4
  store i32 %67, i32* %45, align 4
  %70 = load i32, i32* %13, align 4
  %71 = icmp slt i32 %66, %70
  br i1 %71, label %72, label %260

72:                                               ; preds = %69
  store i32 %66, i32* %13, align 4
  store i32 %70, i32* %44, align 4
  br label %260

73:                                               ; preds = %12
  %74 = getelementptr inbounds i32, i32* %13, i64 1
  %75 = getelementptr inbounds i32, i32* %13, i64 2
  %76 = getelementptr inbounds i32, i32* %13, i64 3
  %77 = getelementptr inbounds i32, i32* %5, i64 -1
  %78 = tail call i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEjT0_SA_SA_SA_SA_T_(i32* %13, i32* %74, i32* %75, i32* %76, i32* %77, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %260

79:                                               ; preds = %12
  %80 = icmp slt i64 %15, 124
  br i1 %80, label %81, label %124

81:                                               ; preds = %79
  %82 = getelementptr inbounds i32, i32* %13, i64 2
  %83 = getelementptr inbounds i32, i32* %13, i64 1
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* %13, align 4
  %86 = icmp slt i32 %84, %85
  %87 = load i32, i32* %82, align 4
  %88 = icmp slt i32 %87, %84
  br i1 %86, label %93, label %89

89:                                               ; preds = %81
  br i1 %88, label %90, label %98

90:                                               ; preds = %89
  store i32 %87, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %91 = icmp slt i32 %87, %85
  br i1 %91, label %92, label %98

92:                                               ; preds = %90
  store i32 %87, i32* %13, align 4
  store i32 %85, i32* %83, align 4
  br label %98

93:                                               ; preds = %81
  br i1 %88, label %94, label %95

94:                                               ; preds = %93
  store i32 %87, i32* %13, align 4
  store i32 %85, i32* %82, align 4
  br label %98

95:                                               ; preds = %93
  store i32 %84, i32* %13, align 4
  store i32 %85, i32* %83, align 4
  %96 = icmp slt i32 %87, %85
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  store i32 %87, i32* %83, align 4
  store i32 %85, i32* %82, align 4
  br label %98

98:                                               ; preds = %97, %95, %94, %92, %90, %89
  %99 = phi i32 [ %87, %89 ], [ %84, %90 ], [ %84, %92 ], [ %85, %94 ], [ %87, %95 ], [ %85, %97 ]
  %100 = getelementptr inbounds i32, i32* %13, i64 3
  %101 = icmp eq i32* %100, %5
  br i1 %101, label %260, label %102

102:                                              ; preds = %98, %122
  %103 = phi i32 [ %123, %122 ], [ %99, %98 ]
  %104 = phi i32* [ %120, %122 ], [ %100, %98 ]
  %105 = phi i32* [ %104, %122 ], [ %82, %98 ]
  %106 = load i32, i32* %104, align 4
  %107 = icmp slt i32 %106, %103
  br i1 %107, label %108, label %119

108:                                              ; preds = %102, %113
  %109 = phi i32 [ %115, %113 ], [ %103, %102 ]
  %110 = phi i32* [ %111, %113 ], [ %104, %102 ]
  %111 = phi i32* [ %114, %113 ], [ %105, %102 ]
  store i32 %109, i32* %110, align 4
  %112 = icmp eq i32* %111, %13
  br i1 %112, label %117, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i32, i32* %111, i64 -1
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %106, %115
  br i1 %116, label %108, label %117

117:                                              ; preds = %113, %108
  %118 = phi i32* [ %13, %108 ], [ %111, %113 ]
  store i32 %106, i32* %118, align 4
  br label %119

119:                                              ; preds = %117, %102
  %120 = getelementptr inbounds i32, i32* %104, i64 1
  %121 = icmp eq i32* %120, %5
  br i1 %121, label %260, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %104, align 4
  br label %102

124:                                              ; preds = %79
  %125 = icmp sgt i64 %15, 3996
  %126 = sdiv i64 %16, 2
  %127 = getelementptr inbounds i32, i32* %13, i64 %126
  br i1 %125, label %128, label %133

128:                                              ; preds = %124
  %129 = sdiv i64 %16, 4
  %130 = getelementptr inbounds i32, i32* %13, i64 %129
  %131 = getelementptr inbounds i32, i32* %127, i64 %129
  %132 = tail call i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEjT0_SA_SA_SA_SA_T_(i32* %13, i32* %130, i32* %127, i32* %131, i32* %8, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %151

133:                                              ; preds = %124
  %134 = load i32, i32* %127, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  %137 = load i32, i32* %8, align 4
  %138 = icmp slt i32 %137, %134
  br i1 %136, label %145, label %139

139:                                              ; preds = %133
  br i1 %138, label %140, label %151

140:                                              ; preds = %139
  store i32 %137, i32* %127, align 4
  store i32 %134, i32* %8, align 4
  %141 = load i32, i32* %127, align 4
  %142 = load i32, i32* %13, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %144, label %151

144:                                              ; preds = %140
  store i32 %141, i32* %13, align 4
  store i32 %142, i32* %127, align 4
  br label %151

145:                                              ; preds = %133
  br i1 %138, label %146, label %147

146:                                              ; preds = %145
  store i32 %137, i32* %13, align 4
  store i32 %135, i32* %8, align 4
  br label %151

147:                                              ; preds = %145
  store i32 %134, i32* %13, align 4
  store i32 %135, i32* %127, align 4
  %148 = load i32, i32* %8, align 4
  %149 = icmp slt i32 %148, %135
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  store i32 %148, i32* %127, align 4
  store i32 %135, i32* %8, align 4
  br label %151

151:                                              ; preds = %150, %147, %146, %144, %140, %139, %128
  %152 = phi i32 [ %132, %128 ], [ 1, %146 ], [ 0, %139 ], [ 2, %144 ], [ 1, %140 ], [ 2, %150 ], [ 1, %147 ]
  %153 = load i32, i32* %13, align 4
  %154 = load i32, i32* %127, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %200, label %156

156:                                              ; preds = %151, %195
  %157 = phi i32* [ %158, %195 ], [ %8, %151 ]
  %158 = getelementptr inbounds i32, i32* %157, i64 -1
  %159 = icmp eq i32* %13, %158
  br i1 %159, label %160, label %195

160:                                              ; preds = %156
  %161 = getelementptr inbounds i32, i32* %13, i64 1
  %162 = load i32, i32* %8, align 4
  %163 = icmp slt i32 %153, %162
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = icmp eq i32* %161, %8
  br i1 %165, label %260, label %166

166:                                              ; preds = %164, %172
  %167 = phi i32* [ %173, %172 ], [ %161, %164 ]
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %153, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  store i32 %162, i32* %167, align 4
  store i32 %168, i32* %8, align 4
  %171 = getelementptr inbounds i32, i32* %167, i64 1
  br label %175

172:                                              ; preds = %166
  %173 = getelementptr inbounds i32, i32* %167, i64 1
  %174 = icmp eq i32* %173, %8
  br i1 %174, label %260, label %166

175:                                              ; preds = %170, %160
  %176 = phi i32* [ %161, %160 ], [ %171, %170 ]
  %177 = icmp eq i32* %176, %8
  br i1 %177, label %260, label %178

178:                                              ; preds = %175, %194
  %179 = phi i32* [ %186, %194 ], [ %176, %175 ]
  %180 = phi i32* [ %189, %194 ], [ %8, %175 ]
  %181 = load i32, i32* %13, align 4
  br label %182

182:                                              ; preds = %182, %178
  %183 = phi i32* [ %179, %178 ], [ %186, %182 ]
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %181, %184
  %186 = getelementptr inbounds i32, i32* %183, i64 1
  br i1 %185, label %187, label %182

187:                                              ; preds = %182, %187
  %188 = phi i32* [ %189, %187 ], [ %180, %182 ]
  %189 = getelementptr inbounds i32, i32* %188, i64 -1
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %181, %190
  br i1 %191, label %187, label %192

192:                                              ; preds = %187
  %193 = icmp ult i32* %183, %189
  br i1 %193, label %194, label %12

194:                                              ; preds = %192
  store i32 %190, i32* %183, align 4
  store i32 %184, i32* %189, align 4
  br label %178

195:                                              ; preds = %156
  %196 = load i32, i32* %158, align 4
  %197 = icmp slt i32 %196, %154
  br i1 %197, label %198, label %156

198:                                              ; preds = %195
  store i32 %196, i32* %13, align 4
  store i32 %153, i32* %158, align 4
  %199 = add i32 %152, 1
  br label %200

200:                                              ; preds = %151, %198
  %201 = phi i32 [ %199, %198 ], [ %152, %151 ]
  %202 = phi i32* [ %158, %198 ], [ %8, %151 ]
  %203 = ptrtoint i32* %13 to i64
  %204 = getelementptr inbounds i32, i32* %13, i64 1
  %205 = icmp ult i32* %204, %202
  br i1 %205, label %206, label %228

206:                                              ; preds = %200, %224
  %207 = phi i32* [ %227, %224 ], [ %127, %200 ]
  %208 = phi i32 [ %225, %224 ], [ %201, %200 ]
  %209 = phi i32* [ %216, %224 ], [ %204, %200 ]
  %210 = phi i32* [ %219, %224 ], [ %202, %200 ]
  %211 = load i32, i32* %207, align 4
  br label %212

212:                                              ; preds = %212, %206
  %213 = phi i32* [ %209, %206 ], [ %216, %212 ]
  %214 = load i32, i32* %213, align 4
  %215 = icmp slt i32 %214, %211
  %216 = getelementptr inbounds i32, i32* %213, i64 1
  br i1 %215, label %212, label %217

217:                                              ; preds = %212, %217
  %218 = phi i32* [ %219, %217 ], [ %210, %212 ]
  %219 = getelementptr inbounds i32, i32* %218, i64 -1
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %220, %211
  br i1 %221, label %222, label %217

222:                                              ; preds = %217
  %223 = icmp ugt i32* %213, %219
  br i1 %223, label %228, label %224

224:                                              ; preds = %222
  store i32 %220, i32* %213, align 4
  store i32 %214, i32* %219, align 4
  %225 = add i32 %208, 1
  %226 = icmp eq i32* %207, %213
  %227 = select i1 %226, i32* %219, i32* %207
  br label %206

228:                                              ; preds = %222, %200
  %229 = phi i32* [ %127, %200 ], [ %207, %222 ]
  %230 = phi i32 [ %201, %200 ], [ %208, %222 ]
  %231 = phi i32* [ %204, %200 ], [ %213, %222 ]
  %232 = icmp eq i32* %231, %229
  br i1 %232, label %239, label %233

233:                                              ; preds = %228
  %234 = load i32, i32* %229, align 4
  %235 = load i32, i32* %231, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  store i32 %234, i32* %231, align 4
  store i32 %235, i32* %229, align 4
  %238 = add i32 %230, 1
  br label %239

239:                                              ; preds = %228, %237, %233
  %240 = phi i32 [ %238, %237 ], [ %230, %233 ], [ %230, %228 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %239
  %243 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEbT0_SA_T_(i32* %13, i32* %231, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  %244 = getelementptr inbounds i32, i32* %231, i64 1
  %245 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEbT0_SA_T_(i32* %244, i32* %5, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  br i1 %243, label %260, label %247

247:                                              ; preds = %246, %258
  br label %4

248:                                              ; preds = %242
  br i1 %243, label %256, label %249

249:                                              ; preds = %248, %239
  %250 = ptrtoint i32* %231 to i64
  %251 = sub i64 %250, %203
  %252 = sub i64 %9, %250
  %253 = icmp slt i64 %251, %252
  br i1 %253, label %254, label %258

254:                                              ; preds = %249
  tail call void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEvT0_SA_T_(i32* %13, i32* %231, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  %255 = getelementptr inbounds i32, i32* %231, i64 1
  br label %256

256:                                              ; preds = %254, %248
  %257 = phi i32* [ %244, %248 ], [ %255, %254 ]
  br label %10

258:                                              ; preds = %249
  %259 = getelementptr inbounds i32, i32* %231, i64 1
  tail call void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEvT0_SA_T_(i32* %259, i32* %5, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %247

260:                                              ; preds = %246, %175, %12, %12, %164, %172, %119, %98, %72, %69, %65, %61, %42, %39, %38, %36, %32, %31, %17, %22, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEjT0_SA_SA_SA_SA_T_(i32*, i32*, i32*, i32*, i32*, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %7 = load i32, i32* %1, align 4
  %8 = load i32, i32* %0, align 4
  %9 = icmp slt i32 %7, %8
  %10 = load i32, i32* %2, align 4
  %11 = icmp slt i32 %10, %7
  br i1 %9, label %19, label %12

12:                                               ; preds = %6
  br i1 %11, label %13, label %25

13:                                               ; preds = %12
  store i32 %10, i32* %1, align 4
  store i32 %7, i32* %2, align 4
  %14 = load i32, i32* %1, align 4
  %15 = load i32, i32* %0, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  store i32 %15, i32* %1, align 4
  %18 = load i32, i32* %2, align 4
  br label %25

19:                                               ; preds = %6
  br i1 %11, label %20, label %21

20:                                               ; preds = %19
  store i32 %10, i32* %0, align 4
  store i32 %8, i32* %2, align 4
  br label %25

21:                                               ; preds = %19
  store i32 %7, i32* %0, align 4
  store i32 %8, i32* %1, align 4
  %22 = load i32, i32* %2, align 4
  %23 = icmp slt i32 %22, %8
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i32 %22, i32* %1, align 4
  store i32 %8, i32* %2, align 4
  br label %25

25:                                               ; preds = %24, %21, %20, %17, %13, %12
  %26 = phi i32 [ %8, %20 ], [ %10, %12 ], [ %18, %17 ], [ %7, %13 ], [ %8, %24 ], [ %22, %21 ]
  %27 = phi i32 [ 1, %20 ], [ 0, %12 ], [ 2, %17 ], [ 1, %13 ], [ 2, %24 ], [ 1, %21 ]
  %28 = load i32, i32* %3, align 4
  %29 = icmp slt i32 %28, %26
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  store i32 %28, i32* %2, align 4
  store i32 %26, i32* %3, align 4
  %31 = add nuw nsw i32 %27, 1
  %32 = load i32, i32* %2, align 4
  %33 = load i32, i32* %1, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  store i32 %32, i32* %1, align 4
  store i32 %33, i32* %2, align 4
  %36 = add nuw nsw i32 %27, 2
  %37 = load i32, i32* %1, align 4
  %38 = load i32, i32* %0, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  store i32 %37, i32* %0, align 4
  store i32 %38, i32* %1, align 4
  %41 = add nuw nsw i32 %27, 3
  br label %42

42:                                               ; preds = %25, %30, %35, %40
  %43 = phi i32 [ %41, %40 ], [ %36, %35 ], [ %31, %30 ], [ %27, %25 ]
  %44 = load i32, i32* %4, align 4
  %45 = load i32, i32* %3, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %64

47:                                               ; preds = %42
  store i32 %44, i32* %3, align 4
  store i32 %45, i32* %4, align 4
  %48 = add nuw nsw i32 %43, 1
  %49 = load i32, i32* %3, align 4
  %50 = load i32, i32* %2, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  store i32 %49, i32* %2, align 4
  store i32 %50, i32* %3, align 4
  %53 = add nuw nsw i32 %43, 2
  %54 = load i32, i32* %2, align 4
  %55 = load i32, i32* %1, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %52
  store i32 %54, i32* %1, align 4
  store i32 %55, i32* %2, align 4
  %58 = add nuw nsw i32 %43, 3
  %59 = load i32, i32* %1, align 4
  %60 = load i32, i32* %0, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  store i32 %59, i32* %0, align 4
  store i32 %60, i32* %1, align 4
  %63 = add nuw nsw i32 %43, 4
  br label %64

64:                                               ; preds = %47, %57, %62, %52, %42
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ], [ %53, %52 ], [ %48, %47 ], [ %43, %42 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEbT0_SA_T_(i32*, i32*, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %70 [
    i64 0, label %120
    i64 1, label %120
    i64 2, label %8
    i64 3, label %14
    i64 4, label %34
    i64 5, label %64
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %120

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %120

14:                                               ; preds = %3
  %15 = getelementptr inbounds i32, i32* %0, i64 1
  %16 = getelementptr inbounds i32, i32* %1, i64 -1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %0, align 4
  %19 = icmp slt i32 %17, %18
  %20 = load i32, i32* %16, align 4
  %21 = icmp slt i32 %20, %17
  br i1 %19, label %28, label %22

22:                                               ; preds = %14
  br i1 %21, label %23, label %120

23:                                               ; preds = %22
  store i32 %20, i32* %15, align 4
  store i32 %17, i32* %16, align 4
  %24 = load i32, i32* %15, align 4
  %25 = load i32, i32* %0, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %120

27:                                               ; preds = %23
  store i32 %24, i32* %0, align 4
  store i32 %25, i32* %15, align 4
  br label %120

28:                                               ; preds = %14
  br i1 %21, label %29, label %30

29:                                               ; preds = %28
  store i32 %20, i32* %0, align 4
  store i32 %18, i32* %16, align 4
  br label %120

30:                                               ; preds = %28
  store i32 %17, i32* %0, align 4
  store i32 %18, i32* %15, align 4
  %31 = load i32, i32* %16, align 4
  %32 = icmp slt i32 %31, %18
  br i1 %32, label %33, label %120

33:                                               ; preds = %30
  store i32 %31, i32* %15, align 4
  store i32 %18, i32* %16, align 4
  br label %120

34:                                               ; preds = %3
  %35 = getelementptr inbounds i32, i32* %0, i64 1
  %36 = getelementptr inbounds i32, i32* %0, i64 2
  %37 = getelementptr inbounds i32, i32* %1, i64 -1
  %38 = load i32, i32* %35, align 4
  %39 = load i32, i32* %0, align 4
  %40 = icmp slt i32 %38, %39
  %41 = load i32, i32* %36, align 4
  %42 = icmp slt i32 %41, %38
  br i1 %40, label %47, label %43

43:                                               ; preds = %34
  br i1 %42, label %44, label %52

44:                                               ; preds = %43
  store i32 %41, i32* %35, align 4
  store i32 %38, i32* %36, align 4
  %45 = icmp slt i32 %41, %39
  br i1 %45, label %46, label %52

46:                                               ; preds = %44
  store i32 %41, i32* %0, align 4
  store i32 %39, i32* %35, align 4
  br label %52

47:                                               ; preds = %34
  br i1 %42, label %48, label %49

48:                                               ; preds = %47
  store i32 %41, i32* %0, align 4
  store i32 %39, i32* %36, align 4
  br label %52

49:                                               ; preds = %47
  store i32 %38, i32* %0, align 4
  store i32 %39, i32* %35, align 4
  %50 = icmp slt i32 %41, %39
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  store i32 %41, i32* %35, align 4
  store i32 %39, i32* %36, align 4
  br label %52

52:                                               ; preds = %51, %49, %48, %46, %44, %43
  %53 = phi i32 [ %39, %48 ], [ %41, %43 ], [ %38, %46 ], [ %38, %44 ], [ %39, %51 ], [ %41, %49 ]
  %54 = load i32, i32* %37, align 4
  %55 = icmp slt i32 %54, %53
  br i1 %55, label %56, label %120

56:                                               ; preds = %52
  store i32 %54, i32* %36, align 4
  store i32 %53, i32* %37, align 4
  %57 = load i32, i32* %36, align 4
  %58 = load i32, i32* %35, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %120

60:                                               ; preds = %56
  store i32 %57, i32* %35, align 4
  store i32 %58, i32* %36, align 4
  %61 = load i32, i32* %0, align 4
  %62 = icmp slt i32 %57, %61
  br i1 %62, label %63, label %120

63:                                               ; preds = %60
  store i32 %57, i32* %0, align 4
  store i32 %61, i32* %35, align 4
  br label %120

64:                                               ; preds = %3
  %65 = getelementptr inbounds i32, i32* %0, i64 1
  %66 = getelementptr inbounds i32, i32* %0, i64 2
  %67 = getelementptr inbounds i32, i32* %0, i64 3
  %68 = getelementptr inbounds i32, i32* %1, i64 -1
  %69 = tail call i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPiEEjT0_SA_SA_SA_SA_T_(i32* %0, i32* %65, i32* %66, i32* %67, i32* %68, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %120

70:                                               ; preds = %3
  %71 = getelementptr inbounds i32, i32* %0, i64 2
  %72 = getelementptr inbounds i32, i32* %0, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %0, align 4
  %75 = icmp slt i32 %73, %74
  %76 = load i32, i32* %71, align 4
  %77 = icmp slt i32 %76, %73
  br i1 %75, label %82, label %78

78:                                               ; preds = %70
  br i1 %77, label %79, label %87

79:                                               ; preds = %78
  store i32 %76, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %80 = icmp slt i32 %76, %74
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  store i32 %76, i32* %0, align 4
  store i32 %74, i32* %72, align 4
  br label %87

82:                                               ; preds = %70
  br i1 %77, label %83, label %84

83:                                               ; preds = %82
  store i32 %76, i32* %0, align 4
  store i32 %74, i32* %71, align 4
  br label %87

84:                                               ; preds = %82
  store i32 %73, i32* %0, align 4
  store i32 %74, i32* %72, align 4
  %85 = icmp slt i32 %76, %74
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  store i32 %76, i32* %72, align 4
  store i32 %74, i32* %71, align 4
  br label %87

87:                                               ; preds = %78, %79, %81, %83, %84, %86
  %88 = phi i32 [ %76, %78 ], [ %73, %79 ], [ %73, %81 ], [ %74, %83 ], [ %76, %84 ], [ %74, %86 ]
  %89 = getelementptr inbounds i32, i32* %0, i64 3
  %90 = icmp eq i32* %89, %1
  br i1 %90, label %120, label %91

91:                                               ; preds = %87, %115
  %92 = phi i32 [ %116, %115 ], [ %88, %87 ]
  %93 = phi i32* [ %113, %115 ], [ %89, %87 ]
  %94 = phi i32 [ %112, %115 ], [ 0, %87 ]
  %95 = phi i32* [ %93, %115 ], [ %71, %87 ]
  %96 = load i32, i32* %93, align 4
  %97 = icmp slt i32 %96, %92
  br i1 %97, label %98, label %111

98:                                               ; preds = %91, %103
  %99 = phi i32 [ %105, %103 ], [ %92, %91 ]
  %100 = phi i32* [ %101, %103 ], [ %93, %91 ]
  %101 = phi i32* [ %104, %103 ], [ %95, %91 ]
  store i32 %99, i32* %100, align 4
  %102 = icmp eq i32* %101, %0
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds i32, i32* %101, i64 -1
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %96, %105
  br i1 %106, label %98, label %107

107:                                              ; preds = %98, %103
  %108 = phi i32* [ %0, %98 ], [ %101, %103 ]
  store i32 %96, i32* %108, align 4
  %109 = add i32 %94, 1
  %110 = icmp eq i32 %109, 8
  br i1 %110, label %117, label %111

111:                                              ; preds = %107, %91
  %112 = phi i32 [ %109, %107 ], [ %94, %91 ]
  %113 = getelementptr inbounds i32, i32* %93, i64 1
  %114 = icmp eq i32* %113, %1
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = load i32, i32* %93, align 4
  br label %91

117:                                              ; preds = %107
  %118 = getelementptr inbounds i32, i32* %93, i64 1
  %119 = icmp eq i32* %118, %1
  br label %120

120:                                              ; preds = %111, %117, %87, %63, %60, %56, %52, %33, %30, %29, %27, %23, %22, %8, %13, %3, %3, %64
  %121 = phi i1 [ true, %64 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %8 ], [ true, %22 ], [ true, %23 ], [ true, %27 ], [ true, %29 ], [ true, %30 ], [ true, %33 ], [ true, %52 ], [ true, %56 ], [ true, %60 ], [ true, %63 ], [ true, %87 ], [ %119, %117 ], [ true, %111 ]
  ret i1 %121
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #15
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKiEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i32*, i32*, i32*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %14 = ptrtoint i32* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i32* %2 to i64
  %18 = bitcast i32** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i32* %3 to i64
  %21 = bitcast i32** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i32* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i32** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %30 = bitcast i32** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8* %29, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i32*, i32** %8, align 8
  %43 = load i32*, i32** %9, align 8
  %44 = icmp ugt i32* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i32** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %49 = bitcast i32** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8* %48, i8* %50) #15
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #15
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKiE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i32*, i32** %11, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %20, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i32*, i32** %32, align 8
  %36 = load i32*, i32** %33, align 8
  %37 = icmp eq i32* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i32** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %42 = bitcast i32** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKiEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %43) #15
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #15
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base22PersistentSampleVectorC1EmPKNS_12BucketRangesEPNS_16HistogramSamples8MetadataERKNS_27DelayedPersistentAllocationE(%"class.base::PersistentSampleVector"*, i64, %"class.base::BucketRanges"*, %"struct.base::HistogramSamples::Metadata"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.97"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.97"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.97"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #17
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi(%"class.std::__1::vector"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i32* %2 to i8*
  %5 = bitcast i32* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i32*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i32, i32* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 2
  %22 = add i64 %21, -4
  %23 = lshr exact i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 8
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i32* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i32* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i32, i32* %16, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i32* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i32, i32* %2, align 4
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds i32, i32* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !12

44:                                               ; preds = %37, %26
  %45 = phi i32* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 28
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 2
  %49 = add i64 %48, -4
  %50 = lshr exact i64 %49, 2
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i32, i32* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i32* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 9223372036854775800
  %59 = getelementptr i32, i32* %16, i64 %58
  %60 = add nsw i64 %58, -8
  %61 = lshr exact i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i32, i32* %2, align 4, !alias.scope !13
  %68 = insertelement <4 x i32> undef, i32 %67, i32 0
  %69 = shufflevector <4 x i32> %68, <4 x i32> undef, <4 x i32> zeroinitializer
  %70 = insertelement <4 x i32> undef, i32 %67, i32 0
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> zeroinitializer
  %72 = load i32, i32* %2, align 4, !alias.scope !13
  %73 = insertelement <4 x i32> undef, i32 %72, i32 0
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> zeroinitializer
  %75 = insertelement <4 x i32> undef, i32 %72, i32 0
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i32, i32* %16, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %81, align 4, !alias.scope !16, !noalias !13
  %82 = getelementptr i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %83, align 4, !alias.scope !16, !noalias !13
  %84 = or i64 %78, 8
  %85 = getelementptr i32, i32* %16, i64 %84
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %86, align 4, !alias.scope !16, !noalias !13
  %87 = getelementptr i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %88, align 4, !alias.scope !16, !noalias !13
  %89 = add i64 %78, 16
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !18

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i32, i32* %16, i64 %93
  %97 = load i32, i32* %2, align 4, !alias.scope !13
  %98 = insertelement <4 x i32> undef, i32 %97, i32 0
  %99 = shufflevector <4 x i32> %98, <4 x i32> undef, <4 x i32> zeroinitializer
  %100 = insertelement <4 x i32> undef, i32 %97, i32 0
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> zeroinitializer
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %102, align 4, !alias.scope !16, !noalias !13
  %103 = getelementptr i32, i32* %96, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %104, align 4, !alias.scope !16, !noalias !13
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i32* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i32* [ %126, %109 ], [ %45, %44 ]
  %111 = load i32, i32* %2, align 4
  store i32 %111, i32* %110, align 4
  %112 = getelementptr inbounds i32, i32* %110, i64 1
  %113 = load i32, i32* %2, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds i32, i32* %110, i64 2
  %115 = load i32, i32* %2, align 4
  store i32 %115, i32* %114, align 4
  %116 = getelementptr inbounds i32, i32* %110, i64 3
  %117 = load i32, i32* %2, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %110, i64 4
  %119 = load i32, i32* %2, align 4
  store i32 %119, i32* %118, align 4
  %120 = getelementptr inbounds i32, i32* %110, i64 5
  %121 = load i32, i32* %2, align 4
  store i32 %121, i32* %120, align 4
  %122 = getelementptr inbounds i32, i32* %110, i64 6
  %123 = load i32, i32* %2, align 4
  store i32 %123, i32* %122, align 4
  %124 = getelementptr inbounds i32, i32* %110, i64 7
  %125 = load i32, i32* %2, align 4
  store i32 %125, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %110, i64 8
  %127 = icmp eq i32* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !20

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 2
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #16
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 2
  %142 = icmp ult i64 %141, 2305843009213693951
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 1
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 4611686018427387903
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #16
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 4611686018427387903, %139 ]
  %153 = shl i64 %152, 2
  %154 = tail call i8* @_Znwm(i64 %153) #17
  %155 = bitcast i8* %154 to i32*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i32* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i32, i32* %158, i64 %134
  %160 = getelementptr inbounds i32, i32* %158, i64 %157
  %161 = getelementptr inbounds i32, i32* %159, i64 %1
  %162 = shl nsw i64 %1, 2
  %163 = add i64 %162, -4
  %164 = lshr exact i64 %163, 2
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 8
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i32* %159 to i8*
  %169 = shl nsw i64 %1, 2
  %170 = add i64 %169, -4
  %171 = lshr exact i64 %170, 2
  %172 = add nsw i64 %134, %171
  %173 = add i64 %172, 1
  %174 = getelementptr i32, i32* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i32* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 9223372036854775800
  %181 = getelementptr i32, i32* %159, i64 %180
  %182 = add nsw i64 %180, -8
  %183 = lshr exact i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i32, i32* %2, align 4, !alias.scope !21
  %190 = insertelement <4 x i32> undef, i32 %189, i32 0
  %191 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> zeroinitializer
  %192 = insertelement <4 x i32> undef, i32 %189, i32 0
  %193 = shufflevector <4 x i32> %192, <4 x i32> undef, <4 x i32> zeroinitializer
  %194 = load i32, i32* %2, align 4, !alias.scope !21
  %195 = insertelement <4 x i32> undef, i32 %194, i32 0
  %196 = shufflevector <4 x i32> %195, <4 x i32> undef, <4 x i32> zeroinitializer
  %197 = insertelement <4 x i32> undef, i32 %194, i32 0
  %198 = shufflevector <4 x i32> %197, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i32, i32* %159, i64 %200
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %203, align 4, !alias.scope !24, !noalias !21
  %204 = getelementptr i32, i32* %202, i64 4
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %193, <4 x i32>* %205, align 4, !alias.scope !24, !noalias !21
  %206 = or i64 %200, 8
  %207 = getelementptr i32, i32* %159, i64 %206
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %196, <4 x i32>* %208, align 4, !alias.scope !24, !noalias !21
  %209 = getelementptr i32, i32* %207, i64 4
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %210, align 4, !alias.scope !24, !noalias !21
  %211 = add i64 %200, 16
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !26

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i32, i32* %159, i64 %215
  %219 = load i32, i32* %2, align 4, !alias.scope !21
  %220 = insertelement <4 x i32> undef, i32 %219, i32 0
  %221 = shufflevector <4 x i32> %220, <4 x i32> undef, <4 x i32> zeroinitializer
  %222 = insertelement <4 x i32> undef, i32 %219, i32 0
  %223 = shufflevector <4 x i32> %222, <4 x i32> undef, <4 x i32> zeroinitializer
  %224 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %221, <4 x i32>* %224, align 4, !alias.scope !24, !noalias !21
  %225 = getelementptr i32, i32* %218, i64 4
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %223, <4 x i32>* %226, align 4, !alias.scope !24, !noalias !21
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i32* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i32* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i32, i32* %158, i64 %233
  %235 = ptrtoint i32* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 2
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i32* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i32, i32* %2, align 4
  store i32 %244, i32* %242, align 4
  %245 = getelementptr inbounds i32, i32* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !27

248:                                              ; preds = %241, %229
  %249 = phi i32* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 28
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i32* [ %268, %251 ], [ %249, %248 ]
  %253 = load i32, i32* %2, align 4
  store i32 %253, i32* %252, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32, i32* %2, align 4
  store i32 %255, i32* %254, align 4
  %256 = getelementptr inbounds i32, i32* %252, i64 2
  %257 = load i32, i32* %2, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 3
  %259 = load i32, i32* %2, align 4
  store i32 %259, i32* %258, align 4
  %260 = getelementptr inbounds i32, i32* %252, i64 4
  %261 = load i32, i32* %2, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 5
  %263 = load i32, i32* %2, align 4
  store i32 %263, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %252, i64 6
  %265 = load i32, i32* %2, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 7
  %267 = load i32, i32* %2, align 4
  store i32 %267, i32* %266, align 4
  %268 = getelementptr inbounds i32, i32* %252, i64 8
  %269 = icmp eq i32* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !28

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i32* %160 to i64
  %272 = ptrtoint i32* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i32* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 2
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i32, i32* %159, i64 %279
  %281 = ptrtoint i32* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i32* %280 to i8*
  %285 = bitcast i32* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 %277, i1 false) #15
  %286 = load i32*, i32** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i32* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i32* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #17
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base9Histogram19GetAsciiBucketRangeEj: argument 0"}
!5 = distinct !{!5, !"_ZNK4base9Histogram19GetAsciiBucketRangeEj"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_"}
!9 = !{i8 0, i8 2}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !19}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !19}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !19}
