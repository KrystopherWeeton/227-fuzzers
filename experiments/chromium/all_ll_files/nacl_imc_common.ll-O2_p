; ModuleID = '../../native_client/src/shared/imc/nacl_imc_common.cc'
source_filename = "../../native_client/src/shared/imc/nacl_imc_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @NaClMessageSizeIsValid(%struct.NaClMessageHeader* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %0, i64 0, i32 0
  %7 = load %struct.NaClIOVec*, %struct.NaClIOVec** %6, align 8
  %8 = zext i32 %3 to i64
  br label %9

9:                                                ; preds = %5, %16
  %10 = phi i64 [ 0, %5 ], [ %18, %16 ]
  %11 = phi i64 [ 0, %5 ], [ %17, %16 ]
  %12 = sub i64 4294967295, %11
  %13 = getelementptr inbounds %struct.NaClIOVec, %struct.NaClIOVec* %7, i64 %10, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = add i64 %14, %11
  %18 = add nuw nsw i64 %10, 1
  %19 = icmp ult i64 %18, %8
  br i1 %19, label %9, label %20

20:                                               ; preds = %9, %16, %1
  %21 = phi i32 [ 1, %1 ], [ 1, %16 ], [ 0, %9 ]
  ret i32 %21
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
