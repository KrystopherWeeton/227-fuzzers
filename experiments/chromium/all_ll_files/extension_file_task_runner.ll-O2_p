; ModuleID = '../../extensions/browser/extension_file_task_runner.cc'
source_filename = "../../extensions/browser/extension_file_task_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::LazyThreadPoolTaskRunner" = type { %"class.base::TaskTraits", i32, i64 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN10extensions12_GLOBAL__N_113g_task_runnerE = internal global %"class.base::internal::LazyThreadPoolTaskRunner" { %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 -127, i8 0, i8 1, i8 0, i8 0 }, i32 0, i64 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN10extensions26GetExtensionFileTaskRunnerEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base8internal24LazyThreadPoolTaskRunnerINS_19SequencedTaskRunnerELb0EE3GetEv(%"class.base::internal::LazyThreadPoolTaskRunner"* nonnull @_ZN10extensions12_GLOBAL__N_113g_task_runnerE) #3
  ret %"class.base::SequencedTaskRunner"* %1
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base8internal24LazyThreadPoolTaskRunnerINS_19SequencedTaskRunnerELb0EE3GetEv(%"class.base::internal::LazyThreadPoolTaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN10extensions24GetOneShotFileTaskRunnerEN4base12TaskPriorityE(i8 zeroext) local_unnamed_addr #0 {
  %2 = alloca %"class.base::TaskTraits", align 1
  %3 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %3) #3
  store i8 0, i8* %3, align 1, !alias.scope !2
  %4 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 0, i32 1, i32 0, i64 0
  %5 = bitcast i8* %4 to i64*
  store i64 0, i64* %5, align 1, !alias.scope !2
  %6 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 1
  store i8 %0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 2
  store i8 -127, i8* %7, align 1
  %8 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 3
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 4
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 5
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) %2) #3
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %3) #3
  ret %"class.base::SequencedTaskRunner"* %12
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_20TaskShutdownBehaviorENS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!4 = distinct !{!4, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_20TaskShutdownBehaviorENS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
