; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/js_event_handler.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/js_event_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.194 }
%class.scoped_refptr.194 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.195" }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.120", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.229" }
%"struct.std::__1::atomic.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__cxx_atomic_impl.232" }
%"struct.std::__1::__cxx_atomic_impl.232" = type { %"struct.std::__1::__cxx_atomic_base_impl.233" }
%"struct.std::__1::__cxx_atomic_base_impl.233" = type { i32 }
%"class.blink::JSEventHandler" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.181", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.183" }
%"class.blink::Persistent.183" = type { %"class.blink::PersistentBase.184" }
%"class.blink::PersistentBase.184" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.v8::Function" = type { i8 }
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.193", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.193" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.200", %"class.blink::Member.200", %"class.blink::Member.202", %"class.blink::Member.204", %"class.base::TimeTicks" }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::Event"* }
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.208" }
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.211", %class.scoped_refptr.214 }
%"class.blink::TraceWrapperV8Reference.211" = type { %"class.v8::TracedReference.212" }
%"class.v8::TracedReference.212" = type { %"class.v8::BasicTracedReference.213" }
%"class.v8::BasicTracedReference.213" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.214 = type { %"class.blink::DOMWrapperWorld"* }
%"class.v8::Maybe" = type { i8, %"class.blink::ScriptValue" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.228 }
%class.scoped_refptr.228 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.229" }
%"class.blink::ErrorEvent" = type { %"class.blink::Event", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.216", %"class.blink::WorldSafeV8Reference", %class.scoped_refptr }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.219", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.v8::String" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::ExecutionContext" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.262 }
%union.anon.262 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.294", %"class.WTF::HashMap.294", %"class.WTF::HashMap.299", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.351", %"class.blink::Persistent.183", i8, i8, i8, %"class.WTF::Vector.365", %"class.std::__1::unique_ptr.370", %"class.blink::Persistent.376", %"class.blink::Persistent.380", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.276", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.288", i32, i32 }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.294" = type { %"class.WTF::HashTable.295" }
%"class.WTF::HashTable.295" = type <{ %"struct.WTF::KeyValuePair.298"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.298" = type opaque
%"class.WTF::HashMap.299" = type { %"class.WTF::HashTable.300" }
%"class.WTF::HashTable.300" = type <{ %"struct.WTF::KeyValuePair.303"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.303" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.312", %class.scoped_refptr.194 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.307", i8* }
%"class.WTF::HashMap.307" = type { %"class.WTF::HashTable.308" }
%"class.WTF::HashTable.308" = type <{ %"struct.WTF::KeyValuePair.311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.311" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.312" = type { %"class.v8::PersistentValueMapBase.313" }
%"class.v8::PersistentValueMapBase.313" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.314", i8* }
%"class.WTF::HashMap.314" = type { %"class.WTF::HashTable.315" }
%"class.WTF::HashTable.315" = type <{ %"struct.WTF::KeyValuePair.318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.318" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.319", %"class.WTF::String", %"class.std::__1::unique_ptr.321" }
%"class.WTF::RefCounted.319" = type { %"class.base::RefCounted.320" }
%"class.base::RefCounted.320" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.335", %"class.WTF::Vector.341", i8, i32 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.WTF::Vector.327"* }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.329", [32 x i8] }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.354", %"class.WTF::HashMap.357" }
%"class.blink::ScopedPersistent.354" = type { %"class.v8::Persistent.355" }
%"class.v8::Persistent.355" = type { %"class.v8::PersistentBase.356" }
%"class.v8::PersistentBase.356" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.376" = type { %"class.blink::PersistentBase.377" }
%"class.blink::PersistentBase.377" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.380" = type { %"class.blink::PersistentBase.381" }
%"class.blink::PersistentBase.381" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.384", i64 }
%"class.blink::HeapVector.384" = type { %"class.WTF::Vector.387" }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"struct.std::__1::pair.390"*, i32, i32 }
%"struct.std::__1::pair.390" = type { %"class.blink::UntracedMember", %"class.blink::Member.392" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.407" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { i8* }
%"class.v8::Int32" = type { i8 }

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink14JSEventHandlerD0Ev = comdat any

$_ZNK5blink14JSEventHandler14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink14JSEventHandler7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink20JSBasedEventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink13EventListener21IsNativeEventListenerEv = comdat any

$_ZN5blink14JSEventHandler17GetListenerObjectERNS_11EventTargetE = comdat any

$_ZNK5blink20JSBasedEventListener17IsJSEventListenerEv = comdat any

$_ZNK5blink14JSEventHandler16IsJSEventHandlerEv = comdat any

$_ZNK5blink14JSEventHandler10GetIsolateEv = comdat any

$_ZNK5blink14JSEventHandler14GetScriptStateEv = comdat any

$_ZNK5blink14JSEventHandler27GetScriptStateOrReportErrorEPKc = comdat any

$_ZNK5blink14JSEventHandler8GetWorldEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_ = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE2EE11PrepareFastEv = comdat any

$_ZN5blink10TraceTraitINS_21V8EventHandlerNonNullEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink18event_target_names7kWorkerE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kBeforeunloadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink14JSEventHandlerE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::JSBasedEventListener"*)* @_ZN5blink20JSBasedEventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::JSEventHandler"*)* @_ZN5blink14JSEventHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink20JSBasedEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::JSEventHandler"*)* @_ZNK5blink14JSEventHandler14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink20JSBasedEventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::JSEventHandler"*, %"class.blink::EventListener"*)* @_ZNK5blink14JSEventHandler7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::JSEventHandler"*, %"class.blink::Visitor"*)* @_ZNK5blink14JSEventHandler5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::JSBasedEventListener"*)* @_ZNK5blink20JSBasedEventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener21IsNativeEventListenerEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)* @_ZN5blink14JSEventHandler17GetListenerObjectERNS_11EventTargetE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)* @_ZN5blink14JSEventHandler20GetEffectiveFunctionERNS_11EventTargetE to i8*), i8* bitcast (%"class.blink::SourceLocation"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)* @_ZN5blink20JSBasedEventListener17GetSourceLocationERNS_11EventTargetE to i8*), i8* bitcast (i1 (%"class.blink::JSBasedEventListener"*)* @_ZNK5blink20JSBasedEventListener17IsJSEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::JSEventHandler"*)* @_ZNK5blink14JSEventHandler16IsJSEventHandlerEv to i8*), i8* bitcast (%"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)* @_ZNK5blink14JSEventHandler10GetIsolateEv to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::JSEventHandler"*)* @_ZNK5blink14JSEventHandler14GetScriptStateEv to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::JSEventHandler"*, i8*)* @_ZNK5blink14JSEventHandler27GetScriptStateOrReportErrorEPKc to i8*), i8* bitcast (%"class.blink::DOMWrapperWorld"* (%"class.blink::JSEventHandler"*)* @_ZNK5blink14JSEventHandler8GetWorldEv to i8*), i8* bitcast (void (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*, %"class.blink::Event"*, %"class.v8::Value"*)* @_ZN5blink14JSEventHandler14InvokeInternalERNS_11EventTargetERNS_5EventEN2v85LocalINS5_5ValueEEE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink21V8EventHandlerNonNullE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.3 = private unnamed_addr constant [13 x i8] c"EventHandler\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventListener]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [132 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::ScriptValue, WTF::VectorTraits<blink::ScriptValue> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %0) #9
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = bitcast %"class.v8::Value"* %0 to %"class.v8::Object"*
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %7 = bitcast i8* %6 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %7, %"class.v8::Object"* %5) #9
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8EventHandlerNonNullE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = ptrtoint i8* %6 to i64
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64 48) #9
  %15 = bitcast i8* %14 to %"class.blink::JSEventHandler"*
  %16 = bitcast i8* %14 to %"class.blink::JSBasedEventListener"*
  tail call void @_ZN5blink20JSBasedEventListenerC2Ev(%"class.blink::JSBasedEventListener"* %16) #9
  %17 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink14JSEventHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %13, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %14, i64 40
  %21 = bitcast i8* %20 to i32*
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  br label %26

26:                                               ; preds = %2, %4
  %27 = phi %"class.blink::JSEventHandler"* [ %15, %4 ], [ null, %2 ]
  ret %"class.blink::JSEventHandler"* %27
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink14JSEventHandler20GetEffectiveFunctionERNS_11EventTargetE(%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::JSEventHandler"* %0 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %4 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %4, i64 12
  %6 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %5, align 8
  %7 = tail call %"class.v8::Value"* %6(%"class.blink::JSEventHandler"* %0, %"class.blink::EventTarget"* dereferenceable(16) %1) #9
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %7) #9
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = bitcast %"class.v8::Value"* %7 to %"class.v8::Function"*
  %13 = tail call %"class.v8::Function"* @_ZN5blink16GetBoundFunctionEN2v85LocalINS0_8FunctionEEE(%"class.v8::Function"* nonnull %12) #9
  %14 = bitcast %"class.v8::Function"* %13 to %"class.v8::Value"*
  br label %24

15:                                               ; preds = %9, %2
  %16 = bitcast %"class.blink::JSEventHandler"* %0 to %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)***
  %17 = load %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)**, %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)*, %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)** %17, i64 17
  %19 = load %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)*, %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)** %18, align 8
  %20 = tail call %"class.v8::Isolate"* %19(%"class.blink::JSEventHandler"* %0) #9
  %21 = ptrtoint %"class.v8::Isolate"* %20 to i64
  %22 = add i64 %21, 160
  %23 = inttoptr i64 %22 to %"class.v8::Value"*
  br label %24

24:                                               ; preds = %15, %11
  %25 = phi %"class.v8::Value"* [ %23, %15 ], [ %14, %11 ]
  ret %"class.v8::Value"* %25
}

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Function"* @_ZN5blink16GetBoundFunctionEN2v85LocalINS0_8FunctionEEE(%"class.v8::Function"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14JSEventHandler18SetCompiledHandlerEPNS_11ScriptStateEN2v85LocalINS3_8FunctionEEE(%"class.blink::JSEventHandler"* nocapture, %"class.blink::ScriptState"* nocapture readonly, %"class.v8::Function"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Context::BackupIncumbentScope", align 8
  %5 = bitcast %"class.v8::Context::BackupIncumbentScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"class.v8::Context::BackupIncumbentScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #9
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %3, %10
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %3 ]
  call void @_ZN2v87Context20BackupIncumbentScopeC1ENS_5LocalIS0_EE(%"class.v8::Context::BackupIncumbentScope"* nonnull %4, %"class.v8::Context"* %18) #9
  %19 = bitcast %"class.v8::Function"* %2 to %"class.v8::Object"*
  %20 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %21 = bitcast i8* %20 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %21, %"class.v8::Object"* %19) #9
  %22 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8EventHandlerNonNullE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1
  %28 = ptrtoint i8* %20 to i64
  %29 = bitcast %"class.blink::Member"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %17
  %33 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  br label %34

34:                                               ; preds = %17, %32
  call void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

declare void @_ZN2v87Context20BackupIncumbentScopeC1ENS_5LocalIS0_EE(%"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Context"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14JSEventHandler14InvokeInternalERNS_11EventTargetERNS_5EventEN2v85LocalINS5_5ValueEEE(%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"* nocapture readnone dereferenceable(16), %"class.blink::Event"* dereferenceable(104), %"class.v8::Value"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = alloca %"class.blink::ScriptValue", align 8
  %9 = alloca %"class.blink::ScriptValue", align 8
  %10 = alloca [5 x %"class.blink::ScriptValue"], align 8
  %11 = alloca [1 x %"class.blink::ScriptValue"], align 8
  %12 = alloca %"class.blink::ScriptValue", align 8
  %13 = alloca %"class.v8::Maybe", align 8
  %14 = alloca %"class.v8::Local", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.base::OnceCallback", align 8
  %17 = tail call %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"* %2) #9
  %18 = bitcast %"class.blink::JSEventHandler"* %0 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %19 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %19, i64 12
  %21 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %20, align 8
  %22 = tail call %"class.v8::Value"* %21(%"class.blink::JSEventHandler"* %0, %"class.blink::EventTarget"* dereferenceable(16) %17) #9
  %23 = icmp eq %"class.v8::Value"* %22, null
  br i1 %23, label %651, label %24

24:                                               ; preds = %4
  %25 = bitcast %"class.v8::Value"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 3
  %28 = icmp eq i64 %27, 1
  br i1 %28, label %29, label %46

29:                                               ; preds = %24
  %30 = add i64 %26, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %26, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 67
  br i1 %39, label %40, label %46

40:                                               ; preds = %29
  %41 = add i64 %26, 23
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, -2
  %45 = icmp eq i32 %44, 6
  br i1 %45, label %651, label %46

46:                                               ; preds = %29, %24, %40
  %47 = bitcast %"class.blink::Event"* %2 to i1 (%"class.blink::Event"*)***
  %48 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %48, i64 26
  %50 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::Event"* %2) #9
  br i1 %51, label %52, label %66

52:                                               ; preds = %46
  %53 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %54 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, %57
  br i1 %58, label %59, label %66

59:                                               ; preds = %52
  %60 = tail call %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"* %2) #9
  %61 = bitcast %"class.blink::EventTarget"* %60 to i1 (%"class.blink::EventTarget"*)***
  %62 = load i1 (%"class.blink::EventTarget"*)**, i1 (%"class.blink::EventTarget"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::EventTarget"*)*, i1 (%"class.blink::EventTarget"*)** %62, i64 20
  %64 = load i1 (%"class.blink::EventTarget"*)*, i1 (%"class.blink::EventTarget"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::EventTarget"* %60) #9
  br label %66

66:                                               ; preds = %59, %52, %46
  %67 = phi i1 [ false, %52 ], [ false, %46 ], [ %65, %59 ]
  %68 = bitcast %"class.blink::HeapVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false) #9
  %71 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %72, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %73, align 8
  br i1 %67, label %75, label %337

75:                                               ; preds = %66
  %76 = bitcast %"class.blink::Event"* %2 to %"class.blink::ErrorEvent"*
  %77 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  %80 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink10ErrorEvent5errorEPNS_11ScriptStateE(%"class.blink::ScriptValue"* nonnull sret %8, %"class.blink::ErrorEvent"* %76, %"class.blink::ScriptState"* %74) #9
  %81 = load i64*, i64** %78, align 8
  %82 = icmp eq i64* %81, null
  br i1 %82, label %97, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 0, i32 7, i32 0, i32 0
  %85 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %84, align 8
  %86 = bitcast %"class.blink::EventTarget"* %85 to %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)***
  %87 = load %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)**, %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)*, %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)** %87, i64 9
  %89 = load %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)*, %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)** %88, align 8
  %90 = call dereferenceable(8) %"class.WTF::AtomicString"* %89(%"class.blink::EventTarget"* %85) #9
  %91 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names7kWorkerE, align 8
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %90, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %91, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %93, %95
  br i1 %96, label %97, label %118

97:                                               ; preds = %83, %75
  %98 = bitcast %"class.blink::ScriptValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 0
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %99, align 8
  call void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* nonnull sret %9, %"class.v8::Isolate"* %100) #9
  %101 = bitcast %"class.blink::ScriptValue"* %9 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %105 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1
  %106 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %104, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %105) #9
  %107 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 1, i32 0
  %108 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %107, align 8
  %109 = icmp eq %"class.blink::DOMWrapperWorld"* %108, null
  br i1 %109, label %117, label %110

110:                                              ; preds = %97
  %111 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %108, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %111) #9
  %112 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %108) #9
  %116 = bitcast %"class.blink::DOMWrapperWorld"* %108 to i8*
  call void @free(i8* %116) #9
  br label %117

117:                                              ; preds = %97, %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #9
  br label %118

118:                                              ; preds = %117, %83
  %119 = bitcast [5 x %"class.blink::ScriptValue"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %119) #9
  %120 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 0
  %121 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 1, i32 0, i32 1
  %122 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"class.v8::Context"*, %"class.v8::Context"** %122, align 8, !noalias !2
  %124 = icmp eq %"class.v8::Context"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::ScriptState"* %74 to %"class.v8::internal::Isolate"**
  %127 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %126, align 8, !noalias !2
  %128 = bitcast %"class.v8::Context"* %123 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %127, i64 %129) #9
  %131 = bitcast i64* %130 to %"class.v8::Context"*
  br label %132

132:                                              ; preds = %125, %118
  %133 = phi %"class.v8::Context"* [ %131, %125 ], [ null, %118 ]
  %134 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %133) #9, !noalias !2
  %135 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 0
  %136 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !2
  %137 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #9, !noalias !2
  %138 = bitcast %"class.blink::TraceWrapperV8Reference"* %121 to %"class.WTF::StringImpl"**
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8, !noalias !2
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %141, label %145

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %142, align 8, !noalias !2
  %143 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %144 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %143, i64* %144, align 8, !noalias !2
  br label %152

145:                                              ; preds = %132
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %146, align 8, !noalias !2
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 1
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %151 = bitcast i8** %150 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %151, align 8, !noalias !2
  br label %152

152:                                              ; preds = %145, %141
  %153 = phi i32 [ %148, %145 ], [ 0, %141 ]
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %153, i32* %154, align 8, !noalias !2
  %155 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %136, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #9, !noalias !2
  %156 = icmp eq %"class.v8::String"* %155, null
  br i1 %156, label %157, label %158

157:                                              ; preds = %152
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 24, i1 false) #9, !alias.scope !2
  br label %163

158:                                              ; preds = %152
  %159 = bitcast %"class.v8::String"* %155 to %"class.v8::Value"*
  %160 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !2
  %161 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 0, i32 0
  store %"class.v8::Isolate"* %160, %"class.v8::Isolate"** %161, align 8, !alias.scope !2
  %162 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %162, %"class.v8::Isolate"* %160, %"class.v8::Value"* nonnull %159) #9
  br label %163

163:                                              ; preds = %157, %158
  %164 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 1
  %165 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 1, i32 1
  %166 = bitcast %"class.WTF::AtomicString"* %165 to %"class.blink::SourceLocation"**
  %167 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %166, align 8
  %168 = load %"class.v8::Context"*, %"class.v8::Context"** %122, align 8, !noalias !5
  %169 = icmp eq %"class.v8::Context"* %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %163
  %171 = bitcast %"class.blink::ScriptState"* %74 to %"class.v8::internal::Isolate"**
  %172 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %171, align 8, !noalias !5
  %173 = bitcast %"class.v8::Context"* %168 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %174) #9
  %176 = bitcast i64* %175 to %"class.v8::Context"*
  br label %177

177:                                              ; preds = %170, %163
  %178 = phi %"class.v8::Context"* [ %176, %170 ], [ null, %163 ]
  %179 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %178) #9, !noalias !5
  %180 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !5
  %181 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #9, !noalias !5
  %182 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %167, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8, !noalias !5
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %185, label %189

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %186, align 8, !noalias !5
  %187 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %188 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %187, i64* %188, align 8, !noalias !5
  br label %196

189:                                              ; preds = %177
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %190, align 8, !noalias !5
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 1
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %195 = bitcast i8** %194 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %195, align 8, !noalias !5
  br label %196

196:                                              ; preds = %189, %185
  %197 = phi i32 [ %192, %189 ], [ 0, %185 ]
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %197, i32* %198, align 8, !noalias !5
  %199 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %180, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #9, !noalias !5
  %200 = icmp eq %"class.v8::String"* %199, null
  br i1 %200, label %201, label %203

201:                                              ; preds = %196
  %202 = bitcast %"class.blink::ScriptValue"* %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 24, i1 false) #9, !alias.scope !5
  br label %208

203:                                              ; preds = %196
  %204 = bitcast %"class.v8::String"* %199 to %"class.v8::Value"*
  %205 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !5
  %206 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %164, i64 0, i32 0
  store %"class.v8::Isolate"* %205, %"class.v8::Isolate"** %206, align 8, !alias.scope !5
  %207 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 1, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %207, %"class.v8::Isolate"* %205, %"class.v8::Value"* nonnull %204) #9
  br label %208

208:                                              ; preds = %201, %203
  %209 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 2
  %210 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %166, align 8
  %211 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %210, i64 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = load %"class.v8::Context"*, %"class.v8::Context"** %122, align 8, !noalias !8
  %214 = icmp eq %"class.v8::Context"* %213, null
  br i1 %214, label %222, label %215

215:                                              ; preds = %208
  %216 = bitcast %"class.blink::ScriptState"* %74 to %"class.v8::internal::Isolate"**
  %217 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %216, align 8, !noalias !8
  %218 = bitcast %"class.v8::Context"* %213 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %217, i64 %219) #9
  %221 = bitcast i64* %220 to %"class.v8::Context"*
  br label %222

222:                                              ; preds = %215, %208
  %223 = phi %"class.v8::Context"* [ %221, %215 ], [ null, %208 ]
  %224 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %223) #9, !noalias !8
  %225 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !8
  %226 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %225, i32 %212) #9, !noalias !8
  %227 = icmp eq %"class.v8::Integer"* %226, null
  br i1 %227, label %228, label %230

228:                                              ; preds = %222
  %229 = bitcast %"class.blink::ScriptValue"* %209 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 24, i1 false) #9, !alias.scope !8
  br label %235

230:                                              ; preds = %222
  %231 = bitcast %"class.v8::Integer"* %226 to %"class.v8::Value"*
  %232 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !8
  %233 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %209, i64 0, i32 0
  store %"class.v8::Isolate"* %232, %"class.v8::Isolate"** %233, align 8, !alias.scope !8
  %234 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 2, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %234, %"class.v8::Isolate"* %232, %"class.v8::Value"* nonnull %231) #9
  br label %235

235:                                              ; preds = %228, %230
  %236 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 3
  %237 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %166, align 8
  %238 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %237, i64 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = load %"class.v8::Context"*, %"class.v8::Context"** %122, align 8, !noalias !11
  %241 = icmp eq %"class.v8::Context"* %240, null
  br i1 %241, label %249, label %242

242:                                              ; preds = %235
  %243 = bitcast %"class.blink::ScriptState"* %74 to %"class.v8::internal::Isolate"**
  %244 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %243, align 8, !noalias !11
  %245 = bitcast %"class.v8::Context"* %240 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %244, i64 %246) #9
  %248 = bitcast i64* %247 to %"class.v8::Context"*
  br label %249

249:                                              ; preds = %242, %235
  %250 = phi %"class.v8::Context"* [ %248, %242 ], [ null, %235 ]
  %251 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %250) #9, !noalias !11
  %252 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !11
  %253 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %252, i32 %239) #9, !noalias !11
  %254 = icmp eq %"class.v8::Integer"* %253, null
  br i1 %254, label %255, label %257

255:                                              ; preds = %249
  %256 = bitcast %"class.blink::ScriptValue"* %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 24, i1 false) #9, !alias.scope !11
  br label %262

257:                                              ; preds = %249
  %258 = bitcast %"class.v8::Integer"* %253 to %"class.v8::Value"*
  %259 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8, !noalias !11
  %260 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %236, i64 0, i32 0
  store %"class.v8::Isolate"* %259, %"class.v8::Isolate"** %260, align 8, !alias.scope !11
  %261 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 3, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %261, %"class.v8::Isolate"* %259, %"class.v8::Value"* nonnull %258) #9
  br label %262

262:                                              ; preds = %255, %257
  %263 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 4
  %264 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.blink::ScriptValue"* %263 to i64*
  store i64 %265, i64* %266, align 8
  %267 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 4, i32 1
  %268 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %267, i64 0, i32 0
  %269 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %267, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %269, align 8
  %270 = load i64*, i64** %78, align 8
  %271 = icmp eq i64* %270, null
  br i1 %271, label %273, label %272

272:                                              ; preds = %262
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %78, i64** %269) #9
  br label %273

273:                                              ; preds = %272, %262
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8) %268) #9
  %274 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %79, align 8
  %275 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 4, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %274, %"class.blink::DOMWrapperWorld"** %275, align 8
  %276 = icmp eq %"class.blink::DOMWrapperWorld"* %274, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %274, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %278) #9
  br label %279

279:                                              ; preds = %273, %277
  %280 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 5) #9
  %281 = ptrtoint %"class.blink::HeapVectorBacking"* %280 to i64
  %282 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 0, i32 0
  %286 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %285) #9
  br label %287

287:                                              ; preds = %284, %279
  %288 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 0, i32 0
  %289 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %288, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %120) #9
  %290 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 1
  %291 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 24, i32 0
  %292 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %291, %"class.blink::ScriptValue"* dereferenceable(24) %290) #9
  %293 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 2
  %294 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 48, i32 0
  %295 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %294, %"class.blink::ScriptValue"* dereferenceable(24) %293) #9
  %296 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 3
  %297 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 72, i32 0
  %298 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %297, %"class.blink::ScriptValue"* dereferenceable(24) %296) #9
  %299 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 4
  %300 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 96, i32 0
  %301 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %300, %"class.blink::ScriptValue"* dereferenceable(24) %299) #9
  %302 = bitcast %"class.blink::HeapVector"* %7 to i64*
  %303 = bitcast %"class.blink::HeapVector"* %7 to i8**
  %304 = load i8*, i8** %303, align 8
  store atomic i64 %281, i64* %302 monotonic, align 8
  store i32 5, i32* %69, align 8
  store i32 5, i32* %70, align 4
  %305 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %287
  %308 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %280, i64 0, i32 0
  %309 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %308) #9
  br label %310

310:                                              ; preds = %307, %287
  %311 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %310
  %314 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %304) #9
  br label %315

315:                                              ; preds = %310, %313
  %316 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 4, i32 1, i32 1, i32 0
  %317 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %316, align 8
  %318 = icmp eq %"class.blink::DOMWrapperWorld"* %317, null
  br i1 %318, label %326, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %317, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %320) #9
  %321 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %317, i64 0, i32 0, i32 0, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %326

324:                                              ; preds = %319
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %317) #9
  %325 = bitcast %"class.blink::DOMWrapperWorld"* %317 to i8*
  call void @free(i8* %325) #9
  br label %326

326:                                              ; preds = %315, %319, %324
  %327 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 3, i32 1, i32 1, i32 0
  %328 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %327, align 8
  %329 = icmp eq %"class.blink::DOMWrapperWorld"* %328, null
  br i1 %329, label %659, label %652

330:                                              ; preds = %692
  %331 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %693, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %331) #9
  %332 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %693, i64 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %395

335:                                              ; preds = %330
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %693) #9
  %336 = bitcast %"class.blink::DOMWrapperWorld"* %693 to i8*
  call void @free(i8* %336) #9
  br label %395

337:                                              ; preds = %66
  %338 = bitcast [1 x %"class.blink::ScriptValue"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #9
  %339 = getelementptr inbounds [1 x %"class.blink::ScriptValue"], [1 x %"class.blink::ScriptValue"]* %11, i64 0, i64 0
  %340 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %341 = load %"class.v8::Context"*, %"class.v8::Context"** %340, align 8, !noalias !14
  %342 = icmp eq %"class.v8::Context"* %341, null
  br i1 %342, label %350, label %343

343:                                              ; preds = %337
  %344 = bitcast %"class.blink::ScriptState"* %74 to %"class.v8::internal::Isolate"**
  %345 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %344, align 8, !noalias !14
  %346 = bitcast %"class.v8::Context"* %341 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %345, i64 %347) #9
  %349 = bitcast i64* %348 to %"class.v8::Context"*
  br label %350

350:                                              ; preds = %343, %337
  %351 = phi %"class.v8::Context"* [ %349, %343 ], [ null, %337 ]
  %352 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %351) #9, !noalias !14
  %353 = icmp eq %"class.v8::Value"* %3, null
  br i1 %353, label %354, label %355

354:                                              ; preds = %350
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 0, i64 24, i1 false) #9, !alias.scope !14
  br label %360

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 0
  %357 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %356, align 8, !noalias !14
  %358 = getelementptr inbounds [1 x %"class.blink::ScriptValue"], [1 x %"class.blink::ScriptValue"]* %11, i64 0, i64 0, i32 0
  store %"class.v8::Isolate"* %357, %"class.v8::Isolate"** %358, align 8, !alias.scope !14
  %359 = getelementptr inbounds [1 x %"class.blink::ScriptValue"], [1 x %"class.blink::ScriptValue"]* %11, i64 0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %359, %"class.v8::Isolate"* %357, %"class.v8::Value"* nonnull %3) #9
  br label %360

360:                                              ; preds = %354, %355
  %361 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 1) #9
  %362 = ptrtoint %"class.blink::HeapVectorBacking"* %361 to i64
  %363 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %368, label %365

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %361, i64 0, i32 0
  %367 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %366) #9
  br label %368

368:                                              ; preds = %365, %360
  %369 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %361, i64 0, i32 0
  %370 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %369, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %339) #9
  %371 = bitcast %"class.blink::HeapVector"* %7 to i64*
  %372 = bitcast %"class.blink::HeapVector"* %7 to i8**
  %373 = load i8*, i8** %372, align 8
  store atomic i64 %362, i64* %371 monotonic, align 8
  store i32 1, i32* %69, align 8
  store i32 1, i32* %70, align 4
  %374 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %379, label %376

376:                                              ; preds = %368
  %377 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %361, i64 0, i32 0
  %378 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %377) #9
  br label %379

379:                                              ; preds = %376, %368
  %380 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %384, label %382

382:                                              ; preds = %379
  %383 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %373) #9
  br label %384

384:                                              ; preds = %379, %382
  %385 = getelementptr inbounds [1 x %"class.blink::ScriptValue"], [1 x %"class.blink::ScriptValue"]* %11, i64 0, i64 0, i32 1, i32 1, i32 0
  %386 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %385, align 8
  %387 = icmp eq %"class.blink::DOMWrapperWorld"* %386, null
  br i1 %387, label %395, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %386, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %389) #9
  %390 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %386, i64 0, i32 0, i32 0, i32 0, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %395

393:                                              ; preds = %388
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %386) #9
  %394 = bitcast %"class.blink::DOMWrapperWorld"* %386 to i8*
  call void @free(i8* %394) #9
  br label %395

395:                                              ; preds = %393, %388, %384, %335, %330, %692
  %396 = phi i8* [ %77, %692 ], [ %77, %330 ], [ %77, %335 ], [ %338, %384 ], [ %338, %388 ], [ %338, %393 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %396) #9
  %397 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %71, align 8
  %398 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %47, align 8
  %399 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %398, i64 29
  %400 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %399, align 8
  %401 = call zeroext i1 %400(%"class.blink::Event"* %2) #9
  %402 = zext i1 %401 to i32
  %403 = call zeroext i1 @_ZN5blink21V8EventHandlerNonNull26IsRunnableOrThrowExceptionENS0_11IgnorePauseE(%"class.blink::V8EventHandlerNonNull"* %397, i32 %402) #9
  br i1 %403, label %404, label %650

404:                                              ; preds = %395
  %405 = bitcast %"class.blink::ScriptValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %405) #9
  %406 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %405, i8 0, i64 24, i1 false) #9
  %407 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %407) #9
  %408 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %71, align 8
  %409 = call %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"* %2) #9
  %410 = getelementptr inbounds %"class.blink::EventTarget", %"class.blink::EventTarget"* %409, i64 0, i32 0
  call void @_ZN5blink21V8EventHandlerNonNull29InvokeWithoutRunnabilityCheckENS_8bindings31V8ValueOrScriptWrappableAdapterERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.v8::Maybe"* nonnull sret %13, %"class.blink::V8EventHandlerNonNull"* %408, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* %410, %"class.blink::HeapVector"* nonnull dereferenceable(16) %7) #9
  %411 = load i8, i8* %407, align 8, !range !17
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %441, label %413, !prof !18

413:                                              ; preds = %404
  %414 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %13, i64 0, i32 1
  %415 = bitcast %"class.blink::ScriptValue"* %414 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = bitcast %"class.blink::ScriptValue"* %12 to i64*
  store i64 %416, i64* %417, align 8
  %418 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1
  %419 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %13, i64 0, i32 1, i32 1
  %420 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %418, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %419) #9
  %421 = load i8, i8* %407, align 8, !range !17
  %422 = icmp eq i8 %421, 0
  br i1 %422, label %441, label %423

423:                                              ; preds = %413
  %424 = bitcast %"class.blink::JSEventHandler"* %0 to %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)***
  %425 = load %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)**, %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)*** %424, align 8
  %426 = getelementptr inbounds %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)*, %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)** %425, i64 17
  %427 = load %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)*, %"class.v8::Isolate"* (%"class.blink::JSEventHandler"*)** %426, align 8
  %428 = call %"class.v8::Isolate"* %427(%"class.blink::JSEventHandler"* %0) #9
  %429 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %428) #9
  %430 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %13, i64 0, i32 1, i32 1, i32 1, i32 0
  %431 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %430, align 8
  %432 = icmp eq %"class.blink::DOMWrapperWorld"* %431, null
  br i1 %432, label %440, label %433

433:                                              ; preds = %423
  %434 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %431, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %434) #9
  %435 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %431, i64 0, i32 0, i32 0, i32 0, i32 0
  %436 = load i32, i32* %435, align 4
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %440

438:                                              ; preds = %433
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %431) #9
  %439 = bitcast %"class.blink::DOMWrapperWorld"* %431 to i8*
  call void @free(i8* %439) #9
  br label %440

440:                                              ; preds = %423, %433, %438
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %407) #9
  br i1 %429, label %639, label %453

441:                                              ; preds = %413, %404
  %442 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %13, i64 0, i32 1, i32 1, i32 1, i32 0
  %443 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %442, align 8
  %444 = icmp eq %"class.blink::DOMWrapperWorld"* %443, null
  br i1 %444, label %452, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %443, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %446) #9
  %447 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %443, i64 0, i32 0, i32 0, i32 0, i32 0
  %448 = load i32, i32* %447, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %452

450:                                              ; preds = %445
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %443) #9
  %451 = bitcast %"class.blink::DOMWrapperWorld"* %443 to i8*
  call void @free(i8* %451) #9
  br label %452

452:                                              ; preds = %441, %445, %450
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %407) #9
  br label %639

453:                                              ; preds = %440
  %454 = bitcast %"class.v8::Local"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #9
  %455 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %14, i64 0, i32 0
  store %"class.v8::Value"* inttoptr (i64 -6148914691236517206 to %"class.v8::Value"*), %"class.v8::Value"** %455, align 8
  %456 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %12) #9
  store %"class.v8::Value"* %456, %"class.v8::Value"** %455, align 8
  %457 = bitcast %"class.v8::Value"* %456 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = and i64 %458, 3
  %460 = icmp eq i64 %459, 1
  br i1 %460, label %461, label %477

461:                                              ; preds = %453
  %462 = add i64 %458, -1
  %463 = inttoptr i64 %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = and i64 %458, -4294967296
  %466 = zext i32 %464 to i64
  %467 = or i64 %465, %466
  %468 = add i64 %467, 7
  %469 = inttoptr i64 %468 to i16*
  %470 = load i16, i16* %469, align 2
  %471 = icmp eq i16 %470, 67
  br i1 %471, label %472, label %477

472:                                              ; preds = %461
  %473 = add i64 %458, 23
  %474 = inttoptr i64 %473 to i32*
  %475 = load i32, i32* %474, align 4
  %476 = ashr i32 %475, 1
  switch i32 %476, label %477 [
    i32 5, label %638
    i32 3, label %638
  ]

477:                                              ; preds = %472, %461, %453
  %478 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %478) #9
  %479 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %479, align 8
  %480 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 2
  %481 = load i32, i32* %480, align 8
  %482 = icmp eq i32 %481, 2
  br i1 %482, label %483, label %498

483:                                              ; preds = %477
  %484 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %71, align 8
  %485 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %484, i64 0, i32 0
  %486 = ptrtoint %"class.v8::Local"* %14 to i64
  %487 = ptrtoint %"class.WTF::String"* %15 to i64
  %488 = call i8* @_Znwm(i64 56) #10, !noalias !19
  %489 = bitcast i8* %488 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %489, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink14JSEventHandler14InvokeInternalERNS3_11EventTargetERNS3_5EventEN2v85LocalINS9_5ValueEEEE3$_0JNSt3__117reference_wrapperISC_EENSF_IN3WTF6StringEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink14JSEventHandler14InvokeInternalERNS2_11EventTargetERNS2_5EventEN2v85LocalINS8_5ValueEEEE3$_0JNSt3__117reference_wrapperISB_EENSE_IN3WTF6StringEEEEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !19
  %490 = getelementptr inbounds i8, i8* %488, i64 40
  %491 = bitcast i8* %490 to i64*
  store i64 %486, i64* %491, align 8, !noalias !19
  %492 = getelementptr inbounds i8, i8* %488, i64 48
  %493 = bitcast i8* %492 to i64*
  store i64 %487, i64* %493, align 8, !noalias !19
  %494 = bitcast %"class.base::OnceCallback"* %16 to i8**
  store i8* %488, i8** %494, align 8, !alias.scope !19
  call void @_ZN5blink20CallbackFunctionBase24EvaluateAsPartOfCallbackEN4base12OnceCallbackIFvvEEE(%"class.blink::CallbackFunctionBase"* %485, %"class.base::OnceCallback"* nonnull %16) #9
  %495 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %495) #9
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %637, label %498

498:                                              ; preds = %483, %477
  %499 = icmp eq %"class.blink::Event"* %2, null
  br i1 %499, label %595, label %500

500:                                              ; preds = %498
  %501 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %47, align 8
  %502 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %501, i64 25
  %503 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %502, align 8
  %504 = call zeroext i1 %503(%"class.blink::Event"* nonnull %2) #9
  br i1 %504, label %505, label %595

505:                                              ; preds = %500
  %506 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kBeforeunloadE, align 8
  %507 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %508 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %507, align 8
  %509 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %506, i64 0, i32 0, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %508, %510
  br i1 %511, label %512, label %595

512:                                              ; preds = %505
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %637, label %515

515:                                              ; preds = %512
  %516 = bitcast %"class.blink::Event"* %2 to void (%"class.blink::Event"*)***
  %517 = load void (%"class.blink::Event"*)**, void (%"class.blink::Event"*)*** %516, align 8
  %518 = getelementptr inbounds void (%"class.blink::Event"*)*, void (%"class.blink::Event"*)** %517, i64 27
  %519 = load void (%"class.blink::Event"*)*, void (%"class.blink::Event"*)** %518, align 8
  call void %519(%"class.blink::Event"* nonnull %2) #9
  %520 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 1
  %521 = bitcast %"class.blink::Event"* %520 to %"class.WTF::StringImpl"**
  %522 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %523 = icmp eq %"class.WTF::StringImpl"* %522, null
  br i1 %523, label %557, label %524

524:                                              ; preds = %515
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %526 = load atomic i32, i32* %525 monotonic, align 4
  %527 = and i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 0
  %530 = load i32, i32* %529, align 4
  br i1 %528, label %531, label %541

531:                                              ; preds = %524
  %532 = zext i32 %530 to i33
  %533 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %532, i33 1) #9
  %534 = extractvalue { i33, i1 } %533, 1
  %535 = extractvalue { i33, i1 } %533, 0
  %536 = icmp slt i33 %535, 0
  %537 = or i1 %534, %536
  br i1 %537, label %538, label %539, !prof !18

538:                                              ; preds = %531
  call void @llvm.trap() #9
  unreachable

539:                                              ; preds = %531
  %540 = trunc i33 %535 to i32
  store i32 %540, i32* %529, align 4
  br label %541

541:                                              ; preds = %524, %539
  %542 = phi i32 [ %540, %539 ], [ %530, %524 ]
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = icmp eq i32 %544, 0
  %546 = load atomic i32, i32* %525 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %552

549:                                              ; preds = %541
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 0
  %551 = add i32 %542, -1
  store i32 %551, i32* %550, align 4
  br label %552

552:                                              ; preds = %549, %541
  %553 = phi i32 [ %551, %549 ], [ %542, %541 ]
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %556

555:                                              ; preds = %552
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %522) #9
  br i1 %545, label %557, label %621

556:                                              ; preds = %552
  br i1 %545, label %557, label %621

557:                                              ; preds = %515, %555, %556
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %559 = icmp eq %"class.WTF::StringImpl"* %558, null
  br i1 %559, label %577, label %560

560:                                              ; preds = %557
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load atomic i32, i32* %561 monotonic, align 4
  %563 = and i32 %562, 2
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %577

565:                                              ; preds = %560
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  %568 = zext i32 %567 to i33
  %569 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %568, i33 1) #9
  %570 = extractvalue { i33, i1 } %569, 1
  %571 = extractvalue { i33, i1 } %569, 0
  %572 = icmp slt i33 %571, 0
  %573 = or i1 %570, %572
  br i1 %573, label %574, label %575, !prof !18

574:                                              ; preds = %565
  call void @llvm.trap() #9
  unreachable

575:                                              ; preds = %565
  %576 = trunc i33 %571 to i32
  store i32 %576, i32* %566, align 4
  br label %577

577:                                              ; preds = %575, %560, %557
  %578 = ptrtoint %"class.WTF::StringImpl"* %558 to i64
  %579 = bitcast %"class.blink::Event"* %520 to i64*
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  store i64 %578, i64* %579, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %621, label %582

582:                                              ; preds = %577
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  br i1 %586, label %589, label %591

589:                                              ; preds = %582
  %590 = add i32 %588, -1
  store i32 %590, i32* %587, align 4
  br label %591

591:                                              ; preds = %589, %582
  %592 = phi i32 [ %590, %589 ], [ %588, %582 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %621

594:                                              ; preds = %591
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %580) #9
  br label %621

595:                                              ; preds = %500, %498, %505
  %596 = load i32, i32* %480, align 8
  %597 = icmp eq i32 %596, 2
  br i1 %597, label %621, label %598

598:                                              ; preds = %595
  %599 = load %"class.v8::Value"*, %"class.v8::Value"** %455, align 8
  %600 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %599) #9
  br i1 %67, label %601, label %611

601:                                              ; preds = %598
  br i1 %600, label %602, label %621

602:                                              ; preds = %601
  %603 = bitcast %"class.v8::Local"* %14 to %"class.v8::Boolean"**
  %604 = load %"class.v8::Boolean"*, %"class.v8::Boolean"** %603, align 8
  %605 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %604) #9
  br i1 %605, label %606, label %621

606:                                              ; preds = %602
  %607 = bitcast %"class.blink::Event"* %2 to void (%"class.blink::Event"*)***
  %608 = load void (%"class.blink::Event"*)**, void (%"class.blink::Event"*)*** %607, align 8
  %609 = getelementptr inbounds void (%"class.blink::Event"*)*, void (%"class.blink::Event"*)** %608, i64 27
  %610 = load void (%"class.blink::Event"*)*, void (%"class.blink::Event"*)** %609, align 8
  call void %610(%"class.blink::Event"* %2) #9
  br label %621

611:                                              ; preds = %598
  br i1 %600, label %612, label %621

612:                                              ; preds = %611
  %613 = bitcast %"class.v8::Local"* %14 to %"class.v8::Boolean"**
  %614 = load %"class.v8::Boolean"*, %"class.v8::Boolean"** %613, align 8
  %615 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %614) #9
  br i1 %615, label %621, label %616

616:                                              ; preds = %612
  %617 = bitcast %"class.blink::Event"* %2 to void (%"class.blink::Event"*)***
  %618 = load void (%"class.blink::Event"*)**, void (%"class.blink::Event"*)*** %617, align 8
  %619 = getelementptr inbounds void (%"class.blink::Event"*)*, void (%"class.blink::Event"*)** %618, i64 27
  %620 = load void (%"class.blink::Event"*)*, void (%"class.blink::Event"*)** %619, align 8
  call void %620(%"class.blink::Event"* %2) #9
  br label %621

621:                                              ; preds = %602, %601, %611, %594, %591, %577, %555, %556, %606, %616, %595, %612
  %622 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %623 = icmp eq %"class.WTF::StringImpl"* %622, null
  br i1 %623, label %637, label %624

624:                                              ; preds = %621
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %626 = load atomic i32, i32* %625 monotonic, align 4
  %627 = and i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 0
  %630 = load i32, i32* %629, align 4
  br i1 %628, label %631, label %633

631:                                              ; preds = %624
  %632 = add i32 %630, -1
  store i32 %632, i32* %629, align 4
  br label %633

633:                                              ; preds = %631, %624
  %634 = phi i32 [ %632, %631 ], [ %630, %624 ]
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %637

636:                                              ; preds = %633
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %622) #9
  br label %637

637:                                              ; preds = %483, %512, %621, %633, %636
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %478) #9
  br label %638

638:                                              ; preds = %472, %472, %637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #9
  br label %639

639:                                              ; preds = %440, %452, %638
  %640 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %406, align 8
  %641 = icmp eq %"class.blink::DOMWrapperWorld"* %640, null
  br i1 %641, label %649, label %642

642:                                              ; preds = %639
  %643 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %640, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %643) #9
  %644 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %640, i64 0, i32 0, i32 0, i32 0, i32 0
  %645 = load i32, i32* %644, align 4
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %647, label %649

647:                                              ; preds = %642
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %640) #9
  %648 = bitcast %"class.blink::DOMWrapperWorld"* %640 to i8*
  call void @free(i8* %648) #9
  br label %649

649:                                              ; preds = %639, %642, %647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %405) #9
  br label %650

650:                                              ; preds = %395, %649
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %651

651:                                              ; preds = %4, %40, %650
  ret void

652:                                              ; preds = %326
  %653 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %328, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %653) #9
  %654 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %328, i64 0, i32 0, i32 0, i32 0, i32 0
  %655 = load i32, i32* %654, align 4
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %659

657:                                              ; preds = %652
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %328) #9
  %658 = bitcast %"class.blink::DOMWrapperWorld"* %328 to i8*
  call void @free(i8* %658) #9
  br label %659

659:                                              ; preds = %657, %652, %326
  %660 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 2, i32 1, i32 1, i32 0
  %661 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %660, align 8
  %662 = icmp eq %"class.blink::DOMWrapperWorld"* %661, null
  br i1 %662, label %670, label %663

663:                                              ; preds = %659
  %664 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %661, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %664) #9
  %665 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %661, i64 0, i32 0, i32 0, i32 0, i32 0
  %666 = load i32, i32* %665, align 4
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %670

668:                                              ; preds = %663
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %661) #9
  %669 = bitcast %"class.blink::DOMWrapperWorld"* %661 to i8*
  call void @free(i8* %669) #9
  br label %670

670:                                              ; preds = %668, %663, %659
  %671 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 1, i32 1, i32 1, i32 0
  %672 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %671, align 8
  %673 = icmp eq %"class.blink::DOMWrapperWorld"* %672, null
  br i1 %673, label %681, label %674

674:                                              ; preds = %670
  %675 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %672, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %675) #9
  %676 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %672, i64 0, i32 0, i32 0, i32 0, i32 0
  %677 = load i32, i32* %676, align 4
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %681

679:                                              ; preds = %674
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %672) #9
  %680 = bitcast %"class.blink::DOMWrapperWorld"* %672 to i8*
  call void @free(i8* %680) #9
  br label %681

681:                                              ; preds = %679, %674, %670
  %682 = getelementptr inbounds [5 x %"class.blink::ScriptValue"], [5 x %"class.blink::ScriptValue"]* %10, i64 0, i64 0, i32 1, i32 1, i32 0
  %683 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %682, align 8
  %684 = icmp eq %"class.blink::DOMWrapperWorld"* %683, null
  br i1 %684, label %692, label %685

685:                                              ; preds = %681
  %686 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %683, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %686) #9
  %687 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %683, i64 0, i32 0, i32 0, i32 0, i32 0
  %688 = load i32, i32* %687, align 4
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %692

690:                                              ; preds = %685
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %683) #9
  %691 = bitcast %"class.blink::DOMWrapperWorld"* %683 to i8*
  call void @free(i8* %691) #9
  br label %692

692:                                              ; preds = %690, %685, %681
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %119) #9
  %693 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %79, align 8
  %694 = icmp eq %"class.blink::DOMWrapperWorld"* %693, null
  br i1 %694, label %395, label %330
}

declare %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"*) local_unnamed_addr #1

declare void @_ZNK5blink10ErrorEvent5errorEPNS_11ScriptStateE(%"class.blink::ScriptValue"* sret, %"class.blink::ErrorEvent"*, %"class.blink::ScriptState"*) local_unnamed_addr #1

declare void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret, %"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21V8EventHandlerNonNull26IsRunnableOrThrowExceptionENS0_11IgnorePauseE(%"class.blink::V8EventHandlerNonNull"*, i32) local_unnamed_addr #1

declare void @_ZN5blink21V8EventHandlerNonNull29InvokeWithoutRunnabilityCheckENS_8bindings31V8ValueOrScriptWrappableAdapterERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.v8::Maybe"* sret, %"class.blink::V8EventHandlerNonNull"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

declare void @_ZN5blink20CallbackFunctionBase24EvaluateAsPartOfCallbackEN4base12OnceCallbackIFvvEEE(%"class.blink::CallbackFunctionBase"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14JSEventHandler5TraceEPNS_7VisitorE(%"class.blink::JSEventHandler"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21V8EventHandlerNonNullEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind
declare void @_ZN5blink20JSBasedEventListenerD2Ev(%"class.blink::JSBasedEventListener"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14JSEventHandlerD0Ev(%"class.blink::JSEventHandler"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 0
  tail call void @_ZN5blink20JSBasedEventListenerD2Ev(%"class.blink::JSBasedEventListener"* %2) #9
  ret void
}

declare void @_ZN5blink20JSBasedEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14JSEventHandler14IsEventHandlerEv(%"class.blink::JSEventHandler"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

declare zeroext i1 @_ZNK5blink20JSBasedEventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14JSEventHandler7MatchesERKNS_13EventListenerE(%"class.blink::JSEventHandler"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq %"class.blink::EventListener"* %3, %1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20JSBasedEventListener22IsJSBasedEventListenerEv(%"class.blink::JSBasedEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener21IsNativeEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink14JSEventHandler17GetListenerObjectERNS_11EventTargetE(%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %4, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::TraceWrapperV8Reference"* %5 to %"class.v8::Object"**
  %7 = load %"class.v8::Object"*, %"class.v8::Object"** %6, align 8
  %8 = icmp eq %"class.v8::Object"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = bitcast %"class.blink::ScriptState"** %10 to %"class.v8::internal::Isolate"***
  %12 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %11, align 8
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Object"* %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #9
  %17 = bitcast i64* %16 to %"class.v8::Value"*
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi %"class.v8::Value"* [ %17, %9 ], [ null, %2 ]
  ret %"class.v8::Value"* %19
}

declare %"class.blink::SourceLocation"* @_ZN5blink20JSBasedEventListener17GetSourceLocationERNS_11EventTargetE(%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20JSBasedEventListener17IsJSEventListenerEv(%"class.blink::JSBasedEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14JSEventHandler16IsJSEventHandlerEv(%"class.blink::JSEventHandler"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Isolate"* @_ZNK5blink14JSEventHandler10GetIsolateEv(%"class.blink::JSEventHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  ret %"class.v8::Isolate"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZNK5blink14JSEventHandler14GetScriptStateEv(%"class.blink::JSEventHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  ret %"class.blink::ScriptState"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZNK5blink14JSEventHandler27GetScriptStateOrReportErrorEPKc(%"class.blink::JSEventHandler"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %4, i64 0, i32 0
  %6 = tail call %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase40CallbackRelevantScriptStateOrReportErrorEPKcS2_(%"class.blink::CallbackFunctionBase"* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* %1) #9
  ret %"class.blink::ScriptState"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZNK5blink14JSEventHandler8GetWorldEv(%"class.blink::JSEventHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8EventHandlerNonNull"*, %"class.blink::V8EventHandlerNonNull"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8EventHandlerNonNull", %"class.blink::V8EventHandlerNonNull"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 2, i32 0
  %7 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %6, align 8
  ret %"class.blink::DOMWrapperWorld"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !18

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.195"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.195"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !18

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.195"*) local_unnamed_addr #1

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #9
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #9
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8) %3) #9
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #9
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.214* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.214, %class.scoped_refptr.214* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #9
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase40CallbackRelevantScriptStateOrReportErrorEPKcS2_(%"class.blink::CallbackFunctionBase"*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !18

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.195"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.195"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EventListener"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EventListener"*
  %3 = bitcast i8* %0 to void (%"class.blink::EventListener"*)***
  %4 = load void (%"class.blink::EventListener"*)**, void (%"class.blink::EventListener"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %4, i64 1
  %6 = load void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %5, align 8
  tail call void %6(%"class.blink::EventListener"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink20JSBasedEventListenerC2Ev(%"class.blink::JSBasedEventListener"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #9
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #9
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #9
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !18

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #9
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !18

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.214, %class.scoped_refptr.214* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #9
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8) %9) #9
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #9
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #9
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.214* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #9
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #9
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #9
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #9
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #9
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.214* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #9
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #9
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !18

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.195"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.195"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %62, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::ScriptValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !18

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)***
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %60, %54 ]
  %56 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %30, i64 %55, i32 1, i32 0
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)** %57, i64 7
  %59 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8) %56) #9
  %60 = add nuw nsw i64 %55, 1
  %61 = icmp ult i64 %60, %50
  br i1 %61, label %54, label %62

62:                                               ; preds = %54, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !18

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %41

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %22, i64 %25, i32 1, i32 1, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWrapperWorld"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #9
  %32 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %28) #9
  %36 = bitcast %"class.blink::DOMWrapperWorld"* %28 to i8*
  tail call void @free(i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %4 = bitcast %"class.blink::ScriptValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.blink::TraceWrapperV8Reference.211"*
  %9 = bitcast i8* %7 to i64**
  store i64* null, i64** %9, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %3, %1
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %9) #9
  br label %16

16:                                               ; preds = %15, %11, %2
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8) %8) #9
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to %"class.blink::DOMWrapperWorld"**
  store %"class.blink::DOMWrapperWorld"* %18, %"class.blink::DOMWrapperWorld"** %20, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  br label %24

24:                                               ; preds = %16, %22
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #9
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !18

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #9
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !17
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)***
  %49 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)** %49, i64 7
  %51 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.211"*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %47, %"class.blink::TraceWrapperV8Reference.211"* dereferenceable(8) %8) #9
  %52 = load i64, i64* %42, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %42, align 8
  br label %54

54:                                               ; preds = %24, %34, %41
  ret %"class.blink::ScriptValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink14JSEventHandler14InvokeInternalERNS3_11EventTargetERNS3_5EventEN2v85LocalINS9_5ValueEEEE3$_0JNSt3__117reference_wrapperISC_EENSF_IN3WTF6StringEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = alloca %"class.blink::V8StringResource", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %7 = bitcast void ()** %6 to %"class.WTF::String"**
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = bitcast %"class.blink::V8StringResource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 152, i1 false) #9
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %2, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::V8StringResource"* %2 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %2, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %2, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %2, i64 0, i32 3, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr.407"* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE2EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %2) #9
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %11, align 8
  br i1 %17, label %26, label %19

19:                                               ; preds = %1
  %20 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %21 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %20) #9
  %22 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %18, %"class.v8::Context"* %21) #9
  %23 = ptrtoint %"class.v8::String"* %22 to i64
  store i64 %23, i64* %12, align 8
  %24 = icmp eq %"class.v8::String"* %22, null
  %25 = bitcast %"class.v8::String"* %22 to %"class.v8::Value"*
  br i1 %24, label %73, label %26

26:                                               ; preds = %19, %1
  %27 = phi %"class.v8::Value"* [ %25, %19 ], [ %18, %1 ]
  %28 = icmp eq %"class.v8::Value"* %27, null
  br i1 %28, label %33, label %29, !prof !18

29:                                               ; preds = %26
  %30 = bitcast %"class.v8::Value"* %27 to %"class.v8::String"*
  %31 = load i32, i32* %13, align 8
  %32 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %30, i32 %31) #9
  br label %53

33:                                               ; preds = %26
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !18

50:                                               ; preds = %41
  call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %33, %29
  %54 = phi %"class.WTF::StringImpl"* [ %32, %29 ], [ null, %33 ], [ %34, %36 ], [ %34, %51 ]
  %55 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %56 = bitcast %"class.WTF::String"* %8 to i64*
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %72, %69, %53, %19
  %74 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %2, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  store i8* null, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %75) #9
  br label %78

78:                                               ; preds = %77, %73
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #9
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE2EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %119, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %58

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 67
  br i1 %20, label %21, label %47

21:                                               ; preds = %10
  %22 = add i64 %7, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, -2
  %26 = icmp eq i32 %25, 6
  br i1 %26, label %27, label %47

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = bitcast %"class.WTF::String"* %28 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 0, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %45, %42, %27
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br label %119

47:                                               ; preds = %21, %10
  %48 = add i64 %7, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %7, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  %57 = icmp ult i16 %56, 64
  br i1 %57, label %119, label %58, !prof !26

58:                                               ; preds = %5, %47
  %59 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #9
  br i1 %59, label %60, label %117, !prof !26

60:                                               ; preds = %58
  %61 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %62 = load %"class.v8::Int32"*, %"class.v8::Int32"** %61, align 8
  %63 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %62) #9
  %64 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %63) #9
  %65 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %66 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #9
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !18

81:                                               ; preds = %72
  tail call void @llvm.trap() #9
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %82, %67, %60
  %85 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  %86 = bitcast %"class.WTF::String"* %65 to i64*
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %85, i64* %86, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #9
  br label %103

103:                                              ; preds = %84, %99, %102
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %66, label %119, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #9
  br label %119

117:                                              ; preds = %58
  %118 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %118, align 8
  br label %119

119:                                              ; preds = %116, %113, %103, %47, %1, %117, %46
  %120 = phi i1 [ false, %117 ], [ true, %46 ], [ true, %1 ], [ true, %47 ], [ true, %103 ], [ true, %113 ], [ true, %116 ]
  ret i1 %120
}

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink14JSEventHandler14InvokeInternalERNS2_11EventTargetERNS2_5EventEN2v85LocalINS8_5ValueEEEE3$_0JNSt3__117reference_wrapperISB_EENSE_IN3WTF6StringEEEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21V8EventHandlerNonNullEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink11ScriptValue4FromIRKN3WTF6StringEEES0_PNS_11ScriptStateEOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink11ScriptValue4FromIRKN3WTF6StringEEES0_PNS_11ScriptStateEOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink11ScriptValue4FromIRKN3WTF6StringEEES0_PNS_11ScriptStateEOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink11ScriptValue4FromIRKN3WTF6StringEEES0_PNS_11ScriptStateEOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink11ScriptValue4FromIjEES0_PNS_11ScriptStateEOT_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink11ScriptValue4FromIjEES0_PNS_11ScriptStateEOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink11ScriptValue4FromIjEES0_PNS_11ScriptStateEOT_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink11ScriptValue4FromIjEES0_PNS_11ScriptStateEOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink11ScriptValue4FromIRN2v85LocalINS2_5ValueEEEEES0_PNS_11ScriptStateEOT_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink11ScriptValue4FromIRN2v85LocalINS2_5ValueEEEEES0_PNS_11ScriptStateEOT_"}
!17 = !{i8 0, i8 2}
!18 = !{!"branch_weights", i32 1, i32 2000}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink14JSEventHandler14InvokeInternalERNS3_11EventTargetERNS3_5EventEN2v85LocalINS9_5ValueEEEE3$_0JNSt3__117reference_wrapperISC_EENSF_IN3WTF6StringEEEEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink14JSEventHandler14InvokeInternalERNS3_11EventTargetERNS3_5EventEN2v85LocalINS9_5ValueEEEE3$_0JNSt3__117reference_wrapperISC_EENSF_IN3WTF6StringEEEEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIZN5blink14JSEventHandler14InvokeInternalERNS1_11EventTargetERNS1_5EventEN2v85LocalINS7_5ValueEEEE3$_0JNSt3__117reference_wrapperISA_EENSD_IN3WTF6StringEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIZN5blink14JSEventHandler14InvokeInternalERNS1_11EventTargetERNS1_5EventEN2v85LocalINS7_5ValueEEEE3$_0JNSt3__117reference_wrapperISA_EENSD_IN3WTF6StringEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!24 = distinct !{!24, !25, !"_ZN3WTF4BindIZN5blink14JSEventHandler14InvokeInternalERNS1_11EventTargetERNS1_5EventEN2v85LocalINS7_5ValueEEEE3$_0JNSt3__117reference_wrapperISA_EENSD_INS_6StringEEEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF4BindIZN5blink14JSEventHandler14InvokeInternalERNS1_11EventTargetERNS1_5EventEN2v85LocalINS7_5ValueEEEE3$_0JNSt3__117reference_wrapperISA_EENSD_INS_6StringEEEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!26 = !{!"branch_weights", i32 2000, i32 1}
