; ModuleID = '../../third_party/perfetto/src/tracing/ipc/default_socket.cc'
source_filename = "../../third_party/perfetto/src/tracing/ipc/default_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [28 x i8] c"PERFETTO_PRODUCER_SOCK_NAME\00", align 1
@_ZZN8perfetto17GetProducerSocketEvE15producer_socket = internal unnamed_addr global i8* null, align 8
@_ZGVZN8perfetto17GetProducerSocketEvE15producer_socket = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"/run/perfetto/traced-producer.sock\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"/tmp/perfetto-producer\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"PERFETTO_CONSUMER_SOCK_NAME\00", align 1
@_ZZN8perfetto17GetConsumerSocketEvE15consumer_socket = internal unnamed_addr global i8* null, align 8
@_ZGVZN8perfetto17GetConsumerSocketEvE15consumer_socket = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [35 x i8] c"/run/perfetto/traced-consumer.sock\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"/tmp/perfetto-consumer\00", align 1
@.str.6 = private unnamed_addr constant [61 x i8] c"../../third_party/perfetto/src/tracing/ipc/default_socket.cc\00", align 1
@.str.7 = private unnamed_addr constant [73 x i8] c"%s exists but cannot be accessed. Falling back on /tmp/  (errno: %d, %s)\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"/run/perfetto/\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN8perfetto17GetProducerSocketEv() local_unnamed_addr #0 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #7
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %14

3:                                                ; preds = %0
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN8perfetto17GetProducerSocketEvE15producer_socket to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8perfetto17GetProducerSocketEvE15producer_socket) #7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i1 @_ZN8perfetto12_GLOBAL__N_121UseRunPerfettoBaseDirEv()
  %11 = select i1 %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)
  store i8* %11, i8** @_ZZN8perfetto17GetProducerSocketEvE15producer_socket, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8perfetto17GetProducerSocketEvE15producer_socket) #7
  br label %12

12:                                               ; preds = %6, %9, %3
  %13 = load i8*, i8** @_ZZN8perfetto17GetProducerSocketEvE15producer_socket, align 8
  br label %14

14:                                               ; preds = %12, %0
  %15 = phi i8* [ %13, %12 ], [ %1, %0 ]
  ret i8* %15
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN8perfetto12_GLOBAL__N_121UseRunPerfettoBaseDirEv() unnamed_addr #0 {
  br label %1

1:                                                ; preds = %6, %0
  %2 = tail call i32 @access(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1) #7
  switch i32 %2, label %3 [
    i32 -1, label %6
    i32 0, label %26
  ]

3:                                                ; preds = %1
  %4 = tail call i32* @__errno_location() #8
  %5 = load i32, i32* %4, align 4
  br label %10

6:                                                ; preds = %1
  %7 = tail call i32* @__errno_location() #8
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %1, label %10

10:                                               ; preds = %6, %3
  %11 = phi i32 [ %5, %3 ], [ %8, %6 ]
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %26, label %13

13:                                               ; preds = %10, %16
  %14 = phi i64 [ %17, %16 ], [ 60, %10 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = add nsw i64 %14, -1
  %18 = lshr i64 4674065399844, %17
  %19 = and i64 %18, 1
  %20 = icmp ne i64 %19, 0
  %21 = icmp slt i64 %14, 61
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %13

23:                                               ; preds = %13, %16
  %24 = getelementptr inbounds [61 x i8], [61 x i8]* @.str.6, i64 0, i64 %14
  %25 = tail call i8* @strerror(i32 %11) #7
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %24, i32 52, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 %11, i8* %25) #7
  br label %26

26:                                               ; preds = %1, %23, %10
  %27 = phi i1 [ false, %10 ], [ false, %23 ], [ true, %1 ]
  ret i1 %27
}

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN8perfetto17GetConsumerSocketEv() local_unnamed_addr #0 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #7
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %14

3:                                                ; preds = %0
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN8perfetto17GetConsumerSocketEvE15consumer_socket to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8perfetto17GetConsumerSocketEvE15consumer_socket) #7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i1 @_ZN8perfetto12_GLOBAL__N_121UseRunPerfettoBaseDirEv()
  %11 = select i1 %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)
  store i8* %11, i8** @_ZZN8perfetto17GetConsumerSocketEvE15consumer_socket, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8perfetto17GetConsumerSocketEvE15consumer_socket) #7
  br label %12

12:                                               ; preds = %6, %9, %3
  %13 = load i8*, i8** @_ZZN8perfetto17GetConsumerSocketEvE15consumer_socket, align 8
  br label %14

14:                                               ; preds = %12, %0
  %15 = phi i8* [ %13, %12 ], [ %1, %0 ]
  ret i8* %15
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

declare void @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
