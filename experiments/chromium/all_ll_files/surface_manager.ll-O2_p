; ModuleID = '../../components/viz/service/surfaces/surface_manager.cc'
source_filename = "../../components/viz/service/surfaces/surface_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.viz::SurfaceManager" = type { %"class.viz::SurfaceManagerDelegate"*, %"class.absl::optional", %"class.base::flat_map", %"class.base::flat_map.249", %"class.base::flat_map.259", %"class.base::ObserverList", %"class.base::ThreadChecker", %"class.base::internal::flat_tree.188", %"class.viz::SurfaceId", %"class.base::internal::flat_tree.188", %"class.base::TickClock"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.301", %"class.std::__1::unordered_map.325", %"class.absl::optional.351", i8, %"class.base::WeakPtrFactory.361" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.244" }
%"struct.std::__1::pair" = type { %"class.base::UnguessableToken", %"class.std::__1::unique_ptr" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::SurfaceAllocationGroup"* }
%"class.viz::SurfaceAllocationGroup" = type { %"class.viz::FrameSinkId", %"class.base::UnguessableToken", %"class.std::__1::vector.0", %"class.base::flat_map.230", %"class.base::internal::flat_tree.240", %"class.viz::SurfaceManager"*, %"class.viz::SurfaceId", %"class.viz::SurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.viz::Surface"**, %"class.viz::Surface"**, %"class.std::__1::__compressed_pair.225" }
%"class.viz::Surface" = type { %"class.viz::SurfaceInfo", %"class.viz::SurfaceId", %"class.viz::SurfaceManager"*, %"class.base::WeakPtr", %"class.std::__1::unique_ptr.8", %"class.absl::optional.17", %"class.absl::optional.17", %"class.absl::optional.183", i8, i8, %"class.base::internal::flat_tree.188", %"class.std::__1::vector.49", %"class.base::internal::flat_tree.189", %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.189", i8, i8, %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceSavedFrameStorage", i8, %"class.base::WeakPtrFactory.224" }
%"class.viz::SurfaceInfo" = type <{ %"class.viz::SurfaceId", float, %"class.gfx::Size", [4 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.viz::SurfaceDependencyDeadline"* }
%"class.viz::SurfaceDependencyDeadline" = type { %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.absl::optional.11" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { %"class.base::TimeTicks" }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, [7 x i8], %union.anon.21 }
%union.anon.21 = type { %"struct.viz::Surface::FrameData" }
%"struct.viz::Surface::FrameData" = type <{ %"class.viz::CompositorFrame", i64, i8, i8, i8, [5 x i8] }>
%"class.viz::CompositorFrame" = type { %"class.viz::CompositorFrameMetadata", %"class.std::__1::vector.86", %"class.std::__1::vector.107" }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector.22", %"class.std::__1::vector.37", %"class.std::__1::vector.49", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.56", %"class.absl::optional.61", i32, %"class.std::__1::unique_ptr.66", %"class.std::__1::vector.72" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.32" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.24", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.24" = type { %"class.base::internal::flat_tree.25" }
%"class.base::internal::flat_tree.25" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair.28"*, %"struct.std::__1::pair.28"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair.28" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair.28"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.44" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.39", %"class.viz::SurfaceId" }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.viz::SurfaceId" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.viz::SurfaceRange"* }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { float }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.81" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.76" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.util::IdType"* }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.102" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.88", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.92", i8, i32, i8, [7 x i8], %"class.absl::optional.97" }
%"class.util::IdType.88" = type { %"class.base::StrongAlias.89" }
%"class.base::StrongAlias.89" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.90", i64 }
%"class.util::IdType.90" = type { %"class.base::StrongAlias.91" }
%"class.base::StrongAlias.91" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.97" = type { %"class.absl::optional_internal::optional_data.98" }
%"class.absl::optional_internal::optional_data.98" = type { %"class.absl::optional_internal::optional_data_base.99" }
%"class.absl::optional_internal::optional_data_base.99" = type { %"class.absl::optional_internal::optional_data_dtor_base.100" }
%"class.absl::optional_internal::optional_data_dtor_base.100" = type { i8, [7 x i8], %union.anon.101 }
%union.anon.101 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.viz::TransferableResource"* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.std::__1::unique_ptr.109"*, %"class.std::__1::unique_ptr.109"*, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.132", i8, i8, i8, i8, %"class.std::__1::vector.137", %"class.viz::QuadList", %"class.cc::ListContainer.170" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.127" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.120", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.114, i32, %"class.absl::optional.115", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.114 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"*, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr.144, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.146", %"class.absl::optional.151", %"class.absl::optional.151" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.143", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.143" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.144 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.145" }>
%"class.base::RefCountedThreadSafe.145" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.151" = type { %"class.absl::optional_internal::optional_data.152" }
%"class.absl::optional_internal::optional_data.152" = type { %"class.absl::optional_internal::optional_data_base.153" }
%"class.absl::optional_internal::optional_data_base.153" = type { %"class.absl::optional_internal::optional_data_dtor_base.154" }
%"class.absl::optional_internal::optional_data_dtor_base.154" = type { i8, %union.anon.155 }
%union.anon.155 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::unique_ptr.139"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.170" = type { %"class.cc::ListContainerHelper" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::unique_ptr.109"* }
%"class.absl::optional.183" = type { %"class.absl::optional_internal::optional_data.184" }
%"class.absl::optional_internal::optional_data.184" = type { %"class.absl::optional_internal::optional_data_base.185" }
%"class.absl::optional_internal::optional_data_base.185" = type { %"class.absl::optional_internal::optional_data_dtor_base.186" }
%"class.absl::optional_internal::optional_data_dtor_base.186" = type { i8, %union.anon.187 }
%union.anon.187 = type { %"class.viz::CompositorFrame" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.viz::SurfaceId"* }
%"class.base::internal::flat_tree.189" = type { %"class.std::__1::vector.190" }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"**, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.viz::SurfaceAllocationGroup"** }
%"class.viz::SurfaceSavedFrameStorage" = type { %"class.viz::Surface"*, %"class.base::internal::CancelableCallbackImpl", %"class.std::__1::unique_ptr.199" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.197", %"class.base::WeakPtrFactory" }
%"class.base::OnceCallback.197" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.viz::SurfaceSavedFrame"* }
%"class.viz::SurfaceSavedFrame" = type { %"class.viz::CompositorFrameTransitionDirective", %"class.base::OnceCallback.202", %"class.absl::optional.203", i64, i64, %"class.base::WeakPtrFactory.220" }
%"class.base::OnceCallback.202" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.203" = type { %"class.absl::optional_internal::optional_data.204" }
%"class.absl::optional_internal::optional_data.204" = type { %"class.absl::optional_internal::optional_data_base.205" }
%"class.absl::optional_internal::optional_data_base.205" = type { %"class.absl::optional_internal::optional_data_dtor_base.206" }
%"class.absl::optional_internal::optional_data_dtor_base.206" = type { i8, %union.anon.207 }
%union.anon.207 = type { %"struct.viz::SurfaceSavedFrame::FrameResult" }
%"struct.viz::SurfaceSavedFrame::FrameResult" = type { %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"class.std::__1::vector.212" }
%"struct.viz::SurfaceSavedFrame::OutputCopyResult" = type { %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %class.SkBitmap, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData", i8, %"class.base::OnceCallback.211" }
%class.SkBitmap = type { %class.sk_sp.208, %class.SkPixmap, %class.sk_sp.210 }
%class.sk_sp.208 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.209, i32, i32 }
%class.sk_sp.209 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.210 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.viz::SurfaceSavedFrame::RenderPassDrawData" = type { %"class.gfx::Rect", %"class.gfx::Transform", float }
%"class.base::OnceCallback.211" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"class.absl::optional.214"*, %"class.absl::optional.214"*, %"class.std::__1::__compressed_pair.215" }
%"class.absl::optional.214" = type opaque
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.absl::optional.214"* }
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.224" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.viz::Surface"** }
%"class.base::flat_map.230" = type { %"class.base::internal::flat_tree.231" }
%"class.base::internal::flat_tree.231" = type { %"class.std::__1::vector.232" }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"struct.std::__1::pair.234"*, %"struct.std::__1::pair.234"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair.234" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair.234"* }
%"class.base::internal::flat_tree.240" = type { %"class.std::__1::vector.0" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.249" = type { %"class.base::internal::flat_tree.250" }
%"class.base::internal::flat_tree.250" = type { %"class.std::__1::vector.251" }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"*, %"class.std::__1::__compressed_pair.254" }
%"struct.std::__1::pair.253" = type { %"class.viz::FrameSinkId", %"class.std::__1::vector.190" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::pair.253"* }
%"class.base::flat_map.259" = type { %"class.base::internal::flat_tree.260" }
%"class.base::internal::flat_tree.260" = type { %"class.std::__1::vector.261" }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"*, %"class.std::__1::__compressed_pair.270" }
%"struct.std::__1::pair.263" = type { %"class.viz::SurfaceId", %"class.std::__1::unique_ptr.264" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.viz::Surface"* }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::pair.263"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.275", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.277" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::internal::flat_tree.188" = type { %"class.std::__1::vector.49" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.282", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { i64 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { float }
%"class.std::__1::unordered_map.301" = type { %"class.std::__1::__hash_table.302" }
%"class.std::__1::__hash_table.302" = type <{ %"class.std::__1::unique_ptr.303", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.321", [4 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base.306"** }
%"struct.std::__1::__hash_node_base.306" = type { %"struct.std::__1::__hash_node_base.306"* }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::__bucket_list_deallocator.308" }
%"class.std::__1::__bucket_list_deallocator.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.306" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"class.std::__1::unordered_map.325" = type { %"class.std::__1::__hash_table.326" }
%"class.std::__1::__hash_table.326" = type <{ %"class.std::__1::unique_ptr.327", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.345", [4 x i8] }>
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329", %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base.330"** }
%"struct.std::__1::__hash_node_base.330" = type { %"struct.std::__1::__hash_node_base.330"* }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.std::__1::__bucket_list_deallocator.332" }
%"class.std::__1::__bucket_list_deallocator.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.std::__1::__hash_node_base.330" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"class.absl::optional.351" = type { %"class.absl::optional_internal::optional_data.352" }
%"class.absl::optional_internal::optional_data.352" = type { %"class.absl::optional_internal::optional_data_base.353" }
%"class.absl::optional_internal::optional_data_base.353" = type { %"class.absl::optional_internal::optional_data_dtor_base.354" }
%"class.absl::optional_internal::optional_data_dtor_base.354" = type { i8, %union.anon.355 }
%union.anon.355 = type { %"class.base::RepeatingTimer" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.144, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.356" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.361" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::SurfaceManagerDelegate" = type { i32 (...)** }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.viz::SurfaceReference" = type { %"class.viz::SurfaceId", %"class.viz::SurfaceId" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.424 }
%union.anon.424 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.396" }
%"struct.std::__1::pair.396" = type { %"class.viz::SurfaceId", %"class.base::internal::flat_tree.188" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__hash_node_destructor.514" }
%"class.std::__1::__hash_node_destructor.514" = type <{ %"class.std::__1::allocator.294"*, i8, [7 x i8] }>
%"class.std::__1::allocator.294" = type { i8 }
%"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.viz::SurfaceObserver" = type { i32 (...)** }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::tuple.530" = type { %"struct.std::__1::__tuple_impl.531" }
%"struct.std::__1::__tuple_impl.531" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::tuple.509" = type { i8 }
%"struct.viz::SurfaceManager::TemporaryReferenceData" = type { i8 }
%"class.std::__1::vector.367" = type { %"class.std::__1::__vector_base.368" }
%"class.std::__1::__vector_base.368" = type { %"class.viz::SurfaceReference"*, %"class.viz::SurfaceReference"*, %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.viz::SurfaceReference"* }
%"class.std::__1::tuple.506" = type { %"struct.std::__1::__tuple_impl.507" }
%"struct.std::__1::__tuple_impl.507" = type { %"class.std::__1::__tuple_leaf.508" }
%"class.std::__1::__tuple_leaf.508" = type { %"class.viz::SurfaceId"* }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.viz::SurfaceId"*, i64 }
%"struct.std::__1::__hash_node.453" = type { %"struct.std::__1::__hash_node_base.306", i64, %"struct.std::__1::__hash_value_type.454" }
%"struct.std::__1::__hash_value_type.454" = type { %"struct.std::__1::pair.401" }
%"struct.std::__1::pair.401" = type <{ %"class.viz::SurfaceId", %"struct.viz::SurfaceManager::TemporaryReferenceData", [7 x i8] }>
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523", %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node.453"* }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.std::__1::__hash_node_destructor.525" }
%"class.std::__1::__hash_node_destructor.525" = type <{ %"class.std::__1::allocator.316"*, i8, [7 x i8] }>
%"class.std::__1::allocator.316" = type { i8 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"*, %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.std::__1::allocator.273"* }
%"class.std::__1::allocator.273" = type { i8 }
%"struct.std::__1::__split_buffer.490" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::allocator.54"* }
%"class.std::__1::allocator.54" = type { i8 }
%"struct.std::__1::__hash_value_type.456" = type { %"struct.std::__1::pair.457" }
%"struct.std::__1::pair.457" = type { %"class.viz::FrameSinkId", %"class.std::__1::vector.407" }
%"class.std::__1::vector.407" = type { %"class.std::__1::__vector_base.408" }
%"class.std::__1::__vector_base.408" = type { %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"*, %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.viz::LocalSurfaceId"* }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534", %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.std::__1::__hash_node.455"* }
%"struct.std::__1::__hash_node.455" = type { %"struct.std::__1::__hash_node_base.330", i64, %"struct.std::__1::__hash_value_type.456" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.std::__1::__hash_node_destructor.536" }
%"class.std::__1::__hash_node_destructor.536" = type <{ %"class.std::__1::allocator.340"*, i8, [7 x i8] }>
%"class.std::__1::allocator.340" = type { i8 }
%"struct.std::__1::__split_buffer.554" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.std::__1::allocator.247"* }
%"class.std::__1::allocator.247" = type { i8 }
%"struct.std::__1::__split_buffer.560" = type { %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"*, %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.255", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::allocator.257"* }
%"class.std::__1::allocator.257" = type { i8 }

$_ZN4base8flat_mapIN3viz9SurfaceIdENSt3__110unique_ptrINS1_7SurfaceENS3_14default_deleteIS5_EEEENS3_4lessIvEENS3_6vectorINS3_4pairIS2_S8_EENS3_9allocatorISD_EEEEEixERKS2_ = comdat any

$_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE5eraseENS5_11__wrap_iterIPSF_EE = comdat any

$_ZN4base8flat_mapINS_16UnguessableTokenENSt3__110unique_ptrIN3viz22SurfaceAllocationGroupENS2_14default_deleteIS5_EEEENS2_4lessIvEENS2_6vectorINS2_4pairIS1_S8_EENS2_9allocatorISD_EEEEEixERKS1_ = comdat any

$_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorIPNS1_22SurfaceAllocationGroupENS3_9allocatorIS6_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S9_EENS7_ISD_EEEEEixERKS2_ = comdat any

$_ZN4base8internal9flat_treeIN3viz11FrameSinkIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS8_IPNS2_22SurfaceAllocationGroupENS5_9allocatorISB_EEEEEENSC_ISF_EEEEE5eraseENS5_11__wrap_iterIPSF_EE = comdat any

$_ZN4base14circular_dequeIN3viz9SurfaceIdEED2Ev = comdat any

$_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS_10unique_ptrINS2_7SurfaceENS_14default_deleteIS5_EEEEEENS_9allocatorIS9_EEE7emplaceIJRKS3_S8_EEENS_11__wrap_iterIPS9_EENSG_IPKS9_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdENS_10unique_ptrINS2_7SurfaceENS_14default_deleteIS5_EEEEEERNS_9allocatorIS9_EEE12emplace_backIJRKS3_S8_EEEvDpOT_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSF_EESO_EERKT_ = comdat any

$_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3viz9SurfaceIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNKSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_ = comdat any

$_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN3viz9SurfaceIdEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZNK4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm = comdat any

$_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKS3_S5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE8__rehashEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE14__erase_uniqueIS3_EEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE = comdat any

$_ZNSt3__16vectorINS_4pairIN4base16UnguessableTokenENS_10unique_ptrIN3viz22SurfaceAllocationGroupENS_14default_deleteIS6_EEEEEENS_9allocatorISA_EEE7emplaceIJRKS3_S9_EEENS_11__wrap_iterIPSA_EENSH_IPKSA_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4base16UnguessableTokenENS_10unique_ptrIN3viz22SurfaceAllocationGroupENS_14default_deleteIS6_EEEEEERNS_9allocatorISA_EEE12emplace_backIJRKS3_S9_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS0_IPNS2_22SurfaceAllocationGroupENS_9allocatorIS5_EEEEEENS6_IS9_EEE7emplaceIJRKS3_S8_EEENS_11__wrap_iterIPS9_EENSF_IPKS9_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS_6vectorIPNS2_22SurfaceAllocationGroupENS_9allocatorIS6_EEEEEERNS7_ISA_EEE12emplace_backIJRKS3_S9_EEEvDpOT_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [39 x i8] c"SurfaceManager::GarbageCollectSurfaces\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"AddTemporaryReference\00", align 1
@.str.2 = private unnamed_addr constant [57 x i8] c"../../components/viz/service/surfaces/surface_manager.cc\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Damage not visible.\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN3viz14SurfaceManagerC1EPNS_22SurfaceManagerDelegateEN4absl8optionalIjEE = hidden unnamed_addr alias void (%"class.viz::SurfaceManager"*, %"class.viz::SurfaceManagerDelegate"*, i64), void (%"class.viz::SurfaceManager"*, %"class.viz::SurfaceManagerDelegate"*, i64)* @_ZN3viz14SurfaceManagerC2EPNS_22SurfaceManagerDelegateEN4absl8optionalIjEE
@_ZN3viz14SurfaceManagerD1Ev = hidden unnamed_addr alias void (%"class.viz::SurfaceManager"*), void (%"class.viz::SurfaceManager"*)* @_ZN3viz14SurfaceManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManagerC2EPNS_22SurfaceManagerDelegateEN4absl8optionalIjEE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceManagerDelegate"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 0
  store %"class.viz::SurfaceManagerDelegate"* %1, %"class.viz::SurfaceManagerDelegate"** %4, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 1
  %6 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %9 = bitcast %"class.base::flat_map"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %8, %"class.base::internal::LinkNodeBase"* %8, %"class.base::internal::LinkNodeBase"* %8) #15
  %10 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7
  %13 = bitcast %"class.base::internal::flat_tree.188"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #15
  %14 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #15
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 8, i32 0, i32 0
  %18 = bitcast i32* %17 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 1>, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 0
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 1
  store i64 %16, i64* %20, align 8
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 9
  %22 = bitcast %"class.base::internal::flat_tree.188"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #15
  %23 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 10
  %24 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #15
  %25 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %24, i64 0, i32 0
  store %"class.base::TickClock"* %25, %"class.base::TickClock"** %23, align 8
  %26 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11
  %27 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0, i32 3
  %28 = bitcast %"class.std::__1::__compressed_pair.298"* %27 to i32*
  %29 = bitcast %"class.std::__1::unordered_map"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %28, align 4
  %30 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12
  %31 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 3
  %32 = bitcast %"class.std::__1::__compressed_pair.321"* %31 to i32*
  %33 = bitcast %"class.std::__1::unordered_map.301"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %32, align 4
  %34 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13
  %35 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.345"* %35 to i32*
  %37 = bitcast %"class.std::__1::unordered_map.325"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %36, align 4
  %38 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 16, i32 0
  %41 = ptrtoint %"class.viz::SurfaceManager"* %0 to i64
  %42 = bitcast %union.anon.355* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 129, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %40, i64 %41) #15
  %43 = tail call zeroext i1 @_ZN4base25SequencedTaskRunnerHandle5IsSetEv() #15
  br i1 %43, label %44, label %51

44:                                               ; preds = %3
  %45 = load i8, i8* %38, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %48) #15
  store i8 0, i8* %38, align 8
  br label %49

49:                                               ; preds = %44, %47
  %50 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* %50) #15
  store i8 1, i8* %38, align 8
  br label %51

51:                                               ; preds = %49, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base25SequencedTaskRunnerHandle5IsSetEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManagerD2Ev(%"class.viz::SurfaceManager"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::flat_tree.188", align 8
  %3 = alloca %"class.viz::SurfaceReference", align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.306"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::__hash_node_base.306"* [ %15, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base.306"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  %17 = icmp eq %"struct.std::__1::__hash_node_base.306"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %9, align 8
  %19 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::unordered_map.301", %"class.std::__1::unordered_map.301"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = add i64 %20, -1
  %25 = and i64 %20, 3
  %26 = icmp ult i64 %24, 3
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = sub i64 %20, %25
  br label %41

29:                                               ; preds = %41, %22
  %30 = phi i64 [ 0, %22 ], [ %55, %41 ]
  %31 = icmp eq i64 %25, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %29, %32
  %33 = phi i64 [ %37, %32 ], [ %30, %29 ]
  %34 = phi i64 [ %38, %32 ], [ %25, %29 ]
  %35 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %23, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %35, i64 %33
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %36, align 8
  %37 = add nuw i64 %33, 1
  %38 = add i64 %34, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %32, !llvm.loop !3

40:                                               ; preds = %29, %32, %18
  store i64 0, i64* %5, align 8
  br label %58

41:                                               ; preds = %41, %27
  %42 = phi i64 [ 0, %27 ], [ %55, %41 ]
  %43 = phi i64 [ %28, %27 ], [ %56, %41 ]
  %44 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %23, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %44, i64 %42
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %45, align 8
  %46 = or i64 %42, 1
  %47 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %23, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %48, align 8
  %49 = or i64 %42, 2
  %50 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %23, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %51, align 8
  %52 = or i64 %42, 3
  %53 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %23, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %54, align 8
  %55 = add nuw i64 %42, 4
  %56 = add i64 %43, -4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %29, label %41

58:                                               ; preds = %1, %40
  %59 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13
  %60 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %123, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.330"* %65, null
  br i1 %66, label %83, label %67

67:                                               ; preds = %63, %80
  %68 = phi %"struct.std::__1::__hash_node_base.330"* [ %70, %80 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %68, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %68, i64 3
  %72 = bitcast %"struct.std::__1::__hash_node_base.330"* %71 to %"class.viz::LocalSurfaceId"**
  %73 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %72, align 8
  %74 = icmp eq %"class.viz::LocalSurfaceId"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %67
  %76 = ptrtoint %"class.viz::LocalSurfaceId"* %73 to i64
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %68, i64 4
  %78 = bitcast %"struct.std::__1::__hash_node_base.330"* %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.viz::LocalSurfaceId"* %73 to i8*
  tail call void @_ZdlPv(i8* %79) #16
  br label %80

80:                                               ; preds = %75, %67
  %81 = bitcast %"struct.std::__1::__hash_node_base.330"* %68 to i8*
  tail call void @_ZdlPv(i8* %81) #16
  %82 = icmp eq %"struct.std::__1::__hash_node_base.330"* %70, null
  br i1 %82, label %83, label %67

83:                                               ; preds = %80, %63
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %64, align 8
  %84 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %105, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::unordered_map.325", %"class.std::__1::unordered_map.325"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = add i64 %85, -1
  %90 = and i64 %85, 3
  %91 = icmp ult i64 %89, 3
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = sub i64 %85, %90
  br label %106

94:                                               ; preds = %106, %87
  %95 = phi i64 [ 0, %87 ], [ %120, %106 ]
  %96 = icmp eq i64 %90, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %102, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %103, %97 ], [ %90, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %88, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %100, i64 %98
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %101, align 8
  %102 = add nuw i64 %98, 1
  %103 = add i64 %99, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %97, !llvm.loop !5

105:                                              ; preds = %94, %97, %83
  store i64 0, i64* %60, align 8
  br label %123

106:                                              ; preds = %106, %92
  %107 = phi i64 [ 0, %92 ], [ %120, %106 ]
  %108 = phi i64 [ %93, %92 ], [ %121, %106 ]
  %109 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %88, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %109, i64 %107
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %110, align 8
  %111 = or i64 %107, 1
  %112 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %88, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %112, i64 %111
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %113, align 8
  %114 = or i64 %107, 2
  %115 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %88, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %115, i64 %114
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %116, align 8
  %117 = or i64 %107, 3
  %118 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %88, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %118, i64 %117
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %119, align 8
  %120 = add nuw i64 %107, 4
  %121 = add i64 %108, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %94, label %106

123:                                              ; preds = %58, %105
  %124 = bitcast %"class.base::internal::flat_tree.188"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #15
  %125 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %2, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %2, i64 0, i32 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %128 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 8
  %129 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0
  %130 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %129, %"class.viz::SurfaceId"* dereferenceable(32) %128) #15
  %131 = icmp eq %"struct.std::__1::__hash_node_base"* %130, null
  %132 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 9
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 6
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to %"class.base::internal::flat_tree.188"*
  %135 = select i1 %131, %"class.base::internal::flat_tree.188"* %132, %"class.base::internal::flat_tree.188"* %134
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 24, i1 false) #15
  %136 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %135, i64 0, i32 0, i32 0, i32 1
  %137 = bitcast %"class.viz::SurfaceId"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.base::internal::flat_tree.188"* %135 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %138, %140
  %142 = ashr exact i64 %141, 5
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %243, label %144

144:                                              ; preds = %123
  %145 = icmp ugt i64 %142, 576460752303423487
  br i1 %145, label %146, label %148

146:                                              ; preds = %144
  %147 = bitcast %"class.base::internal::flat_tree.188"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %147) #17
  unreachable

148:                                              ; preds = %144
  %149 = tail call i8* @_Znwm(i64 %141) #16
  %150 = bitcast i8* %149 to %"class.viz::SurfaceId"*
  %151 = bitcast %"class.viz::SurfaceId"** %126 to i8**
  store i8* %149, i8** %151, align 8
  %152 = bitcast %"class.base::internal::flat_tree.188"* %2 to i8**
  store i8* %149, i8** %152, align 8
  %153 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %150, i64 %142
  store %"class.viz::SurfaceId"* %153, %"class.viz::SurfaceId"** %127, align 8
  %154 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %135, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %154, align 8
  %156 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %136, align 8
  %157 = bitcast %"class.viz::SurfaceId"** %126 to i64*
  %158 = ptrtoint i8* %149 to i64
  %159 = icmp eq %"class.viz::SurfaceId"* %155, %156
  br i1 %159, label %236, label %160

160:                                              ; preds = %148
  %161 = ptrtoint %"class.viz::SurfaceId"* %155 to i64
  %162 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %156, i64 -1, i32 0, i32 0
  %163 = ptrtoint i32* %162 to i64
  %164 = sub i64 %163, %161
  %165 = and i64 %164, 32
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %189

167:                                              ; preds = %160
  %168 = bitcast i8* %149 to i32*
  %169 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %155, i64 0, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  store i32 %170, i32* %168, align 4
  %171 = getelementptr inbounds i8, i8* %149, i64 4
  %172 = bitcast i8* %171 to i32*
  %173 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %155, i64 0, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds i8, i8* %149, i64 8
  %176 = bitcast i8* %175 to i32*
  %177 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %155, i64 0, i32 1, i32 0
  %178 = load i32, i32* %177, align 8
  store i32 %178, i32* %176, align 8
  %179 = getelementptr inbounds i8, i8* %149, i64 12
  %180 = bitcast i8* %179 to i32*
  %181 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %155, i64 0, i32 1, i32 1
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %180, align 4
  %183 = getelementptr inbounds i8, i8* %149, i64 16
  %184 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %155, i64 0, i32 1, i32 2
  %185 = bitcast %"class.base::UnguessableToken"* %184 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %185, i64 16, i1 false) #15
  %186 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %155, i64 1
  %187 = getelementptr inbounds i8, i8* %149, i64 32
  %188 = bitcast i8* %187 to %"class.viz::SurfaceId"*
  br label %189

189:                                              ; preds = %167, %160
  %190 = phi %"class.viz::SurfaceId"* [ undef, %160 ], [ %188, %167 ]
  %191 = phi %"class.viz::SurfaceId"* [ %150, %160 ], [ %188, %167 ]
  %192 = phi %"class.viz::SurfaceId"* [ %155, %160 ], [ %186, %167 ]
  %193 = icmp ult i64 %164, 32
  br i1 %193, label %232, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.viz::SurfaceId"* [ %230, %194 ], [ %191, %189 ]
  %196 = phi %"class.viz::SurfaceId"* [ %229, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 0, i32 0, i32 0
  %198 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %197, align 4
  %200 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 0, i32 0, i32 1
  %201 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 0, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 0, i32 1, i32 0
  %205 = load i32, i32* %204, align 8
  store i32 %205, i32* %203, align 8
  %206 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 0, i32 1, i32 1
  %207 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 0, i32 1, i32 1
  %208 = load i32, i32* %207, align 4
  store i32 %208, i32* %206, align 4
  %209 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 0, i32 1, i32 2
  %210 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 0, i32 1, i32 2
  %211 = bitcast %"class.base::UnguessableToken"* %209 to i8*
  %212 = bitcast %"class.base::UnguessableToken"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 16, i1 false) #15
  %213 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 1, i32 0, i32 0
  %214 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 1, i32 0, i32 0
  %215 = load i32, i32* %214, align 4
  store i32 %215, i32* %213, align 4
  %216 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 1, i32 0, i32 1
  %217 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 1, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %216, align 4
  %219 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 1, i32 1, i32 0
  %220 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 1, i32 1, i32 0
  %221 = load i32, i32* %220, align 8
  store i32 %221, i32* %219, align 8
  %222 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 1, i32 1, i32 1
  %223 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 1, i32 1, i32 1
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %222, align 4
  %225 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 1, i32 1, i32 2
  %226 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 1, i32 1, i32 2
  %227 = bitcast %"class.base::UnguessableToken"* %225 to i8*
  %228 = bitcast %"class.base::UnguessableToken"* %226 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 16, i1 false) #15
  %229 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %196, i64 2
  %230 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %195, i64 2
  %231 = icmp eq %"class.viz::SurfaceId"* %229, %156
  br i1 %231, label %232, label %194

232:                                              ; preds = %194, %189
  %233 = phi %"class.viz::SurfaceId"* [ %190, %189 ], [ %230, %194 ]
  %234 = ptrtoint %"class.viz::SurfaceId"* %233 to i64
  %235 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %125, align 8
  br label %236

236:                                              ; preds = %148, %232
  %237 = phi %"class.viz::SurfaceId"* [ %150, %148 ], [ %235, %232 ]
  %238 = phi i64 [ %158, %148 ], [ %234, %232 ]
  store i64 %238, i64* %157, align 8
  %239 = inttoptr i64 %238 to %"class.viz::SurfaceId"*
  %240 = icmp eq %"class.viz::SurfaceId"* %237, %239
  br i1 %240, label %243, label %241

241:                                              ; preds = %236
  %242 = bitcast %"class.viz::SurfaceReference"* %3 to i8*
  br label %449

243:                                              ; preds = %449, %123, %236
  call void @_ZN3viz14SurfaceManager22GarbageCollectSurfacesEv(%"class.viz::SurfaceManager"* %0)
  %244 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %125, align 8
  %245 = icmp eq %"class.viz::SurfaceId"* %244, null
  br i1 %245, label %250, label %246

246:                                              ; preds = %243
  %247 = ptrtoint %"class.viz::SurfaceId"* %244 to i64
  %248 = bitcast %"class.viz::SurfaceId"** %126 to i64*
  store i64 %247, i64* %248, align 8
  %249 = bitcast %"class.viz::SurfaceId"* %244 to i8*
  call void @_ZdlPv(i8* %249) #16
  br label %250

250:                                              ; preds = %243, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #15
  %251 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 16, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %251) #15
  %252 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %253 = load i8, i8* %252, align 8, !range !2
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %256) #15
  store i8 0, i8* %252, align 8
  br label %257

257:                                              ; preds = %250, %255
  %258 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %259 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %258, align 8
  %260 = icmp eq %"struct.std::__1::__hash_node_base.330"* %259, null
  br i1 %260, label %277, label %261

261:                                              ; preds = %257, %274
  %262 = phi %"struct.std::__1::__hash_node_base.330"* [ %264, %274 ], [ %259, %257 ]
  %263 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %262, i64 0, i32 0
  %264 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %263, align 8
  %265 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %262, i64 3
  %266 = bitcast %"struct.std::__1::__hash_node_base.330"* %265 to %"class.viz::LocalSurfaceId"**
  %267 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %266, align 8
  %268 = icmp eq %"class.viz::LocalSurfaceId"* %267, null
  br i1 %268, label %274, label %269

269:                                              ; preds = %261
  %270 = ptrtoint %"class.viz::LocalSurfaceId"* %267 to i64
  %271 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %262, i64 4
  %272 = bitcast %"struct.std::__1::__hash_node_base.330"* %271 to i64*
  store i64 %270, i64* %272, align 8
  %273 = bitcast %"class.viz::LocalSurfaceId"* %267 to i8*
  call void @_ZdlPv(i8* %273) #16
  br label %274

274:                                              ; preds = %269, %261
  %275 = bitcast %"struct.std::__1::__hash_node_base.330"* %262 to i8*
  call void @_ZdlPv(i8* %275) #16
  %276 = icmp eq %"struct.std::__1::__hash_node_base.330"* %264, null
  br i1 %276, label %277, label %261

277:                                              ; preds = %274, %257
  %278 = getelementptr inbounds %"class.std::__1::unordered_map.325", %"class.std::__1::unordered_map.325"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %278, align 8
  store %"struct.std::__1::__hash_node_base.330"** null, %"struct.std::__1::__hash_node_base.330"*** %278, align 8
  %280 = icmp eq %"struct.std::__1::__hash_node_base.330"** %279, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast %"struct.std::__1::__hash_node_base.330"** %279 to i8*
  call void @_ZdlPv(i8* %282) #16
  br label %283

283:                                              ; preds = %277, %281
  %284 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %285 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %284, align 8
  %286 = icmp eq %"struct.std::__1::__hash_node_base.306"* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %283, %287
  %288 = phi %"struct.std::__1::__hash_node_base.306"* [ %290, %287 ], [ %285, %283 ]
  %289 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %288, i64 0, i32 0
  %290 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %289, align 8
  %291 = bitcast %"struct.std::__1::__hash_node_base.306"* %288 to i8*
  call void @_ZdlPv(i8* %291) #16
  %292 = icmp eq %"struct.std::__1::__hash_node_base.306"* %290, null
  br i1 %292, label %293, label %287

293:                                              ; preds = %287, %283
  %294 = getelementptr inbounds %"class.std::__1::unordered_map.301", %"class.std::__1::unordered_map.301"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %294, align 8
  store %"struct.std::__1::__hash_node_base.306"** null, %"struct.std::__1::__hash_node_base.306"*** %294, align 8
  %296 = icmp eq %"struct.std::__1::__hash_node_base.306"** %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %293
  %298 = bitcast %"struct.std::__1::__hash_node_base.306"** %295 to i8*
  call void @_ZdlPv(i8* %298) #16
  br label %299

299:                                              ; preds = %293, %297
  %300 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %301 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %300, align 8
  %302 = icmp eq %"struct.std::__1::__hash_node_base"* %301, null
  br i1 %302, label %319, label %303

303:                                              ; preds = %299, %316
  %304 = phi %"struct.std::__1::__hash_node_base"* [ %306, %316 ], [ %301, %299 ]
  %305 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %304, i64 0, i32 0
  %306 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %305, align 8
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %304, i64 6
  %308 = bitcast %"struct.std::__1::__hash_node_base"* %307 to %"class.viz::SurfaceId"**
  %309 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %308, align 8
  %310 = icmp eq %"class.viz::SurfaceId"* %309, null
  br i1 %310, label %316, label %311

311:                                              ; preds = %303
  %312 = ptrtoint %"class.viz::SurfaceId"* %309 to i64
  %313 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %304, i64 7
  %314 = bitcast %"struct.std::__1::__hash_node_base"* %313 to i64*
  store i64 %312, i64* %314, align 8
  %315 = bitcast %"class.viz::SurfaceId"* %309 to i8*
  call void @_ZdlPv(i8* %315) #16
  br label %316

316:                                              ; preds = %311, %303
  %317 = bitcast %"struct.std::__1::__hash_node_base"* %304 to i8*
  call void @_ZdlPv(i8* %317) #16
  %318 = icmp eq %"struct.std::__1::__hash_node_base"* %306, null
  br i1 %318, label %319, label %303

319:                                              ; preds = %316, %299
  %320 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %320, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %320, align 8
  %322 = icmp eq %"struct.std::__1::__hash_node_base"** %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %319
  %324 = bitcast %"struct.std::__1::__hash_node_base"** %321 to i8*
  call void @_ZdlPv(i8* %324) #16
  br label %325

325:                                              ; preds = %319, %323
  %326 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %132, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %326, align 8
  %328 = icmp eq %"class.viz::SurfaceId"* %327, null
  br i1 %328, label %334, label %329

329:                                              ; preds = %325
  %330 = ptrtoint %"class.viz::SurfaceId"* %327 to i64
  %331 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %332 = bitcast %"class.viz::SurfaceId"** %331 to i64*
  store i64 %330, i64* %332, align 8
  %333 = bitcast %"class.viz::SurfaceId"* %327 to i8*
  call void @_ZdlPv(i8* %333) #16
  br label %334

334:                                              ; preds = %325, %329
  %335 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %336 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %335, align 8
  %337 = icmp eq %"class.viz::SurfaceId"* %336, null
  br i1 %337, label %343, label %338

338:                                              ; preds = %334
  %339 = ptrtoint %"class.viz::SurfaceId"* %336 to i64
  %340 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %341 = bitcast %"class.viz::SurfaceId"** %340 to i64*
  store i64 %339, i64* %341, align 8
  %342 = bitcast %"class.viz::SurfaceId"* %336 to i8*
  call void @_ZdlPv(i8* %342) #16
  br label %343

343:                                              ; preds = %334, %338
  %344 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %345 = bitcast %"class.base::internal::LinkNodeBase"** %344 to %"class.base::LinkNode"**
  %346 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0
  %347 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %345, align 8
  %348 = icmp eq %"class.base::LinkNode"* %347, %346
  br i1 %348, label %361, label %349

349:                                              ; preds = %343, %358
  %350 = phi %"class.base::LinkNode"* [ %359, %358 ], [ %347, %343 ]
  %351 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %350, i64 1
  %352 = bitcast %"class.base::LinkNode"* %351 to %"class.base::ObserverList"**
  %353 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %352, align 8
  %354 = icmp eq %"class.base::ObserverList"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %349
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %352, align 8
  %356 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %350, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %356) #15
  %357 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %345, align 8
  br label %358

358:                                              ; preds = %355, %349
  %359 = phi %"class.base::LinkNode"* [ %350, %349 ], [ %357, %355 ]
  %360 = icmp eq %"class.base::LinkNode"* %359, %346
  br i1 %360, label %361, label %349

361:                                              ; preds = %358, %343
  %362 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %363 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %362, align 8
  %364 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %361
  %366 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  %367 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %368 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %367 to i64*
  store i64 %366, i64* %368, align 8
  %369 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %363 to i8*
  call void @_ZdlPv(i8* %369) #16
  br label %370

370:                                              ; preds = %361, %365
  %371 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0
  %372 = getelementptr inbounds %"class.base::internal::flat_tree.260", %"class.base::internal::flat_tree.260"* %371, i64 0, i32 0, i32 0, i32 0
  %373 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %372, align 8
  %374 = icmp eq %"struct.std::__1::pair.263"* %373, null
  br i1 %374, label %395, label %375

375:                                              ; preds = %370
  %376 = bitcast %"struct.std::__1::pair.263"* %373 to i8*
  %377 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %378 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %377, align 8
  %379 = icmp eq %"struct.std::__1::pair.263"* %378, %373
  br i1 %379, label %393, label %380

380:                                              ; preds = %375, %388
  %381 = phi %"struct.std::__1::pair.263"* [ %382, %388 ], [ %378, %375 ]
  %382 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %381, i64 -1
  %383 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %381, i64 -1, i32 1, i32 0, i32 0, i32 0
  %384 = load %"class.viz::Surface"*, %"class.viz::Surface"** %383, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %383, align 8
  %385 = icmp eq %"class.viz::Surface"* %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %380
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %384) #15
  %387 = bitcast %"class.viz::Surface"* %384 to i8*
  call void @_ZdlPv(i8* %387) #16
  br label %388

388:                                              ; preds = %386, %380
  %389 = icmp eq %"struct.std::__1::pair.263"* %382, %373
  br i1 %389, label %390, label %380

390:                                              ; preds = %388
  %391 = bitcast %"class.base::internal::flat_tree.260"* %371 to i8**
  %392 = load i8*, i8** %391, align 8
  br label %393

393:                                              ; preds = %390, %375
  %394 = phi i8* [ %392, %390 ], [ %376, %375 ]
  store %"struct.std::__1::pair.263"* %373, %"struct.std::__1::pair.263"** %377, align 8
  call void @_ZdlPv(i8* %394) #16
  br label %395

395:                                              ; preds = %370, %393
  %396 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0
  %397 = getelementptr inbounds %"class.base::internal::flat_tree.250", %"class.base::internal::flat_tree.250"* %396, i64 0, i32 0, i32 0, i32 0
  %398 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %397, align 8
  %399 = icmp eq %"struct.std::__1::pair.253"* %398, null
  br i1 %399, label %423, label %400

400:                                              ; preds = %395
  %401 = bitcast %"struct.std::__1::pair.253"* %398 to i8*
  %402 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %403 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %402, align 8
  %404 = icmp eq %"struct.std::__1::pair.253"* %403, %398
  br i1 %404, label %421, label %405

405:                                              ; preds = %400, %416
  %406 = phi %"struct.std::__1::pair.253"* [ %407, %416 ], [ %403, %400 ]
  %407 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %406, i64 -1
  %408 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %406, i64 -1, i32 1, i32 0, i32 0
  %409 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %408, align 8
  %410 = icmp eq %"class.viz::SurfaceAllocationGroup"** %409, null
  br i1 %410, label %416, label %411

411:                                              ; preds = %405
  %412 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %409 to i64
  %413 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %406, i64 -1, i32 1, i32 0, i32 1
  %414 = bitcast %"class.viz::SurfaceAllocationGroup"*** %413 to i64*
  store i64 %412, i64* %414, align 8
  %415 = bitcast %"class.viz::SurfaceAllocationGroup"** %409 to i8*
  call void @_ZdlPv(i8* %415) #16
  br label %416

416:                                              ; preds = %411, %405
  %417 = icmp eq %"struct.std::__1::pair.253"* %407, %398
  br i1 %417, label %418, label %405

418:                                              ; preds = %416
  %419 = bitcast %"class.base::internal::flat_tree.250"* %396 to i8**
  %420 = load i8*, i8** %419, align 8
  br label %421

421:                                              ; preds = %418, %400
  %422 = phi i8* [ %420, %418 ], [ %401, %400 ]
  store %"struct.std::__1::pair.253"* %398, %"struct.std::__1::pair.253"** %402, align 8
  call void @_ZdlPv(i8* %422) #16
  br label %423

423:                                              ; preds = %395, %421
  %424 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0
  %425 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %424, i64 0, i32 0, i32 0, i32 0
  %426 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %425, align 8
  %427 = icmp eq %"struct.std::__1::pair"* %426, null
  br i1 %427, label %448, label %428

428:                                              ; preds = %423
  %429 = bitcast %"struct.std::__1::pair"* %426 to i8*
  %430 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %431 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %430, align 8
  %432 = icmp eq %"struct.std::__1::pair"* %431, %426
  br i1 %432, label %446, label %433

433:                                              ; preds = %428, %441
  %434 = phi %"struct.std::__1::pair"* [ %435, %441 ], [ %431, %428 ]
  %435 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %434, i64 -1
  %436 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %434, i64 -1, i32 1, i32 0, i32 0, i32 0
  %437 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %436, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %436, align 8
  %438 = icmp eq %"class.viz::SurfaceAllocationGroup"* %437, null
  br i1 %438, label %441, label %439

439:                                              ; preds = %433
  call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %437) #15
  %440 = bitcast %"class.viz::SurfaceAllocationGroup"* %437 to i8*
  call void @_ZdlPv(i8* %440) #16
  br label %441

441:                                              ; preds = %439, %433
  %442 = icmp eq %"struct.std::__1::pair"* %435, %426
  br i1 %442, label %443, label %433

443:                                              ; preds = %441
  %444 = bitcast %"class.base::internal::flat_tree"* %424 to i8**
  %445 = load i8*, i8** %444, align 8
  br label %446

446:                                              ; preds = %443, %428
  %447 = phi i8* [ %445, %443 ], [ %429, %428 ]
  store %"struct.std::__1::pair"* %426, %"struct.std::__1::pair"** %430, align 8
  call void @_ZdlPv(i8* %447) #16
  br label %448

448:                                              ; preds = %423, %446
  ret void

449:                                              ; preds = %241, %449
  %450 = phi %"class.viz::SurfaceId"* [ %237, %241 ], [ %451, %449 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %242) #15
  call void @_ZN3viz16SurfaceReferenceC1ERKNS_9SurfaceIdES3_(%"class.viz::SurfaceReference"* nonnull %3, %"class.viz::SurfaceId"* dereferenceable(32) %128, %"class.viz::SurfaceId"* dereferenceable(32) %450) #15
  call void @_ZN3viz14SurfaceManager26RemoveSurfaceReferenceImplERKNS_16SurfaceReferenceE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceReference"* nonnull dereferenceable(64) %3)
  call void @_ZN3viz16SurfaceReferenceD1Ev(%"class.viz::SurfaceReference"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %242) #15
  %451 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %450, i64 1
  %452 = icmp eq %"class.viz::SurfaceId"* %451, %239
  br i1 %452, label %243, label %449
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.base::internal::flat_tree.188"* @_ZNK3viz14SurfaceManager29GetSurfacesReferencedByParentERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 6
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.base::internal::flat_tree.188"*
  %9 = select i1 %5, %"class.base::internal::flat_tree.188"* %6, %"class.base::internal::flat_tree.188"* %8
  ret %"class.base::internal::flat_tree.188"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager26RemoveSurfaceReferenceImplERKNS_16SurfaceReferenceE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceReference"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::unique_ptr.510", align 8
  %5 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0
  %10 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %9, %"class.viz::SurfaceId"* dereferenceable(32) %7) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %11, label %404, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 6
  %14 = bitcast %"struct.std::__1::__hash_node_base"* %13 to %"class.base::internal::flat_tree.188"*
  %15 = tail call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"* %14, %"class.viz::SurfaceId"* dereferenceable(32) %8) #15
  %16 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %15, 0
  %17 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %15, 1
  %18 = icmp eq %"class.viz::SurfaceId"* %16, %17
  br i1 %18, label %404, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 7
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"class.viz::SurfaceId"**
  %22 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 7
  %24 = icmp eq %"class.viz::SurfaceId"* %16, %22
  br i1 %24, label %404, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %27 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 40, i1 false)
  %33 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8, !noalias !6
  %34 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %34, align 8, !noalias !6
  %36 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %33, %35
  %37 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %37) #15
  br i1 %36, label %38, label %40

38:                                               ; preds = %25
  %39 = bitcast %"class.base::ObserverList"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #15, !alias.scope !6
  br label %80

40:                                               ; preds = %25
  store %"class.base::ObserverList"* %26, %"class.base::ObserverList"** %28, align 8, !alias.scope !6
  %41 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %37, %"class.base::internal::LinkNodeBase"* %41) #15
  store i64 0, i64* %29, align 8, !alias.scope !6
  %42 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %43 = load i32, i32* %42, align 8, !noalias !6
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !6
  %48 = bitcast %"class.base::ObserverList"* %26 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !6
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  br label %52

52:                                               ; preds = %45, %40
  %53 = phi i64 [ %51, %45 ], [ -1, %40 ]
  store i64 %53, i64* %30, align 8, !alias.scope !6
  %54 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8, !alias.scope !6
  %55 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %54, i64 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::ObserverList"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ult i64 %61, %53
  %63 = select i1 %62, i64 %61, i64 %53
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %52
  %66 = inttoptr i64 %59 to %"class.base::internal::UncheckedObserverAdapter"*
  %67 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %54, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %80

71:                                               ; preds = %65, %75
  %72 = phi i64 [ %73, %75 ], [ 0, %65 ]
  %73 = add nuw i64 %72, 1
  store i64 %73, i64* %29, align 8, !alias.scope !6
  %74 = icmp ult i64 %73, %63
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %67, align 8
  %77 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %76, i64 %73, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %71, label %80

80:                                               ; preds = %71, %75, %38, %52, %65
  %81 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81) #15
  %82 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %84 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %85 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %85) #15
  %87 = bitcast %"class.base::ObserverList"** %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #15, !alias.scope !9
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  br label %89

89:                                               ; preds = %353, %80
  %90 = phi %"class.base::ObserverList"* [ %88, %80 ], [ %351, %353 ]
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %107, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %29, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %30, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %92
  %106 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %82, align 8
  br label %123

107:                                              ; preds = %92, %89
  %108 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %82, align 8
  %109 = icmp eq %"class.base::ObserverList"* %108, null
  br i1 %109, label %223, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %83, align 8
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %108, i64 0, i32 0, i32 0, i32 1
  %113 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.base::ObserverList"* %108 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = ashr exact i64 %117, 3
  %119 = load i64, i64* %84, align 8
  %120 = icmp ult i64 %118, %119
  %121 = select i1 %120, i64 %118, i64 %119
  %122 = icmp eq i64 %111, %121
  br i1 %122, label %132, label %123

123:                                              ; preds = %110, %105
  %124 = phi %"class.base::ObserverList"* [ %106, %105 ], [ %108, %110 ]
  %125 = icmp eq %"class.base::ObserverList"* %90, %124
  %126 = load i64, i64* %29, align 8
  %127 = load i64, i64* %83, align 8
  %128 = icmp eq i64 %126, %127
  %129 = and i1 %125, %128
  br i1 %129, label %130, label %341

130:                                              ; preds = %123
  %131 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %131, label %223, label %132

132:                                              ; preds = %110, %130
  %133 = phi %"class.base::ObserverList"* [ %90, %130 ], [ %108, %110 ]
  %134 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 1
  %135 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 1, i32 0, i32 0, i32 1
  %136 = bitcast %"class.base::internal::LinkNodeBase"** %135 to %"class.base::LinkNode"**
  %137 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %136, align 8
  %138 = bitcast %"class.base::LinkedList"* %134 to %"class.base::LinkNode"**
  %139 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %138, align 8
  %140 = icmp eq %"class.base::LinkNode"* %137, %139
  br i1 %140, label %141, label %219

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %142, align 8
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 0, i32 0, i32 1
  %145 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  %146 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %145
  br i1 %146, label %155, label %147

147:                                              ; preds = %141, %152
  %148 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %152 ], [ %143, %141 ]
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %148, i64 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = icmp eq i8* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %148, i64 1
  %154 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %145
  br i1 %154, label %219, label %147

155:                                              ; preds = %147, %141
  %156 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %141 ], [ %148, %147 ]
  %157 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %156 to i64
  %158 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %156, %145
  br i1 %158, label %219, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %156, i64 1
  %161 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %160, %145
  br i1 %161, label %214, label %162

162:                                              ; preds = %159
  %163 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 -2, i32 0
  %164 = ptrtoint i8** %163 to i64
  %165 = sub i64 %164, %157
  %166 = lshr i64 %165, 3
  %167 = add nuw nsw i64 %166, 1
  %168 = and i64 %167, 3
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %188, label %170

170:                                              ; preds = %162, %183
  %171 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %185, %183 ], [ %160, %162 ]
  %172 = phi i64 [ %184, %183 ], [ %157, %162 ]
  %173 = phi i64 [ %186, %183 ], [ %168, %162 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %171, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %170
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %172 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %172 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %170
  %184 = phi i64 [ %172, %170 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %171, i64 1
  %186 = add i64 %173, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %170, !llvm.loop !12

188:                                              ; preds = %183, %162
  %189 = phi i64 [ undef, %162 ], [ %184, %183 ]
  %190 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %160, %162 ], [ %185, %183 ]
  %191 = phi i64 [ %157, %162 ], [ %184, %183 ]
  %192 = icmp ult i64 %165, 24
  br i1 %192, label %210, label %193

193:                                              ; preds = %188, %465
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %467, %465 ], [ %190, %188 ]
  %195 = phi i64 [ %466, %465 ], [ %191, %188 ]
  %196 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %193
  %200 = ptrtoint i8* %197 to i64
  %201 = inttoptr i64 %195 to %"class.base::internal::UncheckedObserverAdapter"*
  %202 = inttoptr i64 %195 to i64*
  store i64 %200, i64* %202, align 8
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %201, i64 1
  %204 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %203 to i64
  br label %205

205:                                              ; preds = %199, %193
  %206 = phi i64 [ %195, %193 ], [ %204, %199 ]
  %207 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = icmp eq i8* %208, null
  br i1 %209, label %443, label %437

210:                                              ; preds = %465, %188
  %211 = phi i64 [ %189, %188 ], [ %466, %465 ]
  %212 = inttoptr i64 %211 to %"class.base::internal::UncheckedObserverAdapter"*
  %213 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  br label %214

214:                                              ; preds = %210, %159
  %215 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %159 ], [ %213, %210 ]
  %216 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %156, %159 ], [ %212, %210 ]
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %215
  br i1 %217, label %219, label %218

218:                                              ; preds = %214
  store %"class.base::internal::UncheckedObserverAdapter"* %216, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  br label %219

219:                                              ; preds = %152, %218, %214, %155, %132
  %220 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %82, align 8
  %221 = icmp eq %"class.base::ObserverList"* %220, null
  br i1 %221, label %223, label %222

222:                                              ; preds = %219
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %82, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %85) #15
  br label %223

223:                                              ; preds = %107, %130, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %81) #15
  %224 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %225 = icmp eq %"class.base::ObserverList"* %224, null
  br i1 %225, label %316, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 1
  %228 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 1, i32 0, i32 0, i32 1
  %229 = bitcast %"class.base::internal::LinkNodeBase"** %228 to %"class.base::LinkNode"**
  %230 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %229, align 8
  %231 = bitcast %"class.base::LinkedList"* %227 to %"class.base::LinkNode"**
  %232 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %231, align 8
  %233 = icmp eq %"class.base::LinkNode"* %230, %232
  br i1 %233, label %234, label %312

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %235, align 8
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 0, i32 0, i32 1
  %238 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  %239 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %238
  br i1 %239, label %248, label %240

240:                                              ; preds = %234, %245
  %241 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %245 ], [ %236, %234 ]
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 1
  %247 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %238
  br i1 %247, label %312, label %240

248:                                              ; preds = %240, %234
  %249 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %234 ], [ %241, %240 ]
  %250 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %249 to i64
  %251 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %249, %238
  br i1 %251, label %312, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 1
  %254 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %253, %238
  br i1 %254, label %307, label %255

255:                                              ; preds = %252
  %256 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 -2, i32 0
  %257 = ptrtoint i8** %256 to i64
  %258 = sub i64 %257, %250
  %259 = lshr i64 %258, 3
  %260 = add nuw nsw i64 %259, 1
  %261 = and i64 %260, 3
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %281, label %263

263:                                              ; preds = %255, %276
  %264 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %278, %276 ], [ %253, %255 ]
  %265 = phi i64 [ %277, %276 ], [ %250, %255 ]
  %266 = phi i64 [ %279, %276 ], [ %261, %255 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %264, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %263
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %265 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %265 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %263
  %277 = phi i64 [ %265, %263 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %264, i64 1
  %279 = add i64 %266, -1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %263, !llvm.loop !13

281:                                              ; preds = %276, %255
  %282 = phi i64 [ undef, %255 ], [ %277, %276 ]
  %283 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %253, %255 ], [ %278, %276 ]
  %284 = phi i64 [ %250, %255 ], [ %277, %276 ]
  %285 = icmp ult i64 %258, 24
  br i1 %285, label %303, label %286

286:                                              ; preds = %281, %433
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %435, %433 ], [ %283, %281 ]
  %288 = phi i64 [ %434, %433 ], [ %284, %281 ]
  %289 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %298, label %292

292:                                              ; preds = %286
  %293 = ptrtoint i8* %290 to i64
  %294 = inttoptr i64 %288 to %"class.base::internal::UncheckedObserverAdapter"*
  %295 = inttoptr i64 %288 to i64*
  store i64 %293, i64* %295, align 8
  %296 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %294, i64 1
  %297 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %296 to i64
  br label %298

298:                                              ; preds = %292, %286
  %299 = phi i64 [ %288, %286 ], [ %297, %292 ]
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 1, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = icmp eq i8* %301, null
  br i1 %302, label %411, label %405

303:                                              ; preds = %433, %281
  %304 = phi i64 [ %282, %281 ], [ %434, %433 ]
  %305 = inttoptr i64 %304 to %"class.base::internal::UncheckedObserverAdapter"*
  %306 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  br label %307

307:                                              ; preds = %303, %252
  %308 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %252 ], [ %306, %303 ]
  %309 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %249, %252 ], [ %305, %303 ]
  %310 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %309, %308
  br i1 %310, label %312, label %311

311:                                              ; preds = %307
  store %"class.base::internal::UncheckedObserverAdapter"* %309, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  br label %312

312:                                              ; preds = %245, %311, %307, %248, %226
  %313 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %314 = icmp eq %"class.base::ObserverList"* %313, null
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %28, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %37) #15
  br label %316

316:                                              ; preds = %223, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #15
  %317 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %21, align 8
  %318 = icmp eq %"class.viz::SurfaceId"* %317, %16
  br i1 %318, label %321, label %319

319:                                              ; preds = %316
  %320 = ptrtoint %"class.viz::SurfaceId"* %317 to i64
  br label %326

321:                                              ; preds = %316
  %322 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #15
  %323 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #15
  %324 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  %325 = load i64, i64* %324, align 8
  br label %326

326:                                              ; preds = %321, %319
  %327 = phi i64 [ %320, %319 ], [ %325, %321 ]
  %328 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 1
  %329 = ptrtoint %"class.viz::SurfaceId"* %328 to i64
  %330 = sub i64 %327, %329
  %331 = ashr exact i64 %330, 5
  %332 = icmp eq i64 %330, 0
  br i1 %332, label %336, label %333

333:                                              ; preds = %326
  %334 = bitcast %"class.viz::SurfaceId"* %16 to i8*
  %335 = bitcast %"class.viz::SurfaceId"* %328 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 %330, i1 false) #15
  br label %336

336:                                              ; preds = %326, %333
  %337 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 %331
  store %"class.viz::SurfaceId"* %337, %"class.viz::SurfaceId"** %21, align 8
  %338 = bitcast %"struct.std::__1::__hash_node_base"* %13 to %"class.viz::SurfaceId"**
  %339 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %338, align 8
  %340 = icmp eq %"class.viz::SurfaceId"* %339, %337
  br i1 %340, label %383, label %404

341:                                              ; preds = %123
  %342 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 0
  %343 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %342, align 8
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %343, i64 %126
  %345 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %344 to %"class.viz::SurfaceObserver"**
  %346 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %345, align 8
  %347 = bitcast %"class.viz::SurfaceObserver"* %346 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)***
  %348 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)** %348, i64 10
  %350 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)** %349, align 8
  call void %350(%"class.viz::SurfaceObserver"* %346, %"class.viz::SurfaceId"* dereferenceable(32) %7, %"class.viz::SurfaceId"* dereferenceable(32) %8) #15
  %351 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %352 = icmp eq %"class.base::ObserverList"* %351, null
  br i1 %352, label %353, label %354

353:                                              ; preds = %378, %374, %341, %354, %368
  br label %89

354:                                              ; preds = %341
  %355 = load i64, i64* %29, align 8
  %356 = add i64 %355, 1
  store i64 %356, i64* %29, align 8
  %357 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %351, i64 0, i32 0, i32 0, i32 1
  %358 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.base::ObserverList"* %351 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %359, %361
  %363 = ashr exact i64 %362, 3
  %364 = load i64, i64* %30, align 8
  %365 = icmp ult i64 %363, %364
  %366 = select i1 %365, i64 %363, i64 %364
  %367 = icmp ult i64 %356, %366
  br i1 %367, label %368, label %353

368:                                              ; preds = %354
  %369 = inttoptr i64 %361 to %"class.base::internal::UncheckedObserverAdapter"*
  %370 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %351, i64 0, i32 0, i32 0, i32 0
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %369, i64 %356, i32 0
  %372 = load i8*, i8** %371, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %374, label %353

374:                                              ; preds = %368, %378
  %375 = phi i64 [ %376, %378 ], [ %356, %368 ]
  %376 = add nuw i64 %375, 1
  store i64 %376, i64* %29, align 8
  %377 = icmp ult i64 %376, %366
  br i1 %377, label %378, label %353

378:                                              ; preds = %374
  %379 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %370, align 8
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 %376, i32 0
  %381 = load i8*, i8** %380, align 8
  %382 = icmp eq i8* %381, null
  br i1 %382, label %374, label %353

383:                                              ; preds = %336
  %384 = bitcast %"class.std::__1::unique_ptr.510"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %384) #15
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE(%"class.std::__1::unique_ptr.510"* nonnull sret %4, %"class.std::__1::__hash_table"* %9, %"struct.std::__1::__hash_node_base"* nonnull %10) #15
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510"* %4, i64 0, i32 0, i32 0, i32 0
  %386 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %385, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %385, align 8
  %387 = icmp eq %"struct.std::__1::__hash_node"* %386, null
  br i1 %387, label %403, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %390 = load i8, i8* %389, align 8, !range !2
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %401, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %386, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %394 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %393, align 8
  %395 = icmp eq %"class.viz::SurfaceId"* %394, null
  br i1 %395, label %401, label %396

396:                                              ; preds = %392
  %397 = ptrtoint %"class.viz::SurfaceId"* %394 to i64
  %398 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %386, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %399 = bitcast %"class.viz::SurfaceId"** %398 to i64*
  store i64 %397, i64* %399, align 8
  %400 = bitcast %"class.viz::SurfaceId"* %394 to i8*
  call void @_ZdlPv(i8* %400) #16
  br label %401

401:                                              ; preds = %396, %392, %388
  %402 = bitcast %"struct.std::__1::__hash_node"* %386 to i8*
  call void @_ZdlPv(i8* %402) #16
  br label %403

403:                                              ; preds = %383, %401
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %384) #15
  br label %404

404:                                              ; preds = %12, %19, %403, %336, %2
  ret void

405:                                              ; preds = %298
  %406 = ptrtoint i8* %301 to i64
  %407 = inttoptr i64 %299 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %299 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %298
  %412 = phi i64 [ %299, %298 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 2, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %422, label %416

416:                                              ; preds = %411
  %417 = ptrtoint i8* %414 to i64
  %418 = inttoptr i64 %412 to %"class.base::internal::UncheckedObserverAdapter"*
  %419 = inttoptr i64 %412 to i64*
  store i64 %417, i64* %419, align 8
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %418, i64 1
  %421 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %420 to i64
  br label %422

422:                                              ; preds = %416, %411
  %423 = phi i64 [ %412, %411 ], [ %421, %416 ]
  %424 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 3, i32 0
  %425 = load i8*, i8** %424, align 8
  %426 = icmp eq i8* %425, null
  br i1 %426, label %433, label %427

427:                                              ; preds = %422
  %428 = ptrtoint i8* %425 to i64
  %429 = inttoptr i64 %423 to %"class.base::internal::UncheckedObserverAdapter"*
  %430 = inttoptr i64 %423 to i64*
  store i64 %428, i64* %430, align 8
  %431 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %429, i64 1
  %432 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %431 to i64
  br label %433

433:                                              ; preds = %427, %422
  %434 = phi i64 [ %423, %422 ], [ %432, %427 ]
  %435 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 4
  %436 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %435, %238
  br i1 %436, label %303, label %286

437:                                              ; preds = %205
  %438 = ptrtoint i8* %208 to i64
  %439 = inttoptr i64 %206 to %"class.base::internal::UncheckedObserverAdapter"*
  %440 = inttoptr i64 %206 to i64*
  store i64 %438, i64* %440, align 8
  %441 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %439, i64 1
  %442 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %441 to i64
  br label %443

443:                                              ; preds = %437, %205
  %444 = phi i64 [ %206, %205 ], [ %442, %437 ]
  %445 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 2, i32 0
  %446 = load i8*, i8** %445, align 8
  %447 = icmp eq i8* %446, null
  br i1 %447, label %454, label %448

448:                                              ; preds = %443
  %449 = ptrtoint i8* %446 to i64
  %450 = inttoptr i64 %444 to %"class.base::internal::UncheckedObserverAdapter"*
  %451 = inttoptr i64 %444 to i64*
  store i64 %449, i64* %451, align 8
  %452 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %450, i64 1
  %453 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %452 to i64
  br label %454

454:                                              ; preds = %448, %443
  %455 = phi i64 [ %444, %443 ], [ %453, %448 ]
  %456 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 3, i32 0
  %457 = load i8*, i8** %456, align 8
  %458 = icmp eq i8* %457, null
  br i1 %458, label %465, label %459

459:                                              ; preds = %454
  %460 = ptrtoint i8* %457 to i64
  %461 = inttoptr i64 %455 to %"class.base::internal::UncheckedObserverAdapter"*
  %462 = inttoptr i64 %455 to i64*
  store i64 %460, i64* %462, align 8
  %463 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %461, i64 1
  %464 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %463 to i64
  br label %465

465:                                              ; preds = %459, %454
  %466 = phi i64 [ %455, %454 ], [ %464, %459 ]
  %467 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 4
  %468 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %467, %145
  br i1 %468, label %210, label %193
}

declare void @_ZN3viz16SurfaceReferenceC1ERKNS_9SurfaceIdES3_(%"class.viz::SurfaceReference"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz16SurfaceReferenceD1Ev(%"class.viz::SurfaceReference"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager22GarbageCollectSurfacesEv(%"class.viz::SurfaceManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::unordered_set", align 8
  %5 = alloca %"class.std::__1::vector.49", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !14

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %11 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7
  %20 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %20, align 8
  %22 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %23 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %22, align 8
  %24 = icmp eq %"class.viz::SurfaceId"* %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %15
  call void @_ZN3viz14SurfaceManager35MaybeGarbageCollectAllocationGroupsEv(%"class.viz::SurfaceManager"* %0)
  br label %157

26:                                               ; preds = %15
  %27 = bitcast %"class.std::__1::unordered_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unordered_set"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 4, i64 0
  %33 = bitcast i8* %32 to i32*
  store i32 -1431655766, i32* %33, align 4
  call void @_ZN3viz14SurfaceManager15GetLiveSurfacesEv(%"class.std::__1::unordered_set"* nonnull sret %4, %"class.viz::SurfaceManager"* %0)
  %34 = bitcast %"class.std::__1::vector.49"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %5, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %5, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #15
  %38 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %20, align 8
  %39 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %22, align 8
  %40 = icmp eq %"class.viz::SurfaceId"* %38, %39
  br i1 %40, label %115, label %41

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0
  %43 = bitcast %"class.viz::SurfaceId"** %36 to i64*
  %44 = bitcast %"class.logging::CheckError"* %2 to i8*
  %45 = bitcast %"class.viz::SurfaceId"** %22 to i64*
  br label %50

46:                                               ; preds = %101
  %47 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %35, align 8
  %48 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %36, align 8
  %49 = icmp eq %"class.viz::SurfaceId"* %47, %48
  br i1 %49, label %115, label %111

50:                                               ; preds = %41, %101
  %51 = phi %"class.viz::SurfaceId"* [ %38, %41 ], [ %103, %101 ]
  %52 = call %"struct.std::__1::__hash_node_base.379"* @_ZNKSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(%"class.std::__1::__hash_table.375"* nonnull %42, %"class.viz::SurfaceId"* dereferenceable(32) %51) #15
  %53 = icmp eq %"struct.std::__1::__hash_node_base.379"* %52, null
  br i1 %53, label %54, label %98

54:                                               ; preds = %50
  %55 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %36, align 8
  %56 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %37, align 8
  %57 = icmp eq %"class.viz::SurfaceId"* %55, %56
  br i1 %57, label %77, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %55, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %59, align 4
  %62 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %55, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %62, align 4
  %65 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %55, i64 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 8
  store i32 %67, i32* %65, align 8
  %68 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %55, i64 0, i32 1, i32 1
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 1, i32 1
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %68, align 4
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %55, i64 0, i32 1, i32 2
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 1, i32 2
  %73 = bitcast %"class.base::UnguessableToken"* %71 to i8*
  %74 = bitcast %"class.base::UnguessableToken"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #15
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %55, i64 1
  %76 = ptrtoint %"class.viz::SurfaceId"* %75 to i64
  store i64 %76, i64* %43, align 8
  br label %78

77:                                               ; preds = %54
  call void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.49"* nonnull %5, %"class.viz::SurfaceId"* dereferenceable(32) %51) #15
  br label %78

78:                                               ; preds = %58, %77
  %79 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %22, align 8
  %80 = icmp eq %"class.viz::SurfaceId"* %79, %51
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = ptrtoint %"class.viz::SurfaceId"* %79 to i64
  br label %86

83:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #15
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #15
  %85 = load i64, i64* %45, align 8
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  %88 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 1
  %89 = ptrtoint %"class.viz::SurfaceId"* %88 to i64
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 5
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.viz::SurfaceId"* %51 to i8*
  %95 = bitcast %"class.viz::SurfaceId"* %88 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 %90, i1 false) #15
  br label %96

96:                                               ; preds = %86, %93
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 %91
  store %"class.viz::SurfaceId"* %97, %"class.viz::SurfaceId"** %22, align 8
  br label %101

98:                                               ; preds = %50
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 1
  %100 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %22, align 8
  br label %101

101:                                              ; preds = %98, %96
  %102 = phi %"class.viz::SurfaceId"* [ %97, %96 ], [ %100, %98 ]
  %103 = phi %"class.viz::SurfaceId"* [ %51, %96 ], [ %99, %98 ]
  %104 = icmp eq %"class.viz::SurfaceId"* %103, %102
  br i1 %104, label %46, label %50

105:                                              ; preds = %111
  %106 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %35, align 8
  %107 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %36, align 8
  %108 = icmp eq %"class.viz::SurfaceId"* %106, %107
  br i1 %108, label %115, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.viz::SurfaceId"** %22 to i64*
  br label %137

111:                                              ; preds = %46, %111
  %112 = phi %"class.viz::SurfaceId"* [ %113, %111 ], [ %47, %46 ]
  call void @_ZN3viz14SurfaceManager22DestroySurfaceInternalERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %112)
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %112, i64 1
  %114 = icmp eq %"class.viz::SurfaceId"* %113, %48
  br i1 %114, label %105, label %111

115:                                              ; preds = %154, %26, %46, %105
  call void @_ZN3viz14SurfaceManager35MaybeGarbageCollectAllocationGroupsEv(%"class.viz::SurfaceManager"* %0)
  %116 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %35, align 8
  %117 = icmp eq %"class.viz::SurfaceId"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %115
  %119 = ptrtoint %"class.viz::SurfaceId"* %116 to i64
  %120 = bitcast %"class.viz::SurfaceId"** %36 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %"class.viz::SurfaceId"* %116 to i8*
  call void @_ZdlPv(i8* %121) #16
  br label %122

122:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  %123 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %29, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.379"* %123, null
  br i1 %124, label %131, label %125

125:                                              ; preds = %122, %125
  %126 = phi %"struct.std::__1::__hash_node_base.379"* [ %128, %125 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %126, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %127, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.379"* %126 to i8*
  call void @_ZdlPv(i8* %129) #16
  %130 = icmp eq %"struct.std::__1::__hash_node_base.379"* %128, null
  br i1 %130, label %131, label %125

131:                                              ; preds = %125, %122
  %132 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.379"** null, %"struct.std::__1::__hash_node_base.379"*** %28, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.379"** %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast %"struct.std::__1::__hash_node_base.379"** %132 to i8*
  call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #15
  br label %157

137:                                              ; preds = %109, %154
  %138 = phi %"class.viz::SurfaceId"* [ %106, %109 ], [ %155, %154 ]
  %139 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"* %19, %"class.viz::SurfaceId"* dereferenceable(32) %138) #15
  %140 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %139, 0
  %141 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %139, 1
  %142 = icmp eq %"class.viz::SurfaceId"* %140, %141
  br i1 %142, label %154, label %143

143:                                              ; preds = %137
  %144 = ptrtoint %"class.viz::SurfaceId"* %141 to i64
  %145 = load i64, i64* %110, align 8
  %146 = sub i64 %145, %144
  %147 = ashr exact i64 %146, 5
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = bitcast %"class.viz::SurfaceId"* %140 to i8*
  %151 = bitcast %"class.viz::SurfaceId"* %141 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %146, i1 false) #15
  br label %152

152:                                              ; preds = %149, %143
  %153 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %140, i64 %147
  store %"class.viz::SurfaceId"* %153, %"class.viz::SurfaceId"** %22, align 8
  br label %154

154:                                              ; preds = %137, %152
  %155 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %138, i64 1
  %156 = icmp eq %"class.viz::SurfaceId"* %155, %107
  br i1 %156, label %115, label %137

157:                                              ; preds = %136, %25
  %158 = icmp eq i8* %17, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %157
  %160 = load i8, i8* %17, align 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %159
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #15
  br label %163

163:                                              ; preds = %157, %159, %162
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz14SurfaceManager39SetActivationDeadlineInFramesForTestingEN4absl8optionalIjEE(%"class.viz::SurfaceManager"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 1
  %4 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz14SurfaceManager22SetTickClockForTestingEPKN4base9TickClockE(%"class.viz::SurfaceManager"* nocapture, %"class.base::TickClock"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 10
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::Surface"* @_ZN3viz14SurfaceManager13CreateSurfaceEN4base7WeakPtrINS_13SurfaceClientEEERKNS_11SurfaceInfoE(%"class.viz::SurfaceManager"*, %"class.base::WeakPtr"*, %"class.viz::SurfaceInfo"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.base::flat_map.259", %"class.base::flat_map.259"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.viz::SurfaceInfo", %"class.viz::SurfaceInfo"* %2, i64 0, i32 0
  %8 = tail call { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSF_EESO_EERKT_(%"class.base::internal::flat_tree.260"* %6, %"class.viz::SurfaceId"* dereferenceable(32) %7) #15
  %9 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %8, 0
  %10 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %8, 1
  %11 = icmp eq %"struct.std::__1::pair.263"* %9, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %14 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair.263"* %9, %14
  br i1 %15, label %16, label %45

16:                                               ; preds = %3, %12
  %17 = tail call %"class.viz::SurfaceAllocationGroup"* @_ZN3viz14SurfaceManager38GetOrCreateAllocationGroupForSurfaceIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %7)
  %18 = icmp eq %"class.viz::SurfaceAllocationGroup"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %21 = tail call i8* @_Znwm(i64 1264) #16
  %22 = bitcast i8* %21 to %"class.viz::Surface"*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %23, %"class.base::internal::WeakReference"* dereferenceable(8) %24) #15
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %25, align 8
  call void @_ZN3viz7SurfaceC1ERKNS_11SurfaceInfoEPNS_14SurfaceManagerEPNS_22SurfaceAllocationGroupEN4base7WeakPtrINS_13SurfaceClientEEE(%"class.viz::Surface"* nonnull %22, %"class.viz::SurfaceInfo"* dereferenceable(48) %2, %"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceAllocationGroup"* nonnull %17, %"class.base::WeakPtr"* nonnull %4) #15
  %28 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  %29 = ptrtoint i8* %21 to i64
  %30 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 10
  %31 = call i8* @_Znwm(i64 32) #16
  %32 = bitcast i8* %31 to %"class.viz::SurfaceDependencyDeadline"*
  %33 = load %"class.base::TickClock"*, %"class.base::TickClock"** %30, align 8
  call void @_ZN3viz25SurfaceDependencyDeadlineC1EPKN4base9TickClockE(%"class.viz::SurfaceDependencyDeadline"* nonnull %32, %"class.base::TickClock"* %33) #15
  call void @_ZN3viz7Surface21SetDependencyDeadlineENSt3__110unique_ptrINS_25SurfaceDependencyDeadlineENS1_14default_deleteIS3_EEEE(%"class.viz::Surface"* nonnull %22, %"class.viz::SurfaceDependencyDeadline"* nonnull %32) #15
  %34 = call dereferenceable(8) %"class.std::__1::unique_ptr.264"* @_ZN4base8flat_mapIN3viz9SurfaceIdENSt3__110unique_ptrINS1_7SurfaceENS3_14default_deleteIS5_EEEENS3_4lessIvEENS3_6vectorINS3_4pairIS2_S8_EENS3_9allocatorISD_EEEEEixERKS2_(%"class.base::flat_map.259"* %5, %"class.viz::SurfaceId"* dereferenceable(32) %7)
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.viz::Surface"*, %"class.viz::Surface"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.264"* %34 to i64*
  store i64 %29, i64* %37, align 8
  %38 = icmp eq %"class.viz::Surface"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %19
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %36) #15
  %40 = bitcast %"class.viz::Surface"* %36 to i8*
  call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %39, %19
  call void @_ZN3viz14SurfaceManager21AddTemporaryReferenceERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %7)
  %42 = call dereferenceable(8) %"class.std::__1::unique_ptr.264"* @_ZN4base8flat_mapIN3viz9SurfaceIdENSt3__110unique_ptrINS1_7SurfaceENS3_14default_deleteIS5_EEEENS3_4lessIvEENS3_6vectorINS3_4pairIS2_S8_EENS3_9allocatorISD_EEEEEixERKS2_(%"class.base::flat_map.259"* %5, %"class.viz::SurfaceId"* dereferenceable(32) %7)
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.viz::Surface"*, %"class.viz::Surface"** %43, align 8
  br label %45

45:                                               ; preds = %12, %41, %16
  %46 = phi %"class.viz::Surface"* [ null, %12 ], [ %44, %41 ], [ null, %16 ]
  ret %"class.viz::Surface"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::SurfaceAllocationGroup"* @_ZN3viz14SurfaceManager38GetOrCreateAllocationGroupForSurfaceIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %5 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8flat_mapINS_16UnguessableTokenENSt3__110unique_ptrIN3viz22SurfaceAllocationGroupENS2_14default_deleteIS5_EEEENS2_4lessIvEENS2_6vectorINS2_4pairIS1_S8_EENS2_9allocatorISD_EEEEEixERKS1_(%"class.base::flat_map"* %3, %"class.base::UnguessableToken"* dereferenceable(16) %4)
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %6, align 8
  %8 = icmp eq %"class.viz::SurfaceAllocationGroup"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %7, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %105

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %7, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %103, label %105

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0
  %23 = tail call i8* @_Znwm(i64 168) #16
  %24 = bitcast i8* %23 to %"class.viz::SurfaceAllocationGroup"*
  tail call void @_ZN3viz22SurfaceAllocationGroupC1EPNS_14SurfaceManagerERKNS_11FrameSinkIdERKN4base16UnguessableTokenE(%"class.viz::SurfaceAllocationGroup"* nonnull %24, %"class.viz::SurfaceManager"* %0, %"class.viz::FrameSinkId"* dereferenceable(8) %22, %"class.base::UnguessableToken"* dereferenceable(16) %4) #15
  %25 = ptrtoint i8* %23 to i64
  %26 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %6, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq %"class.viz::SurfaceAllocationGroup"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %21
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %26) #15
  %30 = bitcast %"class.viz::SurfaceAllocationGroup"* %26 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %29, %21
  %32 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3
  %33 = tail call dereferenceable(24) %"class.std::__1::vector.190"* @_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorIPNS1_22SurfaceAllocationGroupENS3_9allocatorIS6_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S9_EENS7_ISD_EEEEEixERKS2_(%"class.base::flat_map.249"* %32, %"class.viz::FrameSinkId"* dereferenceable(8) %22)
  %34 = load i64, i64* %27, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %33, i64 0, i32 0, i32 1
  %36 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %37, align 8
  %39 = icmp ult %"class.viz::SurfaceAllocationGroup"** %36, %38
  %40 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %38 to i64
  br i1 %39, label %41, label %46

41:                                               ; preds = %31
  %42 = bitcast %"class.viz::SurfaceAllocationGroup"** %36 to i64*
  store i64 %34, i64* %42, align 8
  %43 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %36, i64 1
  %44 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %43 to i64
  %45 = bitcast %"class.viz::SurfaceAllocationGroup"*** %35 to i64*
  store i64 %44, i64* %45, align 8
  br label %103

46:                                               ; preds = %31
  %47 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %36 to i64
  %48 = bitcast %"class.viz::SurfaceAllocationGroup"*** %35 to i64*
  %49 = bitcast %"class.std::__1::vector.190"* %33 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = ashr exact i64 %51, 3
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = bitcast %"class.std::__1::vector.190"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #17
  unreachable

57:                                               ; preds = %46
  %58 = bitcast %"class.viz::SurfaceAllocationGroup"*** %37 to i64*
  %59 = sub i64 %40, %50
  %60 = ashr exact i64 %59, 3
  %61 = icmp ult i64 %60, 1152921504606846975
  br i1 %61, label %62, label %70

62:                                               ; preds = %57
  %63 = ashr exact i64 %59, 2
  %64 = icmp ult i64 %63, %53
  %65 = select i1 %64, i64 %53, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @abort() #17
  unreachable

70:                                               ; preds = %67, %57
  %71 = phi i64 [ %65, %67 ], [ 2305843009213693951, %57 ]
  %72 = shl i64 %71, 3
  %73 = tail call i8* @_Znwm(i64 %72) #16
  %74 = bitcast i8* %73 to %"class.viz::SurfaceAllocationGroup"**
  br label %75

75:                                               ; preds = %70, %62
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi %"class.viz::SurfaceAllocationGroup"** [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %77, i64 %52
  %79 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %77, i64 %76
  %80 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %79 to i64
  %81 = bitcast %"class.viz::SurfaceAllocationGroup"** %78 to i64*
  store i64 %34, i64* %81, align 8
  %82 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %78, i64 1
  %83 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %33, i64 0, i32 0, i32 0
  %85 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %84, align 8
  %86 = load i64, i64* %48, align 8
  %87 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %85 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %78, i64 %90
  %92 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %91 to i64
  %93 = icmp sgt i64 %88, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %75
  %95 = bitcast %"class.viz::SurfaceAllocationGroup"** %91 to i8*
  %96 = bitcast %"class.viz::SurfaceAllocationGroup"** %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 %88, i1 false) #15
  %97 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %84, align 8
  br label %98

98:                                               ; preds = %94, %75
  %99 = phi %"class.viz::SurfaceAllocationGroup"** [ %85, %75 ], [ %97, %94 ]
  store i64 %92, i64* %49, align 8
  store i64 %83, i64* %48, align 8
  store i64 %80, i64* %58, align 8
  %100 = icmp eq %"class.viz::SurfaceAllocationGroup"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.viz::SurfaceAllocationGroup"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #16
  br label %103

103:                                              ; preds = %15, %101, %98, %41
  %104 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %6, align 8
  br label %105

105:                                              ; preds = %15, %9, %103
  %106 = phi %"class.viz::SurfaceAllocationGroup"* [ %104, %103 ], [ null, %15 ], [ null, %9 ]
  ret %"class.viz::SurfaceAllocationGroup"* %106
}

declare void @_ZN3viz7Surface21SetDependencyDeadlineENSt3__110unique_ptrINS_25SurfaceDependencyDeadlineENS1_14default_deleteIS3_EEEE(%"class.viz::Surface"*, %"class.viz::SurfaceDependencyDeadline"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.264"* @_ZN4base8flat_mapIN3viz9SurfaceIdENSt3__110unique_ptrINS1_7SurfaceENS3_14default_deleteIS5_EEEENS3_4lessIvEENS3_6vectorINS3_4pairIS2_S8_EENS3_9allocatorISD_EEEEEixERKS2_(%"class.base::flat_map.259"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.264", align 8
  %4 = getelementptr inbounds %"class.base::flat_map.259", %"class.base::flat_map.259"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.259", %"class.base::flat_map.259"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.263"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.263"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.263"*
  br i1 %11, label %73, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 40
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"struct.std::__1::pair.263"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %28, i64 %30, i32 0, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %28, i64 %30, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %28, i64 %30, i32 0, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"struct.std::__1::pair.263"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69, %2
  %74 = phi %"struct.std::__1::pair.263"* [ %5, %2 ], [ %71, %69 ]
  %75 = icmp eq %"struct.std::__1::pair.263"* %74, %12
  br i1 %75, label %122, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %77, align 4
  %82 = load i32, i32* %79, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %122, label %84

84:                                               ; preds = %76
  %85 = icmp ult i32 %82, %81
  br i1 %85, label %133, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %78, align 4
  %88 = load i32, i32* %80, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %122, label %90

90:                                               ; preds = %86
  %91 = icmp ult i32 %88, %87
  br i1 %91, label %133, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %74, i64 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %74, i64 0, i32 0, i32 1, i32 1
  %97 = load i32, i32* %93, align 4
  %98 = load i32, i32* %95, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %122, label %100

100:                                              ; preds = %92
  %101 = icmp ult i32 %98, %97
  br i1 %101, label %133, label %102

102:                                              ; preds = %100
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %96, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = icmp ult i32 %104, %103
  br i1 %107, label %133, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %113 = load i64, i64* %109, align 8
  %114 = load i64, i64* %111, align 8
  %115 = icmp ult i64 %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %108
  %117 = icmp ult i64 %114, %113
  br i1 %117, label %133, label %118

118:                                              ; preds = %116
  %119 = load i64, i64* %110, align 8
  %120 = load i64, i64* %112, align 8
  %121 = icmp ult i64 %119, %120
  br i1 %121, label %122, label %133

122:                                              ; preds = %76, %92, %102, %108, %86, %73, %118
  %123 = bitcast %"class.std::__1::unique_ptr.264"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #15
  %124 = bitcast %"class.std::__1::unique_ptr.264"* %3 to i64*
  store i64 0, i64* %124, align 8
  %125 = getelementptr inbounds %"class.base::flat_map.259", %"class.base::flat_map.259"* %0, i64 0, i32 0, i32 0
  %126 = call %"struct.std::__1::pair.263"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS_10unique_ptrINS2_7SurfaceENS_14default_deleteIS5_EEEEEENS_9allocatorIS9_EEE7emplaceIJRKS3_S8_EEENS_11__wrap_iterIPS9_EENSG_IPKS9_EEDpOT_(%"class.std::__1::vector.261"* %125, %"struct.std::__1::pair.263"* %74, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"class.std::__1::unique_ptr.264"* nonnull dereferenceable(8) %3) #15
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %3, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.viz::Surface"*, %"class.viz::Surface"** %127, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %127, align 8
  %129 = icmp eq %"class.viz::Surface"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %122
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %128) #15
  %131 = bitcast %"class.viz::Surface"* %128 to i8*
  call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %122, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #15
  br label %133

133:                                              ; preds = %84, %100, %106, %116, %90, %132, %118
  %134 = phi %"struct.std::__1::pair.263"* [ %126, %132 ], [ %74, %118 ], [ %74, %90 ], [ %74, %116 ], [ %74, %106 ], [ %74, %100 ], [ %74, %84 ]
  %135 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %134, i64 0, i32 1
  ret %"class.std::__1::unique_ptr.264"* %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager21AddTemporaryReferenceERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.530", align 8
  %4 = alloca %"class.std::__1::tuple.509", align 1
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"struct.viz::SurfaceManager::TemporaryReferenceData", align 1
  %7 = alloca %"class.base::Location", align 8
  %8 = getelementptr inbounds %"struct.viz::SurfaceManager::TemporaryReferenceData", %"struct.viz::SurfaceManager::TemporaryReferenceData"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #15
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0
  %10 = call { %"struct.std::__1::__hash_node_base.306"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKS3_S5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.302"* %9, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"struct.viz::SurfaceManager::TemporaryReferenceData"* nonnull dereferenceable(1) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  %11 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0
  %13 = bitcast %"class.std::__1::tuple.530"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.std::__1::tuple.530", %"class.std::__1::tuple.530"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.viz::FrameSinkId"* %11, %"class.viz::FrameSinkId"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple.509", %"class.std::__1::tuple.509"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #15
  %16 = call { %"struct.std::__1::__hash_node_base.330"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.326"* %12, %"class.viz::FrameSinkId"* dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.530"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.509"* nonnull dereferenceable(1) %4) #15
  %17 = extractvalue { %"struct.std::__1::__hash_node_base.330"*, i8 } %16, 0
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %17, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %17, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base.330"* %20 to %"class.viz::LocalSurfaceId"**
  %22 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %17, i64 5
  %24 = bitcast %"struct.std::__1::__hash_node_base.330"* %23 to %"class.viz::LocalSurfaceId"**
  %25 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %24, align 8
  %26 = icmp eq %"class.viz::LocalSurfaceId"* %22, %25
  %27 = ptrtoint %"class.viz::LocalSurfaceId"* %25 to i64
  br i1 %26, label %42, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %22, i64 0, i32 0
  %30 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %19, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %22, i64 0, i32 1
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %32, align 4
  %35 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %22, i64 0, i32 2
  %36 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %37 = bitcast %"class.base::UnguessableToken"* %35 to i8*
  %38 = bitcast %"class.base::UnguessableToken"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #15
  %39 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %22, i64 1
  %40 = ptrtoint %"class.viz::LocalSurfaceId"* %39 to i64
  %41 = bitcast %"struct.std::__1::__hash_node_base.330"* %20 to i64*
  store i64 %40, i64* %41, align 8
  br label %117

42:                                               ; preds = %2
  %43 = ptrtoint %"class.viz::LocalSurfaceId"* %22 to i64
  %44 = bitcast %"struct.std::__1::__hash_node_base.330"* %20 to i64*
  %45 = bitcast %"struct.std::__1::__hash_node_base.330"* %18 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = sdiv exact i64 %47, 24
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 768614336404564650
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"struct.std::__1::__hash_node_base.330"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #17
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"struct.std::__1::__hash_node_base.330"* %23 to i64*
  %55 = sub i64 %27, %46
  %56 = sdiv exact i64 %55, 24
  %57 = icmp ult i64 %56, 384307168202282325
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = shl nsw i64 %56, 1
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %58, %53
  %64 = phi i64 [ %61, %58 ], [ 768614336404564650, %53 ]
  %65 = mul i64 %64, 24
  %66 = call i8* @_Znwm(i64 %65) #16
  %67 = bitcast i8* %66 to %"class.viz::LocalSurfaceId"*
  br label %68

68:                                               ; preds = %63, %58
  %69 = phi i64 [ %64, %63 ], [ 0, %58 ]
  %70 = phi %"class.viz::LocalSurfaceId"* [ %67, %63 ], [ null, %58 ]
  %71 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %70, i64 %48
  %72 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %70, i64 %69
  %73 = ptrtoint %"class.viz::LocalSurfaceId"* %72 to i64
  %74 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %71, i64 0, i32 0
  %75 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %19, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  store i32 %76, i32* %74, align 8
  %77 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %70, i64 %48, i32 1
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %77, align 4
  %80 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %70, i64 %48, i32 2
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %82 = bitcast %"class.base::UnguessableToken"* %80 to i8*
  %83 = bitcast %"class.base::UnguessableToken"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false) #15
  %84 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %71, i64 1
  %85 = ptrtoint %"class.viz::LocalSurfaceId"* %84 to i64
  %86 = bitcast %"struct.std::__1::__hash_node_base.330"* %18 to %"class.viz::LocalSurfaceId"**
  %87 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %86, align 8
  %88 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %21, align 8
  %89 = icmp eq %"class.viz::LocalSurfaceId"* %88, %87
  br i1 %89, label %90, label %92

90:                                               ; preds = %68
  %91 = ptrtoint %"class.viz::LocalSurfaceId"* %87 to i64
  br label %110

92:                                               ; preds = %68, %92
  %93 = phi %"class.viz::LocalSurfaceId"* [ %106, %92 ], [ %71, %68 ]
  %94 = phi %"class.viz::LocalSurfaceId"* [ %95, %92 ], [ %88, %68 ]
  %95 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %94, i64 -1
  %96 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %93, i64 -1, i32 0
  %97 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %95, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %96, align 8
  %99 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %93, i64 -1, i32 1
  %100 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %94, i64 -1, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %93, i64 -1, i32 2
  %103 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %94, i64 -1, i32 2
  %104 = bitcast %"class.base::UnguessableToken"* %102 to i8*
  %105 = bitcast %"class.base::UnguessableToken"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #15
  %106 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %93, i64 -1
  %107 = icmp eq %"class.viz::LocalSurfaceId"* %95, %87
  br i1 %107, label %108, label %92

108:                                              ; preds = %92
  %109 = load i64, i64* %45, align 8
  br label %110

110:                                              ; preds = %108, %90
  %111 = phi %"class.viz::LocalSurfaceId"* [ %71, %90 ], [ %106, %108 ]
  %112 = phi i64 [ %91, %90 ], [ %109, %108 ]
  %113 = ptrtoint %"class.viz::LocalSurfaceId"* %111 to i64
  store i64 %113, i64* %45, align 8
  store i64 %85, i64* %44, align 8
  store i64 %73, i64* %54, align 8
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  %116 = inttoptr i64 %112 to i8*
  call void @_ZdlPv(i8* %116) #16
  br label %117

117:                                              ; preds = %115, %110, %28
  %118 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %145, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %122, i64 0, i32 0
  %124 = call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %123) #15
  br i1 %124, label %145, label %125

125:                                              ; preds = %121
  %126 = load i8, i8* %118, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %129, !prof !15

128:                                              ; preds = %125
  call void @llvm.trap() #15
  unreachable

129:                                              ; preds = %125
  %130 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i64 0, i64 0), i32 337) #15
  %131 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131)
  %132 = ptrtoint %"class.viz::SurfaceManager"* %0 to i64
  %133 = call i8* @_Znwm(i64 56) #16, !noalias !16
  %134 = bitcast i8* %133 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %134, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !16
  %135 = getelementptr inbounds i8, i8* %133, i64 32
  %136 = bitcast i8* %135 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::SurfaceManager"*)* @_ZN3viz14SurfaceManager28ExpireOldTemporaryReferencesEv to i64), i64 0>, <2 x i64>* %136, align 8, !noalias !16
  %137 = getelementptr inbounds i8, i8* %133, i64 48
  %138 = bitcast i8* %137 to i64*
  store i64 %132, i64* %138, align 8, !noalias !16
  %139 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %133, i8** %139, align 8, !alias.scope !16
  %140 = bitcast %"class.base::RepeatingTimer"* %122 to void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)***
  %141 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)**, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %141, i64 7
  %143 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %142, align 8
  call void %143(%"class.base::RepeatingTimer"* %122, %"class.base::Location"* nonnull dereferenceable(32) %7, i64 10000000, %"class.base::RepeatingCallback"* nonnull %5) #15
  %144 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #15
  br label %145

145:                                              ; preds = %117, %129, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager25MarkSurfaceForDestructionERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %6 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !21
  %13 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !21
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !21
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !21
  %20 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8, !alias.scope !21
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !21
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !21
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !21
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !21
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !21
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #15, !alias.scope !24
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %310, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %308, %310 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %298

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !27

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %400
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %402, %400 ], [ %169, %167 ]
  %174 = phi i64 [ %401, %400 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %378, label %372

189:                                              ; preds = %400, %167
  %190 = phi i64 [ %168, %167 ], [ %401, %400 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #15
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !28

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %368
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %370, %368 ], [ %262, %260 ]
  %267 = phi i64 [ %369, %368 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %346, label %340

282:                                              ; preds = %368, %260
  %283 = phi i64 [ %261, %260 ], [ %369, %368 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  %296 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7
  %297 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.188"* %296, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  ret void

298:                                              ; preds = %102
  %299 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %300, i64 %105
  %302 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %301 to %"class.viz::SurfaceObserver"**
  %303 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %302, align 8
  %304 = bitcast %"class.viz::SurfaceObserver"* %303 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)***
  %305 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)** %305, i64 4
  %307 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)** %306, align 8
  call void %307(%"class.viz::SurfaceObserver"* %303, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %308 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %309 = icmp eq %"class.base::ObserverList"* %308, null
  br i1 %309, label %310, label %311

310:                                              ; preds = %335, %331, %298, %311, %325
  br label %68

311:                                              ; preds = %298
  %312 = load i64, i64* %8, align 8
  %313 = add i64 %312, 1
  store i64 %313, i64* %8, align 8
  %314 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %308, i64 0, i32 0, i32 0, i32 1
  %315 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.base::ObserverList"* %308 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %316, %318
  %320 = ashr exact i64 %319, 3
  %321 = load i64, i64* %9, align 8
  %322 = icmp ult i64 %320, %321
  %323 = select i1 %322, i64 %320, i64 %321
  %324 = icmp ult i64 %313, %323
  br i1 %324, label %325, label %310

325:                                              ; preds = %311
  %326 = inttoptr i64 %318 to %"class.base::internal::UncheckedObserverAdapter"*
  %327 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %308, i64 0, i32 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 %313, i32 0
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %331, label %310

331:                                              ; preds = %325, %335
  %332 = phi i64 [ %333, %335 ], [ %313, %325 ]
  %333 = add nuw i64 %332, 1
  store i64 %333, i64* %8, align 8
  %334 = icmp ult i64 %333, %323
  br i1 %334, label %335, label %310

335:                                              ; preds = %331
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %327, align 8
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %333, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %331, label %310

340:                                              ; preds = %277
  %341 = ptrtoint i8* %280 to i64
  %342 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %343 = inttoptr i64 %278 to i64*
  store i64 %341, i64* %343, align 8
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 1
  %345 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %344 to i64
  br label %346

346:                                              ; preds = %340, %277
  %347 = phi i64 [ %278, %277 ], [ %345, %340 ]
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %357, label %351

351:                                              ; preds = %346
  %352 = ptrtoint i8* %349 to i64
  %353 = inttoptr i64 %347 to %"class.base::internal::UncheckedObserverAdapter"*
  %354 = inttoptr i64 %347 to i64*
  store i64 %352, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 1
  %356 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %355 to i64
  br label %357

357:                                              ; preds = %351, %346
  %358 = phi i64 [ %347, %346 ], [ %356, %351 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %358 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %358 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %357
  %369 = phi i64 [ %358, %357 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %371 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %370, %217
  br i1 %371, label %282, label %265

372:                                              ; preds = %184
  %373 = ptrtoint i8* %187 to i64
  %374 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %375 = inttoptr i64 %185 to i64*
  store i64 %373, i64* %375, align 8
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %374, i64 1
  %377 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %376 to i64
  br label %378

378:                                              ; preds = %372, %184
  %379 = phi i64 [ %185, %184 ], [ %377, %372 ]
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %381 = load i8*, i8** %380, align 8
  %382 = icmp eq i8* %381, null
  br i1 %382, label %389, label %383

383:                                              ; preds = %378
  %384 = ptrtoint i8* %381 to i64
  %385 = inttoptr i64 %379 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %379 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %378
  %390 = phi i64 [ %379, %378 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %403 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %402, %124
  br i1 %403, label %189, label %172
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager21InvalidateFrameSinkIdERKNS_11FrameSinkIdE(%"class.viz::SurfaceManager"*, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.253"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.253"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.253"*
  br i1 %10, label %42, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 5
  %14 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  br label %18

18:                                               ; preds = %36, %12
  %19 = phi %"struct.std::__1::pair.253"* [ %4, %12 ], [ %38, %36 ]
  %20 = phi i64 [ %13, %12 ], [ %37, %36 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %22, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %19, i64 %21, i32 0, i32 1
  %25 = load i32, i32* %23, align 4
  %26 = icmp ult i32 %25, %16
  br i1 %26, label %32, label %27

27:                                               ; preds = %18
  %28 = icmp ult i32 %16, %25
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %24, align 4
  %31 = icmp ult i32 %30, %17
  br i1 %31, label %32, label %36

32:                                               ; preds = %29, %18
  %33 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %22, i64 1
  %34 = xor i64 %21, -1
  %35 = add i64 %20, %34
  br label %36

36:                                               ; preds = %32, %29, %27
  %37 = phi i64 [ %35, %32 ], [ %21, %29 ], [ %21, %27 ]
  %38 = phi %"struct.std::__1::pair.253"* [ %33, %32 ], [ %19, %29 ], [ %19, %27 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %18

40:                                               ; preds = %36
  %41 = ptrtoint %"struct.std::__1::pair.253"* %38 to i64
  br label %42

42:                                               ; preds = %40, %2
  %43 = phi i64 [ %41, %40 ], [ %8, %2 ]
  %44 = phi %"struct.std::__1::pair.253"* [ %38, %40 ], [ %4, %2 ]
  %45 = icmp eq %"struct.std::__1::pair.253"* %44, %11
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %48 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %44, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %44, i64 0, i32 0, i32 1
  %51 = load i32, i32* %47, align 4
  %52 = load i32, i32* %49, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %63, label %54

54:                                               ; preds = %46
  %55 = icmp ult i32 %52, %51
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i32, i32* %48, align 4
  %58 = load i32, i32* %50, align 4
  %59 = icmp ult i32 %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %56, %54
  %61 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %44, i64 1
  %62 = ptrtoint %"struct.std::__1::pair.253"* %61 to i64
  br label %63

63:                                               ; preds = %42, %46, %56, %60
  %64 = phi i64 [ %62, %60 ], [ %43, %42 ], [ %43, %56 ], [ %43, %46 ]
  %65 = inttoptr i64 %64 to %"struct.std::__1::pair.253"*
  %66 = icmp eq %"struct.std::__1::pair.253"* %44, %65
  %67 = select i1 %66, %"struct.std::__1::pair.253"* %11, %"struct.std::__1::pair.253"* %44
  %68 = icmp eq %"struct.std::__1::pair.253"* %67, %11
  br i1 %68, label %80, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %67, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %67, i64 0, i32 1, i32 0, i32 1
  %73 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %72, align 8
  %74 = icmp eq %"class.viz::SurfaceAllocationGroup"** %71, %73
  br i1 %74, label %80, label %75

75:                                               ; preds = %69, %75
  %76 = phi %"class.viz::SurfaceAllocationGroup"** [ %78, %75 ], [ %71, %69 ]
  %77 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %76, align 8
  tail call void @_ZN3viz22SurfaceAllocationGroup26WillNotRegisterNewSurfacesEv(%"class.viz::SurfaceAllocationGroup"* %77) #15
  %78 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %76, i64 1
  %79 = icmp eq %"class.viz::SurfaceAllocationGroup"** %78, %73
  br i1 %79, label %80, label %75

80:                                               ; preds = %75, %69, %63
  tail call void @_ZN3viz14SurfaceManager22GarbageCollectSurfacesEv(%"class.viz::SurfaceManager"* %0)
  ret void
}

declare void @_ZN3viz22SurfaceAllocationGroup26WillNotRegisterNewSurfacesEv(%"class.viz::SurfaceAllocationGroup"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.viz::SurfaceId"* @_ZNK3viz14SurfaceManager16GetRootSurfaceIdEv(%"class.viz::SurfaceManager"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 8
  ret %"class.viz::SurfaceId"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz14SurfaceManager20GetCreatedSurfaceIdsEv(%"class.std::__1::vector.49"* noalias sret, %"class.viz::SurfaceManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.49"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.263"* %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  br label %14

13:                                               ; preds = %40, %2
  ret void

14:                                               ; preds = %43, %11
  %15 = phi %"class.viz::SurfaceId"* [ null, %11 ], [ %45, %43 ]
  %16 = phi %"class.viz::SurfaceId"* [ null, %11 ], [ %44, %43 ]
  %17 = phi %"struct.std::__1::pair.263"* [ %7, %11 ], [ %41, %43 ]
  %18 = icmp eq %"class.viz::SurfaceId"* %16, %15
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 1, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 1, i32 2
  %33 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 0, i32 1, i32 2
  %34 = bitcast %"class.base::UnguessableToken"* %32 to i8*
  %35 = bitcast %"class.base::UnguessableToken"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false) #15
  %36 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 1
  %37 = ptrtoint %"class.viz::SurfaceId"* %36 to i64
  store i64 %37, i64* %12, align 8
  br label %40

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.49"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %39) #15
  br label %40

40:                                               ; preds = %19, %38
  %41 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 1
  %42 = icmp eq %"struct.std::__1::pair.263"* %41, %9
  br i1 %42, label %13, label %43

43:                                               ; preds = %40
  %44 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %45 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %4, align 8
  br label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager20AddSurfaceReferencesERKNSt3__16vectorINS_16SurfaceReferenceENS1_9allocatorIS3_EEEE(%"class.viz::SurfaceManager"*, %"class.std::__1::vector.367"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.367", %"class.std::__1::vector.367"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.viz::SurfaceReference"*, %"class.viz::SurfaceReference"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.367", %"class.std::__1::vector.367"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.viz::SurfaceReference"*, %"class.viz::SurfaceReference"** %5, align 8
  %7 = icmp eq %"class.viz::SurfaceReference"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.viz::SurfaceReference"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN3viz14SurfaceManager23AddSurfaceReferenceImplERKNS_16SurfaceReferenceE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceReference"* dereferenceable(64) %10)
  %11 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %10, i64 1
  %12 = icmp eq %"class.viz::SurfaceReference"* %11, %6
  br i1 %12, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager23AddSurfaceReferenceImplERKNS_16SurfaceReferenceE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceReference"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.506", align 8
  %4 = alloca %"class.std::__1::tuple.509", align 1
  %5 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %8, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %373, label %20

20:                                               ; preds = %2, %14
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0
  %22 = tail call { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSF_EESO_EERKT_(%"class.base::internal::flat_tree.260"* %21, %"class.viz::SurfaceId"* dereferenceable(32) %8) #15
  %23 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %22, 0
  %24 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %22, 1
  %25 = icmp eq %"struct.std::__1::pair.263"* %24, %23
  br i1 %25, label %373, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0
  %28 = bitcast %"class.std::__1::tuple.506"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.std::__1::tuple.506", %"class.std::__1::tuple.506"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.viz::SurfaceId"* %7, %"class.viz::SurfaceId"** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::tuple.509", %"class.std::__1::tuple.509"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #15
  %31 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %27, %"class.viz::SurfaceId"* dereferenceable(32) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.506"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.509"* nonnull dereferenceable(1) %4) #15
  %32 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %31, 0
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 6
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to %"class.base::internal::flat_tree.188"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  %35 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.188"* %34, %"class.viz::SurfaceId"* dereferenceable(32) %8, %"class.viz::SurfaceId"* dereferenceable(32) %8) #15
  %36 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %37 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #15
  %38 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %41 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 40, i1 false)
  %43 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %41, align 8, !noalias !29
  %44 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %45 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %44, align 8, !noalias !29
  %46 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %43, %45
  %47 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %47) #15
  br i1 %46, label %48, label %50

48:                                               ; preds = %26
  %49 = bitcast %"class.base::ObserverList"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #15, !alias.scope !29
  br label %90

50:                                               ; preds = %26
  store %"class.base::ObserverList"* %36, %"class.base::ObserverList"** %38, align 8, !alias.scope !29
  %51 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %47, %"class.base::internal::LinkNodeBase"* %51) #15
  store i64 0, i64* %39, align 8, !alias.scope !29
  %52 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %53 = load i32, i32* %52, align 8, !noalias !29
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %44 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !29
  %58 = bitcast %"class.base::ObserverList"* %36 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !29
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  br label %62

62:                                               ; preds = %55, %50
  %63 = phi i64 [ %61, %55 ], [ -1, %50 ]
  store i64 %63, i64* %40, align 8, !alias.scope !29
  %64 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8, !alias.scope !29
  %65 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::ObserverList"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, %63
  %73 = select i1 %72, i64 %71, i64 %63
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %62
  %76 = inttoptr i64 %69 to %"class.base::internal::UncheckedObserverAdapter"*
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %76, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %81, label %90

81:                                               ; preds = %75, %85
  %82 = phi i64 [ %83, %85 ], [ 0, %75 ]
  %83 = add nuw i64 %82, 1
  store i64 %83, i64* %39, align 8, !alias.scope !29
  %84 = icmp ult i64 %83, %73
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %77, align 8
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %86, i64 %83, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %81, label %90

90:                                               ; preds = %81, %85, %48, %62, %75
  %91 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %91) #15
  %92 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %94 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %95 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %95) #15
  %97 = bitcast %"class.base::ObserverList"** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #15, !alias.scope !32
  %98 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  br label %99

99:                                               ; preds = %342, %90
  %100 = phi %"class.base::ObserverList"* [ %98, %90 ], [ %340, %342 ]
  %101 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %39, align 8
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ObserverList"* %100 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 3
  %111 = load i64, i64* %40, align 8
  %112 = icmp ult i64 %110, %111
  %113 = select i1 %112, i64 %110, i64 %111
  %114 = icmp eq i64 %103, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %102
  %116 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %92, align 8
  br label %133

117:                                              ; preds = %102, %99
  %118 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %92, align 8
  %119 = icmp eq %"class.base::ObserverList"* %118, null
  br i1 %119, label %233, label %120

120:                                              ; preds = %117
  %121 = load i64, i64* %93, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %118, i64 0, i32 0, i32 0, i32 1
  %123 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.base::ObserverList"* %118 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 3
  %129 = load i64, i64* %94, align 8
  %130 = icmp ult i64 %128, %129
  %131 = select i1 %130, i64 %128, i64 %129
  %132 = icmp eq i64 %121, %131
  br i1 %132, label %142, label %133

133:                                              ; preds = %120, %115
  %134 = phi %"class.base::ObserverList"* [ %116, %115 ], [ %118, %120 ]
  %135 = icmp eq %"class.base::ObserverList"* %100, %134
  %136 = load i64, i64* %39, align 8
  %137 = load i64, i64* %93, align 8
  %138 = icmp eq i64 %136, %137
  %139 = and i1 %135, %138
  br i1 %139, label %140, label %330

140:                                              ; preds = %133
  %141 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %141, label %233, label %142

142:                                              ; preds = %120, %140
  %143 = phi %"class.base::ObserverList"* [ %100, %140 ], [ %118, %120 ]
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 1
  %145 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 1, i32 0, i32 0, i32 1
  %146 = bitcast %"class.base::internal::LinkNodeBase"** %145 to %"class.base::LinkNode"**
  %147 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %146, align 8
  %148 = bitcast %"class.base::LinkedList"* %144 to %"class.base::LinkNode"**
  %149 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %148, align 8
  %150 = icmp eq %"class.base::LinkNode"* %147, %149
  br i1 %150, label %151, label %229

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %152, align 8
  %154 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 1
  %155 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %151, %162
  %158 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %162 ], [ %153, %151 ]
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %164 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %163, %155
  br i1 %164, label %229, label %157

165:                                              ; preds = %157, %151
  %166 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %151 ], [ %158, %157 ]
  %167 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %166 to i64
  %168 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %166, %155
  br i1 %168, label %229, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %166, i64 1
  %171 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %155
  br i1 %171, label %224, label %172

172:                                              ; preds = %169
  %173 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %155, i64 -2, i32 0
  %174 = ptrtoint i8** %173 to i64
  %175 = sub i64 %174, %167
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %198, label %180

180:                                              ; preds = %172, %193
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %195, %193 ], [ %170, %172 ]
  %182 = phi i64 [ %194, %193 ], [ %167, %172 ]
  %183 = phi i64 [ %196, %193 ], [ %178, %172 ]
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %180
  %188 = ptrtoint i8* %185 to i64
  %189 = inttoptr i64 %182 to %"class.base::internal::UncheckedObserverAdapter"*
  %190 = inttoptr i64 %182 to i64*
  store i64 %188, i64* %190, align 8
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 1
  %192 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %191 to i64
  br label %193

193:                                              ; preds = %187, %180
  %194 = phi i64 [ %182, %180 ], [ %192, %187 ]
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %196 = add i64 %183, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %180, !llvm.loop !35

198:                                              ; preds = %193, %172
  %199 = phi i64 [ undef, %172 ], [ %194, %193 ]
  %200 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %172 ], [ %195, %193 ]
  %201 = phi i64 [ %167, %172 ], [ %194, %193 ]
  %202 = icmp ult i64 %175, 24
  br i1 %202, label %220, label %203

203:                                              ; preds = %198, %434
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %436, %434 ], [ %200, %198 ]
  %205 = phi i64 [ %435, %434 ], [ %201, %198 ]
  %206 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %215, label %209

209:                                              ; preds = %203
  %210 = ptrtoint i8* %207 to i64
  %211 = inttoptr i64 %205 to %"class.base::internal::UncheckedObserverAdapter"*
  %212 = inttoptr i64 %205 to i64*
  store i64 %210, i64* %212, align 8
  %213 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 1
  %214 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %213 to i64
  br label %215

215:                                              ; preds = %209, %203
  %216 = phi i64 [ %205, %203 ], [ %214, %209 ]
  %217 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 1, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = icmp eq i8* %218, null
  br i1 %219, label %412, label %406

220:                                              ; preds = %434, %198
  %221 = phi i64 [ %199, %198 ], [ %435, %434 ]
  %222 = inttoptr i64 %221 to %"class.base::internal::UncheckedObserverAdapter"*
  %223 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %224

224:                                              ; preds = %220, %169
  %225 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %169 ], [ %223, %220 ]
  %226 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %169 ], [ %222, %220 ]
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %225
  br i1 %227, label %229, label %228

228:                                              ; preds = %224
  store %"class.base::internal::UncheckedObserverAdapter"* %226, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %229

229:                                              ; preds = %162, %228, %224, %165, %142
  %230 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %92, align 8
  %231 = icmp eq %"class.base::ObserverList"* %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %92, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %95) #15
  br label %233

233:                                              ; preds = %117, %140, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %91) #15
  %234 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %235 = icmp eq %"class.base::ObserverList"* %234, null
  br i1 %235, label %326, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 1
  %238 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 1, i32 0, i32 0, i32 1
  %239 = bitcast %"class.base::internal::LinkNodeBase"** %238 to %"class.base::LinkNode"**
  %240 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %239, align 8
  %241 = bitcast %"class.base::LinkedList"* %237 to %"class.base::LinkNode"**
  %242 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %241, align 8
  %243 = icmp eq %"class.base::LinkNode"* %240, %242
  br i1 %243, label %244, label %322

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %245, align 8
  %247 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 0, i32 0, i32 1
  %248 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %248
  br i1 %249, label %258, label %250

250:                                              ; preds = %244, %255
  %251 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %255 ], [ %246, %244 ]
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %257 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %256, %248
  br i1 %257, label %322, label %250

258:                                              ; preds = %250, %244
  %259 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %244 ], [ %251, %250 ]
  %260 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %259 to i64
  %261 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %259, %248
  br i1 %261, label %322, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %259, i64 1
  %264 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %248
  br i1 %264, label %317, label %265

265:                                              ; preds = %262
  %266 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 -2, i32 0
  %267 = ptrtoint i8** %266 to i64
  %268 = sub i64 %267, %260
  %269 = lshr i64 %268, 3
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 3
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %291, label %273

273:                                              ; preds = %265, %286
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %288, %286 ], [ %263, %265 ]
  %275 = phi i64 [ %287, %286 ], [ %260, %265 ]
  %276 = phi i64 [ %289, %286 ], [ %271, %265 ]
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = icmp eq i8* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %273
  %281 = ptrtoint i8* %278 to i64
  %282 = inttoptr i64 %275 to %"class.base::internal::UncheckedObserverAdapter"*
  %283 = inttoptr i64 %275 to i64*
  store i64 %281, i64* %283, align 8
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 1
  %285 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %284 to i64
  br label %286

286:                                              ; preds = %280, %273
  %287 = phi i64 [ %275, %273 ], [ %285, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %289 = add i64 %276, -1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %273, !llvm.loop !36

291:                                              ; preds = %286, %265
  %292 = phi i64 [ undef, %265 ], [ %287, %286 ]
  %293 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %265 ], [ %288, %286 ]
  %294 = phi i64 [ %260, %265 ], [ %287, %286 ]
  %295 = icmp ult i64 %268, 24
  br i1 %295, label %313, label %296

296:                                              ; preds = %291, %402
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %293, %291 ]
  %298 = phi i64 [ %403, %402 ], [ %294, %291 ]
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %308, label %302

302:                                              ; preds = %296
  %303 = ptrtoint i8* %300 to i64
  %304 = inttoptr i64 %298 to %"class.base::internal::UncheckedObserverAdapter"*
  %305 = inttoptr i64 %298 to i64*
  store i64 %303, i64* %305, align 8
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 1
  %307 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %306 to i64
  br label %308

308:                                              ; preds = %302, %296
  %309 = phi i64 [ %298, %296 ], [ %307, %302 ]
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 1, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = icmp eq i8* %311, null
  br i1 %312, label %380, label %374

313:                                              ; preds = %402, %291
  %314 = phi i64 [ %292, %291 ], [ %403, %402 ]
  %315 = inttoptr i64 %314 to %"class.base::internal::UncheckedObserverAdapter"*
  %316 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %317

317:                                              ; preds = %313, %262
  %318 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %262 ], [ %316, %313 ]
  %319 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %262 ], [ %315, %313 ]
  %320 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %319, %318
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  store %"class.base::internal::UncheckedObserverAdapter"* %319, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %322

322:                                              ; preds = %255, %321, %317, %258, %236
  %323 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %324 = icmp eq %"class.base::ObserverList"* %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %38, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %47) #15
  br label %326

326:                                              ; preds = %233, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #15
  %327 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0
  %328 = call %"struct.std::__1::__hash_node_base.306"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.302"* %327, %"class.viz::SurfaceId"* dereferenceable(32) %8) #15
  %329 = icmp eq %"struct.std::__1::__hash_node_base.306"* %328, null
  br i1 %329, label %373, label %372

330:                                              ; preds = %133
  %331 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 0
  %332 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %331, align 8
  %333 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 %136
  %334 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %333 to %"class.viz::SurfaceObserver"**
  %335 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %334, align 8
  %336 = bitcast %"class.viz::SurfaceObserver"* %335 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)***
  %337 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)** %337, i64 9
  %339 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)** %338, align 8
  call void %339(%"class.viz::SurfaceObserver"* %335, %"class.viz::SurfaceId"* dereferenceable(32) %7, %"class.viz::SurfaceId"* dereferenceable(32) %8) #15
  %340 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %341 = icmp eq %"class.base::ObserverList"* %340, null
  br i1 %341, label %342, label %343

342:                                              ; preds = %367, %363, %330, %343, %357
  br label %99

343:                                              ; preds = %330
  %344 = load i64, i64* %39, align 8
  %345 = add i64 %344, 1
  store i64 %345, i64* %39, align 8
  %346 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %340, i64 0, i32 0, i32 0, i32 1
  %347 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.base::ObserverList"* %340 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = sub i64 %348, %350
  %352 = ashr exact i64 %351, 3
  %353 = load i64, i64* %40, align 8
  %354 = icmp ult i64 %352, %353
  %355 = select i1 %354, i64 %352, i64 %353
  %356 = icmp ult i64 %345, %355
  br i1 %356, label %357, label %342

357:                                              ; preds = %343
  %358 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %359 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %340, i64 0, i32 0, i32 0, i32 0
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %358, i64 %345, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %363, label %342

363:                                              ; preds = %357, %367
  %364 = phi i64 [ %365, %367 ], [ %345, %357 ]
  %365 = add nuw i64 %364, 1
  store i64 %365, i64* %39, align 8
  %366 = icmp ult i64 %365, %355
  br i1 %366, label %367, label %342

367:                                              ; preds = %363
  %368 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %359, align 8
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 %365, i32 0
  %370 = load i8*, i8** %369, align 8
  %371 = icmp eq i8* %370, null
  br i1 %371, label %363, label %342

372:                                              ; preds = %326
  call void @_ZN3viz14SurfaceManager28RemoveTemporaryReferenceImplERKNS_9SurfaceIdENS0_13RemovedReasonE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %8, i32 undef)
  br label %373

373:                                              ; preds = %326, %372, %20, %14
  ret void

374:                                              ; preds = %308
  %375 = ptrtoint i8* %311 to i64
  %376 = inttoptr i64 %309 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %309 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %308
  %381 = phi i64 [ %309, %308 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %248
  br i1 %405, label %313, label %296

406:                                              ; preds = %215
  %407 = ptrtoint i8* %218 to i64
  %408 = inttoptr i64 %216 to %"class.base::internal::UncheckedObserverAdapter"*
  %409 = inttoptr i64 %216 to i64*
  store i64 %407, i64* %409, align 8
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %408, i64 1
  %411 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %410 to i64
  br label %412

412:                                              ; preds = %406, %215
  %413 = phi i64 [ %216, %215 ], [ %411, %406 ]
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 2, i32 0
  %415 = load i8*, i8** %414, align 8
  %416 = icmp eq i8* %415, null
  br i1 %416, label %423, label %417

417:                                              ; preds = %412
  %418 = ptrtoint i8* %415 to i64
  %419 = inttoptr i64 %413 to %"class.base::internal::UncheckedObserverAdapter"*
  %420 = inttoptr i64 %413 to i64*
  store i64 %418, i64* %420, align 8
  %421 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %419, i64 1
  %422 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %421 to i64
  br label %423

423:                                              ; preds = %417, %412
  %424 = phi i64 [ %413, %412 ], [ %422, %417 ]
  %425 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 3, i32 0
  %426 = load i8*, i8** %425, align 8
  %427 = icmp eq i8* %426, null
  br i1 %427, label %434, label %428

428:                                              ; preds = %423
  %429 = ptrtoint i8* %426 to i64
  %430 = inttoptr i64 %424 to %"class.base::internal::UncheckedObserverAdapter"*
  %431 = inttoptr i64 %424 to i64*
  store i64 %429, i64* %431, align 8
  %432 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %430, i64 1
  %433 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %432 to i64
  br label %434

434:                                              ; preds = %428, %423
  %435 = phi i64 [ %424, %423 ], [ %433, %428 ]
  %436 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 4
  %437 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %436, %155
  br i1 %437, label %220, label %203
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager23RemoveSurfaceReferencesERKNSt3__16vectorINS_16SurfaceReferenceENS1_9allocatorIS3_EEEE(%"class.viz::SurfaceManager"*, %"class.std::__1::vector.367"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.367", %"class.std::__1::vector.367"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.viz::SurfaceReference"*, %"class.viz::SurfaceReference"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.367", %"class.std::__1::vector.367"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.viz::SurfaceReference"*, %"class.viz::SurfaceReference"** %5, align 8
  %7 = icmp eq %"class.viz::SurfaceReference"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.viz::SurfaceReference"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN3viz14SurfaceManager26RemoveSurfaceReferenceImplERKNS_16SurfaceReferenceE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceReference"* dereferenceable(64) %10)
  %11 = getelementptr inbounds %"class.viz::SurfaceReference", %"class.viz::SurfaceReference"* %10, i64 1
  %12 = icmp eq %"class.viz::SurfaceReference"* %11, %6
  br i1 %12, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager35MaybeGarbageCollectAllocationGroupsEv(%"class.viz::SurfaceManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %247, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair"* %7, %9
  br i1 %10, label %246, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.250", %"class.base::internal::flat_tree.250"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.253"** %14 to i64*
  br label %19

16:                                               ; preds = %175
  %17 = and i8 %176, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %246, label %180

19:                                               ; preds = %11, %175
  %20 = phi i8 [ 0, %11 ], [ %176, %175 ]
  %21 = phi %"struct.std::__1::pair"* [ %7, %11 ], [ %177, %175 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK3viz22SurfaceAllocationGroup16IsReadyToDestroyEv(%"class.viz::SurfaceAllocationGroup"* %23) #15
  br i1 %24, label %25, label %175

25:                                               ; preds = %19
  %26 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %22, align 8
  %27 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %13, align 8
  %28 = load i64, i64* %15, align 8
  %29 = ptrtoint %"struct.std::__1::pair.253"* %27 to i64
  %30 = sub i64 %28, %29
  %31 = icmp eq i64 %30, 0
  %32 = inttoptr i64 %28 to %"struct.std::__1::pair.253"*
  br i1 %31, label %63, label %33

33:                                               ; preds = %25
  %34 = ashr exact i64 %30, 5
  %35 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %26, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %26, i64 0, i32 0, i32 1
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %36, align 4
  br label %39

39:                                               ; preds = %57, %33
  %40 = phi %"struct.std::__1::pair.253"* [ %27, %33 ], [ %59, %57 ]
  %41 = phi i64 [ %34, %33 ], [ %58, %57 ]
  %42 = lshr i64 %41, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %40, i64 %42
  %44 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %43, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %40, i64 %42, i32 0, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %37
  br i1 %47, label %53, label %48

48:                                               ; preds = %39
  %49 = icmp ult i32 %37, %46
  br i1 %49, label %57, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %38
  br i1 %52, label %53, label %57

53:                                               ; preds = %50, %39
  %54 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %43, i64 1
  %55 = xor i64 %42, -1
  %56 = add i64 %41, %55
  br label %57

57:                                               ; preds = %53, %50, %48
  %58 = phi i64 [ %56, %53 ], [ %42, %50 ], [ %42, %48 ]
  %59 = phi %"struct.std::__1::pair.253"* [ %54, %53 ], [ %40, %50 ], [ %40, %48 ]
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %39

61:                                               ; preds = %57
  %62 = ptrtoint %"struct.std::__1::pair.253"* %59 to i64
  br label %63

63:                                               ; preds = %61, %25
  %64 = phi i64 [ %62, %61 ], [ %29, %25 ]
  %65 = phi %"struct.std::__1::pair.253"* [ %59, %61 ], [ %27, %25 ]
  %66 = icmp eq %"struct.std::__1::pair.253"* %65, %32
  br i1 %66, label %84, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %26, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %26, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %65, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %65, i64 0, i32 0, i32 1
  %72 = load i32, i32* %68, align 4
  %73 = load i32, i32* %70, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %84, label %75

75:                                               ; preds = %67
  %76 = icmp ult i32 %73, %72
  br i1 %76, label %81, label %77

77:                                               ; preds = %75
  %78 = load i32, i32* %69, align 4
  %79 = load i32, i32* %71, align 4
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %84, label %81

81:                                               ; preds = %77, %75
  %82 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %65, i64 1
  %83 = ptrtoint %"struct.std::__1::pair.253"* %82 to i64
  br label %84

84:                                               ; preds = %63, %67, %77, %81
  %85 = phi i64 [ %83, %81 ], [ %64, %63 ], [ %64, %77 ], [ %64, %67 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::pair.253"*
  %87 = icmp eq %"struct.std::__1::pair.253"* %65, %86
  %88 = select i1 %87, %"struct.std::__1::pair.253"* %32, %"struct.std::__1::pair.253"* %65
  %89 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %88, i64 0, i32 1, i32 0, i32 1
  %92 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %91, align 8
  %93 = icmp eq %"class.viz::SurfaceAllocationGroup"** %90, %92
  %94 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %92 to i64
  br i1 %93, label %102, label %95

95:                                               ; preds = %84, %99
  %96 = phi %"class.viz::SurfaceAllocationGroup"** [ %100, %99 ], [ %90, %84 ]
  %97 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %96, align 8
  %98 = icmp eq %"class.viz::SurfaceAllocationGroup"* %97, %26
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %96, i64 1
  %101 = icmp eq %"class.viz::SurfaceAllocationGroup"** %100, %92
  br i1 %101, label %158, label %95

102:                                              ; preds = %95, %84
  %103 = phi %"class.viz::SurfaceAllocationGroup"** [ %90, %84 ], [ %96, %95 ]
  %104 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %103 to i64
  %105 = icmp eq %"class.viz::SurfaceAllocationGroup"** %103, %92
  br i1 %105, label %158, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %103, i64 1
  %108 = icmp eq %"class.viz::SurfaceAllocationGroup"** %107, %92
  br i1 %108, label %158, label %109

109:                                              ; preds = %106
  %110 = getelementptr %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %92, i64 -2
  %111 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %110 to i64
  %112 = sub i64 %111, %104
  %113 = lshr i64 %112, 3
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %134, label %117

117:                                              ; preds = %109, %129
  %118 = phi %"class.viz::SurfaceAllocationGroup"** [ %131, %129 ], [ %107, %109 ]
  %119 = phi i64 [ %130, %129 ], [ %104, %109 ]
  %120 = phi i64 [ %132, %129 ], [ %115, %109 ]
  %121 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %118, align 8
  %122 = icmp eq %"class.viz::SurfaceAllocationGroup"* %121, %26
  br i1 %122, label %129, label %123

123:                                              ; preds = %117
  %124 = ptrtoint %"class.viz::SurfaceAllocationGroup"* %121 to i64
  %125 = inttoptr i64 %119 to %"class.viz::SurfaceAllocationGroup"**
  %126 = inttoptr i64 %119 to i64*
  store i64 %124, i64* %126, align 8
  %127 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %125, i64 1
  %128 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %127 to i64
  br label %129

129:                                              ; preds = %123, %117
  %130 = phi i64 [ %119, %117 ], [ %128, %123 ]
  %131 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %118, i64 1
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %117, !llvm.loop !37

134:                                              ; preds = %129, %109
  %135 = phi i64 [ undef, %109 ], [ %130, %129 ]
  %136 = phi %"class.viz::SurfaceAllocationGroup"** [ %107, %109 ], [ %131, %129 ]
  %137 = phi i64 [ %104, %109 ], [ %130, %129 ]
  %138 = icmp ult i64 %112, 24
  br i1 %138, label %155, label %139

139:                                              ; preds = %134, %276
  %140 = phi %"class.viz::SurfaceAllocationGroup"** [ %278, %276 ], [ %136, %134 ]
  %141 = phi i64 [ %277, %276 ], [ %137, %134 ]
  %142 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %140, align 8
  %143 = icmp eq %"class.viz::SurfaceAllocationGroup"* %142, %26
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = ptrtoint %"class.viz::SurfaceAllocationGroup"* %142 to i64
  %146 = inttoptr i64 %141 to %"class.viz::SurfaceAllocationGroup"**
  %147 = inttoptr i64 %141 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %146, i64 1
  %149 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %148 to i64
  br label %150

150:                                              ; preds = %144, %139
  %151 = phi i64 [ %141, %139 ], [ %149, %144 ]
  %152 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %140, i64 1
  %153 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %152, align 8
  %154 = icmp eq %"class.viz::SurfaceAllocationGroup"* %153, %26
  br i1 %154, label %254, label %248

155:                                              ; preds = %276, %134
  %156 = phi i64 [ %135, %134 ], [ %277, %276 ]
  %157 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %91, align 8
  br label %158

158:                                              ; preds = %99, %155, %106, %102
  %159 = phi %"class.viz::SurfaceAllocationGroup"** [ %157, %155 ], [ %92, %102 ], [ %92, %106 ], [ %92, %99 ]
  %160 = phi i64 [ %156, %155 ], [ %104, %102 ], [ %104, %106 ], [ %94, %99 ]
  %161 = inttoptr i64 %160 to %"class.viz::SurfaceAllocationGroup"**
  %162 = icmp eq %"class.viz::SurfaceAllocationGroup"** %159, %161
  br i1 %162, label %164, label %163

163:                                              ; preds = %158
  store %"class.viz::SurfaceAllocationGroup"** %161, %"class.viz::SurfaceAllocationGroup"*** %91, align 8
  br label %164

164:                                              ; preds = %158, %163
  %165 = phi %"class.viz::SurfaceAllocationGroup"** [ %159, %158 ], [ %161, %163 ]
  %166 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %89, align 8
  %167 = icmp eq %"class.viz::SurfaceAllocationGroup"** %166, %165
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = tail call %"struct.std::__1::pair.253"* @_ZN4base8internal9flat_treeIN3viz11FrameSinkIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS8_IPNS2_22SurfaceAllocationGroupENS5_9allocatorISB_EEEEEENSC_ISF_EEEEE5eraseENS5_11__wrap_iterIPSF_EE(%"class.base::internal::flat_tree.250"* %12, %"struct.std::__1::pair.253"* %88)
  br label %170

170:                                              ; preds = %168, %164
  %171 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %22, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %22, align 8
  %172 = icmp eq %"class.viz::SurfaceAllocationGroup"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %171) #15
  %174 = bitcast %"class.viz::SurfaceAllocationGroup"* %171 to i8*
  tail call void @_ZdlPv(i8* %174) #16
  br label %175

175:                                              ; preds = %173, %170, %19
  %176 = phi i8 [ %20, %19 ], [ 1, %170 ], [ 1, %173 ]
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %178 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %179 = icmp eq %"struct.std::__1::pair"* %177, %178
  br i1 %179, label %16, label %19

180:                                              ; preds = %16
  %181 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %182 = icmp eq %"struct.std::__1::pair"* %181, %177
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = ptrtoint %"struct.std::__1::pair"* %177 to i64
  br label %230

185:                                              ; preds = %180, %190
  %186 = phi %"struct.std::__1::pair"* [ %191, %190 ], [ %181, %180 ]
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %186, i64 0, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %187, align 8
  %189 = icmp eq %"class.viz::SurfaceAllocationGroup"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %186, i64 1
  %192 = icmp eq %"struct.std::__1::pair"* %186, %21
  br i1 %192, label %193, label %185

193:                                              ; preds = %190
  %194 = ptrtoint %"struct.std::__1::pair"* %177 to i64
  br label %230

195:                                              ; preds = %185
  %196 = ptrtoint %"struct.std::__1::pair"* %186 to i64
  %197 = icmp eq %"struct.std::__1::pair"* %186, %177
  %198 = icmp eq %"struct.std::__1::pair"* %186, %21
  %199 = or i1 %197, %198
  br i1 %199, label %230, label %200

200:                                              ; preds = %195, %225
  %201 = phi %"struct.std::__1::pair"* [ %203, %225 ], [ %186, %195 ]
  %202 = phi i64 [ %226, %225 ], [ %196, %195 ]
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 1
  %204 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 1, i32 1, i32 0, i32 0, i32 0
  %205 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %204, align 8
  %206 = icmp eq %"class.viz::SurfaceAllocationGroup"* %205, null
  br i1 %206, label %225, label %207

207:                                              ; preds = %200
  %208 = inttoptr i64 %202 to %"struct.std::__1::pair"*
  %209 = inttoptr i64 %202 to i8*
  %210 = bitcast %"struct.std::__1::pair"* %203 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 16, i1 false) #15
  %211 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 1, i32 1
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %208, i64 0, i32 1
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %211, i64 0, i32 0, i32 0, i32 0
  %214 = bitcast %"class.std::__1::unique_ptr"* %211 to i64*
  %215 = load i64, i64* %214, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %213, align 8
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %212, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %216, align 8
  %218 = bitcast %"class.std::__1::unique_ptr"* %212 to i64*
  store i64 %215, i64* %218, align 8
  %219 = icmp eq %"class.viz::SurfaceAllocationGroup"* %217, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %207
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %217) #15
  %221 = bitcast %"class.viz::SurfaceAllocationGroup"* %217 to i8*
  tail call void @_ZdlPv(i8* %221) #16
  br label %222

222:                                              ; preds = %220, %207
  %223 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %208, i64 1
  %224 = ptrtoint %"struct.std::__1::pair"* %223 to i64
  br label %225

225:                                              ; preds = %222, %200
  %226 = phi i64 [ %202, %200 ], [ %224, %222 ]
  %227 = icmp eq %"struct.std::__1::pair"* %203, %21
  br i1 %227, label %228, label %200

228:                                              ; preds = %225
  %229 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  br label %230

230:                                              ; preds = %183, %228, %195, %193
  %231 = phi %"struct.std::__1::pair"* [ %177, %195 ], [ %177, %193 ], [ %229, %228 ], [ %177, %183 ]
  %232 = phi i64 [ %196, %195 ], [ %194, %193 ], [ %226, %228 ], [ %184, %183 ]
  %233 = inttoptr i64 %232 to %"struct.std::__1::pair"*
  %234 = icmp eq %"struct.std::__1::pair"* %231, %233
  br i1 %234, label %246, label %235

235:                                              ; preds = %230, %243
  %236 = phi %"struct.std::__1::pair"* [ %237, %243 ], [ %231, %230 ]
  %237 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %236, i64 -1
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %236, i64 -1, i32 1, i32 0, i32 0, i32 0
  %239 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %238, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %238, align 8
  %240 = icmp eq %"class.viz::SurfaceAllocationGroup"* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %235
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %239) #15
  %242 = bitcast %"class.viz::SurfaceAllocationGroup"* %239 to i8*
  tail call void @_ZdlPv(i8* %242) #16
  br label %243

243:                                              ; preds = %241, %235
  %244 = icmp eq %"struct.std::__1::pair"* %237, %233
  br i1 %244, label %245, label %235

245:                                              ; preds = %243
  store %"struct.std::__1::pair"* %233, %"struct.std::__1::pair"** %8, align 8
  br label %246

246:                                              ; preds = %5, %245, %230, %16
  store i8 0, i8* %2, align 8
  br label %247

247:                                              ; preds = %1, %246
  ret void

248:                                              ; preds = %150
  %249 = ptrtoint %"class.viz::SurfaceAllocationGroup"* %153 to i64
  %250 = inttoptr i64 %151 to %"class.viz::SurfaceAllocationGroup"**
  %251 = inttoptr i64 %151 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %250, i64 1
  %253 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %252 to i64
  br label %254

254:                                              ; preds = %248, %150
  %255 = phi i64 [ %151, %150 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %140, i64 2
  %257 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %256, align 8
  %258 = icmp eq %"class.viz::SurfaceAllocationGroup"* %257, %26
  br i1 %258, label %265, label %259

259:                                              ; preds = %254
  %260 = ptrtoint %"class.viz::SurfaceAllocationGroup"* %257 to i64
  %261 = inttoptr i64 %255 to %"class.viz::SurfaceAllocationGroup"**
  %262 = inttoptr i64 %255 to i64*
  store i64 %260, i64* %262, align 8
  %263 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %261, i64 1
  %264 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %263 to i64
  br label %265

265:                                              ; preds = %259, %254
  %266 = phi i64 [ %255, %254 ], [ %264, %259 ]
  %267 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %140, i64 3
  %268 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %267, align 8
  %269 = icmp eq %"class.viz::SurfaceAllocationGroup"* %268, %26
  br i1 %269, label %276, label %270

270:                                              ; preds = %265
  %271 = ptrtoint %"class.viz::SurfaceAllocationGroup"* %268 to i64
  %272 = inttoptr i64 %266 to %"class.viz::SurfaceAllocationGroup"**
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %272, i64 1
  %275 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %274 to i64
  br label %276

276:                                              ; preds = %270, %265
  %277 = phi i64 [ %266, %265 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %140, i64 4
  %279 = icmp eq %"class.viz::SurfaceAllocationGroup"** %278, %92
  br i1 %279, label %155, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager15GetLiveSurfacesEv(%"class.std::__1::unordered_set"* noalias sret, %"class.viz::SurfaceManager"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::queue", align 8
  %4 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 4, i64 0
  %5 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.393"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_set"* %0 to i8*
  %8 = bitcast i8* %4 to i32*
  store i32 -1431655766, i32* %8, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %6, align 4
  %9 = bitcast %"class.std::__1::queue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #15
  %13 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %13, i64 1) #15
  %14 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0
  %15 = load i64, i64* %12, align 8
  %16 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %15) #15
  %17 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 8, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 8, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 8, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 8, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 8, i32 1, i32 2
  %31 = bitcast %"class.base::UnguessableToken"* %29 to i8*
  %32 = bitcast %"class.base::UnguessableToken"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false) #15
  %33 = load i64, i64* %12, align 8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, -1
  %36 = icmp eq i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %2
  store i64 0, i64* %12, align 8
  br label %41

38:                                               ; preds = %2
  %39 = add i64 %33, 1
  store i64 %39, i64* %12, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38, %37
  br label %42

42:                                               ; preds = %38, %41
  %43 = phi i64 [ %35, %41 ], [ %33, %38 ]
  %44 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZNK4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %43) #15
  %45 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %45, align 8
  %47 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %48 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %47, align 8
  %49 = icmp eq %"struct.std::__1::pair.263"* %46, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 7
  %52 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0
  br label %60

53:                                               ; preds = %99, %42
  %54 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = bitcast %"struct.std::__1::__hash_node_base.306"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %102, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0
  br label %110

60:                                               ; preds = %50, %99
  %61 = phi %"struct.std::__1::pair.263"* [ %46, %50 ], [ %100, %99 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 0, i32 0
  %63 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"* %51, %"class.viz::SurfaceId"* dereferenceable(32) %62) #15
  %64 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %63, 0
  %65 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %63, 1
  %66 = icmp eq %"class.viz::SurfaceId"* %65, %64
  br i1 %66, label %67, label %99

67:                                               ; preds = %60
  %68 = call { %"struct.std::__1::__hash_node_base.379"*, i8 } @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.375"* %52, %"class.viz::SurfaceId"* dereferenceable(32) %62, %"class.viz::SurfaceId"* dereferenceable(32) %62) #15
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %13, i64 1) #15
  %69 = load i64, i64* %12, align 8
  %70 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %69) #15
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 0, i32 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 0, i32 0, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 1, i32 2
  %84 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 0, i32 0, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #15
  %87 = load i64, i64* %12, align 8
  %88 = load i64, i64* %10, align 8
  %89 = add i64 %88, -1
  %90 = icmp eq i64 %87, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %67
  store i64 0, i64* %12, align 8
  br label %95

92:                                               ; preds = %67
  %93 = add i64 %87, 1
  store i64 %93, i64* %12, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92, %91
  br label %96

96:                                               ; preds = %92, %95
  %97 = phi i64 [ %89, %95 ], [ %87, %92 ]
  %98 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZNK4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %97) #15
  br label %99

99:                                               ; preds = %60, %96
  %100 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %61, i64 1
  %101 = icmp eq %"struct.std::__1::pair.263"* %100, %48
  br i1 %101, label %53, label %60

102:                                              ; preds = %149, %53
  %103 = load i64, i64* %11, align 8
  %104 = load i64, i64* %12, align 8
  %105 = icmp eq i64 %103, %104
  br i1 %105, label %220, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 11, i32 0
  %108 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 9
  %109 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0
  br label %153

110:                                              ; preds = %58, %149
  %111 = phi i64 [ %56, %58 ], [ %151, %149 ]
  %112 = inttoptr i64 %111 to %"struct.std::__1::__hash_node.453"*
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %112, i64 0, i32 2, i32 0, i32 0
  %114 = call { %"struct.std::__1::__hash_node_base.379"*, i8 } @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.375"* %59, %"class.viz::SurfaceId"* dereferenceable(32) %113, %"class.viz::SurfaceId"* dereferenceable(32) %113) #15
  %115 = extractvalue { %"struct.std::__1::__hash_node_base.379"*, i8 } %114, 1
  %116 = and i8 %115, 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %149, label %118

118:                                              ; preds = %110
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %13, i64 1) #15
  %119 = load i64, i64* %12, align 8
  %120 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %119) #15
  %121 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %113, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 0, i32 1
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %124, align 4
  %127 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 1, i32 0
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %112, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 8
  store i32 %129, i32* %127, align 8
  %130 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 1, i32 1
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %112, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 1, i32 2
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %112, i64 0, i32 2, i32 0, i32 0, i32 1, i32 2
  %135 = bitcast %"class.base::UnguessableToken"* %133 to i8*
  %136 = bitcast %"class.base::UnguessableToken"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #15
  %137 = load i64, i64* %12, align 8
  %138 = load i64, i64* %10, align 8
  %139 = add i64 %138, -1
  %140 = icmp eq i64 %137, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %118
  store i64 0, i64* %12, align 8
  br label %145

142:                                              ; preds = %118
  %143 = add i64 %137, 1
  store i64 %143, i64* %12, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142, %141
  br label %146

146:                                              ; preds = %142, %145
  %147 = phi i64 [ %139, %145 ], [ %137, %142 ]
  %148 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZNK4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %147) #15
  br label %149

149:                                              ; preds = %110, %146
  %150 = inttoptr i64 %111 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %102, label %110

153:                                              ; preds = %106, %166
  %154 = phi i64 [ %103, %106 ], [ %177, %166 ]
  %155 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %154) #15
  %156 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %107, %"class.viz::SurfaceId"* dereferenceable(32) %155) #15
  %157 = icmp eq %"struct.std::__1::__hash_node_base"* %156, null
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 6
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %158 to %"class.base::internal::flat_tree.188"*
  %160 = select i1 %157, %"class.base::internal::flat_tree.188"* %108, %"class.base::internal::flat_tree.188"* %159
  %161 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %161, align 8
  %163 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %160, i64 0, i32 0, i32 0, i32 1
  %164 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %163, align 8
  %165 = icmp eq %"class.viz::SurfaceId"* %162, %164
  br i1 %165, label %166, label %180

166:                                              ; preds = %217, %153
  %167 = load i64, i64* %11, align 8
  %168 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %167) #15
  %169 = load i64, i64* %11, align 8
  %170 = add i64 %169, 1
  %171 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %170) #15
  %172 = load i64, i64* %11, align 8
  %173 = add i64 %172, 1
  %174 = load i64, i64* %10, align 8
  %175 = icmp eq i64 %173, %174
  %176 = select i1 %175, i64 0, i64 %173
  store i64 %176, i64* %11, align 8
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* nonnull %13) #15
  %177 = load i64, i64* %11, align 8
  %178 = load i64, i64* %12, align 8
  %179 = icmp eq i64 %177, %178
  br i1 %179, label %220, label %153

180:                                              ; preds = %153, %217
  %181 = phi %"class.viz::SurfaceId"* [ %218, %217 ], [ %162, %153 ]
  %182 = call { %"struct.std::__1::__hash_node_base.379"*, i8 } @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.375"* %109, %"class.viz::SurfaceId"* dereferenceable(32) %181, %"class.viz::SurfaceId"* dereferenceable(32) %181) #15
  %183 = extractvalue { %"struct.std::__1::__hash_node_base.379"*, i8 } %182, 1
  %184 = and i8 %183, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %217, label %186

186:                                              ; preds = %180
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %13, i64 1) #15
  %187 = load i64, i64* %12, align 8
  %188 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %187) #15
  %189 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %188, i64 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %181, i64 0, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %188, i64 0, i32 0, i32 1
  %193 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %181, i64 0, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %188, i64 0, i32 1, i32 0
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %181, i64 0, i32 1, i32 0
  %197 = load i32, i32* %196, align 8
  store i32 %197, i32* %195, align 8
  %198 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %188, i64 0, i32 1, i32 1
  %199 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %181, i64 0, i32 1, i32 1
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %188, i64 0, i32 1, i32 2
  %202 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %181, i64 0, i32 1, i32 2
  %203 = bitcast %"class.base::UnguessableToken"* %201 to i8*
  %204 = bitcast %"class.base::UnguessableToken"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 16, i1 false) #15
  %205 = load i64, i64* %12, align 8
  %206 = load i64, i64* %10, align 8
  %207 = add i64 %206, -1
  %208 = icmp eq i64 %205, %207
  br i1 %208, label %209, label %210

209:                                              ; preds = %186
  store i64 0, i64* %12, align 8
  br label %213

210:                                              ; preds = %186
  %211 = add i64 %205, 1
  store i64 %211, i64* %12, align 8
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210, %209
  br label %214

214:                                              ; preds = %210, %213
  %215 = phi i64 [ %207, %213 ], [ %205, %210 ]
  %216 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZNK4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %215) #15
  br label %217

217:                                              ; preds = %180, %214
  %218 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %181, i64 1
  %219 = icmp eq %"class.viz::SurfaceId"* %218, %164
  br i1 %219, label %166, label %180

220:                                              ; preds = %166, %102
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEED2Ev(%"class.base::circular_deque"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager22DestroySurfaceInternalERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.510", align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0
  %5 = tail call { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSF_EESO_EERKT_(%"class.base::internal::flat_tree.260"* %4, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %6 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %5, 0
  %7 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %5, 1
  %8 = icmp eq %"struct.std::__1::pair.263"* %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"struct.std::__1::pair.263"* [ %11, %9 ], [ %6, %2 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.viz::Surface"*, %"class.viz::Surface"** %14, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %14, align 8
  %16 = tail call %"struct.std::__1::pair.263"* @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE5eraseENS5_11__wrap_iterIPSF_EE(%"class.base::internal::flat_tree.260"* %4, %"struct.std::__1::pair.263"* %13)
  %17 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 11, i32 0
  %18 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %17, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %19 = icmp eq %"struct.std::__1::__hash_node_base"* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::unique_ptr.510"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE(%"class.std::__1::unique_ptr.510"* nonnull sret %3, %"class.std::__1::__hash_table"* %17, %"struct.std::__1::__hash_node_base"* nonnull %18) #15
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %22, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node"* %23, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %23, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %30, align 8
  %32 = icmp eq %"class.viz::SurfaceId"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.viz::SurfaceId"* %31 to i64
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %23, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %36 = bitcast %"class.viz::SurfaceId"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.viz::SurfaceId"* %31 to i8*
  call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %33, %29, %25
  %39 = bitcast %"struct.std::__1::__hash_node"* %23 to i8*
  call void @_ZdlPv(i8* %39) #16
  br label %40

40:                                               ; preds = %38, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  br label %41

41:                                               ; preds = %12, %40
  %42 = icmp eq %"class.viz::Surface"* %15, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %15) #15
  %44 = bitcast %"class.viz::Surface"* %15 to i8*
  call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %41, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz14SurfaceManager39GetSurfacesThatReferenceChildForTestingERKNS_9SurfaceIdE(%"class.base::internal::flat_tree.188"* noalias sret, %"class.viz::SurfaceManager"* nocapture readonly, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.base::internal::flat_tree.188"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::__hash_node_base"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %25, %3
  ret void

10:                                               ; preds = %3, %25
  %11 = phi i64 [ %27, %25 ], [ %7, %3 ]
  %12 = inttoptr i64 %11 to %"struct.std::__1::__hash_node"*
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %12, i64 0, i32 2, i32 0, i32 1
  %14 = tail call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"* %13, %"class.viz::SurfaceId"* dereferenceable(32) %2) #15
  %15 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %14, 0
  %16 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %14, 1
  %17 = icmp eq %"class.viz::SurfaceId"* %15, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %12, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %19, align 8
  %21 = icmp eq %"class.viz::SurfaceId"* %15, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %12, i64 0, i32 2, i32 0, i32 0
  %24 = tail call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.188"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %23, %"class.viz::SurfaceId"* dereferenceable(32) %23) #15
  br label %25

25:                                               ; preds = %10, %18, %22
  %26 = inttoptr i64 %11 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz14SurfaceManager22IsMarkedForDestructionERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7
  %4 = tail call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %5 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %4, 0
  %6 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %4, 1
  %7 = icmp ne %"class.viz::SurfaceId"* %6, %5
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz14SurfaceManager21HasTemporaryReferenceERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base.306"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.302"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %5 = icmp ne %"struct.std::__1::__hash_node_base.306"* %4, null
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager28RemoveTemporaryReferenceImplERKNS_9SurfaceIdENS0_13RemovedReasonE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.521", align 8
  %5 = alloca %"class.std::__1::tuple.530", align 8
  %6 = alloca %"class.std::__1::tuple.509", align 1
  %7 = alloca %"class.viz::SurfaceId", align 8
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 13, i32 0
  %10 = bitcast %"class.std::__1::tuple.530"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.std::__1::tuple.530", %"class.std::__1::tuple.530"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.viz::FrameSinkId"* %8, %"class.viz::FrameSinkId"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.509", %"class.std::__1::tuple.509"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  %13 = call { %"struct.std::__1::__hash_node_base.330"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.326"* %9, %"class.viz::FrameSinkId"* dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.530"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.509"* nonnull dereferenceable(1) %6) #15
  %14 = extractvalue { %"struct.std::__1::__hash_node_base.330"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %14, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %16 = bitcast %"struct.std::__1::__hash_node_base.330"* %15 to %"class.viz::LocalSurfaceId"**
  %17 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %14, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.330"* %18 to %"class.viz::LocalSurfaceId"**
  %20 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %19, align 8
  %21 = icmp eq %"class.viz::LocalSurfaceId"* %17, %20
  br i1 %21, label %49, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  br label %24

24:                                               ; preds = %27, %22
  %25 = phi %"class.viz::LocalSurfaceId"* [ %17, %22 ], [ %28, %27 ]
  %26 = call zeroext i1 @_ZNK3viz14LocalSurfaceId11IsNewerThanERKS0_(%"class.viz::LocalSurfaceId"* %25, %"class.viz::LocalSurfaceId"* dereferenceable(24) %23) #15
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %25, i64 1
  %29 = icmp eq %"class.viz::LocalSurfaceId"* %28, %20
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %27
  %31 = phi %"class.viz::LocalSurfaceId"* [ %20, %27 ], [ %25, %24 ]
  %32 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %16, align 8
  %33 = ptrtoint %"class.viz::LocalSurfaceId"* %31 to i64
  %34 = icmp eq %"class.viz::LocalSurfaceId"* %32, %31
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.viz::SurfaceId"* %7 to i8*
  %37 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %7, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %7, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %7, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %7, i64 0, i32 1, i32 2
  %44 = bitcast %"class.base::UnguessableToken"* %43 to i8*
  %45 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr.521"* %4 to i8*
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.521", %"class.std::__1::unique_ptr.521"* %4, i64 0, i32 0, i32 0, i32 0
  br label %66

48:                                               ; preds = %84
  br i1 %34, label %49, label %51

49:                                               ; preds = %3, %30, %48
  %50 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %19, align 8
  br label %62

51:                                               ; preds = %48
  %52 = bitcast %"struct.std::__1::__hash_node_base.330"* %18 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %53, %33
  %55 = sdiv exact i64 %54, 24
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.viz::LocalSurfaceId"* %32 to i8*
  %59 = bitcast %"class.viz::LocalSurfaceId"* %31 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 %54, i1 false) #15
  br label %60

60:                                               ; preds = %57, %51
  %61 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %32, i64 %55
  store %"class.viz::LocalSurfaceId"* %61, %"class.viz::LocalSurfaceId"** %19, align 8
  br label %62

62:                                               ; preds = %49, %60
  %63 = phi %"class.viz::LocalSurfaceId"* [ %50, %49 ], [ %61, %60 ]
  %64 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %16, align 8
  %65 = icmp eq %"class.viz::LocalSurfaceId"* %64, %63
  br i1 %65, label %87, label %89

66:                                               ; preds = %35, %84
  %67 = phi %"class.viz::LocalSurfaceId"* [ %32, %35 ], [ %85, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #15
  %68 = load i32, i32* %38, align 4
  store i32 %68, i32* %37, align 8
  %69 = load i32, i32* %40, align 4
  store i32 %69, i32* %39, align 4
  %70 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %67, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %41, align 8
  %72 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %67, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %42, align 4
  %74 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %67, i64 0, i32 2
  %75 = bitcast %"class.base::UnguessableToken"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %75, i64 16, i1 false) #15
  %76 = call %"struct.std::__1::__hash_node_base.306"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.302"* %45, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %7) #15
  %77 = icmp eq %"struct.std::__1::__hash_node_base.306"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #15
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.521"* nonnull sret %4, %"class.std::__1::__hash_table.302"* %45, %"struct.std::__1::__hash_node_base.306"* nonnull %76) #15
  %79 = load %"struct.std::__1::__hash_node.453"*, %"struct.std::__1::__hash_node.453"** %47, align 8
  store %"struct.std::__1::__hash_node.453"* null, %"struct.std::__1::__hash_node.453"** %47, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node.453"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = bitcast %"struct.std::__1::__hash_node.453"* %79 to i8*
  call void @_ZdlPv(i8* %82) #16
  br label %83

83:                                               ; preds = %81, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #15
  br label %84

84:                                               ; preds = %66, %83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #15
  %85 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %67, i64 1
  %86 = icmp eq %"class.viz::LocalSurfaceId"* %85, %31
  br i1 %86, label %48, label %66

87:                                               ; preds = %62
  %88 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE14__erase_uniqueIS3_EEmRKT_(%"class.std::__1::__hash_table.326"* %9, %"class.viz::FrameSinkId"* dereferenceable(8) %8) #15
  br label %89

89:                                               ; preds = %87, %62
  %90 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %110

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %98, i64 0, i32 0
  %100 = call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %99) #15
  br i1 %100, label %101, label %110

101:                                              ; preds = %97
  %102 = load i8, i8* %94, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %105, !prof !15

104:                                              ; preds = %101
  call void @llvm.trap() #15
  unreachable

105:                                              ; preds = %101
  %106 = bitcast %"class.base::RepeatingTimer"* %98 to void (%"class.base::internal::TimerBase"*)***
  %107 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %107, i64 3
  %109 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %108, align 8
  call void %109(%"class.base::internal::TimerBase"* %99) #15
  br label %110

110:                                              ; preds = %93, %97, %105, %89
  ret void
}

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager28ExpireOldTemporaryReferencesEv(%"class.viz::SurfaceManager"*) #0 align 2 {
  %2 = alloca %"class.std::__1::vector.49", align 8
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %89, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.49"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %2, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #15
  %11 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"struct.std::__1::__hash_node_base.306"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %84, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 0
  %17 = bitcast %"class.viz::SurfaceId"** %9 to i64*
  %18 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 7
  br label %23

19:                                               ; preds = %71
  %20 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %8, align 8
  %21 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %9, align 8
  %22 = icmp eq %"class.viz::SurfaceId"* %20, %21
  br i1 %22, label %77, label %85

23:                                               ; preds = %15, %71
  %24 = phi i64 [ %13, %15 ], [ %73, %71 ]
  %25 = inttoptr i64 %24 to %"struct.std::__1::__hash_node.453"*
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %25, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %26, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %25, i64 0, i32 2, i32 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %23
  %32 = load %"class.viz::SurfaceManagerDelegate"*, %"class.viz::SurfaceManagerDelegate"** %16, align 8
  %33 = icmp eq %"class.viz::SurfaceManagerDelegate"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %26, i64 0, i32 0, i32 0
  %36 = bitcast %"class.viz::SurfaceManagerDelegate"* %32 to { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)***
  %37 = load { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)**, { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)*** %36, align 8
  %38 = getelementptr inbounds { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)*, { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)** %37, i64 2
  %39 = load { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)*, { i8*, i64 } (%"class.viz::SurfaceManagerDelegate"*, %"class.viz::FrameSinkId"*)** %38, align 8
  %40 = call { i8*, i64 } %39(%"class.viz::SurfaceManagerDelegate"* nonnull %32, %"class.viz::FrameSinkId"* dereferenceable(8) %35) #15
  br label %41

41:                                               ; preds = %31, %34
  %42 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %9, align 8
  %43 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  %44 = icmp eq %"class.viz::SurfaceId"* %42, %43
  br i1 %44, label %64, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %26, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %46, align 4
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %25, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %52, align 8
  %55 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %25, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %55, align 4
  %58 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 0, i32 1, i32 2
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %25, i64 0, i32 2, i32 0, i32 0, i32 1, i32 2
  %60 = bitcast %"class.base::UnguessableToken"* %58 to i8*
  %61 = bitcast %"class.base::UnguessableToken"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #15
  %62 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 1
  %63 = ptrtoint %"class.viz::SurfaceId"* %62 to i64
  store i64 %63, i64* %17, align 8
  br label %71

64:                                               ; preds = %41
  call void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.49"* nonnull %2, %"class.viz::SurfaceId"* dereferenceable(32) %27) #15
  br label %71

65:                                               ; preds = %23
  %66 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"* %18, %"class.viz::SurfaceId"* dereferenceable(32) %27) #15
  %67 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %66, 0
  %68 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %66, 1
  %69 = icmp eq %"class.viz::SurfaceId"* %68, %67
  br i1 %69, label %71, label %70

70:                                               ; preds = %65
  store i8 1, i8* %28, align 1
  br label %71

71:                                               ; preds = %65, %64, %45, %70
  %72 = inttoptr i64 %24 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %19, label %23

75:                                               ; preds = %85
  %76 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %8, align 8
  br label %77

77:                                               ; preds = %75, %19
  %78 = phi %"class.viz::SurfaceId"* [ %76, %75 ], [ %21, %19 ]
  %79 = icmp eq %"class.viz::SurfaceId"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.viz::SurfaceId"* %78 to i8*
  %82 = ptrtoint %"class.viz::SurfaceId"* %78 to i64
  %83 = bitcast %"class.viz::SurfaceId"** %9 to i64*
  store i64 %82, i64* %83, align 8
  call void @_ZdlPv(i8* %81) #16
  br label %84

84:                                               ; preds = %6, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  br label %89

85:                                               ; preds = %19, %85
  %86 = phi %"class.viz::SurfaceId"* [ %87, %85 ], [ %20, %19 ]
  call void @_ZN3viz14SurfaceManager28RemoveTemporaryReferenceImplERKNS_9SurfaceIdENS0_13RemovedReasonE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %86, i32 undef)
  %87 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %86, i64 1
  %88 = icmp eq %"class.viz::SurfaceId"* %87, %21
  br i1 %88, label %75, label %85

89:                                               ; preds = %1, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::Surface"* @_ZN3viz14SurfaceManager24GetLatestInFlightSurfaceERKNS_12SurfaceRangeE(%"class.viz::SurfaceManager"* nocapture readonly, %"class.viz::SurfaceRange"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2
  %4 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  br i1 %11, label %43, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 24
  %15 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  br label %19

19:                                               ; preds = %37, %13
  %20 = phi %"struct.std::__1::pair"* [ %5, %13 ], [ %39, %37 ]
  %21 = phi i64 [ %14, %13 ], [ %38, %37 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22, i32 0, i32 0, i32 1
  %26 = load i64, i64* %24, align 8
  %27 = icmp ult i64 %26, %17
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = icmp ult i64 %17, %26
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = load i64, i64* %25, align 8
  %32 = icmp ult i64 %31, %18
  br i1 %32, label %33, label %37

33:                                               ; preds = %30, %19
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %35 = xor i64 %22, -1
  %36 = add i64 %21, %35
  br label %37

37:                                               ; preds = %33, %30, %28
  %38 = phi i64 [ %36, %33 ], [ %22, %30 ], [ %22, %28 ]
  %39 = phi %"struct.std::__1::pair"* [ %34, %33 ], [ %20, %30 ], [ %20, %28 ]
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %19

41:                                               ; preds = %37
  %42 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %43

43:                                               ; preds = %41, %2
  %44 = phi i64 [ %42, %41 ], [ %9, %2 ]
  %45 = phi %"struct.std::__1::pair"* [ %39, %41 ], [ %5, %2 ]
  %46 = icmp eq %"struct.std::__1::pair"* %45, %12
  br i1 %46, label %64, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %3, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %48, align 8
  %53 = load i64, i64* %50, align 8
  %54 = icmp ult i64 %52, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %47
  %56 = icmp ult i64 %53, %52
  br i1 %56, label %61, label %57

57:                                               ; preds = %55
  %58 = load i64, i64* %49, align 8
  %59 = load i64, i64* %51, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %57, %55
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %63 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  br label %64

64:                                               ; preds = %61, %57, %47, %43
  %65 = phi i64 [ %63, %61 ], [ %44, %43 ], [ %44, %57 ], [ %44, %47 ]
  %66 = inttoptr i64 %65 to %"struct.std::__1::pair"*
  %67 = icmp eq %"struct.std::__1::pair"* %45, %66
  %68 = select i1 %67, %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"* %45
  %69 = icmp eq %"struct.std::__1::pair"* %68, %12
  br i1 %69, label %89, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %71, align 8
  %73 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %89

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %72, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp ne i32 %80, %82
  %84 = icmp eq %"class.viz::SurfaceAllocationGroup"* %72, null
  %85 = or i1 %84, %83
  br i1 %85, label %89, label %86

86:                                               ; preds = %78
  %87 = tail call %"class.viz::Surface"* @_ZNK3viz22SurfaceAllocationGroup30FindLatestActiveSurfaceInRangeERKNS_12SurfaceRangeE(%"class.viz::SurfaceAllocationGroup"* nonnull %72, %"class.viz::SurfaceRange"* dereferenceable(72) %1) #15
  %88 = icmp eq %"class.viz::Surface"* %87, null
  br i1 %88, label %89, label %183

89:                                               ; preds = %78, %64, %70, %86
  %90 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %183, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %95, %97
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %101, %103
  br i1 %104, label %183, label %105

105:                                              ; preds = %93, %99
  %106 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %107 = load i64, i64* %7, align 8
  %108 = ptrtoint %"struct.std::__1::pair"* %106 to i64
  %109 = sub i64 %107, %108
  %110 = icmp eq i64 %109, 0
  %111 = inttoptr i64 %107 to %"struct.std::__1::pair"*
  br i1 %110, label %140, label %112

112:                                              ; preds = %105
  %113 = sdiv exact i64 %109, 24
  %114 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  br label %116

116:                                              ; preds = %134, %112
  %117 = phi %"struct.std::__1::pair"* [ %106, %112 ], [ %136, %134 ]
  %118 = phi i64 [ %113, %112 ], [ %135, %134 ]
  %119 = lshr i64 %118, 1
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 %119
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 %119, i32 0, i32 0, i32 1
  %123 = load i64, i64* %121, align 8
  %124 = icmp ult i64 %123, %95
  br i1 %124, label %130, label %125

125:                                              ; preds = %116
  %126 = icmp ult i64 %95, %123
  br i1 %126, label %134, label %127

127:                                              ; preds = %125
  %128 = load i64, i64* %122, align 8
  %129 = icmp ult i64 %128, %115
  br i1 %129, label %130, label %134

130:                                              ; preds = %127, %116
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 1
  %132 = xor i64 %119, -1
  %133 = add i64 %118, %132
  br label %134

134:                                              ; preds = %130, %127, %125
  %135 = phi i64 [ %133, %130 ], [ %119, %127 ], [ %119, %125 ]
  %136 = phi %"struct.std::__1::pair"* [ %131, %130 ], [ %117, %127 ], [ %117, %125 ]
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %138, label %116

138:                                              ; preds = %134
  %139 = ptrtoint %"struct.std::__1::pair"* %136 to i64
  br label %140

140:                                              ; preds = %138, %105
  %141 = phi i64 [ %139, %138 ], [ %108, %105 ]
  %142 = phi %"struct.std::__1::pair"* [ %136, %138 ], [ %106, %105 ]
  %143 = icmp eq %"struct.std::__1::pair"* %142, %111
  br i1 %143, label %159, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %146, align 8
  %149 = icmp ult i64 %95, %148
  br i1 %149, label %159, label %150

150:                                              ; preds = %144
  %151 = icmp ult i64 %148, %95
  br i1 %151, label %156, label %152

152:                                              ; preds = %150
  %153 = load i64, i64* %145, align 8
  %154 = load i64, i64* %147, align 8
  %155 = icmp ult i64 %153, %154
  br i1 %155, label %159, label %156

156:                                              ; preds = %152, %150
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 1
  %158 = ptrtoint %"struct.std::__1::pair"* %157 to i64
  br label %159

159:                                              ; preds = %156, %152, %144, %140
  %160 = phi i64 [ %158, %156 ], [ %141, %140 ], [ %141, %152 ], [ %141, %144 ]
  %161 = inttoptr i64 %160 to %"struct.std::__1::pair"*
  %162 = icmp eq %"struct.std::__1::pair"* %142, %161
  %163 = select i1 %162, %"struct.std::__1::pair"* %111, %"struct.std::__1::pair"* %142
  %164 = icmp eq %"struct.std::__1::pair"* %163, %111
  br i1 %164, label %183, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 0, i32 1, i32 0, i32 0, i32 0
  %167 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %166, align 8
  %168 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %167, i64 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %169, %171
  br i1 %172, label %173, label %183

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %167, i64 0, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = icmp ne i32 %175, %177
  %179 = icmp eq %"class.viz::SurfaceAllocationGroup"* %167, null
  %180 = or i1 %179, %178
  br i1 %180, label %183, label %181

181:                                              ; preds = %173
  %182 = tail call %"class.viz::Surface"* @_ZNK3viz22SurfaceAllocationGroup30FindLatestActiveSurfaceInRangeERKNS_12SurfaceRangeE(%"class.viz::SurfaceAllocationGroup"* nonnull %167, %"class.viz::SurfaceRange"* dereferenceable(72) %1) #15
  br label %183

183:                                              ; preds = %89, %173, %159, %165, %181, %99, %86
  %184 = phi %"class.viz::Surface"* [ %87, %86 ], [ null, %99 ], [ null, %89 ], [ %182, %181 ], [ null, %173 ], [ null, %165 ], [ null, %159 ]
  ret %"class.viz::Surface"* %184
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.viz::SurfaceAllocationGroup"* @_ZN3viz14SurfaceManager30GetAllocationGroupForSurfaceIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* nocapture readonly, %"class.viz::SurfaceId"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %4 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  br i1 %11, label %43, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 24
  %15 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  br label %19

19:                                               ; preds = %37, %13
  %20 = phi %"struct.std::__1::pair"* [ %5, %13 ], [ %39, %37 ]
  %21 = phi i64 [ %14, %13 ], [ %38, %37 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22, i32 0, i32 0, i32 1
  %26 = load i64, i64* %24, align 8
  %27 = icmp ult i64 %26, %17
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = icmp ult i64 %17, %26
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = load i64, i64* %25, align 8
  %32 = icmp ult i64 %31, %18
  br i1 %32, label %33, label %37

33:                                               ; preds = %30, %19
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %35 = xor i64 %22, -1
  %36 = add i64 %21, %35
  br label %37

37:                                               ; preds = %33, %30, %28
  %38 = phi i64 [ %36, %33 ], [ %22, %30 ], [ %22, %28 ]
  %39 = phi %"struct.std::__1::pair"* [ %34, %33 ], [ %20, %30 ], [ %20, %28 ]
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %19

41:                                               ; preds = %37
  %42 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %43

43:                                               ; preds = %41, %2
  %44 = phi i64 [ %42, %41 ], [ %9, %2 ]
  %45 = phi %"struct.std::__1::pair"* [ %39, %41 ], [ %5, %2 ]
  %46 = icmp eq %"struct.std::__1::pair"* %45, %12
  br i1 %46, label %64, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %3, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %48, align 8
  %53 = load i64, i64* %50, align 8
  %54 = icmp ult i64 %52, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %47
  %56 = icmp ult i64 %53, %52
  br i1 %56, label %61, label %57

57:                                               ; preds = %55
  %58 = load i64, i64* %49, align 8
  %59 = load i64, i64* %51, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %57, %55
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %63 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  br label %64

64:                                               ; preds = %43, %47, %57, %61
  %65 = phi i64 [ %63, %61 ], [ %44, %43 ], [ %44, %57 ], [ %44, %47 ]
  %66 = inttoptr i64 %65 to %"struct.std::__1::pair"*
  %67 = icmp eq %"struct.std::__1::pair"* %45, %66
  %68 = select i1 %67, %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"* %45
  %69 = icmp eq %"struct.std::__1::pair"* %68, %12
  br i1 %69, label %85, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %71, align 8
  %73 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %85

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup", %"class.viz::SurfaceAllocationGroup"* %72, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %80, %82
  %84 = select i1 %83, %"class.viz::SurfaceAllocationGroup"* %72, %"class.viz::SurfaceAllocationGroup"* null
  ret %"class.viz::SurfaceAllocationGroup"* %84

85:                                               ; preds = %70, %64
  ret %"class.viz::SurfaceAllocationGroup"* null
}

declare %"class.viz::Surface"* @_ZNK3viz22SurfaceAllocationGroup30FindLatestActiveSurfaceInRangeERKNS_12SurfaceRangeE(%"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceRange"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0
  %4 = tail call { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSF_EESO_EERKT_(%"class.base::internal::flat_tree.260"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #15
  %5 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %4, 0
  %6 = extractvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %4, 1
  %7 = icmp eq %"struct.std::__1::pair.263"* %5, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.263"* %5, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.viz::Surface"*, %"class.viz::Surface"** %13, align 8
  br label %15

15:                                               ; preds = %2, %8, %12
  %16 = phi %"class.viz::Surface"* [ %14, %12 ], [ null, %8 ], [ null, %2 ]
  ret %"class.viz::Surface"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz14SurfaceManager15SurfaceModifiedERKNS_9SurfaceIdERKNS_13BeginFrameAckE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameAck"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %7 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8, !noalias !38
  %14 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !38
  %16 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %13, %15
  %17 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %17) #15
  br i1 %16, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.base::ObserverList"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #15, !alias.scope !38
  br label %60

20:                                               ; preds = %3
  store %"class.base::ObserverList"* %6, %"class.base::ObserverList"** %8, align 8, !alias.scope !38
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %17, %"class.base::internal::LinkNodeBase"* %21) #15
  store i64 0, i64* %9, align 8, !alias.scope !38
  %22 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %23 = load i32, i32* %22, align 8, !noalias !38
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %14 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !38
  %28 = bitcast %"class.base::ObserverList"* %6 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !38
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 3
  br label %32

32:                                               ; preds = %25, %20
  %33 = phi i64 [ %31, %25 ], [ -1, %20 ]
  store i64 %33, i64* %10, align 8, !alias.scope !38
  %34 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8, !alias.scope !38
  %35 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::ObserverList"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, %33
  %43 = select i1 %42, i64 %41, i64 %33
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %32
  %46 = inttoptr i64 %39 to %"class.base::internal::UncheckedObserverAdapter"*
  %47 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %46, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %60

51:                                               ; preds = %45, %55
  %52 = phi i64 [ %53, %55 ], [ 0, %45 ]
  %53 = add nuw i64 %52, 1
  store i64 %53, i64* %9, align 8, !alias.scope !38
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %47, align 8
  %57 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %56, i64 %53, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %51, label %60

60:                                               ; preds = %51, %55, %18, %32, %45
  %61 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #15
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %65 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %65) #15
  %67 = bitcast %"class.base::ObserverList"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #15, !alias.scope !41
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  br label %69

69:                                               ; preds = %312, %60
  %70 = phi %"class.base::ObserverList"* [ %68, %60 ], [ %310, %312 ]
  %71 = phi i1 [ false, %60 ], [ %309, %312 ]
  %72 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = load i64, i64* %9, align 8
  %75 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.base::ObserverList"* %70 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = ashr exact i64 %80, 3
  %82 = load i64, i64* %10, align 8
  %83 = icmp ult i64 %81, %82
  %84 = select i1 %83, i64 %81, i64 %82
  %85 = icmp eq i64 %74, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %73
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  br label %104

88:                                               ; preds = %73, %69
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  %90 = icmp eq %"class.base::ObserverList"* %89, null
  br i1 %90, label %204, label %91

91:                                               ; preds = %88
  %92 = load i64, i64* %63, align 8
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %89, i64 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::ObserverList"* %89 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 3
  %100 = load i64, i64* %64, align 8
  %101 = icmp ult i64 %99, %100
  %102 = select i1 %101, i64 %99, i64 %100
  %103 = icmp eq i64 %92, %102
  br i1 %103, label %113, label %104

104:                                              ; preds = %91, %86
  %105 = phi %"class.base::ObserverList"* [ %87, %86 ], [ %89, %91 ]
  %106 = icmp eq %"class.base::ObserverList"* %70, %105
  %107 = load i64, i64* %9, align 8
  %108 = load i64, i64* %63, align 8
  %109 = icmp eq i64 %107, %108
  %110 = and i1 %106, %109
  br i1 %110, label %111, label %298

111:                                              ; preds = %104
  %112 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %112, label %204, label %113

113:                                              ; preds = %91, %111
  %114 = phi %"class.base::ObserverList"* [ %70, %111 ], [ %89, %91 ]
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 1
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 1, i32 0, i32 0, i32 1
  %117 = bitcast %"class.base::internal::LinkNodeBase"** %116 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = bitcast %"class.base::LinkedList"* %115 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = icmp eq %"class.base::LinkNode"* %118, %120
  br i1 %121, label %122, label %200

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 0, i32 0, i32 1
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %124, %126
  br i1 %127, label %136, label %128

128:                                              ; preds = %122, %133
  %129 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %133 ], [ %124, %122 ]
  %130 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 1
  %135 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %126
  br i1 %135, label %200, label %128

136:                                              ; preds = %128, %122
  %137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %122 ], [ %129, %128 ]
  %138 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %137 to i64
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %137, %126
  br i1 %139, label %200, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 1
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %141, %126
  br i1 %142, label %195, label %143

143:                                              ; preds = %140
  %144 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 -2, i32 0
  %145 = ptrtoint i8** %144 to i64
  %146 = sub i64 %145, %138
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %169, label %151

151:                                              ; preds = %143, %164
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %164 ], [ %141, %143 ]
  %153 = phi i64 [ %165, %164 ], [ %138, %143 ]
  %154 = phi i64 [ %167, %164 ], [ %149, %143 ]
  %155 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %151
  %159 = ptrtoint i8* %156 to i64
  %160 = inttoptr i64 %153 to %"class.base::internal::UncheckedObserverAdapter"*
  %161 = inttoptr i64 %153 to i64*
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %163 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %162 to i64
  br label %164

164:                                              ; preds = %158, %151
  %165 = phi i64 [ %153, %151 ], [ %163, %158 ]
  %166 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %167 = add i64 %154, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %151, !llvm.loop !44

169:                                              ; preds = %164, %143
  %170 = phi i64 [ undef, %143 ], [ %165, %164 ]
  %171 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %143 ], [ %166, %164 ]
  %172 = phi i64 [ %138, %143 ], [ %165, %164 ]
  %173 = icmp ult i64 %146, 24
  br i1 %173, label %191, label %174

174:                                              ; preds = %169, %402
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %171, %169 ]
  %176 = phi i64 [ %403, %402 ], [ %172, %169 ]
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %174
  %181 = ptrtoint i8* %178 to i64
  %182 = inttoptr i64 %176 to %"class.base::internal::UncheckedObserverAdapter"*
  %183 = inttoptr i64 %176 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 1
  %185 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %184 to i64
  br label %186

186:                                              ; preds = %180, %174
  %187 = phi i64 [ %176, %174 ], [ %185, %180 ]
  %188 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %380, label %374

191:                                              ; preds = %402, %169
  %192 = phi i64 [ %170, %169 ], [ %403, %402 ]
  %193 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %194 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  br label %195

195:                                              ; preds = %191, %140
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %140 ], [ %194, %191 ]
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %140 ], [ %193, %191 ]
  %198 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %197, %196
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  store %"class.base::internal::UncheckedObserverAdapter"* %197, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  br label %200

200:                                              ; preds = %133, %199, %195, %136, %113
  %201 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  %202 = icmp eq %"class.base::ObserverList"* %201, null
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %62, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %65) #15
  br label %204

204:                                              ; preds = %88, %111, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #15
  %205 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %206 = icmp eq %"class.base::ObserverList"* %205, null
  br i1 %206, label %297, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 1
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast %"class.base::internal::LinkNodeBase"** %209 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = bitcast %"class.base::LinkedList"* %208 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = icmp eq %"class.base::LinkNode"* %211, %213
  br i1 %214, label %215, label %293

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 0, i32 0, i32 1
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %217, %219
  br i1 %220, label %229, label %221

221:                                              ; preds = %215, %226
  %222 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %226 ], [ %217, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 1
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %219
  br i1 %228, label %293, label %221

229:                                              ; preds = %221, %215
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %215 ], [ %222, %221 ]
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %230, %219
  br i1 %232, label %293, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %234, %219
  br i1 %235, label %288, label %236

236:                                              ; preds = %233
  %237 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 -2, i32 0
  %238 = ptrtoint i8** %237 to i64
  %239 = sub i64 %238, %231
  %240 = lshr i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %262, label %244

244:                                              ; preds = %236, %257
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %257 ], [ %234, %236 ]
  %246 = phi i64 [ %258, %257 ], [ %231, %236 ]
  %247 = phi i64 [ %260, %257 ], [ %242, %236 ]
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %244
  %252 = ptrtoint i8* %249 to i64
  %253 = inttoptr i64 %246 to %"class.base::internal::UncheckedObserverAdapter"*
  %254 = inttoptr i64 %246 to i64*
  store i64 %252, i64* %254, align 8
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %256 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %255 to i64
  br label %257

257:                                              ; preds = %251, %244
  %258 = phi i64 [ %246, %244 ], [ %256, %251 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %260 = add i64 %247, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %244, !llvm.loop !45

262:                                              ; preds = %257, %236
  %263 = phi i64 [ undef, %236 ], [ %258, %257 ]
  %264 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %236 ], [ %259, %257 ]
  %265 = phi i64 [ %231, %236 ], [ %258, %257 ]
  %266 = icmp ult i64 %239, 24
  br i1 %266, label %284, label %267

267:                                              ; preds = %262, %370
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %264, %262 ]
  %269 = phi i64 [ %371, %370 ], [ %265, %262 ]
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %279, label %273

273:                                              ; preds = %267
  %274 = ptrtoint i8* %271 to i64
  %275 = inttoptr i64 %269 to %"class.base::internal::UncheckedObserverAdapter"*
  %276 = inttoptr i64 %269 to i64*
  store i64 %274, i64* %276, align 8
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 1
  %278 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %277 to i64
  br label %279

279:                                              ; preds = %273, %267
  %280 = phi i64 [ %269, %267 ], [ %278, %273 ]
  %281 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %348, label %342

284:                                              ; preds = %370, %262
  %285 = phi i64 [ %263, %262 ], [ %371, %370 ]
  %286 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %287 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %288

288:                                              ; preds = %284, %233
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %233 ], [ %287, %284 ]
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %233 ], [ %286, %284 ]
  %291 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %290, %289
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  store %"class.base::internal::UncheckedObserverAdapter"* %290, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %293

293:                                              ; preds = %226, %292, %288, %229, %207
  %294 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %295 = icmp eq %"class.base::ObserverList"* %294, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %293
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %8, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %17) #15
  br label %297

297:                                              ; preds = %204, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #15
  ret i1 %71

298:                                              ; preds = %104
  %299 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %300, i64 %107
  %302 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %301 to %"class.viz::SurfaceObserver"**
  %303 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %302, align 8
  %304 = bitcast %"class.viz::SurfaceObserver"* %303 to i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)***
  %305 = load i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)**, i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)*** %304, align 8
  %306 = getelementptr inbounds i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)*, i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)** %305, i64 6
  %307 = load i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)*, i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)** %306, align 8
  %308 = call zeroext i1 %307(%"class.viz::SurfaceObserver"* %303, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"struct.viz::BeginFrameAck"* dereferenceable(32) %2) #15
  %309 = or i1 %71, %308
  %310 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %311 = icmp eq %"class.base::ObserverList"* %310, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %337, %333, %298, %313, %327
  br label %69

313:                                              ; preds = %298
  %314 = load i64, i64* %9, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %9, align 8
  %316 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 1
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.base::ObserverList"* %310 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = load i64, i64* %10, align 8
  %324 = icmp ult i64 %322, %323
  %325 = select i1 %324, i64 %322, i64 %323
  %326 = icmp ult i64 %315, %325
  br i1 %326, label %327, label %312

327:                                              ; preds = %313
  %328 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 %315, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %312

333:                                              ; preds = %327, %337
  %334 = phi i64 [ %335, %337 ], [ %315, %327 ]
  %335 = add nuw i64 %334, 1
  store i64 %335, i64* %9, align 8
  %336 = icmp ult i64 %335, %325
  br i1 %336, label %337, label %312

337:                                              ; preds = %333
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %335, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %333, label %312

342:                                              ; preds = %279
  %343 = ptrtoint i8* %282 to i64
  %344 = inttoptr i64 %280 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %280 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %279
  %349 = phi i64 [ %280, %279 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %219
  br i1 %373, label %284, label %267

374:                                              ; preds = %186
  %375 = ptrtoint i8* %189 to i64
  %376 = inttoptr i64 %187 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %187 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %186
  %381 = phi i64 [ %187, %186 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %126
  br i1 %405, label %191, label %174
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager22FirstSurfaceActivationERKNS_11SurfaceInfoE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceInfo"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %6 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !46
  %13 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !46
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !46
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !46
  %20 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8, !alias.scope !46
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !46
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !46
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !46
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !46
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !46
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !46
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #15, !alias.scope !49
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %308, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %306, %308 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !52

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %398
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %169, %167 ]
  %174 = phi i64 [ %399, %398 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %376, label %370

189:                                              ; preds = %398, %167
  %190 = phi i64 [ %168, %167 ], [ %399, %398 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #15
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !53

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %366
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %368, %366 ], [ %262, %260 ]
  %267 = phi i64 [ %367, %366 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %344, label %338

282:                                              ; preds = %366, %260
  %283 = phi i64 [ %261, %260 ], [ %367, %366 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.viz::SurfaceObserver"**
  %301 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %300, align 8
  %302 = bitcast %"class.viz::SurfaceObserver"* %301 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)***
  %303 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)** %303, i64 2
  %305 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)** %304, align 8
  call void %305(%"class.viz::SurfaceObserver"* %301, %"class.viz::SurfaceInfo"* dereferenceable(48) %1) #15
  %306 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %307 = icmp eq %"class.base::ObserverList"* %306, null
  br i1 %307, label %308, label %309

308:                                              ; preds = %333, %329, %296, %309, %323
  br label %68

309:                                              ; preds = %296
  %310 = load i64, i64* %8, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %8, align 8
  %312 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.base::ObserverList"* %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = load i64, i64* %9, align 8
  %320 = icmp ult i64 %318, %319
  %321 = select i1 %320, i64 %318, i64 %319
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %323, label %308

323:                                              ; preds = %309
  %324 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 %311, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %308

329:                                              ; preds = %323, %333
  %330 = phi i64 [ %331, %333 ], [ %311, %323 ]
  %331 = add nuw i64 %330, 1
  store i64 %331, i64* %8, align 8
  %332 = icmp ult i64 %331, %321
  br i1 %332, label %333, label %308

333:                                              ; preds = %329
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %325, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %331, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %329, label %308

338:                                              ; preds = %277
  %339 = ptrtoint i8* %280 to i64
  %340 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %278 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %277
  %345 = phi i64 [ %278, %277 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %355, label %349

349:                                              ; preds = %344
  %350 = ptrtoint i8* %347 to i64
  %351 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %345 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %344
  %356 = phi i64 [ %345, %344 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %369 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %368, %217
  br i1 %369, label %282, label %265

370:                                              ; preds = %184
  %371 = ptrtoint i8* %187 to i64
  %372 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %185 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %184
  %377 = phi i64 [ %185, %184 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %124
  br i1 %401, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager16SurfaceActivatedEPNS_7SurfaceE(%"class.viz::SurfaceManager"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = tail call dereferenceable(248) %"class.viz::CompositorFrameMetadata"* @_ZNK3viz7Surface22GetActiveFrameMetadataEv(%"class.viz::Surface"* %1) #15
  %7 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %6, i64 0, i32 12
  %9 = tail call zeroext i1 @_ZN3viz14SurfaceManager15SurfaceModifiedERKNS_9SurfaceIdERKNS_13BeginFrameAckE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %7, %"struct.viz::BeginFrameAck"* dereferenceable(32) %8)
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !14

14:                                               ; preds = %10
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %16 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %20

20:                                               ; preds = %10, %14
  call void @_ZN3viz7Surface15SendAckToClientEv(%"class.viz::Surface"* %1) #15
  br label %25

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = tail call zeroext i1 @_ZNK3viz14SurfaceManager18HasBlockedEmbedderERKNS_11FrameSinkIdE(%"class.viz::SurfaceManager"* %0, %"class.viz::FrameSinkId"* dereferenceable(8) %22)
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZN3viz7Surface15SendAckToClientEv(%"class.viz::Surface"* %1) #15
  br label %25

25:                                               ; preds = %21, %24, %20
  %26 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %27 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 40, i1 false)
  %33 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8, !noalias !54
  %34 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %34, align 8, !noalias !54
  %36 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %33, %35
  %37 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %37) #15
  br i1 %36, label %38, label %40

38:                                               ; preds = %25
  %39 = bitcast %"class.base::ObserverList"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #15, !alias.scope !54
  br label %80

40:                                               ; preds = %25
  store %"class.base::ObserverList"* %26, %"class.base::ObserverList"** %28, align 8, !alias.scope !54
  %41 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %37, %"class.base::internal::LinkNodeBase"* %41) #15
  store i64 0, i64* %29, align 8, !alias.scope !54
  %42 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %43 = load i32, i32* %42, align 8, !noalias !54
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !54
  %48 = bitcast %"class.base::ObserverList"* %26 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !54
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  br label %52

52:                                               ; preds = %45, %40
  %53 = phi i64 [ %51, %45 ], [ -1, %40 ]
  store i64 %53, i64* %30, align 8, !alias.scope !54
  %54 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8, !alias.scope !54
  %55 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %54, i64 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::ObserverList"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ult i64 %61, %53
  %63 = select i1 %62, i64 %61, i64 %53
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %52
  %66 = inttoptr i64 %59 to %"class.base::internal::UncheckedObserverAdapter"*
  %67 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %54, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %80

71:                                               ; preds = %65, %75
  %72 = phi i64 [ %73, %75 ], [ 0, %65 ]
  %73 = add nuw i64 %72, 1
  store i64 %73, i64* %29, align 8, !alias.scope !54
  %74 = icmp ult i64 %73, %63
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %67, align 8
  %77 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %76, i64 %73, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %71, label %80

80:                                               ; preds = %71, %75, %38, %52, %65
  %81 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81) #15
  %82 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %84 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %85 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %85) #15
  %87 = bitcast %"class.base::ObserverList"** %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #15, !alias.scope !57
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  br label %89

89:                                               ; preds = %329, %80
  %90 = phi %"class.base::ObserverList"* [ %88, %80 ], [ %327, %329 ]
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %107, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %29, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %30, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %92
  %106 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %82, align 8
  br label %123

107:                                              ; preds = %92, %89
  %108 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %82, align 8
  %109 = icmp eq %"class.base::ObserverList"* %108, null
  br i1 %109, label %223, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %83, align 8
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %108, i64 0, i32 0, i32 0, i32 1
  %113 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.base::ObserverList"* %108 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = ashr exact i64 %117, 3
  %119 = load i64, i64* %84, align 8
  %120 = icmp ult i64 %118, %119
  %121 = select i1 %120, i64 %118, i64 %119
  %122 = icmp eq i64 %111, %121
  br i1 %122, label %132, label %123

123:                                              ; preds = %110, %105
  %124 = phi %"class.base::ObserverList"* [ %106, %105 ], [ %108, %110 ]
  %125 = icmp eq %"class.base::ObserverList"* %90, %124
  %126 = load i64, i64* %29, align 8
  %127 = load i64, i64* %83, align 8
  %128 = icmp eq i64 %126, %127
  %129 = and i1 %125, %128
  br i1 %129, label %130, label %317

130:                                              ; preds = %123
  %131 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %131, label %223, label %132

132:                                              ; preds = %110, %130
  %133 = phi %"class.base::ObserverList"* [ %90, %130 ], [ %108, %110 ]
  %134 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 1
  %135 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 1, i32 0, i32 0, i32 1
  %136 = bitcast %"class.base::internal::LinkNodeBase"** %135 to %"class.base::LinkNode"**
  %137 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %136, align 8
  %138 = bitcast %"class.base::LinkedList"* %134 to %"class.base::LinkNode"**
  %139 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %138, align 8
  %140 = icmp eq %"class.base::LinkNode"* %137, %139
  br i1 %140, label %141, label %219

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %142, align 8
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %133, i64 0, i32 0, i32 0, i32 1
  %145 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  %146 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %145
  br i1 %146, label %155, label %147

147:                                              ; preds = %141, %152
  %148 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %152 ], [ %143, %141 ]
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %148, i64 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = icmp eq i8* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %148, i64 1
  %154 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %145
  br i1 %154, label %219, label %147

155:                                              ; preds = %147, %141
  %156 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %141 ], [ %148, %147 ]
  %157 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %156 to i64
  %158 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %156, %145
  br i1 %158, label %219, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %156, i64 1
  %161 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %160, %145
  br i1 %161, label %214, label %162

162:                                              ; preds = %159
  %163 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 -2, i32 0
  %164 = ptrtoint i8** %163 to i64
  %165 = sub i64 %164, %157
  %166 = lshr i64 %165, 3
  %167 = add nuw nsw i64 %166, 1
  %168 = and i64 %167, 3
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %188, label %170

170:                                              ; preds = %162, %183
  %171 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %185, %183 ], [ %160, %162 ]
  %172 = phi i64 [ %184, %183 ], [ %157, %162 ]
  %173 = phi i64 [ %186, %183 ], [ %168, %162 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %171, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %170
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %172 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %172 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %170
  %184 = phi i64 [ %172, %170 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %171, i64 1
  %186 = add i64 %173, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %170, !llvm.loop !60

188:                                              ; preds = %183, %162
  %189 = phi i64 [ undef, %162 ], [ %184, %183 ]
  %190 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %160, %162 ], [ %185, %183 ]
  %191 = phi i64 [ %157, %162 ], [ %184, %183 ]
  %192 = icmp ult i64 %165, 24
  br i1 %192, label %210, label %193

193:                                              ; preds = %188, %419
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %421, %419 ], [ %190, %188 ]
  %195 = phi i64 [ %420, %419 ], [ %191, %188 ]
  %196 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %193
  %200 = ptrtoint i8* %197 to i64
  %201 = inttoptr i64 %195 to %"class.base::internal::UncheckedObserverAdapter"*
  %202 = inttoptr i64 %195 to i64*
  store i64 %200, i64* %202, align 8
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %201, i64 1
  %204 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %203 to i64
  br label %205

205:                                              ; preds = %199, %193
  %206 = phi i64 [ %195, %193 ], [ %204, %199 ]
  %207 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = icmp eq i8* %208, null
  br i1 %209, label %397, label %391

210:                                              ; preds = %419, %188
  %211 = phi i64 [ %189, %188 ], [ %420, %419 ]
  %212 = inttoptr i64 %211 to %"class.base::internal::UncheckedObserverAdapter"*
  %213 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  br label %214

214:                                              ; preds = %210, %159
  %215 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %159 ], [ %213, %210 ]
  %216 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %156, %159 ], [ %212, %210 ]
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %215
  br i1 %217, label %219, label %218

218:                                              ; preds = %214
  store %"class.base::internal::UncheckedObserverAdapter"* %216, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  br label %219

219:                                              ; preds = %152, %218, %214, %155, %132
  %220 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %82, align 8
  %221 = icmp eq %"class.base::ObserverList"* %220, null
  br i1 %221, label %223, label %222

222:                                              ; preds = %219
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %82, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %85) #15
  br label %223

223:                                              ; preds = %107, %130, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %81) #15
  %224 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %225 = icmp eq %"class.base::ObserverList"* %224, null
  br i1 %225, label %316, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 1
  %228 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 1, i32 0, i32 0, i32 1
  %229 = bitcast %"class.base::internal::LinkNodeBase"** %228 to %"class.base::LinkNode"**
  %230 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %229, align 8
  %231 = bitcast %"class.base::LinkedList"* %227 to %"class.base::LinkNode"**
  %232 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %231, align 8
  %233 = icmp eq %"class.base::LinkNode"* %230, %232
  br i1 %233, label %234, label %312

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %235, align 8
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %224, i64 0, i32 0, i32 0, i32 1
  %238 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  %239 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %238
  br i1 %239, label %248, label %240

240:                                              ; preds = %234, %245
  %241 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %245 ], [ %236, %234 ]
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 1
  %247 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %238
  br i1 %247, label %312, label %240

248:                                              ; preds = %240, %234
  %249 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %234 ], [ %241, %240 ]
  %250 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %249 to i64
  %251 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %249, %238
  br i1 %251, label %312, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 1
  %254 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %253, %238
  br i1 %254, label %307, label %255

255:                                              ; preds = %252
  %256 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 -2, i32 0
  %257 = ptrtoint i8** %256 to i64
  %258 = sub i64 %257, %250
  %259 = lshr i64 %258, 3
  %260 = add nuw nsw i64 %259, 1
  %261 = and i64 %260, 3
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %281, label %263

263:                                              ; preds = %255, %276
  %264 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %278, %276 ], [ %253, %255 ]
  %265 = phi i64 [ %277, %276 ], [ %250, %255 ]
  %266 = phi i64 [ %279, %276 ], [ %261, %255 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %264, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %263
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %265 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %265 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %263
  %277 = phi i64 [ %265, %263 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %264, i64 1
  %279 = add i64 %266, -1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %263, !llvm.loop !61

281:                                              ; preds = %276, %255
  %282 = phi i64 [ undef, %255 ], [ %277, %276 ]
  %283 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %253, %255 ], [ %278, %276 ]
  %284 = phi i64 [ %250, %255 ], [ %277, %276 ]
  %285 = icmp ult i64 %258, 24
  br i1 %285, label %303, label %286

286:                                              ; preds = %281, %387
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %389, %387 ], [ %283, %281 ]
  %288 = phi i64 [ %388, %387 ], [ %284, %281 ]
  %289 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %298, label %292

292:                                              ; preds = %286
  %293 = ptrtoint i8* %290 to i64
  %294 = inttoptr i64 %288 to %"class.base::internal::UncheckedObserverAdapter"*
  %295 = inttoptr i64 %288 to i64*
  store i64 %293, i64* %295, align 8
  %296 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %294, i64 1
  %297 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %296 to i64
  br label %298

298:                                              ; preds = %292, %286
  %299 = phi i64 [ %288, %286 ], [ %297, %292 ]
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 1, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = icmp eq i8* %301, null
  br i1 %302, label %365, label %359

303:                                              ; preds = %387, %281
  %304 = phi i64 [ %282, %281 ], [ %388, %387 ]
  %305 = inttoptr i64 %304 to %"class.base::internal::UncheckedObserverAdapter"*
  %306 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  br label %307

307:                                              ; preds = %303, %252
  %308 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %252 ], [ %306, %303 ]
  %309 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %249, %252 ], [ %305, %303 ]
  %310 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %309, %308
  br i1 %310, label %312, label %311

311:                                              ; preds = %307
  store %"class.base::internal::UncheckedObserverAdapter"* %309, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  br label %312

312:                                              ; preds = %245, %311, %307, %248, %226
  %313 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %314 = icmp eq %"class.base::ObserverList"* %313, null
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %28, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %37) #15
  br label %316

316:                                              ; preds = %223, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #15
  ret void

317:                                              ; preds = %123
  %318 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %318, align 8
  %320 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %319, i64 %126
  %321 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %320 to %"class.viz::SurfaceObserver"**
  %322 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %321, align 8
  %323 = bitcast %"class.viz::SurfaceObserver"* %322 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)***
  %324 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)** %324, i64 3
  %326 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)** %325, align 8
  call void %326(%"class.viz::SurfaceObserver"* %322, %"class.viz::SurfaceId"* dereferenceable(32) %7) #15
  %327 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %328 = icmp eq %"class.base::ObserverList"* %327, null
  br i1 %328, label %329, label %330

329:                                              ; preds = %354, %350, %317, %330, %344
  br label %89

330:                                              ; preds = %317
  %331 = load i64, i64* %29, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %29, align 8
  %333 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %327, i64 0, i32 0, i32 0, i32 1
  %334 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = bitcast %"class.base::ObserverList"* %327 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = sub i64 %335, %337
  %339 = ashr exact i64 %338, 3
  %340 = load i64, i64* %30, align 8
  %341 = icmp ult i64 %339, %340
  %342 = select i1 %341, i64 %339, i64 %340
  %343 = icmp ult i64 %332, %342
  br i1 %343, label %344, label %329

344:                                              ; preds = %330
  %345 = inttoptr i64 %337 to %"class.base::internal::UncheckedObserverAdapter"*
  %346 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %327, i64 0, i32 0, i32 0, i32 0
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %345, i64 %332, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %350, label %329

350:                                              ; preds = %344, %354
  %351 = phi i64 [ %352, %354 ], [ %332, %344 ]
  %352 = add nuw i64 %351, 1
  store i64 %352, i64* %29, align 8
  %353 = icmp ult i64 %352, %342
  br i1 %353, label %354, label %329

354:                                              ; preds = %350
  %355 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %346, align 8
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 %352, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %350, label %329

359:                                              ; preds = %298
  %360 = ptrtoint i8* %301 to i64
  %361 = inttoptr i64 %299 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %299 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %298
  %366 = phi i64 [ %299, %298 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 2, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %376, label %370

370:                                              ; preds = %365
  %371 = ptrtoint i8* %368 to i64
  %372 = inttoptr i64 %366 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %366 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %365
  %377 = phi i64 [ %366, %365 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 3, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 4
  %390 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %389, %238
  br i1 %390, label %303, label %286

391:                                              ; preds = %205
  %392 = ptrtoint i8* %208 to i64
  %393 = inttoptr i64 %206 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %206 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %205
  %398 = phi i64 [ %206, %205 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 2, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %397
  %403 = ptrtoint i8* %400 to i64
  %404 = inttoptr i64 %398 to %"class.base::internal::UncheckedObserverAdapter"*
  %405 = inttoptr i64 %398 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %404, i64 1
  %407 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %406 to i64
  br label %408

408:                                              ; preds = %402, %397
  %409 = phi i64 [ %398, %397 ], [ %407, %402 ]
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 3, i32 0
  %411 = load i8*, i8** %410, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %408
  %414 = ptrtoint i8* %411 to i64
  %415 = inttoptr i64 %409 to %"class.base::internal::UncheckedObserverAdapter"*
  %416 = inttoptr i64 %409 to i64*
  store i64 %414, i64* %416, align 8
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %415, i64 1
  %418 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %417 to i64
  br label %419

419:                                              ; preds = %413, %408
  %420 = phi i64 [ %409, %408 ], [ %418, %413 ]
  %421 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 4
  %422 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %421, %145
  br i1 %422, label %210, label %193
}

declare dereferenceable(248) %"class.viz::CompositorFrameMetadata"* @_ZNK3viz7Surface22GetActiveFrameMetadataEv(%"class.viz::Surface"*) local_unnamed_addr #2

declare void @_ZN3viz7Surface15SendAckToClientEv(%"class.viz::Surface"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz14SurfaceManager18HasBlockedEmbedderERKNS_11FrameSinkIdE(%"class.viz::SurfaceManager"* nocapture readonly, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.253"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.253"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.253"*
  br i1 %10, label %42, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 5
  %14 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  br label %18

18:                                               ; preds = %36, %12
  %19 = phi %"struct.std::__1::pair.253"* [ %4, %12 ], [ %38, %36 ]
  %20 = phi i64 [ %13, %12 ], [ %37, %36 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %22, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %19, i64 %21, i32 0, i32 1
  %25 = load i32, i32* %23, align 4
  %26 = icmp ult i32 %25, %16
  br i1 %26, label %32, label %27

27:                                               ; preds = %18
  %28 = icmp ult i32 %16, %25
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %24, align 4
  %31 = icmp ult i32 %30, %17
  br i1 %31, label %32, label %36

32:                                               ; preds = %29, %18
  %33 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %22, i64 1
  %34 = xor i64 %21, -1
  %35 = add i64 %20, %34
  br label %36

36:                                               ; preds = %32, %29, %27
  %37 = phi i64 [ %35, %32 ], [ %21, %29 ], [ %21, %27 ]
  %38 = phi %"struct.std::__1::pair.253"* [ %33, %32 ], [ %19, %29 ], [ %19, %27 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %18

40:                                               ; preds = %36
  %41 = ptrtoint %"struct.std::__1::pair.253"* %38 to i64
  br label %42

42:                                               ; preds = %40, %2
  %43 = phi i64 [ %41, %40 ], [ %8, %2 ]
  %44 = phi %"struct.std::__1::pair.253"* [ %38, %40 ], [ %4, %2 ]
  %45 = icmp eq %"struct.std::__1::pair.253"* %44, %11
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %48 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %44, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %44, i64 0, i32 0, i32 1
  %51 = load i32, i32* %47, align 4
  %52 = load i32, i32* %49, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %63, label %54

54:                                               ; preds = %46
  %55 = icmp ult i32 %52, %51
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i32, i32* %48, align 4
  %58 = load i32, i32* %50, align 4
  %59 = icmp ult i32 %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %56, %54
  %61 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %44, i64 1
  %62 = ptrtoint %"struct.std::__1::pair.253"* %61 to i64
  br label %63

63:                                               ; preds = %42, %46, %56, %60
  %64 = phi i64 [ %62, %60 ], [ %43, %42 ], [ %43, %56 ], [ %43, %46 ]
  %65 = inttoptr i64 %64 to %"struct.std::__1::pair.253"*
  %66 = icmp eq %"struct.std::__1::pair.253"* %44, %65
  %67 = select i1 %66, %"struct.std::__1::pair.253"* %11, %"struct.std::__1::pair.253"* %44
  %68 = icmp eq %"struct.std::__1::pair.253"* %67, %11
  br i1 %68, label %82, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %67, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %67, i64 0, i32 1, i32 0, i32 1
  %73 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %72, align 8
  %74 = icmp eq %"class.viz::SurfaceAllocationGroup"** %71, %73
  br i1 %74, label %82, label %77

75:                                               ; preds = %77
  %76 = icmp eq %"class.viz::SurfaceAllocationGroup"** %81, %73
  br i1 %76, label %82, label %77

77:                                               ; preds = %69, %75
  %78 = phi %"class.viz::SurfaceAllocationGroup"** [ %81, %75 ], [ %71, %69 ]
  %79 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %78, align 8
  %80 = tail call zeroext i1 @_ZNK3viz22SurfaceAllocationGroup18HasBlockedEmbedderEv(%"class.viz::SurfaceAllocationGroup"* %79) #15
  %81 = getelementptr inbounds %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %78, i64 1
  br i1 %80, label %82, label %75

82:                                               ; preds = %75, %77, %69, %63
  %83 = phi i1 [ false, %63 ], [ false, %69 ], [ false, %75 ], [ true, %77 ]
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager16SurfaceDestroyedEPNS_7SurfaceE(%"class.viz::SurfaceManager"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %6 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !62
  %13 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !62
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !62
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !62
  %20 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8, !alias.scope !62
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !62
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !62
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !62
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !62
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !62
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !62
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #15, !alias.scope !65
  %67 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %309, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %307, %309 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %203, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %297

110:                                              ; preds = %103
  %111 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %111, label %203, label %112

112:                                              ; preds = %90, %110
  %113 = phi %"class.base::ObserverList"* [ %70, %110 ], [ %88, %90 ]
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = bitcast %"class.base::LinkedList"* %114 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode"* %117, %119
  br i1 %120, label %121, label %199

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %123, %125
  br i1 %126, label %135, label %127

127:                                              ; preds = %121, %132
  %128 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %132 ], [ %123, %121 ]
  %129 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 1
  %134 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %133, %125
  br i1 %134, label %199, label %127

135:                                              ; preds = %127, %121
  %136 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %121 ], [ %128, %127 ]
  %137 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %136 to i64
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %125
  br i1 %138, label %199, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 1
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %125
  br i1 %141, label %194, label %142

142:                                              ; preds = %139
  %143 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %125, i64 -2, i32 0
  %144 = ptrtoint i8** %143 to i64
  %145 = sub i64 %144, %137
  %146 = lshr i64 %145, 3
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %168, label %150

150:                                              ; preds = %142, %163
  %151 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %163 ], [ %140, %142 ]
  %152 = phi i64 [ %164, %163 ], [ %137, %142 ]
  %153 = phi i64 [ %166, %163 ], [ %148, %142 ]
  %154 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = ptrtoint i8* %155 to i64
  %159 = inttoptr i64 %152 to %"class.base::internal::UncheckedObserverAdapter"*
  %160 = inttoptr i64 %152 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 1
  %162 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %161 to i64
  br label %163

163:                                              ; preds = %157, %150
  %164 = phi i64 [ %152, %150 ], [ %162, %157 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 1
  %166 = add i64 %153, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %150, !llvm.loop !68

168:                                              ; preds = %163, %142
  %169 = phi i64 [ undef, %142 ], [ %164, %163 ]
  %170 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %142 ], [ %165, %163 ]
  %171 = phi i64 [ %137, %142 ], [ %164, %163 ]
  %172 = icmp ult i64 %145, 24
  br i1 %172, label %190, label %173

173:                                              ; preds = %168, %399
  %174 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %401, %399 ], [ %170, %168 ]
  %175 = phi i64 [ %400, %399 ], [ %171, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %175 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %175 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %377, label %371

190:                                              ; preds = %399, %168
  %191 = phi i64 [ %169, %168 ], [ %400, %399 ]
  %192 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %194

194:                                              ; preds = %190, %139
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %139 ], [ %193, %190 ]
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %139 ], [ %192, %190 ]
  %197 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %196, %195
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  store %"class.base::internal::UncheckedObserverAdapter"* %196, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %199

199:                                              ; preds = %132, %198, %194, %135, %112
  %200 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %201 = icmp eq %"class.base::ObserverList"* %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  br label %203

203:                                              ; preds = %87, %110, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #15
  %204 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %205 = icmp eq %"class.base::ObserverList"* %204, null
  br i1 %205, label %296, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1
  %208 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1, i32 0, i32 0, i32 1
  %209 = bitcast %"class.base::internal::LinkNodeBase"** %208 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = bitcast %"class.base::LinkedList"* %207 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = icmp eq %"class.base::LinkNode"* %210, %212
  br i1 %213, label %214, label %292

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 1
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %218
  br i1 %219, label %228, label %220

220:                                              ; preds = %214, %225
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %225 ], [ %216, %214 ]
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %218
  br i1 %227, label %292, label %220

228:                                              ; preds = %220, %214
  %229 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %214 ], [ %221, %220 ]
  %230 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %229 to i64
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %218
  br i1 %231, label %292, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %218
  br i1 %234, label %287, label %235

235:                                              ; preds = %232
  %236 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 -2, i32 0
  %237 = ptrtoint i8** %236 to i64
  %238 = sub i64 %237, %230
  %239 = lshr i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %261, label %243

243:                                              ; preds = %235, %256
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %258, %256 ], [ %233, %235 ]
  %245 = phi i64 [ %257, %256 ], [ %230, %235 ]
  %246 = phi i64 [ %259, %256 ], [ %241, %235 ]
  %247 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %243
  %251 = ptrtoint i8* %248 to i64
  %252 = inttoptr i64 %245 to %"class.base::internal::UncheckedObserverAdapter"*
  %253 = inttoptr i64 %245 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 1
  %255 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %254 to i64
  br label %256

256:                                              ; preds = %250, %243
  %257 = phi i64 [ %245, %243 ], [ %255, %250 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1
  %259 = add i64 %246, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %243, !llvm.loop !69

261:                                              ; preds = %256, %235
  %262 = phi i64 [ undef, %235 ], [ %257, %256 ]
  %263 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %235 ], [ %258, %256 ]
  %264 = phi i64 [ %230, %235 ], [ %257, %256 ]
  %265 = icmp ult i64 %238, 24
  br i1 %265, label %283, label %266

266:                                              ; preds = %261, %367
  %267 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %369, %367 ], [ %263, %261 ]
  %268 = phi i64 [ %368, %367 ], [ %264, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %266
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %268 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %266
  %279 = phi i64 [ %268, %266 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 1, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %345, label %339

283:                                              ; preds = %367, %261
  %284 = phi i64 [ %262, %261 ], [ %368, %367 ]
  %285 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %287

287:                                              ; preds = %283, %232
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %232 ], [ %286, %283 ]
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %232 ], [ %285, %283 ]
  %290 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %289, %288
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  store %"class.base::internal::UncheckedObserverAdapter"* %289, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %292

292:                                              ; preds = %225, %291, %287, %228, %206
  %293 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %294 = icmp eq %"class.base::ObserverList"* %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %296

296:                                              ; preds = %203, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret void

297:                                              ; preds = %103
  %298 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %298, align 8
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 %106
  %301 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %300 to %"class.viz::SurfaceObserver"**
  %302 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %301, align 8
  %303 = bitcast %"class.viz::SurfaceObserver"* %302 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)***
  %304 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)** %304, i64 5
  %306 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)** %305, align 8
  call void %306(%"class.viz::SurfaceObserver"* %302, %"class.viz::SurfaceId"* dereferenceable(32) %67) #15
  %307 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %308 = icmp eq %"class.base::ObserverList"* %307, null
  br i1 %308, label %309, label %310

309:                                              ; preds = %334, %330, %297, %310, %324
  br label %69

310:                                              ; preds = %297
  %311 = load i64, i64* %8, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %8, align 8
  %313 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %307, i64 0, i32 0, i32 0, i32 1
  %314 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.base::ObserverList"* %307 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 %315, %317
  %319 = ashr exact i64 %318, 3
  %320 = load i64, i64* %9, align 8
  %321 = icmp ult i64 %319, %320
  %322 = select i1 %321, i64 %319, i64 %320
  %323 = icmp ult i64 %312, %322
  br i1 %323, label %324, label %309

324:                                              ; preds = %310
  %325 = inttoptr i64 %317 to %"class.base::internal::UncheckedObserverAdapter"*
  %326 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %307, i64 0, i32 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %325, i64 %312, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %330, label %309

330:                                              ; preds = %324, %334
  %331 = phi i64 [ %332, %334 ], [ %312, %324 ]
  %332 = add nuw i64 %331, 1
  store i64 %332, i64* %8, align 8
  %333 = icmp ult i64 %332, %322
  br i1 %333, label %334, label %309

334:                                              ; preds = %330
  %335 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %326, align 8
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %335, i64 %332, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %330, label %309

339:                                              ; preds = %278
  %340 = ptrtoint i8* %281 to i64
  %341 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = inttoptr i64 %279 to i64*
  store i64 %340, i64* %342, align 8
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 1
  %344 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %343 to i64
  br label %345

345:                                              ; preds = %339, %278
  %346 = phi i64 [ %279, %278 ], [ %344, %339 ]
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 2, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %356, label %350

350:                                              ; preds = %345
  %351 = ptrtoint i8* %348 to i64
  %352 = inttoptr i64 %346 to %"class.base::internal::UncheckedObserverAdapter"*
  %353 = inttoptr i64 %346 to i64*
  store i64 %351, i64* %353, align 8
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %352, i64 1
  %355 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %354 to i64
  br label %356

356:                                              ; preds = %350, %345
  %357 = phi i64 [ %346, %345 ], [ %355, %350 ]
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 3, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %367, label %361

361:                                              ; preds = %356
  %362 = ptrtoint i8* %359 to i64
  %363 = inttoptr i64 %357 to %"class.base::internal::UncheckedObserverAdapter"*
  %364 = inttoptr i64 %357 to i64*
  store i64 %362, i64* %364, align 8
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %363, i64 1
  %366 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %365 to i64
  br label %367

367:                                              ; preds = %361, %356
  %368 = phi i64 [ %357, %356 ], [ %366, %361 ]
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 4
  %370 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %369, %218
  br i1 %370, label %283, label %266

371:                                              ; preds = %185
  %372 = ptrtoint i8* %188 to i64
  %373 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %186 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %185
  %378 = phi i64 [ %186, %185 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 2, i32 0
  %380 = load i8*, i8** %379, align 8
  %381 = icmp eq i8* %380, null
  br i1 %381, label %388, label %382

382:                                              ; preds = %377
  %383 = ptrtoint i8* %380 to i64
  %384 = inttoptr i64 %378 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %378 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %377
  %389 = phi i64 [ %378, %377 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 3, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %399, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %391 to i64
  %395 = inttoptr i64 %389 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %389 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %388
  %400 = phi i64 [ %389, %388 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 4
  %402 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %401, %125
  br i1 %402, label %190, label %173
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager21SurfaceDamageExpectedERKNS_9SurfaceIdERKNS_14BeginFrameArgsE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameArgs"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %7 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8, !noalias !70
  %14 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !70
  %16 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %13, %15
  %17 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %17) #15
  br i1 %16, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.base::ObserverList"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #15, !alias.scope !70
  br label %60

20:                                               ; preds = %3
  store %"class.base::ObserverList"* %6, %"class.base::ObserverList"** %8, align 8, !alias.scope !70
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %17, %"class.base::internal::LinkNodeBase"* %21) #15
  store i64 0, i64* %9, align 8, !alias.scope !70
  %22 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %23 = load i32, i32* %22, align 8, !noalias !70
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %14 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !70
  %28 = bitcast %"class.base::ObserverList"* %6 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !70
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 3
  br label %32

32:                                               ; preds = %25, %20
  %33 = phi i64 [ %31, %25 ], [ -1, %20 ]
  store i64 %33, i64* %10, align 8, !alias.scope !70
  %34 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8, !alias.scope !70
  %35 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::ObserverList"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, %33
  %43 = select i1 %42, i64 %41, i64 %33
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %32
  %46 = inttoptr i64 %39 to %"class.base::internal::UncheckedObserverAdapter"*
  %47 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %46, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %60

51:                                               ; preds = %45, %55
  %52 = phi i64 [ %53, %55 ], [ 0, %45 ]
  %53 = add nuw i64 %52, 1
  store i64 %53, i64* %9, align 8, !alias.scope !70
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %47, align 8
  %57 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %56, i64 %53, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %51, label %60

60:                                               ; preds = %51, %55, %18, %32, %45
  %61 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #15
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %65 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %65) #15
  %67 = bitcast %"class.base::ObserverList"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #15, !alias.scope !73
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  br label %69

69:                                               ; preds = %309, %60
  %70 = phi %"class.base::ObserverList"* [ %68, %60 ], [ %307, %309 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %9, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %10, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %203, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %63, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %64, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %9, align 8
  %107 = load i64, i64* %63, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %297

110:                                              ; preds = %103
  %111 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %111, label %203, label %112

112:                                              ; preds = %90, %110
  %113 = phi %"class.base::ObserverList"* [ %70, %110 ], [ %88, %90 ]
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = bitcast %"class.base::LinkedList"* %114 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode"* %117, %119
  br i1 %120, label %121, label %199

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %123, %125
  br i1 %126, label %135, label %127

127:                                              ; preds = %121, %132
  %128 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %132 ], [ %123, %121 ]
  %129 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 1
  %134 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %133, %125
  br i1 %134, label %199, label %127

135:                                              ; preds = %127, %121
  %136 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %121 ], [ %128, %127 ]
  %137 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %136 to i64
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %125
  br i1 %138, label %199, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 1
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %125
  br i1 %141, label %194, label %142

142:                                              ; preds = %139
  %143 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %125, i64 -2, i32 0
  %144 = ptrtoint i8** %143 to i64
  %145 = sub i64 %144, %137
  %146 = lshr i64 %145, 3
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %168, label %150

150:                                              ; preds = %142, %163
  %151 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %163 ], [ %140, %142 ]
  %152 = phi i64 [ %164, %163 ], [ %137, %142 ]
  %153 = phi i64 [ %166, %163 ], [ %148, %142 ]
  %154 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = ptrtoint i8* %155 to i64
  %159 = inttoptr i64 %152 to %"class.base::internal::UncheckedObserverAdapter"*
  %160 = inttoptr i64 %152 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 1
  %162 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %161 to i64
  br label %163

163:                                              ; preds = %157, %150
  %164 = phi i64 [ %152, %150 ], [ %162, %157 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 1
  %166 = add i64 %153, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %150, !llvm.loop !76

168:                                              ; preds = %163, %142
  %169 = phi i64 [ undef, %142 ], [ %164, %163 ]
  %170 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %142 ], [ %165, %163 ]
  %171 = phi i64 [ %137, %142 ], [ %164, %163 ]
  %172 = icmp ult i64 %145, 24
  br i1 %172, label %190, label %173

173:                                              ; preds = %168, %399
  %174 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %401, %399 ], [ %170, %168 ]
  %175 = phi i64 [ %400, %399 ], [ %171, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %175 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %175 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %377, label %371

190:                                              ; preds = %399, %168
  %191 = phi i64 [ %169, %168 ], [ %400, %399 ]
  %192 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %194

194:                                              ; preds = %190, %139
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %139 ], [ %193, %190 ]
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %139 ], [ %192, %190 ]
  %197 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %196, %195
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  store %"class.base::internal::UncheckedObserverAdapter"* %196, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %199

199:                                              ; preds = %132, %198, %194, %135, %112
  %200 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  %201 = icmp eq %"class.base::ObserverList"* %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %62, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %65) #15
  br label %203

203:                                              ; preds = %87, %110, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #15
  %204 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %205 = icmp eq %"class.base::ObserverList"* %204, null
  br i1 %205, label %296, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1
  %208 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1, i32 0, i32 0, i32 1
  %209 = bitcast %"class.base::internal::LinkNodeBase"** %208 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = bitcast %"class.base::LinkedList"* %207 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = icmp eq %"class.base::LinkNode"* %210, %212
  br i1 %213, label %214, label %292

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 1
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %218
  br i1 %219, label %228, label %220

220:                                              ; preds = %214, %225
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %225 ], [ %216, %214 ]
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %218
  br i1 %227, label %292, label %220

228:                                              ; preds = %220, %214
  %229 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %214 ], [ %221, %220 ]
  %230 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %229 to i64
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %218
  br i1 %231, label %292, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %218
  br i1 %234, label %287, label %235

235:                                              ; preds = %232
  %236 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 -2, i32 0
  %237 = ptrtoint i8** %236 to i64
  %238 = sub i64 %237, %230
  %239 = lshr i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %261, label %243

243:                                              ; preds = %235, %256
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %258, %256 ], [ %233, %235 ]
  %245 = phi i64 [ %257, %256 ], [ %230, %235 ]
  %246 = phi i64 [ %259, %256 ], [ %241, %235 ]
  %247 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %243
  %251 = ptrtoint i8* %248 to i64
  %252 = inttoptr i64 %245 to %"class.base::internal::UncheckedObserverAdapter"*
  %253 = inttoptr i64 %245 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 1
  %255 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %254 to i64
  br label %256

256:                                              ; preds = %250, %243
  %257 = phi i64 [ %245, %243 ], [ %255, %250 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1
  %259 = add i64 %246, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %243, !llvm.loop !77

261:                                              ; preds = %256, %235
  %262 = phi i64 [ undef, %235 ], [ %257, %256 ]
  %263 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %235 ], [ %258, %256 ]
  %264 = phi i64 [ %230, %235 ], [ %257, %256 ]
  %265 = icmp ult i64 %238, 24
  br i1 %265, label %283, label %266

266:                                              ; preds = %261, %367
  %267 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %369, %367 ], [ %263, %261 ]
  %268 = phi i64 [ %368, %367 ], [ %264, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %266
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %268 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %266
  %279 = phi i64 [ %268, %266 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 1, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %345, label %339

283:                                              ; preds = %367, %261
  %284 = phi i64 [ %262, %261 ], [ %368, %367 ]
  %285 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %287

287:                                              ; preds = %283, %232
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %232 ], [ %286, %283 ]
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %232 ], [ %285, %283 ]
  %290 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %289, %288
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  store %"class.base::internal::UncheckedObserverAdapter"* %289, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %292

292:                                              ; preds = %225, %291, %287, %228, %206
  %293 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %294 = icmp eq %"class.base::ObserverList"* %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %8, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %17) #15
  br label %296

296:                                              ; preds = %203, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #15
  ret void

297:                                              ; preds = %103
  %298 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %298, align 8
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 %106
  %301 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %300 to %"class.viz::SurfaceObserver"**
  %302 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %301, align 8
  %303 = bitcast %"class.viz::SurfaceObserver"* %302 to void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)***
  %304 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)** %304, i64 7
  %306 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)** %305, align 8
  call void %306(%"class.viz::SurfaceObserver"* %302, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %2) #15
  %307 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %308 = icmp eq %"class.base::ObserverList"* %307, null
  br i1 %308, label %309, label %310

309:                                              ; preds = %334, %330, %297, %310, %324
  br label %69

310:                                              ; preds = %297
  %311 = load i64, i64* %9, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %9, align 8
  %313 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %307, i64 0, i32 0, i32 0, i32 1
  %314 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.base::ObserverList"* %307 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 %315, %317
  %319 = ashr exact i64 %318, 3
  %320 = load i64, i64* %10, align 8
  %321 = icmp ult i64 %319, %320
  %322 = select i1 %321, i64 %319, i64 %320
  %323 = icmp ult i64 %312, %322
  br i1 %323, label %324, label %309

324:                                              ; preds = %310
  %325 = inttoptr i64 %317 to %"class.base::internal::UncheckedObserverAdapter"*
  %326 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %307, i64 0, i32 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %325, i64 %312, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %330, label %309

330:                                              ; preds = %324, %334
  %331 = phi i64 [ %332, %334 ], [ %312, %324 ]
  %332 = add nuw i64 %331, 1
  store i64 %332, i64* %9, align 8
  %333 = icmp ult i64 %332, %322
  br i1 %333, label %334, label %309

334:                                              ; preds = %330
  %335 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %326, align 8
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %335, i64 %332, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %330, label %309

339:                                              ; preds = %278
  %340 = ptrtoint i8* %281 to i64
  %341 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = inttoptr i64 %279 to i64*
  store i64 %340, i64* %342, align 8
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 1
  %344 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %343 to i64
  br label %345

345:                                              ; preds = %339, %278
  %346 = phi i64 [ %279, %278 ], [ %344, %339 ]
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 2, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %356, label %350

350:                                              ; preds = %345
  %351 = ptrtoint i8* %348 to i64
  %352 = inttoptr i64 %346 to %"class.base::internal::UncheckedObserverAdapter"*
  %353 = inttoptr i64 %346 to i64*
  store i64 %351, i64* %353, align 8
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %352, i64 1
  %355 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %354 to i64
  br label %356

356:                                              ; preds = %350, %345
  %357 = phi i64 [ %346, %345 ], [ %355, %350 ]
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 3, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %367, label %361

361:                                              ; preds = %356
  %362 = ptrtoint i8* %359 to i64
  %363 = inttoptr i64 %357 to %"class.base::internal::UncheckedObserverAdapter"*
  %364 = inttoptr i64 %357 to i64*
  store i64 %362, i64* %364, align 8
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %363, i64 1
  %366 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %365 to i64
  br label %367

367:                                              ; preds = %361, %356
  %368 = phi i64 [ %357, %356 ], [ %366, %361 ]
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 4
  %370 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %369, %218
  br i1 %370, label %283, label %266

371:                                              ; preds = %185
  %372 = ptrtoint i8* %188 to i64
  %373 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %186 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %185
  %378 = phi i64 [ %186, %185 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 2, i32 0
  %380 = load i8*, i8** %379, align 8
  %381 = icmp eq i8* %380, null
  br i1 %381, label %388, label %382

382:                                              ; preds = %377
  %383 = ptrtoint i8* %380 to i64
  %384 = inttoptr i64 %378 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %378 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %377
  %389 = phi i64 [ %378, %377 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 3, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %399, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %391 to i64
  %395 = inttoptr i64 %389 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %389 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %388
  %400 = phi i64 [ %389, %388 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 4
  %402 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %401, %125
  br i1 %402, label %190, label %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.263"* @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE5eraseENS5_11__wrap_iterIPSF_EE(%"class.base::internal::flat_tree.260"*, %"struct.std::__1::pair.263"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.260", %"class.base::internal::flat_tree.260"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.263"* %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #15
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %10 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"struct.std::__1::pair.263"* [ %5, %2 ], [ %10, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 1
  %14 = icmp eq %"struct.std::__1::pair.263"* %13, %12
  br i1 %14, label %38, label %15

15:                                               ; preds = %11, %31
  %16 = phi %"struct.std::__1::pair.263"* [ %33, %31 ], [ %1, %11 ]
  %17 = phi %"struct.std::__1::pair.263"* [ %32, %31 ], [ %13, %11 ]
  %18 = bitcast %"struct.std::__1::pair.263"* %16 to i8*
  %19 = bitcast %"struct.std::__1::pair.263"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false) #15
  %20 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %16, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.264"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %22, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %21, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.viz::Surface"*, %"class.viz::Surface"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.264"* %21 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.viz::Surface"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %15
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %26) #15
  %30 = bitcast %"class.viz::Surface"* %26 to i8*
  call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %29, %15
  %32 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %17, i64 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %16, i64 1
  %34 = icmp eq %"struct.std::__1::pair.263"* %32, %12
  br i1 %34, label %35, label %15

35:                                               ; preds = %31
  %36 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  %37 = icmp eq %"struct.std::__1::pair.263"* %36, %33
  br i1 %37, label %51, label %38

38:                                               ; preds = %35, %11
  %39 = phi %"struct.std::__1::pair.263"* [ %33, %35 ], [ %1, %11 ]
  %40 = phi %"struct.std::__1::pair.263"* [ %36, %35 ], [ %12, %11 ]
  br label %41

41:                                               ; preds = %49, %38
  %42 = phi %"struct.std::__1::pair.263"* [ %43, %49 ], [ %40, %38 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %42, i64 -1
  %44 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %42, i64 -1, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.viz::Surface"*, %"class.viz::Surface"** %44, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %44, align 8
  %46 = icmp eq %"class.viz::Surface"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %45) #15
  %48 = bitcast %"class.viz::Surface"* %45 to i8*
  call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %47, %41
  %50 = icmp eq %"struct.std::__1::pair.263"* %43, %39
  br i1 %50, label %51, label %41

51:                                               ; preds = %49, %35
  %52 = phi %"struct.std::__1::pair.263"* [ %33, %35 ], [ %39, %49 ]
  store %"struct.std::__1::pair.263"* %52, %"struct.std::__1::pair.263"** %4, align 8
  ret %"struct.std::__1::pair.263"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager18SurfaceWillBeDrawnEPNS_7SurfaceE(%"class.viz::SurfaceManager"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5
  %6 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !78
  %13 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !78
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !78
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !78
  %20 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8, !alias.scope !78
  %21 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 5, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !78
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !78
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !78
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !78
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !78
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !78
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<viz::SurfaceObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #15, !alias.scope !81
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %308, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %306, %308 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !84

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %398
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %169, %167 ]
  %174 = phi i64 [ %399, %398 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %376, label %370

189:                                              ; preds = %398, %167
  %190 = phi i64 [ %168, %167 ], [ %399, %398 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #15
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !85

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %366
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %368, %366 ], [ %262, %260 ]
  %267 = phi i64 [ %367, %366 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %344, label %338

282:                                              ; preds = %366, %260
  %283 = phi i64 [ %261, %260 ], [ %367, %366 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.viz::SurfaceObserver"**
  %301 = load %"class.viz::SurfaceObserver"*, %"class.viz::SurfaceObserver"** %300, align 8
  %302 = bitcast %"class.viz::SurfaceObserver"* %301 to void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)***
  %303 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)**, void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)** %303, i64 8
  %305 = load void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)*, void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)** %304, align 8
  call void %305(%"class.viz::SurfaceObserver"* %301, %"class.viz::Surface"* %1) #15
  %306 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %307 = icmp eq %"class.base::ObserverList"* %306, null
  br i1 %307, label %308, label %309

308:                                              ; preds = %333, %329, %296, %309, %323
  br label %68

309:                                              ; preds = %296
  %310 = load i64, i64* %8, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %8, align 8
  %312 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.base::ObserverList"* %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = load i64, i64* %9, align 8
  %320 = icmp ult i64 %318, %319
  %321 = select i1 %320, i64 %318, i64 %319
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %323, label %308

323:                                              ; preds = %309
  %324 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 %311, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %308

329:                                              ; preds = %323, %333
  %330 = phi i64 [ %331, %333 ], [ %311, %323 ]
  %331 = add nuw i64 %330, 1
  store i64 %331, i64* %8, align 8
  %332 = icmp ult i64 %331, %321
  br i1 %332, label %333, label %308

333:                                              ; preds = %329
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %325, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %331, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %329, label %308

338:                                              ; preds = %277
  %339 = ptrtoint i8* %280 to i64
  %340 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %278 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %277
  %345 = phi i64 [ %278, %277 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %355, label %349

349:                                              ; preds = %344
  %350 = ptrtoint i8* %347 to i64
  %351 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %345 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %344
  %356 = phi i64 [ %345, %344 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %369 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %368, %217
  br i1 %369, label %282, label %265

370:                                              ; preds = %184
  %371 = ptrtoint i8* %187 to i64
  %372 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %185 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %184
  %377 = phi i64 [ %185, %184 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %124
  br i1 %401, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager22DropTemporaryReferenceERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3viz14SurfaceManager28RemoveTemporaryReferenceImplERKNS_9SurfaceIdENS0_13RemovedReasonE(%"class.viz::SurfaceManager"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %1, i32 undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8flat_mapINS_16UnguessableTokenENSt3__110unique_ptrIN3viz22SurfaceAllocationGroupENS2_14default_deleteIS5_EEEENS2_4lessIvEENS2_6vectorINS2_4pairIS1_S8_EENS2_9allocatorISD_EEEEEixERKS1_(%"class.base::flat_map"*, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  br i1 %11, label %41, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 24
  %15 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 1
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  br label %19

19:                                               ; preds = %37, %13
  %20 = phi %"struct.std::__1::pair"* [ %5, %13 ], [ %39, %37 ]
  %21 = phi i64 [ %14, %13 ], [ %38, %37 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22, i32 0, i32 0, i32 1
  %26 = load i64, i64* %24, align 8
  %27 = icmp ult i64 %26, %17
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = icmp ult i64 %17, %26
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = load i64, i64* %25, align 8
  %32 = icmp ult i64 %31, %18
  br i1 %32, label %33, label %37

33:                                               ; preds = %30, %19
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %35 = xor i64 %22, -1
  %36 = add i64 %21, %35
  br label %37

37:                                               ; preds = %33, %30, %28
  %38 = phi i64 [ %36, %33 ], [ %22, %30 ], [ %22, %28 ]
  %39 = phi %"struct.std::__1::pair"* [ %34, %33 ], [ %20, %30 ], [ %20, %28 ]
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %19

41:                                               ; preds = %37, %2
  %42 = phi %"struct.std::__1::pair"* [ %5, %2 ], [ %39, %37 ]
  %43 = icmp eq %"struct.std::__1::pair"* %42, %12
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %45, align 8
  %50 = load i64, i64* %47, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %44
  %53 = icmp ult i64 %50, %49
  br i1 %53, label %69, label %54

54:                                               ; preds = %52
  %55 = load i64, i64* %46, align 8
  %56 = load i64, i64* %48, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %58, label %69

58:                                               ; preds = %44, %41, %54
  %59 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  %60 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0
  %62 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4base16UnguessableTokenENS_10unique_ptrIN3viz22SurfaceAllocationGroupENS_14default_deleteIS6_EEEEEENS_9allocatorISA_EEE7emplaceIJRKS3_S9_EEENS_11__wrap_iterIPSA_EENSH_IPKSA_EEDpOT_(%"class.std::__1::vector"* %61, %"struct.std::__1::pair"* %42, %"class.base::UnguessableToken"* dereferenceable(16) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #15
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %63, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %63, align 8
  %65 = icmp eq %"class.viz::SurfaceAllocationGroup"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %58
  call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %64) #15
  %67 = bitcast %"class.viz::SurfaceAllocationGroup"* %64 to i8*
  call void @_ZdlPv(i8* %67) #16
  br label %68

68:                                               ; preds = %58, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  br label %69

69:                                               ; preds = %52, %68, %54
  %70 = phi %"struct.std::__1::pair"* [ %62, %68 ], [ %42, %54 ], [ %42, %52 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1
  ret %"class.std::__1::unique_ptr"* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.190"* @_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorIPNS1_22SurfaceAllocationGroupENS3_9allocatorIS6_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S9_EENS7_ISD_EEEEEixERKS2_(%"class.base::flat_map.249"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.190", align 8
  %4 = getelementptr inbounds %"class.base::flat_map.249", %"class.base::flat_map.249"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.249", %"class.base::flat_map.249"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.253"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.253"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.253"*
  br i1 %11, label %41, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 5
  %15 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  br label %19

19:                                               ; preds = %37, %13
  %20 = phi %"struct.std::__1::pair.253"* [ %5, %13 ], [ %39, %37 ]
  %21 = phi i64 [ %14, %13 ], [ %38, %37 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %20, i64 %22, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = icmp ult i32 %26, %17
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = icmp ult i32 %17, %26
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %25, align 4
  %32 = icmp ult i32 %31, %18
  br i1 %32, label %33, label %37

33:                                               ; preds = %30, %19
  %34 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %23, i64 1
  %35 = xor i64 %22, -1
  %36 = add i64 %21, %35
  br label %37

37:                                               ; preds = %33, %30, %28
  %38 = phi i64 [ %36, %33 ], [ %22, %30 ], [ %22, %28 ]
  %39 = phi %"struct.std::__1::pair.253"* [ %34, %33 ], [ %20, %30 ], [ %20, %28 ]
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %19

41:                                               ; preds = %37, %2
  %42 = phi %"struct.std::__1::pair.253"* [ %5, %2 ], [ %39, %37 ]
  %43 = icmp eq %"struct.std::__1::pair.253"* %42, %12
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %46 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %42, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %42, i64 0, i32 0, i32 1
  %49 = load i32, i32* %45, align 4
  %50 = load i32, i32* %47, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %44
  %53 = icmp ult i32 %50, %49
  br i1 %53, label %71, label %54

54:                                               ; preds = %52
  %55 = load i32, i32* %46, align 4
  %56 = load i32, i32* %48, align 4
  %57 = icmp ult i32 %55, %56
  br i1 %57, label %58, label %71

58:                                               ; preds = %44, %41, %54
  %59 = bitcast %"class.std::__1::vector.190"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #15
  %60 = getelementptr inbounds %"class.base::flat_map.249", %"class.base::flat_map.249"* %0, i64 0, i32 0, i32 0
  %61 = call %"struct.std::__1::pair.253"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS0_IPNS2_22SurfaceAllocationGroupENS_9allocatorIS5_EEEEEENS6_IS9_EEE7emplaceIJRKS3_S8_EEENS_11__wrap_iterIPS9_EENSF_IPKS9_EEDpOT_(%"class.std::__1::vector.251"* %60, %"struct.std::__1::pair.253"* %42, %"class.viz::FrameSinkId"* dereferenceable(8) %1, %"class.std::__1::vector.190"* nonnull dereferenceable(24) %3) #15
  %62 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %62, align 8
  %64 = icmp eq %"class.viz::SurfaceAllocationGroup"** %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %58
  %66 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %63 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %3, i64 0, i32 0, i32 1
  %68 = bitcast %"class.viz::SurfaceAllocationGroup"*** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.viz::SurfaceAllocationGroup"** %63 to i8*
  call void @_ZdlPv(i8* %69) #16
  br label %70

70:                                               ; preds = %58, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #15
  br label %71

71:                                               ; preds = %52, %70, %54
  %72 = phi %"struct.std::__1::pair.253"* [ %61, %70 ], [ %42, %54 ], [ %42, %52 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %72, i64 0, i32 1
  ret %"class.std::__1::vector.190"* %73
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz14SurfaceManager40SetAllocationGroupsNeedGarbageCollectionEv(%"class.viz::SurfaceManager"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 15
  store i8 1, i8* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK3viz22SurfaceAllocationGroup16IsReadyToDestroyEv(%"class.viz::SurfaceAllocationGroup"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.253"* @_ZN4base8internal9flat_treeIN3viz11FrameSinkIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS8_IPNS2_22SurfaceAllocationGroupENS5_9allocatorISB_EEEEEENSC_ISF_EEEEE5eraseENS5_11__wrap_iterIPSF_EE(%"class.base::internal::flat_tree.250"*, %"struct.std::__1::pair.253"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.250", %"class.base::internal::flat_tree.250"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.253"* %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #15
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %10 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"struct.std::__1::pair.253"* [ %5, %2 ], [ %10, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 1
  %14 = icmp eq %"struct.std::__1::pair.253"* %13, %12
  br i1 %14, label %53, label %15

15:                                               ; preds = %11, %32
  %16 = phi %"struct.std::__1::pair.253"* [ %48, %32 ], [ %1, %11 ]
  %17 = phi %"struct.std::__1::pair.253"* [ %47, %32 ], [ %13, %11 ]
  %18 = bitcast %"struct.std::__1::pair.253"* %17 to i64*
  %19 = bitcast %"struct.std::__1::pair.253"* %16 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %17, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %16, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %23, align 8
  %25 = icmp eq %"class.viz::SurfaceAllocationGroup"** %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %15
  %27 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %16, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast %"class.viz::SurfaceAllocationGroup"*** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.viz::SurfaceAllocationGroup"** %24 to i8*
  call void @_ZdlPv(i8* %30) #16
  %31 = bitcast %"class.std::__1::vector.190"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #15
  br label %32

32:                                               ; preds = %15, %26
  %33 = bitcast %"class.std::__1::vector.190"* %21 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.190"* %22 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %17, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast %"class.viz::SurfaceAllocationGroup"*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %16, i64 0, i32 1, i32 0, i32 1
  %40 = bitcast %"class.viz::SurfaceAllocationGroup"*** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %17, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.viz::SurfaceAllocationGroup"*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %16, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.viz::SurfaceAllocationGroup"*** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.190"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #15
  %47 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %17, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %16, i64 1
  %49 = icmp eq %"struct.std::__1::pair.253"* %47, %12
  br i1 %49, label %50, label %15

50:                                               ; preds = %32
  %51 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  %52 = icmp eq %"struct.std::__1::pair.253"* %51, %48
  br i1 %52, label %69, label %53

53:                                               ; preds = %50, %11
  %54 = phi %"struct.std::__1::pair.253"* [ %48, %50 ], [ %1, %11 ]
  %55 = phi %"struct.std::__1::pair.253"* [ %51, %50 ], [ %12, %11 ]
  br label %56

56:                                               ; preds = %67, %53
  %57 = phi %"struct.std::__1::pair.253"* [ %58, %67 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %57, i64 -1
  %59 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %57, i64 -1, i32 1, i32 0, i32 0
  %60 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %59, align 8
  %61 = icmp eq %"class.viz::SurfaceAllocationGroup"** %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %60 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %57, i64 -1, i32 1, i32 0, i32 1
  %65 = bitcast %"class.viz::SurfaceAllocationGroup"*** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.viz::SurfaceAllocationGroup"** %60 to i8*
  call void @_ZdlPv(i8* %66) #16
  br label %67

67:                                               ; preds = %62, %56
  %68 = icmp eq %"struct.std::__1::pair.253"* %58, %54
  br i1 %68, label %69, label %56

69:                                               ; preds = %67, %50
  %70 = phi %"struct.std::__1::pair.253"* [ %48, %50 ], [ %54, %67 ]
  store %"struct.std::__1::pair.253"* %70, %"struct.std::__1::pair.253"** %4, align 8
  ret %"struct.std::__1::pair.253"* %1
}

declare zeroext i1 @_ZNK3viz22SurfaceAllocationGroup18HasBlockedEmbedderEv(%"class.viz::SurfaceAllocationGroup"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SurfaceManager27AggregatedFrameSinksChangedEv(%"class.viz::SurfaceManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %0, i64 0, i32 0
  %3 = load %"class.viz::SurfaceManagerDelegate"*, %"class.viz::SurfaceManagerDelegate"** %2, align 8
  %4 = icmp eq %"class.viz::SurfaceManagerDelegate"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.viz::SurfaceManagerDelegate"* %3 to void (%"class.viz::SurfaceManagerDelegate"*)***
  %7 = load void (%"class.viz::SurfaceManagerDelegate"*)**, void (%"class.viz::SurfaceManagerDelegate"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.viz::SurfaceManagerDelegate"*)*, void (%"class.viz::SurfaceManagerDelegate"*)** %7, i64 3
  %9 = load void (%"class.viz::SurfaceManagerDelegate"*)*, void (%"class.viz::SurfaceManagerDelegate"*)** %8, align 8
  tail call void %9(%"class.viz::SurfaceManagerDelegate"* nonnull %3) #15
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3viz9SurfaceIdEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #15
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #15
  %15 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #15
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #15
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %23, align 8
  %25 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %24, i64 %1
  ret %"class.viz::SurfaceId"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

declare void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #2

declare void @_ZN3viz7SurfaceC1ERKNS_11SurfaceInfoEPNS_14SurfaceManagerEPNS_22SurfaceAllocationGroupEN4base7WeakPtrINS_13SurfaceClientEEE(%"class.viz::Surface"*, %"class.viz::SurfaceInfo"* dereferenceable(48), %"class.viz::SurfaceManager"*, %"class.viz::SurfaceAllocationGroup"*, %"class.base::WeakPtr"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"*) unnamed_addr #3

declare void @_ZN3viz25SurfaceDependencyDeadlineC1EPKN4base9TickClockE(%"class.viz::SurfaceDependencyDeadline"*, %"class.base::TickClock"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.263"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS_10unique_ptrINS2_7SurfaceENS_14default_deleteIS5_EEEEEENS_9allocatorIS9_EEE7emplaceIJRKS3_S8_EEENS_11__wrap_iterIPS9_EENSG_IPKS9_EEDpOT_(%"class.std::__1::vector.261"*, %"struct.std::__1::pair.263"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.std::__1::unique_ptr.264"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = ptrtoint %"struct.std::__1::pair.263"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair.263"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair.263"* %12 to i64
  br i1 %13, label %15, label %125

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.263"* %10, %1
  br i1 %16, label %17, label %42

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %27, align 4
  %30 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 0, i32 1, i32 2
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %32 = bitcast %"class.base::UnguessableToken"* %30 to i8*
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #15
  %34 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr.264"* %3 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %35, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.264"* %34 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.263"* %39 to i64
  %41 = bitcast %"struct.std::__1::pair.263"** %9 to i64*
  store i64 %40, i64* %41, align 8
  br label %285

42:                                               ; preds = %15
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43)
  %44 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 4
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %47 = bitcast %"class.base::UnguessableToken"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %47, i64 16, i1 false)
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::unique_ptr.264"* %3 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %48, align 8
  %51 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %9, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 1
  %53 = ptrtoint %"struct.std::__1::pair.263"* %51 to i64
  %54 = ptrtoint %"struct.std::__1::pair.263"* %52 to i64
  %55 = sub i64 %53, %54
  %56 = sdiv exact i64 %55, 40
  %57 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 %56
  %58 = bitcast %"struct.std::__1::pair.263"** %9 to i64*
  %59 = icmp ult %"struct.std::__1::pair.263"* %57, %51
  br i1 %59, label %85, label %62

60:                                               ; preds = %85
  %61 = ptrtoint %"struct.std::__1::pair.263"* %111 to i64
  br label %62

62:                                               ; preds = %60, %42
  %63 = phi i64 [ %61, %60 ], [ %53, %42 ]
  store i64 %63, i64* %58, align 8
  %64 = icmp eq i64 %55, 0
  br i1 %64, label %113, label %65

65:                                               ; preds = %62, %83
  %66 = phi %"struct.std::__1::pair.263"* [ %69, %83 ], [ %51, %62 ]
  %67 = phi %"struct.std::__1::pair.263"* [ %68, %83 ], [ %57, %62 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %66, i64 -1
  %70 = bitcast %"struct.std::__1::pair.263"* %69 to i8*
  %71 = bitcast %"struct.std::__1::pair.263"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 32, i1 false) #15
  %72 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %67, i64 -1, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %66, i64 -1, i32 1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %72, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr.264"* %72 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %74, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %73, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.viz::Surface"*, %"class.viz::Surface"** %77, align 8
  %79 = bitcast %"class.std::__1::unique_ptr.264"* %73 to i64*
  store i64 %76, i64* %79, align 8
  %80 = icmp eq %"class.viz::Surface"* %78, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %65
  tail call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %78) #15
  %82 = bitcast %"class.viz::Surface"* %78 to i8*
  tail call void @_ZdlPv(i8* %82) #16
  br label %83

83:                                               ; preds = %81, %65
  %84 = icmp eq %"struct.std::__1::pair.263"* %68, %1
  br i1 %84, label %113, label %65

85:                                               ; preds = %42, %85
  %86 = phi %"struct.std::__1::pair.263"* [ %111, %85 ], [ %51, %42 ]
  %87 = phi %"struct.std::__1::pair.263"* [ %110, %85 ], [ %57, %42 ]
  %88 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 0, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 0, i32 0, i32 1, i32 0
  %96 = load i32, i32* %95, align 8
  store i32 %96, i32* %94, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 0, i32 0, i32 1, i32 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 0, i32 0, i32 1, i32 1
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 0, i32 0, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 0, i32 0, i32 1, i32 2
  %102 = bitcast %"class.base::UnguessableToken"* %100 to i8*
  %103 = bitcast %"class.base::UnguessableToken"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #15
  %104 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 0, i32 1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.264"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.264"* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %87, i64 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %86, i64 1
  %112 = icmp ult %"struct.std::__1::pair.263"* %110, %51
  br i1 %112, label %85, label %60

113:                                              ; preds = %83, %62
  %114 = bitcast %"struct.std::__1::pair.263"* %1 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 0, i32 1, i32 2
  %116 = bitcast %"class.base::UnguessableToken"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %43, i64 16, i1 false)
  %117 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %1, i64 0, i32 1
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.viz::Surface"*, %"class.viz::Surface"** %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.264"* %117 to i64*
  store i64 %50, i64* %120, align 8
  %121 = icmp eq %"class.viz::Surface"* %119, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %113
  tail call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %119) #15
  %123 = bitcast %"class.viz::Surface"* %119 to i8*
  tail call void @_ZdlPv(i8* %123) #16
  br label %124

124:                                              ; preds = %122, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43)
  br label %285

125:                                              ; preds = %4
  %126 = ptrtoint %"struct.std::__1::pair.263"* %10 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 2
  %128 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %128) #15
  %129 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %130 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %131 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %132 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %134 = bitcast %"struct.std::__1::pair.263"** %9 to i64*
  %135 = bitcast %"class.std::__1::vector.261"* %0 to i64*
  %136 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 40, i1 false)
  %137 = load i64, i64* %135, align 8
  %138 = sub i64 %126, %137
  %139 = sdiv exact i64 %138, 40
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 461168601842738790
  br i1 %141, label %142, label %144

142:                                              ; preds = %125
  %143 = bitcast %"class.std::__1::vector.261"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #17
  unreachable

144:                                              ; preds = %125
  %145 = bitcast %"struct.std::__1::pair.263"** %11 to i64*
  %146 = sub i64 %14, %137
  %147 = sdiv exact i64 %146, 40
  %148 = icmp ult i64 %147, 230584300921369395
  br i1 %148, label %153, label %149

149:                                              ; preds = %144
  %150 = sub i64 %7, %137
  %151 = sdiv exact i64 %150, 40
  store %"struct.std::__1::pair.263"* null, %"struct.std::__1::pair.263"** %132, align 8
  %152 = bitcast %"class.std::__1::allocator.273"** %133 to %"class.std::__1::__compressed_pair.270"**
  store %"class.std::__1::__compressed_pair.270"* %127, %"class.std::__1::__compressed_pair.270"** %152, align 8
  br label %161

153:                                              ; preds = %144
  %154 = shl nsw i64 %147, 1
  %155 = icmp ult i64 %154, %140
  %156 = select i1 %155, i64 %140, i64 %154
  %157 = sub i64 %7, %137
  %158 = sdiv exact i64 %157, 40
  store %"struct.std::__1::pair.263"* null, %"struct.std::__1::pair.263"** %132, align 8
  %159 = bitcast %"class.std::__1::allocator.273"** %133 to %"class.std::__1::__compressed_pair.270"**
  store %"class.std::__1::__compressed_pair.270"* %127, %"class.std::__1::__compressed_pair.270"** %159, align 8
  %160 = icmp eq i64 %156, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %153, %149
  %162 = phi i64 [ %151, %149 ], [ %158, %153 ]
  %163 = phi i64 [ 461168601842738790, %149 ], [ %156, %153 ]
  %164 = mul i64 %163, 40
  %165 = tail call i8* @_Znwm(i64 %164) #16
  %166 = bitcast i8* %165 to %"struct.std::__1::pair.263"*
  br label %167

167:                                              ; preds = %153, %161
  %168 = phi i64 [ %162, %161 ], [ %158, %153 ]
  %169 = phi i64 [ %163, %161 ], [ 0, %153 ]
  %170 = phi %"struct.std::__1::pair.263"* [ %166, %161 ], [ null, %153 ]
  store %"struct.std::__1::pair.263"* %170, %"struct.std::__1::pair.263"** %129, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %170, i64 %168
  store %"struct.std::__1::pair.263"* %171, %"struct.std::__1::pair.263"** %131, align 8
  store %"struct.std::__1::pair.263"* %171, %"struct.std::__1::pair.263"** %130, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %170, i64 %169
  store %"struct.std::__1::pair.263"* %172, %"struct.std::__1::pair.263"** %132, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdENS_10unique_ptrINS2_7SurfaceENS_14default_deleteIS5_EEEEEERNS_9allocatorIS9_EEE12emplace_backIJRKS3_S8_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2, %"class.std::__1::unique_ptr.264"* dereferenceable(8) %3)
  %173 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %130, align 8
  %174 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %8, align 8
  %175 = icmp eq %"struct.std::__1::pair.263"* %174, %1
  br i1 %175, label %205, label %176

176:                                              ; preds = %167, %176
  %177 = phi %"struct.std::__1::pair.263"* [ %203, %176 ], [ %173, %167 ]
  %178 = phi %"struct.std::__1::pair.263"* [ %179, %176 ], [ %1, %167 ]
  %179 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %178, i64 -1
  %180 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %177, i64 -1, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %179, i64 0, i32 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %180, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %177, i64 -1, i32 0, i32 0, i32 1
  %184 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %178, i64 -1, i32 0, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  store i32 %185, i32* %183, align 4
  %186 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %177, i64 -1, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %178, i64 -1, i32 0, i32 1, i32 0
  %188 = load i32, i32* %187, align 8
  store i32 %188, i32* %186, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %177, i64 -1, i32 0, i32 1, i32 1
  %190 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %178, i64 -1, i32 0, i32 1, i32 1
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %177, i64 -1, i32 0, i32 1, i32 2
  %193 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %178, i64 -1, i32 0, i32 1, i32 2
  %194 = bitcast %"class.base::UnguessableToken"* %192 to i8*
  %195 = bitcast %"class.base::UnguessableToken"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 16, i1 false) #15
  %196 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %177, i64 -1, i32 1
  %197 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %178, i64 -1, i32 1
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %197, i64 0, i32 0, i32 0, i32 0
  %199 = bitcast %"class.std::__1::unique_ptr.264"* %197 to i64*
  %200 = load i64, i64* %199, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %198, align 8
  %201 = bitcast %"class.std::__1::unique_ptr.264"* %196 to i64*
  store i64 %200, i64* %201, align 8
  %202 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %130, align 8
  %203 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %202, i64 -1
  store %"struct.std::__1::pair.263"* %203, %"struct.std::__1::pair.263"** %130, align 8
  %204 = icmp eq %"struct.std::__1::pair.263"* %179, %174
  br i1 %204, label %205, label %176

205:                                              ; preds = %176, %167
  %206 = phi %"struct.std::__1::pair.263"* [ %173, %167 ], [ %203, %176 ]
  %207 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %9, align 8
  %208 = icmp eq %"struct.std::__1::pair.263"* %207, %1
  br i1 %208, label %209, label %215

209:                                              ; preds = %205
  %210 = ptrtoint %"struct.std::__1::pair.263"* %207 to i64
  %211 = ptrtoint %"struct.std::__1::pair.263"* %206 to i64
  %212 = bitcast %"struct.std::__1::pair.263"** %130 to i64*
  %213 = bitcast %"struct.std::__1::pair.263"** %131 to i64*
  %214 = load i64, i64* %213, align 8
  br label %252

215:                                              ; preds = %205
  %216 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %131, align 8
  br label %217

217:                                              ; preds = %217, %215
  %218 = phi %"struct.std::__1::pair.263"* [ %244, %217 ], [ %216, %215 ]
  %219 = phi %"struct.std::__1::pair.263"* [ %242, %217 ], [ %1, %215 ]
  %220 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %218, i64 0, i32 0, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 0, i32 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  store i32 %222, i32* %220, align 4
  %223 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %218, i64 0, i32 0, i32 0, i32 1
  %224 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 0, i32 0, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  store i32 %225, i32* %223, align 4
  %226 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %218, i64 0, i32 0, i32 1, i32 0
  %227 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 0, i32 0, i32 1, i32 0
  %228 = load i32, i32* %227, align 8
  store i32 %228, i32* %226, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %218, i64 0, i32 0, i32 1, i32 1
  %230 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 0, i32 0, i32 1, i32 1
  %231 = load i32, i32* %230, align 4
  store i32 %231, i32* %229, align 4
  %232 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %218, i64 0, i32 0, i32 1, i32 2
  %233 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 0, i32 0, i32 1, i32 2
  %234 = bitcast %"class.base::UnguessableToken"* %232 to i8*
  %235 = bitcast %"class.base::UnguessableToken"* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 16, i1 false) #15
  %236 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %218, i64 0, i32 1
  %237 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 0, i32 1
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.264"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.264"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %219, i64 1
  %243 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %131, align 8
  %244 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %243, i64 1
  store %"struct.std::__1::pair.263"* %244, %"struct.std::__1::pair.263"** %131, align 8
  %245 = icmp eq %"struct.std::__1::pair.263"* %242, %207
  br i1 %245, label %246, label %217

246:                                              ; preds = %217
  %247 = ptrtoint %"struct.std::__1::pair.263"* %244 to i64
  %248 = bitcast %"struct.std::__1::pair.263"** %130 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = load i64, i64* %134, align 8
  %251 = bitcast %"struct.std::__1::pair.263"** %131 to i64*
  br label %252

252:                                              ; preds = %209, %246
  %253 = phi i64* [ %213, %209 ], [ %251, %246 ]
  %254 = phi i64 [ %214, %209 ], [ %247, %246 ]
  %255 = phi i64 [ %210, %209 ], [ %250, %246 ]
  %256 = phi i64* [ %212, %209 ], [ %248, %246 ]
  %257 = phi i64 [ %211, %209 ], [ %249, %246 ]
  %258 = load i64, i64* %135, align 8
  store i64 %257, i64* %135, align 8
  store i64 %258, i64* %256, align 8
  store i64 %254, i64* %134, align 8
  store i64 %255, i64* %253, align 8
  %259 = load i64, i64* %145, align 8
  %260 = bitcast %"struct.std::__1::pair.263"** %132 to i64*
  %261 = load i64, i64* %260, align 8
  store i64 %261, i64* %145, align 8
  store i64 %259, i64* %260, align 8
  %262 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %258, i64* %262, align 8
  %263 = inttoptr i64 %258 to %"struct.std::__1::pair.263"*
  %264 = inttoptr i64 %255 to %"struct.std::__1::pair.263"*
  %265 = icmp eq %"struct.std::__1::pair.263"* %264, %263
  br i1 %265, label %279, label %266

266:                                              ; preds = %252, %274
  %267 = phi %"struct.std::__1::pair.263"* [ %275, %274 ], [ %264, %252 ]
  %268 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %267, i64 -1
  store %"struct.std::__1::pair.263"* %268, %"struct.std::__1::pair.263"** %131, align 8
  %269 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %267, i64 -1, i32 1, i32 0, i32 0, i32 0
  %270 = load %"class.viz::Surface"*, %"class.viz::Surface"** %269, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %269, align 8
  %271 = icmp eq %"class.viz::Surface"* %270, null
  br i1 %271, label %274, label %272

272:                                              ; preds = %266
  call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %270) #15
  %273 = bitcast %"class.viz::Surface"* %270 to i8*
  call void @_ZdlPv(i8* %273) #16
  br label %274

274:                                              ; preds = %272, %266
  %275 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %131, align 8
  %276 = icmp eq %"struct.std::__1::pair.263"* %275, %263
  br i1 %276, label %277, label %266

277:                                              ; preds = %274
  %278 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %129, align 8
  br label %279

279:                                              ; preds = %277, %252
  %280 = phi %"struct.std::__1::pair.263"* [ %278, %277 ], [ %263, %252 ]
  %281 = icmp eq %"struct.std::__1::pair.263"* %280, null
  br i1 %281, label %284, label %282

282:                                              ; preds = %279
  %283 = bitcast %"struct.std::__1::pair.263"* %280 to i8*
  call void @_ZdlPv(i8* %283) #16
  br label %284

284:                                              ; preds = %279, %282
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %128) #15
  br label %285

285:                                              ; preds = %17, %124, %284
  %286 = phi %"struct.std::__1::pair.263"* [ %1, %17 ], [ %1, %124 ], [ %173, %284 ]
  ret %"struct.std::__1::pair.263"* %286
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdENS_10unique_ptrINS2_7SurfaceENS_14default_deleteIS5_EEEEEERNS_9allocatorIS9_EEE12emplace_backIJRKS3_S8_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.std::__1::unique_ptr.264"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.263"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.263"* %7 to i64
  br i1 %8, label %10, label %132

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.263"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.263"* %14 to i64
  br i1 %15, label %17, label %51

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.263"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 40
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.263"* %12, %5
  br i1 %24, label %47, label %25

25:                                               ; preds = %17, %41
  %26 = phi %"struct.std::__1::pair.263"* [ %43, %41 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.263"* [ %42, %41 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.263"* %26 to i8*
  %29 = bitcast %"struct.std::__1::pair.263"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #15
  %30 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %26, i64 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr.264"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %32, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %31, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.viz::Surface"*, %"class.viz::Surface"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.264"* %31 to i64*
  store i64 %34, i64* %37, align 8
  %38 = icmp eq %"class.viz::Surface"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %25
  tail call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %36) #15
  %40 = bitcast %"class.viz::Surface"* %36 to i8*
  tail call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %39, %25
  %42 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %26, i64 1
  %44 = icmp eq %"struct.std::__1::pair.263"* %42, %5
  br i1 %44, label %45, label %25

45:                                               ; preds = %41
  %46 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %11, align 8
  br label %47

47:                                               ; preds = %45, %17
  %48 = phi %"struct.std::__1::pair.263"* [ %5, %17 ], [ %46, %45 ]
  %49 = phi %"struct.std::__1::pair.263"* [ %23, %17 ], [ %43, %45 ]
  store %"struct.std::__1::pair.263"* %49, %"struct.std::__1::pair.263"** %4, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %48, i64 %22
  store %"struct.std::__1::pair.263"* %50, %"struct.std::__1::pair.263"** %11, align 8
  br label %132

51:                                               ; preds = %10
  %52 = bitcast %"struct.std::__1::pair.263"** %6 to i64*
  %53 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %54 = sub i64 %9, %16
  %55 = sdiv exact i64 %54, 40
  %56 = shl nsw i64 %55, 1
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 1, i64 %56
  %59 = icmp ugt i64 %58, 461168601842738790
  br i1 %59, label %60, label %61

60:                                               ; preds = %51
  tail call void @abort() #17
  unreachable

61:                                               ; preds = %51
  %62 = lshr i64 %58, 2
  %63 = mul i64 %58, 40
  %64 = tail call i8* @_Znwm(i64 %63) #16
  %65 = bitcast i8* %64 to %"struct.std::__1::pair.263"*
  %66 = ptrtoint i8* %64 to i64
  %67 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %65, i64 %62
  %68 = ptrtoint %"struct.std::__1::pair.263"* %67 to i64
  %69 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %65, i64 %58
  %70 = ptrtoint %"struct.std::__1::pair.263"* %69 to i64
  %71 = ptrtoint %"struct.std::__1::pair.263"* %12 to i64
  %72 = ptrtoint %"struct.std::__1::pair.263"* %5 to i64
  %73 = sub i64 %72, %71
  %74 = sdiv exact i64 %73, 40
  %75 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %67, i64 %74
  %76 = icmp eq i64 %73, 0
  br i1 %76, label %110, label %77

77:                                               ; preds = %61, %77
  %78 = phi %"struct.std::__1::pair.263"* [ %102, %77 ], [ %67, %61 ]
  %79 = phi %"struct.std::__1::pair.263"* [ %103, %77 ], [ %12, %61 ]
  %80 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 0, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 0, i32 0, i32 1, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 0, i32 0, i32 1, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 0, i32 0, i32 1, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 0, i32 0, i32 1, i32 1
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %89, align 4
  %92 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 0, i32 0, i32 1, i32 2
  %93 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 0, i32 0, i32 1, i32 2
  %94 = bitcast %"class.base::UnguessableToken"* %92 to i8*
  %95 = bitcast %"class.base::UnguessableToken"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #15
  %96 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 0, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 0, i32 1
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr.264"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %98, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.264"* %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %78, i64 1
  %103 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %79, i64 1
  %104 = icmp eq %"struct.std::__1::pair.263"* %75, %102
  br i1 %104, label %105, label %77

105:                                              ; preds = %77
  %106 = ptrtoint %"struct.std::__1::pair.263"* %75 to i64
  %107 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %13, align 8
  %108 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %11, align 8
  %109 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  br label %110

110:                                              ; preds = %61, %105
  %111 = phi %"struct.std::__1::pair.263"* [ %109, %105 ], [ %5, %61 ]
  %112 = phi %"struct.std::__1::pair.263"* [ %108, %105 ], [ %12, %61 ]
  %113 = phi %"struct.std::__1::pair.263"* [ %107, %105 ], [ %14, %61 ]
  %114 = phi i64 [ %106, %105 ], [ %68, %61 ]
  store i64 %66, i64* %53, align 8
  %115 = bitcast %"struct.std::__1::pair.263"** %11 to i64*
  store i64 %68, i64* %115, align 8
  %116 = bitcast %"struct.std::__1::pair.263"** %4 to i64*
  store i64 %114, i64* %116, align 8
  store i64 %70, i64* %52, align 8
  %117 = icmp eq %"struct.std::__1::pair.263"* %111, %112
  br i1 %117, label %128, label %118

118:                                              ; preds = %110, %126
  %119 = phi %"struct.std::__1::pair.263"* [ %120, %126 ], [ %111, %110 ]
  %120 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %119, i64 -1
  %121 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %119, i64 -1, i32 1, i32 0, i32 0, i32 0
  %122 = load %"class.viz::Surface"*, %"class.viz::Surface"** %121, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %121, align 8
  %123 = icmp eq %"class.viz::Surface"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %118
  tail call void @_ZN3viz7SurfaceD1Ev(%"class.viz::Surface"* nonnull %122) #15
  %125 = bitcast %"class.viz::Surface"* %122 to i8*
  tail call void @_ZdlPv(i8* %125) #16
  br label %126

126:                                              ; preds = %124, %118
  %127 = icmp eq %"struct.std::__1::pair.263"* %120, %112
  br i1 %127, label %128, label %118

128:                                              ; preds = %126, %110
  %129 = icmp eq %"struct.std::__1::pair.263"* %113, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = bitcast %"struct.std::__1::pair.263"* %113 to i8*
  tail call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %130, %128, %47, %3
  %133 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %134, align 4
  %137 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %133, i64 0, i32 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 4
  store i32 %139, i32* %137, align 4
  %140 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %133, i64 0, i32 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %142 = load i32, i32* %141, align 8
  store i32 %142, i32* %140, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %133, i64 0, i32 0, i32 1, i32 1
  %144 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %143, align 4
  %146 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %133, i64 0, i32 0, i32 1, i32 2
  %147 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %148 = bitcast %"class.base::UnguessableToken"* %146 to i8*
  %149 = bitcast %"class.base::UnguessableToken"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #15
  %150 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %133, i64 0, i32 1
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %2, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.264"* %2 to i64*
  %153 = load i64, i64* %152, align 8
  store %"class.viz::Surface"* null, %"class.viz::Surface"** %151, align 8
  %154 = bitcast %"class.std::__1::unique_ptr.264"* %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %4, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %155, i64 1
  store %"struct.std::__1::pair.263"* %156, %"struct.std::__1::pair.263"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS5_10unique_ptrINS2_7SurfaceENS5_14default_deleteISB_EEEEEENS5_9allocatorISF_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSF_EESO_EERKT_(%"class.base::internal::flat_tree.260"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.260", %"class.base::internal::flat_tree.260"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.260", %"class.base::internal::flat_tree.260"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.263"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.263"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.263"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"struct.std::__1::pair.263"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 %29, i32 0, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 %29, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 %29, i32 0, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"struct.std::__1::pair.263"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"struct.std::__1::pair.263"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"struct.std::__1::pair.263"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"struct.std::__1::pair.263"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 0, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 0, i32 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"struct.std::__1::pair.263", %"struct.std::__1::pair.263"* %76, i64 1
  %126 = ptrtoint %"struct.std::__1::pair.263"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } undef, %"struct.std::__1::pair.263"* %76, 0
  %130 = inttoptr i64 %128 to %"struct.std::__1::pair.263"*
  %131 = insertvalue { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %129, %"struct.std::__1::pair.263"* %130, 1
  ret { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"* } %131
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.188"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.viz::SurfaceId"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.viz::SurfaceId"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.viz::SurfaceId"*
  br i1 %11, label %75, label %13

13:                                               ; preds = %3
  %14 = ashr exact i64 %10, 5
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"class.viz::SurfaceId"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %31, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 0
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"class.viz::SurfaceId"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69
  %74 = ptrtoint %"class.viz::SurfaceId"* %71 to i64
  br label %75

75:                                               ; preds = %73, %3
  %76 = phi i64 [ %74, %73 ], [ %9, %3 ]
  %77 = phi %"class.viz::SurfaceId"* [ %71, %73 ], [ %5, %3 ]
  %78 = icmp eq %"class.viz::SurfaceId"* %77, %12
  br i1 %78, label %125, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 0, i32 1
  %84 = load i32, i32* %80, align 4
  %85 = load i32, i32* %82, align 4
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %125, label %87

87:                                               ; preds = %79
  %88 = icmp ult i32 %85, %84
  br i1 %88, label %129, label %89

89:                                               ; preds = %87
  %90 = load i32, i32* %81, align 4
  %91 = load i32, i32* %83, align 4
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %125, label %93

93:                                               ; preds = %89
  %94 = icmp ult i32 %91, %90
  br i1 %94, label %129, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 1
  %100 = load i32, i32* %96, align 4
  %101 = load i32, i32* %98, align 4
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %125, label %103

103:                                              ; preds = %95
  %104 = icmp ult i32 %101, %100
  br i1 %104, label %129, label %105

105:                                              ; preds = %103
  %106 = load i32, i32* %97, align 4
  %107 = load i32, i32* %99, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %125, label %109

109:                                              ; preds = %105
  %110 = icmp ult i32 %107, %106
  br i1 %110, label %129, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 2, i32 0, i32 0
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 2, i32 0, i32 1
  %116 = load i64, i64* %112, align 8
  %117 = load i64, i64* %114, align 8
  %118 = icmp ult i64 %116, %117
  br i1 %118, label %125, label %119

119:                                              ; preds = %111
  %120 = icmp ult i64 %117, %116
  br i1 %120, label %129, label %121

121:                                              ; preds = %119
  %122 = load i64, i64* %113, align 8
  %123 = load i64, i64* %115, align 8
  %124 = icmp ult i64 %122, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %79, %95, %105, %111, %89, %75, %121
  %126 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %0, i64 0, i32 0
  %127 = tail call %"class.viz::SurfaceId"* @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.49"* %126, %"class.viz::SurfaceId"* %77, %"class.viz::SurfaceId"* dereferenceable(32) %2) #15
  %128 = ptrtoint %"class.viz::SurfaceId"* %127 to i64
  br label %129

129:                                              ; preds = %87, %103, %109, %119, %93, %121, %125
  %130 = phi i64 [ %128, %125 ], [ %76, %121 ], [ %76, %93 ], [ %76, %119 ], [ %76, %109 ], [ %76, %103 ], [ %76, %87 ]
  %131 = phi i8 [ 1, %125 ], [ 0, %121 ], [ 0, %93 ], [ 0, %119 ], [ 0, %109 ], [ 0, %103 ], [ 0, %87 ]
  %132 = inttoptr i64 %130 to %"class.viz::SurfaceId"*
  %133 = insertvalue { %"class.viz::SurfaceId"*, i8 } undef, %"class.viz::SurfaceId"* %132, 0
  %134 = insertvalue { %"class.viz::SurfaceId"*, i8 } %133, i8 %131, 1
  ret { %"class.viz::SurfaceId"*, i8 } %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.viz::SurfaceId"* @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.49"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.viz::SurfaceId"* %1 to i64
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer.490", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  %12 = icmp ult %"class.viz::SurfaceId"* %9, %11
  %13 = ptrtoint %"class.viz::SurfaceId"* %9 to i64
  %14 = ptrtoint %"class.viz::SurfaceId"* %11 to i64
  br i1 %12, label %15, label %136

15:                                               ; preds = %3
  %16 = icmp eq %"class.viz::SurfaceId"* %9, %1
  br i1 %16, label %17, label %37

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %27, align 4
  %30 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %32 = bitcast %"class.base::UnguessableToken"* %30 to i8*
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #15
  %34 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 1
  %35 = ptrtoint %"class.viz::SurfaceId"* %34 to i64
  %36 = bitcast %"class.viz::SurfaceId"** %8 to i64*
  store i64 %35, i64* %36, align 8
  br label %279

37:                                               ; preds = %15
  %38 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38)
  %39 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %40 = load <4 x i32>, <4 x i32>* %39, align 4
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %42 = bitcast %"class.base::UnguessableToken"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %42, i64 16, i1 false)
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 1
  %44 = ptrtoint %"class.viz::SurfaceId"* %43 to i64
  %45 = sub i64 %13, %44
  %46 = ashr exact i64 %45, 5
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46
  %48 = bitcast %"class.viz::SurfaceId"** %8 to i64*
  %49 = icmp ult %"class.viz::SurfaceId"* %47, %9
  br i1 %49, label %50, label %86

50:                                               ; preds = %37
  %51 = sub nsw i64 0, %46
  %52 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 %51, i32 0, i32 0
  %53 = bitcast i32* %52 to i8*
  %54 = xor i64 %4, -1
  %55 = getelementptr i8, i8* %53, i64 %54
  %56 = ptrtoint i8* %55 to i64
  %57 = and i64 %56, 32
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %78

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %47, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %63, align 4
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 1, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 1
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 2
  %73 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 1, i32 2
  %74 = bitcast %"class.base::UnguessableToken"* %72 to i8*
  %75 = bitcast %"class.base::UnguessableToken"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #15
  %76 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %47, i64 1
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 1
  br label %78

78:                                               ; preds = %59, %50
  %79 = phi %"class.viz::SurfaceId"* [ %9, %50 ], [ %77, %59 ]
  %80 = phi %"class.viz::SurfaceId"* [ %47, %50 ], [ %76, %59 ]
  %81 = phi %"class.viz::SurfaceId"* [ undef, %50 ], [ %77, %59 ]
  %82 = icmp ult i8* %55, inttoptr (i64 32 to i8*)
  br i1 %82, label %83, label %94

83:                                               ; preds = %94, %78
  %84 = phi %"class.viz::SurfaceId"* [ %81, %78 ], [ %130, %94 ]
  %85 = ptrtoint %"class.viz::SurfaceId"* %84 to i64
  br label %86

86:                                               ; preds = %83, %37
  %87 = phi i64 [ %85, %83 ], [ %13, %37 ]
  store i64 %87, i64* %48, align 8
  %88 = icmp eq i64 %45, 0
  br i1 %88, label %132, label %89

89:                                               ; preds = %86
  %90 = sub nsw i64 0, %46
  %91 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 %90
  %92 = bitcast %"class.viz::SurfaceId"* %91 to i8*
  %93 = bitcast %"class.viz::SurfaceId"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %45, i1 false) #15
  br label %132

94:                                               ; preds = %78, %94
  %95 = phi %"class.viz::SurfaceId"* [ %130, %94 ], [ %79, %78 ]
  %96 = phi %"class.viz::SurfaceId"* [ %129, %94 ], [ %80, %78 ]
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 8
  store i32 %105, i32* %103, align 8
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 1, i32 1
  %107 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 1, i32 1
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 1, i32 2
  %111 = bitcast %"class.base::UnguessableToken"* %109 to i8*
  %112 = bitcast %"class.base::UnguessableToken"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #15
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 0, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 1, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 1, i32 0
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 1, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 1, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 1, i32 2
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 1, i32 2
  %127 = bitcast %"class.base::UnguessableToken"* %125 to i8*
  %128 = bitcast %"class.base::UnguessableToken"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #15
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 2
  %130 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 2
  %131 = icmp ult %"class.viz::SurfaceId"* %129, %9
  br i1 %131, label %94, label %83

132:                                              ; preds = %86, %89
  %133 = bitcast %"class.viz::SurfaceId"* %1 to <4 x i32>*
  store <4 x i32> %40, <4 x i32>* %133, align 8
  %134 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %135 = bitcast %"class.base::UnguessableToken"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* nonnull align 8 %38, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38)
  br label %279

136:                                              ; preds = %3
  %137 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2
  %138 = bitcast %"struct.std::__1::__split_buffer.490"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %138) #15
  %139 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %6, i64 0, i32 0
  %140 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %6, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %6, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %6, i64 0, i32 3, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %6, i64 0, i32 3, i32 1, i32 0
  %144 = bitcast %"class.viz::SurfaceId"** %8 to i64*
  %145 = bitcast %"class.std::__1::vector.49"* %0 to i64*
  %146 = bitcast %"struct.std::__1::__split_buffer.490"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 40, i1 false)
  %147 = load i64, i64* %145, align 8
  %148 = sub i64 %13, %147
  %149 = ashr exact i64 %148, 5
  %150 = add nsw i64 %149, 1
  %151 = icmp ugt i64 %150, 576460752303423487
  br i1 %151, label %152, label %154

152:                                              ; preds = %136
  %153 = bitcast %"class.std::__1::vector.49"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #17
  unreachable

154:                                              ; preds = %136
  %155 = bitcast %"class.viz::SurfaceId"** %10 to i64*
  %156 = sub i64 %14, %147
  %157 = ashr exact i64 %156, 5
  %158 = icmp ult i64 %157, 288230376151711743
  br i1 %158, label %163, label %159

159:                                              ; preds = %154
  %160 = sub i64 %4, %147
  %161 = ashr exact i64 %160, 5
  store %"class.viz::SurfaceId"* null, %"class.viz::SurfaceId"** %142, align 8
  %162 = bitcast %"class.std::__1::allocator.54"** %143 to %"class.std::__1::__compressed_pair.51"**
  store %"class.std::__1::__compressed_pair.51"* %137, %"class.std::__1::__compressed_pair.51"** %162, align 8
  br label %174

163:                                              ; preds = %154
  %164 = ashr exact i64 %156, 4
  %165 = icmp ult i64 %164, %150
  %166 = select i1 %165, i64 %150, i64 %164
  %167 = sub i64 %4, %147
  %168 = ashr exact i64 %167, 5
  store %"class.viz::SurfaceId"* null, %"class.viz::SurfaceId"** %142, align 8
  %169 = bitcast %"class.std::__1::allocator.54"** %143 to %"class.std::__1::__compressed_pair.51"**
  store %"class.std::__1::__compressed_pair.51"* %137, %"class.std::__1::__compressed_pair.51"** %169, align 8
  %170 = icmp eq i64 %166, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %163
  %172 = icmp ugt i64 %166, 576460752303423487
  br i1 %172, label %173, label %174

173:                                              ; preds = %171
  tail call void @abort() #17
  unreachable

174:                                              ; preds = %159, %171
  %175 = phi i64 [ 576460752303423487, %159 ], [ %166, %171 ]
  %176 = phi i64 [ %161, %159 ], [ %168, %171 ]
  %177 = shl i64 %175, 5
  %178 = tail call i8* @_Znwm(i64 %177) #16
  %179 = bitcast i8* %178 to %"class.viz::SurfaceId"*
  br label %180

180:                                              ; preds = %163, %174
  %181 = phi i64 [ %176, %174 ], [ %168, %163 ]
  %182 = phi i64 [ %175, %174 ], [ 0, %163 ]
  %183 = phi %"class.viz::SurfaceId"* [ %179, %174 ], [ null, %163 ]
  store %"class.viz::SurfaceId"* %183, %"class.viz::SurfaceId"** %139, align 8
  %184 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %183, i64 %181
  store %"class.viz::SurfaceId"* %184, %"class.viz::SurfaceId"** %141, align 8
  store %"class.viz::SurfaceId"* %184, %"class.viz::SurfaceId"** %140, align 8
  %185 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %183, i64 %182
  store %"class.viz::SurfaceId"* %185, %"class.viz::SurfaceId"** %142, align 8
  call void @_ZNSt3__114__split_bufferIN3viz9SurfaceIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.490"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2)
  %186 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %140, align 8
  %187 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %7, align 8
  %188 = icmp eq %"class.viz::SurfaceId"* %187, %1
  br i1 %188, label %212, label %189

189:                                              ; preds = %180, %189
  %190 = phi %"class.viz::SurfaceId"* [ %210, %189 ], [ %186, %180 ]
  %191 = phi %"class.viz::SurfaceId"* [ %192, %189 ], [ %1, %180 ]
  %192 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1
  %193 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 0, i32 0
  %194 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %192, i64 0, i32 0, i32 0
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %193, align 4
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 0, i32 1
  %197 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  store i32 %198, i32* %196, align 4
  %199 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 1, i32 0
  %200 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 1, i32 0
  %201 = load i32, i32* %200, align 8
  store i32 %201, i32* %199, align 8
  %202 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 1, i32 1
  %203 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 1, i32 1
  %204 = load i32, i32* %203, align 4
  store i32 %204, i32* %202, align 4
  %205 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 1, i32 2
  %206 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 1, i32 2
  %207 = bitcast %"class.base::UnguessableToken"* %205 to i8*
  %208 = bitcast %"class.base::UnguessableToken"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 16, i1 false) #15
  %209 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %140, align 8
  %210 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %209, i64 -1
  store %"class.viz::SurfaceId"* %210, %"class.viz::SurfaceId"** %140, align 8
  %211 = icmp eq %"class.viz::SurfaceId"* %192, %187
  br i1 %211, label %212, label %189

212:                                              ; preds = %189, %180
  %213 = phi %"class.viz::SurfaceId"* [ %186, %180 ], [ %210, %189 ]
  %214 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %8, align 8
  %215 = icmp eq %"class.viz::SurfaceId"* %214, %1
  br i1 %215, label %216, label %222

216:                                              ; preds = %212
  %217 = ptrtoint %"class.viz::SurfaceId"* %214 to i64
  %218 = ptrtoint %"class.viz::SurfaceId"* %213 to i64
  %219 = bitcast %"class.viz::SurfaceId"** %140 to i64*
  %220 = bitcast %"class.viz::SurfaceId"** %141 to i64*
  %221 = load i64, i64* %220, align 8
  br label %253

222:                                              ; preds = %212
  %223 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %141, align 8
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi %"class.viz::SurfaceId"* [ %245, %224 ], [ %223, %222 ]
  %226 = phi %"class.viz::SurfaceId"* [ %243, %224 ], [ %1, %222 ]
  %227 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  store i32 %229, i32* %227, align 4
  %230 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 0, i32 1
  %231 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  store i32 %232, i32* %230, align 4
  %233 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 1, i32 0
  %234 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 1, i32 0
  %235 = load i32, i32* %234, align 8
  store i32 %235, i32* %233, align 8
  %236 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 1, i32 1
  %237 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 1, i32 1
  %238 = load i32, i32* %237, align 4
  store i32 %238, i32* %236, align 4
  %239 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 1, i32 2
  %240 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 1, i32 2
  %241 = bitcast %"class.base::UnguessableToken"* %239 to i8*
  %242 = bitcast %"class.base::UnguessableToken"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false) #15
  %243 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 1
  %244 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %141, align 8
  %245 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %244, i64 1
  store %"class.viz::SurfaceId"* %245, %"class.viz::SurfaceId"** %141, align 8
  %246 = icmp eq %"class.viz::SurfaceId"* %243, %214
  br i1 %246, label %247, label %224

247:                                              ; preds = %224
  %248 = ptrtoint %"class.viz::SurfaceId"* %245 to i64
  %249 = bitcast %"class.viz::SurfaceId"** %140 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = load i64, i64* %144, align 8
  %252 = bitcast %"class.viz::SurfaceId"** %141 to i64*
  br label %253

253:                                              ; preds = %216, %247
  %254 = phi i64* [ %220, %216 ], [ %252, %247 ]
  %255 = phi i64 [ %221, %216 ], [ %248, %247 ]
  %256 = phi i64 [ %217, %216 ], [ %251, %247 ]
  %257 = phi i64* [ %219, %216 ], [ %249, %247 ]
  %258 = phi i64 [ %218, %216 ], [ %250, %247 ]
  %259 = load i64, i64* %145, align 8
  store i64 %258, i64* %145, align 8
  store i64 %259, i64* %257, align 8
  store i64 %255, i64* %144, align 8
  store i64 %256, i64* %254, align 8
  %260 = load i64, i64* %155, align 8
  %261 = bitcast %"class.viz::SurfaceId"** %142 to i64*
  %262 = load i64, i64* %261, align 8
  store i64 %262, i64* %155, align 8
  store i64 %260, i64* %261, align 8
  %263 = bitcast %"struct.std::__1::__split_buffer.490"* %6 to i64*
  store i64 %259, i64* %263, align 8
  %264 = inttoptr i64 %259 to %"class.viz::SurfaceId"*
  %265 = inttoptr i64 %256 to %"class.viz::SurfaceId"*
  %266 = icmp eq %"class.viz::SurfaceId"* %265, %264
  br i1 %266, label %274, label %267

267:                                              ; preds = %253
  %268 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %265, i64 -1, i32 0, i32 0
  %269 = ptrtoint i32* %268 to i64
  %270 = sub i64 %269, %259
  %271 = lshr i64 %270, 5
  %272 = xor i64 %271, -1
  %273 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %265, i64 %272
  store %"class.viz::SurfaceId"* %273, %"class.viz::SurfaceId"** %141, align 8
  br label %274

274:                                              ; preds = %267, %253
  %275 = icmp eq i64 %259, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %274
  %277 = inttoptr i64 %259 to i8*
  call void @_ZdlPv(i8* %277) #16
  br label %278

278:                                              ; preds = %274, %276
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %138) #15
  br label %279

279:                                              ; preds = %17, %132, %278
  %280 = phi %"class.viz::SurfaceId"* [ %1, %17 ], [ %1, %132 ], [ %186, %278 ]
  ret %"class.viz::SurfaceId"* %280
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3viz9SurfaceIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.490"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %0, i64 0, i32 2
  %4 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %5, align 8
  %7 = icmp eq %"class.viz::SurfaceId"* %4, %6
  %8 = ptrtoint %"class.viz::SurfaceId"* %6 to i64
  br i1 %7, label %9, label %138

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %0, i64 0, i32 1
  %11 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.490", %"struct.std::__1::__split_buffer.490"* %0, i64 0, i32 0
  %13 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %12, align 8
  %14 = icmp ugt %"class.viz::SurfaceId"* %11, %13
  %15 = ptrtoint %"class.viz::SurfaceId"* %13 to i64
  br i1 %14, label %16, label %35

16:                                               ; preds = %9
  %17 = ptrtoint %"class.viz::SurfaceId"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 5
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 %21
  %23 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  %24 = sub i64 %23, %17
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.viz::SurfaceId"* %22 to i8*
  %29 = bitcast %"class.viz::SurfaceId"* %11 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #15
  %30 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi %"class.viz::SurfaceId"* [ %11, %16 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %22, i64 %25
  store %"class.viz::SurfaceId"* %33, %"class.viz::SurfaceId"** %3, align 8
  %34 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %32, i64 %21
  store %"class.viz::SurfaceId"* %34, %"class.viz::SurfaceId"** %10, align 8
  br label %138

35:                                               ; preds = %9
  %36 = bitcast %"class.viz::SurfaceId"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.490"* %0 to i64*
  %38 = sub i64 %8, %15
  %39 = ashr exact i64 %38, 4
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 576460752303423487
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #17
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 5
  %47 = tail call i8* @_Znwm(i64 %46) #16
  %48 = bitcast i8* %47 to %"class.viz::SurfaceId"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45
  %51 = ptrtoint %"class.viz::SurfaceId"* %50 to i64
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %41
  %53 = ptrtoint %"class.viz::SurfaceId"* %52 to i64
  %54 = ptrtoint %"class.viz::SurfaceId"* %11 to i64
  %55 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 5
  %58 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %128, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -32
  %62 = and i64 %61, 32
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %83

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %50, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 0, i32 1
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %68, align 4
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 1, i32 0
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 1, i32 1
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 1, i32 2
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 1, i32 2
  %79 = bitcast %"class.base::UnguessableToken"* %77 to i8*
  %80 = bitcast %"class.base::UnguessableToken"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 16, i1 false) #15
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %50, i64 1
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 1
  br label %83

83:                                               ; preds = %64, %60
  %84 = phi %"class.viz::SurfaceId"* [ %50, %60 ], [ %81, %64 ]
  %85 = phi %"class.viz::SurfaceId"* [ %11, %60 ], [ %82, %64 ]
  %86 = icmp ult i64 %61, 32
  br i1 %86, label %125, label %87

87:                                               ; preds = %83, %87
  %88 = phi %"class.viz::SurfaceId"* [ %122, %87 ], [ %84, %83 ]
  %89 = phi %"class.viz::SurfaceId"* [ %123, %87 ], [ %85, %83 ]
  %90 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %96, align 8
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 1, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 1, i32 2
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 1, i32 2
  %104 = bitcast %"class.base::UnguessableToken"* %102 to i8*
  %105 = bitcast %"class.base::UnguessableToken"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #15
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 0, i32 0
  %107 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 0, i32 1
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 1, i32 0
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 1, i32 0
  %114 = load i32, i32* %113, align 8
  store i32 %114, i32* %112, align 8
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 1, i32 1
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 1, i32 1
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 1, i32 2
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 1, i32 2
  %120 = bitcast %"class.base::UnguessableToken"* %118 to i8*
  %121 = bitcast %"class.base::UnguessableToken"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false) #15
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 2
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 2
  %124 = icmp eq %"class.viz::SurfaceId"* %58, %122
  br i1 %124, label %125, label %87

125:                                              ; preds = %87, %83
  %126 = ptrtoint %"class.viz::SurfaceId"* %58 to i64
  %127 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %12, align 8
  br label %128

128:                                              ; preds = %44, %125
  %129 = phi %"class.viz::SurfaceId"* [ %127, %125 ], [ %13, %44 ]
  %130 = phi i64 [ %126, %125 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %131 = bitcast %"class.viz::SurfaceId"** %10 to i64*
  store i64 %51, i64* %131, align 8
  %132 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  store i64 %130, i64* %132, align 8
  store i64 %53, i64* %36, align 8
  %133 = icmp eq %"class.viz::SurfaceId"* %129, null
  %134 = inttoptr i64 %130 to %"class.viz::SurfaceId"*
  br i1 %133, label %138, label %135

135:                                              ; preds = %128
  %136 = bitcast %"class.viz::SurfaceId"* %129 to i8*
  tail call void @_ZdlPv(i8* %136) #16
  %137 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  br label %138

138:                                              ; preds = %135, %128, %31, %2
  %139 = phi %"class.viz::SurfaceId"* [ %137, %135 ], [ %134, %128 ], [ %33, %31 ], [ %4, %2 ]
  %140 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %143, align 4
  %146 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 1, i32 0
  %147 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %148 = load i32, i32* %147, align 8
  store i32 %148, i32* %146, align 8
  %149 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 1, i32 1
  %150 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 1, i32 2
  %153 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %154 = bitcast %"class.base::UnguessableToken"* %152 to i8*
  %155 = bitcast %"class.base::UnguessableToken"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 16, i1 false) #15
  %156 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %157 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %156, i64 1
  store %"class.viz::SurfaceId"* %157, %"class.viz::SurfaceId"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.49"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.49"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.49"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.viz::SurfaceId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.viz::SurfaceId"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.viz::SurfaceId"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %35
  %39 = ptrtoint %"class.viz::SurfaceId"* %38 to i64
  %40 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 0, i32 1
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %43, align 4
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 0
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 1
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 2
  %53 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %54 = bitcast %"class.base::UnguessableToken"* %52 to i8*
  %55 = bitcast %"class.base::UnguessableToken"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #15
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 1
  %57 = ptrtoint %"class.viz::SurfaceId"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %58, align 8
  %60 = ptrtoint %"class.viz::SurfaceId"* %59 to i64
  %61 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %62 = icmp eq %"class.viz::SurfaceId"* %61, %59
  br i1 %62, label %134, label %63

63:                                               ; preds = %34
  %64 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %60
  %67 = and i64 %66, 32
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %88

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 1
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 1
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 2
  %84 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #15
  %87 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1
  br label %88

88:                                               ; preds = %69, %63
  %89 = phi %"class.viz::SurfaceId"* [ undef, %63 ], [ %87, %69 ]
  %90 = phi %"class.viz::SurfaceId"* [ %37, %63 ], [ %87, %69 ]
  %91 = phi %"class.viz::SurfaceId"* [ %61, %63 ], [ %70, %69 ]
  %92 = icmp ult i64 %66, 32
  br i1 %92, label %131, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.viz::SurfaceId"* [ %129, %93 ], [ %90, %88 ]
  %95 = phi %"class.viz::SurfaceId"* [ %112, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 1
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 0
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 0
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %102, align 8
  %105 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 1
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 1
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 2
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 2
  %110 = bitcast %"class.base::UnguessableToken"* %108 to i8*
  %111 = bitcast %"class.base::UnguessableToken"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #15
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 0
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 2
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 2
  %127 = bitcast %"class.base::UnguessableToken"* %125 to i8*
  %128 = bitcast %"class.base::UnguessableToken"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #15
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2
  %130 = icmp eq %"class.viz::SurfaceId"* %112, %59
  br i1 %130, label %131, label %93

131:                                              ; preds = %93, %88
  %132 = phi %"class.viz::SurfaceId"* [ %89, %88 ], [ %129, %93 ]
  %133 = load i64, i64* %6, align 8
  br label %134

134:                                              ; preds = %34, %131
  %135 = phi %"class.viz::SurfaceId"* [ %132, %131 ], [ %37, %34 ]
  %136 = phi i64 [ %133, %131 ], [ %60, %34 ]
  %137 = ptrtoint %"class.viz::SurfaceId"* %135 to i64
  store i64 %137, i64* %6, align 8
  store i64 %57, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %140) #16
  br label %141

141:                                              ; preds = %134, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.379"* @_ZNKSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(%"class.std::__1::__hash_table.375"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %4, i32 %6) #15
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %9 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %8) #15
  %10 = tail call i64 @_ZN4base10HashInts64Emm(i64 %7, i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %96, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.379"* %29, null
  br i1 %30, label %96, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.379"* %33, null
  br i1 %34, label %96, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  %37 = load i32, i32* %3, align 4
  %38 = load i32, i32* %5, align 4
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %92
  %48 = phi %"struct.std::__1::__hash_node_base.379"* [ %33, %35 ], [ %94, %92 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.379"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %10, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %16, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %36
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %12
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %12
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %25
  br i1 %62, label %92, label %96

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.379"* %64 to %"class.viz::SurfaceId"*
  %66 = bitcast %"struct.std::__1::__hash_node_base.379"* %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %37
  br i1 %68, label %69, label %92

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %65, i64 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %38
  br i1 %72, label %73, label %92

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %48, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.379"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %40
  br i1 %77, label %78, label %92

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %65, i64 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %42
  br i1 %81, label %82, label %92

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %48, i64 4
  %84 = bitcast %"struct.std::__1::__hash_node_base.379"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %44
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %48, i64 5
  %89 = bitcast %"struct.std::__1::__hash_node_base.379"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %96, label %92

92:                                               ; preds = %63, %82, %73, %78, %69, %60, %87
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %48, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.379"* %94, null
  br i1 %95, label %96, label %47

96:                                               ; preds = %87, %92, %60, %31, %2, %24
  %97 = phi %"struct.std::__1::__hash_node_base.379"* [ null, %24 ], [ null, %2 ], [ null, %31 ], [ %48, %87 ], [ null, %92 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base.379"* %97
}

declare i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"*) local_unnamed_addr #2

declare i64 @_ZN4base10HashInts64Emm(i64, i64) local_unnamed_addr #2

declare i64 @_ZN4base10HashInts32Ejj(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.188"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.188", %"class.base::internal::flat_tree.188"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.viz::SurfaceId"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.viz::SurfaceId"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 5
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"class.viz::SurfaceId"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %30, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 0
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"class.viz::SurfaceId"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"class.viz::SurfaceId"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"class.viz::SurfaceId"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"class.viz::SurfaceId"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 1
  %126 = ptrtoint %"class.viz::SurfaceId"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } undef, %"class.viz::SurfaceId"* %76, 0
  %130 = inttoptr i64 %128 to %"class.viz::SurfaceId"*
  %131 = insertvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %129, %"class.viz::SurfaceId"* %130, 1
  ret { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %4, i32 %6) #15
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %9 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %8) #15
  %10 = tail call i64 @_ZN4base10HashInts64Emm(i64 %7, i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %96, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %96, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %96, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  %37 = load i32, i32* %3, align 4
  %38 = load i32, i32* %5, align 4
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %92
  %48 = phi %"struct.std::__1::__hash_node_base"* [ %33, %35 ], [ %94, %92 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %10, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %16, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %36
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %12
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %12
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %25
  br i1 %62, label %92, label %96

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"struct.std::__1::__hash_value_type"*
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %37
  br i1 %68, label %69, label %92

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %65, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %38
  br i1 %72, label %73, label %92

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %40
  br i1 %77, label %78, label %92

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %65, i64 0, i32 0, i32 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %42
  br i1 %81, label %82, label %92

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 4
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %44
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 5
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %96, label %92

92:                                               ; preds = %63, %82, %73, %78, %69, %60, %87
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base"* %94, null
  br i1 %95, label %96, label %47

96:                                               ; preds = %87, %92, %60, %31, %2, %24
  %97 = phi %"struct.std::__1::__hash_node_base"* [ null, %24 ], [ null, %2 ], [ null, %31 ], [ %48, %87 ], [ null, %92 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base"* %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 32) #15
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #15
  br i1 %37, label %38, label %39, !prof !15

38:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #15
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #15
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #15
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %107

13:                                               ; preds = %6
  %14 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = ptrtoint %"class.viz::SurfaceId"* %14 to i64
  %16 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %17 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %18 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %17, align 8
  %19 = icmp ult %"class.viz::SurfaceId"* %18, %16
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.viz::SurfaceId"* %18 to i64
  %22 = ptrtoint %"class.viz::SurfaceId"* %16 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %15) #15
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #15
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !15

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %15
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #15
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.viz::SurfaceId"* %14, %16
  br i1 %37, label %105, label %38

38:                                               ; preds = %36
  %39 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %16, i64 -1, i32 0, i32 0
  %40 = ptrtoint i32* %39 to i64
  %41 = sub i64 %40, %15
  %42 = and i64 %41, 32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %63

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %18, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %14, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %18, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %14, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %18, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %14, i64 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %51, align 8
  %54 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %18, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %14, i64 0, i32 1, i32 1
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %18, i64 0, i32 1, i32 2
  %58 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %14, i64 0, i32 1, i32 2
  %59 = bitcast %"class.base::UnguessableToken"* %57 to i8*
  %60 = bitcast %"class.base::UnguessableToken"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #15
  %61 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %14, i64 1
  %62 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %18, i64 1
  br label %63

63:                                               ; preds = %44, %38
  %64 = phi %"class.viz::SurfaceId"* [ %18, %38 ], [ %62, %44 ]
  %65 = phi %"class.viz::SurfaceId"* [ %14, %38 ], [ %61, %44 ]
  %66 = icmp ult i64 %41, 32
  br i1 %66, label %105, label %67

67:                                               ; preds = %63, %67
  %68 = phi %"class.viz::SurfaceId"* [ %103, %67 ], [ %64, %63 ]
  %69 = phi %"class.viz::SurfaceId"* [ %102, %67 ], [ %65, %63 ]
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 0, i32 1, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 1, i32 1
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 0, i32 1, i32 1
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 1, i32 2
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 0, i32 1, i32 2
  %84 = bitcast %"class.base::UnguessableToken"* %82 to i8*
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 16, i1 false) #15
  %86 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 0, i32 0
  %87 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 1, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 0, i32 1
  %90 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 1, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %89, align 4
  %92 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 1, i32 0
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 1, i32 1, i32 0
  %94 = load i32, i32* %93, align 8
  store i32 %94, i32* %92, align 8
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 1, i32 1
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 1, i32 1, i32 1
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 1, i32 2
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 1, i32 1, i32 2
  %100 = bitcast %"class.base::UnguessableToken"* %98 to i8*
  %101 = bitcast %"class.base::UnguessableToken"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #15
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %69, i64 2
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 2
  %104 = icmp eq %"class.viz::SurfaceId"* %102, %16
  br i1 %104, label %105, label %67

105:                                              ; preds = %63, %67, %36
  %106 = sub i64 %2, %1
  br label %295

107:                                              ; preds = %6
  %108 = icmp ult i64 %2, %1
  br i1 %108, label %109, label %295

109:                                              ; preds = %107
  %110 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %111 = ptrtoint %"class.viz::SurfaceId"* %110 to i64
  %112 = tail call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %113 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %114 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %113, align 8
  %115 = icmp ult %"class.viz::SurfaceId"* %114, %112
  br i1 %115, label %116, label %132

116:                                              ; preds = %109
  %117 = ptrtoint %"class.viz::SurfaceId"* %114 to i64
  %118 = ptrtoint %"class.viz::SurfaceId"* %112 to i64
  %119 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %118, i64 %111) #15
  %120 = extractvalue { i64, i1 } %119, 1
  %121 = extractvalue { i64, i1 } %119, 0
  %122 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %117, i64 %121) #15
  %123 = extractvalue { i64, i1 } %122, 1
  %124 = or i1 %120, %123
  br i1 %124, label %125, label %126, !prof !15

125:                                              ; preds = %116
  tail call void @llvm.trap() #15
  unreachable

126:                                              ; preds = %116
  %127 = extractvalue { i64, i1 } %122, 0
  %128 = icmp ugt i64 %127, %111
  br i1 %128, label %129, label %132

129:                                              ; preds = %126
  %130 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #15
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #15
  br label %132

132:                                              ; preds = %129, %126, %109
  %133 = icmp eq %"class.viz::SurfaceId"* %110, %112
  br i1 %133, label %201, label %134

134:                                              ; preds = %132
  %135 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %112, i64 -1, i32 0, i32 0
  %136 = ptrtoint i32* %135 to i64
  %137 = sub i64 %136, %111
  %138 = and i64 %137, 32
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %159

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %114, i64 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %110, i64 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %114, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %110, i64 0, i32 0, i32 1
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %144, align 4
  %147 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %114, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %110, i64 0, i32 1, i32 0
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %147, align 8
  %150 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %114, i64 0, i32 1, i32 1
  %151 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %110, i64 0, i32 1, i32 1
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %114, i64 0, i32 1, i32 2
  %154 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %110, i64 0, i32 1, i32 2
  %155 = bitcast %"class.base::UnguessableToken"* %153 to i8*
  %156 = bitcast %"class.base::UnguessableToken"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #15
  %157 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %110, i64 1
  %158 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %114, i64 1
  br label %159

159:                                              ; preds = %140, %134
  %160 = phi %"class.viz::SurfaceId"* [ %114, %134 ], [ %158, %140 ]
  %161 = phi %"class.viz::SurfaceId"* [ %110, %134 ], [ %157, %140 ]
  %162 = icmp ult i64 %137, 32
  br i1 %162, label %201, label %163

163:                                              ; preds = %159, %163
  %164 = phi %"class.viz::SurfaceId"* [ %199, %163 ], [ %160, %159 ]
  %165 = phi %"class.viz::SurfaceId"* [ %198, %163 ], [ %161, %159 ]
  %166 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 0, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 0, i32 1
  %170 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 0, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 1, i32 0
  %173 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 0, i32 1, i32 0
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* %172, align 8
  %175 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 1, i32 1
  %176 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 0, i32 1, i32 1
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 1, i32 2
  %179 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 0, i32 1, i32 2
  %180 = bitcast %"class.base::UnguessableToken"* %178 to i8*
  %181 = bitcast %"class.base::UnguessableToken"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 16, i1 false) #15
  %182 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 1, i32 0, i32 0
  %183 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 1, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %182, align 4
  %185 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 1, i32 0, i32 1
  %186 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 1, i32 0, i32 1
  %187 = load i32, i32* %186, align 4
  store i32 %187, i32* %185, align 4
  %188 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 1, i32 1, i32 0
  %189 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 1, i32 1, i32 0
  %190 = load i32, i32* %189, align 8
  store i32 %190, i32* %188, align 8
  %191 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 1, i32 1, i32 1
  %192 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 1, i32 1, i32 1
  %193 = load i32, i32* %192, align 4
  store i32 %193, i32* %191, align 4
  %194 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 1, i32 1, i32 2
  %195 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 1, i32 1, i32 2
  %196 = bitcast %"class.base::UnguessableToken"* %194 to i8*
  %197 = bitcast %"class.base::UnguessableToken"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 16, i1 false) #15
  %198 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %165, i64 2
  %199 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 2
  %200 = icmp eq %"class.viz::SurfaceId"* %198, %112
  br i1 %200, label %201, label %163

201:                                              ; preds = %159, %163, %132
  %202 = sub i64 %11, %1
  %203 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %204 = ptrtoint %"class.viz::SurfaceId"* %203 to i64
  %205 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %206 = call dereferenceable(32) %"class.viz::SurfaceId"* @_ZN4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %202)
  %207 = icmp ult %"class.viz::SurfaceId"* %206, %205
  br i1 %207, label %208, label %224

208:                                              ; preds = %201
  %209 = ptrtoint %"class.viz::SurfaceId"* %206 to i64
  %210 = ptrtoint %"class.viz::SurfaceId"* %205 to i64
  %211 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %210, i64 %204) #15
  %212 = extractvalue { i64, i1 } %211, 1
  %213 = extractvalue { i64, i1 } %211, 0
  %214 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %209, i64 %213) #15
  %215 = extractvalue { i64, i1 } %214, 1
  %216 = or i1 %212, %215
  br i1 %216, label %217, label %218, !prof !15

217:                                              ; preds = %208
  call void @llvm.trap() #15
  unreachable

218:                                              ; preds = %208
  %219 = extractvalue { i64, i1 } %214, 0
  %220 = icmp ugt i64 %219, %204
  br i1 %220, label %221, label %224

221:                                              ; preds = %218
  %222 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #15
  %223 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #15
  br label %224

224:                                              ; preds = %221, %218, %201
  %225 = icmp eq %"class.viz::SurfaceId"* %203, %205
  br i1 %225, label %293, label %226

226:                                              ; preds = %224
  %227 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %205, i64 -1, i32 0, i32 0
  %228 = ptrtoint i32* %227 to i64
  %229 = sub i64 %228, %204
  %230 = and i64 %229, 32
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %251

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %206, i64 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %203, i64 0, i32 0, i32 0
  %235 = load i32, i32* %234, align 4
  store i32 %235, i32* %233, align 4
  %236 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %206, i64 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %203, i64 0, i32 0, i32 1
  %238 = load i32, i32* %237, align 4
  store i32 %238, i32* %236, align 4
  %239 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %206, i64 0, i32 1, i32 0
  %240 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %203, i64 0, i32 1, i32 0
  %241 = load i32, i32* %240, align 8
  store i32 %241, i32* %239, align 8
  %242 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %206, i64 0, i32 1, i32 1
  %243 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %203, i64 0, i32 1, i32 1
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %242, align 4
  %245 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %206, i64 0, i32 1, i32 2
  %246 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %203, i64 0, i32 1, i32 2
  %247 = bitcast %"class.base::UnguessableToken"* %245 to i8*
  %248 = bitcast %"class.base::UnguessableToken"* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #15
  %249 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %203, i64 1
  %250 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %206, i64 1
  br label %251

251:                                              ; preds = %232, %226
  %252 = phi %"class.viz::SurfaceId"* [ %206, %226 ], [ %250, %232 ]
  %253 = phi %"class.viz::SurfaceId"* [ %203, %226 ], [ %249, %232 ]
  %254 = icmp ult i64 %229, 32
  br i1 %254, label %293, label %255

255:                                              ; preds = %251, %255
  %256 = phi %"class.viz::SurfaceId"* [ %291, %255 ], [ %252, %251 ]
  %257 = phi %"class.viz::SurfaceId"* [ %290, %255 ], [ %253, %251 ]
  %258 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  store i32 %260, i32* %258, align 4
  %261 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 0, i32 0, i32 1
  %262 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 0, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  store i32 %263, i32* %261, align 4
  %264 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 0, i32 1, i32 0
  %265 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 0, i32 1, i32 0
  %266 = load i32, i32* %265, align 8
  store i32 %266, i32* %264, align 8
  %267 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 0, i32 1, i32 1
  %268 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 0, i32 1, i32 1
  %269 = load i32, i32* %268, align 4
  store i32 %269, i32* %267, align 4
  %270 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 0, i32 1, i32 2
  %271 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 0, i32 1, i32 2
  %272 = bitcast %"class.base::UnguessableToken"* %270 to i8*
  %273 = bitcast %"class.base::UnguessableToken"* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 16, i1 false) #15
  %274 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 1, i32 0, i32 0
  %275 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 1, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  store i32 %276, i32* %274, align 4
  %277 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 1, i32 0, i32 1
  %278 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 1, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  store i32 %279, i32* %277, align 4
  %280 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 1, i32 1, i32 0
  %281 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 1, i32 1, i32 0
  %282 = load i32, i32* %281, align 8
  store i32 %282, i32* %280, align 8
  %283 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 1, i32 1, i32 1
  %284 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 1, i32 1, i32 1
  %285 = load i32, i32* %284, align 4
  store i32 %285, i32* %283, align 4
  %286 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 1, i32 1, i32 2
  %287 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 1, i32 1, i32 2
  %288 = bitcast %"class.base::UnguessableToken"* %286 to i8*
  %289 = bitcast %"class.base::UnguessableToken"* %287 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %288, i8* align 8 %289, i64 16, i1 false) #15
  %290 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %257, i64 2
  %291 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %256, i64 2
  %292 = icmp eq %"class.viz::SurfaceId"* %290, %205
  br i1 %292, label %293, label %255

293:                                              ; preds = %251, %255, %224
  %294 = add i64 %202, %2
  br label %295

295:                                              ; preds = %107, %293, %105
  %296 = phi i64 [ %294, %293 ], [ %106, %105 ], [ 0, %107 ]
  store i64 %296, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.viz::SurfaceId"* @_ZNK4base8internal12VectorBufferIN3viz9SurfaceIdEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %23, align 8
  %25 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %24, i64 %1
  ret %"class.viz::SurfaceId"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.379"*, i8 } @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.375"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %5, i32 %7) #15
  %9 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %10 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %9) #15
  %11 = tail call i64 @_ZN4base10HashInts64Emm(i64 %8, i64 %10) #15
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %97, label %15

15:                                               ; preds = %3
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #15, !range !86
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ult i64 %11, %13
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %18, %21, %23
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.379"* %30, null
  br i1 %31, label %97, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.379"* %34, null
  br i1 %35, label %97, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  %38 = load i32, i32* %4, align 4
  %39 = load i32, i32* %6, align 4
  %40 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %36, %93
  %49 = phi %"struct.std::__1::__hash_node_base.379"* [ %34, %36 ], [ %95, %93 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %49, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.379"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %11
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  br i1 %17, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %37
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %13
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %13
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %26
  br i1 %63, label %64, label %97

64:                                               ; preds = %48, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %49, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.379"* %65 to %"class.viz::SurfaceId"*
  %67 = bitcast %"struct.std::__1::__hash_node_base.379"* %65 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %38
  br i1 %69, label %70, label %93

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %66, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %39
  br i1 %73, label %74, label %93

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %49, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.379"* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, %41
  br i1 %78, label %79, label %93

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %66, i64 0, i32 1, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %43
  br i1 %82, label %83, label %93

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %49, i64 4
  %85 = bitcast %"struct.std::__1::__hash_node_base.379"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, %45
  br i1 %87, label %88, label %93

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %49, i64 5
  %90 = bitcast %"struct.std::__1::__hash_node_base.379"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, %47
  br i1 %92, label %188, label %93

93:                                               ; preds = %83, %79, %74, %70, %64, %88
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %49, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.379"* %95, null
  br i1 %96, label %97, label %48

97:                                               ; preds = %61, %93, %32, %25, %3
  %98 = phi i64 [ %26, %25 ], [ -6148914691236517206, %3 ], [ %26, %32 ], [ %26, %93 ], [ %26, %61 ]
  %99 = tail call i8* @_Znwm(i64 48) #16, !noalias !87
  %100 = getelementptr inbounds i8, i8* %99, i64 16
  %101 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !noalias !87
  %103 = bitcast i8* %100 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %103, align 4, !noalias !87
  %104 = getelementptr inbounds i8, i8* %99, i64 32
  %105 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %106 = bitcast %"class.base::UnguessableToken"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %106, i64 16, i1 false) #15, !noalias !87
  %107 = getelementptr inbounds i8, i8* %99, i64 8
  %108 = bitcast i8* %107 to i64*
  store i64 %11, i64* %108, align 8, !noalias !87
  %109 = bitcast i8* %99 to %"struct.std::__1::__hash_node_base.379"**
  store %"struct.std::__1::__hash_node_base.379"* null, %"struct.std::__1::__hash_node_base.379"** %109, align 8, !noalias !87
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 2, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  %113 = uitofp i64 %112 to float
  %114 = uitofp i64 %13 to float
  %115 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 3, i32 0, i32 0
  %116 = load float, float* %115, align 4
  %117 = fmul float %116, %114
  %118 = fcmp olt float %117, %113
  %119 = or i1 %14, %118
  br i1 %119, label %120, label %143

120:                                              ; preds = %97
  %121 = shl i64 %13, 1
  %122 = icmp ult i64 %13, 3
  %123 = tail call i64 @llvm.ctpop.i64(i64 %13) #15, !range !86
  %124 = icmp ugt i64 %123, 1
  %125 = or i1 %122, %124
  %126 = zext i1 %125 to i64
  %127 = or i64 %121, %126
  %128 = fdiv float %113, %116
  %129 = tail call float @llvm.ceil.f32(float %128) #15
  %130 = fptoui float %129 to i64
  %131 = icmp ult i64 %127, %130
  %132 = select i1 %131, i64 %130, i64 %127
  tail call void @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.375"* %0, i64 %132)
  %133 = load i64, i64* %12, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %133) #15, !range !86
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %120
  %137 = add i64 %133, -1
  %138 = and i64 %137, %11
  br label %143

139:                                              ; preds = %120
  %140 = icmp ult i64 %11, %133
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %11, %133
  br label %143

143:                                              ; preds = %141, %139, %136, %97
  %144 = phi i64 [ %13, %97 ], [ %133, %136 ], [ %133, %139 ], [ %133, %141 ]
  %145 = phi i64 [ %98, %97 ], [ %138, %136 ], [ %11, %139 ], [ %142, %141 ]
  %146 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %147, i64 %145
  %149 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base.379"* %149, null
  br i1 %150, label %151, label %177

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 1, i32 0, i32 0
  %153 = bitcast %"struct.std::__1::__hash_node_base.379"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i8* %99 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.379"* %152 to i8**
  store i8* %99, i8** %156, align 8
  store %"struct.std::__1::__hash_node_base.379"* %152, %"struct.std::__1::__hash_node_base.379"** %148, align 8
  %157 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %109, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.379"* %157, null
  br i1 %158, label %184, label %159

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %157, i64 1
  %161 = bitcast %"struct.std::__1::__hash_node_base.379"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = tail call i64 @llvm.ctpop.i64(i64 %144) #15, !range !86
  %164 = icmp ugt i64 %163, 1
  br i1 %164, label %168, label %165

165:                                              ; preds = %159
  %166 = add i64 %144, -1
  %167 = and i64 %162, %166
  br label %172

168:                                              ; preds = %159
  %169 = icmp ult i64 %162, %144
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = urem i64 %162, %144
  br label %172

172:                                              ; preds = %165, %168, %170
  %173 = phi i64 [ %167, %165 ], [ %171, %170 ], [ %162, %168 ]
  %174 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %146, align 8
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %174, i64 %173
  %176 = bitcast %"struct.std::__1::__hash_node_base.379"** %175 to i8**
  br label %182

177:                                              ; preds = %143
  %178 = bitcast %"struct.std::__1::__hash_node_base.379"* %149 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast i8* %99 to i64*
  store i64 %179, i64* %180, align 8
  %181 = bitcast %"struct.std::__1::__hash_node_base.379"* %149 to i8**
  br label %182

182:                                              ; preds = %172, %177
  %183 = phi i8** [ %181, %177 ], [ %176, %172 ]
  store i8* %99, i8** %183, align 8
  br label %184

184:                                              ; preds = %182, %151
  %185 = bitcast i8* %99 to %"struct.std::__1::__hash_node_base.379"*
  %186 = load i64, i64* %110, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %110, align 8
  br label %188

188:                                              ; preds = %88, %184
  %189 = phi i8 [ 1, %184 ], [ 0, %88 ]
  %190 = phi %"struct.std::__1::__hash_node_base.379"* [ %185, %184 ], [ %49, %88 ]
  %191 = insertvalue { %"struct.std::__1::__hash_node_base.379"*, i8 } undef, %"struct.std::__1::__hash_node_base.379"* %190, 0
  %192 = insertvalue { %"struct.std::__1::__hash_node_base.379"*, i8 } %191, i8 %189, 1
  ret { %"struct.std::__1::__hash_node_base.379"*, i8 } %192
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.375"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !86
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.375"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !86
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.375"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.375"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %172, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.375"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.379"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.379"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.381", %"class.std::__1::__bucket_list_deallocator.381"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.379"* null, %"struct.std::__1::__hash_node_base.379"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !90

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.379"* %38, null
  br i1 %39, label %180, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.379"* null, %"struct.std::__1::__hash_node_base.379"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.379"* null, %"struct.std::__1::__hash_node_base.379"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.379"* null, %"struct.std::__1::__hash_node_base.379"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.379"* null, %"struct.std::__1::__hash_node_base.379"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.379"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !86
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.379"* %36, %"struct.std::__1::__hash_node_base.379"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.379"* %75, null
  br i1 %76, label %180, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %166
  %80 = phi %"struct.std::__1::__hash_node_base.379"* [ %75, %77 ], [ %170, %166 ]
  %81 = phi i64 [ %71, %77 ], [ %168, %166 ]
  %82 = phi %"struct.std::__1::__hash_node_base.379"* [ %38, %77 ], [ %167, %166 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.379"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %166, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.379"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.379"* %101 to %"class.viz::SurfaceId"*
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %102, i64 0, i32 0, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base.379"* %104 to i32*
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %102, i64 0, i32 1, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %80, i64 4
  %108 = bitcast %"struct.std::__1::__hash_node_base.379"* %107 to i64*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %80, i64 5
  %110 = bitcast %"struct.std::__1::__hash_node_base.379"* %109 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.379"* %101 to i32*
  br label %113

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.379"* %82, %"struct.std::__1::__hash_node_base.379"** %97, align 8
  br label %166

113:                                              ; preds = %100, %147
  %114 = phi %"struct.std::__1::__hash_node_base.379"* [ %116, %147 ], [ %80, %100 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %114, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.379"* %116, null
  br i1 %117, label %153, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %116, i64 2
  %120 = bitcast %"struct.std::__1::__hash_node_base.379"* %119 to %"class.viz::SurfaceId"*
  %121 = load i32, i32* %111, align 4
  %122 = bitcast %"struct.std::__1::__hash_node_base.379"* %119 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %121, %123
  br i1 %124, label %125, label %153

125:                                              ; preds = %118
  %126 = load i32, i32* %103, align 4
  %127 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %125
  %131 = load i32, i32* %105, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %116, i64 3
  %133 = bitcast %"struct.std::__1::__hash_node_base.379"* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %131, %134
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = load i32, i32* %106, align 4
  %138 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %120, i64 0, i32 1, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = load i64, i64* %108, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %116, i64 4
  %144 = bitcast %"struct.std::__1::__hash_node_base.379"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %142, %145
  br i1 %146, label %147, label %153

147:                                              ; preds = %141
  %148 = load i64, i64* %110, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %116, i64 5
  %150 = bitcast %"struct.std::__1::__hash_node_base.379"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %148, %151
  br i1 %152, label %113, label %153

153:                                              ; preds = %118, %141, %130, %136, %125, %113, %147
  %154 = ptrtoint %"struct.std::__1::__hash_node_base.379"* %116 to i64
  %155 = bitcast %"struct.std::__1::__hash_node_base.379"* %114 to i64*
  %156 = bitcast %"struct.std::__1::__hash_node_base.379"* %82 to i64*
  store i64 %154, i64* %156, align 8
  %157 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %157, i64 %93
  %159 = bitcast %"struct.std::__1::__hash_node_base.379"** %158 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %155, align 8
  %162 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %162, i64 %93
  %164 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %164, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.379"* %80, %"struct.std::__1::__hash_node_base.379"** %165, align 8
  br label %166

166:                                              ; preds = %92, %153, %112
  %167 = phi %"struct.std::__1::__hash_node_base.379"* [ %80, %112 ], [ %82, %153 ], [ %80, %92 ]
  %168 = phi i64 [ %93, %112 ], [ %81, %153 ], [ %81, %92 ]
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.379", %"struct.std::__1::__hash_node_base.379"* %167, i64 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base.379"*, %"struct.std::__1::__hash_node_base.379"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.379"* %170, null
  br i1 %171, label %180, label %79

172:                                              ; preds = %2
  %173 = getelementptr inbounds %"class.std::__1::__hash_table.375", %"class.std::__1::__hash_table.375"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.379"**, %"struct.std::__1::__hash_node_base.379"*** %173, align 8
  store %"struct.std::__1::__hash_node_base.379"** null, %"struct.std::__1::__hash_node_base.379"*** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.379"** %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = bitcast %"struct.std::__1::__hash_node_base.379"** %174 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  br label %178

178:                                              ; preds = %172, %176
  %179 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.381", %"class.std::__1::__bucket_list_deallocator.381"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %179, align 8
  br label %180

180:                                              ; preds = %166, %70, %35, %178
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #15
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 32) #15
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #15
  br i1 %31, label %32, label %33, !prof !15

32:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #15
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3viz9SurfaceIdEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #15
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #15
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #15
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.506"* dereferenceable(8), %"class.std::__1::tuple.509"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %7, i32 %9) #15
  %11 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %12 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %11) #15
  %13 = tail call i64 @_ZN4base10HashInts64Emm(i64 %10, i64 %12) #15
  %14 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %99, label %17

17:                                               ; preds = %5
  %18 = tail call i64 @llvm.ctpop.i64(i64 %15) #15, !range !86
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = add i64 %15, -1
  %22 = and i64 %21, %13
  br label %27

23:                                               ; preds = %17
  %24 = icmp ult i64 %13, %15
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = urem i64 %13, %15
  br label %27

27:                                               ; preds = %20, %23, %25
  %28 = phi i64 [ %22, %20 ], [ %26, %25 ], [ %13, %23 ]
  %29 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %99, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %99, label %38

38:                                               ; preds = %34
  %39 = add i64 %15, -1
  %40 = load i32, i32* %6, align 4
  %41 = load i32, i32* %8, align 4
  %42 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %38, %95
  %51 = phi %"struct.std::__1::__hash_node_base"* [ %36, %38 ], [ %97, %95 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %13
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  br i1 %19, label %59, label %57

57:                                               ; preds = %56
  %58 = and i64 %54, %39
  br label %63

59:                                               ; preds = %56
  %60 = icmp ult i64 %54, %15
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %54, %15
  br label %63

63:                                               ; preds = %57, %59, %61
  %64 = phi i64 [ %58, %57 ], [ %62, %61 ], [ %54, %59 ]
  %65 = icmp eq i64 %64, %28
  br i1 %65, label %66, label %99

66:                                               ; preds = %50, %63
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to %"struct.std::__1::__hash_value_type"*
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %40
  br i1 %71, label %72, label %95

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %68, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %41
  br i1 %75, label %76, label %95

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, %43
  br i1 %80, label %81, label %95

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %68, i64 0, i32 0, i32 0, i32 1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %45
  br i1 %84, label %85, label %95

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 4
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %47
  br i1 %89, label %90, label %95

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 5
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, %49
  br i1 %94, label %205, label %95

95:                                               ; preds = %85, %81, %76, %72, %66, %90
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base"* %97, null
  br i1 %98, label %99, label %50

99:                                               ; preds = %63, %95, %34, %27, %5
  %100 = phi i64 [ %28, %27 ], [ -6148914691236517206, %5 ], [ %28, %34 ], [ %28, %95 ], [ %28, %63 ]
  %101 = tail call i8* @_Znwm(i64 72) #16, !noalias !91
  %102 = getelementptr inbounds i8, i8* %101, i64 16
  %103 = getelementptr inbounds %"class.std::__1::tuple.506", %"class.std::__1::tuple.506"* %3, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %103, align 8, !noalias !91
  %105 = bitcast i8* %102 to i32*
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %104, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4, !noalias !91
  store i32 %107, i32* %105, align 4, !noalias !91
  %108 = getelementptr inbounds i8, i8* %101, i64 20
  %109 = bitcast i8* %108 to i32*
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %104, i64 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 4, !noalias !91
  store i32 %111, i32* %109, align 4, !noalias !91
  %112 = getelementptr inbounds i8, i8* %101, i64 24
  %113 = bitcast i8* %112 to i32*
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %104, i64 0, i32 1, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !91
  store i32 %115, i32* %113, align 8, !noalias !91
  %116 = getelementptr inbounds i8, i8* %101, i64 28
  %117 = bitcast i8* %116 to i32*
  %118 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %104, i64 0, i32 1, i32 1
  %119 = load i32, i32* %118, align 4, !noalias !91
  store i32 %119, i32* %117, align 4, !noalias !91
  %120 = getelementptr inbounds i8, i8* %101, i64 32
  %121 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %104, i64 0, i32 1, i32 2
  %122 = bitcast %"class.base::UnguessableToken"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %122, i64 16, i1 false) #15, !noalias !91
  %123 = getelementptr inbounds i8, i8* %101, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #15, !noalias !91
  %124 = getelementptr inbounds i8, i8* %101, i64 8
  %125 = bitcast i8* %124 to i64*
  store i64 %13, i64* %125, align 8, !noalias !91
  %126 = bitcast i8* %101 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %126, align 8, !noalias !91
  %127 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  %130 = uitofp i64 %129 to float
  %131 = uitofp i64 %15 to float
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %133 = load float, float* %132, align 4
  %134 = fmul float %133, %131
  %135 = fcmp olt float %134, %130
  %136 = or i1 %16, %135
  br i1 %136, label %137, label %160

137:                                              ; preds = %99
  %138 = shl i64 %15, 1
  %139 = icmp ult i64 %15, 3
  %140 = tail call i64 @llvm.ctpop.i64(i64 %15) #15, !range !86
  %141 = icmp ugt i64 %140, 1
  %142 = or i1 %139, %141
  %143 = zext i1 %142 to i64
  %144 = or i64 %138, %143
  %145 = fdiv float %130, %133
  %146 = tail call float @llvm.ceil.f32(float %145) #15
  %147 = fptoui float %146 to i64
  %148 = icmp ult i64 %144, %147
  %149 = select i1 %148, i64 %147, i64 %144
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %149)
  %150 = load i64, i64* %14, align 8
  %151 = tail call i64 @llvm.ctpop.i64(i64 %150) #15, !range !86
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %137
  %154 = add i64 %150, -1
  %155 = and i64 %154, %13
  br label %160

156:                                              ; preds = %137
  %157 = icmp ult i64 %13, %150
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %13, %150
  br label %160

160:                                              ; preds = %158, %156, %153, %99
  %161 = phi i64 [ %15, %99 ], [ %150, %153 ], [ %150, %156 ], [ %150, %158 ]
  %162 = phi i64 [ %100, %99 ], [ %155, %153 ], [ %13, %156 ], [ %159, %158 ]
  %163 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %162
  %166 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base"* %166, null
  br i1 %167, label %168, label %194

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast i8* %101 to i64*
  store i64 %171, i64* %172, align 8
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %169 to i8**
  store i8* %101, i8** %173, align 8
  store %"struct.std::__1::__hash_node_base"* %169, %"struct.std::__1::__hash_node_base"** %165, align 8
  %174 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base"* %174, null
  br i1 %175, label %201, label %176

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 1
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = tail call i64 @llvm.ctpop.i64(i64 %161) #15, !range !86
  %181 = icmp ugt i64 %180, 1
  br i1 %181, label %185, label %182

182:                                              ; preds = %176
  %183 = add i64 %161, -1
  %184 = and i64 %179, %183
  br label %189

185:                                              ; preds = %176
  %186 = icmp ult i64 %179, %161
  br i1 %186, label %189, label %187

187:                                              ; preds = %185
  %188 = urem i64 %179, %161
  br label %189

189:                                              ; preds = %182, %185, %187
  %190 = phi i64 [ %184, %182 ], [ %188, %187 ], [ %179, %185 ]
  %191 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %163, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %191, i64 %190
  %193 = bitcast %"struct.std::__1::__hash_node_base"** %192 to i8**
  br label %199

194:                                              ; preds = %160
  %195 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast i8* %101 to i64*
  store i64 %196, i64* %197, align 8
  %198 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i8**
  br label %199

199:                                              ; preds = %189, %194
  %200 = phi i8** [ %198, %194 ], [ %193, %189 ]
  store i8* %101, i8** %200, align 8
  br label %201

201:                                              ; preds = %199, %168
  %202 = bitcast i8* %101 to %"struct.std::__1::__hash_node_base"*
  %203 = load i64, i64* %127, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %127, align 8
  br label %205

205:                                              ; preds = %90, %201
  %206 = phi i8 [ 1, %201 ], [ 0, %90 ]
  %207 = phi %"struct.std::__1::__hash_node_base"* [ %202, %201 ], [ %51, %90 ]
  %208 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %207, 0
  %209 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %208, i8 %206, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !86
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !86
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %172, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !94

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %180, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !86
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %180, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %166
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %170, %166 ]
  %81 = phi i64 [ %71, %77 ], [ %168, %166 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %167, %166 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %166, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"struct.std::__1::__hash_value_type"*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i32*
  %106 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %102, i64 0, i32 0, i32 0, i32 1, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 4
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 5
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %113

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %166

113:                                              ; preds = %100, %147
  %114 = phi %"struct.std::__1::__hash_node_base"* [ %116, %147 ], [ %80, %100 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %153, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 2
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to %"struct.std::__1::__hash_value_type"*
  %121 = load i32, i32* %111, align 4
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %121, %123
  br i1 %124, label %125, label %153

125:                                              ; preds = %118
  %126 = load i32, i32* %103, align 4
  %127 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %120, i64 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %125
  %131 = load i32, i32* %105, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 3
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %131, %134
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = load i32, i32* %106, align 4
  %138 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %120, i64 0, i32 0, i32 0, i32 1, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = load i64, i64* %108, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 4
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %142, %145
  br i1 %146, label %147, label %153

147:                                              ; preds = %141
  %148 = load i64, i64* %110, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 5
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %148, %151
  br i1 %152, label %113, label %153

153:                                              ; preds = %118, %141, %130, %136, %125, %113, %147
  %154 = ptrtoint %"struct.std::__1::__hash_node_base"* %116 to i64
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i64*
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %154, i64* %156, align 8
  %157 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %157, i64 %93
  %159 = bitcast %"struct.std::__1::__hash_node_base"** %158 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %155, align 8
  %162 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, i64 %93
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %164, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %165, align 8
  br label %166

166:                                              ; preds = %92, %153, %112
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %153 ], [ %80, %92 ]
  %168 = phi i64 [ %93, %112 ], [ %81, %153 ], [ %81, %92 ]
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %167, i64 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base"* %170, null
  br i1 %171, label %180, label %79

172:                                              ; preds = %2
  %173 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %173, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base"** %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = bitcast %"struct.std::__1::__hash_node_base"** %174 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  br label %178

178:                                              ; preds = %172, %176
  %179 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %179, align 8
  br label %180

180:                                              ; preds = %166, %70, %35, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %4, i32 %6) #15
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %9 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %8) #15
  %10 = tail call i64 @_ZN4base10HashInts64Emm(i64 %7, i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %96, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %96, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %96, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  %37 = load i32, i32* %3, align 4
  %38 = load i32, i32* %5, align 4
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %92
  %48 = phi %"struct.std::__1::__hash_node_base"* [ %33, %35 ], [ %94, %92 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %10
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %16, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %36
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %12
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %12
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %25
  br i1 %62, label %92, label %96

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"struct.std::__1::__hash_value_type"*
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %37
  br i1 %68, label %69, label %92

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %65, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %38
  br i1 %72, label %73, label %92

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %40
  br i1 %77, label %78, label %92

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %65, i64 0, i32 0, i32 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %42
  br i1 %81, label %82, label %92

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 4
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %44
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 5
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %96, label %92

92:                                               ; preds = %63, %82, %73, %78, %69, %60, %87
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base"* %94, null
  br i1 %95, label %96, label %47

96:                                               ; preds = %87, %92, %60, %31, %2, %24
  %97 = phi %"struct.std::__1::__hash_node_base"* [ null, %24 ], [ null, %2 ], [ null, %31 ], [ %48, %87 ], [ null, %92 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base"* %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE(%"class.std::__1::unique_ptr.510"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #15, !range !86
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.291"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.510"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.294"** %98 to %"class.std::__1::__compressed_pair.291"**
  store %"class.std::__1::__compressed_pair.291"* %30, %"class.std::__1::__compressed_pair.291"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.306"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.302"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %4, i32 %6) #15
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %9 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %8) #15
  %10 = tail call i64 @_ZN4base10HashInts64Emm(i64 %7, i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %96, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.306"* %29, null
  br i1 %30, label %96, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.306"* %33, null
  br i1 %34, label %96, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  %37 = load i32, i32* %3, align 4
  %38 = load i32, i32* %5, align 4
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %92
  %48 = phi %"struct.std::__1::__hash_node_base.306"* [ %33, %35 ], [ %94, %92 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.306"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %10, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %16, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %36
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %12
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %12
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %25
  br i1 %62, label %92, label %96

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.306"* %64 to %"struct.std::__1::__hash_value_type.454"*
  %66 = bitcast %"struct.std::__1::__hash_node_base.306"* %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %37
  br i1 %68, label %69, label %92

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %65, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %38
  br i1 %72, label %73, label %92

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.306"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %40
  br i1 %77, label %78, label %92

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %65, i64 0, i32 0, i32 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %42
  br i1 %81, label %82, label %92

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 4
  %84 = bitcast %"struct.std::__1::__hash_node_base.306"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %44
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 5
  %89 = bitcast %"struct.std::__1::__hash_node_base.306"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %96, label %92

92:                                               ; preds = %63, %82, %73, %78, %69, %60, %87
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.306"* %94, null
  br i1 %95, label %96, label %47

96:                                               ; preds = %87, %92, %60, %31, %2, %24
  %97 = phi %"struct.std::__1::__hash_node_base.306"* [ null, %24 ], [ null, %2 ], [ null, %31 ], [ %48, %87 ], [ null, %92 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base.306"* %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.306"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKS3_S5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.302"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::SurfaceManager::TemporaryReferenceData"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %6, i32 %8) #15
  %10 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %11 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %10) #15
  %12 = tail call i64 @_ZN4base10HashInts64Emm(i64 %9, i64 %11) #15
  %13 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %98, label %16

16:                                               ; preds = %4
  %17 = tail call i64 @llvm.ctpop.i64(i64 %14) #15, !range !86
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = add i64 %14, -1
  %21 = and i64 %20, %12
  br label %26

22:                                               ; preds = %16
  %23 = icmp ult i64 %12, %14
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = urem i64 %12, %14
  br label %26

26:                                               ; preds = %19, %22, %24
  %27 = phi i64 [ %21, %19 ], [ %25, %24 ], [ %12, %22 ]
  %28 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %29, i64 %27
  %31 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.306"* %31, null
  br i1 %32, label %98, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %31, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.306"* %35, null
  br i1 %36, label %98, label %37

37:                                               ; preds = %33
  %38 = add i64 %14, -1
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %7, align 4
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  br label %49

49:                                               ; preds = %37, %94
  %50 = phi %"struct.std::__1::__hash_node_base.306"* [ %35, %37 ], [ %96, %94 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.306"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %12
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %18, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %38
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %14
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %14
  br label %62

62:                                               ; preds = %56, %58, %60
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %27
  br i1 %64, label %65, label %98

65:                                               ; preds = %49, %62
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.306"* %66 to %"struct.std::__1::__hash_value_type.454"*
  %68 = bitcast %"struct.std::__1::__hash_node_base.306"* %66 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %39
  br i1 %70, label %71, label %94

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %67, i64 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %40
  br i1 %74, label %75, label %94

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %50, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base.306"* %76 to i32*
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, %42
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %67, i64 0, i32 0, i32 0, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, %44
  br i1 %83, label %84, label %94

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %50, i64 4
  %86 = bitcast %"struct.std::__1::__hash_node_base.306"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, %46
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %50, i64 5
  %91 = bitcast %"struct.std::__1::__hash_node_base.306"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %48
  br i1 %93, label %192, label %94

94:                                               ; preds = %84, %80, %75, %71, %65, %89
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %50, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.306"* %96, null
  br i1 %97, label %98, label %49

98:                                               ; preds = %62, %94, %33, %26, %4
  %99 = phi i64 [ %27, %26 ], [ -6148914691236517206, %4 ], [ %27, %33 ], [ %27, %94 ], [ %27, %62 ]
  %100 = tail call i8* @_Znwm(i64 56) #16, !noalias !95
  %101 = getelementptr inbounds i8, i8* %100, i64 16
  %102 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !noalias !95
  %104 = bitcast i8* %101 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %104, align 4, !noalias !95
  %105 = getelementptr inbounds i8, i8* %100, i64 32
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %107 = bitcast %"class.base::UnguessableToken"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %107, i64 16, i1 false) #15, !noalias !95
  %108 = getelementptr inbounds i8, i8* %100, i64 48
  %109 = getelementptr inbounds %"struct.viz::SurfaceManager::TemporaryReferenceData", %"struct.viz::SurfaceManager::TemporaryReferenceData"* %3, i64 0, i32 0
  %110 = load i8, i8* %109, align 1, !noalias !95
  store i8 %110, i8* %108, align 8, !noalias !95
  %111 = getelementptr inbounds i8, i8* %100, i64 8
  %112 = bitcast i8* %111 to i64*
  store i64 %12, i64* %112, align 8, !noalias !95
  %113 = bitcast i8* %100 to %"struct.std::__1::__hash_node_base.306"**
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %113, align 8, !noalias !95
  %114 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 2, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 1
  %117 = uitofp i64 %116 to float
  %118 = uitofp i64 %14 to float
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 3, i32 0, i32 0
  %120 = load float, float* %119, align 4
  %121 = fmul float %120, %118
  %122 = fcmp olt float %121, %117
  %123 = or i1 %15, %122
  br i1 %123, label %124, label %147

124:                                              ; preds = %98
  %125 = shl i64 %14, 1
  %126 = icmp ult i64 %14, 3
  %127 = tail call i64 @llvm.ctpop.i64(i64 %14) #15, !range !86
  %128 = icmp ugt i64 %127, 1
  %129 = or i1 %126, %128
  %130 = zext i1 %129 to i64
  %131 = or i64 %125, %130
  %132 = fdiv float %117, %120
  %133 = tail call float @llvm.ceil.f32(float %132) #15
  %134 = fptoui float %133 to i64
  %135 = icmp ult i64 %131, %134
  %136 = select i1 %135, i64 %134, i64 %131
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.302"* %0, i64 %136)
  %137 = load i64, i64* %13, align 8
  %138 = tail call i64 @llvm.ctpop.i64(i64 %137) #15, !range !86
  %139 = icmp ugt i64 %138, 1
  br i1 %139, label %143, label %140

140:                                              ; preds = %124
  %141 = add i64 %137, -1
  %142 = and i64 %141, %12
  br label %147

143:                                              ; preds = %124
  %144 = icmp ult i64 %12, %137
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = urem i64 %12, %137
  br label %147

147:                                              ; preds = %145, %143, %140, %98
  %148 = phi i64 [ %14, %98 ], [ %137, %140 ], [ %137, %143 ], [ %137, %145 ]
  %149 = phi i64 [ %99, %98 ], [ %142, %140 ], [ %12, %143 ], [ %146, %145 ]
  %150 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %151, i64 %149
  %153 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.306"* %153, null
  br i1 %154, label %155, label %181

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 1, i32 0, i32 0
  %157 = bitcast %"struct.std::__1::__hash_node_base.306"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast i8* %100 to i64*
  store i64 %158, i64* %159, align 8
  %160 = bitcast %"struct.std::__1::__hash_node_base.306"* %156 to i8**
  store i8* %100, i8** %160, align 8
  store %"struct.std::__1::__hash_node_base.306"* %156, %"struct.std::__1::__hash_node_base.306"** %152, align 8
  %161 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %113, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.306"* %161, null
  br i1 %162, label %188, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %161, i64 1
  %165 = bitcast %"struct.std::__1::__hash_node_base.306"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = tail call i64 @llvm.ctpop.i64(i64 %148) #15, !range !86
  %168 = icmp ugt i64 %167, 1
  br i1 %168, label %172, label %169

169:                                              ; preds = %163
  %170 = add i64 %148, -1
  %171 = and i64 %166, %170
  br label %176

172:                                              ; preds = %163
  %173 = icmp ult i64 %166, %148
  br i1 %173, label %176, label %174

174:                                              ; preds = %172
  %175 = urem i64 %166, %148
  br label %176

176:                                              ; preds = %169, %172, %174
  %177 = phi i64 [ %171, %169 ], [ %175, %174 ], [ %166, %172 ]
  %178 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %150, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %178, i64 %177
  %180 = bitcast %"struct.std::__1::__hash_node_base.306"** %179 to i8**
  br label %186

181:                                              ; preds = %147
  %182 = bitcast %"struct.std::__1::__hash_node_base.306"* %153 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast i8* %100 to i64*
  store i64 %183, i64* %184, align 8
  %185 = bitcast %"struct.std::__1::__hash_node_base.306"* %153 to i8**
  br label %186

186:                                              ; preds = %176, %181
  %187 = phi i8** [ %185, %181 ], [ %180, %176 ]
  store i8* %100, i8** %187, align 8
  br label %188

188:                                              ; preds = %186, %155
  %189 = bitcast i8* %100 to %"struct.std::__1::__hash_node_base.306"*
  %190 = load i64, i64* %114, align 8
  %191 = add i64 %190, 1
  store i64 %191, i64* %114, align 8
  br label %192

192:                                              ; preds = %89, %188
  %193 = phi i8 [ 1, %188 ], [ 0, %89 ]
  %194 = phi %"struct.std::__1::__hash_node_base.306"* [ %189, %188 ], [ %50, %89 ]
  %195 = insertvalue { %"struct.std::__1::__hash_node_base.306"*, i8 } undef, %"struct.std::__1::__hash_node_base.306"* %194, 0
  %196 = insertvalue { %"struct.std::__1::__hash_node_base.306"*, i8 } %195, i8 %193, 1
  ret { %"struct.std::__1::__hash_node_base.306"*, i8 } %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.302"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !86
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.302"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !86
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.302"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.302"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %172, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.302"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.306"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.306"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.308", %"class.std::__1::__bucket_list_deallocator.308"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !98

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.306"* %38, null
  br i1 %39, label %180, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.306"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !86
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.306"* %36, %"struct.std::__1::__hash_node_base.306"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.306"* %75, null
  br i1 %76, label %180, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %166
  %80 = phi %"struct.std::__1::__hash_node_base.306"* [ %75, %77 ], [ %170, %166 ]
  %81 = phi i64 [ %71, %77 ], [ %168, %166 ]
  %82 = phi %"struct.std::__1::__hash_node_base.306"* [ %38, %77 ], [ %167, %166 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.306"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %166, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.306"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.306"* %101 to %"struct.std::__1::__hash_value_type.454"*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %102, i64 0, i32 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base.306"* %104 to i32*
  %106 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %102, i64 0, i32 0, i32 0, i32 1, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %80, i64 4
  %108 = bitcast %"struct.std::__1::__hash_node_base.306"* %107 to i64*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %80, i64 5
  %110 = bitcast %"struct.std::__1::__hash_node_base.306"* %109 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.306"* %101 to i32*
  br label %113

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.306"* %82, %"struct.std::__1::__hash_node_base.306"** %97, align 8
  br label %166

113:                                              ; preds = %100, %147
  %114 = phi %"struct.std::__1::__hash_node_base.306"* [ %116, %147 ], [ %80, %100 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %114, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.306"* %116, null
  br i1 %117, label %153, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %116, i64 2
  %120 = bitcast %"struct.std::__1::__hash_node_base.306"* %119 to %"struct.std::__1::__hash_value_type.454"*
  %121 = load i32, i32* %111, align 4
  %122 = bitcast %"struct.std::__1::__hash_node_base.306"* %119 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %121, %123
  br i1 %124, label %125, label %153

125:                                              ; preds = %118
  %126 = load i32, i32* %103, align 4
  %127 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %120, i64 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %125
  %131 = load i32, i32* %105, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %116, i64 3
  %133 = bitcast %"struct.std::__1::__hash_node_base.306"* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %131, %134
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = load i32, i32* %106, align 4
  %138 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %120, i64 0, i32 0, i32 0, i32 1, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = load i64, i64* %108, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %116, i64 4
  %144 = bitcast %"struct.std::__1::__hash_node_base.306"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %142, %145
  br i1 %146, label %147, label %153

147:                                              ; preds = %141
  %148 = load i64, i64* %110, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %116, i64 5
  %150 = bitcast %"struct.std::__1::__hash_node_base.306"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %148, %151
  br i1 %152, label %113, label %153

153:                                              ; preds = %118, %141, %130, %136, %125, %113, %147
  %154 = ptrtoint %"struct.std::__1::__hash_node_base.306"* %116 to i64
  %155 = bitcast %"struct.std::__1::__hash_node_base.306"* %114 to i64*
  %156 = bitcast %"struct.std::__1::__hash_node_base.306"* %82 to i64*
  store i64 %154, i64* %156, align 8
  %157 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %157, i64 %93
  %159 = bitcast %"struct.std::__1::__hash_node_base.306"** %158 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %155, align 8
  %162 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %162, i64 %93
  %164 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %164, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.306"* %80, %"struct.std::__1::__hash_node_base.306"** %165, align 8
  br label %166

166:                                              ; preds = %92, %153, %112
  %167 = phi %"struct.std::__1::__hash_node_base.306"* [ %80, %112 ], [ %82, %153 ], [ %80, %92 ]
  %168 = phi i64 [ %93, %112 ], [ %81, %153 ], [ %81, %92 ]
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %167, i64 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.306"* %170, null
  br i1 %171, label %180, label %79

172:                                              ; preds = %2
  %173 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %173, align 8
  store %"struct.std::__1::__hash_node_base.306"** null, %"struct.std::__1::__hash_node_base.306"*** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.306"** %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = bitcast %"struct.std::__1::__hash_node_base.306"** %174 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  br label %178

178:                                              ; preds = %172, %176
  %179 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.308", %"class.std::__1::__bucket_list_deallocator.308"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %179, align 8
  br label %180

180:                                              ; preds = %166, %70, %35, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.330"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.326"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.530"* dereferenceable(8), %"class.std::__1::tuple.509"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %7, i32 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %69, label %14

14:                                               ; preds = %5
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.330"* %29, null
  br i1 %30, label %69, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.330"* %33, null
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %8, align 4
  br label %39

39:                                               ; preds = %35, %65
  %40 = phi %"struct.std::__1::__hash_node_base.330"* [ %33, %35 ], [ %67, %65 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %40, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.330"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %10
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  br i1 %16, label %48, label %46

46:                                               ; preds = %45
  %47 = and i64 %43, %36
  br label %52

48:                                               ; preds = %45
  %49 = icmp ult i64 %43, %12
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %43, %12
  br label %52

52:                                               ; preds = %46, %48, %50
  %53 = phi i64 [ %47, %46 ], [ %51, %50 ], [ %43, %48 ]
  %54 = icmp eq i64 %53, %25
  br i1 %54, label %55, label %69

55:                                               ; preds = %39, %52
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %40, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base.330"* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %37
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = bitcast %"struct.std::__1::__hash_node_base.330"* %56 to %"struct.std::__1::__hash_value_type.456"*
  %62 = getelementptr inbounds %"struct.std::__1::__hash_value_type.456", %"struct.std::__1::__hash_value_type.456"* %61, i64 0, i32 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %38
  br i1 %64, label %164, label %65

65:                                               ; preds = %60, %55
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %40, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.330"* %67, null
  br i1 %68, label %69, label %39

69:                                               ; preds = %52, %65, %31, %24, %5
  %70 = phi i64 [ %25, %24 ], [ -6148914691236517206, %5 ], [ %25, %31 ], [ %25, %65 ], [ %25, %52 ]
  %71 = tail call i8* @_Znwm(i64 48) #16, !noalias !99
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = getelementptr inbounds %"class.std::__1::tuple.530", %"class.std::__1::tuple.530"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %73, align 8, !noalias !99
  %75 = bitcast i8* %72 to i32*
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 4, !noalias !99
  store i32 %77, i32* %75, align 4, !noalias !99
  %78 = getelementptr inbounds i8, i8* %71, i64 20
  %79 = bitcast i8* %78 to i32*
  %80 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %74, i64 0, i32 1
  %81 = load i32, i32* %80, align 4, !noalias !99
  store i32 %81, i32* %79, align 4, !noalias !99
  %82 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #15, !noalias !99
  %83 = getelementptr inbounds i8, i8* %71, i64 8
  %84 = bitcast i8* %83 to i64*
  store i64 %10, i64* %84, align 8, !noalias !99
  %85 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.330"**
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %85, align 8, !noalias !99
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 2, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 1
  %89 = uitofp i64 %88 to float
  %90 = uitofp i64 %12 to float
  %91 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 3, i32 0, i32 0
  %92 = load float, float* %91, align 4
  %93 = fmul float %92, %90
  %94 = fcmp olt float %93, %89
  %95 = or i1 %13, %94
  br i1 %95, label %96, label %119

96:                                               ; preds = %69
  %97 = shl i64 %12, 1
  %98 = icmp ult i64 %12, 3
  %99 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %100 = icmp ugt i64 %99, 1
  %101 = or i1 %98, %100
  %102 = zext i1 %101 to i64
  %103 = or i64 %97, %102
  %104 = fdiv float %89, %92
  %105 = tail call float @llvm.ceil.f32(float %104) #15
  %106 = fptoui float %105 to i64
  %107 = icmp ult i64 %103, %106
  %108 = select i1 %107, i64 %106, i64 %103
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table.326"* %0, i64 %108)
  %109 = load i64, i64* %11, align 8
  %110 = tail call i64 @llvm.ctpop.i64(i64 %109) #15, !range !86
  %111 = icmp ugt i64 %110, 1
  br i1 %111, label %115, label %112

112:                                              ; preds = %96
  %113 = add i64 %109, -1
  %114 = and i64 %113, %10
  br label %119

115:                                              ; preds = %96
  %116 = icmp ult i64 %10, %109
  br i1 %116, label %119, label %117

117:                                              ; preds = %115
  %118 = urem i64 %10, %109
  br label %119

119:                                              ; preds = %117, %115, %112, %69
  %120 = phi i64 [ %12, %69 ], [ %109, %112 ], [ %109, %115 ], [ %109, %117 ]
  %121 = phi i64 [ %70, %69 ], [ %114, %112 ], [ %10, %115 ], [ %118, %117 ]
  %122 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %123, i64 %121
  %125 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.330"* %125, null
  br i1 %126, label %127, label %153

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 1, i32 0, i32 0
  %129 = bitcast %"struct.std::__1::__hash_node_base.330"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast i8* %71 to i64*
  store i64 %130, i64* %131, align 8
  %132 = bitcast %"struct.std::__1::__hash_node_base.330"* %128 to i8**
  store i8* %71, i8** %132, align 8
  store %"struct.std::__1::__hash_node_base.330"* %128, %"struct.std::__1::__hash_node_base.330"** %124, align 8
  %133 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %85, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.330"* %133, null
  br i1 %134, label %160, label %135

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %133, i64 1
  %137 = bitcast %"struct.std::__1::__hash_node_base.330"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = tail call i64 @llvm.ctpop.i64(i64 %120) #15, !range !86
  %140 = icmp ugt i64 %139, 1
  br i1 %140, label %144, label %141

141:                                              ; preds = %135
  %142 = add i64 %120, -1
  %143 = and i64 %138, %142
  br label %148

144:                                              ; preds = %135
  %145 = icmp ult i64 %138, %120
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = urem i64 %138, %120
  br label %148

148:                                              ; preds = %141, %144, %146
  %149 = phi i64 [ %143, %141 ], [ %147, %146 ], [ %138, %144 ]
  %150 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %122, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %150, i64 %149
  %152 = bitcast %"struct.std::__1::__hash_node_base.330"** %151 to i8**
  br label %158

153:                                              ; preds = %119
  %154 = bitcast %"struct.std::__1::__hash_node_base.330"* %125 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast i8* %71 to i64*
  store i64 %155, i64* %156, align 8
  %157 = bitcast %"struct.std::__1::__hash_node_base.330"* %125 to i8**
  br label %158

158:                                              ; preds = %148, %153
  %159 = phi i8** [ %157, %153 ], [ %152, %148 ]
  store i8* %71, i8** %159, align 8
  br label %160

160:                                              ; preds = %158, %127
  %161 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.330"*
  %162 = load i64, i64* %86, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %86, align 8
  br label %164

164:                                              ; preds = %60, %160
  %165 = phi i8 [ 1, %160 ], [ 0, %60 ]
  %166 = phi %"struct.std::__1::__hash_node_base.330"* [ %161, %160 ], [ %40, %60 ]
  %167 = insertvalue { %"struct.std::__1::__hash_node_base.330"*, i8 } undef, %"struct.std::__1::__hash_node_base.330"* %166, 0
  %168 = insertvalue { %"struct.std::__1::__hash_node_base.330"*, i8 } %167, i8 %165, 1
  ret { %"struct.std::__1::__hash_node_base.330"*, i8 } %168
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table.326"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !86
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.326"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !86
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.326"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.326"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %142, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.326"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.330"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.330"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.332", %"class.std::__1::__bucket_list_deallocator.332"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !102

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.330"* %38, null
  br i1 %39, label %150, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.330"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !86
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.330"* %36, %"struct.std::__1::__hash_node_base.330"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.330"* %75, null
  br i1 %76, label %150, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %136
  %80 = phi %"struct.std::__1::__hash_node_base.330"* [ %75, %77 ], [ %140, %136 ]
  %81 = phi i64 [ %71, %77 ], [ %138, %136 ]
  %82 = phi %"struct.std::__1::__hash_node_base.330"* [ %38, %77 ], [ %137, %136 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.330"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %136, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.330"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.330"* %101 to i32*
  %103 = bitcast %"struct.std::__1::__hash_node_base.330"* %101 to %"struct.std::__1::__hash_value_type.456"*
  %104 = getelementptr inbounds %"struct.std::__1::__hash_value_type.456", %"struct.std::__1::__hash_value_type.456"* %103, i64 0, i32 0, i32 0, i32 1
  br label %106

105:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.330"* %82, %"struct.std::__1::__hash_node_base.330"** %97, align 8
  br label %136

106:                                              ; preds = %100, %117
  %107 = phi %"struct.std::__1::__hash_node_base.330"* [ %109, %117 ], [ %80, %100 ]
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %107, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.330"* %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %109, i64 2
  %113 = load i32, i32* %102, align 4
  %114 = bitcast %"struct.std::__1::__hash_node_base.330"* %112 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %111
  %118 = bitcast %"struct.std::__1::__hash_node_base.330"* %112 to %"struct.std::__1::__hash_value_type.456"*
  %119 = load i32, i32* %104, align 4
  %120 = getelementptr inbounds %"struct.std::__1::__hash_value_type.456", %"struct.std::__1::__hash_value_type.456"* %118, i64 0, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %106, label %123

123:                                              ; preds = %111, %106, %117
  %124 = ptrtoint %"struct.std::__1::__hash_node_base.330"* %109 to i64
  %125 = bitcast %"struct.std::__1::__hash_node_base.330"* %107 to i64*
  %126 = bitcast %"struct.std::__1::__hash_node_base.330"* %82 to i64*
  store i64 %124, i64* %126, align 8
  %127 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %127, i64 %93
  %129 = bitcast %"struct.std::__1::__hash_node_base.330"** %128 to i64**
  %130 = load i64*, i64** %129, align 8
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %125, align 8
  %132 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %11, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %132, i64 %93
  %134 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %134, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.330"* %80, %"struct.std::__1::__hash_node_base.330"** %135, align 8
  br label %136

136:                                              ; preds = %92, %123, %105
  %137 = phi %"struct.std::__1::__hash_node_base.330"* [ %80, %105 ], [ %82, %123 ], [ %80, %92 ]
  %138 = phi i64 [ %93, %105 ], [ %81, %123 ], [ %81, %92 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %137, i64 0, i32 0
  %140 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.330"* %140, null
  br i1 %141, label %150, label %79

142:                                              ; preds = %2
  %143 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %143, align 8
  store %"struct.std::__1::__hash_node_base.330"** null, %"struct.std::__1::__hash_node_base.330"*** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.330"** %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = bitcast %"struct.std::__1::__hash_node_base.330"** %144 to i8*
  tail call void @_ZdlPv(i8* %147) #16
  br label %148

148:                                              ; preds = %142, %146
  %149 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.332", %"class.std::__1::__bucket_list_deallocator.332"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %149, align 8
  br label %150

150:                                              ; preds = %136, %70, %35, %148
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.viz::SurfaceManager"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.viz::SurfaceManager"*)**
  %21 = load void (%"class.viz::SurfaceManager"*)*, void (%"class.viz::SurfaceManager"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.viz::SurfaceManager"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.viz::SurfaceManager"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.viz::SurfaceManager"* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare zeroext i1 @_ZNK3viz14LocalSurfaceId11IsNewerThanERKS0_(%"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.306"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.302"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %4, i32 %6) #15
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1
  %9 = tail call i64 @_ZNK3viz14LocalSurfaceId4hashEv(%"class.viz::LocalSurfaceId"* %8) #15
  %10 = tail call i64 @_ZN4base10HashInts64Emm(i64 %7, i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %96, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !86
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ult i64 %10, %12
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.306"* %29, null
  br i1 %30, label %96, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %29, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.306"* %33, null
  br i1 %34, label %96, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, -1
  %37 = load i32, i32* %3, align 4
  %38 = load i32, i32* %5, align 4
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %92
  %48 = phi %"struct.std::__1::__hash_node_base.306"* [ %33, %35 ], [ %94, %92 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.306"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %10
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %16, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %36
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %12
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %12
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %25
  br i1 %62, label %92, label %96

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.306"* %64 to %"struct.std::__1::__hash_value_type.454"*
  %66 = bitcast %"struct.std::__1::__hash_node_base.306"* %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %37
  br i1 %68, label %69, label %92

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %65, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %38
  br i1 %72, label %73, label %92

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.306"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %40
  br i1 %77, label %78, label %92

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.std::__1::__hash_value_type.454", %"struct.std::__1::__hash_value_type.454"* %65, i64 0, i32 0, i32 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %42
  br i1 %81, label %82, label %92

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 4
  %84 = bitcast %"struct.std::__1::__hash_node_base.306"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %44
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 5
  %89 = bitcast %"struct.std::__1::__hash_node_base.306"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %96, label %92

92:                                               ; preds = %63, %82, %73, %78, %69, %60, %87
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %48, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.306"* %94, null
  br i1 %95, label %96, label %47

96:                                               ; preds = %87, %92, %60, %31, %2, %24
  %97 = phi %"struct.std::__1::__hash_node_base.306"* [ null, %24 ], [ null, %2 ], [ null, %31 ], [ %48, %87 ], [ null, %92 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base.306"* %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.521"* noalias sret, %"class.std::__1::__hash_table.302"*, %"struct.std::__1::__hash_node_base.306"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.306"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #15, !range !86
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.306"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.306"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.313"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.306"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.306"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.306"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.306"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.306"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.306"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306", %"struct.std::__1::__hash_node_base.306"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.306"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.306"**, %"struct.std::__1::__hash_node_base.306"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.306"*, %"struct.std::__1::__hash_node_base.306"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.306"* %25, %"struct.std::__1::__hash_node_base.306"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.306"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.306"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.306"* null, %"struct.std::__1::__hash_node_base.306"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.302", %"class.std::__1::__hash_table.302"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.306"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.521"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.521", %"class.std::__1::unique_ptr.521"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.316"** %98 to %"class.std::__1::__compressed_pair.313"**
  store %"class.std::__1::__compressed_pair.313"* %30, %"class.std::__1::__compressed_pair.313"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.521", %"class.std::__1::unique_ptr.521"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE14__erase_uniqueIS3_EEmRKT_(%"class.std::__1::__hash_table.326"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.532", align 8
  %4 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %5, i32 %7) #15
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %88, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #15, !range !86
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ult i64 %8, %10
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.330"* %27, null
  br i1 %28, label %88, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.330"* %31, null
  br i1 %32, label %88, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %6, align 4
  br label %37

37:                                               ; preds = %63, %33
  %38 = phi %"struct.std::__1::__hash_node_base.330"* [ %31, %33 ], [ %65, %63 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %38, i64 1
  %40 = bitcast %"struct.std::__1::__hash_node_base.330"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %8
  br i1 %42, label %53, label %43

43:                                               ; preds = %37
  br i1 %14, label %46, label %44

44:                                               ; preds = %43
  %45 = and i64 %41, %34
  br label %50

46:                                               ; preds = %43
  %47 = icmp ult i64 %41, %10
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %41, %10
  br label %50

50:                                               ; preds = %48, %46, %44
  %51 = phi i64 [ %45, %44 ], [ %49, %48 ], [ %41, %46 ]
  %52 = icmp eq i64 %51, %23
  br i1 %52, label %63, label %88

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %38, i64 2
  %55 = bitcast %"struct.std::__1::__hash_node_base.330"* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %35
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.330"* %54 to %"struct.std::__1::__hash_value_type.456"*
  %60 = getelementptr inbounds %"struct.std::__1::__hash_value_type.456", %"struct.std::__1::__hash_value_type.456"* %59, i64 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %36
  br i1 %62, label %67, label %63

63:                                               ; preds = %58, %53, %50
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %38, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.330"* %65, null
  br i1 %66, label %88, label %37

67:                                               ; preds = %58
  %68 = bitcast %"class.std::__1::unique_ptr.532"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.532"* nonnull sret %3, %"class.std::__1::__hash_table.326"* %0, %"struct.std::__1::__hash_node_base.330"* nonnull %38) #15
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.532"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__hash_node.455"*, %"struct.std::__1::__hash_node.455"** %69, align 8
  store %"struct.std::__1::__hash_node.455"* null, %"struct.std::__1::__hash_node.455"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node.455"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.532"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node.455", %"struct.std::__1::__hash_node.455"* %70, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %78 = load %"class.viz::LocalSurfaceId"*, %"class.viz::LocalSurfaceId"** %77, align 8
  %79 = icmp eq %"class.viz::LocalSurfaceId"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"class.viz::LocalSurfaceId"* %78 to i64
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node.455", %"struct.std::__1::__hash_node.455"* %70, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %83 = bitcast %"class.viz::LocalSurfaceId"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"class.viz::LocalSurfaceId"* %78 to i8*
  call void @_ZdlPv(i8* %84) #16
  br label %85

85:                                               ; preds = %80, %76, %72
  %86 = bitcast %"struct.std::__1::__hash_node.455"* %70 to i8*
  call void @_ZdlPv(i8* %86) #16
  br label %87

87:                                               ; preds = %67, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68)
  br label %88

88:                                               ; preds = %50, %63, %29, %2, %22, %87
  %89 = phi i64 [ 1, %87 ], [ 0, %22 ], [ 0, %2 ], [ 0, %29 ], [ 0, %63 ], [ 0, %50 ]
  ret i64 %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.532"* noalias sret, %"class.std::__1::__hash_table.326"*, %"struct.std::__1::__hash_node_base.330"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.330"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #15, !range !86
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.330"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.330"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.337"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.330"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.330"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.330"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.330"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.330"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.330"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330", %"struct.std::__1::__hash_node_base.330"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.330"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.330"**, %"struct.std::__1::__hash_node_base.330"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.330"*, %"struct.std::__1::__hash_node_base.330"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.330"* %25, %"struct.std::__1::__hash_node_base.330"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.330"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.330"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.330"* null, %"struct.std::__1::__hash_node_base.330"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.326", %"class.std::__1::__hash_table.326"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.330"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.532"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.532"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.340"** %98 to %"class.std::__1::__compressed_pair.337"**
  store %"class.std::__1::__compressed_pair.337"* %30, %"class.std::__1::__compressed_pair.337"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.532"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4base16UnguessableTokenENS_10unique_ptrIN3viz22SurfaceAllocationGroupENS_14default_deleteIS6_EEEEEENS_9allocatorISA_EEE7emplaceIJRKS3_S9_EEENS_11__wrap_iterIPSA_EENSH_IPKSA_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, %"class.base::UnguessableToken"* dereferenceable(16), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__split_buffer.554", align 8
  %6 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  br i1 %12, label %14, label %90

14:                                               ; preds = %4
  %15 = icmp eq %"struct.std::__1::pair"* %9, %1
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %18 = bitcast %"class.base::UnguessableToken"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #15
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %25 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  %26 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %25, i64* %26, align 8
  br label %223

27:                                               ; preds = %14
  %28 = bitcast %"class.base::UnguessableToken"* %2 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %30, align 8
  %33 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %35 = ptrtoint %"struct.std::__1::pair"* %33 to i64
  %36 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 24
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %38
  %40 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %41 = icmp ult %"struct.std::__1::pair"* %39, %33
  br i1 %41, label %67, label %44

42:                                               ; preds = %67
  %43 = ptrtoint %"struct.std::__1::pair"* %79 to i64
  br label %44

44:                                               ; preds = %42, %27
  %45 = phi i64 [ %43, %42 ], [ %35, %27 ]
  store i64 %45, i64* %40, align 8
  %46 = icmp eq i64 %37, 0
  br i1 %46, label %81, label %47

47:                                               ; preds = %44, %65
  %48 = phi %"struct.std::__1::pair"* [ %51, %65 ], [ %33, %44 ]
  %49 = phi %"struct.std::__1::pair"* [ %50, %65 ], [ %39, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 -1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 -1
  %52 = bitcast %"struct.std::__1::pair"* %51 to i8*
  %53 = bitcast %"struct.std::__1::pair"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false) #15
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 -1, i32 1
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 -1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %54 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %56, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %"class.viz::SurfaceAllocationGroup"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %47
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %60) #15
  %64 = bitcast %"class.viz::SurfaceAllocationGroup"* %60 to i8*
  tail call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %63, %47
  %66 = icmp eq %"struct.std::__1::pair"* %50, %1
  br i1 %66, label %81, label %47

67:                                               ; preds = %27, %67
  %68 = phi %"struct.std::__1::pair"* [ %79, %67 ], [ %33, %27 ]
  %69 = phi %"struct.std::__1::pair"* [ %78, %67 ], [ %39, %27 ]
  %70 = bitcast %"struct.std::__1::pair"* %68 to i8*
  %71 = bitcast %"struct.std::__1::pair"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 16, i1 false) #15
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %74, align 8
  %77 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 1
  %80 = icmp ult %"struct.std::__1::pair"* %78, %33
  br i1 %80, label %67, label %42

81:                                               ; preds = %65, %44
  %82 = bitcast %"struct.std::__1::pair"* %1 to <16 x i8>*
  store <16 x i8> %29, <16 x i8>* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %32, i64* %86, align 8
  %87 = icmp eq %"class.viz::SurfaceAllocationGroup"* %85, null
  br i1 %87, label %223, label %88

88:                                               ; preds = %81
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %85) #15
  %89 = bitcast %"class.viz::SurfaceAllocationGroup"* %85 to i8*
  tail call void @_ZdlPv(i8* %89) #16
  br label %223

90:                                               ; preds = %4
  %91 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %93 = bitcast %"struct.std::__1::__split_buffer.554"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #15
  %94 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %5, i64 0, i32 0
  %95 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %5, i64 0, i32 1
  %96 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %5, i64 0, i32 2
  %97 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %5, i64 0, i32 3, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %5, i64 0, i32 3, i32 1, i32 0
  %99 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %100 = bitcast %"class.std::__1::vector"* %0 to i64*
  %101 = bitcast %"struct.std::__1::__split_buffer.554"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 40, i1 false)
  %102 = load i64, i64* %100, align 8
  %103 = sub i64 %91, %102
  %104 = sdiv exact i64 %103, 24
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 768614336404564650
  br i1 %106, label %107, label %109

107:                                              ; preds = %90
  %108 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #17
  unreachable

109:                                              ; preds = %90
  %110 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %111 = sub i64 %13, %102
  %112 = sdiv exact i64 %111, 24
  %113 = icmp ult i64 %112, 384307168202282325
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = sub i64 %6, %102
  %116 = sdiv exact i64 %115, 24
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %97, align 8
  %117 = bitcast %"class.std::__1::allocator.247"** %98 to %"class.std::__1::__compressed_pair.244"**
  store %"class.std::__1::__compressed_pair.244"* %92, %"class.std::__1::__compressed_pair.244"** %117, align 8
  br label %126

118:                                              ; preds = %109
  %119 = shl nsw i64 %112, 1
  %120 = icmp ult i64 %119, %105
  %121 = select i1 %120, i64 %105, i64 %119
  %122 = sub i64 %6, %102
  %123 = sdiv exact i64 %122, 24
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %97, align 8
  %124 = bitcast %"class.std::__1::allocator.247"** %98 to %"class.std::__1::__compressed_pair.244"**
  store %"class.std::__1::__compressed_pair.244"* %92, %"class.std::__1::__compressed_pair.244"** %124, align 8
  %125 = icmp eq i64 %121, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %118, %114
  %127 = phi i64 [ %116, %114 ], [ %123, %118 ]
  %128 = phi i64 [ 768614336404564650, %114 ], [ %121, %118 ]
  %129 = mul i64 %128, 24
  %130 = tail call i8* @_Znwm(i64 %129) #16
  %131 = bitcast i8* %130 to %"struct.std::__1::pair"*
  br label %132

132:                                              ; preds = %118, %126
  %133 = phi i64 [ %127, %126 ], [ %123, %118 ]
  %134 = phi i64 [ %128, %126 ], [ 0, %118 ]
  %135 = phi %"struct.std::__1::pair"* [ %131, %126 ], [ null, %118 ]
  store %"struct.std::__1::pair"* %135, %"struct.std::__1::pair"** %94, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %135, i64 %133
  store %"struct.std::__1::pair"* %136, %"struct.std::__1::pair"** %96, align 8
  store %"struct.std::__1::pair"* %136, %"struct.std::__1::pair"** %95, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %135, i64 %134
  store %"struct.std::__1::pair"* %137, %"struct.std::__1::pair"** %97, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4base16UnguessableTokenENS_10unique_ptrIN3viz22SurfaceAllocationGroupENS_14default_deleteIS6_EEEEEERNS_9allocatorISA_EEE12emplace_backIJRKS3_S9_EEEvDpOT_(%"struct.std::__1::__split_buffer.554"* nonnull %5, %"class.base::UnguessableToken"* dereferenceable(16) %2, %"class.std::__1::unique_ptr"* dereferenceable(8) %3)
  %138 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %95, align 8
  %139 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %140 = icmp eq %"struct.std::__1::pair"* %139, %1
  br i1 %140, label %157, label %141

141:                                              ; preds = %132, %141
  %142 = phi %"struct.std::__1::pair"* [ %155, %141 ], [ %138, %132 ]
  %143 = phi %"struct.std::__1::pair"* [ %145, %141 ], [ %1, %132 ]
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 -1
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 -1
  %146 = bitcast %"struct.std::__1::pair"* %144 to i8*
  %147 = bitcast %"struct.std::__1::pair"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 16, i1 false) #15
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 -1, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 -1, i32 1
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %149, i64 0, i32 0, i32 0, i32 0
  %151 = bitcast %"class.std::__1::unique_ptr"* %149 to i64*
  %152 = load i64, i64* %151, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %150, align 8
  %153 = bitcast %"class.std::__1::unique_ptr"* %148 to i64*
  store i64 %152, i64* %153, align 8
  %154 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %95, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %154, i64 -1
  store %"struct.std::__1::pair"* %155, %"struct.std::__1::pair"** %95, align 8
  %156 = icmp eq %"struct.std::__1::pair"* %145, %139
  br i1 %156, label %157, label %141

157:                                              ; preds = %141, %132
  %158 = phi %"struct.std::__1::pair"* [ %138, %132 ], [ %155, %141 ]
  %159 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %160 = icmp eq %"struct.std::__1::pair"* %159, %1
  br i1 %160, label %161, label %167

161:                                              ; preds = %157
  %162 = ptrtoint %"struct.std::__1::pair"* %159 to i64
  %163 = ptrtoint %"struct.std::__1::pair"* %158 to i64
  %164 = bitcast %"struct.std::__1::pair"** %95 to i64*
  %165 = bitcast %"struct.std::__1::pair"** %96 to i64*
  %166 = load i64, i64* %165, align 8
  br label %190

167:                                              ; preds = %157
  %168 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %96, align 8
  br label %169

169:                                              ; preds = %169, %167
  %170 = phi %"struct.std::__1::pair"* [ %182, %169 ], [ %168, %167 ]
  %171 = phi %"struct.std::__1::pair"* [ %180, %169 ], [ %1, %167 ]
  %172 = bitcast %"struct.std::__1::pair"* %170 to i8*
  %173 = bitcast %"struct.std::__1::pair"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false) #15
  %174 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 0, i32 1
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 0, i32 1
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = bitcast %"class.std::__1::unique_ptr"* %175 to i64*
  %178 = load i64, i64* %177, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %176, align 8
  %179 = bitcast %"class.std::__1::unique_ptr"* %174 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 1
  %181 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %96, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 1
  store %"struct.std::__1::pair"* %182, %"struct.std::__1::pair"** %96, align 8
  %183 = icmp eq %"struct.std::__1::pair"* %180, %159
  br i1 %183, label %184, label %169

184:                                              ; preds = %169
  %185 = ptrtoint %"struct.std::__1::pair"* %182 to i64
  %186 = bitcast %"struct.std::__1::pair"** %95 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = load i64, i64* %99, align 8
  %189 = bitcast %"struct.std::__1::pair"** %96 to i64*
  br label %190

190:                                              ; preds = %161, %184
  %191 = phi i64* [ %165, %161 ], [ %189, %184 ]
  %192 = phi i64 [ %166, %161 ], [ %185, %184 ]
  %193 = phi i64 [ %162, %161 ], [ %188, %184 ]
  %194 = phi i64* [ %164, %161 ], [ %186, %184 ]
  %195 = phi i64 [ %163, %161 ], [ %187, %184 ]
  %196 = load i64, i64* %100, align 8
  store i64 %195, i64* %100, align 8
  store i64 %196, i64* %194, align 8
  store i64 %192, i64* %99, align 8
  store i64 %193, i64* %191, align 8
  %197 = load i64, i64* %110, align 8
  %198 = bitcast %"struct.std::__1::pair"** %97 to i64*
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %110, align 8
  store i64 %197, i64* %198, align 8
  %200 = bitcast %"struct.std::__1::__split_buffer.554"* %5 to i64*
  store i64 %196, i64* %200, align 8
  %201 = inttoptr i64 %196 to %"struct.std::__1::pair"*
  %202 = inttoptr i64 %193 to %"struct.std::__1::pair"*
  %203 = icmp eq %"struct.std::__1::pair"* %202, %201
  br i1 %203, label %217, label %204

204:                                              ; preds = %190, %212
  %205 = phi %"struct.std::__1::pair"* [ %213, %212 ], [ %202, %190 ]
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 -1
  store %"struct.std::__1::pair"* %206, %"struct.std::__1::pair"** %96, align 8
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 -1, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %207, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %207, align 8
  %209 = icmp eq %"class.viz::SurfaceAllocationGroup"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %204
  call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %208) #15
  %211 = bitcast %"class.viz::SurfaceAllocationGroup"* %208 to i8*
  call void @_ZdlPv(i8* %211) #16
  br label %212

212:                                              ; preds = %210, %204
  %213 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %96, align 8
  %214 = icmp eq %"struct.std::__1::pair"* %213, %201
  br i1 %214, label %215, label %204

215:                                              ; preds = %212
  %216 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %94, align 8
  br label %217

217:                                              ; preds = %215, %190
  %218 = phi %"struct.std::__1::pair"* [ %216, %215 ], [ %201, %190 ]
  %219 = icmp eq %"struct.std::__1::pair"* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %217
  %221 = bitcast %"struct.std::__1::pair"* %218 to i8*
  call void @_ZdlPv(i8* %221) #16
  br label %222

222:                                              ; preds = %217, %220
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #15
  br label %223

223:                                              ; preds = %81, %88, %16, %222
  %224 = phi %"struct.std::__1::pair"* [ %1, %16 ], [ %138, %222 ], [ %1, %88 ], [ %1, %81 ]
  ret %"struct.std::__1::pair"* %224
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4base16UnguessableTokenENS_10unique_ptrIN3viz22SurfaceAllocationGroupENS_14default_deleteIS6_EEEEEERNS_9allocatorISA_EEE12emplace_backIJRKS3_S9_EEEvDpOT_(%"struct.std::__1::__split_buffer.554"*, %"class.base::UnguessableToken"* dereferenceable(16), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %120

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.554", %"struct.std::__1::__split_buffer.554"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  br i1 %15, label %17, label %51

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 24
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %24, label %47, label %25

25:                                               ; preds = %17, %41
  %26 = phi %"struct.std::__1::pair"* [ %43, %41 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair"* [ %42, %41 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair"* %26 to i8*
  %29 = bitcast %"struct.std::__1::pair"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #15
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %32, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %34, i64* %37, align 8
  %38 = icmp eq %"class.viz::SurfaceAllocationGroup"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %25
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %36) #15
  %40 = bitcast %"class.viz::SurfaceAllocationGroup"* %36 to i8*
  tail call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %39, %25
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %44 = icmp eq %"struct.std::__1::pair"* %42, %5
  br i1 %44, label %45, label %25

45:                                               ; preds = %41
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %47

47:                                               ; preds = %45, %17
  %48 = phi %"struct.std::__1::pair"* [ %5, %17 ], [ %46, %45 ]
  %49 = phi %"struct.std::__1::pair"* [ %23, %17 ], [ %43, %45 ]
  store %"struct.std::__1::pair"* %49, %"struct.std::__1::pair"** %4, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 %22
  store %"struct.std::__1::pair"* %50, %"struct.std::__1::pair"** %11, align 8
  br label %120

51:                                               ; preds = %10
  %52 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %53 = bitcast %"struct.std::__1::__split_buffer.554"* %0 to i64*
  %54 = sub i64 %9, %16
  %55 = sdiv exact i64 %54, 24
  %56 = shl nsw i64 %55, 1
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 1, i64 %56
  %59 = icmp ugt i64 %58, 768614336404564650
  br i1 %59, label %60, label %61

60:                                               ; preds = %51
  tail call void @abort() #17
  unreachable

61:                                               ; preds = %51
  %62 = lshr i64 %58, 2
  %63 = mul i64 %58, 24
  %64 = tail call i8* @_Znwm(i64 %63) #16
  %65 = bitcast i8* %64 to %"struct.std::__1::pair"*
  %66 = ptrtoint i8* %64 to i64
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 %62
  %68 = ptrtoint %"struct.std::__1::pair"* %67 to i64
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 %58
  %70 = ptrtoint %"struct.std::__1::pair"* %69 to i64
  %71 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %72 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %73 = sub i64 %72, %71
  %74 = sdiv exact i64 %73, 24
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 %74
  %76 = icmp eq i64 %73, 0
  br i1 %76, label %98, label %77

77:                                               ; preds = %61, %77
  %78 = phi %"struct.std::__1::pair"* [ %89, %77 ], [ %67, %61 ]
  %79 = phi i64 [ %90, %77 ], [ %68, %61 ]
  %80 = phi %"struct.std::__1::pair"* [ %91, %77 ], [ %12, %61 ]
  %81 = inttoptr i64 %79 to i8*
  %82 = bitcast %"struct.std::__1::pair"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #15
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 1
  %90 = ptrtoint %"struct.std::__1::pair"* %89 to i64
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 1
  %92 = icmp eq %"struct.std::__1::pair"* %75, %89
  br i1 %92, label %93, label %77

93:                                               ; preds = %77
  %94 = ptrtoint %"struct.std::__1::pair"* %75 to i64
  %95 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %96 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %97 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %98

98:                                               ; preds = %61, %93
  %99 = phi %"struct.std::__1::pair"* [ %97, %93 ], [ %5, %61 ]
  %100 = phi %"struct.std::__1::pair"* [ %96, %93 ], [ %12, %61 ]
  %101 = phi %"struct.std::__1::pair"* [ %95, %93 ], [ %14, %61 ]
  %102 = phi i64 [ %94, %93 ], [ %68, %61 ]
  store i64 %66, i64* %53, align 8
  %103 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %68, i64* %103, align 8
  %104 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %102, i64* %104, align 8
  store i64 %70, i64* %52, align 8
  %105 = icmp eq %"struct.std::__1::pair"* %99, %100
  br i1 %105, label %116, label %106

106:                                              ; preds = %98, %114
  %107 = phi %"struct.std::__1::pair"* [ %108, %114 ], [ %99, %98 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 -1
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 -1, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %109, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %109, align 8
  %111 = icmp eq %"class.viz::SurfaceAllocationGroup"* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  tail call void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"* nonnull %110) #15
  %113 = bitcast %"class.viz::SurfaceAllocationGroup"* %110 to i8*
  tail call void @_ZdlPv(i8* %113) #16
  br label %114

114:                                              ; preds = %112, %106
  %115 = icmp eq %"struct.std::__1::pair"* %108, %100
  br i1 %115, label %116, label %106

116:                                              ; preds = %114, %98
  %117 = icmp eq %"struct.std::__1::pair"* %101, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = bitcast %"struct.std::__1::pair"* %101 to i8*
  tail call void @_ZdlPv(i8* %119) #16
  br label %120

120:                                              ; preds = %118, %116, %47, %3
  %121 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %122 = bitcast %"struct.std::__1::pair"* %121 to i8*
  %123 = bitcast %"class.base::UnguessableToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #15
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 0, i32 1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %127 = load i64, i64* %126, align 8
  store %"class.viz::SurfaceAllocationGroup"* null, %"class.viz::SurfaceAllocationGroup"** %125, align 8
  %128 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 1
  store %"struct.std::__1::pair"* %130, %"struct.std::__1::pair"** %4, align 8
  ret void
}

declare void @_ZN3viz22SurfaceAllocationGroupC1EPNS_14SurfaceManagerERKNS_11FrameSinkIdERKN4base16UnguessableTokenE(%"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceManager"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.253"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS0_IPNS2_22SurfaceAllocationGroupENS_9allocatorIS5_EEEEEENS6_IS9_EEE7emplaceIJRKS3_S8_EEENS_11__wrap_iterIPS9_EENSF_IPKS9_EEDpOT_(%"class.std::__1::vector.251"*, %"struct.std::__1::pair.253"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.std::__1::vector.190"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.253"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.560", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.253"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.253"* %11 to i64
  br i1 %12, label %14, label %215

14:                                               ; preds = %4
  %15 = icmp eq %"struct.std::__1::pair.253"* %9, %1
  br i1 %15, label %16, label %42

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 1
  %24 = bitcast %"class.std::__1::vector.190"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #15
  %25 = bitcast %"class.std::__1::vector.190"* %3 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.190"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %3, i64 0, i32 0, i32 1
  %29 = bitcast %"class.viz::SurfaceAllocationGroup"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"class.viz::SurfaceAllocationGroup"*** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.viz::SurfaceAllocationGroup"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.viz::SurfaceAllocationGroup"*** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.190"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.253"* %39 to i64
  %41 = bitcast %"struct.std::__1::pair.253"** %8 to i64*
  store i64 %40, i64* %41, align 8
  br label %384

42:                                               ; preds = %14
  %43 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"class.std::__1::vector.190"* %3 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.viz::SurfaceAllocationGroup"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.190"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #15
  %53 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %8, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 1
  %55 = ptrtoint %"struct.std::__1::pair.253"* %53 to i64
  %56 = ptrtoint %"struct.std::__1::pair.253"* %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 %58
  %60 = bitcast %"struct.std::__1::pair.253"** %8 to i64*
  %61 = icmp ult %"struct.std::__1::pair.253"* %59, %53
  br i1 %61, label %62, label %105

62:                                               ; preds = %42
  %63 = sub nsw i64 0, %58
  %64 = getelementptr %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 %63, i32 0, i32 0
  %65 = bitcast i32* %64 to i8*
  %66 = xor i64 %5, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = and i64 %68, 32
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %97

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %59, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %72, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 %58, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %75, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 %58, i32 1
  %80 = bitcast %"class.std::__1::vector.190"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #15
  %81 = bitcast %"class.std::__1::vector.190"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.190"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 %58, i32 1, i32 0, i32 1
  %85 = bitcast %"class.viz::SurfaceAllocationGroup"*** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 0, i32 1, i32 0, i32 1
  %88 = bitcast %"class.viz::SurfaceAllocationGroup"*** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 %58, i32 1, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"class.viz::SurfaceAllocationGroup"*** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.viz::SurfaceAllocationGroup"*** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast %"class.std::__1::vector.190"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #15
  %95 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %59, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %53, i64 1
  br label %97

97:                                               ; preds = %71, %62
  %98 = phi %"struct.std::__1::pair.253"* [ %53, %62 ], [ %96, %71 ]
  %99 = phi %"struct.std::__1::pair.253"* [ %59, %62 ], [ %95, %71 ]
  %100 = phi %"struct.std::__1::pair.253"* [ undef, %62 ], [ %96, %71 ]
  %101 = icmp ult i8* %67, inttoptr (i64 32 to i8*)
  br i1 %101, label %102, label %143

102:                                              ; preds = %143, %97
  %103 = phi %"struct.std::__1::pair.253"* [ %100, %97 ], [ %193, %143 ]
  %104 = ptrtoint %"struct.std::__1::pair.253"* %103 to i64
  br label %105

105:                                              ; preds = %102, %42
  %106 = phi i64 [ %104, %102 ], [ %55, %42 ]
  store i64 %106, i64* %60, align 8
  %107 = icmp eq i64 %57, 0
  br i1 %107, label %195, label %108

108:                                              ; preds = %105, %127
  %109 = phi %"struct.std::__1::pair.253"* [ %112, %127 ], [ %53, %105 ]
  %110 = phi %"struct.std::__1::pair.253"* [ %111, %127 ], [ %59, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %110, i64 -1
  %112 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %109, i64 -1
  %113 = bitcast %"struct.std::__1::pair.253"* %111 to i64*
  %114 = bitcast %"struct.std::__1::pair.253"* %112 to i64*
  %115 = load i64, i64* %113, align 4
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %110, i64 -1, i32 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %109, i64 -1, i32 1
  %118 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %118, align 8
  %120 = icmp eq %"class.viz::SurfaceAllocationGroup"** %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %108
  %122 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %119 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %109, i64 -1, i32 1, i32 0, i32 1
  %124 = bitcast %"class.viz::SurfaceAllocationGroup"*** %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = bitcast %"class.viz::SurfaceAllocationGroup"** %119 to i8*
  tail call void @_ZdlPv(i8* %125) #16
  %126 = bitcast %"class.std::__1::vector.190"* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #15
  br label %127

127:                                              ; preds = %108, %121
  %128 = bitcast %"class.std::__1::vector.190"* %116 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector.190"* %117 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %110, i64 -1, i32 1, i32 0, i32 1
  %132 = bitcast %"class.viz::SurfaceAllocationGroup"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %109, i64 -1, i32 1, i32 0, i32 1
  %135 = bitcast %"class.viz::SurfaceAllocationGroup"*** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %110, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast %"class.viz::SurfaceAllocationGroup"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %109, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"class.viz::SurfaceAllocationGroup"*** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"class.std::__1::vector.190"* %116 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #15
  %142 = icmp eq %"struct.std::__1::pair.253"* %111, %1
  br i1 %142, label %195, label %108

143:                                              ; preds = %97, %143
  %144 = phi %"struct.std::__1::pair.253"* [ %193, %143 ], [ %98, %97 ]
  %145 = phi %"struct.std::__1::pair.253"* [ %192, %143 ], [ %99, %97 ]
  %146 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 0, i32 0, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 0, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 0, i32 1
  %153 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 0, i32 1
  %154 = bitcast %"class.std::__1::vector.190"* %152 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #15
  %155 = bitcast %"class.std::__1::vector.190"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::vector.190"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 0, i32 1, i32 0, i32 1
  %159 = bitcast %"class.viz::SurfaceAllocationGroup"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 0, i32 1, i32 0, i32 1
  %162 = bitcast %"class.viz::SurfaceAllocationGroup"*** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %164 = bitcast %"class.viz::SurfaceAllocationGroup"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast %"class.viz::SurfaceAllocationGroup"*** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast %"class.std::__1::vector.190"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #15
  %169 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 1, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 1, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 1, i32 0, i32 1
  %173 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 1, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 1, i32 1
  %176 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 1, i32 1
  %177 = bitcast %"class.std::__1::vector.190"* %175 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 24, i1 false) #15
  %178 = bitcast %"class.std::__1::vector.190"* %176 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.std::__1::vector.190"* %175 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 1, i32 1, i32 0, i32 1
  %182 = bitcast %"class.viz::SurfaceAllocationGroup"*** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 1, i32 1, i32 0, i32 1
  %185 = bitcast %"class.viz::SurfaceAllocationGroup"*** %184 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %187 = bitcast %"class.viz::SurfaceAllocationGroup"*** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %190 = bitcast %"class.viz::SurfaceAllocationGroup"*** %189 to i64*
  store i64 %188, i64* %190, align 8
  %191 = bitcast %"class.std::__1::vector.190"* %176 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #15
  %192 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %145, i64 2
  %193 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %144, i64 2
  %194 = icmp ult %"struct.std::__1::pair.253"* %192, %53
  br i1 %194, label %143, label %102

195:                                              ; preds = %127, %105
  %196 = bitcast %"struct.std::__1::pair.253"* %1 to i64*
  %197 = zext i32 %46 to i64
  %198 = shl nuw i64 %197, 32
  %199 = zext i32 %44 to i64
  %200 = or i64 %198, %199
  store i64 %200, i64* %196, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 1
  %202 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %201, i64 0, i32 0, i32 0
  %203 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %202, align 8
  %204 = icmp eq %"class.viz::SurfaceAllocationGroup"** %203, null
  br i1 %204, label %211, label %205

205:                                              ; preds = %195
  %206 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %203 to i64
  %207 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 1, i32 0, i32 1
  %208 = bitcast %"class.viz::SurfaceAllocationGroup"*** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast %"class.viz::SurfaceAllocationGroup"** %203 to i8*
  tail call void @_ZdlPv(i8* %209) #16
  %210 = bitcast %"class.std::__1::vector.190"* %201 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 24, i1 false) #15
  br label %211

211:                                              ; preds = %195, %205
  %212 = bitcast %"class.std::__1::vector.190"* %201 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %212, align 8
  %213 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast %"class.viz::SurfaceAllocationGroup"*** %213 to i64*
  store i64 %51, i64* %214, align 8
  br label %384

215:                                              ; preds = %4
  %216 = ptrtoint %"struct.std::__1::pair.253"* %9 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 2
  %218 = bitcast %"struct.std::__1::__split_buffer.560"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %218) #15
  %219 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %6, i64 0, i32 0
  %220 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %6, i64 0, i32 1
  %221 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %6, i64 0, i32 2
  %222 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %6, i64 0, i32 3, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %6, i64 0, i32 3, i32 1, i32 0
  %224 = bitcast %"struct.std::__1::pair.253"** %8 to i64*
  %225 = bitcast %"class.std::__1::vector.251"* %0 to i64*
  %226 = bitcast %"struct.std::__1::__split_buffer.560"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 40, i1 false)
  %227 = load i64, i64* %225, align 8
  %228 = sub i64 %216, %227
  %229 = ashr exact i64 %228, 5
  %230 = add nsw i64 %229, 1
  %231 = icmp ugt i64 %230, 576460752303423487
  br i1 %231, label %232, label %234

232:                                              ; preds = %215
  %233 = bitcast %"class.std::__1::vector.251"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %233) #17
  unreachable

234:                                              ; preds = %215
  %235 = bitcast %"struct.std::__1::pair.253"** %10 to i64*
  %236 = sub i64 %13, %227
  %237 = ashr exact i64 %236, 5
  %238 = icmp ult i64 %237, 288230376151711743
  br i1 %238, label %243, label %239

239:                                              ; preds = %234
  %240 = sub i64 %5, %227
  %241 = ashr exact i64 %240, 5
  store %"struct.std::__1::pair.253"* null, %"struct.std::__1::pair.253"** %222, align 8
  %242 = bitcast %"class.std::__1::allocator.257"** %223 to %"class.std::__1::__compressed_pair.254"**
  store %"class.std::__1::__compressed_pair.254"* %217, %"class.std::__1::__compressed_pair.254"** %242, align 8
  br label %254

243:                                              ; preds = %234
  %244 = ashr exact i64 %236, 4
  %245 = icmp ult i64 %244, %230
  %246 = select i1 %245, i64 %230, i64 %244
  %247 = sub i64 %5, %227
  %248 = ashr exact i64 %247, 5
  store %"struct.std::__1::pair.253"* null, %"struct.std::__1::pair.253"** %222, align 8
  %249 = bitcast %"class.std::__1::allocator.257"** %223 to %"class.std::__1::__compressed_pair.254"**
  store %"class.std::__1::__compressed_pair.254"* %217, %"class.std::__1::__compressed_pair.254"** %249, align 8
  %250 = icmp eq i64 %246, 0
  br i1 %250, label %260, label %251

251:                                              ; preds = %243
  %252 = icmp ugt i64 %246, 576460752303423487
  br i1 %252, label %253, label %254

253:                                              ; preds = %251
  tail call void @abort() #17
  unreachable

254:                                              ; preds = %239, %251
  %255 = phi i64 [ 576460752303423487, %239 ], [ %246, %251 ]
  %256 = phi i64 [ %241, %239 ], [ %248, %251 ]
  %257 = shl i64 %255, 5
  %258 = tail call i8* @_Znwm(i64 %257) #16
  %259 = bitcast i8* %258 to %"struct.std::__1::pair.253"*
  br label %260

260:                                              ; preds = %243, %254
  %261 = phi i64 [ %256, %254 ], [ %248, %243 ]
  %262 = phi i64 [ %255, %254 ], [ 0, %243 ]
  %263 = phi %"struct.std::__1::pair.253"* [ %259, %254 ], [ null, %243 ]
  store %"struct.std::__1::pair.253"* %263, %"struct.std::__1::pair.253"** %219, align 8
  %264 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %263, i64 %261
  store %"struct.std::__1::pair.253"* %264, %"struct.std::__1::pair.253"** %221, align 8
  store %"struct.std::__1::pair.253"* %264, %"struct.std::__1::pair.253"** %220, align 8
  %265 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %263, i64 %262
  store %"struct.std::__1::pair.253"* %265, %"struct.std::__1::pair.253"** %222, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS_6vectorIPNS2_22SurfaceAllocationGroupENS_9allocatorIS6_EEEEEERNS7_ISA_EEE12emplace_backIJRKS3_S9_EEEvDpOT_(%"struct.std::__1::__split_buffer.560"* nonnull %6, %"class.viz::FrameSinkId"* dereferenceable(8) %2, %"class.std::__1::vector.190"* dereferenceable(24) %3)
  %266 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %220, align 8
  %267 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %7, align 8
  %268 = icmp eq %"struct.std::__1::pair.253"* %267, %1
  br i1 %268, label %299, label %269

269:                                              ; preds = %260, %269
  %270 = phi %"struct.std::__1::pair.253"* [ %297, %269 ], [ %266, %260 ]
  %271 = phi %"struct.std::__1::pair.253"* [ %272, %269 ], [ %1, %260 ]
  %272 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %271, i64 -1
  %273 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %270, i64 -1, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %272, i64 0, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %273, align 4
  %276 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %270, i64 -1, i32 0, i32 1
  %277 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %271, i64 -1, i32 0, i32 1
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %270, i64 -1, i32 1
  %280 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %271, i64 -1, i32 1
  %281 = bitcast %"class.std::__1::vector.190"* %279 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %281, i8 0, i64 24, i1 false) #15
  %282 = bitcast %"class.std::__1::vector.190"* %280 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.std::__1::vector.190"* %279 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %271, i64 -1, i32 1, i32 0, i32 1
  %286 = bitcast %"class.viz::SurfaceAllocationGroup"*** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %270, i64 -1, i32 1, i32 0, i32 1
  %289 = bitcast %"class.viz::SurfaceAllocationGroup"*** %288 to i64*
  store i64 %287, i64* %289, align 8
  %290 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %271, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %291 = bitcast %"class.viz::SurfaceAllocationGroup"*** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %270, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %294 = bitcast %"class.viz::SurfaceAllocationGroup"*** %293 to i64*
  store i64 %292, i64* %294, align 8
  %295 = bitcast %"class.std::__1::vector.190"* %280 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %295, i8 0, i64 24, i1 false) #15
  %296 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %220, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %296, i64 -1
  store %"struct.std::__1::pair.253"* %297, %"struct.std::__1::pair.253"** %220, align 8
  %298 = icmp eq %"struct.std::__1::pair.253"* %272, %267
  br i1 %298, label %299, label %269

299:                                              ; preds = %269, %260
  %300 = phi %"struct.std::__1::pair.253"* [ %266, %260 ], [ %297, %269 ]
  %301 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %8, align 8
  %302 = icmp eq %"struct.std::__1::pair.253"* %301, %1
  br i1 %302, label %303, label %309

303:                                              ; preds = %299
  %304 = ptrtoint %"struct.std::__1::pair.253"* %301 to i64
  %305 = ptrtoint %"struct.std::__1::pair.253"* %300 to i64
  %306 = bitcast %"struct.std::__1::pair.253"** %220 to i64*
  %307 = bitcast %"struct.std::__1::pair.253"** %221 to i64*
  %308 = load i64, i64* %307, align 8
  br label %347

309:                                              ; preds = %299
  %310 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %221, align 8
  br label %311

311:                                              ; preds = %311, %309
  %312 = phi %"struct.std::__1::pair.253"* [ %339, %311 ], [ %310, %309 ]
  %313 = phi %"struct.std::__1::pair.253"* [ %337, %311 ], [ %1, %309 ]
  %314 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %312, i64 0, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %313, i64 0, i32 0, i32 0
  %316 = load i32, i32* %315, align 4
  store i32 %316, i32* %314, align 4
  %317 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %312, i64 0, i32 0, i32 1
  %318 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %313, i64 0, i32 0, i32 1
  %319 = load i32, i32* %318, align 4
  store i32 %319, i32* %317, align 4
  %320 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %312, i64 0, i32 1
  %321 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %313, i64 0, i32 1
  %322 = bitcast %"class.std::__1::vector.190"* %320 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %322, i8 0, i64 24, i1 false) #15
  %323 = bitcast %"class.std::__1::vector.190"* %321 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.std::__1::vector.190"* %320 to i64*
  store i64 %324, i64* %325, align 8
  %326 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %313, i64 0, i32 1, i32 0, i32 1
  %327 = bitcast %"class.viz::SurfaceAllocationGroup"*** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %312, i64 0, i32 1, i32 0, i32 1
  %330 = bitcast %"class.viz::SurfaceAllocationGroup"*** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %313, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %332 = bitcast %"class.viz::SurfaceAllocationGroup"*** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %312, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %335 = bitcast %"class.viz::SurfaceAllocationGroup"*** %334 to i64*
  store i64 %333, i64* %335, align 8
  %336 = bitcast %"class.std::__1::vector.190"* %321 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %336, i8 0, i64 24, i1 false) #15
  %337 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %313, i64 1
  %338 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %221, align 8
  %339 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %338, i64 1
  store %"struct.std::__1::pair.253"* %339, %"struct.std::__1::pair.253"** %221, align 8
  %340 = icmp eq %"struct.std::__1::pair.253"* %337, %301
  br i1 %340, label %341, label %311

341:                                              ; preds = %311
  %342 = ptrtoint %"struct.std::__1::pair.253"* %339 to i64
  %343 = bitcast %"struct.std::__1::pair.253"** %220 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = load i64, i64* %224, align 8
  %346 = bitcast %"struct.std::__1::pair.253"** %221 to i64*
  br label %347

347:                                              ; preds = %303, %341
  %348 = phi i64* [ %307, %303 ], [ %346, %341 ]
  %349 = phi i64 [ %308, %303 ], [ %342, %341 ]
  %350 = phi i64 [ %304, %303 ], [ %345, %341 ]
  %351 = phi i64* [ %306, %303 ], [ %343, %341 ]
  %352 = phi i64 [ %305, %303 ], [ %344, %341 ]
  %353 = load i64, i64* %225, align 8
  store i64 %352, i64* %225, align 8
  store i64 %353, i64* %351, align 8
  store i64 %349, i64* %224, align 8
  store i64 %350, i64* %348, align 8
  %354 = load i64, i64* %235, align 8
  %355 = bitcast %"struct.std::__1::pair.253"** %222 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %235, align 8
  store i64 %354, i64* %355, align 8
  %357 = bitcast %"struct.std::__1::__split_buffer.560"* %6 to i64*
  store i64 %353, i64* %357, align 8
  %358 = inttoptr i64 %353 to %"struct.std::__1::pair.253"*
  %359 = inttoptr i64 %350 to %"struct.std::__1::pair.253"*
  %360 = icmp eq %"struct.std::__1::pair.253"* %359, %358
  br i1 %360, label %378, label %361

361:                                              ; preds = %347, %373
  %362 = phi %"struct.std::__1::pair.253"* [ %374, %373 ], [ %359, %347 ]
  %363 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %362, i64 -1
  store %"struct.std::__1::pair.253"* %363, %"struct.std::__1::pair.253"** %221, align 8
  %364 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %362, i64 -1, i32 1, i32 0, i32 0
  %365 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %364, align 8
  %366 = icmp eq %"class.viz::SurfaceAllocationGroup"** %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %361
  %368 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %365 to i64
  %369 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %362, i64 -1, i32 1, i32 0, i32 1
  %370 = bitcast %"class.viz::SurfaceAllocationGroup"*** %369 to i64*
  store i64 %368, i64* %370, align 8
  %371 = bitcast %"class.viz::SurfaceAllocationGroup"** %365 to i8*
  call void @_ZdlPv(i8* %371) #16
  %372 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %221, align 8
  br label %373

373:                                              ; preds = %367, %361
  %374 = phi %"struct.std::__1::pair.253"* [ %363, %361 ], [ %372, %367 ]
  %375 = icmp eq %"struct.std::__1::pair.253"* %374, %358
  br i1 %375, label %376, label %361

376:                                              ; preds = %373
  %377 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %219, align 8
  br label %378

378:                                              ; preds = %376, %347
  %379 = phi %"struct.std::__1::pair.253"* [ %377, %376 ], [ %358, %347 ]
  %380 = icmp eq %"struct.std::__1::pair.253"* %379, null
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = bitcast %"struct.std::__1::pair.253"* %379 to i8*
  call void @_ZdlPv(i8* %382) #16
  br label %383

383:                                              ; preds = %378, %381
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %218) #15
  br label %384

384:                                              ; preds = %16, %211, %383
  %385 = phi %"struct.std::__1::pair.253"* [ %1, %16 ], [ %1, %211 ], [ %266, %383 ]
  ret %"struct.std::__1::pair.253"* %385
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS_6vectorIPNS2_22SurfaceAllocationGroupENS_9allocatorIS6_EEEEEERNS7_ISA_EEE12emplace_backIJRKS3_S9_EEEvDpOT_(%"struct.std::__1::__split_buffer.560"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.std::__1::vector.190"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.253"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.253"* %7 to i64
  br i1 %8, label %10, label %207

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.560", %"struct.std::__1::__split_buffer.560"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.253"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.253"* %14 to i64
  br i1 %15, label %17, label %66

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.253"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 5
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.253"* %12, %5
  br i1 %24, label %62, label %25

25:                                               ; preds = %17, %42
  %26 = phi %"struct.std::__1::pair.253"* [ %58, %42 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.253"* [ %57, %42 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.253"* %27 to i64*
  %29 = bitcast %"struct.std::__1::pair.253"* %26 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %26, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %33, align 8
  %35 = icmp eq %"class.viz::SurfaceAllocationGroup"** %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %25
  %37 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %26, i64 0, i32 1, i32 0, i32 1
  %39 = bitcast %"class.viz::SurfaceAllocationGroup"*** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.viz::SurfaceAllocationGroup"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #16
  %41 = bitcast %"class.std::__1::vector.190"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #15
  br label %42

42:                                               ; preds = %25, %36
  %43 = bitcast %"class.std::__1::vector.190"* %31 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.190"* %32 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %27, i64 0, i32 1, i32 0, i32 1
  %47 = bitcast %"class.viz::SurfaceAllocationGroup"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %26, i64 0, i32 1, i32 0, i32 1
  %50 = bitcast %"class.viz::SurfaceAllocationGroup"*** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %27, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.viz::SurfaceAllocationGroup"*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.viz::SurfaceAllocationGroup"*** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.std::__1::vector.190"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #15
  %57 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %27, i64 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %26, i64 1
  %59 = icmp eq %"struct.std::__1::pair.253"* %57, %5
  br i1 %59, label %60, label %25

60:                                               ; preds = %42
  %61 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %11, align 8
  br label %62

62:                                               ; preds = %60, %17
  %63 = phi %"struct.std::__1::pair.253"* [ %5, %17 ], [ %61, %60 ]
  %64 = phi %"struct.std::__1::pair.253"* [ %23, %17 ], [ %58, %60 ]
  store %"struct.std::__1::pair.253"* %64, %"struct.std::__1::pair.253"** %4, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %63, i64 %22
  store %"struct.std::__1::pair.253"* %65, %"struct.std::__1::pair.253"** %11, align 8
  br label %207

66:                                               ; preds = %10
  %67 = bitcast %"struct.std::__1::pair.253"** %6 to i64*
  %68 = bitcast %"struct.std::__1::__split_buffer.560"* %0 to i64*
  %69 = sub i64 %9, %16
  %70 = ashr exact i64 %69, 4
  %71 = icmp eq i64 %69, 0
  %72 = select i1 %71, i64 1, i64 %70
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  tail call void @abort() #17
  unreachable

75:                                               ; preds = %66
  %76 = lshr i64 %72, 2
  %77 = shl i64 %72, 5
  %78 = tail call i8* @_Znwm(i64 %77) #16
  %79 = bitcast i8* %78 to %"struct.std::__1::pair.253"*
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %79, i64 %76
  %82 = ptrtoint %"struct.std::__1::pair.253"* %81 to i64
  %83 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %79, i64 %72
  %84 = ptrtoint %"struct.std::__1::pair.253"* %83 to i64
  %85 = ptrtoint %"struct.std::__1::pair.253"* %12 to i64
  %86 = ptrtoint %"struct.std::__1::pair.253"* %5 to i64
  %87 = sub i64 %86, %85
  %88 = ashr exact i64 %87, 5
  %89 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %81, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %182, label %91

91:                                               ; preds = %75
  %92 = add i64 %87, -32
  %93 = and i64 %92, 32
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %121

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %81, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %79, i64 %76, i32 0, i32 1
  %100 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %79, i64 %76, i32 1
  %103 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 0, i32 1
  %104 = bitcast %"class.std::__1::vector.190"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #15
  %105 = bitcast %"class.std::__1::vector.190"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::__1::vector.190"* %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 0, i32 1, i32 0, i32 1
  %109 = bitcast %"class.viz::SurfaceAllocationGroup"*** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %79, i64 %76, i32 1, i32 0, i32 1
  %112 = bitcast %"class.viz::SurfaceAllocationGroup"*** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %"class.viz::SurfaceAllocationGroup"*** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %79, i64 %76, i32 1, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast %"class.viz::SurfaceAllocationGroup"*** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast %"class.std::__1::vector.190"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #15
  %119 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %81, i64 1
  %120 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %12, i64 1
  br label %121

121:                                              ; preds = %95, %91
  %122 = phi %"struct.std::__1::pair.253"* [ %81, %91 ], [ %119, %95 ]
  %123 = phi %"struct.std::__1::pair.253"* [ %12, %91 ], [ %120, %95 ]
  %124 = icmp ult i64 %92, 32
  br i1 %124, label %177, label %125

125:                                              ; preds = %121, %125
  %126 = phi %"struct.std::__1::pair.253"* [ %174, %125 ], [ %122, %121 ]
  %127 = phi %"struct.std::__1::pair.253"* [ %175, %125 ], [ %123, %121 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 0, i32 1
  %136 = bitcast %"class.std::__1::vector.190"* %134 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #15
  %137 = bitcast %"class.std::__1::vector.190"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::vector.190"* %134 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 0, i32 1, i32 0, i32 1
  %141 = bitcast %"class.viz::SurfaceAllocationGroup"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 0, i32 1, i32 0, i32 1
  %144 = bitcast %"class.viz::SurfaceAllocationGroup"*** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast %"class.viz::SurfaceAllocationGroup"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %"class.viz::SurfaceAllocationGroup"*** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast %"class.std::__1::vector.190"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #15
  %151 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 1, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 1, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 1, i32 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 1, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 1, i32 1
  %158 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 1, i32 1
  %159 = bitcast %"class.std::__1::vector.190"* %157 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #15
  %160 = bitcast %"class.std::__1::vector.190"* %158 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.std::__1::vector.190"* %157 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 1, i32 1, i32 0, i32 1
  %164 = bitcast %"class.viz::SurfaceAllocationGroup"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 1, i32 1, i32 0, i32 1
  %167 = bitcast %"class.viz::SurfaceAllocationGroup"*** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %169 = bitcast %"class.viz::SurfaceAllocationGroup"*** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %172 = bitcast %"class.viz::SurfaceAllocationGroup"*** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast %"class.std::__1::vector.190"* %158 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #15
  %174 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %126, i64 2
  %175 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %127, i64 2
  %176 = icmp eq %"struct.std::__1::pair.253"* %89, %174
  br i1 %176, label %177, label %125

177:                                              ; preds = %125, %121
  %178 = ptrtoint %"struct.std::__1::pair.253"* %89 to i64
  %179 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %13, align 8
  %180 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %11, align 8
  %181 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  br label %182

182:                                              ; preds = %75, %177
  %183 = phi %"struct.std::__1::pair.253"* [ %181, %177 ], [ %5, %75 ]
  %184 = phi %"struct.std::__1::pair.253"* [ %180, %177 ], [ %12, %75 ]
  %185 = phi %"struct.std::__1::pair.253"* [ %179, %177 ], [ %14, %75 ]
  %186 = phi i64 [ %178, %177 ], [ %82, %75 ]
  store i64 %80, i64* %68, align 8
  %187 = bitcast %"struct.std::__1::pair.253"** %11 to i64*
  store i64 %82, i64* %187, align 8
  %188 = bitcast %"struct.std::__1::pair.253"** %4 to i64*
  store i64 %186, i64* %188, align 8
  store i64 %84, i64* %67, align 8
  %189 = icmp eq %"struct.std::__1::pair.253"* %183, %184
  br i1 %189, label %203, label %190

190:                                              ; preds = %182, %201
  %191 = phi %"struct.std::__1::pair.253"* [ %192, %201 ], [ %183, %182 ]
  %192 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %191, i64 -1
  %193 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %191, i64 -1, i32 1, i32 0, i32 0
  %194 = load %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"*** %193, align 8
  %195 = icmp eq %"class.viz::SurfaceAllocationGroup"** %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %190
  %197 = ptrtoint %"class.viz::SurfaceAllocationGroup"** %194 to i64
  %198 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %191, i64 -1, i32 1, i32 0, i32 1
  %199 = bitcast %"class.viz::SurfaceAllocationGroup"*** %198 to i64*
  store i64 %197, i64* %199, align 8
  %200 = bitcast %"class.viz::SurfaceAllocationGroup"** %194 to i8*
  tail call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %196, %190
  %202 = icmp eq %"struct.std::__1::pair.253"* %192, %184
  br i1 %202, label %203, label %190

203:                                              ; preds = %201, %182
  %204 = icmp eq %"struct.std::__1::pair.253"* %185, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %203
  %206 = bitcast %"struct.std::__1::pair.253"* %185 to i8*
  tail call void @_ZdlPv(i8* %206) #16
  br label %207

207:                                              ; preds = %205, %203, %62, %3
  %208 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  %209 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %208, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  store i32 %211, i32* %209, align 4
  %212 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %208, i64 0, i32 0, i32 1
  %213 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* %212, align 4
  %215 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %208, i64 0, i32 1
  %216 = bitcast %"class.std::__1::vector.190"* %215 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 24, i1 false) #15
  %217 = bitcast %"class.std::__1::vector.190"* %2 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.std::__1::vector.190"* %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %2, i64 0, i32 0, i32 1
  %221 = bitcast %"class.viz::SurfaceAllocationGroup"*** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %208, i64 0, i32 1, i32 0, i32 1
  %224 = bitcast %"class.viz::SurfaceAllocationGroup"*** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %226 = bitcast %"class.viz::SurfaceAllocationGroup"*** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %208, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %229 = bitcast %"class.viz::SurfaceAllocationGroup"*** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast %"class.std::__1::vector.190"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 24, i1 false) #15
  %231 = load %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"** %4, align 8
  %232 = getelementptr inbounds %"struct.std::__1::pair.253", %"struct.std::__1::pair.253"* %231, i64 1
  store %"struct.std::__1::pair.253"* %232, %"struct.std::__1::pair.253"** %4, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3viz22SurfaceAllocationGroupD1Ev(%"class.viz::SurfaceAllocationGroup"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !4}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{!"branch_weights", i32 1, i32 2000}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3viz14SurfaceManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base13BindRepeatingIRMN3viz14SurfaceManagerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!20 = distinct !{!20, !"_ZN4base13BindRepeatingIRMN3viz14SurfaceManagerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!27 = distinct !{!27, !4}
!28 = distinct !{!28, !4}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!35 = distinct !{!35, !4}
!36 = distinct !{!36, !4}
!37 = distinct !{!37, !4}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!44 = distinct !{!44, !4}
!45 = distinct !{!45, !4}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!51 = distinct !{!51, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!52 = distinct !{!52, !4}
!53 = distinct !{!53, !4}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!59 = distinct !{!59, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!60 = distinct !{!60, !4}
!61 = distinct !{!61, !4}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!67 = distinct !{!67, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!68 = distinct !{!68, !4}
!69 = distinct !{!69, !4}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!72 = distinct !{!72, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!75 = distinct !{!75, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!76 = distinct !{!76, !4}
!77 = distinct !{!77, !4}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!80 = distinct !{!80, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!83 = distinct !{!83, !"_ZNK4base12ObserverListIN3viz15SurfaceObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!84 = distinct !{!84, !4}
!85 = distinct !{!85, !4}
!86 = !{i64 0, i64 65}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS6_ISF_EEEEEEmOT_DpOT0_: argument 0"}
!89 = distinct !{!89, !"_ZNSt3__112__hash_tableIN3viz9SurfaceIdENS1_13SurfaceIdHashENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS6_ISF_EEEEEEmOT_DpOT0_"}
!90 = distinct !{!90, !4}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINSB_IS11_EEEEEEmOT_DpOT0_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdEN4base8internal9flat_treeIS3_NS4_8identityENS_4lessIvEENS_6vectorIS3_NS_9allocatorIS3_EEEEEEEENS_22__unordered_map_hasherIS3_SF_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SF_SJ_SH_Lb1EEENSB_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINSB_IS11_EEEEEEmOT_DpOT0_"}
!94 = distinct !{!94, !4}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKS3_JS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz9SurfaceIdENS2_14SurfaceManager22TemporaryReferenceDataEEENS_22__unordered_map_hasherIS3_S6_NS2_13SurfaceIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKS3_JS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
!98 = distinct !{!98, !4}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!101 = distinct !{!101, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN3viz11FrameSinkIdENS_6vectorINS2_14LocalSurfaceIdENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS3_S9_NS2_15FrameSinkIdHashENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S9_SD_SB_Lb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEmOT_DpOT0_"}
!102 = distinct !{!102, !4}
