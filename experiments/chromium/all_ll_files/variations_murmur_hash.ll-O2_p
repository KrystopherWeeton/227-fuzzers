; ModuleID = '../../components/variations/variations_murmur_hash.cc'
source_filename = "../../components/variations/variations_murmur_hash.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations8internal20VariationsMurmurHash12StringToLE32EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::vector"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = add i64 %2, 3
  %5 = lshr i64 %4, 2
  %6 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #4
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = and i64 %4, -4
  %12 = tail call i8* @_Znwm(i64 %11) #5
  %13 = bitcast i8* %12 to i32*
  %14 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i32, i32* %13, i64 %5
  store i32* %15, i32** %10, align 8
  %16 = add i64 %2, 3
  %17 = and i64 %16, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 0, i64 %17, i1 false)
  %18 = bitcast i32** %9 to i64*
  %19 = ptrtoint i32* %15 to i64
  store i64 %19, i64* %18, align 8
  br label %20

20:                                               ; preds = %3, %8
  %21 = phi i8* [ %12, %8 ], [ null, %3 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 1 %1, i64 %2, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN10variations8internal20VariationsMurmurHash4HashERKNSt3__16vectorIjNS2_9allocatorIjEEEEm(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #2 align 2 {
  %3 = lshr i64 %1, 2
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = and i64 %3, 1
  %9 = icmp eq i64 %3, 1
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = sub nsw i64 %3, %8
  br label %44

12:                                               ; preds = %44, %5
  %13 = phi i32 [ undef, %5 ], [ %74, %44 ]
  %14 = phi i32 [ 0, %5 ], [ %74, %44 ]
  %15 = phi i64 [ 0, %5 ], [ %75, %44 ]
  %16 = icmp eq i64 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i32, i32* %7, i64 %15
  %19 = load i32, i32* %18, align 4
  %20 = mul i32 %19, -862048943
  %21 = mul i32 %19, 380141568
  %22 = lshr i32 %20, 17
  %23 = or i32 %22, %21
  %24 = mul i32 %23, 461845907
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 19
  %27 = shl i32 %25, 13
  %28 = or i32 %26, %27
  %29 = mul i32 %28, 5
  %30 = add i32 %29, -430675100
  br label %31

31:                                               ; preds = %17, %12, %2
  %32 = phi i32 [ 0, %2 ], [ %13, %12 ], [ %30, %17 ]
  %33 = and i64 %1, 3
  switch i64 %33, label %95 [
    i64 3, label %78
    i64 2, label %39
    i64 1, label %34
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 %3
  %38 = load i32, i32* %37, align 4
  br label %89

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 %3
  %43 = load i32, i32* %42, align 4
  br label %84

44:                                               ; preds = %44, %10
  %45 = phi i32 [ 0, %10 ], [ %74, %44 ]
  %46 = phi i64 [ 0, %10 ], [ %75, %44 ]
  %47 = phi i64 [ %11, %10 ], [ %76, %44 ]
  %48 = getelementptr inbounds i32, i32* %7, i64 %46
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 %49, -862048943
  %51 = mul i32 %49, 380141568
  %52 = lshr i32 %50, 17
  %53 = or i32 %52, %51
  %54 = mul i32 %53, 461845907
  %55 = xor i32 %54, %45
  %56 = shl i32 %55, 13
  %57 = lshr i32 %55, 19
  %58 = or i32 %57, %56
  %59 = mul i32 %58, 5
  %60 = add i32 %59, -430675100
  %61 = or i64 %46, 1
  %62 = getelementptr inbounds i32, i32* %7, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = mul i32 %63, -862048943
  %65 = mul i32 %63, 380141568
  %66 = lshr i32 %64, 17
  %67 = or i32 %66, %65
  %68 = mul i32 %67, 461845907
  %69 = xor i32 %68, %60
  %70 = shl i32 %69, 13
  %71 = lshr i32 %69, 19
  %72 = or i32 %71, %70
  %73 = mul i32 %72, 5
  %74 = add i32 %73, -430675100
  %75 = add nuw nsw i64 %46, 2
  %76 = add i64 %47, -2
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %12, label %44

78:                                               ; preds = %31
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %3
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16711680
  br label %84

84:                                               ; preds = %39, %78
  %85 = phi i32 [ %43, %39 ], [ %82, %78 ]
  %86 = phi i32 [ 0, %39 ], [ %83, %78 ]
  %87 = and i32 %85, 65280
  %88 = or i32 %87, %86
  br label %89

89:                                               ; preds = %34, %84
  %90 = phi i32 [ %38, %34 ], [ %85, %84 ]
  %91 = phi i32 [ 0, %34 ], [ %88, %84 ]
  %92 = and i32 %90, 255
  %93 = or i32 %92, %91
  %94 = mul i32 %93, -862048943
  br label %95

95:                                               ; preds = %89, %31
  %96 = phi i32 [ 0, %31 ], [ %94, %89 ]
  %97 = shl i32 %96, 15
  %98 = lshr i32 %96, 17
  %99 = or i32 %98, %97
  %100 = mul i32 %99, 461845907
  %101 = trunc i64 %1 to i32
  %102 = xor i32 %32, %101
  %103 = xor i32 %102, %100
  %104 = lshr i32 %103, 16
  %105 = xor i32 %104, %103
  %106 = mul i32 %105, -2048144789
  %107 = lshr i32 %106, 13
  %108 = xor i32 %107, %106
  %109 = mul i32 %108, -1028477387
  %110 = lshr i32 %109, 16
  %111 = xor i32 %110, %109
  ret i32 %111
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
