; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/value_number_table.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/value_number_table.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.14", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unordered_map.14" = type { %"class.std::__1::__hash_table.15" }
%"class.std::__1::__hash_table.15" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base.19"** }
%"struct.std::__1::__hash_node_base.19" = type { %"struct.std::__1::__hash_node_base.19"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator.21" }
%"class.std::__1::__bucket_list_deallocator.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base.19" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr.38", %"class.std::__1::function", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.200", %"class.std::__1::unordered_map.221", %"class.std::__1::unordered_map.249", i32, [4 x i8], %"class.std::__1::unordered_map.273", %"class.std::__1::unordered_map.14", %"class.std::__1::unique_ptr.297", %"class.std::__1::map", %"class.std::__1::map.388", %"class.std::__1::unordered_map.397", %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.617", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.748", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.64", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.69", %"class.std::__1::vector.57", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.57", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.52" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.41" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::vector.44"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i32*, i32*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i32* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.std::__1::unique_ptr.71"*, %"class.std::__1::unique_ptr.71"*, %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.64", %"class.std::__1::vector.74", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.81", %"class.std::__1::unique_ptr.64", %"class.std::__1::vector.74" }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.std::__1::unique_ptr.83"*, %"class.std::__1::unique_ptr.83"*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.64", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::unique_ptr.83"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::unique_ptr.64"* }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::unique_ptr.71"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map.108", %"class.std::__1::set", %"class.std::__1::unordered_map.139" }
%"class.std::__1::unordered_map.108" = type { %"class.std::__1::__hash_table.109" }
%"class.std::__1::__hash_table.109" = type <{ %"class.std::__1::unique_ptr.110", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.128", [4 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.113"** }
%"struct.std::__1::__hash_node_base.113" = type { %"struct.std::__1::__hash_node_base.113"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator.115" }
%"class.std::__1::__bucket_list_deallocator.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base.113" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.139" = type { %"class.std::__1::__hash_table.140" }
%"class.std::__1::__hash_table.140" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.161", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.144"** }
%"struct.std::__1::__hash_node_base.144" = type { %"struct.std::__1::__hash_node_base.144"* }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::__bucket_list_deallocator.146" }
%"class.std::__1::__bucket_list_deallocator.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base.144" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.173", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.193", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.217", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.std::__1::set.206"* }
%"class.std::__1::set.206" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::EnumSet.217" = type { i64, %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unordered_map.221" = type { %"class.std::__1::__hash_table.222" }
%"class.std::__1::__hash_table.222" = type <{ %"class.std::__1::unique_ptr.223", %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225", %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::__hash_node_base.226"** }
%"struct.std::__1::__hash_node_base.226" = type { %"struct.std::__1::__hash_node_base.226"* }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::__bucket_list_deallocator.228" }
%"class.std::__1::__bucket_list_deallocator.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.226" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.273" = type { %"class.std::__1::__hash_table.274" }
%"class.std::__1::__hash_table.274" = type <{ %"class.std::__1::unique_ptr.275", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.293", [4 x i8] }>
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.278"** }
%"struct.std::__1::__hash_node_base.278" = type { %"struct.std::__1::__hash_node_base.278"* }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::__bucket_list_deallocator.280" }
%"class.std::__1::__bucket_list_deallocator.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base.278" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.300", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.352" }
%"class.std::__1::unordered_map.300" = type { %"class.std::__1::__hash_table.301" }
%"class.std::__1::__hash_table.301" = type <{ %"class.std::__1::unique_ptr.302", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", [4 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304", %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.305"** }
%"struct.std::__1::__hash_node_base.305" = type { %"struct.std::__1::__hash_node_base.305"* }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.std::__1::__bucket_list_deallocator.307" }
%"class.std::__1::__bucket_list_deallocator.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base.305" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.372", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.379" }
%"class.std::__1::__tree.379" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.388" = type { %"class.std::__1::__tree.389" }
%"class.std::__1::__tree.389" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.397" = type { %"class.std::__1::__hash_table.398" }
%"class.std::__1::__hash_table.398" = type <{ %"class.std::__1::unique_ptr.399", %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", [4 x i8] }>
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401", %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"struct.std::__1::__hash_node_base.402"** }
%"struct.std::__1::__hash_node_base.402" = type { %"struct.std::__1::__hash_node_base.402"* }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.std::__1::__bucket_list_deallocator.404" }
%"class.std::__1::__bucket_list_deallocator.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::__hash_node_base.402" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.427", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.482" }
%"class.std::__1::unordered_map.427" = type { %"class.std::__1::__hash_table.428" }
%"class.std::__1::__hash_table.428" = type <{ %"class.std::__1::unique_ptr.429", %"class.std::__1::__compressed_pair.439", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.447", [4 x i8] }>
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431", %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"struct.std::__1::__hash_node_base.432"** }
%"struct.std::__1::__hash_node_base.432" = type { %"struct.std::__1::__hash_node_base.432"* }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.std::__1::__bucket_list_deallocator.434" }
%"class.std::__1::__bucket_list_deallocator.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.432" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.451" }
%"class.std::__1::__tree.451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.461" }
%"class.std::__1::__hash_table.461" = type <{ %"class.std::__1::unique_ptr.462", %"class.std::__1::__compressed_pair.472", %"class.std::__1::__compressed_pair.477", %"class.std::__1::__compressed_pair.479", [4 x i8] }>
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464", %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"struct.std::__1::__hash_node_base.465"** }
%"struct.std::__1::__hash_node_base.465" = type { %"struct.std::__1::__hash_node_base.465"* }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.std::__1::__bucket_list_deallocator.467" }
%"class.std::__1::__bucket_list_deallocator.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"struct.std::__1::__hash_node_base.465" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"class.std::__1::unique_ptr.484"*, %"class.std::__1::unique_ptr.484"*, %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.487", i32, [4 x i8] }>
%"class.std::__1::vector.487" = type { %"class.std::__1::__vector_base.488" }
%"class.std::__1::__vector_base.488" = type { %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"*, %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::unique_ptr.484"* }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_map.531", %"class.std::__1::unordered_set.555", %"class.std::__1::vector.577", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_map.590" }
%"class.std::__1::unordered_map.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.551", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_set.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.585" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.579" }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.590" = type { %"class.std::__1::__hash_table.591" }
%"class.std::__1::__hash_table.591" = type <{ %"class.std::__1::unique_ptr.592", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.607", %"class.std::__1::__compressed_pair.610", [4 x i8] }>
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594", %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.595"** }
%"struct.std::__1::__hash_node_base.595" = type { %"struct.std::__1::__hash_node_base.595"* }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.std::__1::__bucket_list_deallocator.597" }
%"class.std::__1::__bucket_list_deallocator.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"struct.std::__1::__hash_node_base.595" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.108", %"class.std::__1::unordered_map.108", %"class.std::__1::unordered_map.620", %"class.std::__1::unordered_map.620", %"class.std::__1::unordered_map.620", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.620" = type { %"class.std::__1::__hash_table.621" }
%"class.std::__1::__hash_table.621" = type <{ %"class.std::__1::unique_ptr.622", %"class.std::__1::__compressed_pair.632", %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.640", [4 x i8] }>
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624", %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.625"** }
%"struct.std::__1::__hash_node_base.625" = type { %"struct.std::__1::__hash_node_base.625"* }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.std::__1::__bucket_list_deallocator.627" }
%"class.std::__1::__bucket_list_deallocator.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.625" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.std::__1::multimap.650"* }
%"class.std::__1::multimap.650" = type { %"class.std::__1::__tree.651" }
%"class.std::__1::__tree.651" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.652", %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.665", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.682", %"class.std::__1::map.704" }
%"class.std::__1::map.665" = type { %"class.std::__1::__tree.666" }
%"class.std::__1::__tree.666" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.675", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.675" = type { %"class.std::__1::__vector_base.676" }
%"class.std::__1::__vector_base.676" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.682" = type { %"class.std::__1::__hash_table.683" }
%"class.std::__1::__hash_table.683" = type <{ %"class.std::__1::unique_ptr.684", %"class.std::__1::__compressed_pair.694", %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.701", [4 x i8] }>
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686", %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"struct.std::__1::__hash_node_base.687"** }
%"struct.std::__1::__hash_node_base.687" = type { %"struct.std::__1::__hash_node_base.687"* }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.std::__1::__bucket_list_deallocator.689" }
%"class.std::__1::__bucket_list_deallocator.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"struct.std::__1::__hash_node_base.687" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.704" = type { %"class.std::__1::__tree.705" }
%"class.std::__1::__tree.705" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.706", %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.721" }
%"class.std::__1::unordered_map.721" = type { %"class.std::__1::__hash_table.722" }
%"class.std::__1::__hash_table.722" = type <{ %"class.std::__1::unique_ptr.723", %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.741", [4 x i8] }>
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725", %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"struct.std::__1::__hash_node_base.726"** }
%"struct.std::__1::__hash_node_base.726" = type { %"struct.std::__1::__hash_node_base.726"* }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.std::__1::__bucket_list_deallocator.728" }
%"class.std::__1::__bucket_list_deallocator.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"struct.std::__1::__hash_node_base.726" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"struct.std::__1::pair" = type { i32, i32 }
%"struct.std::__1::default_delete.168" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.952" = type { i8 }
%"class.std::__1::tuple.995" = type { %"struct.std::__1::__tuple_impl.996" }
%"struct.std::__1::__tuple_impl.996" = type { %"class.std::__1::__tuple_leaf.997" }
%"class.std::__1::__tuple_leaf.997" = type { %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::default_delete.198" = type { i8 }
%"class.spvtools::opt::ValueTableHash" = type { i8 }
%"class.spvtools::opt::ComputeSameValue" = type { i8 }
%"class.std::__1::tuple.964" = type { %"struct.std::__1::__tuple_impl.965" }
%"struct.std::__1::__tuple_impl.965" = type { %"class.std::__1::__tuple_leaf.966" }
%"class.std::__1::__tuple_leaf.966" = type { i32* }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short" = type { [5 x i32], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [3 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.923" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.923" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZN8spvtools3opt11InstructionC2ERKS1_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt16ValueNumberTable14GetValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = zext i8 %8 to i32
  %10 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %9) #9
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i32 [ %10, %6 ], [ 0, %2 ]
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %69, label %17

17:                                               ; preds = %11
  %18 = tail call i64 @llvm.ctpop.i64(i64 %15) #9, !range !3
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = add i64 %15, 4294967295
  %22 = and i64 %21, %13
  br label %27

23:                                               ; preds = %17
  %24 = icmp ugt i64 %15, %13
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = urem i64 %13, %15
  br label %27

27:                                               ; preds = %25, %23, %20
  %28 = phi i64 [ %22, %20 ], [ %26, %25 ], [ %13, %23 ]
  %29 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %30, i64 %28
  %32 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.19"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %32, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.19"* %36, null
  br i1 %37, label %69, label %38

38:                                               ; preds = %34
  %39 = add i64 %15, -1
  br label %40

40:                                               ; preds = %61, %38
  %41 = phi %"struct.std::__1::__hash_node_base.19"* [ %36, %38 ], [ %63, %61 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %41, i64 1
  %43 = bitcast %"struct.std::__1::__hash_node_base.19"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, %13
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  br i1 %19, label %49, label %47

47:                                               ; preds = %46
  %48 = and i64 %44, %39
  br label %53

49:                                               ; preds = %46
  %50 = icmp ult i64 %44, %15
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %44, %15
  br label %53

53:                                               ; preds = %51, %49, %47
  %54 = phi i64 [ %48, %47 ], [ %52, %51 ], [ %44, %49 ]
  %55 = icmp eq i64 %54, %28
  br i1 %55, label %61, label %69

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %41, i64 2
  %58 = bitcast %"struct.std::__1::__hash_node_base.19"* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %12
  br i1 %60, label %65, label %61

61:                                               ; preds = %56, %53
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %41, i64 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.19"* %63, null
  br i1 %64, label %69, label %40

65:                                               ; preds = %56
  %66 = bitcast %"struct.std::__1::__hash_node_base.19"* %57 to %"struct.std::__1::pair"*
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  br label %69

69:                                               ; preds = %61, %53, %34, %11, %27, %65
  %70 = phi i32 [ %68, %65 ], [ 0, %27 ], [ 0, %11 ], [ 0, %34 ], [ 0, %53 ], [ 0, %61 ]
  ret i32 %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt16ValueNumberTable14GetValueNumberEj(%"class.spvtools::opt::ValueNumberTable"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #10
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #9
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #9
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.105"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.105"* %22 to %"struct.std::__1::default_delete.168"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.168"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #9
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %1) #9
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %36, i32 %43) #9
  br label %45

45:                                               ; preds = %40, %33
  %46 = phi i32 [ %44, %40 ], [ 0, %33 ]
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %103, label %51

51:                                               ; preds = %45
  %52 = tail call i64 @llvm.ctpop.i64(i64 %49) #9, !range !3
  %53 = icmp ugt i64 %52, 1
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = add i64 %49, 4294967295
  %56 = and i64 %55, %47
  br label %61

57:                                               ; preds = %51
  %58 = icmp ugt i64 %49, %47
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %47, %49
  br label %61

61:                                               ; preds = %59, %57, %54
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %47, %57 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %64, i64 %62
  %66 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.19"* %66, null
  br i1 %67, label %103, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %66, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.19"* %70, null
  br i1 %71, label %103, label %72

72:                                               ; preds = %68
  %73 = add i64 %49, -1
  br label %74

74:                                               ; preds = %95, %72
  %75 = phi %"struct.std::__1::__hash_node_base.19"* [ %70, %72 ], [ %97, %95 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %75, i64 1
  %77 = bitcast %"struct.std::__1::__hash_node_base.19"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %47
  br i1 %79, label %90, label %80

80:                                               ; preds = %74
  br i1 %53, label %83, label %81

81:                                               ; preds = %80
  %82 = and i64 %78, %73
  br label %87

83:                                               ; preds = %80
  %84 = icmp ult i64 %78, %49
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %78, %49
  br label %87

87:                                               ; preds = %85, %83, %81
  %88 = phi i64 [ %82, %81 ], [ %86, %85 ], [ %78, %83 ]
  %89 = icmp eq i64 %88, %62
  br i1 %89, label %95, label %103

90:                                               ; preds = %74
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %75, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base.19"* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %46
  br i1 %94, label %99, label %95

95:                                               ; preds = %90, %87
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %75, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.19"* %97, null
  br i1 %98, label %103, label %74

99:                                               ; preds = %90
  %100 = bitcast %"struct.std::__1::__hash_node_base.19"* %91 to %"struct.std::__1::pair"*
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  br label %103

103:                                              ; preds = %87, %95, %45, %61, %68, %99
  %104 = phi i32 [ %102, %99 ], [ 0, %61 ], [ 0, %45 ], [ 0, %68 ], [ 0, %95 ], [ 0, %87 ]
  ret i32 %104
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.952", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.952", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.952", align 1
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.952", align 1
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple.952", align 1
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.952", align 1
  %15 = alloca %"class.std::__1::tuple", align 8
  %16 = alloca %"class.std::__1::tuple.952", align 1
  %17 = alloca %"class.std::__1::tuple", align 8
  %18 = alloca %"class.std::__1::tuple.952", align 1
  %19 = alloca %"class.std::__1::tuple.995", align 8
  %20 = alloca %"class.std::__1::tuple.952", align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.spvtools::opt::Instruction", align 8
  %27 = alloca %"class.std::__1::vector", align 8
  %28 = alloca %"struct.spvtools::opt::Operand", align 8
  %29 = alloca %"class.spvtools::utils::SmallVector", align 8
  %30 = alloca %"struct.spvtools::opt::Operand", align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = zext i8 %39 to i32
  %41 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %40) #9
  br label %42

42:                                               ; preds = %37, %2
  %43 = phi i32 [ %41, %37 ], [ 0, %2 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %101, label %48

48:                                               ; preds = %42
  %49 = tail call i64 @llvm.ctpop.i64(i64 %46) #9, !range !3
  %50 = icmp ugt i64 %49, 1
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = add i64 %46, 4294967295
  %53 = and i64 %52, %44
  br label %58

54:                                               ; preds = %48
  %55 = icmp ugt i64 %46, %44
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %44, %46
  br label %58

58:                                               ; preds = %56, %54, %51
  %59 = phi i64 [ %53, %51 ], [ %57, %56 ], [ %44, %54 ]
  %60 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %61, i64 %59
  %63 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.19"* %63, null
  br i1 %64, label %101, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %63, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.19"* %67, null
  br i1 %68, label %101, label %69

69:                                               ; preds = %65
  %70 = add i64 %46, -1
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi %"struct.std::__1::__hash_node_base.19"* [ %67, %69 ], [ %94, %92 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %72, i64 1
  %74 = bitcast %"struct.std::__1::__hash_node_base.19"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, %44
  br i1 %76, label %87, label %77

77:                                               ; preds = %71
  br i1 %50, label %80, label %78

78:                                               ; preds = %77
  %79 = and i64 %75, %70
  br label %84

80:                                               ; preds = %77
  %81 = icmp ult i64 %75, %46
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = urem i64 %75, %46
  br label %84

84:                                               ; preds = %82, %80, %78
  %85 = phi i64 [ %79, %78 ], [ %83, %82 ], [ %75, %80 ]
  %86 = icmp eq i64 %85, %59
  br i1 %86, label %92, label %101

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %72, i64 2
  %89 = bitcast %"struct.std::__1::__hash_node_base.19"* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %43
  br i1 %91, label %96, label %92

92:                                               ; preds = %87, %84
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %72, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.19"* %94, null
  br i1 %95, label %101, label %71

96:                                               ; preds = %87
  %97 = bitcast %"struct.std::__1::__hash_node_base.19"* %88 to %"struct.std::__1::pair"*
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %762

101:                                              ; preds = %92, %84, %65, %42, %58, %96
  %102 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 2
  %103 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %102, align 8
  %104 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %103, %"class.spvtools::opt::Instruction"* %1)
  br i1 %104, label %131, label %105

105:                                              ; preds = %101
  %106 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #9
  %107 = icmp eq i32 %106, 134217727
  br i1 %107, label %108, label %131

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #9
  %113 = load i8, i8* %34, align 1, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %117 = load i8, i8* %116, align 4, !range !2
  %118 = zext i8 %117 to i32
  %119 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %118) #9
  br label %120

120:                                              ; preds = %108, %115
  %121 = phi i32 [ %119, %115 ], [ 0, %108 ]
  store i32 %121, i32* %21, align 4
  %122 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %123 = bitcast %"class.std::__1::tuple"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #9
  %124 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %17, i64 0, i32 0, i32 0, i32 0
  store i32* %21, i32** %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %125) #9
  %126 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %122, i32* nonnull dereferenceable(4) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %18) #9
  %127 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %126, 0
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %127, i64 2
  %129 = bitcast %"struct.std::__1::__hash_node_base.19"* %128 to %"struct.std::__1::pair"*
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %125) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #9
  store i32 %110, i32* %130, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #9
  br label %762

131:                                              ; preds = %105, %101
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %133 = load i32, i32* %132, align 8
  switch i32 %133, label %157 [
    i32 86, label %134
    i32 100, label %134
    i32 59, label %134
  ]

134:                                              ; preds = %131, %131, %131
  %135 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 8
  %138 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #9
  %139 = load i8, i8* %34, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %143 = load i8, i8* %142, align 4, !range !2
  %144 = zext i8 %143 to i32
  %145 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %144) #9
  br label %146

146:                                              ; preds = %134, %141
  %147 = phi i32 [ %145, %141 ], [ 0, %134 ]
  store i32 %147, i32* %22, align 4
  %148 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %149 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #9
  %150 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %22, i32** %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %151) #9
  %152 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %148, i32* nonnull dereferenceable(4) %22, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %14) #9
  %153 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %152, 0
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %153, i64 2
  %155 = bitcast %"struct.std::__1::__hash_node_base.19"* %154 to %"struct.std::__1::pair"*
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %155, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %151) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #9
  store i32 %136, i32* %156, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #9
  br label %762

157:                                              ; preds = %131
  %158 = tail call zeroext i1 @_Z15spvOpcodeIsLoad6SpvOp_(i32 %133) #9
  br i1 %158, label %159, label %184

159:                                              ; preds = %157
  %160 = tail call zeroext i1 @_ZNK8spvtools3opt11Instruction14IsReadOnlyLoadEv(%"class.spvtools::opt::Instruction"* %1) #9
  br i1 %160, label %184, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, 1
  store i32 %164, i32* %162, align 8
  %165 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #9
  %166 = load i8, i8* %34, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %170 = load i8, i8* %169, align 4, !range !2
  %171 = zext i8 %170 to i32
  %172 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %171) #9
  br label %173

173:                                              ; preds = %161, %168
  %174 = phi i32 [ %172, %168 ], [ 0, %161 ]
  store i32 %174, i32* %23, align 4
  %175 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %176 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #9
  %177 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %23, i32** %177, align 8
  %178 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %178) #9
  %179 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %175, i32* nonnull dereferenceable(4) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %10) #9
  %180 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %179, 0
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %180, i64 2
  %182 = bitcast %"struct.std::__1::__hash_node_base.19"* %181 to %"struct.std::__1::pair"*
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %182, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %178) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #9
  store i32 %163, i32* %183, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #9
  br label %762

184:                                              ; preds = %159, %157
  %185 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %102, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 11
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %211

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 4, i32 0, i32 0, i32 0
  %192 = bitcast %"class.spvtools::opt::Module"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = tail call i8* @_Znwm(i64 48) #10
  %195 = bitcast i8* %194 to %"class.spvtools::opt::analysis::DecorationManager"*
  %196 = getelementptr inbounds i8, i8* %194, i64 32
  %197 = bitcast i8* %196 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %197, align 4
  %198 = getelementptr inbounds i8, i8* %194, i64 40
  %199 = bitcast i8* %198 to i64*
  store i64 %193, i64* %199, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %195) #9
  %200 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 7
  %201 = ptrtoint i8* %194 to i64
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.170"* %200, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %202, align 8
  %204 = bitcast %"class.std::__1::unique_ptr.170"* %200 to i64*
  store i64 %201, i64* %204, align 8
  %205 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %203, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %190
  %207 = bitcast %"class.std::__1::unique_ptr.170"* %200 to %"struct.std::__1::default_delete.198"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.198"* %207, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %203) #9
  br label %208

208:                                              ; preds = %206, %190
  %209 = load i32, i32* %186, align 8
  %210 = or i32 %209, 4
  store i32 %210, i32* %186, align 8
  br label %211

211:                                              ; preds = %184, %208
  %212 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %185, i64 0, i32 7, i32 0, i32 0, i32 0
  %213 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %212, align 8
  %214 = load i32, i32* %132, align 8
  %215 = icmp eq i32 %214, 83
  br i1 %215, label %216, label %271

216:                                              ; preds = %211
  %217 = load i8, i8* %34, align 1, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %225, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %221 = load i8, i8* %220, align 4, !range !2
  %222 = zext i8 %221 to i32
  %223 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %222) #9
  %224 = load i8, i8* %34, align 1, !range !2
  br label %225

225:                                              ; preds = %216, %219
  %226 = phi i8 [ %224, %219 ], [ 0, %216 ]
  %227 = phi i32 [ %223, %219 ], [ 0, %216 ]
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %229 = load i8, i8* %228, align 4, !range !2
  %230 = icmp eq i8 %229, 0
  %231 = icmp eq i8 %226, 0
  %232 = select i1 %231, i32 1, i32 2
  %233 = xor i1 %231, true
  %234 = zext i1 %233 to i32
  %235 = select i1 %230, i32 %234, i32 %232
  %236 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %235) #9
  %237 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %213, i32 %227, i32 %236) #9
  br i1 %237, label %238, label %269

238:                                              ; preds = %225
  %239 = load i8, i8* %228, align 4, !range !2
  %240 = icmp eq i8 %239, 0
  %241 = load i8, i8* %34, align 1, !range !2
  %242 = icmp eq i8 %241, 0
  %243 = select i1 %242, i32 1, i32 2
  %244 = xor i1 %242, true
  %245 = zext i1 %244 to i32
  %246 = select i1 %240, i32 %245, i32 %243
  %247 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %246) #9
  %248 = tail call i32 @_ZNK8spvtools3opt16ValueNumberTable14GetValueNumberEj(%"class.spvtools::opt::ValueNumberTable"* %0, i32 %247)
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %269, label %250

250:                                              ; preds = %238
  %251 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #9
  %252 = load i8, i8* %34, align 1, !range !2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = load i8, i8* %228, align 4, !range !2
  %256 = zext i8 %255 to i32
  %257 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %256) #9
  br label %258

258:                                              ; preds = %250, %254
  %259 = phi i32 [ %257, %254 ], [ 0, %250 ]
  store i32 %259, i32* %24, align 4
  %260 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %261 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #9
  %262 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %24, i32** %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %263) #9
  %264 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %260, i32* nonnull dereferenceable(4) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %8) #9
  %265 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %264, 0
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %265, i64 2
  %267 = bitcast %"struct.std::__1::__hash_node_base.19"* %266 to %"struct.std::__1::pair"*
  %268 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %267, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %263) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #9
  store i32 %248, i32* %268, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #9
  br label %762

269:                                              ; preds = %225, %238
  %270 = load i32, i32* %132, align 8
  br label %271

271:                                              ; preds = %269, %211
  %272 = phi i32 [ %270, %269 ], [ %214, %211 ]
  %273 = icmp eq i32 %272, 245
  br i1 %273, label %274, label %363

274:                                              ; preds = %271
  %275 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %276 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %277 = bitcast %"struct.spvtools::opt::Operand"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.std::__1::vector"* %275 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = sub i64 %278, %280
  %282 = sdiv exact i64 %281, 48
  %283 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %284 = load i8, i8* %283, align 4, !range !2
  %285 = icmp eq i8 %284, 0
  %286 = load i8, i8* %34, align 1, !range !2
  %287 = icmp eq i8 %286, 0
  %288 = select i1 %287, i32 1, i32 2
  %289 = xor i1 %287, true
  %290 = zext i1 %289 to i32
  %291 = select i1 %285, i32 %290, i32 %288
  %292 = trunc i64 %282 to i32
  %293 = icmp eq i32 %291, %292
  br i1 %293, label %363, label %294

294:                                              ; preds = %274
  br i1 %287, label %300, label %295

295:                                              ; preds = %294
  %296 = zext i8 %284 to i32
  %297 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %296) #9
  %298 = load i8, i8* %283, align 4, !range !2
  %299 = load i8, i8* %34, align 1, !range !2
  br label %300

300:                                              ; preds = %294, %295
  %301 = phi i8 [ %299, %295 ], [ 0, %294 ]
  %302 = phi i8 [ %298, %295 ], [ %284, %294 ]
  %303 = phi i32 [ %297, %295 ], [ 0, %294 ]
  %304 = icmp eq i8 %302, 0
  %305 = icmp eq i8 %301, 0
  %306 = select i1 %305, i32 1, i32 2
  %307 = xor i1 %305, true
  %308 = zext i1 %307 to i32
  %309 = select i1 %304, i32 %308, i32 %306
  %310 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %309) #9
  %311 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %213, i32 %303, i32 %310) #9
  br i1 %311, label %312, label %363

312:                                              ; preds = %300
  %313 = load i8, i8* %283, align 4, !range !2
  %314 = icmp eq i8 %313, 0
  %315 = load i8, i8* %34, align 1, !range !2
  %316 = icmp eq i8 %315, 0
  %317 = select i1 %316, i32 1, i32 2
  %318 = xor i1 %316, true
  %319 = zext i1 %318 to i32
  %320 = select i1 %314, i32 %319, i32 %317
  %321 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %320) #9
  %322 = tail call i32 @_ZNK8spvtools3opt16ValueNumberTable14GetValueNumberEj(%"class.spvtools::opt::ValueNumberTable"* %0, i32 %321)
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %363, label %324

324:                                              ; preds = %312, %341
  %325 = phi i32 [ %346, %341 ], [ 2, %312 ]
  %326 = load i64, i64* %277, align 8
  %327 = load i64, i64* %279, align 8
  %328 = sub i64 %326, %327
  %329 = sdiv exact i64 %328, 48
  %330 = load i8, i8* %283, align 4, !range !2
  %331 = icmp eq i8 %330, 0
  %332 = load i8, i8* %34, align 1, !range !2
  %333 = icmp eq i8 %332, 0
  %334 = select i1 %333, i32 1, i32 2
  %335 = xor i1 %333, true
  %336 = zext i1 %335 to i32
  %337 = select i1 %331, i32 %336, i32 %334
  %338 = trunc i64 %329 to i32
  %339 = sub i32 %338, %337
  %340 = icmp ult i32 %325, %339
  br i1 %340, label %341, label %347

341:                                              ; preds = %324
  %342 = add i32 %337, %325
  %343 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %342) #9
  %344 = tail call i32 @_ZNK8spvtools3opt16ValueNumberTable14GetValueNumberEj(%"class.spvtools::opt::ValueNumberTable"* %0, i32 %343)
  %345 = icmp eq i32 %322, %344
  %346 = add i32 %325, 2
  br i1 %345, label %324, label %363

347:                                              ; preds = %324
  %348 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %348) #9
  br i1 %333, label %352, label %349

349:                                              ; preds = %347
  %350 = zext i8 %330 to i32
  %351 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %350) #9
  br label %352

352:                                              ; preds = %347, %349
  %353 = phi i32 [ %351, %349 ], [ 0, %347 ]
  store i32 %353, i32* %25, align 4
  %354 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %355 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #9
  %356 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %25, i32** %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %357) #9
  %358 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %354, i32* nonnull dereferenceable(4) %25, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %4) #9
  %359 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %358, 0
  %360 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %359, i64 2
  %361 = bitcast %"struct.std::__1::__hash_node_base.19"* %360 to %"struct.std::__1::pair"*
  %362 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %361, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %357) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #9
  store i32 %322, i32* %362, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %348) #9
  br label %762

363:                                              ; preds = %341, %312, %274, %300, %271
  %364 = bitcast %"class.spvtools::opt::Instruction"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %364) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %364, i8 -86, i64 112, i1 false)
  %365 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %102, align 8
  %366 = load i32, i32* %132, align 8
  %367 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %368 = load i8, i8* %367, align 4, !range !2
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %363
  %371 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #9
  br label %372

372:                                              ; preds = %363, %370
  %373 = phi i32 [ %371, %370 ], [ 0, %363 ]
  %374 = load i8, i8* %34, align 1, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %380, label %376

376:                                              ; preds = %372
  %377 = load i8, i8* %367, align 4, !range !2
  %378 = zext i8 %377 to i32
  %379 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %378) #9
  br label %380

380:                                              ; preds = %372, %376
  %381 = phi i32 [ %379, %376 ], [ 0, %372 ]
  %382 = bitcast %"class.std::__1::vector"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %382) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %382, i8 0, i64 24, i1 false) #9
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %26, %"class.spvtools::opt::IRContext"* %365, i32 %366, i32 %373, i32 %381, %"class.std::__1::vector"* nonnull dereferenceable(24) %27) #9
  %383 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 0
  %384 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %383, align 8
  %385 = icmp eq %"struct.spvtools::opt::Operand"* %384, null
  br i1 %385, label %416, label %386

386:                                              ; preds = %380
  %387 = bitcast %"struct.spvtools::opt::Operand"* %384 to i8*
  %388 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 1
  %389 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %388, align 8
  %390 = icmp eq %"struct.spvtools::opt::Operand"* %389, %384
  br i1 %390, label %414, label %391

391:                                              ; preds = %386, %409
  %392 = phi %"struct.spvtools::opt::Operand"* [ %393, %409 ], [ %389, %386 ]
  %393 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %392, i64 -1
  %394 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %392, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %394, align 8
  %395 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %392, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %396 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %395, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %395, align 8
  %397 = icmp eq %"class.std::__1::vector.44"* %396, null
  br i1 %397, label %409, label %398

398:                                              ; preds = %391
  %399 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %396, i64 0, i32 0, i32 0
  %400 = load i32*, i32** %399, align 8
  %401 = icmp eq i32* %400, null
  br i1 %401, label %407, label %402

402:                                              ; preds = %398
  %403 = ptrtoint i32* %400 to i64
  %404 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %396, i64 0, i32 0, i32 1
  %405 = bitcast i32** %404 to i64*
  store i64 %403, i64* %405, align 8
  %406 = bitcast i32* %400 to i8*
  call void @_ZdlPv(i8* %406) #10
  br label %407

407:                                              ; preds = %402, %398
  %408 = bitcast %"class.std::__1::vector.44"* %396 to i8*
  call void @_ZdlPv(i8* %408) #10
  br label %409

409:                                              ; preds = %407, %391
  %410 = icmp eq %"struct.spvtools::opt::Operand"* %393, %384
  br i1 %410, label %411, label %391

411:                                              ; preds = %409
  %412 = bitcast %"class.std::__1::vector"* %27 to i8**
  %413 = load i8*, i8** %412, align 8
  br label %414

414:                                              ; preds = %411, %386
  %415 = phi i8* [ %413, %411 ], [ %387, %386 ]
  store %"struct.spvtools::opt::Operand"* %384, %"struct.spvtools::opt::Operand"** %388, align 8
  call void @_ZdlPv(i8* %415) #10
  br label %416

416:                                              ; preds = %380, %414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %382) #9
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %418 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %419 = bitcast %"struct.spvtools::opt::Operand"** %418 to i64*
  %420 = bitcast %"class.std::__1::vector"* %417 to i64*
  %421 = bitcast %"struct.spvtools::opt::Operand"* %30 to i8*
  %422 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 0
  %423 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1
  %424 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %423, i64 0, i32 0
  %425 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 1
  %426 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 2
  %427 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 3, i64 0
  %428 = bitcast i32** %426 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %429 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 4
  %430 = bitcast %"class.std::__1::unique_ptr.41"* %429 to i64*
  %431 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 6, i32 0, i32 1
  %432 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %433 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 6
  %434 = bitcast %"struct.spvtools::opt::Operand"** %431 to i64*
  %435 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 0
  %436 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %30, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %437 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = bitcast %"struct.spvtools::opt::Operand"* %28 to i8*
  %439 = bitcast %"class.spvtools::utils::SmallVector"* %29 to i8*
  %440 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 0
  %441 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 1
  %442 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 2
  %443 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 3, i64 0
  %444 = bitcast i32** %442 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %445 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 4
  %446 = bitcast %"class.std::__1::unique_ptr.41"* %445 to i64*
  %447 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %443 to i32*
  %448 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 0
  %449 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1
  %450 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %449, i64 0, i32 0
  %451 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1, i32 1
  %452 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1, i32 2
  %453 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1, i32 3, i64 0
  %454 = bitcast i32** %452 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %455 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1, i32 4
  %456 = bitcast %"class.std::__1::unique_ptr.41"* %455 to i64*
  %457 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1, i32 0
  %458 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %459 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %460

460:                                              ; preds = %687, %416
  %461 = phi i32 [ 0, %416 ], [ %689, %687 ]
  %462 = load i64, i64* %419, align 8
  %463 = load i64, i64* %420, align 8
  %464 = sub i64 %462, %463
  %465 = sdiv exact i64 %464, 48
  %466 = load i8, i8* %367, align 4, !range !2
  %467 = icmp eq i8 %466, 0
  %468 = load i8, i8* %34, align 1, !range !2
  %469 = icmp eq i8 %468, 0
  %470 = select i1 %469, i32 1, i32 2
  %471 = xor i1 %469, true
  %472 = zext i1 %471 to i32
  %473 = select i1 %467, i32 %472, i32 %470
  %474 = trunc i64 %465 to i32
  %475 = sub i32 %474, %473
  %476 = icmp ult i32 %461, %475
  %477 = inttoptr i64 %463 to %"struct.spvtools::opt::Operand"*
  br i1 %476, label %530, label %478

478:                                              ; preds = %460
  %479 = call i64 @_ZNK8spvtools3opt14ValueTableHashclERKNS0_11InstructionE(%"class.spvtools::opt::ValueTableHash"* undef, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %26) #9
  %480 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %481 = load i64, i64* %480, align 8
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %730, label %483

483:                                              ; preds = %478
  %484 = call i64 @llvm.ctpop.i64(i64 %481) #9, !range !3
  %485 = icmp ugt i64 %484, 1
  br i1 %485, label %489, label %486

486:                                              ; preds = %483
  %487 = add i64 %481, -1
  %488 = and i64 %487, %479
  br label %493

489:                                              ; preds = %483
  %490 = icmp ult i64 %479, %481
  br i1 %490, label %493, label %491

491:                                              ; preds = %489
  %492 = urem i64 %479, %481
  br label %493

493:                                              ; preds = %491, %489, %486
  %494 = phi i64 [ %488, %486 ], [ %492, %491 ], [ %479, %489 ]
  %495 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %495, align 8
  %497 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %496, i64 %494
  %498 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %497, align 8
  %499 = icmp eq %"struct.std::__1::__hash_node_base"* %498, null
  br i1 %499, label %730, label %500

500:                                              ; preds = %493
  %501 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %498, i64 0, i32 0
  %502 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %501, align 8
  %503 = icmp eq %"struct.std::__1::__hash_node_base"* %502, null
  br i1 %503, label %730, label %504

504:                                              ; preds = %500
  %505 = add i64 %481, -1
  br label %506

506:                                              ; preds = %526, %504
  %507 = phi %"struct.std::__1::__hash_node_base"* [ %502, %504 ], [ %528, %526 ]
  %508 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %507, i64 1
  %509 = bitcast %"struct.std::__1::__hash_node_base"* %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = icmp eq i64 %510, %479
  br i1 %511, label %522, label %512

512:                                              ; preds = %506
  br i1 %485, label %515, label %513

513:                                              ; preds = %512
  %514 = and i64 %510, %505
  br label %519

515:                                              ; preds = %512
  %516 = icmp ult i64 %510, %481
  br i1 %516, label %519, label %517

517:                                              ; preds = %515
  %518 = urem i64 %510, %481
  br label %519

519:                                              ; preds = %517, %515, %513
  %520 = phi i64 [ %514, %513 ], [ %518, %517 ], [ %510, %515 ]
  %521 = icmp eq i64 %520, %494
  br i1 %521, label %526, label %730

522:                                              ; preds = %506
  %523 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %507, i64 2
  %524 = bitcast %"struct.std::__1::__hash_node_base"* %523 to %"class.spvtools::opt::Instruction"*
  %525 = call zeroext i1 @_ZNK8spvtools3opt16ComputeSameValueclERKNS0_11InstructionES4_(%"class.spvtools::opt::ComputeSameValue"* undef, %"class.spvtools::opt::Instruction"* dereferenceable(112) %524, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %26) #9
  br i1 %525, label %690, label %526

526:                                              ; preds = %522, %519
  %527 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %507, i64 0, i32 0
  %528 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %527, align 8
  %529 = icmp eq %"struct.std::__1::__hash_node_base"* %528, null
  br i1 %529, label %730, label %506

530:                                              ; preds = %460
  %531 = add i32 %473, %461
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %477, i64 %532, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = call zeroext i1 @_Z11spvIsIdType18spv_operand_type_t(i32 %534) #9
  br i1 %535, label %536, label %651

536:                                              ; preds = %530
  %537 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %477, i64 %532, i32 1, i32 4, i32 0, i32 0, i32 0
  %538 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %537, align 8
  %539 = icmp eq %"class.std::__1::vector.44"* %538, null
  %540 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %538, i64 0, i32 0, i32 0
  %541 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %477, i64 %532, i32 1, i32 2
  %542 = select i1 %539, i32** %541, i32** %540
  %543 = load i32*, i32** %542, align 8
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i64
  %546 = load i64, i64* %45, align 8
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %600, label %548

548:                                              ; preds = %536
  %549 = call i64 @llvm.ctpop.i64(i64 %546) #9, !range !3
  %550 = icmp ugt i64 %549, 1
  br i1 %550, label %554, label %551

551:                                              ; preds = %548
  %552 = add i64 %546, 4294967295
  %553 = and i64 %552, %545
  br label %558

554:                                              ; preds = %548
  %555 = icmp ugt i64 %546, %545
  br i1 %555, label %558, label %556

556:                                              ; preds = %554
  %557 = urem i64 %545, %546
  br label %558

558:                                              ; preds = %556, %554, %551
  %559 = phi i64 [ %553, %551 ], [ %557, %556 ], [ %545, %554 ]
  %560 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %437, align 8
  %561 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %560, i64 %559
  %562 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %561, align 8
  %563 = icmp eq %"struct.std::__1::__hash_node_base.19"* %562, null
  br i1 %563, label %600, label %564

564:                                              ; preds = %558
  %565 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %562, i64 0, i32 0
  %566 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %565, align 8
  %567 = icmp eq %"struct.std::__1::__hash_node_base.19"* %566, null
  br i1 %567, label %600, label %568

568:                                              ; preds = %564
  %569 = add i64 %546, -1
  br label %570

570:                                              ; preds = %591, %568
  %571 = phi %"struct.std::__1::__hash_node_base.19"* [ %566, %568 ], [ %593, %591 ]
  %572 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %571, i64 1
  %573 = bitcast %"struct.std::__1::__hash_node_base.19"* %572 to i64*
  %574 = load i64, i64* %573, align 8
  %575 = icmp eq i64 %574, %545
  br i1 %575, label %586, label %576

576:                                              ; preds = %570
  br i1 %550, label %579, label %577

577:                                              ; preds = %576
  %578 = and i64 %574, %569
  br label %583

579:                                              ; preds = %576
  %580 = icmp ult i64 %574, %546
  br i1 %580, label %583, label %581

581:                                              ; preds = %579
  %582 = urem i64 %574, %546
  br label %583

583:                                              ; preds = %581, %579, %577
  %584 = phi i64 [ %578, %577 ], [ %582, %581 ], [ %574, %579 ]
  %585 = icmp eq i64 %584, %559
  br i1 %585, label %591, label %600

586:                                              ; preds = %570
  %587 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %571, i64 2
  %588 = bitcast %"struct.std::__1::__hash_node_base.19"* %587 to i32*
  %589 = load i32, i32* %588, align 4
  %590 = icmp eq i32 %589, %544
  br i1 %590, label %595, label %591

591:                                              ; preds = %586, %583
  %592 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %571, i64 0, i32 0
  %593 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %592, align 8
  %594 = icmp eq %"struct.std::__1::__hash_node_base.19"* %593, null
  br i1 %594, label %600, label %570

595:                                              ; preds = %586
  %596 = bitcast %"struct.std::__1::__hash_node_base.19"* %587 to %"struct.std::__1::pair"*
  %597 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %596, i64 0, i32 1
  %598 = load i32, i32* %597, align 4
  %599 = or i32 %598, -2147483648
  br label %600

600:                                              ; preds = %591, %583, %564, %536, %558, %595
  %601 = phi i32 [ %599, %595 ], [ %544, %558 ], [ %544, %536 ], [ %544, %564 ], [ %544, %583 ], [ %544, %591 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %438) #9
  %602 = load i32, i32* %533, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %439) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %443, %"struct.std::__1::aligned_storage<4, 4>::type"** %444, align 8
  store i64 0, i64* %446, align 8
  store i64 1, i64* %441, align 8
  store i32 %601, i32* %447, align 8
  store i32 %602, i32* %448, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %450, align 8
  store i64 0, i64* %451, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %453, %"struct.std::__1::aligned_storage<4, 4>::type"** %454, align 8
  store i64 0, i64* %456, align 8
  %603 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %449, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %29) #9
  %604 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %431, align 8
  %605 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %432, align 8
  %606 = icmp ult %"struct.spvtools::opt::Operand"* %604, %605
  br i1 %606, label %607, label %621

607:                                              ; preds = %600
  %608 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 0, i32 0
  %609 = load i32, i32* %448, align 8
  store i32 %609, i32* %608, align 8
  %610 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 0, i32 1
  %611 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %610, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %611, align 8
  %612 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 0, i32 1, i32 1
  store i64 0, i64* %612, align 8
  %613 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 0, i32 1, i32 2
  %614 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 0, i32 1, i32 3, i64 0
  %615 = bitcast i32** %613 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %614, %"struct.std::__1::aligned_storage<4, 4>::type"** %615, align 8
  %616 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 0, i32 1, i32 4
  %617 = bitcast %"class.std::__1::unique_ptr.41"* %616 to i64*
  store i64 0, i64* %617, align 8
  %618 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %610, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %449) #9
  %619 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %604, i64 1
  %620 = ptrtoint %"struct.spvtools::opt::Operand"* %619 to i64
  store i64 %620, i64* %434, align 8
  br label %622

621:                                              ; preds = %600
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %433, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %28) #9
  br label %622

622:                                              ; preds = %607, %621
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %457, align 8
  %623 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %458, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %458, align 8
  %624 = icmp eq %"class.std::__1::vector.44"* %623, null
  br i1 %624, label %636, label %625

625:                                              ; preds = %622
  %626 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %623, i64 0, i32 0, i32 0
  %627 = load i32*, i32** %626, align 8
  %628 = icmp eq i32* %627, null
  br i1 %628, label %634, label %629

629:                                              ; preds = %625
  %630 = ptrtoint i32* %627 to i64
  %631 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %623, i64 0, i32 0, i32 1
  %632 = bitcast i32** %631 to i64*
  store i64 %630, i64* %632, align 8
  %633 = bitcast i32* %627 to i8*
  call void @_ZdlPv(i8* %633) #10
  br label %634

634:                                              ; preds = %629, %625
  %635 = bitcast %"class.std::__1::vector.44"* %623 to i8*
  call void @_ZdlPv(i8* %635) #10
  br label %636

636:                                              ; preds = %622, %634
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8
  %637 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %459, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %459, align 8
  %638 = icmp eq %"class.std::__1::vector.44"* %637, null
  br i1 %638, label %650, label %639

639:                                              ; preds = %636
  %640 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %637, i64 0, i32 0, i32 0
  %641 = load i32*, i32** %640, align 8
  %642 = icmp eq i32* %641, null
  br i1 %642, label %648, label %643

643:                                              ; preds = %639
  %644 = ptrtoint i32* %641 to i64
  %645 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %637, i64 0, i32 0, i32 1
  %646 = bitcast i32** %645 to i64*
  store i64 %644, i64* %646, align 8
  %647 = bitcast i32* %641 to i8*
  call void @_ZdlPv(i8* %647) #10
  br label %648

648:                                              ; preds = %643, %639
  %649 = bitcast %"class.std::__1::vector.44"* %637 to i8*
  call void @_ZdlPv(i8* %649) #10
  br label %650

650:                                              ; preds = %636, %648
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %439) #9
  br label %687

651:                                              ; preds = %530
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %421) #9
  %652 = load i32, i32* %533, align 8
  %653 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %477, i64 %532, i32 1
  store i32 %652, i32* %422, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %424, align 8
  store i64 0, i64* %425, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %427, %"struct.std::__1::aligned_storage<4, 4>::type"** %428, align 8
  store i64 0, i64* %430, align 8
  %654 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %423, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %653) #9
  %655 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %431, align 8
  %656 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %432, align 8
  %657 = icmp ult %"struct.spvtools::opt::Operand"* %655, %656
  br i1 %657, label %658, label %672

658:                                              ; preds = %651
  %659 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 0, i32 0
  %660 = load i32, i32* %422, align 8
  store i32 %660, i32* %659, align 8
  %661 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 0, i32 1
  %662 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %661, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %662, align 8
  %663 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 0, i32 1, i32 1
  store i64 0, i64* %663, align 8
  %664 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 0, i32 1, i32 2
  %665 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 0, i32 1, i32 3, i64 0
  %666 = bitcast i32** %664 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %665, %"struct.std::__1::aligned_storage<4, 4>::type"** %666, align 8
  %667 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 0, i32 1, i32 4
  %668 = bitcast %"class.std::__1::unique_ptr.41"* %667 to i64*
  store i64 0, i64* %668, align 8
  %669 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %661, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %423) #9
  %670 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %655, i64 1
  %671 = ptrtoint %"struct.spvtools::opt::Operand"* %670 to i64
  store i64 %671, i64* %434, align 8
  br label %673

672:                                              ; preds = %651
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %433, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %30) #9
  br label %673

673:                                              ; preds = %658, %672
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %435, align 8
  %674 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %436, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %436, align 8
  %675 = icmp eq %"class.std::__1::vector.44"* %674, null
  br i1 %675, label %687, label %676

676:                                              ; preds = %673
  %677 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %674, i64 0, i32 0, i32 0
  %678 = load i32*, i32** %677, align 8
  %679 = icmp eq i32* %678, null
  br i1 %679, label %685, label %680

680:                                              ; preds = %676
  %681 = ptrtoint i32* %678 to i64
  %682 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %674, i64 0, i32 0, i32 1
  %683 = bitcast i32** %682 to i64*
  store i64 %681, i64* %683, align 8
  %684 = bitcast i32* %678 to i8*
  call void @_ZdlPv(i8* %684) #10
  br label %685

685:                                              ; preds = %680, %676
  %686 = bitcast %"class.std::__1::vector.44"* %674 to i8*
  call void @_ZdlPv(i8* %686) #10
  br label %687

687:                                              ; preds = %685, %673, %650
  %688 = phi i8* [ %438, %650 ], [ %421, %673 ], [ %421, %685 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %688) #9
  %689 = add i32 %461, 1
  br label %460

690:                                              ; preds = %522
  %691 = bitcast %"struct.std::__1::__hash_node_base"* %523 to %"class.spvtools::opt::Instruction"*
  %692 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %692) #9
  %693 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %691, i64 0, i32 4
  %694 = load i8, i8* %693, align 1, !range !2
  %695 = icmp eq i8 %694, 0
  br i1 %695, label %701, label %696

696:                                              ; preds = %690
  %697 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %691, i64 0, i32 3
  %698 = load i8, i8* %697, align 4, !range !2
  %699 = zext i8 %698 to i32
  %700 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %691, i32 %699) #9
  br label %701

701:                                              ; preds = %690, %696
  %702 = phi i32 [ %700, %696 ], [ 0, %690 ]
  store i32 %702, i32* %31, align 4
  %703 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %704 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %704) #9
  %705 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %31, i32** %705, align 8
  %706 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %706) #9
  %707 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %703, i32* nonnull dereferenceable(4) %31, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %6) #9
  %708 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %707, 0
  %709 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %708, i64 2
  %710 = bitcast %"struct.std::__1::__hash_node_base.19"* %709 to %"struct.std::__1::pair"*
  %711 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %710, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %706) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %704) #9
  %712 = load i32, i32* %711, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %692) #9
  %713 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %713) #9
  %714 = load i8, i8* %34, align 1, !range !2
  %715 = icmp eq i8 %714, 0
  br i1 %715, label %720, label %716

716:                                              ; preds = %701
  %717 = load i8, i8* %367, align 4, !range !2
  %718 = zext i8 %717 to i32
  %719 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %718) #9
  br label %720

720:                                              ; preds = %701, %716
  %721 = phi i32 [ %719, %716 ], [ 0, %701 ]
  store i32 %721, i32* %32, align 4
  %722 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %722) #9
  %723 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store i32* %32, i32** %723, align 8
  %724 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %724) #9
  %725 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %703, i32* nonnull dereferenceable(4) %32, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %12) #9
  %726 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %725, 0
  %727 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %726, i64 2
  %728 = bitcast %"struct.std::__1::__hash_node_base.19"* %727 to %"struct.std::__1::pair"*
  %729 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %728, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %724) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %722) #9
  store i32 %712, i32* %729, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %713) #9
  br label %760

730:                                              ; preds = %519, %526, %493, %478, %500
  %731 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 3
  %732 = load i32, i32* %731, align 8
  %733 = add i32 %732, 1
  store i32 %733, i32* %731, align 8
  %734 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %734) #9
  %735 = load i8, i8* %34, align 1, !range !2
  %736 = icmp eq i8 %735, 0
  br i1 %736, label %741, label %737

737:                                              ; preds = %730
  %738 = load i8, i8* %367, align 4, !range !2
  %739 = zext i8 %738 to i32
  %740 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %739) #9
  br label %741

741:                                              ; preds = %730, %737
  %742 = phi i32 [ %740, %737 ], [ 0, %730 ]
  store i32 %742, i32* %33, align 4
  %743 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 1, i32 0
  %744 = bitcast %"class.std::__1::tuple"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %744) #9
  %745 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 0, i32 0
  store i32* %33, i32** %745, align 8
  %746 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %746) #9
  %747 = call { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"* %743, i32* nonnull dereferenceable(4) %33, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %16) #9
  %748 = extractvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %747, 0
  %749 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %748, i64 2
  %750 = bitcast %"struct.std::__1::__hash_node_base.19"* %749 to %"struct.std::__1::pair"*
  %751 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %750, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %746) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %744) #9
  store i32 %732, i32* %751, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %734) #9
  %752 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 0, i32 0
  %753 = bitcast %"class.std::__1::tuple.995"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %753) #9
  %754 = getelementptr inbounds %"class.std::__1::tuple.995", %"class.std::__1::tuple.995"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %26, %"class.spvtools::opt::Instruction"** %754, align 8
  %755 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %755) #9
  %756 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %752, %"class.spvtools::opt::Instruction"* nonnull dereferenceable(112) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.995"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %20) #9
  %757 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %756, 0
  %758 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %757, i64 16
  %759 = bitcast %"struct.std::__1::__hash_node_base"* %758 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %755) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %753) #9
  store i32 %732, i32* %759, align 4
  br label %760

760:                                              ; preds = %741, %720
  %761 = phi i32 [ %712, %720 ], [ %732, %741 ]
  call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %364) #9
  br label %762

762:                                              ; preds = %258, %352, %760, %96, %173, %146, %120
  %763 = phi i32 [ %163, %173 ], [ %136, %146 ], [ %110, %120 ], [ %99, %96 ], [ %248, %258 ], [ %322, %352 ], [ %761, %760 ]
  ret i32 %763
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.952", align 1
  %5 = alloca %"class.std::__1::tuple.964", align 8
  %6 = alloca %"class.std::__1::tuple.952", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"* %0) #9
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %81, label %18

18:                                               ; preds = %14
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store i32 0, i32* %7, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #9
  %24 = call { %"struct.std::__1::__hash_node_base.278"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.274"* %20, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %4) #9
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.278"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %27 = load i32, i32* %15, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.278"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %164, label %33

33:                                               ; preds = %18
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #9, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, 4294967295
  %38 = and i64 %37, %28
  br label %43

39:                                               ; preds = %33
  %40 = icmp ugt i64 %31, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %28, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %28, %39 ]
  %45 = bitcast %"struct.std::__1::__hash_node_base.278"* %26 to %"struct.std::__1::__hash_node_base.932"***
  %46 = load %"struct.std::__1::__hash_node_base.932"**, %"struct.std::__1::__hash_node_base.932"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.932"* %48, null
  br i1 %49, label %164, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.932"* %52, null
  br i1 %53, label %164, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base.932"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.932"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %28
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %164

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.932"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %27
  br i1 %76, label %164, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.932"* %79, null
  br i1 %80, label %164, label %56

81:                                               ; preds = %14
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #9
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i32 1, i32 2
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  %92 = select i1 %85, i32 %91, i32 %89
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %92) #9
  store i32 %93, i32* %8, align 4
  %94 = load i8, i8* %83, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %86, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #9
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %105 = bitcast %"class.std::__1::tuple.964"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #9
  %106 = getelementptr inbounds %"class.std::__1::tuple.964", %"class.std::__1::tuple.964"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.952", %"class.std::__1::tuple.952"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #9
  %108 = call { %"struct.std::__1::__hash_node_base.278"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.274"* %104, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.964"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.952"* nonnull dereferenceable(1) %6) #9
  %109 = extractvalue { %"struct.std::__1::__hash_node_base.278"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %109, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #9
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %109, i64 4
  %113 = bitcast %"struct.std::__1::__hash_node_base.278"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %81
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #9, !range !3
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %111
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %111
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %111, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %111, %122 ]
  %128 = bitcast %"struct.std::__1::__hash_node_base.278"* %110 to %"struct.std::__1::__hash_node_base.932"***
  %129 = load %"struct.std::__1::__hash_node_base.932"**, %"struct.std::__1::__hash_node_base.932"*** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %129, i64 %127
  %131 = load %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.932"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.932"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = add i64 %114, -1
  br label %139

139:                                              ; preds = %160, %137
  %140 = phi %"struct.std::__1::__hash_node_base.932"* [ %135, %137 ], [ %162, %160 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.932"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %111
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %118, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %138
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %114
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %114
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %127
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.932"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %103
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.932", %"struct.std::__1::__hash_node_base.932"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.932"*, %"struct.std::__1::__hash_node_base.932"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.932"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %77, %72, %69, %160, %155, %152, %133, %126, %81, %50, %43, %18
  %165 = phi i8* [ %19, %18 ], [ %19, %43 ], [ %19, %50 ], [ %82, %81 ], [ %82, %126 ], [ %82, %133 ], [ %82, %152 ], [ %82, %155 ], [ %82, %160 ], [ %19, %69 ], [ %19, %72 ], [ %19, %77 ]
  %166 = phi %"struct.std::__1::__hash_node_base.932"* [ null, %18 ], [ null, %43 ], [ null, %50 ], [ null, %81 ], [ null, %126 ], [ null, %133 ], [ null, %160 ], [ %140, %155 ], [ null, %152 ], [ null, %77 ], [ %57, %72 ], [ null, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #9
  %167 = icmp ne %"struct.std::__1::__hash_node_base.932"* %166, null
  ret i1 %167
}

declare zeroext i1 @_ZNK8spvtools3opt11Instruction14IsReadOnlyLoadEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_Z11spvIsIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %3, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.44"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.44"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #9
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.57"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %38, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.44"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.44"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt16ValueNumberTable34BuildDominatorTreeValueNumberTableEv(%"class.spvtools::opt::ValueNumberTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %0, i64 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8, !noalias !4
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 13, i32 0, i32 1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %"class.spvtools::opt::Instruction"*
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, %10
  br i1 %11, label %16, label %24

12:                                               ; preds = %38
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8, !noalias !7
  br label %16

16:                                               ; preds = %12, %1
  %17 = phi %"class.spvtools::opt::Module"* [ %15, %12 ], [ %5, %1 ]
  %18 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %17, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %17, i64 0, i32 3, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = inttoptr i64 %21 to %"class.spvtools::opt::Instruction"*
  %23 = icmp eq %"class.spvtools::opt::Instruction"* %19, %22
  br i1 %23, label %49, label %57

24:                                               ; preds = %1, %38
  %25 = phi %"class.spvtools::opt::Instruction"* [ %43, %38 ], [ %10, %1 ]
  %26 = phi i64 [ %42, %38 ], [ %9, %1 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = zext i8 %32 to i32
  %34 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %25, i32 %33) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = tail call i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* %0, %"class.spvtools::opt::Instruction"* %25)
  br label %38

38:                                               ; preds = %24, %30, %36
  %39 = inttoptr i64 %26 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %40 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %39, i64 0, i32 1
  %41 = bitcast %"class.spvtools::opt::Instruction"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %42 to %"class.spvtools::opt::Instruction"*
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %7, %43
  br i1 %44, label %12, label %24

45:                                               ; preds = %71
  %46 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %47, align 8, !noalias !10
  br label %49

49:                                               ; preds = %45, %16
  %50 = phi %"class.spvtools::opt::Module"* [ %48, %45 ], [ %17, %16 ]
  %51 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %50, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %52 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %50, i64 0, i32 14, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = inttoptr i64 %54 to %"class.spvtools::opt::Instruction"*
  %56 = icmp eq %"class.spvtools::opt::Instruction"* %52, %55
  br i1 %56, label %82, label %90

57:                                               ; preds = %16, %71
  %58 = phi %"class.spvtools::opt::Instruction"* [ %76, %71 ], [ %22, %16 ]
  %59 = phi i64 [ %75, %71 ], [ %21, %16 ]
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 4
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 3
  %65 = load i8, i8* %64, align 4, !range !2
  %66 = zext i8 %65 to i32
  %67 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %58, i32 %66) #9
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %63
  %70 = tail call i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* %0, %"class.spvtools::opt::Instruction"* %58)
  br label %71

71:                                               ; preds = %57, %63, %69
  %72 = inttoptr i64 %59 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %73 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %72, i64 0, i32 1
  %74 = bitcast %"class.spvtools::opt::Instruction"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %75 to %"class.spvtools::opt::Instruction"*
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %19, %76
  br i1 %77, label %45, label %57

78:                                               ; preds = %104
  %79 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %80, align 8
  br label %82

82:                                               ; preds = %78, %49
  %83 = phi %"class.spvtools::opt::Module"* [ %81, %78 ], [ %50, %49 ]
  %84 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %83, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %83, i64 0, i32 5, i32 0, i32 1
  %86 = bitcast %"class.spvtools::opt::Instruction"** %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = inttoptr i64 %87 to %"class.spvtools::opt::Instruction"*
  %89 = icmp eq %"class.spvtools::opt::Instruction"* %85, %88
  br i1 %89, label %115, label %123

90:                                               ; preds = %49, %104
  %91 = phi %"class.spvtools::opt::Instruction"* [ %109, %104 ], [ %55, %49 ]
  %92 = phi i64 [ %108, %104 ], [ %54, %49 ]
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 4
  %94 = load i8, i8* %93, align 1, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 3
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = zext i8 %98 to i32
  %100 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %91, i32 %99) #9
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %96
  %103 = tail call i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* %0, %"class.spvtools::opt::Instruction"* %91)
  br label %104

104:                                              ; preds = %90, %96, %102
  %105 = inttoptr i64 %92 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %106 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %105, i64 0, i32 1
  %107 = bitcast %"class.spvtools::opt::Instruction"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = inttoptr i64 %108 to %"class.spvtools::opt::Instruction"*
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %52, %109
  br i1 %110, label %78, label %90

111:                                              ; preds = %137
  %112 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  br label %115

115:                                              ; preds = %111, %82
  %116 = phi %"class.spvtools::opt::Module"* [ %114, %111 ], [ %83, %82 ]
  %117 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %116, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %118 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %116, i64 0, i32 12, i32 0, i32 1
  %119 = bitcast %"class.spvtools::opt::Instruction"** %117 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = inttoptr i64 %120 to %"class.spvtools::opt::Instruction"*
  %122 = icmp eq %"class.spvtools::opt::Instruction"* %118, %121
  br i1 %122, label %148, label %155

123:                                              ; preds = %82, %137
  %124 = phi %"class.spvtools::opt::Instruction"* [ %142, %137 ], [ %88, %82 ]
  %125 = phi i64 [ %141, %137 ], [ %87, %82 ]
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %124, i64 0, i32 4
  %127 = load i8, i8* %126, align 1, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %124, i64 0, i32 3
  %131 = load i8, i8* %130, align 4, !range !2
  %132 = zext i8 %131 to i32
  %133 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %124, i32 %132) #9
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %129
  %136 = tail call i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* %0, %"class.spvtools::opt::Instruction"* %124)
  br label %137

137:                                              ; preds = %123, %129, %135
  %138 = inttoptr i64 %125 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %139 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %138, i64 0, i32 1
  %140 = bitcast %"class.spvtools::opt::Instruction"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = inttoptr i64 %141 to %"class.spvtools::opt::Instruction"*
  %143 = icmp eq %"class.spvtools::opt::Instruction"* %85, %142
  br i1 %143, label %111, label %123

144:                                              ; preds = %169
  %145 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %146, align 8
  br label %148

148:                                              ; preds = %144, %115
  %149 = phi %"class.spvtools::opt::Module"* [ %147, %144 ], [ %116, %115 ]
  %150 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %149, i64 0, i32 15, i32 0, i32 0
  %151 = load %"class.std::__1::unique_ptr.71"*, %"class.std::__1::unique_ptr.71"** %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %149, i64 0, i32 15, i32 0, i32 1
  %153 = load %"class.std::__1::unique_ptr.71"*, %"class.std::__1::unique_ptr.71"** %152, align 8
  %154 = icmp eq %"class.std::__1::unique_ptr.71"* %151, %153
  br i1 %154, label %176, label %177

155:                                              ; preds = %115, %169
  %156 = phi %"class.spvtools::opt::Instruction"* [ %174, %169 ], [ %121, %115 ]
  %157 = phi i64 [ %173, %169 ], [ %120, %115 ]
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 4
  %159 = load i8, i8* %158, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %169, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 3
  %163 = load i8, i8* %162, align 4, !range !2
  %164 = zext i8 %163 to i32
  %165 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %156, i32 %164) #9
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %161
  %168 = tail call i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* %0, %"class.spvtools::opt::Instruction"* %156)
  br label %169

169:                                              ; preds = %155, %161, %167
  %170 = inttoptr i64 %157 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %171 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %170, i64 0, i32 1
  %172 = bitcast %"class.spvtools::opt::Instruction"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = inttoptr i64 %173 to %"class.spvtools::opt::Instruction"*
  %175 = icmp eq %"class.spvtools::opt::Instruction"* %118, %174
  br i1 %175, label %144, label %155

176:                                              ; preds = %186, %148
  ret void

177:                                              ; preds = %148, %186
  %178 = phi %"class.std::__1::unique_ptr.71"* [ %187, %186 ], [ %151, %148 ]
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %179, align 8
  %181 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %180, i64 0, i32 3, i32 0, i32 0
  %182 = load %"class.std::__1::unique_ptr.83"*, %"class.std::__1::unique_ptr.83"** %181, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %180, i64 0, i32 3, i32 0, i32 1
  %184 = load %"class.std::__1::unique_ptr.83"*, %"class.std::__1::unique_ptr.83"** %183, align 8
  %185 = icmp eq %"class.std::__1::unique_ptr.83"* %182, %184
  br i1 %185, label %186, label %189

186:                                              ; preds = %199, %177
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %178, i64 1
  %188 = icmp eq %"class.std::__1::unique_ptr.71"* %187, %153
  br i1 %188, label %176, label %177

189:                                              ; preds = %177, %199
  %190 = phi %"class.std::__1::unique_ptr.83"* [ %200, %199 ], [ %182, %177 ]
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %191, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %192, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %194 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %192, i64 0, i32 2, i32 0, i32 1
  %195 = bitcast %"class.spvtools::opt::Instruction"** %193 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = inttoptr i64 %196 to %"class.spvtools::opt::Instruction"*
  %198 = icmp eq %"class.spvtools::opt::Instruction"* %194, %197
  br i1 %198, label %199, label %202

199:                                              ; preds = %216, %189
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83"* %190, i64 1
  %201 = icmp eq %"class.std::__1::unique_ptr.83"* %200, %184
  br i1 %201, label %186, label %189

202:                                              ; preds = %189, %216
  %203 = phi %"class.spvtools::opt::Instruction"* [ %221, %216 ], [ %197, %189 ]
  %204 = phi i64 [ %220, %216 ], [ %196, %189 ]
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 4
  %206 = load i8, i8* %205, align 1, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %216, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 3
  %210 = load i8, i8* %209, align 4, !range !2
  %211 = zext i8 %210 to i32
  %212 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %203, i32 %211) #9
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %208
  %215 = tail call i32 @_ZN8spvtools3opt16ValueNumberTable17AssignValueNumberEPNS0_11InstructionE(%"class.spvtools::opt::ValueNumberTable"* %0, %"class.spvtools::opt::Instruction"* %203)
  br label %216

216:                                              ; preds = %202, %208, %214
  %217 = inttoptr i64 %204 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %218 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %217, i64 0, i32 1
  %219 = bitcast %"class.spvtools::opt::Instruction"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = inttoptr i64 %220 to %"class.spvtools::opt::Instruction"*
  %222 = icmp eq %"class.spvtools::opt::Instruction"* %194, %221
  br i1 %222, label %199, label %202
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt16ComputeSameValueclERKNS0_11InstructionES4_(%"class.spvtools::opt::ComputeSameValue"* nocapture readnone, %"class.spvtools::opt::Instruction"* dereferenceable(112), %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %220, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = zext i8 %9 to i32
  %11 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %10) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %220, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %220, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = zext i8 %19 to i32
  %21 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %20) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %220, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %220

29:                                               ; preds = %23
  %30 = load i8, i8* %8, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #9
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi i32 [ %33, %32 ], [ 0, %29 ]
  %36 = load i8, i8* %18, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #9
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i32 [ %39, %38 ], [ 0, %34 ]
  %42 = icmp eq i32 %35, %41
  br i1 %42, label %43, label %220

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %46 = bitcast %"struct.spvtools::opt::Operand"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = sdiv exact i64 %50, 48
  %52 = load i8, i8* %8, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = load i8, i8* %4, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i32 1, i32 2
  %57 = xor i1 %55, true
  %58 = zext i1 %57 to i32
  %59 = select i1 %53, i32 %58, i32 %56
  %60 = trunc i64 %51 to i32
  %61 = sub i32 %60, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6, i32 0, i32 1
  %64 = bitcast %"struct.spvtools::opt::Operand"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = sdiv exact i64 %68, 48
  %70 = load i8, i8* %18, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = load i8, i8* %14, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i32 1, i32 2
  %75 = xor i1 %73, true
  %76 = zext i1 %75 to i32
  %77 = select i1 %71, i32 %76, i32 %74
  %78 = trunc i64 %69 to i32
  %79 = sub i32 %78, %77
  %80 = icmp eq i32 %61, %79
  %81 = inttoptr i64 %49 to %"struct.spvtools::opt::Operand"*
  %82 = inttoptr i64 %67 to %"struct.spvtools::opt::Operand"*
  br i1 %80, label %83, label %220

83:                                               ; preds = %43
  %84 = icmp eq i32 %61, 0
  br i1 %84, label %171, label %85

85:                                               ; preds = %83
  %86 = zext i32 %61 to i64
  br label %87

87:                                               ; preds = %168, %85
  %88 = phi i64 [ 0, %85 ], [ %169, %168 ]
  %89 = trunc i64 %88 to i32
  %90 = add i32 %59, %89
  %91 = zext i32 %90 to i64
  %92 = add i32 %77, %89
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %81, i64 %91, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %82, i64 %93, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %220

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %81, i64 %91, i32 1, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %100, align 8
  %102 = icmp eq %"class.std::__1::vector.44"* %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %81, i64 %91, i32 1, i32 1
  %105 = load i64, i64* %104, align 8
  br label %114

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %101, i64 0, i32 0, i32 1
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::vector.44"* %101 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = ashr exact i64 %112, 2
  br label %114

114:                                              ; preds = %106, %103
  %115 = phi i64 [ %113, %106 ], [ %105, %103 ]
  %116 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %82, i64 %93, i32 1, i32 4, i32 0, i32 0, i32 0
  %117 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %116, align 8
  %118 = icmp eq %"class.std::__1::vector.44"* %117, null
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %82, i64 %93, i32 1, i32 1
  %121 = load i64, i64* %120, align 8
  br label %130

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %117, i64 0, i32 0, i32 1
  %124 = bitcast i32** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::vector.44"* %117 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = ashr exact i64 %128, 2
  br label %130

130:                                              ; preds = %122, %119
  %131 = phi i64 [ %129, %122 ], [ %121, %119 ]
  %132 = icmp eq i64 %115, %131
  br i1 %132, label %133, label %220

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %117, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %82, i64 %93, i32 1, i32 2
  %136 = select i1 %118, i32** %135, i32** %134
  %137 = load i32*, i32** %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %101, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %81, i64 %91, i32 1, i32 2
  %140 = select i1 %102, i32** %139, i32** %138
  %141 = load i32*, i32** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %101, i64 0, i32 0, i32 1
  %143 = bitcast i32** %142 to i64*
  %144 = load i32*, i32** %139, align 8
  %145 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %81, i64 %91, i32 1, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds i32, i32* %144, i64 %146
  br label %148

148:                                              ; preds = %165, %133
  %149 = phi i32* [ %137, %133 ], [ %167, %165 ]
  %150 = phi i32* [ %141, %133 ], [ %166, %165 ]
  br i1 %102, label %158, label %151

151:                                              ; preds = %148
  %152 = load i32*, i32** %138, align 8
  %153 = load i64, i64* %143, align 8
  %154 = ptrtoint i32* %152 to i64
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 2
  %157 = getelementptr inbounds i32, i32* %152, i64 %156
  br label %158

158:                                              ; preds = %151, %148
  %159 = phi i32* [ %157, %151 ], [ %147, %148 ]
  %160 = icmp eq i32* %150, %159
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %150, align 4
  %163 = load i32, i32* %149, align 4
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %165, label %220

165:                                              ; preds = %161
  %166 = getelementptr inbounds i32, i32* %150, i64 1
  %167 = getelementptr inbounds i32, i32* %149, i64 1
  br label %148

168:                                              ; preds = %158
  %169 = add nuw nsw i64 %88, 1
  %170 = icmp eq i64 %169, %86
  br i1 %170, label %171, label %87

171:                                              ; preds = %168, %83
  %172 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 1
  %173 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %172, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 11
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %200

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 4, i32 0, i32 0, i32 0
  %180 = bitcast %"class.spvtools::opt::Module"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = tail call i8* @_Znwm(i64 48) #10
  %183 = bitcast i8* %182 to %"class.spvtools::opt::analysis::DecorationManager"*
  %184 = getelementptr inbounds i8, i8* %182, i64 32
  %185 = bitcast i8* %184 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %185, align 4
  %186 = getelementptr inbounds i8, i8* %182, i64 40
  %187 = bitcast i8* %186 to i64*
  store i64 %181, i64* %187, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %183) #9
  %188 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 7
  %189 = ptrtoint i8* %182 to i64
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.170"* %188, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %190, align 8
  %192 = bitcast %"class.std::__1::unique_ptr.170"* %188 to i64*
  store i64 %189, i64* %192, align 8
  %193 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %191, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %178
  %195 = bitcast %"class.std::__1::unique_ptr.170"* %188 to %"struct.std::__1::default_delete.198"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.198"* %195, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %191) #9
  br label %196

196:                                              ; preds = %194, %178
  %197 = load i32, i32* %174, align 8
  %198 = or i32 %197, 4
  store i32 %198, i32* %174, align 8
  %199 = load i8, i8* %4, align 1, !range !2
  br label %200

200:                                              ; preds = %171, %196
  %201 = phi i8 [ %54, %171 ], [ %199, %196 ]
  %202 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %173, i64 0, i32 7, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %202, align 8
  %204 = icmp eq i8 %201, 0
  br i1 %204, label %209, label %205

205:                                              ; preds = %200
  %206 = load i8, i8* %8, align 4, !range !2
  %207 = zext i8 %206 to i32
  %208 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %207) #9
  br label %209

209:                                              ; preds = %200, %205
  %210 = phi i32 [ %208, %205 ], [ 0, %200 ]
  %211 = load i8, i8* %14, align 1, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %209
  %214 = load i8, i8* %18, align 4, !range !2
  %215 = zext i8 %214 to i32
  %216 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %215) #9
  br label %217

217:                                              ; preds = %209, %213
  %218 = phi i32 [ %216, %213 ], [ 0, %209 ]
  %219 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %203, i32 %210, i32 %218) #9
  br label %220

220:                                              ; preds = %130, %87, %161, %13, %3, %43, %40, %23, %7, %17, %217
  %221 = phi i1 [ %219, %217 ], [ false, %17 ], [ false, %7 ], [ false, %23 ], [ false, %40 ], [ false, %43 ], [ false, %3 ], [ false, %13 ], [ false, %161 ], [ false, %87 ], [ false, %130 ]
  ret i1 %221
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8spvtools3opt14ValueTableHashclERKNS0_11InstructionE(%"class.spvtools::opt::ValueTableHash"* nocapture readnone, %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #9
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  store i8 1, i8* %14, align 1
  store i32 %12, i32* %15, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #9
  br label %22

22:                                               ; preds = %2, %20
  %23 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %24 = load i8, i8* %14, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = zext i8 %24 to i64
  br label %33

28:                                               ; preds = %22
  %29 = load i64, i64* %8, align 8
  %30 = and i64 %29, 9223372036854775807
  %31 = add nsw i64 %30, -1
  %32 = load i64, i64* %7, align 8
  br label %33

33:                                               ; preds = %28, %26
  %34 = phi i64 [ 4, %26 ], [ %31, %28 ]
  %35 = phi i64 [ %27, %26 ], [ %32, %28 ]
  %36 = icmp eq i64 %35, %34
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %4, i64 %34, i64 1, i64 %34, i64 %34, i64 0, i64 0) #9
  %38 = load i8, i8* %14, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %45, label %41

40:                                               ; preds = %33
  br i1 %25, label %45, label %41

41:                                               ; preds = %40, %37
  %42 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  %43 = trunc i64 %35 to i8
  %44 = add i8 %43, 1
  store i8 %44, i8* %14, align 1
  br label %49

45:                                               ; preds = %40, %37
  %46 = load i32*, i32** %6, align 8
  %47 = add i64 %35, 1
  store i64 %47, i64* %7, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi i32* [ %42, %41 ], [ %48, %45 ]
  %51 = phi i32* [ %42, %41 ], [ %46, %45 ]
  %52 = getelementptr inbounds i32, i32* %51, i64 %35
  store i32 %23, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %52, i64 1
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %56 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %57 = bitcast %"class.std::__1::vector"* %54 to i64*
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  br label %59

59:                                               ; preds = %122, %49
  %60 = phi i32 [ 0, %49 ], [ %123, %122 ]
  %61 = load i64, i64* %56, align 8
  %62 = load i64, i64* %57, align 8
  %63 = sub i64 %61, %62
  %64 = sdiv exact i64 %63, 48
  %65 = load i8, i8* %17, align 4, !range !2
  %66 = icmp eq i8 %65, 0
  %67 = load i8, i8* %58, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = select i1 %68, i32 1, i32 2
  %70 = xor i1 %68, true
  %71 = zext i1 %70 to i32
  %72 = select i1 %66, i32 %71, i32 %69
  %73 = trunc i64 %64 to i32
  %74 = sub i32 %73, %72
  %75 = icmp ult i32 %60, %74
  %76 = inttoptr i64 %62 to %"struct.spvtools::opt::Operand"*
  br i1 %75, label %95, label %77

77:                                               ; preds = %59
  %78 = load i8, i8* %14, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i32*, i32** %6, align 8
  %81 = load i64, i64* %7, align 8
  %82 = zext i8 %78 to i64
  %83 = select i1 %79, i32* %80, i32* %50
  %84 = select i1 %79, i64 %81, i64 %82
  %85 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #9
  %86 = bitcast i32* %83 to i8*
  %87 = shl nuw i64 %84, 2
  %88 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %86, i64 %87) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #9
  %89 = load i8, i8* %14, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %77
  %92 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #10
  br label %94

94:                                               ; preds = %77, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i64 %88

95:                                               ; preds = %59
  %96 = add i32 %72, %60
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %76, i64 %97, i32 1, i32 4, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %98, align 8
  %100 = icmp eq %"class.std::__1::vector.44"* %99, null
  %101 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %99, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %76, i64 %97, i32 1, i32 2
  %103 = select i1 %100, i32** %102, i32** %101
  %104 = load i32*, i32** %103, align 8
  br i1 %100, label %114, label %105

105:                                              ; preds = %95
  %106 = load i32*, i32** %101, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %99, i64 0, i32 0, i32 1
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = ptrtoint i32* %106 to i64
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 2
  %113 = getelementptr inbounds i32, i32* %106, i64 %112
  br label %119

114:                                              ; preds = %95
  %115 = load i32*, i32** %102, align 8
  %116 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %76, i64 %97, i32 1, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  br label %119

119:                                              ; preds = %105, %114
  %120 = phi i32* [ %113, %105 ], [ %118, %114 ]
  %121 = icmp eq i32* %104, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %150, %119
  %123 = add i32 %60, 1
  br label %59

124:                                              ; preds = %119, %150
  %125 = phi i32* [ %154, %150 ], [ %104, %119 ]
  %126 = load i32, i32* %125, align 4
  %127 = load i8, i8* %14, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %124
  %130 = zext i8 %127 to i64
  br label %136

131:                                              ; preds = %124
  %132 = load i64, i64* %8, align 8
  %133 = and i64 %132, 9223372036854775807
  %134 = add nsw i64 %133, -1
  %135 = load i64, i64* %7, align 8
  br label %136

136:                                              ; preds = %131, %129
  %137 = phi i64 [ 4, %129 ], [ %134, %131 ]
  %138 = phi i64 [ %130, %129 ], [ %135, %131 ]
  %139 = icmp eq i64 %138, %137
  br i1 %139, label %140, label %143

140:                                              ; preds = %136
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %4, i64 %137, i64 1, i64 %137, i64 %137, i64 0, i64 0) #9
  %141 = load i8, i8* %14, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %147, label %144

143:                                              ; preds = %136
  br i1 %128, label %147, label %144

144:                                              ; preds = %143, %140
  %145 = trunc i64 %138 to i8
  %146 = add i8 %145, 1
  store i8 %146, i8* %14, align 1
  br label %150

147:                                              ; preds = %143, %140
  %148 = load i32*, i32** %6, align 8
  %149 = add i64 %138, 1
  store i64 %149, i64* %7, align 8
  br label %150

150:                                              ; preds = %144, %147
  %151 = phi i32* [ %50, %144 ], [ %148, %147 ]
  %152 = getelementptr inbounds i32, i32* %151, i64 %138
  store i32 %126, i32* %152, align 4
  %153 = getelementptr inbounds i32, i32* %152, i64 1
  store i32 0, i32* %153, align 4
  %154 = getelementptr inbounds i32, i32* %125, i64 1
  %155 = icmp eq i32* %154, %120
  br i1 %155, label %122, label %124
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.168"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.144"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.144"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.144"*, %"struct.std::__1::__hash_node_base.144"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.144"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.144", %"struct.std::__1::__hash_node_base.144"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.144"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.144"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  %23 = icmp eq %"struct.std::__1::__hash_node_base.144"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.144"**, %"struct.std::__1::__hash_node_base.144"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.144"** null, %"struct.std::__1::__hash_node_base.144"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.144"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.144"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #9
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.113"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base.113"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.113"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base.113"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.113"** null, %"struct.std::__1::__hash_node_base.113"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.113"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.113"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.278"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.274"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.952"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.278"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.278"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.278"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.278"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.278"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #10, !noalias !13
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !13
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !13
  store i32 %62, i32* %61, align 8, !noalias !13
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #9, !noalias !13
  store i32 1065353216, i32* %65, align 4, !noalias !13
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !13
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.278"**
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %68, align 8, !noalias !13
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #9
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.274"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #9, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.278"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.278"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.278"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.278"* %111, %"struct.std::__1::__hash_node_base.278"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.278"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.278"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #9, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.278"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.278"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.278"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.278"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.278"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.278"*, i8 } undef, %"struct.std::__1::__hash_node_base.278"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.278"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.278"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.274"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.274"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.274"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.274"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.274"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.278"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.278"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.280", %"class.std::__1::__bucket_list_deallocator.280"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !16

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.278"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.278"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.278"* %36, %"struct.std::__1::__hash_node_base.278"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.278"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.278"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.278"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.278"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.278"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.278"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.278"* %82, %"struct.std::__1::__hash_node_base.278"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.278"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.278"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.278"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.278"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.278"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.278"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.278"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.278"* %80, %"struct.std::__1::__hash_node_base.278"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.278"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.278"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.278"** null, %"struct.std::__1::__hash_node_base.278"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.278"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.278"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.280", %"class.std::__1::__bucket_list_deallocator.280"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.278"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.274"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.964"* dereferenceable(8), %"class.std::__1::tuple.952"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.278"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.278"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.278"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.278"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.278"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #10, !noalias !18
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.964", %"class.std::__1::tuple.964"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !18
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !18
  store i32 %62, i32* %61, align 8, !noalias !18
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #9, !noalias !18
  store i32 1065353216, i32* %65, align 4, !noalias !18
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !18
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.278"**
  store %"struct.std::__1::__hash_node_base.278"* null, %"struct.std::__1::__hash_node_base.278"** %68, align 8, !noalias !18
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #9
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.274"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #9, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.278"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.274", %"class.std::__1::__hash_table.274"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.278"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.278"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.278"* %111, %"struct.std::__1::__hash_node_base.278"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.278"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278", %"struct.std::__1::__hash_node_base.278"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.278"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #9, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.278"**, %"struct.std::__1::__hash_node_base.278"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.278"*, %"struct.std::__1::__hash_node_base.278"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.278"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.278"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.278"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.278"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.278"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.278"*, i8 } undef, %"struct.std::__1::__hash_node_base.278"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.278"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.278"*, i8 } %151
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_Z15spvOpcodeIsLoad6SpvOp_(i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.198"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.178"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.178"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.178"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.178"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.178"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.178"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.178"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.178"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.178"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base.178"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.178"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.178"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.41"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #9
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.41"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #9
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %91, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.44"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.44"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.44"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %8, align 8
  store %"class.std::__1::vector.44"* %4, %"class.std::__1::vector.44"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.44"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.44"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %23, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.44"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.44"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %3, align 8
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.44"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.44"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.44"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.44"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.44"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.44"* nonnull %8, i32* %15, i32* %17) #9
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.44"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #11
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #10
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #9
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.41"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.44"* null, %"class.std::__1::vector.44"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.44"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.44"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.44"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.44"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.44"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #9
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 4611686018427387887, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #11
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i32* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i32* %23 to i8*
  %25 = icmp ult i64 %1, 2305843009213693927
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 5
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 4
  %34 = and i64 %33, -4
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #11
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 4611686018427387887, %22 ], [ 5, %26 ]
  %39 = shl i64 %38, 2
  %40 = tail call i8* @_Znwm(i64 %39) #10
  %41 = bitcast i8* %40 to i32*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 8
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 2
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i32, i32* %23, i64 %4
  %49 = bitcast i32* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -8
  %55 = sub i64 %4, %54
  %56 = getelementptr i32, i32* %23, i64 %54
  %57 = getelementptr i32, i32* %41, i64 %54
  %58 = add i64 %54, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %23, i64 %66
  %69 = getelementptr i32, i32* %41, i64 %66
  %70 = bitcast i32* %68 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !21
  %72 = getelementptr i32, i32* %68, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !21
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !24, !noalias !21
  %76 = getelementptr i32, i32* %69, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !24, !noalias !21
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %23, i64 %78
  %80 = getelementptr i32, i32* %41, i64 %78
  %81 = bitcast i32* %79 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !21
  %83 = getelementptr i32, i32* %79, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !21
  %86 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !24, !noalias !21
  %87 = getelementptr i32, i32* %80, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !24, !noalias !21
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %23, i64 %89
  %91 = getelementptr i32, i32* %41, i64 %89
  %92 = bitcast i32* %90 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !21
  %94 = getelementptr i32, i32* %90, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !21
  %97 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !24, !noalias !21
  %98 = getelementptr i32, i32* %91, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !24, !noalias !21
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %23, i64 %100
  %102 = getelementptr i32, i32* %41, i64 %100
  %103 = bitcast i32* %101 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !21
  %105 = getelementptr i32, i32* %101, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !21
  %108 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !24, !noalias !21
  %109 = getelementptr i32, i32* %102, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !24, !noalias !21
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !26

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %23, i64 %118
  %121 = getelementptr i32, i32* %41, i64 %118
  %122 = bitcast i32* %120 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !21
  %124 = getelementptr i32, i32* %120, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !21
  %127 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !24, !noalias !21
  %128 = getelementptr i32, i32* %121, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !24, !noalias !21
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !28

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i32* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i32* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i32* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i32* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %145, align 4
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i32, i32* %145, i64 1
  %150 = getelementptr inbounds i32, i32* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !29

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i32* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i32* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i32* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i32* [ %185, %158 ], [ %156, %153 ]
  %162 = load i32, i32* %160, align 4
  store i32 %162, i32* %161, align 4
  %163 = getelementptr inbounds i32, i32* %161, i64 1
  %164 = getelementptr inbounds i32, i32* %160, i64 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds i32, i32* %161, i64 2
  %167 = getelementptr inbounds i32, i32* %160, i64 2
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds i32, i32* %161, i64 3
  %170 = getelementptr inbounds i32, i32* %160, i64 3
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %161, i64 4
  %173 = getelementptr inbounds i32, i32* %160, i64 4
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds i32, i32* %161, i64 5
  %176 = getelementptr inbounds i32, i32* %160, i64 5
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds i32, i32* %161, i64 6
  %179 = getelementptr inbounds i32, i32* %160, i64 6
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  %181 = getelementptr inbounds i32, i32* %161, i64 7
  %182 = getelementptr inbounds i32, i32* %160, i64 7
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %181, align 4
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i32, i32* %161, i64 8
  %186 = getelementptr inbounds i32, i32* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !30

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i32, i32* %41, i64 %4
  %194 = getelementptr inbounds i32, i32* %193, i64 %6
  %195 = getelementptr inbounds i32, i32* %23, i64 %4
  %196 = getelementptr inbounds i32, i32* %195, i64 %5
  %197 = icmp ult i64 %190, 8
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i32* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 2
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 2
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i32, i32* %23, i64 %3
  %208 = bitcast i32* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -8
  %214 = sub i64 %190, %213
  %215 = getelementptr i32, i32* %196, i64 %213
  %216 = getelementptr i32, i32* %194, i64 %213
  %217 = add i64 %213, -8
  %218 = lshr exact i64 %217, 3
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 24
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i32, i32* %196, i64 %225
  %228 = getelementptr i32, i32* %194, i64 %225
  %229 = bitcast i32* %227 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !31
  %231 = getelementptr i32, i32* %227, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 4, !alias.scope !31
  %234 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %234, align 4, !alias.scope !34, !noalias !31
  %235 = getelementptr i32, i32* %228, i64 4
  %236 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %236, align 4, !alias.scope !34, !noalias !31
  %237 = or i64 %225, 8
  %238 = getelementptr i32, i32* %196, i64 %237
  %239 = getelementptr i32, i32* %194, i64 %237
  %240 = bitcast i32* %238 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !31
  %242 = getelementptr i32, i32* %238, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  %244 = load <4 x i32>, <4 x i32>* %243, align 4, !alias.scope !31
  %245 = bitcast i32* %239 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %245, align 4, !alias.scope !34, !noalias !31
  %246 = getelementptr i32, i32* %239, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %244, <4 x i32>* %247, align 4, !alias.scope !34, !noalias !31
  %248 = or i64 %225, 16
  %249 = getelementptr i32, i32* %196, i64 %248
  %250 = getelementptr i32, i32* %194, i64 %248
  %251 = bitcast i32* %249 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !31
  %253 = getelementptr i32, i32* %249, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !31
  %256 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !34, !noalias !31
  %257 = getelementptr i32, i32* %250, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !34, !noalias !31
  %259 = or i64 %225, 24
  %260 = getelementptr i32, i32* %196, i64 %259
  %261 = getelementptr i32, i32* %194, i64 %259
  %262 = bitcast i32* %260 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !31
  %264 = getelementptr i32, i32* %260, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !31
  %267 = bitcast i32* %261 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !34, !noalias !31
  %268 = getelementptr i32, i32* %261, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !34, !noalias !31
  %270 = add i64 %225, 32
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !36

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i32, i32* %196, i64 %277
  %280 = getelementptr i32, i32* %194, i64 %277
  %281 = bitcast i32* %279 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !31
  %283 = getelementptr i32, i32* %279, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !31
  %286 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !34, !noalias !31
  %287 = getelementptr i32, i32* %280, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !34, !noalias !31
  %289 = add i64 %277, 8
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !37

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i32* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i32* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i32* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i32* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %304, align 4
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i32, i32* %304, i64 1
  %309 = getelementptr inbounds i32, i32* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !38

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i32* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i32* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i32* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i32* [ %344, %317 ], [ %315, %312 ]
  %321 = load i32, i32* %319, align 4
  store i32 %321, i32* %320, align 4
  %322 = getelementptr inbounds i32, i32* %320, i64 1
  %323 = getelementptr inbounds i32, i32* %319, i64 1
  %324 = load i32, i32* %323, align 4
  store i32 %324, i32* %322, align 4
  %325 = getelementptr inbounds i32, i32* %320, i64 2
  %326 = getelementptr inbounds i32, i32* %319, i64 2
  %327 = load i32, i32* %326, align 4
  store i32 %327, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %320, i64 3
  %329 = getelementptr inbounds i32, i32* %319, i64 3
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %320, i64 4
  %332 = getelementptr inbounds i32, i32* %319, i64 4
  %333 = load i32, i32* %332, align 4
  store i32 %333, i32* %331, align 4
  %334 = getelementptr inbounds i32, i32* %320, i64 5
  %335 = getelementptr inbounds i32, i32* %319, i64 5
  %336 = load i32, i32* %335, align 4
  store i32 %336, i32* %334, align 4
  %337 = getelementptr inbounds i32, i32* %320, i64 6
  %338 = getelementptr inbounds i32, i32* %319, i64 6
  %339 = load i32, i32* %338, align 4
  store i32 %339, i32* %337, align 4
  %340 = getelementptr inbounds i32, i32* %320, i64 7
  %341 = getelementptr inbounds i32, i32* %319, i64 7
  %342 = load i32, i32* %341, align 4
  store i32 %342, i32* %340, align 4
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i32, i32* %320, i64 8
  %345 = getelementptr inbounds i32, i32* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !39

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 4
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #10
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.19"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.15"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.952"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.19"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.19"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.19"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.19"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.19"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #10, !noalias !40
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !40
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !40
  store i32 %62, i32* %61, align 4, !noalias !40
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !40
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !40
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.19"**
  store %"struct.std::__1::__hash_node_base.19"* null, %"struct.std::__1::__hash_node_base.19"** %67, align 8, !noalias !40
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #9
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.15"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #9, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.19"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.19"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.19"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.19"* %110, %"struct.std::__1::__hash_node_base.19"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.19"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.19"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #9, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.19"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.19"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.19"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.19"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.19"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } undef, %"struct.std::__1::__hash_node_base.19"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.19"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.19"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.15"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.15"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.15"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.15"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.15"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.19"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.19"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.21", %"class.std::__1::__bucket_list_deallocator.21"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.19"* null, %"struct.std::__1::__hash_node_base.19"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !43

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.19"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.19"* null, %"struct.std::__1::__hash_node_base.19"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.19"* null, %"struct.std::__1::__hash_node_base.19"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.19"* null, %"struct.std::__1::__hash_node_base.19"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.19"* null, %"struct.std::__1::__hash_node_base.19"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.19"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.19"* %36, %"struct.std::__1::__hash_node_base.19"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.19"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.19"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.19"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.19"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.19"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.19"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.19"* %82, %"struct.std::__1::__hash_node_base.19"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.19"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.19"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.19"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.19"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.19"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.19"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.19"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.19"* %80, %"struct.std::__1::__hash_node_base.19"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.19"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.19", %"struct.std::__1::__hash_node_base.19"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.19"*, %"struct.std::__1::__hash_node_base.19"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.19"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.15", %"class.std::__1::__hash_table.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.19"**, %"struct.std::__1::__hash_node_base.19"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.19"** null, %"struct.std::__1::__hash_node_base.19"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.19"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.19"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.21", %"class.std::__1::__bucket_list_deallocator.21"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.spvtools::opt::Instruction"* dereferenceable(112), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.995"* dereferenceable(8), %"class.std::__1::tuple.952"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = tail call i64 @_ZNK8spvtools3opt14ValueTableHashclERKNS0_11InstructionE(%"class.spvtools::opt::ValueTableHash"* undef, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #9
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %53, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #9, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %53, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %53

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to %"class.spvtools::opt::Instruction"*
  %52 = tail call zeroext i1 @_ZNK8spvtools3opt16ComputeSameValueclERKNS0_11InstructionES4_(%"class.spvtools::opt::ComputeSameValue"* undef, %"class.spvtools::opt::Instruction"* dereferenceable(112) %51, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #9
  br i1 %52, label %143, label %29

53:                                               ; preds = %29, %46, %20, %5
  %54 = phi i64 [ %21, %20 ], [ -6148914691236517206, %5 ], [ %21, %46 ], [ %21, %29 ]
  %55 = tail call i8* @_Znwm(i64 136) #10, !noalias !44
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = getelementptr inbounds %"class.std::__1::tuple.995", %"class.std::__1::tuple.995"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, align 8, !noalias !44
  %59 = bitcast i8* %56 to %"class.spvtools::opt::Instruction"*
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %59, %"class.spvtools::opt::Instruction"* dereferenceable(112) %58) #9, !noalias !44
  %60 = getelementptr inbounds i8, i8* %55, i64 128
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 8, !noalias !44
  %62 = getelementptr inbounds i8, i8* %55, i64 8
  %63 = bitcast i8* %62 to i64*
  store i64 %6, i64* %63, align 8, !noalias !44
  %64 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %64, align 8, !noalias !44
  %65 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  %68 = uitofp i64 %67 to float
  %69 = uitofp i64 %8 to float
  %70 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = fmul float %71, %69
  %73 = fcmp olt float %72, %68
  %74 = or i1 %9, %73
  br i1 %74, label %75, label %98

75:                                               ; preds = %53
  %76 = shl i64 %8, 1
  %77 = icmp ult i64 %8, 3
  %78 = tail call i64 @llvm.ctpop.i64(i64 %8) #9, !range !3
  %79 = icmp ugt i64 %78, 1
  %80 = or i1 %77, %79
  %81 = zext i1 %80 to i64
  %82 = or i64 %76, %81
  %83 = fdiv float %68, %71
  %84 = tail call float @llvm.ceil.f32(float %83) #9
  %85 = fptoui float %84 to i64
  %86 = icmp ult i64 %82, %85
  %87 = select i1 %86, i64 %85, i64 %82
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %87)
  %88 = load i64, i64* %7, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #9, !range !3
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %75
  %92 = add i64 %88, -1
  %93 = and i64 %92, %6
  br label %98

94:                                               ; preds = %75
  %95 = icmp ult i64 %6, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %6, %88
  br label %98

98:                                               ; preds = %96, %94, %91, %53
  %99 = phi i64 [ %8, %53 ], [ %88, %91 ], [ %88, %94 ], [ %88, %96 ]
  %100 = phi i64 [ %54, %53 ], [ %93, %91 ], [ %6, %94 ], [ %97, %96 ]
  %101 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %102, i64 %100
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %106, label %132

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8* %55 to i64*
  store i64 %109, i64* %110, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  store i8* %55, i8** %111, align 8
  store %"struct.std::__1::__hash_node_base"* %107, %"struct.std::__1::__hash_node_base"** %103, align 8
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %64, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 1
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = tail call i64 @llvm.ctpop.i64(i64 %99) #9, !range !3
  %119 = icmp ugt i64 %118, 1
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = add i64 %99, -1
  %122 = and i64 %117, %121
  br label %127

123:                                              ; preds = %114
  %124 = icmp ult i64 %117, %99
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = urem i64 %117, %99
  br label %127

127:                                              ; preds = %120, %123, %125
  %128 = phi i64 [ %122, %120 ], [ %126, %125 ], [ %117, %123 ]
  %129 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %101, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, i64 %128
  %131 = bitcast %"struct.std::__1::__hash_node_base"** %130 to i8**
  br label %137

132:                                              ; preds = %98
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8* %55 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i8**
  br label %137

137:                                              ; preds = %127, %132
  %138 = phi i8** [ %136, %132 ], [ %131, %127 ]
  store i8* %55, i8** %138, align 8
  br label %139

139:                                              ; preds = %137, %106
  %140 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %141 = load i64, i64* %65, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %65, align 8
  br label %143

143:                                              ; preds = %49, %139
  %144 = phi i8 [ 1, %139 ], [ 0, %49 ]
  %145 = phi %"struct.std::__1::__hash_node_base"* [ %140, %139 ], [ %32, %49 ]
  %146 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %145, 0
  %147 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %146, i8 %144, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 1
  %8 = bitcast %"class.spvtools::opt::IRContext"** %6 to i8*
  %9 = bitcast %"class.spvtools::opt::IRContext"** %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #9
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 384307168202282325
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #10
  %27 = bitcast i8* %26 to %"struct.spvtools::opt::Operand"*
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast %"struct.spvtools::opt::Operand"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %27, i64 %19
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %31, %"struct.spvtools::opt::Operand"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %36 = bitcast %"struct.spvtools::opt::Operand"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %34, %35
  br i1 %38, label %60, label %39

39:                                               ; preds = %25, %39
  %40 = phi %"struct.spvtools::opt::Operand"* [ %56, %39 ], [ %27, %25 ]
  %41 = phi %"struct.spvtools::opt::Operand"* [ %55, %39 ], [ %34, %25 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 2
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr.41"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %46) #9
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %55, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %39
  %59 = ptrtoint %"struct.spvtools::opt::Operand"* %56 to i64
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i64 [ %37, %25 ], [ %59, %58 ]
  store i64 %61, i64* %36, align 8
  br label %62

62:                                               ; preds = %2, %60
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.57"* %63, %"class.std::__1::vector.57"* dereferenceable(24) %64)
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 8
  %67 = bitcast %"class.spvtools::opt::DebugScope"* %66 to i64*
  %68 = bitcast %"class.spvtools::opt::DebugScope"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.57"*, %"class.std::__1::vector.57"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.57"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.57"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 112
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 164703072086692425
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.57"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #10
  %18 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  %19 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.57"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %22, %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %27 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %"class.spvtools::opt::Instruction"* [ %35, %32 ], [ %25, %30 ]
  %34 = phi %"class.spvtools::opt::Instruction"* [ %36, %32 ], [ %31, %30 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %33) #9
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 1
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %35, %26
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %39, %38 ], [ %28, %16 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !47

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"class.spvtools::opt::Instruction"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"class.spvtools::opt::Instruction"*
  %109 = tail call zeroext i1 @_ZNK8spvtools3opt16ComputeSameValueclERKNS0_11InstructionES4_(%"class.spvtools::opt::ComputeSameValue"* undef, %"class.spvtools::opt::Instruction"* dereferenceable(112) %106, %"class.spvtools::opt::Instruction"* dereferenceable(112) %108) #9
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to %"class.spvtools::opt::Instruction"*
  %114 = tail call zeroext i1 @_ZNK8spvtools3opt16ComputeSameValueclERKNS0_11InstructionES4_(%"class.spvtools::opt::ComputeSameValue"* undef, %"class.spvtools::opt::Instruction"* dereferenceable(112) %106, %"class.spvtools::opt::Instruction"* dereferenceable(112) %113) #9
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %142, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #10
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN8spvtools3opt9IRContext11annotationsEv: argument 0"}
!6 = distinct !{!6, !"_ZN8spvtools3opt9IRContext11annotationsEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN8spvtools3opt9IRContext12capabilitiesEv: argument 0"}
!9 = distinct !{!9, !"_ZN8spvtools3opt9IRContext12capabilitiesEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN8spvtools3opt9IRContext12types_valuesEv: argument 0"}
!12 = distinct !{!12, !"_ZN8spvtools3opt9IRContext12types_valuesEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_"}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !17}
!29 = distinct !{!29, !17}
!30 = distinct !{!30, !27}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !27}
!37 = distinct !{!37, !17}
!38 = distinct !{!38, !17}
!39 = distinct !{!39, !27}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!43 = distinct !{!43, !17}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8spvtools3opt11InstructionEjEENS_22__unordered_map_hasherIS4_S5_NS3_14ValueTableHashENS3_16ComputeSameValueELb1EEENS_21__unordered_map_equalIS4_S5_S8_S7_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_"}
!47 = distinct !{!47, !17}
