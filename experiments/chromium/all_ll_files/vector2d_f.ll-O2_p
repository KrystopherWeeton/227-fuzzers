; ModuleID = '../../ui/gfx/geometry/vector2d_f.cc'
source_filename = "../../ui/gfx/geometry/vector2d_f.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::Vector2dF" = type { float, float }

@.str = private unnamed_addr constant [8 x i8] c"[%f %f]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Vector2dF8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Vector2dF"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fpext float %4 to double
  %6 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %5, double %8) #7
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fcmp oeq float %3, 0.000000e+00
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %7, 0.000000e+00
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fadd float %9, %11
  store float %12, float* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx9Vector2dF8SubtractERKS0_(%"class.gfx::Vector2dF"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fsub float %6, %4
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %11, %9
  store float %12, float* %10, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK3gfx9Vector2dF13LengthSquaredEv(%"class.gfx::Vector2dF"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gfx::Vector2dF"* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  %4 = fpext <2 x float> %3 to <2 x double>
  %5 = fmul <2 x double> %4, %4
  %6 = extractelement <2 x double> %5, i32 0
  %7 = extractelement <2 x double> %5, i32 1
  %8 = fadd double %6, %7
  ret double %8
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.gfx::Vector2dF"* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  %4 = fpext <2 x float> %3 to <2 x double>
  %5 = fmul <2 x double> %4, %4
  %6 = extractelement <2 x double> %5, i32 0
  %7 = extractelement <2 x double> %5, i32 1
  %8 = fadd double %6, %7
  %9 = tail call double @sqrt(double %8) #7
  %10 = fptrunc double %9 to float
  ret float %10
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nocapture, float, float) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fmul float %5, %1
  store float %6, float* %4, align 4
  %7 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %2
  store float %9, float* %7, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN3gfx12CrossProductERKNS_9Vector2dFES2_(%"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = bitcast %"class.gfx::Vector2dF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = fpext <2 x float> %4 to <2 x double>
  %6 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = shufflevector <2 x float> %7, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = fmul <2 x double> %5, %9
  %11 = extractelement <2 x double> %10, i32 0
  %12 = extractelement <2 x double> %10, i32 1
  %13 = fsub double %11, %12
  ret double %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN3gfx10DotProductERKNS_9Vector2dFES2_(%"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = bitcast %"class.gfx::Vector2dF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = fpext <2 x float> %4 to <2 x double>
  %6 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = fmul <2 x double> %5, %8
  %10 = extractelement <2 x double> %9, i32 0
  %11 = extractelement <2 x double> %9, i32 1
  %12 = fadd double %10, %11
  ret double %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), float, float) local_unnamed_addr #6 {
  %4 = bitcast %"class.gfx::Vector2dF"* %0 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = insertelement <2 x float> undef, float %1, i32 0
  %7 = insertelement <2 x float> %6, float %2, i32 1
  %8 = fmul <2 x float> %5, %7
  ret <2 x float> %8
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
