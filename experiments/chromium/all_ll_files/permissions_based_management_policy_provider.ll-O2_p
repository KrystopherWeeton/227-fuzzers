; ModuleID = '../../chrome/browser/extensions/permissions_based_management_policy_provider.cc'
source_filename = "../../chrome/browser/extensions/permissions_based_management_policy_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::PermissionsBasedManagementPolicyProvider" = type { %"class.extensions::ManagementPolicy::Provider", %"class.extensions::ExtensionManagement"* }
%"class.extensions::ManagementPolicy::Provider" = type { i32 (...)** }
%"class.extensions::ExtensionManagement" = type { %class.KeyedService, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.18", %class.Profile*, %class.PrefService*, i8, i8, [6 x i8], %"class.base::ObserverList", %class.PrefChangeRegistrar, %"class.std::__1::vector.36" }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.extensions::internal::IndividualSettings"* }
%"struct.extensions::internal::IndividualSettings" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::internal::GlobalSettings"* }
%"struct.extensions::internal::GlobalSettings" = type opaque
%class.Profile = type opaque
%class.PrefService = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.24" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::unique_ptr.38"*, %"class.std::__1::unique_ptr.38"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::unique_ptr.38" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::unique_ptr.38"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.71", %"class.std::__1::vector.77", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.97", %"class.std::__1::map.138", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type { %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.extensions::PermissionsParser::InitialPermissions"* }
%"struct.extensions::PermissionsParser::InitialPermissions" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.79" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.84" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.90" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i32*, i32*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i32* }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.103" }
%"union.absl::variant_internal::DestructibleUnionImpl.103" = type { %"union.absl::variant_internal::DestructibleUnionImpl.104" }
%"union.absl::variant_internal::DestructibleUnionImpl.104" = type { %"union.absl::variant_internal::DestructibleUnionImpl.105" }
%"union.absl::variant_internal::DestructibleUnionImpl.105" = type { %"union.absl::variant_internal::DestructibleUnionImpl.106" }
%"union.absl::variant_internal::DestructibleUnionImpl.106" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.138" = type { %"class.std::__1::__tree.139" }
%"class.std::__1::__tree.139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.150 }
%union.anon.150 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.extensions::PermissionSet" = type { %"class.extensions::APIPermissionSet", %"class.extensions::ManifestPermissionSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", i32, i32 }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map.156" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::ManifestPermissionSet" = type { %"class.extensions::BaseSetOperators.167" }
%"class.extensions::BaseSetOperators.167" = type { %"class.std::__1::map.168" }
%"class.std::__1::map.168" = type { %"class.std::__1::__tree.169" }
%"class.std::__1::__tree.169" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.151 }
%struct.anon.151 = type { %"struct.std::__1::__padding.152", i8 }
%"struct.std::__1::__padding.152" = type { [1 x i8] }

@_ZTVN10extensions40PermissionsBasedManagementPolicyProviderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::PermissionsBasedManagementPolicyProvider"*)* @_ZN10extensions40PermissionsBasedManagementPolicyProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::PermissionsBasedManagementPolicyProvider"*)* @_ZN10extensions40PermissionsBasedManagementPolicyProviderD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.extensions::PermissionsBasedManagementPolicyProvider"*)* @_ZNK10extensions40PermissionsBasedManagementPolicyProvider26GetDebugPolicyProviderNameEv to i8*), i8* bitcast (i1 (%"class.extensions::PermissionsBasedManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions40PermissionsBasedManagementPolicyProvider11UserMayLoadEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider14UserMayInstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider21UserMayModifySettingsEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider26ExtensionMayModifySettingsEPKNS_9ExtensionES4_PNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider17MustRemainEnabledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, i32*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider18MustRemainDisabledEPKNS_9ExtensionEPNS_14disable_reason13DisableReasonEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider19MustRemainInstalledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*)* @_ZNK10extensions16ManagementPolicy8Provider20ShouldForceUninstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE to i8*)] }, align 8

@_ZN10extensions40PermissionsBasedManagementPolicyProviderC1EPNS_19ExtensionManagementE = hidden unnamed_addr alias void (%"class.extensions::PermissionsBasedManagementPolicyProvider"*, %"class.extensions::ExtensionManagement"*), void (%"class.extensions::PermissionsBasedManagementPolicyProvider"*, %"class.extensions::ExtensionManagement"*)* @_ZN10extensions40PermissionsBasedManagementPolicyProviderC2EPNS_19ExtensionManagementE
@_ZN10extensions40PermissionsBasedManagementPolicyProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::PermissionsBasedManagementPolicyProvider"*), void (%"class.extensions::PermissionsBasedManagementPolicyProvider"*)* @_ZN10extensions40PermissionsBasedManagementPolicyProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions40PermissionsBasedManagementPolicyProviderC2EPNS_19ExtensionManagementE(%"class.extensions::PermissionsBasedManagementPolicyProvider"* nocapture, %"class.extensions::ExtensionManagement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::PermissionsBasedManagementPolicyProvider", %"class.extensions::PermissionsBasedManagementPolicyProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN10extensions40PermissionsBasedManagementPolicyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::PermissionsBasedManagementPolicyProvider", %"class.extensions::PermissionsBasedManagementPolicyProvider"* %0, i64 0, i32 1
  store %"class.extensions::ExtensionManagement"* %1, %"class.extensions::ExtensionManagement"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions40PermissionsBasedManagementPolicyProviderD2Ev(%"class.extensions::PermissionsBasedManagementPolicyProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions40PermissionsBasedManagementPolicyProviderD0Ev(%"class.extensions::PermissionsBasedManagementPolicyProvider"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::PermissionsBasedManagementPolicyProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions40PermissionsBasedManagementPolicyProvider26GetDebugPolicyProviderNameEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.extensions::PermissionsBasedManagementPolicyProvider"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions40PermissionsBasedManagementPolicyProvider11UserMayLoadEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::PermissionsBasedManagementPolicyProvider"* nocapture readonly, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string.147", align 8
  %5 = alloca %"class.std::__1::basic_string.147", align 8
  %6 = alloca %"class.std::__1::basic_string.147", align 8
  %7 = alloca %"class.std::__1::basic_string.147", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %1) #7
  switch i32 %9, label %10 [
    i32 10, label %103
    i32 5, label %103
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.extensions::PermissionsBasedManagementPolicyProvider", %"class.extensions::PermissionsBasedManagementPolicyProvider"* %0, i64 0, i32 1
  %12 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %11, align 8
  %13 = tail call dereferenceable(128) %"class.extensions::PermissionSet"* @_ZN10extensions17PermissionsParser22GetRequiredPermissionsEPKNS_9ExtensionE(%"class.extensions::Extension"* %1) #7
  %14 = tail call zeroext i1 @_ZNK10extensions19ExtensionManagement22IsPermissionSetAllowedEPKNS_9ExtensionERKNS_13PermissionSetE(%"class.extensions::ExtensionManagement"* %12, %"class.extensions::Extension"* %1, %"class.extensions::PermissionSet"* dereferenceable(128) %13) #7
  br i1 %14, label %103, label %15

15:                                               ; preds = %10
  %16 = icmp eq %"class.std::__1::basic_string.147"* %2, null
  br i1 %16, label %103, label %17

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::basic_string.147"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = bitcast %"class.std::__1::basic_string.147"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %23 to i64
  %32 = select i1 %24, i64 %30, i64 %31
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.147"* nonnull sret %5, i8* %28, i64 %32) #7
  %33 = bitcast %"class.std::__1::basic_string.147"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #7
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #7
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %37 to i64
  %46 = select i1 %38, i64 %44, i64 %45
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.147"* nonnull sret %6, i8* %42, i64 %46) #7
  %47 = bitcast %"class.std::__1::basic_string.147"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  %48 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #7
  %49 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %11, align 8
  %50 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #7
  call void @_ZNK10extensions19ExtensionManagement21BlockedInstallMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.extensions::ExtensionManagement"* %49, %"class.std::__1::basic_string"* dereferenceable(24) %50) #7
  %51 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = select i1 %54, i8* %56, i8* %48
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %53 to i64
  %61 = select i1 %54, i64 %59, i64 %60
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.147"* nonnull sret %7, i8* %57, i64 %61) #7
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string.147"* nonnull sret %4, i32 24349, %"class.std::__1::basic_string.147"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string.147"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string.147"* nonnull dereferenceable(24) %7) #7
  %62 = bitcast %"class.std::__1::basic_string.147"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %17
  %67 = bitcast %"class.std::__1::basic_string.147"* %2 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #6
  br label %69

69:                                               ; preds = %66, %17
  %70 = bitcast %"class.std::__1::basic_string.147"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %18, i64 24, i1 false) #7
  %71 = bitcast %"class.std::__1::basic_string.147"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  store i8 0, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string.147"* %4 to i16*
  store i16 0, i16* %73, align 8
  %74 = bitcast %"class.std::__1::basic_string.147"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %69
  %79 = bitcast %"class.std::__1::basic_string.147"* %7 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #6
  br label %81

81:                                               ; preds = %69, %78
  %82 = load i8, i8* %52, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %85) #6
  br label %86

86:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  %87 = bitcast %"class.std::__1::basic_string.147"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = bitcast %"class.std::__1::basic_string.147"* %6 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #6
  br label %94

94:                                               ; preds = %86, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #7
  %95 = bitcast %"class.std::__1::basic_string.147"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %95, i64 0, i32 1, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::basic_string.147"* %5 to i8**
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #6
  br label %102

102:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  br label %103

103:                                              ; preds = %3, %3, %10, %102, %15
  %104 = phi i1 [ true, %3 ], [ false, %15 ], [ false, %102 ], [ true, %10 ], [ true, %3 ]
  ret i1 %104
}

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK10extensions19ExtensionManagement22IsPermissionSetAllowedEPKNS_9ExtensionERKNS_13PermissionSetE(%"class.extensions::ExtensionManagement"*, %"class.extensions::Extension"*, %"class.extensions::PermissionSet"* dereferenceable(128)) local_unnamed_addr #4

declare dereferenceable(128) %"class.extensions::PermissionSet"* @_ZN10extensions17PermissionsParser22GetRequiredPermissionsEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string.147"* sret, i32, %"class.std::__1::basic_string.147"* dereferenceable(24), %"class.std::__1::basic_string.147"* dereferenceable(24), %"class.std::__1::basic_string.147"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.147"* sret, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #4

declare void @_ZNK10extensions19ExtensionManagement21BlockedInstallMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.extensions::ExtensionManagement"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider14UserMayInstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider21UserMayModifySettingsEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider26ExtensionMayModifySettingsEPKNS_9ExtensionES4_PNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider17MustRemainEnabledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider18MustRemainDisabledEPKNS_9ExtensionEPNS_14disable_reason13DisableReasonEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, i32*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider19MustRemainInstalledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

declare zeroext i1 @_ZNK10extensions16ManagementPolicy8Provider20ShouldForceUninstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.extensions::ManagementPolicy::Provider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.147"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
