; ModuleID = '../../third_party/swiftshader/src/Main/FrameBufferFactoryOzone.cpp'
source_filename = "../../third_party/swiftshader/src/Main/FrameBufferFactoryOzone.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sw::FrameBuffer" = type <{ i32 (...)**, i8, [7 x i8], i8*, i32, i32, i32, i32, i8*, void (i8*, i8*, %"struct.sw::FrameBuffer::Cursor"*)*, %"class.std::__1::shared_ptr", %"struct.sw::BlitState", %"struct.sw::BlitState", %"class.sw::Thread"*, %"class.sw::Event", %"class.sw::Event", i8, [7 x i8] }>
%"struct.sw::FrameBuffer::Cursor" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.sw::BlitState" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.sw::Thread" = type <{ i64, i8, [7 x i8] }>
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct._XDisplay = type opaque
%"class.sw::FrameBufferX11" = type { %"class.sw::FrameBuffer.base", i8, %struct._XDisplay*, i64, %struct._XImage*, %struct._XGC*, i8, %struct.XShmSegmentInfo }
%"class.sw::FrameBuffer.base" = type <{ i32 (...)**, i8, [7 x i8], i8*, i32, i32, i32, i32, i8*, void (i8*, i8*, %"struct.sw::FrameBuffer::Cursor"*)*, %"class.std::__1::shared_ptr", %"struct.sw::BlitState", %"struct.sw::BlitState", %"class.sw::Thread"*, %"class.sw::Event", %"class.sw::Event", i8 }>
%struct._XImage = type { i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i8*, %"struct._XImage::funcs" }
%"struct._XImage::funcs" = type { %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, i32 (%struct._XImage*)*, i64 (%struct._XImage*, i32, i32)*, i32 (%struct._XImage*, i32, i32, i64)*, %struct._XImage* (%struct._XImage*, i32, i32, i32, i32)*, i32 (%struct._XImage*, i64)* }
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%struct._XGC = type opaque
%struct.XShmSegmentInfo = type { i64, i32, i8*, i32 }
%"class.sw::FrameBufferOzone" = type { %"class.sw::FrameBuffer.base", %"class.sw::Surface"* }
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull %"class.sw::FrameBuffer"* @_Z17createFrameBufferPvlii(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = bitcast i8* %0 to %struct._XDisplay*
  %8 = tail call i8* @_Znwm(i64 416) #3
  %9 = bitcast i8* %8 to %"class.sw::FrameBufferX11"*
  tail call void @_ZN2sw14FrameBufferX11C1EP9_XDisplaymii(%"class.sw::FrameBufferX11"* nonnull %9, %struct._XDisplay* nonnull %7, i64 %1, i32 %2, i32 %3) #4
  br label %13

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 352) #3
  %12 = bitcast i8* %11 to %"class.sw::FrameBufferOzone"*
  tail call void @_ZN2sw16FrameBufferOzoneC1Ellii(%"class.sw::FrameBufferOzone"* nonnull %12, i64 0, i64 %1, i32 %2, i32 %3) #4
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i8* [ %8, %6 ], [ %11, %10 ]
  %15 = bitcast i8* %14 to %"class.sw::FrameBuffer"*
  ret %"class.sw::FrameBuffer"* %15
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw14FrameBufferX11C1EP9_XDisplaymii(%"class.sw::FrameBufferX11"*, %struct._XDisplay*, i64, i32, i32) unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2sw16FrameBufferOzoneC1Ellii(%"class.sw::FrameBufferOzone"*, i64, i64, i32, i32) unnamed_addr #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind optsize }
attributes #4 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
