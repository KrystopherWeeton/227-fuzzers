; ModuleID = '../../third_party/swiftshader/src/OpenGL/common/Object.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/common/Object.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>

@_ZTVN2gl6ObjectE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object7releaseEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6ObjectD2Ev to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6ObjectD0Ev to i8*)] }, align 8
@_ZTVN2gl11NamedObjectE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object7releaseEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6ObjectD2Ev to i8*), i8* bitcast (void (%"class.gl::NamedObject"*)* @_ZN2gl11NamedObjectD0Ev to i8*)] }, align 8

@_ZN2gl6ObjectC1Ev = hidden unnamed_addr alias void (%"class.gl::Object"*), void (%"class.gl::Object"*)* @_ZN2gl6ObjectC2Ev
@_ZN2gl6ObjectD1Ev = hidden unnamed_addr alias void (%"class.gl::Object"*), void (%"class.gl::Object"*)* @_ZN2gl6ObjectD2Ev
@_ZN2gl11NamedObjectC1Ej = hidden unnamed_addr alias void (%"class.gl::NamedObject"*, i32), void (%"class.gl::NamedObject"*, i32)* @_ZN2gl11NamedObjectC2Ej
@_ZN2gl11NamedObjectD2Ev = hidden unnamed_addr alias void (%"class.gl::NamedObject"*), bitcast (void (%"class.gl::Object"*)* @_ZN2gl6ObjectD2Ev to void (%"class.gl::NamedObject"*)*)
@_ZN2gl11NamedObjectD1Ev = hidden unnamed_addr alias void (%"class.gl::NamedObject"*), bitcast (void (%"class.gl::Object"*)* @_ZN2gl6ObjectD2Ev to void (%"class.gl::NamedObject"*)*)

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2gl6ObjectC2Ev(%"class.gl::Object"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 1
  store volatile i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2gl6ObjectD2Ev(%"class.gl::Object"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2gl6ObjectD0Ev(%"class.gl::Object"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gl::Object"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2gl6Object6addRefEv(%"class.gl::Object"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 1
  %3 = atomicrmw add i32* %2, i32 1 seq_cst
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2gl6Object7releaseEv(%"class.gl::Object"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 1
  %3 = load volatile i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = atomicrmw sub i32* %2, i32 1 seq_cst
  %7 = icmp ne i32 %6, 1
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ %7, %5 ], [ false, %1 ]
  %10 = icmp eq %"class.gl::Object"* %0, null
  %11 = or i1 %10, %9
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.gl::Object"* %0 to void (%"class.gl::Object"*)***
  %14 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %14, i64 3
  %16 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %15, align 8
  tail call void %16(%"class.gl::Object"* nonnull %0) #5
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN2gl6Object11dereferenceEv(%"class.gl::Object"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 1
  %3 = load volatile i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = atomicrmw sub i32* %2, i32 1 seq_cst
  %7 = add i32 %6, -1
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2gl6Object7destroyEv(%"class.gl::Object"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::Object", %"class.gl::Object"* %0, i64 0, i32 1
  store volatile i32 0, i32* %2, align 8
  %3 = icmp eq %"class.gl::Object"* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.gl::Object"* %0 to void (%"class.gl::Object"*)***
  %6 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %6, i64 3
  %8 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %7, align 8
  tail call void %8(%"class.gl::Object"* nonnull %0) #5
  br label %9

9:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::NamedObject", %"class.gl::NamedObject"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::NamedObject", %"class.gl::NamedObject"* %0, i64 0, i32 0, i32 1
  store volatile i32 0, i32* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl11NamedObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.gl::NamedObject", %"class.gl::NamedObject"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2gl11NamedObjectD0Ev(%"class.gl::NamedObject"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gl::NamedObject"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind optsize }
attributes #5 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
