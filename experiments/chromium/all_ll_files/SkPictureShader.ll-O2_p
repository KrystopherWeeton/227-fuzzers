; ModuleID = '../../third_party/skia/src/shaders/SkPictureShader.cpp'
source_filename = "../../third_party/skia/src/shaders/SkPictureShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkSize = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPictureShader = type <{ %class.SkShaderBase.base, [4 x i8], %class.sk_sp.5, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.5 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%struct.SkRect = type { float, float, float, float }
%"class.SkPictureShader::PictureShaderContext" = type { %"class.SkShaderBase::Context.base", %class.sk_sp, %"class.SkShaderBase::Context"*, i8* }
%"class.SkShaderBase::Context.base" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8 }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.sk_sp = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.7*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.7 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.5*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.7*, i8*, i64, i8*)*, i8* }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkPicture* }
%class.SkTCopyOnFirstWrite = type { %class.SkMatrix*, %class.SkTLazy }
%class.SkTLazy = type { [40 x i8], %class.SkMatrix* }
%struct.CachedImageInfo = type { i8, %struct.SkSize, %class.SkMatrix, %struct.SkImageInfo }
%"struct.(anonymous namespace)::ImageFromPictureKey" = type <{ %"struct.SkResourceCache::Key", i32, i32, i32, %struct.SkRect, %struct.SkSize, [4 x i8] }>
%"struct.SkResourceCache::Key" = type { i32, i32, i32, i32, i8* }
%class.sk_sp.19 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.181 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.182 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkPaint = type <{ %class.sk_sp.20, %class.sk_sp, %class.sk_sp.21, %class.sk_sp.22, %class.sk_sp.23, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.20 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.22 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.23 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type opaque
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.24, %"class.std::__1::vector", %"class.std::__1::vector.36", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.24 = type { %class.SkTHashTable.25 }
%class.SkTHashTable.25 = type { i32, i32, %class.SkAutoTArray.26 }
%class.SkAutoTArray.26 = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.33" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { i32*, i32*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.36" }
%"struct.skvm::Ptr" = type { i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.43"*, i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.50", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.49 }
%class.sk_sp.49 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.53, %class.SkTHashMap.55, %class.SkTHashMap.64, %class.SkTArray.73, %class.SkTArray.75, i32, i8, [3 x i8] }>
%class.SkTArray.53 = type { %"class.std::__1::unique_ptr.54"*, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.75, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.76 }
%class.sk_sp.76 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.55 = type { %class.SkTHashTable.56 }
%class.SkTHashTable.56 = type { i32, i32, %class.SkAutoTArray.57 }
%class.SkAutoTArray.57 = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.173" }
%"struct.std::__1::pair.173" = type { i32, i32 }
%class.SkTHashMap.64 = type { %class.SkTHashTable.65 }
%class.SkTHashTable.65 = type { i32, i32, %class.SkAutoTArray.66 }
%class.SkAutoTArray.66 = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.174" }
%"struct.std::__1::pair.174" = type { i32, %class.SkTArray.175* }
%class.SkTArray.175 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.73 = type { %"class.std::__1::unique_ptr.74"*, i64 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.175, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.75 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.89 }
%class.SkFibBlockSizes.89 = type { i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.102 }
%class.SkTHashTable.102 = type { i32, i32, %class.SkAutoTArray.103 }
%class.SkAutoTArray.103 = type { %"class.std::__1::unique_ptr.104" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrColorInfo = type { %class.sk_sp.14, %class.sk_sp.113, i32, i32 }
%class.sk_sp.113 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.115, [4 x i8] }>
%union.anon.115 = type { [7 x i32] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.116, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.116 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.117, %class.sk_sp.118, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.155" }
%class.SkNVRefCnt.117 = type { %"struct.std::__1::atomic" }
%class.sk_sp.118 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.119 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.119 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.120, void (i8*)*, i8* }
%class.SkNVRefCnt.120 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.121, i32, [4 x i8] }
%union.anon.121 = type { %struct.anon.122 }
%struct.anon.122 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.118, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.153, %class.sk_sp.154, %class.sk_sp.154 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.133, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.144, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.124, i32, [4 x i8] }>
%class.SkTDynamicHash.124 = type { %class.SkTHashTable.125 }
%class.SkTHashTable.125 = type { i32, i32, %class.SkAutoTArray.126 }
%class.SkAutoTArray.126 = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.133 = type { %class.SkTHashTable.134 }
%class.SkTHashTable.134 = type { i32, i32, %class.SkAutoTArray.135 }
%class.SkAutoTArray.135 = type { %"class.std::__1::unique_ptr.136" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.142, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.142 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.143, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.143 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.144 = type { %class.SkTHashTable.145 }
%class.SkTHashTable.145 = type { i32, i32, %class.SkAutoTArray.146 }
%class.SkAutoTArray.146 = type { %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.153 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.114, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.114 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.154 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.sk_sp.160 = type { %class.GrTextureProxy* }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.161", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.167", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.167" = type { i32 }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.1", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkRuntimeEffect = type opaque
%class.SkStageUpdater = type { i32 (...)** }
%"struct.(anonymous namespace)::ImageFromPictureRec" = type { %"struct.SkResourceCache::Rec", %"struct.(anonymous namespace)::ImageFromPictureKey", %class.sk_sp.13 }
%class.SkDiscardableMemory = type opaque

$_ZN15CachedImageInfo4MakeERK6SkRectRK8SkMatrixP19SkTCopyOnFirstWriteIS3_E11SkColorTypeP12SkColorSpacei = comdat any

$_ZN15SkPictureShaderD2Ev = comdat any

$_ZN15SkPictureShaderD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK15SkPictureShader10getFactoryEv = comdat any

$_ZNK15SkPictureShader11getTypeNameEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK8SkShader8isOpaqueEv = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase18onAsLuminanceColorEPj = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

$_ZN15SkPictureShader20PictureShaderContextD2Ev = comdat any

$_ZN15SkPictureShader20PictureShaderContextD0Ev = comdat any

$_ZN15SkResourceCache3Rec11canBePurgedEv = comdat any

$_ZN15SkResourceCache3Rec14postAddInstallEPv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI5sk_spI8SkShaderEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeIN15SkPictureShader20PictureShaderContextEJRKS2_RN12SkShaderBase10ContextRecE5sk_spI8SkShaderERPS_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSE_ENUlPcE_8__invokeESN_ = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

@_ZTV15SkPictureShader = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPictureShader*)* @_ZN15SkPictureShaderD2Ev to i8*), i8* bitcast (void (%class.SkPictureShader*)* @_ZN15SkPictureShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%class.SkPictureShader*)* @_ZNK15SkPictureShader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkPictureShader*)* @_ZNK15SkPictureShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkPictureShader*, %class.SkWriteBuffer*)* @_ZNK15SkPictureShader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkShader*)* @_ZNK8SkShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkPictureShader*, %struct.GrFPArgs*)* @_ZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkPictureShader*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK15SkPictureShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkPictureShader*, %struct.SkStageRec*)* @_ZNK15SkPictureShader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkPictureShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK15SkPictureShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@_ZTVN15SkPictureShader20PictureShaderContextE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkPictureShader::PictureShaderContext"*)* @_ZN15SkPictureShader20PictureShaderContextD2Ev to i8*), i8* bitcast (void (%"class.SkPictureShader::PictureShaderContext"*)* @_ZN15SkPictureShader20PictureShaderContextD0Ev to i8*), i8* bitcast (i32 (%"class.SkPictureShader::PictureShaderContext"*)* @_ZNK15SkPictureShader20PictureShaderContext8getFlagsEv to i8*), i8* bitcast (void (%"class.SkPictureShader::PictureShaderContext"*, i32, i32, i32*, i32)* @_ZN15SkPictureShader20PictureShaderContext9shadeSpanEiiPji to i8*)] }, align 8
@__const._ZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgs.info = private unnamed_addr constant { i8, [3 x i8], %struct.SkSize, %class.SkMatrix, [4 x i8], %struct.SkImageInfo } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.14 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, align 8
@_ZZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain = internal global i32 0, align 4
@_ZGVZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain = internal global i64 0, align 8
@.str = private unnamed_addr constant [21 x i8] c"Picture Shader Image\00", align 1
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZN12_GLOBAL__N_134gImageFromPictureKeyNamespaceLabelE = internal global i32 0, align 4
@_ZTVN12_GLOBAL__N_119ImageFromPictureRecE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::ImageFromPictureRec"*)* @_ZN12_GLOBAL__N_119ImageFromPictureRecD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::ImageFromPictureRec"*)* @_ZN12_GLOBAL__N_119ImageFromPictureRecD0Ev to i8*), i8* bitcast (%"struct.SkResourceCache::Key"* (%"struct.(anonymous namespace)::ImageFromPictureRec"*)* @_ZNK12_GLOBAL__N_119ImageFromPictureRec6getKeyEv to i8*), i8* bitcast (i64 (%"struct.(anonymous namespace)::ImageFromPictureRec"*)* @_ZNK12_GLOBAL__N_119ImageFromPictureRec9bytesUsedEv to i8*), i8* bitcast (i1 (%"struct.SkResourceCache::Rec"*)* @_ZN15SkResourceCache3Rec11canBePurgedEv to i8*), i8* bitcast (void (%"struct.SkResourceCache::Rec"*, i8*)* @_ZN15SkResourceCache3Rec14postAddInstallEPv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::ImageFromPictureRec"*)* @_ZNK12_GLOBAL__N_119ImageFromPictureRec11getCategoryEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%"struct.(anonymous namespace)::ImageFromPictureRec"*)* @_ZNK12_GLOBAL__N_119ImageFromPictureRec30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"bitmap-shader\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"SkPictureShader\00", align 1
@switch.table._ZN15CachedImageInfo4MakeERK6SkRectRK8SkMatrixP19SkTCopyOnFirstWriteIS3_E11SkColorTypeP12SkColorSpacei = private unnamed_addr constant [21 x i64] [i64 8589934596, i64 8589934596, i64 8589934596, i64 8589934596, i64 8589934596, i64 8589934596, i64 8589934596, i64 8589934604, i64 8589934604, i64 8589934604, i64 8589934604, i64 8589934596, i64 8589934604, i64 8589934604, i64 8589934604, i64 8589934596, i64 8589934604, i64 8589934604, i64 8589934604, i64 8589934604, i64 8589934604], align 8

@_ZN15SkPictureShaderC1E5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect = hidden unnamed_addr alias void (%class.SkPictureShader*, %class.sk_sp.5*, i32, i32, i32, %class.SkMatrix*, %struct.SkRect*), void (%class.SkPictureShader*, %class.sk_sp.5*, i32, i32, i32, %class.SkMatrix*, %struct.SkRect*)* @_ZN15SkPictureShaderC2E5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect
@_ZN15SkPictureShader20PictureShaderContextC1ERKS_RKN12SkShaderBase10ContextRecE5sk_spI8SkShaderEP12SkArenaAlloc = hidden unnamed_addr alias void (%"class.SkPictureShader::PictureShaderContext"*, %class.SkPictureShader*, %"struct.SkShaderBase::ContextRec"*, %class.sk_sp*, %class.SkArenaAlloc*), void (%"class.SkPictureShader::PictureShaderContext"*, %class.SkPictureShader*, %"struct.SkShaderBase::ContextRec"*, %class.sk_sp*, %class.SkArenaAlloc*)* @_ZN15SkPictureShader20PictureShaderContextC2ERKS_RKN12SkShaderBase10ContextRecE5sk_spI8SkShaderEP12SkArenaAlloc

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp* noalias sret, %class.SkPicture*, i32, i32, i32, %class.SkMatrix*, %struct.SkRect* readonly) local_unnamed_addr #0 align 2 {
  %8 = icmp eq %class.SkMatrix* %5, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = trunc i32 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %5) #14
  %16 = zext i8 %15 to i32
  store i32 %16, i32* %10, align 4
  br label %17

17:                                               ; preds = %14, %9
  %18 = phi i32 [ %16, %14 ], [ %11, %9 ]
  %19 = and i32 %18, 15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %5, %class.SkMatrix* null) #14
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %24, align 8
  br label %97

25:                                               ; preds = %17, %7, %21
  %26 = icmp eq %class.SkPicture* %1, null
  br i1 %26, label %86, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !2
  %30 = ptrtoint %class.SkPicture* %1 to i64
  %31 = bitcast %class.SkPicture* %1 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %32 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %31, align 8
  %33 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %32, i64 4
  %34 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %33, align 8
  %35 = tail call { <2 x float>, <2 x float> } %34(%class.SkPicture* nonnull %1) #14
  %36 = extractvalue { <2 x float>, <2 x float> } %35, 0
  %37 = extractvalue { <2 x float>, <2 x float> } %35, 1
  %38 = extractelement <2 x float> %36, i32 0
  %39 = extractelement <2 x float> %37, i32 0
  %40 = fcmp olt float %38, %39
  br i1 %40, label %41, label %87

41:                                               ; preds = %27
  %42 = extractelement <2 x float> %36, i32 1
  %43 = extractelement <2 x float> %37, i32 1
  %44 = fcmp uge float %42, %43
  br i1 %44, label %87, label %45

45:                                               ; preds = %41
  %46 = icmp eq %struct.SkRect* %6, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %49 = load float, float* %48, align 4, !noalias !5
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %51 = load float, float* %50, align 4, !noalias !5
  %52 = fcmp olt float %49, %51
  br i1 %52, label %53, label %87

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %55 = load float, float* %54, align 4, !noalias !5
  %56 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %57 = load float, float* %56, align 4, !noalias !5
  %58 = fcmp uge float %55, %57
  br i1 %58, label %87, label %59

59:                                               ; preds = %53, %45
  %60 = tail call i8* @_Znwm(i64 96) #15
  %61 = bitcast i8* %60 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %61, %class.SkMatrix* %5) #14
  %62 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15SkPictureShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8, !noalias !5
  %63 = getelementptr inbounds i8, i8* %60, i64 56
  %64 = bitcast i8* %63 to i64*
  store i64 %30, i64* %64, align 8, !noalias !5
  %65 = getelementptr inbounds i8, i8* %60, i64 64
  br i1 %46, label %68, label %66

66:                                               ; preds = %59
  %67 = bitcast %struct.SkRect* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 4 %67, i64 16, i1 false) #14, !noalias !5
  br label %78

68:                                               ; preds = %59
  %69 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %31, align 8
  %70 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %69, i64 4
  %71 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %70, align 8
  %72 = tail call { <2 x float>, <2 x float> } %71(%class.SkPicture* nonnull %1) #14
  %73 = bitcast i8* %65 to <2 x float>*
  %74 = extractvalue { <2 x float>, <2 x float> } %72, 0
  store <2 x float> %74, <2 x float>* %73, align 8, !noalias !5
  %75 = getelementptr inbounds i8, i8* %60, i64 72
  %76 = bitcast i8* %75 to <2 x float>*
  %77 = extractvalue { <2 x float>, <2 x float> } %72, 1
  store <2 x float> %77, <2 x float>* %76, align 8, !noalias !5
  br label %78

78:                                               ; preds = %66, %68
  %79 = getelementptr inbounds i8, i8* %60, i64 80
  %80 = bitcast i8* %79 to i32*
  store i32 %2, i32* %80, align 8, !noalias !5
  %81 = getelementptr inbounds i8, i8* %60, i64 84
  %82 = bitcast i8* %81 to i32*
  store i32 %3, i32* %82, align 4, !noalias !5
  %83 = getelementptr inbounds i8, i8* %60, i64 88
  %84 = bitcast i8* %83 to i32*
  store i32 %4, i32* %84, align 8, !noalias !5
  %85 = bitcast %class.sk_sp* %0 to i8**
  store i8* %60, i8** %85, align 8, !alias.scope !5
  br label %97

86:                                               ; preds = %25
  tail call void @_ZN9SkShaders5EmptyEv(%class.sk_sp* sret %0) #14
  br label %97

87:                                               ; preds = %27, %41, %47, %53
  tail call void @_ZN9SkShaders5EmptyEv(%class.sk_sp* sret %0) #14
  %88 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkPicture* %1 to %class.SkRefCntBase*
  %93 = bitcast %class.SkPicture* %1 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  tail call void %96(%class.SkRefCntBase* nonnull %92) #14
  br label %97

97:                                               ; preds = %86, %91, %87, %78, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkPictureShader4MakeE5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp* noalias sret, %class.sk_sp.5* nocapture, i32, i32, i32, %class.SkMatrix*, %struct.SkRect* readonly) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %1, i64 0, i32 0
  %9 = load %class.SkPicture*, %class.SkPicture** %8, align 8
  %10 = icmp eq %class.SkPicture* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.SkPicture* %9 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %13 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %12, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %13, i64 4
  %15 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %14, align 8
  %16 = tail call { <2 x float>, <2 x float> } %15(%class.SkPicture* nonnull %9) #14
  %17 = extractvalue { <2 x float>, <2 x float> } %16, 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 1
  %19 = extractelement <2 x float> %17, i32 0
  %20 = extractelement <2 x float> %18, i32 0
  %21 = fcmp olt float %19, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %11
  %23 = extractelement <2 x float> %17, i32 1
  %24 = extractelement <2 x float> %18, i32 1
  %25 = fcmp uge float %23, %24
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = icmp eq %struct.SkRect* %6, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %32 = load float, float* %31, align 4
  %33 = fcmp olt float %30, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = fcmp uge float %36, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %7, %28, %11, %22, %34
  tail call void @_ZN9SkShaders5EmptyEv(%class.sk_sp* sret %0) #14
  br label %72

41:                                               ; preds = %26, %34
  %42 = tail call i8* @_Znwm(i64 96) #15
  %43 = bitcast %class.sk_sp.5* %1 to i64*
  %44 = load i64, i64* %43, align 8
  store %class.SkPicture* null, %class.SkPicture** %8, align 8
  %45 = bitcast i8* %42 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %45, %class.SkMatrix* %5) #14
  %46 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15SkPictureShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 56
  %48 = bitcast i8* %47 to i64*
  store i64 %44, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %42, i64 64
  br i1 %27, label %52, label %50

50:                                               ; preds = %41
  %51 = bitcast %struct.SkRect* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 4 %51, i64 16, i1 false) #14
  br label %64

52:                                               ; preds = %41
  %53 = inttoptr i64 %44 to %class.SkPicture*
  %54 = inttoptr i64 %44 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %55 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %54, align 8
  %56 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %55, i64 4
  %57 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %56, align 8
  %58 = tail call { <2 x float>, <2 x float> } %57(%class.SkPicture* %53) #14
  %59 = bitcast i8* %49 to <2 x float>*
  %60 = extractvalue { <2 x float>, <2 x float> } %58, 0
  store <2 x float> %60, <2 x float>* %59, align 8
  %61 = getelementptr inbounds i8, i8* %42, i64 72
  %62 = bitcast i8* %61 to <2 x float>*
  %63 = extractvalue { <2 x float>, <2 x float> } %58, 1
  store <2 x float> %63, <2 x float>* %62, align 8
  br label %64

64:                                               ; preds = %52, %50
  %65 = getelementptr inbounds i8, i8* %42, i64 80
  %66 = bitcast i8* %65 to i32*
  store i32 %2, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %42, i64 84
  %68 = bitcast i8* %67 to i32*
  store i32 %3, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %42, i64 88
  %70 = bitcast i8* %69 to i32*
  store i32 %4, i32* %70, align 8
  %71 = bitcast %class.sk_sp* %0 to i8**
  store i8* %42, i8** %71, align 8
  br label %72

72:                                               ; preds = %64, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkPictureShaderC2E5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect(%class.SkPictureShader*, %class.sk_sp.5* nocapture, i32, i32, i32, %class.SkMatrix*, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %8 = bitcast %class.SkPictureShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* %8, %class.SkMatrix* %5) #14
  %9 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15SkPictureShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %1, i64 0, i32 0
  %12 = bitcast %class.sk_sp.5* %1 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkPicture* null, %class.SkPicture** %11, align 8
  %14 = bitcast %class.sk_sp.5* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 3
  %16 = icmp eq %struct.SkRect* %6, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = bitcast %struct.SkRect* %15 to i8*
  %19 = bitcast %struct.SkRect* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 4 %19, i64 16, i1 false)
  br label %32

20:                                               ; preds = %7
  %21 = inttoptr i64 %13 to %class.SkPicture*
  %22 = inttoptr i64 %13 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %23 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %22, align 8
  %24 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %23, i64 4
  %25 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %24, align 8
  %26 = tail call { <2 x float>, <2 x float> } %25(%class.SkPicture* %21) #14
  %27 = bitcast %struct.SkRect* %15 to <2 x float>*
  %28 = extractvalue { <2 x float>, <2 x float> } %26, 0
  store <2 x float> %28, <2 x float>* %27, align 8
  %29 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 3, i32 2
  %30 = bitcast float* %29 to <2 x float>*
  %31 = extractvalue { <2 x float>, <2 x float> } %26, 1
  store <2 x float> %31, <2 x float>* %30, align 8
  br label %32

32:                                               ; preds = %20, %17
  %33 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 4
  store i32 %2, i32* %33, align 8
  %34 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 5
  store i32 %3, i32* %34, align 4
  %35 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 6
  store i32 %4, i32* %35, align 8
  ret void
}

declare void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN9SkShaders5EmptyEv(%class.sk_sp* sret) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkPictureShader10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.sk_sp.5, align 8
  %5 = alloca %class.sk_sp.5, align 8
  %6 = alloca %class.sk_sp.5, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #14
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %10 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 16
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %13, align 16
  store i32 16, i32* %9, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %3) #14
  %14 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #14
  %15 = icmp ugt i32 %14, 3
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %17

17:                                               ; preds = %2, %16
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !8
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 %14, i32 0
  %22 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #14
  %23 = icmp ugt i32 %22, 3
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %25

25:                                               ; preds = %17, %24
  %26 = load i8, i8* %18, align 8, !range !8
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i32 %22, i32 0
  %29 = call { <2 x float>, <2 x float> } @_ZN12SkReadBuffer8readRectEv(%class.SkReadBuffer* %1) #14
  %30 = extractvalue { <2 x float>, <2 x float> } %29, 0
  %31 = extractvalue { <2 x float>, <2 x float> } %29, 1
  %32 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  %35 = icmp ult i32 %34, 84
  br i1 %35, label %36, label %46

36:                                               ; preds = %25
  %37 = icmp slt i32 %33, 82
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #14
  br i1 %39, label %54, label %40

40:                                               ; preds = %38
  %41 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #14
  br label %106

42:                                               ; preds = %36
  %43 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #14
  %44 = icmp ult i32 %43, 2
  %45 = select i1 %44, i32 %43, i32 0
  br label %54

46:                                               ; preds = %25
  %47 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #14
  %48 = icmp ugt i32 %47, 1
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %50

50:                                               ; preds = %49, %46
  %51 = load i8, i8* %18, align 8, !range !8
  %52 = icmp eq i8 %51, 0
  %53 = select i1 %52, i32 %47, i32 0
  br label %54

54:                                               ; preds = %38, %42, %50
  %55 = phi %class.sk_sp.5* [ %5, %42 ], [ %6, %50 ], [ %4, %38 ]
  %56 = phi i32 [ %45, %42 ], [ %53, %50 ], [ 0, %38 ]
  %57 = bitcast %class.sk_sp.5* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  call void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.5* nonnull sret %55, %class.SkReadBuffer* dereferenceable(136) %1) #14
  %58 = bitcast %class.sk_sp.5* %55 to i64*
  %59 = load i64, i64* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  %60 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #14
  %61 = inttoptr i64 %59 to %class.SkPicture*
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %106, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 1 monotonic
  %66 = inttoptr i64 %59 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %67 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %66, align 8
  %68 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %67, i64 4
  %69 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %68, align 8
  %70 = call { <2 x float>, <2 x float> } %69(%class.SkPicture* nonnull %61) #14
  %71 = extractvalue { <2 x float>, <2 x float> } %70, 0
  %72 = extractvalue { <2 x float>, <2 x float> } %70, 1
  %73 = extractelement <2 x float> %71, i32 0
  %74 = extractelement <2 x float> %72, i32 0
  %75 = fcmp olt float %73, %74
  br i1 %75, label %76, label %106

76:                                               ; preds = %63
  %77 = extractelement <2 x float> %71, i32 1
  %78 = extractelement <2 x float> %72, i32 1
  %79 = fcmp uge float %77, %78
  br i1 %79, label %106, label %80

80:                                               ; preds = %76
  %81 = extractelement <2 x float> %30, i32 0
  %82 = extractelement <2 x float> %31, i32 0
  %83 = fcmp olt float %81, %82
  br i1 %83, label %84, label %106

84:                                               ; preds = %80
  %85 = extractelement <2 x float> %30, i32 1
  %86 = extractelement <2 x float> %31, i32 1
  %87 = fcmp uge float %85, %86
  br i1 %87, label %106, label %88

88:                                               ; preds = %84
  %89 = call i8* @_Znwm(i64 96) #15
  %90 = bitcast i8* %89 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %90, %class.SkMatrix* nonnull %3) #14
  %91 = bitcast i8* %89 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15SkPictureShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8, !noalias !9
  %92 = getelementptr inbounds i8, i8* %89, i64 56
  %93 = bitcast i8* %92 to i64*
  store i64 %59, i64* %93, align 8, !noalias !9
  %94 = getelementptr inbounds i8, i8* %89, i64 64
  %95 = bitcast i8* %94 to <2 x float>*
  store <2 x float> %30, <2 x float>* %95, align 8, !noalias !9
  %96 = getelementptr inbounds i8, i8* %89, i64 72
  %97 = bitcast i8* %96 to <2 x float>*
  store <2 x float> %31, <2 x float>* %97, align 8, !noalias !9
  %98 = getelementptr inbounds i8, i8* %89, i64 80
  %99 = bitcast i8* %98 to i32*
  store i32 %21, i32* %99, align 8, !noalias !9
  %100 = getelementptr inbounds i8, i8* %89, i64 84
  %101 = bitcast i8* %100 to i32*
  store i32 %28, i32* %101, align 4, !noalias !9
  %102 = getelementptr inbounds i8, i8* %89, i64 88
  %103 = bitcast i8* %102 to i32*
  store i32 %56, i32* %103, align 8, !noalias !9
  %104 = ptrtoint i8* %89 to i64
  %105 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %104, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #14
  br label %128

106:                                              ; preds = %54, %40, %63, %76, %80, %84
  %107 = phi i8* [ %60, %84 ], [ %60, %80 ], [ %60, %76 ], [ %60, %63 ], [ %60, %54 ], [ %41, %40 ]
  %108 = phi i1 [ false, %84 ], [ false, %80 ], [ false, %76 ], [ false, %63 ], [ true, %54 ], [ true, %40 ]
  %109 = phi %class.SkPicture* [ %61, %84 ], [ %61, %80 ], [ %61, %76 ], [ %61, %63 ], [ null, %54 ], [ null, %40 ]
  %110 = phi i64 [ %59, %84 ], [ %59, %80 ], [ %59, %76 ], [ %59, %63 ], [ 0, %54 ], [ 0, %40 ]
  call void @_ZN9SkShaders5EmptyEv(%class.sk_sp* nonnull sret %7) #14
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %7 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkShader* null, %class.SkShader** %111, align 8
  %114 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %113, i64* %114, align 8
  %115 = icmp eq i64 %110, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %106
  %117 = inttoptr i64 %110 to %class.SkPicture*
  %118 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %117, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %127

121:                                              ; preds = %116
  %122 = inttoptr i64 %110 to %class.SkRefCntBase*
  %123 = inttoptr i64 %110 to void (%class.SkRefCntBase*)***
  %124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %123, align 8
  %125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, i64 2
  %126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, align 8
  call void %126(%class.SkRefCntBase* nonnull %122) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #14
  br i1 %108, label %139, label %128

127:                                              ; preds = %106, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #14
  br i1 %108, label %139, label %128

128:                                              ; preds = %121, %88, %127
  %129 = phi %class.SkPicture* [ %61, %88 ], [ %109, %127 ], [ %109, %121 ]
  %130 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %129, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %139

133:                                              ; preds = %128
  %134 = bitcast %class.SkPicture* %129 to %class.SkRefCntBase*
  %135 = bitcast %class.SkPicture* %129 to void (%class.SkRefCntBase*)***
  %136 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, i64 2
  %138 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, align 8
  call void %138(%class.SkRefCntBase* nonnull %134) #14
  br label %139

139:                                              ; preds = %121, %127, %128, %133
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN12SkReadBuffer8readRectEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.5* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkPictureShader7flattenER13SkWriteBuffer(%class.SkPictureShader*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.18, align 8
  %4 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %6 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %6, i64 20
  %8 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %4) #14
  %9 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %12 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, i64 7
  %14 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, i32 %10) #14
  %15 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %17, i64 7
  %19 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, i32 %16) #14
  %20 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 3
  %21 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %22 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %22, i64 22
  %24 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %23, align 8
  tail call void %24(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %20) #14
  %25 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %28 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %27, i64 7
  %29 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %28, align 8
  tail call void %29(%class.SkWriteBuffer* %1, i32 %26) #14
  %30 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %3, i64 0, i32 0
  %31 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 2, i32 0
  %32 = load %class.SkPicture*, %class.SkPicture** %31, align 8
  %33 = icmp eq %class.SkPicture* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %2, %34
  store %class.SkPicture* %32, %class.SkPicture** %30, align 8
  call void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.18* nonnull %3, %class.SkWriteBuffer* dereferenceable(56) %1) #14
  %38 = load %class.SkPicture*, %class.SkPicture** %30, align 8
  %39 = icmp eq %class.SkPicture* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %class.SkPicture* %38 to %class.SkRefCntBase*
  %46 = bitcast %class.SkPicture* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8
  call void %49(%class.SkRefCntBase* nonnull %45) #14
  br label %50

50:                                               ; preds = %37, %40, %44
  ret void
}

declare void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.18*, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkPictureShader12rasterShaderERK8SkMatrixP19SkTCopyOnFirstWriteIS0_E11SkColorTypeP12SkColorSpace(%class.sk_sp* noalias sret, %class.SkPictureShader*, %class.SkMatrix* dereferenceable(40), %class.SkTCopyOnFirstWrite*, i32, %class.SkColorSpace*) local_unnamed_addr #4 align 2 {
  %7 = alloca %struct.CachedImageInfo, align 8
  %8 = alloca %"struct.(anonymous namespace)::ImageFromPictureKey", align 8
  %9 = alloca %class.sk_sp.13, align 8
  %10 = alloca %class.sk_sp.13, align 8
  %11 = alloca %class.sk_sp.19, align 8
  %12 = alloca %struct.SkSamplingOptions, align 4
  %13 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkSize, %class.SkMatrix, [4 x i8], %struct.SkImageInfo }, { i8, [3 x i8], %struct.SkSize, %class.SkMatrix, [4 x i8], %struct.SkImageInfo }* @__const._ZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgs.info, i64 0, i32 0), i64 80, i1 false)
  %14 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %1, i64 0, i32 3
  call void @_ZN15CachedImageInfo4MakeERK6SkRectRK8SkMatrixP19SkTCopyOnFirstWriteIS3_E11SkColorTypeP12SkColorSpacei(%struct.CachedImageInfo* nonnull sret %7, %struct.SkRect* dereferenceable(16) %14, %class.SkMatrix* dereferenceable(40) %2, %class.SkTCopyOnFirstWrite* %3, i32 %4, %class.SkColorSpace* %5, i32 0)
  %15 = load i8, i8* %13, align 8, !range !8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %18, align 8
  br label %155

19:                                               ; preds = %6
  %20 = bitcast %"struct.(anonymous namespace)::ImageFromPictureKey"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 4, i32 0
  %25 = bitcast %"struct.(anonymous namespace)::ImageFromPictureKey"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 36, i1 false)
  %26 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 6, i64 0
  %27 = bitcast float* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 -1, i64 24, i1 false)
  %28 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %7, i64 0, i32 3
  %29 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast i8* %26 to i32*
  store i32 -1431655766, i32* %30, align 4
  %31 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %32 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %7, i64 0, i32 3, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %1, i64 0, i32 2, i32 0
  %35 = load %class.SkPicture*, %class.SkPicture** %34, align 8
  %36 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %7, i64 0, i32 1
  %39 = bitcast %struct.SkSize* %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %31, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %21, align 8
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %31, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %22, align 4
  store i32 %33, i32* %23, align 8
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 4
  %46 = bitcast %struct.SkRect* %45 to i8*
  %47 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 16, i1 false) #14
  %48 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 5
  %49 = bitcast %struct.SkSize* %48 to i64*
  store i64 %40, i64* %49, align 4
  %50 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureKey", %"struct.(anonymous namespace)::ImageFromPictureKey"* %8, i64 0, i32 0
  %51 = zext i32 %37 to i64
  %52 = or i64 %51, 8100114754669903872
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* nonnull %50, i8* bitcast (i32* @_ZN12_GLOBAL__N_134gImageFromPictureKeyNamespaceLabelE to i8*), i64 %52, i64 36) #14
  %53 = bitcast %class.sk_sp.13* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  %54 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %9, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %54, align 8
  %55 = call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %50, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_119ImageFromPictureRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %53) #14
  br i1 %55, label %129, label %56

56:                                               ; preds = %19
  %57 = bitcast %class.sk_sp.13* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.19* nonnull sret %11, %struct.SkImageInfo* dereferenceable(24) %28, i64 0, %class.SkSurfaceProps* null) #14
  %58 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %11, i64 0, i32 0
  %59 = load %class.SkSurface*, %class.SkSurface** %58, align 8, !noalias !12
  %60 = icmp eq %class.SkSurface* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %10, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %62, align 8, !alias.scope !12
  br label %70

63:                                               ; preds = %56
  %64 = load %class.SkPicture*, %class.SkPicture** %34, align 8
  %65 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %59) #14, !noalias !12
  %66 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %7, i64 0, i32 2
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %65, %class.SkMatrix* dereferenceable(40) %66) #14, !noalias !12
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %65, %class.SkPicture* %64, %class.SkMatrix* null, %class.SkPaint* null) #14, !noalias !12
  %67 = load %class.SkSurface*, %class.SkSurface** %58, align 8, !noalias !12
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.13* nonnull sret %10, %class.SkSurface* %67) #14
  %68 = bitcast %class.sk_sp.13* %10 to i64*
  %69 = load i64, i64* %68, align 8
  br label %70

70:                                               ; preds = %61, %63
  %71 = phi i64 [ 0, %61 ], [ %69, %63 ]
  %72 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %10, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %72, align 8
  %73 = load %class.SkImage*, %class.SkImage** %54, align 8
  %74 = bitcast %class.sk_sp.13* %9 to i64*
  store i64 %71, i64* %74, align 8
  %75 = icmp eq %class.SkImage* %73, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %class.SkImage, %class.SkImage* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkImage* %73 to %class.SkRefCntBase*
  %82 = bitcast %class.SkImage* %73 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #14
  br label %86

86:                                               ; preds = %76, %80
  %87 = load %class.SkImage*, %class.SkImage** %72, align 8
  %88 = icmp eq %class.SkImage* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.SkImage, %class.SkImage* %87, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkImage* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkImage* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #14
  br label %99

99:                                               ; preds = %70, %86, %89, %93
  %100 = load %class.SkSurface*, %class.SkSurface** %58, align 8
  %101 = icmp eq %class.SkSurface* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %100, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = bitcast %class.SkSurface* %100 to %class.SkRefCntBase*
  %108 = bitcast %class.SkSurface* %100 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  call void %111(%class.SkRefCntBase* nonnull %107) #14
  br label %112

112:                                              ; preds = %99, %102, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  %113 = load %class.SkImage*, %class.SkImage** %54, align 8
  %114 = icmp eq %class.SkImage* %113, null
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %116, align 8
  br label %154

117:                                              ; preds = %112
  %118 = call i8* @_Znwm(i64 96) #15
  %119 = getelementptr inbounds %class.SkImage, %class.SkImage* %113, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 1 monotonic
  %121 = ptrtoint %class.SkImage* %113 to i64
  %122 = bitcast i8* %118 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_119ImageFromPictureRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds i8, i8* %118, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* nonnull align 8 %20, i64 64, i1 false) #14
  %124 = getelementptr inbounds i8, i8* %118, i64 88
  %125 = bitcast i8* %124 to i64*
  store i64 %121, i64* %125, align 8
  %126 = bitcast i8* %118 to %"struct.SkResourceCache::Rec"*
  call void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"* nonnull %126, i8* null) #14
  %127 = load %class.SkPicture*, %class.SkPicture** %34, align 8
  %128 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %128 seq_cst, align 1
  br label %129

129:                                              ; preds = %19, %117
  %130 = load %class.SkImage*, %class.SkImage** %54, align 8
  %131 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %1, i64 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %1, i64 0, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %135) #14
  %136 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %1, i64 0, i32 6
  %137 = load i32, i32* %136, align 8
  store i8 0, i8* %135, align 4
  %138 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %138, align 4
  %139 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %139, align 4
  %140 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 2
  store i32 %137, i32* %140, align 4
  %141 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 3
  store i32 0, i32* %141, align 4
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp* sret %0, %class.SkImage* %130, i32 %132, i32 %134, %struct.SkSamplingOptions* nonnull dereferenceable(20) %12, %class.SkMatrix* null) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %135) #14
  %142 = load %class.SkImage*, %class.SkImage** %54, align 8
  %143 = icmp eq %class.SkImage* %142, null
  br i1 %143, label %154, label %144

144:                                              ; preds = %129
  %145 = getelementptr inbounds %class.SkImage, %class.SkImage* %142, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 -1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %154

148:                                              ; preds = %144
  %149 = bitcast %class.SkImage* %142 to %class.SkRefCntBase*
  %150 = bitcast %class.SkImage* %142 to void (%class.SkRefCntBase*)***
  %151 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %150, align 8
  %152 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, i64 2
  %153 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, align 8
  call void %153(%class.SkRefCntBase* nonnull %149) #14
  br label %154

154:                                              ; preds = %115, %129, %144, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #14
  br label %155

155:                                              ; preds = %154, %17
  %156 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %class.SkColorSpace*, %class.SkColorSpace** %156, align 8
  %158 = icmp eq %class.SkColorSpace* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = bitcast %class.SkColorSpace* %157 to i8*
  call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %155, %159, %163
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CachedImageInfo4MakeERK6SkRectRK8SkMatrixP19SkTCopyOnFirstWriteIS3_E11SkColorTypeP12SkColorSpacei(%struct.CachedImageInfo* noalias sret, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkTCopyOnFirstWrite*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #4 comdat align 2 {
  %8 = alloca <2 x float>, align 8
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %class.sk_sp.14, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #14
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %15 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 0
  %16 = load %class.SkMatrix*, %class.SkMatrix** %15, align 8
  %17 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %17, align 16, !alias.scope !15
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 16, !alias.scope !15
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %20, align 16, !alias.scope !15
  store i32 16, i32* %14, align 4, !alias.scope !15
  %21 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %9, %class.SkMatrix* dereferenceable(40) %2, %class.SkMatrix* dereferenceable(40) %16) #14
  %22 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = bitcast <2 x float>* %8 to %struct.SkSize*
  %24 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %24, align 8
  %25 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %23, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %25, align 4
  %26 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* nonnull %9, %struct.SkSize* nonnull %23, %class.SkMatrix* null) #14
  br i1 %26, label %27, label %29

27:                                               ; preds = %7
  %28 = load <2 x float>, <2 x float>* %8, align 8
  br label %30

29:                                               ; preds = %7
  store float 1.000000e+00, float* %24, align 8
  store float 1.000000e+00, float* %25, align 4
  br label %30

30:                                               ; preds = %29, %27
  %31 = phi <2 x float> [ %28, %27 ], [ <float 1.000000e+00, float 1.000000e+00>, %29 ]
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %35 = bitcast float* %32 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %38 = bitcast %struct.SkRect* %1 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  %40 = fsub <2 x float> %36, %39
  %41 = fmul <2 x float> %31, %40
  %42 = extractelement <2 x float> %41, i32 0
  store float %42, float* %24, align 8
  %43 = extractelement <2 x float> %41, i32 1
  store float %43, float* %25, align 4
  %44 = fmul float %42, %43
  %45 = fcmp ogt float %44, 0x4150000000000000
  br i1 %45, label %46, label %55

46:                                               ; preds = %30
  %47 = fdiv float 0x4150000000000000, %44
  %48 = call float @sqrtf(float %47) #14
  %49 = load <2 x float>, <2 x float>* %8, align 8
  %50 = insertelement <2 x float> undef, float %48, i32 0
  %51 = shufflevector <2 x float> %50, <2 x float> undef, <2 x i32> zeroinitializer
  %52 = fmul <2 x float> %51, %49
  %53 = extractelement <2 x float> %52, i32 0
  store float %53, float* %24, align 8
  %54 = extractelement <2 x float> %52, i32 1
  store float %54, float* %25, align 4
  br label %55

55:                                               ; preds = %46, %30
  %56 = phi <2 x float> [ %52, %46 ], [ %41, %30 ]
  %57 = icmp eq i32 %6, 0
  br i1 %57, label %73, label %58

58:                                               ; preds = %55
  %59 = sitofp i32 %6 to float
  %60 = extractelement <2 x float> %56, i32 0
  %61 = fcmp ogt float %60, %59
  %62 = extractelement <2 x float> %56, i32 1
  %63 = fcmp ogt float %62, %59
  %64 = or i1 %63, %61
  br i1 %64, label %65, label %73

65:                                               ; preds = %58
  %66 = fcmp olt float %60, %62
  %67 = select i1 %66, float %62, float %60
  %68 = fdiv float %59, %67
  %69 = fmul float %60, %68
  %70 = call float @llvm.floor.f32(float %69) #14
  %71 = fmul float %62, %68
  %72 = call float @llvm.floor.f32(float %71) #14
  store float %70, float* %24, align 8
  store float %72, float* %25, align 4
  br label %73

73:                                               ; preds = %55, %58, %65
  %74 = load <2 x float>, <2 x float>* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %75 = extractelement <2 x float> %74, i32 0
  %76 = call float @llvm.ceil.f32(float %75) #14
  %77 = fcmp olt float %76, 0x41DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0x41DFFFFFE0000000
  %79 = fcmp ogt float %78, 0xC1DFFFFFE0000000
  %80 = select i1 %79, float %78, float 0xC1DFFFFFE0000000
  %81 = fptosi float %80 to i32
  %82 = extractelement <2 x float> %74, i32 1
  %83 = call float @llvm.ceil.f32(float %82) #14
  %84 = fcmp olt float %83, 0x41DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0x41DFFFFFE0000000
  %86 = fcmp ogt float %85, 0xC1DFFFFFE0000000
  %87 = select i1 %86, float %85, float 0xC1DFFFFFE0000000
  %88 = fptosi float %87 to i32
  %89 = zext i32 %88 to i64
  %90 = shl nuw i64 %89, 32
  %91 = icmp slt i32 %81, 1
  %92 = icmp slt i32 %88, 1
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %106

94:                                               ; preds = %73
  %95 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 0
  store i8 0, i8* %95, align 8
  %96 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 1, i32 0
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %97, align 4
  %98 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 0, i64 2
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %99, align 4
  %100 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 0, i64 6
  store float 0.000000e+00, float* %100, align 4
  %101 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 0, i64 7
  store float 0.000000e+00, float* %101, align 4
  %102 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %102, align 4
  %103 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 1
  store i32 16, i32* %103, align 4
  %104 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 3
  %105 = bitcast %struct.SkImageInfo* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false)
  br label %196

106:                                              ; preds = %73
  %107 = sitofp i32 %81 to float
  %108 = load float, float* %32, align 4
  %109 = load float, float* %33, align 4
  %110 = fsub float %108, %109
  %111 = fdiv float %107, %110
  %112 = sitofp i32 %88 to float
  %113 = load float, float* %34, align 4
  %114 = load float, float* %37, align 4
  %115 = fsub float %113, %114
  %116 = fdiv float %112, %115
  %117 = bitcast %class.sk_sp.14* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #14
  %118 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %10, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %118, align 8
  %119 = icmp eq %class.SkColorSpace* %5, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %106
  %121 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 1 monotonic, !noalias !18
  store %class.SkColorSpace* %5, %class.SkColorSpace** %118, align 8, !alias.scope !18
  br label %124

123:                                              ; preds = %106
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.14* nonnull sret %10) #14
  br label %124

124:                                              ; preds = %120, %123
  %125 = icmp ult i32 %4, 21
  br i1 %125, label %127, label %126

126:                                              ; preds = %124
  call void @llvm.trap() #14
  unreachable

127:                                              ; preds = %124
  %128 = sext i32 %4 to i64
  %129 = getelementptr inbounds [21 x i64], [21 x i64]* @switch.table._ZN15CachedImageInfo4MakeERK6SkRectRK8SkMatrixP19SkTCopyOnFirstWriteIS3_E11SkColorTypeP12SkColorSpacei, i64 0, i64 %128
  %130 = load i64, i64* %129, align 8
  %131 = fcmp une float %111, 1.000000e+00
  %132 = fcmp une float %116, 1.000000e+00
  %133 = or i1 %131, %132
  br i1 %133, label %134, label %154

134:                                              ; preds = %127
  %135 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1
  %136 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1, i32 1
  %137 = load %class.SkMatrix*, %class.SkMatrix** %136, align 8
  %138 = icmp eq %class.SkMatrix* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  %140 = load %class.SkMatrix*, %class.SkMatrix** %15, align 8
  br label %149

141:                                              ; preds = %134
  %142 = bitcast %class.SkTCopyOnFirstWrite* %3 to i8**
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %135, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 4 %143, i64 40, i1 false) #14
  %145 = bitcast %class.SkMatrix** %136 to %class.SkTLazy**
  store %class.SkTLazy* %135, %class.SkTLazy** %145, align 8
  %146 = ptrtoint %class.SkTLazy* %135 to i64
  %147 = bitcast %class.SkTCopyOnFirstWrite* %3 to i64*
  store i64 %146, i64* %147, align 8
  %148 = bitcast %class.SkTLazy* %135 to %class.SkMatrix*
  br label %149

149:                                              ; preds = %139, %141
  %150 = phi %class.SkMatrix* [ %140, %139 ], [ %148, %141 ]
  %151 = fdiv float 1.000000e+00, %111
  %152 = fdiv float 1.000000e+00, %116
  %153 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* %150, float %151, float %152) #14
  br label %154

154:                                              ; preds = %127, %149
  %155 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 0
  store i8 1, i8* %155, align 8
  %156 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 1, i32 0
  store float %111, float* %156, align 4
  %157 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 1, i32 1
  store float %116, float* %157, align 4
  %158 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2
  %159 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #14
  %160 = insertelement <2 x float> undef, float %107, i32 0
  %161 = insertelement <2 x float> %160, float %112, i32 1
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %162, align 8
  %163 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %161, <2 x float>* %163, align 8
  %164 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 1
  %165 = bitcast %class.SkMatrix* %158 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %165, align 4, !alias.scope !23
  %166 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 0, i64 4
  %167 = bitcast float* %166 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %167, align 4, !alias.scope !23
  %168 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %168, align 4, !alias.scope !23
  store i32 16, i32* %164, align 4, !alias.scope !23
  %169 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* %158, %struct.SkRect* dereferenceable(16) %1, %struct.SkRect* nonnull dereferenceable(16) %12, i32 0) #14
  %170 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 3
  %171 = load %class.SkColorSpace*, %class.SkColorSpace** %118, align 8
  %172 = icmp eq %class.SkColorSpace* %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %154
  %174 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 1 monotonic
  %176 = load %class.SkColorSpace*, %class.SkColorSpace** %118, align 8
  %177 = bitcast %class.SkColorSpace* %176 to i8*
  br label %178

178:                                              ; preds = %173, %154
  %179 = phi i8* [ %177, %173 ], [ null, %154 ]
  %180 = phi %class.SkColorSpace* [ %176, %173 ], [ null, %154 ]
  %181 = ptrtoint %class.SkColorSpace* %171 to i64
  %182 = zext i32 %81 to i64
  %183 = or i64 %90, %182
  %184 = bitcast %struct.SkImageInfo* %170 to i64*
  store i64 %181, i64* %184, align 8, !alias.scope !28
  %185 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 3, i32 0, i32 1
  %186 = bitcast i32* %185 to i64*
  store i64 %130, i64* %186, align 8, !alias.scope !28
  %187 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %0, i64 0, i32 3, i32 1
  %188 = bitcast %struct.SkISize* %187 to i64*
  store i64 %183, i64* %188, align 8, !alias.scope !28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #14
  %189 = icmp eq %class.SkColorSpace* %180, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %178
  %191 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %195

194:                                              ; preds = %190
  call void @_ZdlPv(i8* %179) #15
  br label %195

195:                                              ; preds = %178, %190, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #14
  br label %196

196:                                              ; preds = %195, %94
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #14
  ret void
}

declare zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_119ImageFromPictureRec7VisitorERKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* readonly dereferenceable(24), i8*) #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %0, i64 3, i32 2
  %4 = bitcast %"struct.SkResourceCache::Rec"** %3 to i8*
  %5 = icmp eq i8* %4, %1
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.SkResourceCache::Rec"** %3 to %class.SkImage**
  %8 = load %class.SkImage*, %class.SkImage** %7, align 8
  %9 = icmp eq %class.SkImage* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %6
  %14 = bitcast i8* %1 to %class.SkImage**
  %15 = load %class.SkImage*, %class.SkImage** %14, align 8
  store %class.SkImage* %8, %class.SkImage** %14, align 8
  %16 = icmp eq %class.SkImage* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkImage, %class.SkImage* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkImage* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkImage* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #14
  br label %27

27:                                               ; preds = %2, %13, %17, %21
  ret i1 true
}

declare void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #1

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15SkPictureShader14onAppendStagesERK10SkStageRec(%class.SkPictureShader*, %struct.SkStageRec* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkTCopyOnFirstWrite, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %struct.SkStageRec, align 8
  %6 = bitcast %class.SkTCopyOnFirstWrite* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = bitcast %class.SkPictureShader* %0 to %class.SkShaderBase*
  %8 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 5
  %9 = load %class.SkMatrix*, %class.SkMatrix** %8, align 8
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %3, %class.SkShaderBase* %7, %class.SkMatrix* %9) #14
  %10 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %11 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %10, align 8
  %12 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %11, i32 17, i32 8) #14
  %13 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %11, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint i8* %12 to i64
  %17 = sub i64 %16, %15
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  store i8* %19, i8** %13, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %11, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI5sk_spI8SkShaderEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_, i32 %18) #14
  %20 = bitcast i8* %12 to %class.SkShader**
  store %class.SkShader* null, %class.SkShader** %20, align 8
  %21 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 6
  %23 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %22, align 8
  %24 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %23, i64 0, i32 2
  %25 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 3
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  call void @_ZNK15SkPictureShader12rasterShaderERK8SkMatrixP19SkTCopyOnFirstWriteIS0_E11SkColorTypeP12SkColorSpace(%class.sk_sp* nonnull sret %4, %class.SkPictureShader* %0, %class.SkMatrix* dereferenceable(40) %24, %class.SkTCopyOnFirstWrite* nonnull %3, i32 %26, %class.SkColorSpace* %28)
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %30 = bitcast %class.sk_sp* %4 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.SkShader* null, %class.SkShader** %29, align 8
  %32 = load %class.SkShader*, %class.SkShader** %20, align 8
  %33 = bitcast i8* %12 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq %class.SkShader* %32, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %2
  %36 = getelementptr inbounds %class.SkShader, %class.SkShader* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkShader* %32 to %class.SkRefCntBase*
  %41 = bitcast %class.SkShader* %32 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  call void %44(%class.SkRefCntBase* nonnull %40) #14
  br label %45

45:                                               ; preds = %2, %35, %39
  %46 = load %class.SkShader*, %class.SkShader** %29, align 8
  %47 = icmp eq %class.SkShader* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkShader* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkShader* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #14
  br label %58

58:                                               ; preds = %45, %48, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  %59 = load %class.SkShader*, %class.SkShader** %20, align 8
  %60 = icmp eq %class.SkShader* %59, null
  br i1 %60, label %84, label %61

61:                                               ; preds = %58
  %62 = bitcast %struct.SkStageRec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %62) #14
  %63 = bitcast %struct.SkStageRec* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 %63, i64 56, i1 false)
  %64 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 0
  %65 = load %class.SkMatrix*, %class.SkMatrix** %64, align 8
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = trunc i32 %67 to i8
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %61
  %71 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %65) #14
  %72 = zext i8 %71 to i32
  store i32 %72, i32* %66, align 4
  %73 = load %class.SkMatrix*, %class.SkMatrix** %64, align 8
  br label %74

74:                                               ; preds = %61, %70
  %75 = phi %class.SkMatrix* [ %73, %70 ], [ %65, %61 ]
  %76 = phi i32 [ %72, %70 ], [ %67, %61 ]
  %77 = and i32 %76, 15
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, %class.SkMatrix* null, %class.SkMatrix* %75
  %80 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %5, i64 0, i32 5
  store %class.SkMatrix* %79, %class.SkMatrix** %80, align 8
  %81 = bitcast i8* %12 to %class.SkShaderBase**
  %82 = load %class.SkShaderBase*, %class.SkShaderBase** %81, align 8
  %83 = call zeroext i1 @_ZNK12SkShaderBase12appendStagesERK10SkStageRec(%class.SkShaderBase* %82, %struct.SkStageRec* nonnull dereferenceable(56) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %62) #14
  br label %84

84:                                               ; preds = %58, %74
  %85 = phi i1 [ %83, %74 ], [ false, %58 ]
  %86 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1, i32 1
  %87 = load %class.SkMatrix*, %class.SkMatrix** %86, align 8
  %88 = icmp eq %class.SkMatrix* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %84
  store %class.SkMatrix* null, %class.SkMatrix** %86, align 8
  br label %90

90:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #14
  ret i1 %85
}

declare void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* sret, %class.SkShaderBase*, %class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK12SkShaderBase12appendStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkPictureShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkPictureShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 align 2 {
  %12 = alloca %class.SkTCopyOnFirstWrite, align 8
  %13 = alloca %class.sk_sp, align 8
  %14 = bitcast %class.SkTCopyOnFirstWrite* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %class.SkPictureShader* %1 to %class.SkShaderBase*
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %12, %class.SkShaderBase* %15, %class.SkMatrix* %7) #14
  %16 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %10, i32 17, i32 8) #14
  %17 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %10, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint i8* %16 to i64
  %21 = sub i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds i8, i8* %16, i64 8
  store i8* %23, i8** %17, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %10, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI5sk_spI8SkShaderEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_, i32 %22) #14
  %24 = bitcast i8* %16 to %class.SkShader**
  store %class.SkShader* null, %class.SkShader** %24, align 8
  %25 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14
  %26 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %6, i64 0, i32 2
  %27 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %30 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  call void @_ZNK15SkPictureShader12rasterShaderERK8SkMatrixP19SkTCopyOnFirstWriteIS0_E11SkColorTypeP12SkColorSpace(%class.sk_sp* nonnull sret %13, %class.SkPictureShader* %1, %class.SkMatrix* dereferenceable(40) %26, %class.SkTCopyOnFirstWrite* nonnull %12, i32 %28, %class.SkColorSpace* %30)
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %32 = bitcast %class.sk_sp* %13 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkShader* null, %class.SkShader** %31, align 8
  %34 = load %class.SkShader*, %class.SkShader** %24, align 8
  %35 = bitcast i8* %16 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkShader* %34, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %11
  %38 = getelementptr inbounds %class.SkShader, %class.SkShader* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkShader* %34 to %class.SkRefCntBase*
  %43 = bitcast %class.SkShader* %34 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #14
  br label %47

47:                                               ; preds = %11, %37, %41
  %48 = load %class.SkShader*, %class.SkShader** %31, align 8
  %49 = icmp eq %class.SkShader* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.SkShader, %class.SkShader* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.SkShader* %48 to %class.SkRefCntBase*
  %56 = bitcast %class.SkShader* %48 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #14
  br label %60

60:                                               ; preds = %47, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14
  %61 = load %class.SkShader*, %class.SkShader** %24, align 8
  %62 = icmp eq %class.SkShader* %61, null
  br i1 %62, label %63, label %72

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %64, align 8
  %65 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %66, align 8
  %67 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %68, align 8
  %69 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %69, align 8
  %70 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %70, align 8
  %71 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %71, align 8
  br label %76

72:                                               ; preds = %60
  %73 = bitcast %class.SkShader* %61 to %class.SkShaderBase*
  %74 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 0
  %75 = load %class.SkMatrix*, %class.SkMatrix** %74, align 8
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret %0, %class.SkShaderBase* nonnull %73, %"class.skvm::Builder"* %2, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %3, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %5, %class.SkMatrixProvider* dereferenceable(112) %6, %class.SkMatrix* %75, %class.SkColorInfo* dereferenceable(16) %8, %"struct.skvm::Uniforms"* %9, %class.SkArenaAlloc* %10) #14
  br label %76

76:                                               ; preds = %72, %63
  %77 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1, i32 1
  %78 = load %class.SkMatrix*, %class.SkMatrix** %77, align 8
  %79 = icmp eq %class.SkMatrix* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  store %class.SkMatrix* null, %class.SkMatrix** %77, align 8
  br label %81

81:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #14
  ret void
}

declare void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaderBase::Context"* @_ZNK15SkPictureShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc(%class.SkPictureShader*, %"struct.SkShaderBase::ContextRec"* nocapture readonly dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkTCopyOnFirstWrite, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %"struct.SkShaderBase::ContextRec", align 8
  %7 = bitcast %class.SkTCopyOnFirstWrite* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = bitcast %class.SkPictureShader* %0 to %class.SkShaderBase*
  %9 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 1
  %10 = load %class.SkMatrix*, %class.SkMatrix** %9, align 8
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %4, %class.SkShaderBase* %8, %class.SkMatrix* %10) #14
  %11 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %12, align 8
  %13 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 0
  %14 = load %class.SkMatrix*, %class.SkMatrix** %13, align 8
  %15 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 4
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  call void @_ZNK15SkPictureShader12rasterShaderERK8SkMatrixP19SkTCopyOnFirstWriteIS0_E11SkColorTypeP12SkColorSpace(%class.sk_sp* nonnull sret %5, %class.SkPictureShader* %0, %class.SkMatrix* dereferenceable(40) %14, %class.SkTCopyOnFirstWrite* nonnull %4, i32 %16, %class.SkColorSpace* %18)
  %19 = load %class.SkShader*, %class.SkShader** %12, align 8
  %20 = icmp eq %class.SkShader* %19, null
  br i1 %20, label %73, label %21

21:                                               ; preds = %3
  %22 = bitcast %"struct.SkShaderBase::ContextRec"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #14
  %23 = bitcast %"struct.SkShaderBase::ContextRec"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %23, i64 40, i1 false)
  %24 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 0
  %25 = load %class.SkMatrix*, %class.SkMatrix** %24, align 8
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = trunc i32 %27 to i8
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %21
  %31 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %25) #14
  %32 = zext i8 %31 to i32
  store i32 %32, i32* %26, align 4
  %33 = load %class.SkMatrix*, %class.SkMatrix** %24, align 8
  br label %34

34:                                               ; preds = %21, %30
  %35 = phi %class.SkMatrix* [ %33, %30 ], [ %25, %21 ]
  %36 = phi i32 [ %32, %30 ], [ %27, %21 ]
  %37 = and i32 %36, 15
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, %class.SkMatrix* null, %class.SkMatrix* %35
  %40 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %6, i64 0, i32 1
  store %class.SkMatrix* %39, %class.SkMatrix** %40, align 8
  %41 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %2, i32 137, i32 8) #14
  %42 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %2, i64 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = ptrtoint i8* %41 to i64
  %46 = sub i64 %45, %44
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds i8, i8* %41, i64 128
  store i8* %48, i8** %42, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %2, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeIN15SkPictureShader20PictureShaderContextEJRKS2_RN12SkShaderBase10ContextRecE5sk_spI8SkShaderERPS_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSE_ENUlPcE_8__invokeESN_, i32 %47) #14
  %49 = bitcast %class.sk_sp* %5 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.SkShader* null, %class.SkShader** %12, align 8
  %51 = bitcast i8* %41 to %"class.SkShaderBase::Context"*
  call void @_ZN12SkShaderBase7ContextC2ERKS_RKNS_10ContextRecE(%"class.SkShaderBase::Context"* %51, %class.SkShaderBase* dereferenceable(56) %8, %"struct.SkShaderBase::ContextRec"* nonnull dereferenceable(40) %6) #14
  %52 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15SkPictureShader20PictureShaderContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds i8, i8* %41, i64 104
  %54 = bitcast i8* %53 to i64*
  store i64 %50, i64* %54, align 8
  %55 = inttoptr i64 %50 to %class.SkShaderBase*
  %56 = call %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase* %55, %"struct.SkShaderBase::ContextRec"* nonnull dereferenceable(40) %6, %class.SkArenaAlloc* %2) #14
  %57 = getelementptr inbounds i8, i8* %41, i64 112
  %58 = bitcast i8* %57 to %"class.SkShaderBase::Context"**
  store %"class.SkShaderBase::Context"* %56, %"class.SkShaderBase::Context"** %58, align 8
  %59 = icmp eq %"class.SkShaderBase::Context"* %56, null
  %60 = select i1 %59, %"class.SkShaderBase::Context"* null, %"class.SkShaderBase::Context"* %51
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #14
  %61 = load %class.SkShader*, %class.SkShader** %12, align 8
  %62 = icmp eq %class.SkShader* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %34
  %64 = getelementptr inbounds %class.SkShader, %class.SkShader* %61, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %class.SkShader* %61 to %class.SkRefCntBase*
  %69 = bitcast %class.SkShader* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %3, %34, %63, %67
  %74 = phi %"class.SkShaderBase::Context"* [ %60, %34 ], [ %60, %63 ], [ %60, %67 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %75 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 1, i32 1
  %76 = load %class.SkMatrix*, %class.SkMatrix** %75, align 8
  %77 = icmp eq %class.SkMatrix* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  store %class.SkMatrix* null, %class.SkMatrix** %75, align 8
  br label %79

79:                                               ; preds = %73, %78
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #14
  ret %"class.SkShaderBase::Context"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkPictureShader20PictureShaderContextC2ERKS_RKN12SkShaderBase10ContextRecE5sk_spI8SkShaderEP12SkArenaAlloc(%"class.SkPictureShader::PictureShaderContext"*, %class.SkPictureShader* dereferenceable(96), %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.sk_sp* nocapture, %class.SkArenaAlloc*) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.SkPictureShader::PictureShaderContext"* %0 to %"class.SkShaderBase::Context"*
  %7 = bitcast %class.SkPictureShader* %1 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBase7ContextC2ERKS_RKNS_10ContextRecE(%"class.SkShaderBase::Context"* %6, %class.SkShaderBase* dereferenceable(56) %7, %"struct.SkShaderBase::ContextRec"* dereferenceable(40) %2) #14
  %8 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15SkPictureShader20PictureShaderContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %11 = bitcast %class.sk_sp* %3 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkShader* null, %class.SkShader** %10, align 8
  %13 = bitcast %class.sk_sp* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = inttoptr i64 %12 to %class.SkShaderBase*
  %15 = tail call %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase* %14, %"struct.SkShaderBase::ContextRec"* dereferenceable(40) %2, %class.SkArenaAlloc* %4) #14
  %16 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 2
  store %"class.SkShaderBase::Context"* %15, %"class.SkShaderBase::Context"** %16, align 8
  ret void
}

declare void @_ZN12SkShaderBase7ContextC2ERKS_RKNS_10ContextRecE(%"class.SkShaderBase::Context"*, %class.SkShaderBase* dereferenceable(56), %"struct.SkShaderBase::ContextRec"* dereferenceable(40)) unnamed_addr #1

declare %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15SkPictureShader20PictureShaderContext8getFlagsEv(%"class.SkPictureShader::PictureShaderContext"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 2
  %3 = load %"class.SkShaderBase::Context"*, %"class.SkShaderBase::Context"** %2, align 8
  %4 = bitcast %"class.SkShaderBase::Context"* %3 to i32 (%"class.SkShaderBase::Context"*)***
  %5 = load i32 (%"class.SkShaderBase::Context"*)**, i32 (%"class.SkShaderBase::Context"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.SkShaderBase::Context"*)*, i32 (%"class.SkShaderBase::Context"*)** %5, i64 2
  %7 = load i32 (%"class.SkShaderBase::Context"*)*, i32 (%"class.SkShaderBase::Context"*)** %6, align 8
  %8 = tail call i32 %7(%"class.SkShaderBase::Context"* %3) #14
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkPictureShader20PictureShaderContext9shadeSpanEiiPji(%"class.SkPictureShader::PictureShaderContext"* nocapture readonly, i32, i32, i32*, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 2
  %7 = load %"class.SkShaderBase::Context"*, %"class.SkShaderBase::Context"** %6, align 8
  %8 = bitcast %"class.SkShaderBase::Context"* %7 to void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)***
  %9 = load void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)**, void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)*, void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)** %9, i64 3
  %11 = load void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)*, void (%"class.SkShaderBase::Context"*, i32, i32, i32*, i32)** %10, align 8
  tail call void %11(%"class.SkShaderBase::Context"* %7, i32 %1, i32 %2, i32* %3, i32 %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgs(%class.SkPictureShader*, %struct.GrFPArgs* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkTCopyOnFirstWrite, align 8
  %4 = alloca %class.sk_sp.14, align 8
  %5 = alloca %struct.CachedImageInfo, align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.GrUniqueKey, align 8
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.sk_sp.160, align 8
  %10 = alloca %class.GrSwizzle, align 2
  %11 = alloca %class.sk_sp.13, align 8
  %12 = alloca %class.sk_sp.19, align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %class.GrSurfaceProxyView, align 8
  %15 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 0
  %16 = load %class.GrRecordingContext*, %class.GrRecordingContext** %15, align 8
  %17 = bitcast %class.SkTCopyOnFirstWrite* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 56, i1 false)
  %18 = bitcast %class.SkPictureShader* %0 to %class.SkShaderBase*
  %19 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 2
  %20 = load %class.SkMatrix*, %class.SkMatrix** %19, align 8
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %3, %class.SkShaderBase* %18, %class.SkMatrix* %20) #14
  %21 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %22 = load %class.GrColorInfo*, %class.GrColorInfo** %21, align 8
  %23 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %38 [
    i32 0, label %41
    i32 1, label %39
    i32 2, label %39
    i32 3, label %39
    i32 4, label %39
    i32 5, label %25
    i32 6, label %26
    i32 7, label %27
    i32 8, label %28
    i32 9, label %29
    i32 10, label %30
    i32 11, label %39
    i32 12, label %41
    i32 13, label %31
    i32 14, label %32
    i32 15, label %33
    i32 16, label %34
    i32 21, label %41
    i32 22, label %41
    i32 23, label %41
    i32 17, label %35
    i32 18, label %36
    i32 20, label %39
    i32 19, label %37
    i32 24, label %41
    i32 25, label %41
    i32 26, label %41
    i32 27, label %41
    i32 28, label %41
    i32 30, label %41
    i32 29, label %41
  ]

25:                                               ; preds = %2
  br label %39

26:                                               ; preds = %2
  br label %39

27:                                               ; preds = %2
  br label %39

28:                                               ; preds = %2
  br label %39

29:                                               ; preds = %2
  br label %39

30:                                               ; preds = %2
  br label %39

31:                                               ; preds = %2
  br label %39

32:                                               ; preds = %2
  br label %39

33:                                               ; preds = %2
  br label %39

34:                                               ; preds = %2
  br label %39

35:                                               ; preds = %2
  br label %39

36:                                               ; preds = %2
  br label %39

37:                                               ; preds = %2
  br label %39

38:                                               ; preds = %2
  call void @llvm.trap() #14
  unreachable

39:                                               ; preds = %2, %2, %2, %2, %2, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %2
  %40 = phi i32 [ 4, %25 ], [ 5, %26 ], [ 15, %27 ], [ 6, %28 ], [ 7, %29 ], [ 8, %30 ], [ 16, %31 ], [ 13, %32 ], [ 12, %33 ], [ 14, %34 ], [ 18, %35 ], [ 19, %36 ], [ 17, %37 ], [ %24, %2 ], [ %24, %2 ], [ %24, %2 ], [ %24, %2 ], [ %24, %2 ], [ %24, %2 ]
  br label %41

41:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %39
  %42 = phi i32 [ %40, %39 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ], [ 4, %2 ]
  %43 = bitcast %class.sk_sp.14* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  %44 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %4, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %44, align 8
  %45 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %22, i64 0, i32 0, i32 0
  %46 = load %class.SkColorSpace*, %class.SkColorSpace** %45, align 8
  %47 = icmp eq %class.SkColorSpace* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !31
  store %class.SkColorSpace* %46, %class.SkColorSpace** %44, align 8, !alias.scope !31
  br label %53

51:                                               ; preds = %41
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.14* nonnull sret %4) #14
  %52 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  br label %53

53:                                               ; preds = %48, %51
  %54 = phi %class.SkColorSpace* [ %46, %48 ], [ %52, %51 ]
  %55 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %55) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkSize, %class.SkMatrix, [4 x i8], %struct.SkImageInfo }, { i8, [3 x i8], %struct.SkSize, %class.SkMatrix, [4 x i8], %struct.SkImageInfo }* @__const._ZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgs.info, i64 0, i32 0), i64 80, i1 false)
  %56 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 3
  %57 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 1
  %58 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %57, align 8
  %59 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %58, i64 0, i32 2
  %60 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %16, i64 0, i32 0, i32 0
  %61 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %60) #14
  %62 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %61, i64 0, i32 11
  %63 = load i32, i32* %62, align 4
  call void @_ZN15CachedImageInfo4MakeERK6SkRectRK8SkMatrixP19SkTCopyOnFirstWriteIS3_E11SkColorTypeP12SkColorSpacei(%struct.CachedImageInfo* nonnull sret %5, %struct.SkRect* dereferenceable(16) %56, %class.SkMatrix* dereferenceable(40) %59, %class.SkTCopyOnFirstWrite* nonnull %3, i32 %42, %class.SkColorSpace* %54, i32 %63)
  %64 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #14
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %66 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %66, align 16
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %68, align 16
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %69, align 16
  store i32 16, i32* %65, align 4
  %70 = load i8, i8* %55, align 8, !range !8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %424, label %72

72:                                               ; preds = %53
  %73 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 0
  %74 = load %class.SkMatrix*, %class.SkMatrix** %73, align 8
  %75 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = trunc i32 %76 to i8
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %74) #14
  %81 = zext i8 %80 to i32
  store i32 %81, i32* %75, align 4
  br label %82

82:                                               ; preds = %79, %72
  %83 = phi i32 [ %81, %79 ], [ %76, %72 ]
  %84 = and i32 %83, 15
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #14
  br label %90

88:                                               ; preds = %82
  %89 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %74, %class.SkMatrix* nonnull %6) #14
  br i1 %89, label %90, label %424

90:                                               ; preds = %86, %88
  %91 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 3
  %92 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 3, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  switch i32 %93, label %94 [
    i32 20, label %97
    i32 19, label %97
    i32 18, label %97
    i32 17, label %97
    i32 16, label %97
    i32 11, label %97
  ]

94:                                               ; preds = %90
  %95 = call i32 @_ZNK18GrRecordingContext33maxSurfaceSampleCountForColorTypeE11SkColorType(%class.GrRecordingContext* %16, i32 %93) #14
  %96 = icmp sgt i32 %95, 0
  br i1 %96, label %130, label %97

97:                                               ; preds = %90, %90, %90, %90, %90, %90, %94
  %98 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 3, i32 1
  %99 = bitcast %struct.SkISize* %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !36
  %101 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 3, i32 0, i32 2
  %102 = load i32, i32* %101, align 4, !noalias !39
  %103 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %91, i64 0, i32 0, i32 0, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %106, label %111

106:                                              ; preds = %97
  %107 = zext i32 %102 to i64
  %108 = shl nuw i64 %107, 32
  %109 = or i64 %108, 4
  %110 = bitcast %struct.SkImageInfo* %91 to i64*
  store i64 0, i64* %110, align 8
  br label %127

111:                                              ; preds = %97
  %112 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 1 monotonic, !noalias !42
  %114 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %115 = ptrtoint %class.SkColorSpace* %104 to i64
  %116 = zext i32 %102 to i64
  %117 = shl nuw i64 %116, 32
  %118 = or i64 %117, 4
  %119 = bitcast %struct.SkImageInfo* %91 to i64*
  store i64 %115, i64* %119, align 8
  %120 = icmp eq %class.SkColorSpace* %114, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = bitcast %class.SkColorSpace* %114 to i8*
  call void @_ZdlPv(i8* %126) #15
  br label %127

127:                                              ; preds = %125, %121, %111, %106
  %128 = phi i64 [ %109, %106 ], [ %118, %111 ], [ %118, %121 ], [ %118, %125 ]
  %129 = bitcast i32* %92 to i64*
  store i64 %128, i64* %129, align 8
  store i64 %100, i64* %99, align 8
  br label %130

130:                                              ; preds = %127, %94
  %131 = load atomic i8, i8* bitcast (i64* @_ZGVZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain to i8*) acquire, align 8
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %139, !prof !45

133:                                              ; preds = %130
  %134 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain) #14
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  %137 = call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #14
  store i32 %137, i32* @_ZZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain, align 4
  %138 = call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain) #14
  br label %139

139:                                              ; preds = %130, %136, %133
  %140 = bitcast %class.GrUniqueKey* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %140) #14
  %141 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %142 = bitcast i32* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 24, i1 false)
  %143 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %7, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %144, i32** %143, align 8
  store i32 0, i32* %144, align 8
  %145 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %145, align 4
  %146 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %7, i64 0, i32 1, i32 0
  %147 = bitcast %class.SkData** %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 16, i1 false) #14
  %148 = load i32, i32* @_ZZNK15SkPictureShader19asFragmentProcessorERK8GrFPArgsE7kDomain, align 4
  %149 = call i8* @_Z15sk_malloc_throwmm(i64 12, i64 4) #14
  %150 = bitcast %class.GrUniqueKey* %7 to i8**
  store i8* %149, i8** %150, align 8
  %151 = or i32 %148, 3145728
  %152 = getelementptr inbounds i8, i8* %149, i64 4
  %153 = bitcast i8* %152 to i32*
  store i32 %151, i32* %153, align 4
  %154 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %7, i64 0, i32 2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8** %154, align 8
  %155 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %156 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %155, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %143, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 2
  store i32 %157, i32* %159, align 4
  %160 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %155, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %158, i64 3
  store i32 %161, i32* %162, align 4
  %163 = getelementptr inbounds i32, i32* %158, i64 4
  store i32 %42, i32* %163, align 4
  %164 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 2, i32 0
  %165 = load %class.SkPicture*, %class.SkPicture** %164, align 8
  %166 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %165, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds i32, i32* %158, i64 5
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds i32, i32* %158, i64 6
  %170 = bitcast i32* %169 to i8*
  %171 = bitcast %struct.SkRect* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* align 8 %171, i64 16, i1 false)
  %172 = getelementptr inbounds i32, i32* %158, i64 10
  %173 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 1
  %174 = bitcast %struct.SkSize* %173 to i64*
  %175 = bitcast i32* %172 to i64*
  %176 = load i64, i64* %174, align 4
  store i64 %176, i64* %175, align 4
  %177 = getelementptr inbounds i32, i32* %158, i64 1
  %178 = load i32, i32* %177, align 4
  %179 = lshr i32 %178, 16
  %180 = zext i32 %179 to i64
  %181 = add nsw i64 %180, -4
  %182 = call i32 @_Z17GrResourceKeyHashPKjm(i32* %177, i64 %181) #14
  store i32 %182, i32* %158, align 4
  %183 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %16, i64 0, i32 5, i32 0, i32 0, i32 0
  %184 = load %class.GrProxyProvider*, %class.GrProxyProvider** %183, align 8
  %185 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #14
  %186 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %187 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  %188 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  %189 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 16, i1 false)
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %186, align 8
  store i32 0, i32* %187, align 8
  %190 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %190, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %191 = bitcast %class.sk_sp.160* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #14
  %192 = getelementptr inbounds %class.sk_sp.160, %class.sk_sp.160* %9, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %192, align 8
  call void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.160* nonnull sret %9, %class.GrProxyProvider* %184, %class.GrUniqueKey* nonnull dereferenceable(56) %7, i32 1) #14
  %193 = load %class.GrTextureProxy*, %class.GrTextureProxy** %192, align 8
  %194 = icmp eq %class.GrTextureProxy* %193, null
  br i1 %194, label %230, label %195

195:                                              ; preds = %139
  %196 = bitcast %class.GrTextureProxy* %193 to i8**
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr i8, i8* %197, i64 -24
  %199 = bitcast i8* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 8
  %202 = bitcast %class.GrTextureProxy* %193 to i8*
  %203 = getelementptr inbounds i8, i8* %202, i64 %201
  %204 = bitcast i8* %203 to i32*
  %205 = atomicrmw add i32* %204, i32 1 monotonic
  %206 = load i8*, i8** %196, align 8
  %207 = getelementptr i8, i8* %206, i64 -24
  %208 = bitcast i8* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = getelementptr inbounds i8, i8* %202, i64 %209
  %211 = ptrtoint i8* %210 to i64
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %212 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %10, i64 0, i32 0
  %213 = load i16, i16* %212, align 2
  %214 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %186, align 8
  %215 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %211, i64* %215, align 8
  %216 = icmp eq %class.GrSurfaceProxy* %214, null
  br i1 %216, label %229, label %217

217:                                              ; preds = %195
  %218 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %214, i64 0, i32 1
  %219 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = atomicrmw add i32* %219, i32 -1 acq_rel
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %229

222:                                              ; preds = %217
  %223 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %218, i64 -2
  %224 = bitcast %class.SkNVRefCnt.117* %223 to %class.GrSurfaceProxy*
  %225 = bitcast %class.SkNVRefCnt.117* %223 to void (%class.GrSurfaceProxy*)***
  %226 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %225, align 8
  %227 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %226, i64 1
  %228 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %227, align 8
  call void %228(%class.GrSurfaceProxy* nonnull %224) #14
  br label %229

229:                                              ; preds = %195, %217, %222
  store i32 0, i32* %187, align 8
  store i16 %213, i16* %188, align 4
  br label %327

230:                                              ; preds = %139
  %231 = bitcast %class.sk_sp.13* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #14
  %232 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %11, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %232, align 8
  call void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.19* nonnull sret %12, %class.GrRecordingContext* %16, i1 zeroext true, %struct.SkImageInfo* dereferenceable(24) %91, i32 0, i32 0, %class.SkSurfaceProps* null, i1 zeroext false) #14
  %233 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %12, i64 0, i32 0
  %234 = load %class.SkSurface*, %class.SkSurface** %233, align 8
  %235 = icmp eq %class.SkSurface* %234, null
  br i1 %235, label %236, label %237

236:                                              ; preds = %230
  store %class.SkImage* null, %class.SkImage** %232, align 8, !alias.scope !46
  br label %326

237:                                              ; preds = %230
  %238 = load %class.SkPicture*, %class.SkPicture** %164, align 8
  %239 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %234) #14, !noalias !46
  %240 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 2
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %239, %class.SkMatrix* dereferenceable(40) %240) #14, !noalias !46
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %239, %class.SkPicture* %238, %class.SkMatrix* null, %class.SkPaint* null) #14, !noalias !46
  %241 = load %class.SkSurface*, %class.SkSurface** %233, align 8, !noalias !46
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.13* nonnull sret %11, %class.SkSurface* %241) #14
  %242 = load %class.SkSurface*, %class.SkSurface** %233, align 8
  %243 = icmp eq %class.SkSurface* %242, null
  br i1 %243, label %254, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %242, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 -1 acq_rel
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %254

248:                                              ; preds = %244
  %249 = bitcast %class.SkSurface* %242 to %class.SkRefCntBase*
  %250 = bitcast %class.SkSurface* %242 to void (%class.SkRefCntBase*)***
  %251 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %250, align 8
  %252 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %251, i64 2
  %253 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, align 8
  call void %253(%class.SkRefCntBase* nonnull %249) #14
  br label %254

254:                                              ; preds = %237, %244, %248
  %255 = load %class.SkImage*, %class.SkImage** %232, align 8
  %256 = icmp eq %class.SkImage* %255, null
  br i1 %256, label %326, label %257

257:                                              ; preds = %254
  %258 = bitcast %class.SkImage* %255 to %class.SkImage_Base*
  %259 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #14
  %260 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %262 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %263 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 -86, i64 24, i1 false)
  call void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* nonnull sret %13, %class.SkImage_Base* nonnull %258, %class.GrRecordingContext* %16, i1 zeroext false, i32 0) #14
  %264 = bitcast %"class.std::__1::tuple"* %13 to i64*
  %265 = load i64, i64* %264, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %260, align 8
  %266 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %186, align 8
  %267 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %265, i64* %267, align 8
  %268 = icmp eq %class.GrSurfaceProxy* %266, null
  %269 = inttoptr i64 %265 to %class.GrSurfaceProxy*
  br i1 %268, label %284, label %270

270:                                              ; preds = %257
  %271 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %266, i64 0, i32 1
  %272 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = atomicrmw add i32* %272, i32 -1 acq_rel
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %282

275:                                              ; preds = %270
  %276 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %271, i64 -2
  %277 = bitcast %class.SkNVRefCnt.117* %276 to %class.GrSurfaceProxy*
  %278 = bitcast %class.SkNVRefCnt.117* %276 to void (%class.GrSurfaceProxy*)***
  %279 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %278, align 8
  %280 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %279, i64 1
  %281 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %280, align 8
  call void %281(%class.GrSurfaceProxy* nonnull %277) #14
  br label %282

282:                                              ; preds = %275, %270
  %283 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %186, align 8
  br label %284

284:                                              ; preds = %282, %257
  %285 = phi %class.GrSurfaceProxy* [ %283, %282 ], [ %269, %257 ]
  %286 = load i32, i32* %261, align 8
  store i32 %286, i32* %187, align 8
  %287 = load i16, i16* %262, align 4
  store i16 %287, i16* %188, align 4
  %288 = icmp eq %class.GrSurfaceProxy* %285, null
  br i1 %288, label %295, label %289

289:                                              ; preds = %284
  %290 = bitcast %class.GrSurfaceProxy* %285 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %291 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %290, align 8
  %292 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %291, i64 3
  %293 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %292, align 8
  %294 = call %class.GrTextureProxy* %293(%class.GrSurfaceProxy* nonnull %285) #14
  br label %295

295:                                              ; preds = %284, %289
  %296 = phi %class.GrTextureProxy* [ %294, %289 ], [ null, %284 ]
  %297 = call zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider* %184, %class.GrUniqueKey* nonnull dereferenceable(56) %7, %class.GrTextureProxy* %296) #14
  %298 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %260, align 8
  %299 = icmp eq %class.GrSurfaceProxy* %298, null
  br i1 %299, label %312, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %298, i64 0, i32 1
  %302 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = atomicrmw add i32* %302, i32 -1 acq_rel
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %312

305:                                              ; preds = %300
  %306 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %301, i64 -2
  %307 = bitcast %class.SkNVRefCnt.117* %306 to %class.GrSurfaceProxy*
  %308 = bitcast %class.SkNVRefCnt.117* %306 to void (%class.GrSurfaceProxy*)***
  %309 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %308, align 8
  %310 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %309, i64 1
  %311 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %310, align 8
  call void %311(%class.GrSurfaceProxy* nonnull %307) #14
  br label %312

312:                                              ; preds = %305, %300, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #14
  %313 = load %class.SkImage*, %class.SkImage** %232, align 8
  %314 = icmp eq %class.SkImage* %313, null
  br i1 %314, label %325, label %315

315:                                              ; preds = %312
  %316 = getelementptr inbounds %class.SkImage, %class.SkImage* %313, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = atomicrmw add i32* %316, i32 -1 acq_rel
  %318 = icmp eq i32 %317, 1
  br i1 %318, label %319, label %325

319:                                              ; preds = %315
  %320 = bitcast %class.SkImage* %313 to %class.SkRefCntBase*
  %321 = bitcast %class.SkImage* %313 to void (%class.SkRefCntBase*)***
  %322 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %321, align 8
  %323 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %322, i64 2
  %324 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %323, align 8
  call void %324(%class.SkRefCntBase* nonnull %320) #14
  br label %325

325:                                              ; preds = %312, %315, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #14
  br label %327

326:                                              ; preds = %254, %236
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #14
  br label %327

327:                                              ; preds = %229, %325, %326
  %328 = phi i32 [ 1, %326 ], [ 0, %325 ], [ 0, %229 ]
  %329 = load %class.GrTextureProxy*, %class.GrTextureProxy** %192, align 8
  %330 = icmp eq %class.GrTextureProxy* %329, null
  br i1 %330, label %350, label %331

331:                                              ; preds = %327
  %332 = bitcast %class.GrTextureProxy* %329 to i8**
  %333 = load i8*, i8** %332, align 8
  %334 = getelementptr i8, i8* %333, i64 -24
  %335 = bitcast i8* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = add i64 %336, 8
  %338 = bitcast %class.GrTextureProxy* %329 to i8*
  %339 = getelementptr inbounds i8, i8* %338, i64 %337
  %340 = bitcast i8* %339 to i32*
  %341 = atomicrmw add i32* %340, i32 -1 acq_rel
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %350

343:                                              ; preds = %331
  %344 = getelementptr inbounds i8, i8* %338, i64 %336
  %345 = bitcast i8* %344 to %class.GrSurfaceProxy*
  %346 = bitcast i8* %344 to void (%class.GrSurfaceProxy*)***
  %347 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %346, align 8
  %348 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %347, i64 1
  %349 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %348, align 8
  call void %349(%class.GrSurfaceProxy* nonnull %345) #14
  br label %350

350:                                              ; preds = %327, %331, %343
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #14
  %351 = icmp eq i32 %328, 0
  br i1 %351, label %352, label %393

352:                                              ; preds = %350
  %353 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 4
  %354 = load i32, i32* %353, align 8
  %355 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 5
  %356 = load i32, i32* %355, align 4
  %357 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 6
  %358 = load i32, i32* %357, align 8
  %359 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  %360 = load i64, i64* %359, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %186, align 8
  %361 = bitcast %class.GrSurfaceProxyView* %14 to i64*
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 1
  %363 = load i32, i32* %187, align 8
  store i32 %363, i32* %362, align 8
  %364 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 2, i32 0
  %365 = load i16, i16* %188, align 4
  store i16 %365, i16* %364, align 4
  %366 = zext i32 %358 to i64
  %367 = shl nuw i64 %366, 32
  %368 = shl i32 %356, 8
  %369 = and i32 %368, 65280
  %370 = and i32 %354, 255
  %371 = or i32 %370, %369
  %372 = or i32 %371, -1431699456
  %373 = zext i32 %372 to i64
  %374 = or i64 %367, %373
  %375 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %60) #14
  %376 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %14, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %6, i64 %374, i32 0, %class.GrCaps* dereferenceable(232) %375, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #14
  %377 = ptrtoint %class.GrFragmentProcessor* %376 to i64
  %378 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 0, i32 0
  %379 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %378, align 8
  %380 = icmp eq %class.GrSurfaceProxy* %379, null
  br i1 %380, label %393, label %381

381:                                              ; preds = %352
  %382 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %379, i64 0, i32 1
  %383 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %382, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = atomicrmw add i32* %383, i32 -1 acq_rel
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %393

386:                                              ; preds = %381
  %387 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %382, i64 -2
  %388 = bitcast %class.SkNVRefCnt.117* %387 to %class.GrSurfaceProxy*
  %389 = bitcast %class.SkNVRefCnt.117* %387 to void (%class.GrSurfaceProxy*)***
  %390 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %389, align 8
  %391 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %390, i64 1
  %392 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %391, align 8
  call void %392(%class.GrSurfaceProxy* nonnull %388) #14
  br label %393

393:                                              ; preds = %386, %381, %352, %350
  %394 = phi i64 [ 0, %350 ], [ %377, %352 ], [ %377, %381 ], [ %377, %386 ]
  %395 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %186, align 8
  %396 = icmp eq %class.GrSurfaceProxy* %395, null
  br i1 %396, label %409, label %397

397:                                              ; preds = %393
  %398 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %395, i64 0, i32 1
  %399 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %398, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = atomicrmw add i32* %399, i32 -1 acq_rel
  %401 = icmp eq i32 %400, 1
  br i1 %401, label %402, label %409

402:                                              ; preds = %397
  %403 = getelementptr inbounds %class.SkNVRefCnt.117, %class.SkNVRefCnt.117* %398, i64 -2
  %404 = bitcast %class.SkNVRefCnt.117* %403 to %class.GrSurfaceProxy*
  %405 = bitcast %class.SkNVRefCnt.117* %403 to void (%class.GrSurfaceProxy*)***
  %406 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %405, align 8
  %407 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %406, i64 1
  %408 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %407, align 8
  call void %408(%class.GrSurfaceProxy* nonnull %404) #14
  br label %409

409:                                              ; preds = %402, %397, %393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #14
  %410 = load %class.SkData*, %class.SkData** %146, align 8
  %411 = icmp eq %class.SkData* %410, null
  br i1 %411, label %418, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds %class.SkData, %class.SkData* %410, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = atomicrmw add i32* %413, i32 -1 acq_rel
  %415 = icmp eq i32 %414, 1
  br i1 %415, label %416, label %418

416:                                              ; preds = %412
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %410) #14
  %417 = bitcast %class.SkData* %410 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %417) #14
  br label %418

418:                                              ; preds = %416, %412, %409
  %419 = load i32*, i32** %143, align 8
  %420 = icmp eq i32* %419, %144
  br i1 %420, label %423, label %421

421:                                              ; preds = %418
  %422 = bitcast i32* %419 to i8*
  call void @_Z7sk_freePv(i8* %422) #14
  br label %423

423:                                              ; preds = %418, %421
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %140) #14
  br label %424

424:                                              ; preds = %88, %53, %423
  %425 = phi i64 [ %394, %423 ], [ 0, %53 ], [ 0, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #14
  %426 = getelementptr inbounds %struct.CachedImageInfo, %struct.CachedImageInfo* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %427 = load %class.SkColorSpace*, %class.SkColorSpace** %426, align 8
  %428 = icmp eq %class.SkColorSpace* %427, null
  br i1 %428, label %435, label %429

429:                                              ; preds = %424
  %430 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %427, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = atomicrmw add i32* %430, i32 -1 acq_rel
  %432 = icmp eq i32 %431, 1
  br i1 %432, label %433, label %435

433:                                              ; preds = %429
  %434 = bitcast %class.SkColorSpace* %427 to i8*
  call void @_ZdlPv(i8* %434) #15
  br label %435

435:                                              ; preds = %424, %429, %433
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %55) #14
  %436 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %437 = icmp eq %class.SkColorSpace* %436, null
  br i1 %437, label %444, label %438

438:                                              ; preds = %435
  %439 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %436, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = atomicrmw add i32* %439, i32 -1 acq_rel
  %441 = icmp eq i32 %440, 1
  br i1 %441, label %442, label %444

442:                                              ; preds = %438
  %443 = bitcast %class.SkColorSpace* %436 to i8*
  call void @_ZdlPv(i8* %443) #15
  br label %444

444:                                              ; preds = %435, %438, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  %445 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1, i32 1
  %446 = load %class.SkMatrix*, %class.SkMatrix** %445, align 8
  %447 = icmp eq %class.SkMatrix* %446, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %444
  store %class.SkMatrix* null, %class.SkMatrix** %445, align 8
  br label %449

449:                                              ; preds = %444, %448
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #14
  %450 = inttoptr i64 %425 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %450
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.160* sret, %class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), i32) local_unnamed_addr #1

declare void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.19* sret, %class.GrRecordingContext*, i1 zeroext, %struct.SkImageInfo* dereferenceable(24), i32, i32, %class.SkSurfaceProps*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* sret, %class.SkImage_Base*, %class.GrRecordingContext*, i1 zeroext, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), %class.GrTextureProxy*) local_unnamed_addr #1

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkPictureShaderD2Ev(%class.SkPictureShader*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15SkPictureShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkPicture*, %class.SkPicture** %3, align 8
  %5 = icmp eq %class.SkPicture* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPicture* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPicture* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkPictureShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkPictureShaderD0Ev(%class.SkPictureShader*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15SkPictureShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPictureShader, %class.SkPictureShader* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkPicture*, %class.SkPicture** %3, align 8
  %5 = icmp eq %class.SkPicture* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPicture* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPicture* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkPictureShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #14
  %18 = bitcast %class.SkPictureShader* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK15SkPictureShader10getFactoryEv(%class.SkPictureShader*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN15SkPictureShader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15SkPictureShader11getTypeNameEv(%class.SkPictureShader*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkShader8isOpaqueEv(%class.SkShader*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE(%class.SkShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase18onAsLuminanceColorEPj(%class.SkShaderBase*, i32*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkPictureShader20PictureShaderContextD2Ev(%"class.SkPictureShader::PictureShaderContext"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15SkPictureShader20PictureShaderContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.SkPictureShader::PictureShaderContext"* %0 to %"class.SkShaderBase::Context"*
  tail call void @_ZN12SkShaderBase7ContextD2Ev(%"class.SkShaderBase::Context"* %17) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkPictureShader20PictureShaderContextD0Ev(%"class.SkPictureShader::PictureShaderContext"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15SkPictureShader20PictureShaderContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkPictureShader::PictureShaderContext", %"class.SkPictureShader::PictureShaderContext"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.SkPictureShader::PictureShaderContext"* %0 to %"class.SkShaderBase::Context"*
  tail call void @_ZN12SkShaderBase7ContextD2Ev(%"class.SkShaderBase::Context"* %17) #14
  %18 = bitcast %"class.SkPictureShader::PictureShaderContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #15
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"*, i8*, i64, i64) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #1

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.13* sret, %class.SkSurface*) local_unnamed_addr #1

declare void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.19* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119ImageFromPictureRecD2Ev(%"struct.(anonymous namespace)::ImageFromPictureRec"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureRec", %"struct.(anonymous namespace)::ImageFromPictureRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_119ImageFromPictureRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureRec", %"struct.(anonymous namespace)::ImageFromPictureRec"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119ImageFromPictureRecD0Ev(%"struct.(anonymous namespace)::ImageFromPictureRec"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureRec", %"struct.(anonymous namespace)::ImageFromPictureRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_119ImageFromPictureRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureRec", %"struct.(anonymous namespace)::ImageFromPictureRec"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"struct.(anonymous namespace)::ImageFromPictureRec"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(24) %"struct.SkResourceCache::Key"* @_ZNK12_GLOBAL__N_119ImageFromPictureRec6getKeyEv(%"struct.(anonymous namespace)::ImageFromPictureRec"* readnone) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureRec", %"struct.(anonymous namespace)::ImageFromPictureRec"* %0, i64 0, i32 1, i32 0
  ret %"struct.SkResourceCache::Key"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_119ImageFromPictureRec9bytesUsedEv(%"struct.(anonymous namespace)::ImageFromPictureRec"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::ImageFromPictureRec", %"struct.(anonymous namespace)::ImageFromPictureRec"* %0, i64 0, i32 2, i32 0
  %3 = load %class.SkImage*, %class.SkImage** %2, align 8
  %4 = getelementptr inbounds %class.SkImage, %class.SkImage* %3, i64 0, i32 2, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %3, i64 0, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %6, 2
  %11 = mul i64 %10, %9
  %12 = add i64 %11, 64
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN15SkResourceCache3Rec11canBePurgedEv(%"struct.SkResourceCache::Rec"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkResourceCache3Rec14postAddInstallEPv(%"struct.SkResourceCache::Rec"*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_119ImageFromPictureRec11getCategoryEv(%"struct.(anonymous namespace)::ImageFromPictureRec"* nocapture readnone) unnamed_addr #10 align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %class.SkDiscardableMemory* @_ZNK12_GLOBAL__N_119ImageFromPictureRec30diagnostic_only_getDiscardableEv(%"struct.(anonymous namespace)::ImageFromPictureRec"* nocapture readnone) unnamed_addr #10 align 2 {
  ret %class.SkDiscardableMemory* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.14* sret) local_unnamed_addr #1

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #1

declare i32 @_ZNK18GrRecordingContext33maxSurfaceSampleCountForColorTypeE11SkColorType(%class.GrRecordingContext*, i32) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #14
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #14
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN12SkShaderBase7ContextD2Ev(%"class.SkShaderBase::Context"*) unnamed_addr #13

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #1

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI5sk_spI8SkShaderEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -17
  %3 = bitcast i8* %2 to %class.SkShader**
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  ret i8* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeIN15SkPictureShader20PictureShaderContextEJRKS2_RN12SkShaderBase10ContextRecE5sk_spI8SkShaderERPS_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSE_ENUlPcE_8__invokeESN_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -137
  %3 = bitcast i8* %2 to %"class.SkPictureShader::PictureShaderContext"*
  %4 = bitcast i8* %2 to void (%"class.SkPictureShader::PictureShaderContext"*)***
  %5 = load void (%"class.SkPictureShader::PictureShaderContext"*)**, void (%"class.SkPictureShader::PictureShaderContext"*)*** %4, align 8
  %6 = load void (%"class.SkPictureShader::PictureShaderContext"*)*, void (%"class.SkPictureShader::PictureShaderContext"*)** %5, align 8
  tail call void %6(%"class.SkPictureShader::PictureShaderContext"* %3) #14
  ret i8* %2
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI9SkPictureE5sk_spIT_EPKS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI9SkPictureE5sk_spIT_EPKS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN15SkPictureShader4MakeE5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect: argument 0"}
!7 = distinct !{!7, !"_ZN15SkPictureShader4MakeE5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN15SkPictureShader4MakeE5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect: argument 0"}
!11 = distinct !{!11, !"_ZN15SkPictureShader4MakeE5sk_spI9SkPictureE10SkTileModeS3_12SkFilterModePK8SkMatrixPK6SkRect"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK15CachedImageInfo9makeImageE5sk_spI9SkSurfaceEPK9SkPicture: argument 0"}
!14 = distinct !{!14, !"_ZNK15CachedImageInfo9makeImageE5sk_spI9SkSurfaceEPK9SkPicture"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!17 = distinct !{!17, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!20 = distinct !{!20, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!21 = distinct !{!21, !22, !"_ZL11ref_or_srgbP12SkColorSpace: argument 0"}
!22 = distinct !{!22, !"_ZL11ref_or_srgbP12SkColorSpace"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!25 = distinct !{!25, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!26 = distinct !{!26, !27, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!27 = distinct !{!27, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!30 = distinct !{!30, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!33 = distinct !{!33, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!34 = distinct !{!34, !35, !"_ZL11ref_or_srgbP12SkColorSpace: argument 0"}
!35 = distinct !{!35, !"_ZL11ref_or_srgbP12SkColorSpace"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!38 = distinct !{!38, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!39 = !{!40, !37}
!40 = distinct !{!40, !41, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!41 = distinct !{!41, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!42 = !{!43, !40, !37}
!43 = distinct !{!43, !44, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!44 = distinct !{!44, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!45 = !{!"branch_weights", i32 1, i32 1048575}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK15CachedImageInfo9makeImageE5sk_spI9SkSurfaceEPK9SkPicture: argument 0"}
!48 = distinct !{!48, !"_ZNK15CachedImageInfo9makeImageE5sk_spI9SkSurfaceEPK9SkPicture"}
