; ModuleID = '../../gpu/config/gpu_driver_bug_list.cc'
source_filename = "../../gpu/config/gpu_driver_bug_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::GpuControlList::Entry" = type { i32, i8*, i64, i32*, i64, i8**, i64, i8**, i64, i32*, %"struct.gpu::GpuControlList::Conditions", i64, %"struct.gpu::GpuControlList::Conditions"* }
%"struct.gpu::GpuControlList::Conditions" = type { i32, %"struct.gpu::GpuControlList::Version", i32, i64, %"struct.gpu::GpuControlList::Device"*, i32, i32, %"struct.gpu::GpuControlList::DriverInfo"*, %"struct.gpu::GpuControlList::GLStrings"*, %"struct.gpu::GpuControlList::MachineModelInfo"*, i64, i32*, %"struct.gpu::GpuControlList::Version", %"struct.gpu::GpuControlList::More"* }
%"struct.gpu::GpuControlList::Device" = type { i32, i32 }
%"struct.gpu::GpuControlList::DriverInfo" = type { i8*, %"struct.gpu::GpuControlList::Version" }
%"struct.gpu::GpuControlList::GLStrings" = type { i8*, i8*, i8*, i8* }
%"struct.gpu::GpuControlList::MachineModelInfo" = type { i64, i8**, %"struct.gpu::GpuControlList::Version" }
%"struct.gpu::GpuControlList::Version" = type { i32, i32, i32, i8*, i8* }
%"struct.gpu::GpuControlList::More" = type { i32, %"struct.gpu::GpuControlList::Version", %"struct.gpu::GpuControlList::Version", i8, i32, %"struct.gpu::GpuControlList::Version", %"struct.gpu::GpuControlList::Version", i32, i32, i32 }
%"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" = type { i32, i8* }
%"class.gpu::GpuDriverBugList" = type { %"class.gpu::GpuControlList" }
%"class.gpu::GpuControlList" = type { i32 (...)**, i64, %"struct.gpu::GpuControlList::Entry"*, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.std::__1::unordered_map", i8, %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.gpu::GpuControlListData" = type { i64, %"struct.gpu::GpuControlList::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.base::CommandLine" = type { %"class.std::__1::vector.35", %"class.std::__1::map", i64 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i8**, i8**, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZTVN3gpu16GpuDriverBugListE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GpuDriverBugList"*)* @_ZN3gpu16GpuDriverBugListD2Ev to i8*), i8* bitcast (void (%"class.gpu::GpuDriverBugList"*)* @_ZN3gpu16GpuDriverBugListD0Ev to i8*)] }, align 8
@_ZN3gpu27kGpuDriverBugListEntryCountE = external local_unnamed_addr constant i64, align 8
@_ZN3gpu24kGpuDriverBugListEntriesE = external global [0 x %"struct.gpu::GpuControlList::Entry"], align 8
@_ZN3gpu12_GLOBAL__N_112kFeatureListE = internal constant [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"] [%"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 9, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 12, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 18, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 19, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 20, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 22, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.24, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 23, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 24, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 26, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 27, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 28, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 29, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 31, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.33, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 32, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.34, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 34, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 36, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 38, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 41, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 42, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 43, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 44, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 46, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.48, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 47, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.50, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 49, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 50, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 51, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.53, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 52, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.54, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.55, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 54, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 55, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 56, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 57, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 58, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 59, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.61, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.62, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 61, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 62, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.64, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 63, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.65, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.67, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 66, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 67, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 68, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 69, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.71, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 70, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 71, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 72, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.74, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 73, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.75, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 74, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.76, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 75, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 76, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.78, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 77, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.79, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 78, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.80, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 79, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.81, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 80, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.82, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 82, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.84, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 83, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.85, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 84, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.86, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 85, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.87, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 86, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.88, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 87, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.89, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 88, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.90, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 89, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.91, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 90, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 91, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.93, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 92, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 93, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.95, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 94, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 95, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.97, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 96, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.98, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 97, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.99, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 98, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.100, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 99, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.101, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 100, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.102, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 101, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.103, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 102, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.104, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 103, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.105, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 104, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.106, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 105, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.107, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 106, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.108, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 107, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.109, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 108, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.110, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 109, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.111, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 110, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.112, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 111, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.113, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 112, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.114, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 113, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.115, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 114, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.116, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 115, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.117, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 116, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.118, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 117, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.119, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 118, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 119, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.121, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 120, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.122, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 121, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.123, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 122, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.124, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 123, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.125, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 124, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.126, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 125, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 126, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.128, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 127, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 128, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.130, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 129, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.131, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 130, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.132, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 131, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.133, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 132, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.134, i32 0, i32 0) }, %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo" { i32 133, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.135, i32 0, i32 0) }], align 16
@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"add_and_true_to_loop_condition\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"adjust_src_dst_region_for_blitframebuffer\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"avoid_one_component_egl_images\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"avoid_stencil_buffers\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"broken_egl_image_ref_counting\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"check_ycbcr_studio_g22_left_p709_for_nv12_support\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"clamp_texture_base_level_and_max_level\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"clear_pixel_unpack_buffer_before_copyteximage\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"clear_to_zero_or_one_broken\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"clear_uniforms_before_first_program_use\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"count_all_in_varyings_packing\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"decode_encode_srgb_for_generatemipmap\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"depth_stencil_renderbuffer_resize_emulation\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"disable_2d_canvas_auto_flush\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"disable_accelerated_av1_decode\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"disable_accelerated_av1_decode_d3d11\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"disable_accelerated_h264_encode\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"disable_accelerated_vp8_decode\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"disable_accelerated_vp8_encode\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"disable_accelerated_vp9_decode\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"disable_accelerated_vp9_profile2_decode\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"disable_async_readpixels\00", align 1
@.str.24 = private unnamed_addr constant [39 x i8] c"disable_av_sample_buffer_display_layer\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"disable_blend_equation_advanced\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"disable_chromium_framebuffer_multisample\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"disable_d3d11\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"disable_d3d11_video_decoder\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"disable_decode_swap_chain\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"disable_delayed_copy_nv12\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"disable_depth_texture\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"disable_direct_composition\00", align 1
@.str.33 = private unnamed_addr constant [45 x i8] c"disable_direct_composition_sw_video_overlays\00", align 1
@.str.34 = private unnamed_addr constant [42 x i8] c"disable_direct_composition_video_overlays\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"disable_discard_framebuffer\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"disable_dual_source_blending_support\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"disable_dxgi_zero_copy_video\00", align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"disable_dxva_video_decoder\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"disable_es3_gl_context\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"disable_es3_gl_context_for_testing\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"disable_ext_draw_buffers\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"disable_gl_rgb_format\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"disable_half_float_for_gmb\00", align 1
@.str.44 = private unnamed_addr constant [41 x i8] c"disable_imagebitmap_from_video_using_gpu\00", align 1
@.str.45 = private unnamed_addr constant [44 x i8] c"disable_mediafoundation_async_h264_encoding\00", align 1
@.str.46 = private unnamed_addr constant [39 x i8] c"disable_multisampling_color_mask_usage\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"disable_nv12_dxgi_video\00", align 1
@.str.48 = private unnamed_addr constant [30 x i8] c"disable_nv12_dynamic_textures\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"disable_overlay_ca_layers\00", align 1
@.str.50 = private unnamed_addr constant [47 x i8] c"disable_post_sub_buffers_for_onscreen_surfaces\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"disable_program_cache\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"disable_program_caching_for_transform_feedback\00", align 1
@.str.53 = private unnamed_addr constant [27 x i8] c"disable_program_disk_cache\00", align 1
@.str.54 = private unnamed_addr constant [47 x i8] c"disable_software_to_accelerated_canvas_upgrade\00", align 1
@.str.55 = private unnamed_addr constant [24 x i8] c"disable_texture_storage\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"disable_timestamp_queries\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"disable_vp_scaling\00", align 1
@.str.58 = private unnamed_addr constant [38 x i8] c"disable_webgl_rgb_multisampling_usage\00", align 1
@.str.59 = private unnamed_addr constant [30 x i8] c"disallow_large_instanced_draw\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"disallow_vp9_resilient_dxva_decoding\00", align 1
@.str.61 = private unnamed_addr constant [41 x i8] c"dont_delete_source_texture_for_egl_image\00", align 1
@.str.62 = private unnamed_addr constant [37 x i8] c"dont_initialize_uninitialized_locals\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"dont_use_eglclientwaitsync_with_timeout\00", align 1
@.str.64 = private unnamed_addr constant [39 x i8] c"dont_use_loops_to_initialize_variables\00", align 1
@.str.65 = private unnamed_addr constant [25 x i8] c"emulate_abs_int_function\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"emulate_isnan_on_float\00", align 1
@.str.67 = private unnamed_addr constant [47 x i8] c"enable_bgra8_overlays_with_yuv_overlay_support\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"etc1_power_of_two_only\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"exit_on_context_lost\00", align 1
@.str.70 = private unnamed_addr constant [28 x i8] c"flush_on_framebuffer_change\00", align 1
@.str.71 = private unnamed_addr constant [20 x i8] c"force_cube_complete\00", align 1
@.str.72 = private unnamed_addr constant [37 x i8] c"force_cube_map_positive_x_allocation\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"force_enable_color_buffer_float\00", align 1
@.str.74 = private unnamed_addr constant [46 x i8] c"force_enable_color_buffer_float_except_rgb32f\00", align 1
@.str.75 = private unnamed_addr constant [31 x i8] c"force_gl_flush_on_swap_buffers\00", align 1
@.str.76 = private unnamed_addr constant [27 x i8] c"force_high_performance_gpu\00", align 1
@.str.77 = private unnamed_addr constant [40 x i8] c"force_int_or_srgb_cube_texture_complete\00", align 1
@.str.78 = private unnamed_addr constant [20 x i8] c"force_low_power_gpu\00", align 1
@.str.79 = private unnamed_addr constant [27 x i8] c"force_nv12_overlay_support\00", align 1
@.str.80 = private unnamed_addr constant [36 x i8] c"force_rgb10a2_overlay_support_flags\00", align 1
@.str.81 = private unnamed_addr constant [45 x i8] c"force_update_scissor_state_when_binding_fbo0\00", align 1
@.str.82 = private unnamed_addr constant [23 x i8] c"get_frag_data_info_bug\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"gl_clear_broken\00", align 1
@.str.84 = private unnamed_addr constant [34 x i8] c"init_gl_position_in_vertex_shader\00", align 1
@.str.85 = private unnamed_addr constant [44 x i8] c"init_one_cube_map_level_before_copyteximage\00", align 1
@.str.86 = private unnamed_addr constant [28 x i8] c"init_texture_max_anisotropy\00", align 1
@.str.87 = private unnamed_addr constant [45 x i8] c"init_two_cube_map_levels_before_copyteximage\00", align 1
@.str.88 = private unnamed_addr constant [23 x i8] c"init_vertex_attributes\00", align 1
@.str.89 = private unnamed_addr constant [34 x i8] c"limit_d3d11_video_decoder_to_11_0\00", align 1
@.str.90 = private unnamed_addr constant [31 x i8] c"max_3d_array_texture_size_1024\00", align 1
@.str.91 = private unnamed_addr constant [39 x i8] c"max_copy_texture_chromium_size_1048576\00", align 1
@.str.92 = private unnamed_addr constant [32 x i8] c"max_fragment_uniform_vectors_32\00", align 1
@.str.93 = private unnamed_addr constant [24 x i8] c"max_msaa_sample_count_2\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"max_msaa_sample_count_4\00", align 1
@.str.95 = private unnamed_addr constant [28 x i8] c"max_texture_size_limit_4096\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"msaa_is_slow\00", align 1
@.str.97 = private unnamed_addr constant [42 x i8] c"multisample_renderbuffer_resize_emulation\00", align 1
@.str.98 = private unnamed_addr constant [34 x i8] c"needs_offscreen_buffer_workaround\00", align 1
@.str.99 = private unnamed_addr constant [44 x i8] c"pack_parameters_workaround_with_pack_buffer\00", align 1
@.str.100 = private unnamed_addr constant [20 x i8] c"prefer_draw_to_copy\00", align 1
@.str.101 = private unnamed_addr constant [40 x i8] c"rebind_transform_feedback_before_resume\00", align 1
@.str.102 = private unnamed_addr constant [24 x i8] c"regenerate_struct_names\00", align 1
@.str.103 = private unnamed_addr constant [39 x i8] c"rely_on_implicit_sync_for_swap_buffers\00", align 1
@.str.104 = private unnamed_addr constant [43 x i8] c"remove_dynamic_indexing_of_swizzled_vector\00", align 1
@.str.105 = private unnamed_addr constant [40 x i8] c"remove_invariant_and_centroid_for_essl3\00", align 1
@.str.106 = private unnamed_addr constant [34 x i8] c"remove_pow_with_constant_exponent\00", align 1
@.str.107 = private unnamed_addr constant [42 x i8] c"reset_base_mipmap_level_before_texstorage\00", align 1
@.str.108 = private unnamed_addr constant [28 x i8] c"reset_teximage2d_base_level\00", align 1
@.str.109 = private unnamed_addr constant [30 x i8] c"restore_scissor_on_fbo_change\00", align 1
@.str.110 = private unnamed_addr constant [23 x i8] c"rewrite_do_while_loops\00", align 1
@.str.111 = private unnamed_addr constant [35 x i8] c"rewrite_float_unary_minus_operator\00", align 1
@.str.112 = private unnamed_addr constant [39 x i8] c"rewrite_texelfetchoffset_to_texelfetch\00", align 1
@.str.113 = private unnamed_addr constant [42 x i8] c"round_down_uniform_bind_buffer_range_size\00", align 1
@.str.114 = private unnamed_addr constant [39 x i8] c"scalarize_vec_and_mat_constructor_args\00", align 1
@.str.115 = private unnamed_addr constant [40 x i8] c"set_zero_level_before_generating_mipmap\00", align 1
@.str.116 = private unnamed_addr constant [41 x i8] c"simulate_out_of_memory_on_large_textures\00", align 1
@.str.117 = private unnamed_addr constant [35 x i8] c"supports_two_yuv_hardware_overlays\00", align 1
@.str.118 = private unnamed_addr constant [46 x i8] c"unbind_attachments_on_bound_render_fbo_delete\00", align 1
@.str.119 = private unnamed_addr constant [42 x i8] c"unbind_egl_context_to_flush_driver_caches\00", align 1
@.str.120 = private unnamed_addr constant [29 x i8] c"unbind_fbo_on_context_switch\00", align 1
@.str.121 = private unnamed_addr constant [42 x i8] c"unfold_short_circuit_as_ternary_operation\00", align 1
@.str.122 = private unnamed_addr constant [47 x i8] c"unpack_alignment_workaround_with_unpack_buffer\00", align 1
@.str.123 = private unnamed_addr constant [50 x i8] c"unpack_image_height_workaround_with_unpack_buffer\00", align 1
@.str.124 = private unnamed_addr constant [49 x i8] c"unpack_overlapping_rows_separately_unpack_buffer\00", align 1
@.str.125 = private unnamed_addr constant [42 x i8] c"use_client_side_arrays_for_stream_buffers\00", align 1
@.str.126 = private unnamed_addr constant [66 x i8] c"use_copyteximage2d_instead_of_readpixels_on_multisampled_textures\00", align 1
@.str.127 = private unnamed_addr constant [29 x i8] c"use_empty_video_hdr_metadata\00", align 1
@.str.128 = private unnamed_addr constant [27 x i8] c"use_eqaa_storage_samples_2\00", align 1
@.str.129 = private unnamed_addr constant [38 x i8] c"use_gpu_driver_workaround_for_testing\00", align 1
@.str.130 = private unnamed_addr constant [40 x i8] c"use_intermediary_for_copy_texture_image\00", align 1
@.str.131 = private unnamed_addr constant [49 x i8] c"use_non_zero_size_for_client_side_stream_buffers\00", align 1
@.str.132 = private unnamed_addr constant [34 x i8] c"use_unused_standard_shared_blocks\00", align 1
@.str.133 = private unnamed_addr constant [28 x i8] c"use_virtualized_gl_contexts\00", align 1
@.str.134 = private unnamed_addr constant [39 x i8] c"validate_multisample_buffer_allocation\00", align 1
@.str.135 = private unnamed_addr constant [27 x i8] c"wake_up_gpu_before_drawing\00", align 1

@_ZN3gpu16GpuDriverBugListC1ERKNS_18GpuControlListDataE = hidden unnamed_addr alias void (%"class.gpu::GpuDriverBugList"*, %"struct.gpu::GpuControlListData"*), void (%"class.gpu::GpuDriverBugList"*, %"struct.gpu::GpuControlListData"*)* @_ZN3gpu16GpuDriverBugListC2ERKNS_18GpuControlListDataE
@_ZN3gpu16GpuDriverBugListD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuDriverBugList"*), void (%"class.gpu::GpuDriverBugList"*)* @_ZN3gpu16GpuDriverBugListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GpuDriverBugListC2ERKNS_18GpuControlListDataE(%"class.gpu::GpuDriverBugList"*, %"struct.gpu::GpuControlListData"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuDriverBugList", %"class.gpu::GpuDriverBugList"* %0, i64 0, i32 0
  tail call void @_ZN3gpu14GpuControlListC2ERKNS_18GpuControlListDataE(%"class.gpu::GpuControlList"* %3, %"struct.gpu::GpuControlListData"* dereferenceable(16) %1) #9
  %4 = getelementptr inbounds %"class.gpu::GpuDriverBugList", %"class.gpu::GpuDriverBugList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gpu16GpuDriverBugListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN3gpu14GpuControlListC2ERKNS_18GpuControlListDataE(%"class.gpu::GpuControlList"*, %"struct.gpu::GpuControlListData"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu14GpuControlListD2Ev(%"class.gpu::GpuControlList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GpuDriverBugListD2Ev(%"class.gpu::GpuDriverBugList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuDriverBugList", %"class.gpu::GpuDriverBugList"* %0, i64 0, i32 0
  tail call void @_ZN3gpu14GpuControlListD2Ev(%"class.gpu::GpuControlList"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GpuDriverBugListD0Ev(%"class.gpu::GpuDriverBugList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuDriverBugList", %"class.gpu::GpuDriverBugList"* %0, i64 0, i32 0
  tail call void @_ZN3gpu14GpuControlListD2Ev(%"class.gpu::GpuControlList"* %2) #9
  %3 = bitcast %"class.gpu::GpuDriverBugList"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::GpuDriverBugList"* @_ZN3gpu16GpuDriverBugList6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.gpu::GpuControlListData", align 8
  %2 = bitcast %"struct.gpu::GpuControlListData"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #9
  %3 = getelementptr inbounds %"struct.gpu::GpuControlListData", %"struct.gpu::GpuControlListData"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gpu::GpuControlListData", %"struct.gpu::GpuControlListData"* %1, i64 0, i32 1
  %5 = load i64, i64* @_ZN3gpu27kGpuDriverBugListEntryCountE, align 8
  store i64 %5, i64* %3, align 8
  store %"struct.gpu::GpuControlList::Entry"* getelementptr inbounds ([0 x %"struct.gpu::GpuControlList::Entry"], [0 x %"struct.gpu::GpuControlList::Entry"]* @_ZN3gpu24kGpuDriverBugListEntriesE, i64 0, i64 0), %"struct.gpu::GpuControlList::Entry"** %4, align 8
  %6 = call %"class.gpu::GpuDriverBugList"* @_ZN3gpu16GpuDriverBugList6CreateERKNS_18GpuControlListDataE(%"struct.gpu::GpuControlListData"* nonnull dereferenceable(16) %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #9
  ret %"class.gpu::GpuDriverBugList"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::GpuDriverBugList"* @_ZN3gpu16GpuDriverBugList6CreateERKNS_18GpuControlListDataE(%"struct.gpu::GpuControlListData"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call i8* @_Znwm(i64 128) #10
  %4 = bitcast i8* %3 to %"class.gpu::GpuDriverBugList"*
  %5 = bitcast i8* %3 to %"class.gpu::GpuControlList"*
  tail call void @_ZN3gpu14GpuControlListC2ERKNS_18GpuControlListDataE(%"class.gpu::GpuControlList"* nonnull %5, %"struct.gpu::GpuControlListData"* dereferenceable(16) %0) #9
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gpu16GpuDriverBugListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  br label %13

13:                                               ; preds = %42, %1
  %14 = phi i64 [ 0, %1 ], [ %43, %42 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %15 = getelementptr inbounds [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 0, i64 %14, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i64 @strlen(i8* %16) #9
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #11
  unreachable

21:                                               ; preds = %13
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = call i8* @_Znwm(i64 %25) #10
  store i8* %26, i8** %8, align 8
  %27 = or i64 %25, -9223372036854775808
  store i64 %27, i64* %9, align 8
  store i64 %17, i64* %10, align 8
  br label %31

28:                                               ; preds = %21
  %29 = trunc i64 %17 to i8
  store i8 %29, i8* %12, align 1
  %30 = icmp eq i64 %17, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28, %23
  %32 = phi i8* [ %26, %23 ], [ %7, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %16, i64 %17, i1 false) #9
  br label %33

33:                                               ; preds = %28, %31
  %34 = phi i8* [ %7, %28 ], [ %32, %31 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %17
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 0, i64 %14, i32 0
  %37 = load i32, i32* %36, align 16
  call void @_ZN3gpu14GpuControlList19AddSupportedFeatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gpu::GpuControlList"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %37) #9
  %38 = load i8, i8* %12, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %33, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  %43 = add nuw nsw i64 %14, 1
  %44 = icmp eq i64 %43, 134
  br i1 %44, label %45, label %13

45:                                               ; preds = %42
  ret %"class.gpu::GpuDriverBugList"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN3gpu14GpuControlList19AddSupportedFeatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gpu::GpuControlList"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu34GpuDriverBugWorkaroundTypeToStringENS_26GpuDriverBugWorkaroundTypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 134
  br i1 %3, label %4, label %33

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 0, i64 %5, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i64 @strlen(i8* %7) #9
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #11
  unreachable

12:                                               ; preds = %4
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  br label %28

22:                                               ; preds = %12
  %23 = trunc i64 %8 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %14
  %29 = phi i8* [ %17, %14 ], [ %26, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %7, i64 %8, i1 false) #9
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi i8* [ %26, %22 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %8
  br label %38

33:                                               ; preds = %2
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 7, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, i1 false) #9
  %37 = getelementptr inbounds i8, i8* %36, i64 7
  br label %38

38:                                               ; preds = %33, %30
  %39 = phi i8* [ %37, %33 ], [ %32, %30 ]
  store i8 0, i8* %39, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GpuDriverBugList32AppendWorkaroundsFromCommandLineEPNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEERKN4base11CommandLineE(%"class.std::__1::set"*, %"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::set"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  br label %17

16:                                               ; preds = %403
  ret void

17:                                               ; preds = %403, %2
  %18 = phi i64 [ 0, %2 ], [ %404, %403 ]
  %19 = getelementptr inbounds [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 0, i64 %18, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* %20) #9
  br i1 %21, label %22, label %403

22:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %23 = call i64 @strlen(i8* nonnull %20) #9
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %1, i8* %20, i64 %23) #9
  %24 = load i8, i8* %6, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %7, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 1
  br i1 %29, label %30, label %34

30:                                               ; preds = %22
  %31 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #9
  %32 = icmp eq i32 %31, 0
  %33 = load i8, i8* %6, align 1
  br label %34

34:                                               ; preds = %22, %30
  %35 = phi i8 [ %33, %30 ], [ %24, %22 ]
  %36 = phi i1 [ %32, %30 ], [ false, %22 ]
  %37 = icmp slt i8 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  %41 = getelementptr inbounds [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 0, i64 %18, i32 0
  %42 = load i32, i32* %41, align 16
  br i1 %36, label %43, label %107

43:                                               ; preds = %40
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  %46 = bitcast %"class.std::__1::__tree_node"* %44 to %"class.std::__1::__tree_node_base"*
  br i1 %45, label %403, label %47

47:                                               ; preds = %43, %47
  %48 = phi %"class.std::__1::__tree_end_node"* [ %58, %47 ], [ %9, %43 ]
  %49 = phi %"class.std::__1::__tree_node"* [ %59, %47 ], [ %44, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, %42
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 1
  %54 = bitcast %"class.std::__1::__tree_node_base"** %53 to %"class.std::__1::__tree_node"**
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_node"* %49 to %"class.std::__1::__tree_node"**
  %57 = select i1 %52, %"class.std::__1::__tree_node"** %54, %"class.std::__1::__tree_node"** %56
  %58 = select i1 %52, %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"* %55
  %59 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %57, align 8
  %60 = icmp eq %"class.std::__1::__tree_node"* %59, null
  br i1 %60, label %61, label %47

61:                                               ; preds = %47
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %58, %9
  br i1 %62, label %403, label %63

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"*
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %42, %66
  br i1 %67, label %403, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 1, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 2
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_end_node"**
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, %73
  br i1 %79, label %96, label %87

80:                                               ; preds = %68, %80
  %81 = phi %"class.std::__1::__tree_node_base"* [ %83, %80 ], [ %70, %68 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %85, label %80

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 0
  br label %96

87:                                               ; preds = %72, %87
  %88 = phi %"class.std::__1::__tree_end_node"** [ %91, %87 ], [ %75, %72 ]
  %89 = bitcast %"class.std::__1::__tree_end_node"** %88 to %"class.std::__1::__tree_node_base"**
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 2
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %90
  br i1 %95, label %96, label %87

96:                                               ; preds = %87, %85, %72
  %97 = phi %"class.std::__1::__tree_end_node"* [ %86, %85 ], [ %76, %72 ], [ %92, %87 ]
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %99 = icmp eq %"class.std::__1::__tree_end_node"* %98, %58
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = ptrtoint %"class.std::__1::__tree_end_node"* %97 to i64
  store i64 %101, i64* %12, align 8
  br label %102

102:                                              ; preds = %100, %96
  %103 = load i64, i64* %13, align 8
  %104 = add i64 %103, -1
  store i64 %104, i64* %13, align 8
  %105 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %46, %"class.std::__1::__tree_node_base"* %105) #9
  %106 = bitcast %"class.std::__1::__tree_end_node"* %58 to i8*
  call void @_ZdlPv(i8* %106) #10
  br label %403

107:                                              ; preds = %40
  switch i32 %42, label %348 [
    i32 74, label %108
    i32 76, label %228
  ]

108:                                              ; preds = %107
  %109 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %110 = icmp eq %"class.std::__1::__tree_node"* %109, null
  %111 = bitcast %"class.std::__1::__tree_node"* %109 to %"class.std::__1::__tree_node_base"*
  br i1 %110, label %202, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.std::__1::__tree_end_node"* [ %123, %112 ], [ %9, %108 ]
  %114 = phi %"class.std::__1::__tree_node"* [ %124, %112 ], [ %109, %108 ]
  %115 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %114, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, 76
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %114, i64 0, i32 0, i32 1
  %119 = bitcast %"class.std::__1::__tree_node_base"** %118 to %"class.std::__1::__tree_node"**
  %120 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %114, i64 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::__tree_node"* %114 to %"class.std::__1::__tree_node"**
  %122 = select i1 %117, %"class.std::__1::__tree_node"** %119, %"class.std::__1::__tree_node"** %121
  %123 = select i1 %117, %"class.std::__1::__tree_end_node"* %113, %"class.std::__1::__tree_end_node"* %120
  %124 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %122, align 8
  %125 = icmp eq %"class.std::__1::__tree_node"* %124, null
  br i1 %125, label %126, label %112

126:                                              ; preds = %112
  %127 = icmp eq %"class.std::__1::__tree_end_node"* %123, %9
  br i1 %127, label %173, label %128

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.std::__1::__tree_node"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp sgt i32 %131, 76
  br i1 %132, label %173, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 1, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %145

137:                                              ; preds = %133
  %138 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 2
  %140 = bitcast %"class.std::__1::__tree_end_node"* %139 to %"class.std::__1::__tree_end_node"**
  %141 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 0, i32 0
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, %138
  br i1 %144, label %161, label %152

145:                                              ; preds = %133, %145
  %146 = phi %"class.std::__1::__tree_node_base"* [ %148, %145 ], [ %135, %133 ]
  %147 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, null
  br i1 %149, label %150, label %145

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %146, i64 0, i32 0
  br label %161

152:                                              ; preds = %137, %152
  %153 = phi %"class.std::__1::__tree_end_node"** [ %156, %152 ], [ %140, %137 ]
  %154 = bitcast %"class.std::__1::__tree_end_node"** %153 to %"class.std::__1::__tree_node_base"**
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 2
  %157 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %156, align 8
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %157, i64 0, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  %160 = icmp eq %"class.std::__1::__tree_node_base"* %159, %155
  br i1 %160, label %161, label %152

161:                                              ; preds = %152, %150, %137
  %162 = phi %"class.std::__1::__tree_end_node"* [ %151, %150 ], [ %141, %137 ], [ %157, %152 ]
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %164 = icmp eq %"class.std::__1::__tree_end_node"* %163, %123
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = ptrtoint %"class.std::__1::__tree_end_node"* %162 to i64
  store i64 %166, i64* %12, align 8
  br label %167

167:                                              ; preds = %165, %161
  %168 = load i64, i64* %13, align 8
  %169 = add i64 %168, -1
  store i64 %169, i64* %13, align 8
  %170 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %111, %"class.std::__1::__tree_node_base"* %170) #9
  %171 = bitcast %"class.std::__1::__tree_end_node"* %123 to i8*
  call void @_ZdlPv(i8* %171) #10
  %172 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  br label %173

173:                                              ; preds = %126, %128, %167
  %174 = phi %"class.std::__1::__tree_node"* [ %109, %126 ], [ %109, %128 ], [ %172, %167 ]
  %175 = icmp eq %"class.std::__1::__tree_node"* %174, null
  br i1 %175, label %202, label %176

176:                                              ; preds = %173, %198
  %177 = phi %"class.std::__1::__tree_node"* [ %201, %198 ], [ %174, %173 ]
  %178 = phi %"class.std::__1::__tree_node_base"** [ %200, %198 ], [ %14, %173 ]
  %179 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = icmp sgt i32 %180, 74
  br i1 %181, label %182, label %188

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, null
  br i1 %185, label %186, label %198

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0
  br label %202

188:                                              ; preds = %176
  %189 = icmp eq i32 %180, 74
  br i1 %189, label %196, label %190

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 1
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %194, label %198

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0
  br label %202

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0
  br label %202

198:                                              ; preds = %190, %182
  %199 = phi %"class.std::__1::__tree_node_base"* [ %184, %182 ], [ %192, %190 ]
  %200 = phi %"class.std::__1::__tree_node_base"** [ %183, %182 ], [ %191, %190 ]
  %201 = bitcast %"class.std::__1::__tree_node_base"* %199 to %"class.std::__1::__tree_node"*
  br label %176

202:                                              ; preds = %108, %173, %196, %194, %186
  %203 = phi %"class.std::__1::__tree_end_node"* [ %187, %186 ], [ %195, %194 ], [ %197, %196 ], [ %9, %173 ], [ %9, %108 ]
  %204 = phi %"class.std::__1::__tree_node_base"** [ %183, %186 ], [ %191, %194 ], [ %178, %196 ], [ %15, %173 ], [ %15, %108 ]
  %205 = bitcast %"class.std::__1::__tree_node_base"** %204 to %"class.std::__1::__tree_node"**
  %206 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %205, align 8
  %207 = icmp eq %"class.std::__1::__tree_node"* %206, null
  br i1 %207, label %208, label %403

208:                                              ; preds = %202
  %209 = call i8* @_Znwm(i64 32) #10, !noalias !2
  %210 = getelementptr inbounds i8, i8* %209, i64 28
  %211 = bitcast i8* %210 to i32*
  store i32 74, i32* %211, align 4, !noalias !2
  %212 = bitcast i8* %209 to %"class.std::__1::__tree_node_base"*
  %213 = getelementptr inbounds i8, i8* %209, i64 16
  %214 = bitcast i8* %213 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %203, %"class.std::__1::__tree_end_node"** %214, align 8
  %215 = bitcast %"class.std::__1::__tree_node_base"** %204 to i8**
  store i8* %209, i8** %215, align 8
  %216 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %216, i64 0, i32 0
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node_base"* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %208
  %221 = ptrtoint %"class.std::__1::__tree_node_base"* %218 to i64
  store i64 %221, i64* %12, align 8
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  br label %223

223:                                              ; preds = %220, %208
  %224 = phi %"class.std::__1::__tree_node_base"* [ %212, %208 ], [ %222, %220 ]
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %225, %"class.std::__1::__tree_node_base"* %224) #9
  %226 = load i64, i64* %13, align 8
  %227 = add i64 %226, 1
  store i64 %227, i64* %13, align 8
  br label %403

228:                                              ; preds = %107
  %229 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %230 = icmp eq %"class.std::__1::__tree_node"* %229, null
  %231 = bitcast %"class.std::__1::__tree_node"* %229 to %"class.std::__1::__tree_node_base"*
  br i1 %230, label %322, label %232

232:                                              ; preds = %228, %232
  %233 = phi %"class.std::__1::__tree_end_node"* [ %243, %232 ], [ %9, %228 ]
  %234 = phi %"class.std::__1::__tree_node"* [ %244, %232 ], [ %229, %228 ]
  %235 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = icmp slt i32 %236, 74
  %238 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 1
  %239 = bitcast %"class.std::__1::__tree_node_base"** %238 to %"class.std::__1::__tree_node"**
  %240 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %234, i64 0, i32 0, i32 0
  %241 = bitcast %"class.std::__1::__tree_node"* %234 to %"class.std::__1::__tree_node"**
  %242 = select i1 %237, %"class.std::__1::__tree_node"** %239, %"class.std::__1::__tree_node"** %241
  %243 = select i1 %237, %"class.std::__1::__tree_end_node"* %233, %"class.std::__1::__tree_end_node"* %240
  %244 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %242, align 8
  %245 = icmp eq %"class.std::__1::__tree_node"* %244, null
  br i1 %245, label %246, label %232

246:                                              ; preds = %232
  %247 = icmp eq %"class.std::__1::__tree_end_node"* %243, %9
  br i1 %247, label %293, label %248

248:                                              ; preds = %246
  %249 = bitcast %"class.std::__1::__tree_end_node"* %243 to %"class.std::__1::__tree_node"*
  %250 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = icmp sgt i32 %251, 74
  br i1 %252, label %293, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %243, i64 1, i32 0
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %254, align 8
  %256 = icmp eq %"class.std::__1::__tree_node_base"* %255, null
  br i1 %256, label %257, label %265

257:                                              ; preds = %253
  %258 = bitcast %"class.std::__1::__tree_end_node"* %243 to %"class.std::__1::__tree_node_base"*
  %259 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %243, i64 2
  %260 = bitcast %"class.std::__1::__tree_end_node"* %259 to %"class.std::__1::__tree_end_node"**
  %261 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %261, i64 0, i32 0
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = icmp eq %"class.std::__1::__tree_node_base"* %263, %258
  br i1 %264, label %281, label %272

265:                                              ; preds = %253, %265
  %266 = phi %"class.std::__1::__tree_node_base"* [ %268, %265 ], [ %255, %253 ]
  %267 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %266, i64 0, i32 0, i32 0
  %268 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %267, align 8
  %269 = icmp eq %"class.std::__1::__tree_node_base"* %268, null
  br i1 %269, label %270, label %265

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %266, i64 0, i32 0
  br label %281

272:                                              ; preds = %257, %272
  %273 = phi %"class.std::__1::__tree_end_node"** [ %276, %272 ], [ %260, %257 ]
  %274 = bitcast %"class.std::__1::__tree_end_node"** %273 to %"class.std::__1::__tree_node_base"**
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %274, align 8
  %276 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %275, i64 0, i32 2
  %277 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %276, align 8
  %278 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %277, i64 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, %275
  br i1 %280, label %281, label %272

281:                                              ; preds = %272, %270, %257
  %282 = phi %"class.std::__1::__tree_end_node"* [ %271, %270 ], [ %261, %257 ], [ %277, %272 ]
  %283 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %284 = icmp eq %"class.std::__1::__tree_end_node"* %283, %243
  br i1 %284, label %285, label %287

285:                                              ; preds = %281
  %286 = ptrtoint %"class.std::__1::__tree_end_node"* %282 to i64
  store i64 %286, i64* %12, align 8
  br label %287

287:                                              ; preds = %285, %281
  %288 = load i64, i64* %13, align 8
  %289 = add i64 %288, -1
  store i64 %289, i64* %13, align 8
  %290 = bitcast %"class.std::__1::__tree_end_node"* %243 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %231, %"class.std::__1::__tree_node_base"* %290) #9
  %291 = bitcast %"class.std::__1::__tree_end_node"* %243 to i8*
  call void @_ZdlPv(i8* %291) #10
  %292 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  br label %293

293:                                              ; preds = %246, %248, %287
  %294 = phi %"class.std::__1::__tree_node"* [ %229, %246 ], [ %229, %248 ], [ %292, %287 ]
  %295 = icmp eq %"class.std::__1::__tree_node"* %294, null
  br i1 %295, label %322, label %296

296:                                              ; preds = %293, %318
  %297 = phi %"class.std::__1::__tree_node"* [ %321, %318 ], [ %294, %293 ]
  %298 = phi %"class.std::__1::__tree_node_base"** [ %320, %318 ], [ %14, %293 ]
  %299 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %297, i64 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = icmp sgt i32 %300, 76
  br i1 %301, label %302, label %308

302:                                              ; preds = %296
  %303 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %297, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %303, align 8
  %305 = icmp eq %"class.std::__1::__tree_node_base"* %304, null
  br i1 %305, label %306, label %318

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %297, i64 0, i32 0, i32 0
  br label %322

308:                                              ; preds = %296
  %309 = icmp eq i32 %300, 76
  br i1 %309, label %316, label %310

310:                                              ; preds = %308
  %311 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %297, i64 0, i32 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, null
  br i1 %313, label %314, label %318

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %297, i64 0, i32 0, i32 0
  br label %322

316:                                              ; preds = %308
  %317 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %297, i64 0, i32 0, i32 0
  br label %322

318:                                              ; preds = %310, %302
  %319 = phi %"class.std::__1::__tree_node_base"* [ %304, %302 ], [ %312, %310 ]
  %320 = phi %"class.std::__1::__tree_node_base"** [ %303, %302 ], [ %311, %310 ]
  %321 = bitcast %"class.std::__1::__tree_node_base"* %319 to %"class.std::__1::__tree_node"*
  br label %296

322:                                              ; preds = %228, %293, %316, %314, %306
  %323 = phi %"class.std::__1::__tree_end_node"* [ %307, %306 ], [ %315, %314 ], [ %317, %316 ], [ %9, %293 ], [ %9, %228 ]
  %324 = phi %"class.std::__1::__tree_node_base"** [ %303, %306 ], [ %311, %314 ], [ %298, %316 ], [ %15, %293 ], [ %15, %228 ]
  %325 = bitcast %"class.std::__1::__tree_node_base"** %324 to %"class.std::__1::__tree_node"**
  %326 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node"* %326, null
  br i1 %327, label %328, label %403

328:                                              ; preds = %322
  %329 = call i8* @_Znwm(i64 32) #10, !noalias !5
  %330 = getelementptr inbounds i8, i8* %329, i64 28
  %331 = bitcast i8* %330 to i32*
  store i32 76, i32* %331, align 4, !noalias !5
  %332 = bitcast i8* %329 to %"class.std::__1::__tree_node_base"*
  %333 = getelementptr inbounds i8, i8* %329, i64 16
  %334 = bitcast i8* %333 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %329, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %334, align 8
  %335 = bitcast %"class.std::__1::__tree_node_base"** %324 to i8**
  store i8* %329, i8** %335, align 8
  %336 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %336, i64 0, i32 0
  %338 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %337, align 8
  %339 = icmp eq %"class.std::__1::__tree_node_base"* %338, null
  br i1 %339, label %343, label %340

340:                                              ; preds = %328
  %341 = ptrtoint %"class.std::__1::__tree_node_base"* %338 to i64
  store i64 %341, i64* %12, align 8
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  br label %343

343:                                              ; preds = %340, %328
  %344 = phi %"class.std::__1::__tree_node_base"* [ %332, %328 ], [ %342, %340 ]
  %345 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %345, %"class.std::__1::__tree_node_base"* %344) #9
  %346 = load i64, i64* %13, align 8
  %347 = add i64 %346, 1
  store i64 %347, i64* %13, align 8
  br label %403

348:                                              ; preds = %107
  %349 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %350 = icmp eq %"class.std::__1::__tree_node"* %349, null
  br i1 %350, label %377, label %351

351:                                              ; preds = %348, %373
  %352 = phi %"class.std::__1::__tree_node"* [ %376, %373 ], [ %349, %348 ]
  %353 = phi %"class.std::__1::__tree_node_base"** [ %375, %373 ], [ %14, %348 ]
  %354 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %352, i64 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = icmp slt i32 %42, %355
  br i1 %356, label %357, label %363

357:                                              ; preds = %351
  %358 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %352, i64 0, i32 0, i32 0, i32 0
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %358, align 8
  %360 = icmp eq %"class.std::__1::__tree_node_base"* %359, null
  br i1 %360, label %361, label %373

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %352, i64 0, i32 0, i32 0
  br label %377

363:                                              ; preds = %351
  %364 = icmp slt i32 %355, %42
  br i1 %364, label %365, label %371

365:                                              ; preds = %363
  %366 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %352, i64 0, i32 0, i32 1
  %367 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %366, align 8
  %368 = icmp eq %"class.std::__1::__tree_node_base"* %367, null
  br i1 %368, label %369, label %373

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %352, i64 0, i32 0, i32 0
  br label %377

371:                                              ; preds = %363
  %372 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %352, i64 0, i32 0, i32 0
  br label %377

373:                                              ; preds = %365, %357
  %374 = phi %"class.std::__1::__tree_node_base"* [ %359, %357 ], [ %367, %365 ]
  %375 = phi %"class.std::__1::__tree_node_base"** [ %358, %357 ], [ %366, %365 ]
  %376 = bitcast %"class.std::__1::__tree_node_base"* %374 to %"class.std::__1::__tree_node"*
  br label %351

377:                                              ; preds = %348, %371, %369, %361
  %378 = phi %"class.std::__1::__tree_end_node"* [ %362, %361 ], [ %370, %369 ], [ %372, %371 ], [ %9, %348 ]
  %379 = phi %"class.std::__1::__tree_node_base"** [ %358, %361 ], [ %366, %369 ], [ %353, %371 ], [ %15, %348 ]
  %380 = bitcast %"class.std::__1::__tree_node_base"** %379 to %"class.std::__1::__tree_node"**
  %381 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %380, align 8
  %382 = icmp eq %"class.std::__1::__tree_node"* %381, null
  br i1 %382, label %383, label %403

383:                                              ; preds = %377
  %384 = call i8* @_Znwm(i64 32) #10, !noalias !8
  %385 = getelementptr inbounds i8, i8* %384, i64 28
  %386 = bitcast i8* %385 to i32*
  store i32 %42, i32* %386, align 4, !noalias !8
  %387 = bitcast i8* %384 to %"class.std::__1::__tree_node_base"*
  %388 = getelementptr inbounds i8, i8* %384, i64 16
  %389 = bitcast i8* %388 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %384, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %378, %"class.std::__1::__tree_end_node"** %389, align 8
  %390 = bitcast %"class.std::__1::__tree_node_base"** %379 to i8**
  store i8* %384, i8** %390, align 8
  %391 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %392 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %391, i64 0, i32 0
  %393 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  %394 = icmp eq %"class.std::__1::__tree_node_base"* %393, null
  br i1 %394, label %398, label %395

395:                                              ; preds = %383
  %396 = ptrtoint %"class.std::__1::__tree_node_base"* %393 to i64
  store i64 %396, i64* %12, align 8
  %397 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  br label %398

398:                                              ; preds = %395, %383
  %399 = phi %"class.std::__1::__tree_node_base"* [ %387, %383 ], [ %397, %395 ]
  %400 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %400, %"class.std::__1::__tree_node_base"* %399) #9
  %401 = load i64, i64* %13, align 8
  %402 = add i64 %401, 1
  store i64 %402, i64* %13, align 8
  br label %403

403:                                              ; preds = %398, %377, %343, %322, %223, %202, %102, %63, %61, %43, %17
  %404 = add nuw nsw i64 %18, 1
  %405 = icmp eq i64 %404, 134
  br i1 %405, label %16, label %17
}

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GpuDriverBugList20AppendAllWorkaroundsEPNSt3__16vectorIPKcNS1_9allocatorIS4_EEEE(%"class.std::__1::vector.50"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %3 = bitcast i8*** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.50"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = ashr exact i64 %7, 3
  %9 = icmp ult i64 %8, 134
  %10 = inttoptr i64 %6 to i8**
  br i1 %9, label %11, label %13

11:                                               ; preds = %1
  %12 = sub nuw nsw i64 134, %8
  tail call void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.50"* %0, i64 %12) #9
  br label %17

13:                                               ; preds = %1
  %14 = icmp eq i64 %7, 1072
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds i8*, i8** %10, i64 134
  store i8** %16, i8*** %2, align 8
  br label %17

17:                                               ; preds = %13, %11, %15
  %18 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 0
  br label %20

19:                                               ; preds = %20
  ret void

20:                                               ; preds = %20, %17
  %21 = phi i64 [ 0, %17 ], [ %33, %20 ]
  %22 = phi %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"* [ getelementptr inbounds ([134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 0, i64 0), %17 ], [ %37, %20 ]
  %23 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo", %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"* %22, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = or i64 %21, 1
  %27 = load i8**, i8*** %18, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 %21
  %29 = bitcast i8** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo", %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"* %22, i64 1, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add nuw nsw i64 %21, 2
  %34 = load i8**, i8*** %18, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 %26
  %36 = bitcast i8** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo", %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"* %22, i64 2
  %38 = icmp eq %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"* %37, getelementptr inbounds ([134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"], [134 x %"struct.gpu::(anonymous namespace)::GpuDriverBugWorkaroundInfo"]* @_ZN3gpu12_GLOBAL__N_112kFeatureListE, i64 1, i64 0)
  br i1 %38, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GpuDriverBugList20AreEntryIndicesValidERKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* @_ZN3gpu27kGpuDriverBugListEntryCountE, align 8
  %3 = tail call zeroext i1 @_ZN3gpu14GpuControlList20AreEntryIndicesValidERKNSt3__16vectorIjNS1_9allocatorIjEEEEm(%"class.std::__1::vector"* dereferenceable(24) %0, i64 %2) #9
  ret i1 %3
}

declare zeroext i1 @_ZN3gpu14GpuControlList20AreEntryIndicesValidERKNSt3__16vectorIjNS1_9allocatorIjEEEEm(%"class.std::__1::vector"* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !11
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !11
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !11
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !11
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !11
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !11
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !11
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !11
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !11
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !11
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !11
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !11
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !11
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.50"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i8**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8*, i8** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i8*, i8** %13, i64 %18
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint i8** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.50"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.50"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to i8**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i8*, i8** %57, i64 %33
  %59 = getelementptr inbounds i8*, i8** %57, i64 %56
  %60 = getelementptr inbounds i8*, i8** %58, i64 %1
  %61 = bitcast i8** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #9
  %63 = ptrtoint i8** %59 to i64
  %64 = ptrtoint i8** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 0
  %66 = load i8**, i8*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i8** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i8*, i8** %58, i64 %71
  %73 = ptrtoint i8** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i8** %72 to i8*
  %77 = bitcast i8** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #9
  %78 = load i8**, i8*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i8** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i8** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i8** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!11 = !{i8 0, i8 2}
