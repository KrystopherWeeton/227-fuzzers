; ModuleID = '../../third_party/skia/src/utils/SkCustomTypeface.cpp'
source_filename = "../../third_party/skia/src/utils/SkCustomTypeface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkCustomTypefaceBuilder = type <{ %"class.std::__1::vector", %"class.std::__1::vector.14", %struct.SkFontMetrics, %class.SkFontStyle, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkPath*, %class.SkPath*, %"class.std::__1::__compressed_pair" }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkPath* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { float*, float*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float* }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.SkFontStyle = type { i32 }
%class.sk_sp.21 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkUserTypeface = type { %class.SkTypeface.base, %"class.std::__1::vector", %"class.std::__1::vector.14", %struct.SkFontMetrics }
%class.SkTypeface.base = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8 }>
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%struct.SkAdvancedTypefaceMetrics = type { %class.SkString, %class.SkString, i32, i8, i8, i16, i16, i16, i16, i16, %struct.SkIRect }
%class.SkString = type { %class.sk_sp.25 }
%class.sk_sp.25 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkFontDescriptor = type opaque
%"class.SkTypeface::LocalizedStrings" = type { i32 (...)** }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.21, %class.sk_sp.30, %class.sk_sp.31, i8, %class.SkTMaskPreBlend }
%class.sk_sp.30 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.31 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkTMaskPreBlend = type { %class.sk_sp.32, i8*, i8*, i8* }
%class.sk_sp.32 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkScalerContextEffects = type { %class.SkPathEffect*, %class.SkMaskFilter* }
%class.SkDescriptor = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.sk_sp.49 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.50, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.50 = type { %"struct.std::__1::atomic" }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%"struct.SkFontParameters::Variation::Axis" = type <{ i32, float, float, float, i16, [2 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkUserScalerContext = type { %class.SkScalerContext, %class.SkMatrix }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }

$_ZN14SkUserTypefaceD2Ev = comdat any

$_ZN14SkUserTypefaceD0Ev = comdat any

$_ZNK12SkWeakRefCnt16internal_disposeEv = comdat any

$_ZNK12SkWeakRefCnt12weak_disposeEv = comdat any

$_ZNK14SkUserTypeface11onMakeCloneERK15SkFontArguments = comdat any

$_ZNK14SkUserTypeface23getPostScriptGlyphNamesEP8SkString = comdat any

$_ZNK14SkUserTypeface28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi = comdat any

$_ZNK14SkUserTypeface30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi = comdat any

$_ZNK14SkUserTypeface13onCountGlyphsEv = comdat any

$_ZNK14SkUserTypeface9onGetUPEMEv = comdat any

$_ZNK14SkUserTypeface14onGetTableTagsEPj = comdat any

$_ZNK14SkUserTypeface14onGetTableDataEjmmPv = comdat any

$_ZNK14SkUserTypeface15onComputeBoundsEP6SkRect = comdat any

$_ZNK10SkTypeface14onGetCTFontRefEv = comdat any

$_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

$_ZN19SkUserScalerContextD0Ev = comdat any

$_ZN19SkUserScalerContext15generateAdvanceEP7SkGlyph = comdat any

$_ZN19SkUserScalerContext15generateMetricsEP7SkGlyph = comdat any

$_ZN19SkUserScalerContext13generateImageERK7SkGlyph = comdat any

$_ZN19SkUserScalerContext12generatePathEtP6SkPath = comdat any

$_ZN19SkUserScalerContext19generateFontMetricsEP13SkFontMetrics = comdat any

$_ZTV19SkUserScalerContext = comdat any

@__const._ZN23SkCustomTypefaceBuilder6detachEv.bounds = private unnamed_addr constant %struct.SkRect { float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000 }, align 4
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZL13gHeaderString = internal constant [17 x i8] c"SkUserTypeface01\00", align 16
@__const._ZN23SkCustomTypefaceBuilder11DeserializeEP8SkStream.builder = private unnamed_addr constant %class.SkCustomTypefaceBuilder <{ %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*) } } } }, %"class.std::__1::vector.14" { %"class.std::__1::__vector_base.15" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.16" { %"struct.std::__1::__compressed_pair_elem.17" { float* inttoptr (i64 -6148914691236517206 to float*) } } } }, %struct.SkFontMetrics { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.SkFontStyle { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTV14SkUserTypeface = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkUserTypeface*)* @_ZN14SkUserTypefaceD2Ev to i8*), i8* bitcast (void (%class.SkUserTypeface*)* @_ZN14SkUserTypefaceD0Ev to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt16internal_disposeEv to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt12weak_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.21*, %class.SkUserTypeface*, %struct.SkFontArguments*)* @_ZNK14SkUserTypeface11onMakeCloneERK15SkFontArguments to i8*), i8* bitcast (%class.SkScalerContext* (%class.SkUserTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)* @_ZNK14SkUserTypeface21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor to i8*), i8* bitcast (void (%class.SkUserTypeface*, %struct.SkScalerContextRec*)* @_ZNK14SkUserTypeface11onFilterRecEP18SkScalerContextRec to i8*), i8* bitcast (%struct.SkAdvancedTypefaceMetrics* (%class.SkUserTypeface*)* @_ZNK14SkUserTypeface20onGetAdvancedMetricsEv to i8*), i8* bitcast (void (%class.SkUserTypeface*, %class.SkString*)* @_ZNK14SkUserTypeface23getPostScriptGlyphNamesEP8SkString to i8*), i8* bitcast (void (%class.SkUserTypeface*, i32*)* @_ZNK14SkUserTypeface20getGlyphToUnicodeMapEPi to i8*), i8* bitcast (%class.SkStreamAsset* (%class.SkUserTypeface*, i32*)* @_ZNK14SkUserTypeface12onOpenStreamEPi to i8*), i8* bitcast (i32 (%class.SkUserTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)* @_ZNK14SkUserTypeface28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi to i8*), i8* bitcast (i32 (%class.SkUserTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)* @_ZNK14SkUserTypeface30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi to i8*), i8* bitcast (void (%class.SkUserTypeface*, %class.SkFontDescriptor*, i8*)* @_ZNK14SkUserTypeface19onGetFontDescriptorEP16SkFontDescriptorPb to i8*), i8* bitcast (void (%class.SkUserTypeface*, i32*, i32, i16*)* @_ZNK14SkUserTypeface15onCharsToGlyphsEPKiiPt to i8*), i8* bitcast (i32 (%class.SkUserTypeface*)* @_ZNK14SkUserTypeface13onCountGlyphsEv to i8*), i8* bitcast (i32 (%class.SkUserTypeface*)* @_ZNK14SkUserTypeface9onGetUPEMEv to i8*), i8* bitcast (i1 (%class.SkTypeface*, i16*, i32, i32*)* @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi to i8*), i8* bitcast (void (%class.SkUserTypeface*, %class.SkString*)* @_ZNK14SkUserTypeface15onGetFamilyNameEP8SkString to i8*), i8* bitcast (i1 (%class.SkUserTypeface*, %class.SkString*)* @_ZNK14SkUserTypeface19onGetPostScriptNameEP8SkString to i8*), i8* bitcast (%"class.SkTypeface::LocalizedStrings"* (%class.SkUserTypeface*)* @_ZNK14SkUserTypeface26onCreateFamilyNameIteratorEv to i8*), i8* bitcast (i32 (%class.SkUserTypeface*, i32*)* @_ZNK14SkUserTypeface14onGetTableTagsEPj to i8*), i8* bitcast (i64 (%class.SkUserTypeface*, i32, i64, i64, i8*)* @_ZNK14SkUserTypeface14onGetTableDataEjmmPv to i8*), i8* bitcast (void (%class.sk_sp.49*, %class.SkTypeface*, i32)* @_ZNK10SkTypeface15onCopyTableDataEj to i8*), i8* bitcast (i1 (%class.SkUserTypeface*, %struct.SkRect*)* @_ZNK14SkUserTypeface15onComputeBoundsEP6SkRect to i8*), i8* bitcast (i8* (%class.SkTypeface*)* @_ZNK10SkTypeface14onGetCTFontRefEv to i8*)] }, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTV19SkUserScalerContext = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkScalerContext*)* @_ZN15SkScalerContextD2Ev to i8*), i8* bitcast (void (%class.SkUserScalerContext*)* @_ZN19SkUserScalerContextD0Ev to i8*), i8* bitcast (i1 (%class.SkUserScalerContext*, %class.SkGlyph*)* @_ZN19SkUserScalerContext15generateAdvanceEP7SkGlyph to i8*), i8* bitcast (void (%class.SkUserScalerContext*, %class.SkGlyph*)* @_ZN19SkUserScalerContext15generateMetricsEP7SkGlyph to i8*), i8* bitcast (void (%class.SkUserScalerContext*, %class.SkGlyph*)* @_ZN19SkUserScalerContext13generateImageERK7SkGlyph to i8*), i8* bitcast (i1 (%class.SkUserScalerContext*, i16, %class.SkPath*)* @_ZN19SkUserScalerContext12generatePathEtP6SkPath to i8*), i8* bitcast (void (%class.SkUserScalerContext*, %struct.SkFontMetrics*)* @_ZN19SkUserScalerContext19generateFontMetricsEP13SkFontMetrics to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [54 x i8] c"../../third_party/skia/src/utils/SkCustomTypeface.cpp\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Should have generated from path.\00", align 1

@_ZN23SkCustomTypefaceBuilderC1Ev = hidden unnamed_addr alias void (%class.SkCustomTypefaceBuilder*), void (%class.SkCustomTypefaceBuilder*)* @_ZN23SkCustomTypefaceBuilderC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkCustomTypefaceBuilderC2Ev(%class.SkCustomTypefaceBuilder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 3, i32 0
  %3 = bitcast %class.SkCustomTypefaceBuilder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  store i32 328080, i32* %2, align 4
  %4 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2
  %5 = bitcast %struct.SkFontMetrics* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 64, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkCustomTypefaceBuilder10setMetricsERK13SkFontMetricsf(%class.SkCustomTypefaceBuilder* nocapture, %struct.SkFontMetrics* nocapture readonly dereferenceable(64), float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 1
  %7 = bitcast float* %6 to <4 x float>*
  %8 = load <4 x float>, <4 x float>* %7, align 4
  %9 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 5
  %10 = bitcast float* %9 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4
  %12 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 9
  %13 = bitcast float* %12 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 4
  %15 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 13
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 14
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 15
  %20 = load float, float* %19, align 4
  %21 = insertelement <4 x float> undef, float %2, i32 0
  %22 = shufflevector <4 x float> %21, <4 x float> undef, <4 x i32> zeroinitializer
  %23 = fmul <4 x float> %8, %22
  %24 = fmul <4 x float> %11, %22
  %25 = fmul <4 x float> %14, %22
  %26 = fmul float %16, %2
  %27 = fmul float %18, %2
  %28 = fmul float %20, %2
  %29 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 0
  store i32 %5, i32* %29, align 8
  %30 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 1
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %23, <4 x float>* %31, align 4
  %32 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 5
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %24, <4 x float>* %33, align 4
  %34 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 9
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> %25, <4 x float>* %35, align 4
  %36 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 13
  store float %26, float* %36, align 4
  %37 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 14
  store float %27, float* %37, align 8
  %38 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 2, i32 15
  store float %28, float* %38, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN23SkCustomTypefaceBuilder12setFontStyleE11SkFontStyle(%class.SkCustomTypefaceBuilder* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 3, i32 0
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkCustomTypefaceBuilder8setGlyphEtfRK6SkPath(%class.SkCustomTypefaceBuilder*, i16 zeroext, float, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = zext i16 %1 to i64
  %6 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %class.SkPath** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.SkCustomTypefaceBuilder* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = icmp ugt i64 %12, %5
  br i1 %13, label %34, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 0
  %16 = add nuw nsw i64 %5, 1
  %17 = sub nsw i64 %16, %12
  tail call void @_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector"* %15, i64 %17) #14
  %18 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast float** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.14"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 2
  %26 = icmp ugt i64 %25, %5
  %27 = inttoptr i64 %23 to float*
  br i1 %26, label %30, label %28

28:                                               ; preds = %14
  %29 = sub nsw i64 %16, %25
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.14"* %18, i64 %29) #14
  br label %34

30:                                               ; preds = %14
  %31 = icmp ult i64 %16, %25
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = getelementptr inbounds float, float* %27, i64 %16
  store float* %33, float** %19, align 8
  br label %34

34:                                               ; preds = %32, %30, %28, %4
  %35 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 1, i32 0, i32 0
  %36 = load float*, float** %35, align 8
  %37 = getelementptr inbounds float, float* %36, i64 %5
  store float %2, float* %37, align 4
  %38 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.SkPath*, %class.SkPath** %38, align 8
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %39, i64 %5
  %41 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %40, %class.SkPath* dereferenceable(16) %3) #14
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkCustomTypefaceBuilder6detachEv(%class.sk_sp.21* noalias nocapture sret, %class.SkCustomTypefaceBuilder* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkFontStyle, align 4
  %4 = alloca %struct.SkRect, align 4
  %5 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkPath*, %class.SkPath** %5, align 8
  %7 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %class.SkPath*, %class.SkPath** %7, align 8
  %9 = icmp eq %class.SkPath* %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %11, align 8
  br label %100

12:                                               ; preds = %2
  %13 = tail call i8* @_Znwm(i64 160) #15
  %14 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %1, i64 0, i32 3, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %class.SkFontStyle* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %3, i64 0, i32 0
  store i32 %15, i32* %17, align 4
  %18 = bitcast i8* %13 to %class.SkTypeface*
  call void @_ZN10SkTypefaceC2ERK11SkFontStyleb(%class.SkTypeface* nonnull %18, %class.SkFontStyle* nonnull dereferenceable(4) %3, i1 zeroext false) #14
  %19 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV14SkUserTypeface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  %21 = ptrtoint i8* %13 to i64
  %22 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %1, i64 0, i32 1
  %23 = getelementptr inbounds i8, i8* %13, i64 72
  %24 = bitcast %"class.std::__1::vector.14"* %22 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast float** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds i8, i8* %13, i64 88
  %31 = bitcast i8* %30 to i64*
  store i64 %28, i64* %31, align 8
  %32 = bitcast %"class.std::__1::vector.14"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #14
  %33 = bitcast %class.SkCustomTypefaceBuilder* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %class.SkPath** %7 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = bitcast i8* %20 to i64*
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %13, i64 56
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %39, align 8
  %40 = bitcast %class.SkCustomTypefaceBuilder* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #14
  %41 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %1, i64 0, i32 2
  %42 = getelementptr inbounds i8, i8* %13, i64 96
  %43 = bitcast %struct.SkFontMetrics* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 4 %43, i64 64, i1 false)
  %44 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* align 4 bitcast (%struct.SkRect* @__const._ZN23SkCustomTypefaceBuilder6detachEv.bounds to i8*), i64 16, i1 false)
  %45 = inttoptr i64 %34 to %class.SkPath*
  %46 = extractelement <2 x i64> %36, i32 0
  %47 = inttoptr i64 %46 to %class.SkPath*
  %48 = icmp eq %class.SkPath* %45, %47
  br i1 %48, label %61, label %75

49:                                               ; preds = %97
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = bitcast %struct.SkRect* %4 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %12, %49
  %62 = phi i32 [ %60, %49 ], [ -8388609, %12 ]
  %63 = phi i32 [ %57, %49 ], [ 2139095039, %12 ]
  %64 = phi i32 [ %55, %49 ], [ -8388609, %12 ]
  %65 = phi i32 [ %52, %49 ], [ 2139095039, %12 ]
  %66 = getelementptr inbounds i8, i8* %13, i64 100
  %67 = bitcast i8* %66 to i32*
  store i32 %65, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %13, i64 112
  %69 = bitcast i8* %68 to i32*
  store i32 %64, i32* %69, align 8
  %70 = getelementptr inbounds i8, i8* %13, i64 128
  %71 = bitcast i8* %70 to i32*
  store i32 %63, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %13, i64 132
  %73 = bitcast i8* %72 to i32*
  store i32 %62, i32* %73, align 4
  %74 = bitcast %class.sk_sp.21* %0 to i64*
  store i64 %21, i64* %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #14
  br label %100

75:                                               ; preds = %12, %97
  %76 = phi %class.SkPath* [ %98, %97 ], [ %45, %12 ]
  %77 = getelementptr inbounds %class.SkPath, %class.SkPath* %76, i64 0, i32 0, i32 0
  %78 = load %class.SkPathRef*, %class.SkPathRef** %77, align 8
  %79 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 4, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 9
  %84 = load i8, i8* %83, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 1
  %88 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 3, i32 0
  %89 = load %struct.SkPoint*, %struct.SkPoint** %88, align 8
  %90 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 3, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %87, %struct.SkPoint* %89, i32 %91) #14
  %93 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 10
  %94 = zext i1 %92 to i8
  store i8 %94, i8* %93, align 1
  store i8 0, i8* %83, align 8
  br label %95

95:                                               ; preds = %82, %86
  %96 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %78, i64 0, i32 1
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %4, %struct.SkRect* dereferenceable(16) %96) #14
  br label %97

97:                                               ; preds = %95, %75
  %98 = getelementptr inbounds %class.SkPath, %class.SkPath* %76, i64 1
  %99 = icmp eq %class.SkPath* %98, %47
  br i1 %99, label %49, label %75

100:                                              ; preds = %61, %10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK14SkUserTypeface11onFilterRecEP18SkScalerContextRec(%class.SkUserTypeface* nocapture readnone, %struct.SkScalerContextRec* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 14
  %4 = load i16, i16* %3, align 2
  %5 = and i16 %4, -385
  store i16 %5, i16* %3, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK14SkUserTypeface20getGlyphToUnicodeMapEPi(%class.SkUserTypeface* nocapture readonly, i32* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %class.SkPath** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 4
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %14, %2
  ret void

14:                                               ; preds = %2, %14
  %15 = phi i64 [ %18, %14 ], [ 0, %2 ]
  %16 = getelementptr inbounds i32, i32* %1, i64 %15
  %17 = trunc i64 %15 to i32
  store i32 %17, i32* %16, align 4
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %5, align 8
  %20 = load i64, i64* %7, align 8
  %21 = sub i64 %19, %20
  %22 = shl i64 %21, 28
  %23 = ashr i64 %22, 32
  %24 = icmp slt i64 %18, %23
  br i1 %24, label %14, label %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.SkAdvancedTypefaceMetrics* @_ZNK14SkUserTypeface20onGetAdvancedMetricsEv(%class.SkUserTypeface* nocapture readnone) unnamed_addr #6 align 2 {
  ret %struct.SkAdvancedTypefaceMetrics* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK14SkUserTypeface19onGetFontDescriptorEP16SkFontDescriptorPb(%class.SkUserTypeface* nocapture readnone, %class.SkFontDescriptor* nocapture readnone, i8* nocapture) unnamed_addr #2 align 2 {
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK14SkUserTypeface15onCharsToGlyphsEPKiiPt(%class.SkUserTypeface* nocapture readonly, i32* nocapture readonly, i32, i16* nocapture) unnamed_addr #5 align 2 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %class.SkPath** %8 to i64*
  %10 = bitcast %"class.std::__1::vector"* %7 to i64*
  %11 = zext i32 %2 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %2, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = sub nsw i64 %11, %12
  br label %32

16:                                               ; preds = %32, %6
  %17 = phi i64 [ 0, %6 ], [ %58, %32 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i32, i32* %1, i64 %17
  %21 = load i32, i32* %20, align 4
  %22 = load i64, i64* %9, align 8
  %23 = load i64, i64* %10, align 8
  %24 = sub i64 %22, %23
  %25 = lshr exact i64 %24, 4
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %21, %26
  %28 = trunc i32 %21 to i16
  %29 = select i1 %27, i16 %28, i16 0
  %30 = getelementptr inbounds i16, i16* %3, i64 %17
  store i16 %29, i16* %30, align 2
  br label %31

31:                                               ; preds = %19, %16, %4
  ret void

32:                                               ; preds = %32, %14
  %33 = phi i64 [ 0, %14 ], [ %58, %32 ]
  %34 = phi i64 [ %15, %14 ], [ %59, %32 ]
  %35 = getelementptr inbounds i32, i32* %1, i64 %33
  %36 = load i32, i32* %35, align 4
  %37 = load i64, i64* %9, align 8
  %38 = load i64, i64* %10, align 8
  %39 = sub i64 %37, %38
  %40 = lshr exact i64 %39, 4
  %41 = trunc i64 %40 to i32
  %42 = icmp slt i32 %36, %41
  %43 = trunc i32 %36 to i16
  %44 = select i1 %42, i16 %43, i16 0
  %45 = getelementptr inbounds i16, i16* %3, i64 %33
  store i16 %44, i16* %45, align 2
  %46 = or i64 %33, 1
  %47 = getelementptr inbounds i32, i32* %1, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = load i64, i64* %9, align 8
  %50 = load i64, i64* %10, align 8
  %51 = sub i64 %49, %50
  %52 = lshr exact i64 %51, 4
  %53 = trunc i64 %52 to i32
  %54 = icmp slt i32 %48, %53
  %55 = trunc i32 %48 to i16
  %56 = select i1 %54, i16 %55, i16 0
  %57 = getelementptr inbounds i16, i16* %3, i64 %46
  store i16 %56, i16* %57, align 2
  %58 = add nuw nsw i64 %33, 2
  %59 = add i64 %34, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %16, label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkUserTypeface15onGetFamilyNameEP8SkString(%class.SkUserTypeface* nocapture readnone, %class.SkString*) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #14
  ret void
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK14SkUserTypeface19onGetPostScriptNameEP8SkString(%class.SkUserTypeface* nocapture readnone, %class.SkString* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.SkTypeface::LocalizedStrings"* @_ZNK14SkUserTypeface26onCreateFamilyNameIteratorEv(%class.SkUserTypeface* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.SkTypeface::LocalizedStrings"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkScalerContext* @_ZNK14SkUserTypeface21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkUserTypeface*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.21, align 8
  %5 = icmp eq %class.SkUserTypeface* %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic, !noalias !2
  br label %9

9:                                                ; preds = %3, %6
  %10 = ptrtoint %class.SkUserTypeface* %0 to i64
  %11 = tail call i8* @_Znwm(i64 168) #15
  %12 = bitcast %class.sk_sp.21* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = bitcast i8* %11 to %class.SkScalerContext*
  %14 = bitcast %class.sk_sp.21* %4 to i64*
  store i64 %10, i64* %14, align 8
  call void @_ZN15SkScalerContextC2E5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkScalerContext* nonnull %13, %class.sk_sp.21* nonnull %4, %struct.SkScalerContextEffects* dereferenceable(16) %1, %class.SkDescriptor* %2) #14
  %15 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %4, i64 0, i32 0
  %16 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %17 = icmp eq %class.SkTypeface* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkTypeface* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkTypeface* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %28

28:                                               ; preds = %9, %18, %22
  %29 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkUserScalerContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %11, i64 128
  %31 = bitcast i8* %30 to %class.SkMatrix*
  %32 = bitcast i8* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %32, align 4
  %33 = getelementptr inbounds i8, i8* %11, i64 144
  %34 = bitcast i8* %33 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %34, align 4
  %35 = getelementptr inbounds i8, i8* %11, i64 160
  %36 = bitcast i8* %35 to float*
  store float 1.000000e+00, float* %36, align 4
  %37 = getelementptr inbounds i8, i8* %11, i64 164
  %38 = bitcast i8* %37 to i32*
  store i32 16, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %11, i64 8
  %40 = bitcast i8* %39 to %struct.SkScalerContextRec*
  call void @_ZNK18SkScalerContextRec15getSingleMatrixEP8SkMatrix(%struct.SkScalerContextRec* %40, %class.SkMatrix* %31) #14
  %41 = getelementptr inbounds i8, i8* %11, i64 88
  store i8 1, i8* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  ret %class.SkScalerContext* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStreamAsset* @_ZNK14SkUserTypeface12onOpenStreamEPi(%class.SkUserTypeface*, i32* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %class.SkDynamicMemoryWStream, align 8
  %5 = alloca %class.SkFontStyle, align 4
  %6 = alloca %class.sk_sp.49, align 8
  %7 = bitcast %class.SkDynamicMemoryWStream* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  %11 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* nonnull %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZL13gHeaderString, i64 0, i64 0), i64 16) #14
  %12 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 3
  %13 = bitcast %struct.SkFontMetrics* %12 to i8*
  %14 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* nonnull %4, i8* %13, i64 64) #14
  %15 = bitcast %class.SkFontStyle* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  %16 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %5, i64 0, i32 0
  %17 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %16, align 4
  %19 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* nonnull %4, i8* nonnull %15, i64 4) #14
  %20 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0
  %21 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %class.SkPath** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr exact i64 %27, 4
  %29 = trunc i64 %28 to i32
  %30 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store i32 %29, i32* %3, align 4
  %31 = bitcast %class.SkDynamicMemoryWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %32 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %31, align 8
  %33 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %32, i64 2
  %34 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %33, align 8
  %35 = call zeroext i1 %34(%class.SkWStream* nonnull %20, i8* nonnull %30, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30)
  %36 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 2, i32 0, i32 0
  %37 = bitcast float** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = load i64, i64* %23, align 8
  %40 = load i64, i64* %25, align 8
  %41 = sub i64 %39, %40
  %42 = shl i64 %41, 28
  %43 = ashr i64 %42, 32
  %44 = shl nsw i64 %43, 2
  %45 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* nonnull %4, i8* %38, i64 %44) #14
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %47 = load %class.SkPath*, %class.SkPath** %46, align 8
  %48 = load %class.SkPath*, %class.SkPath** %22, align 8
  %49 = icmp eq %class.SkPath* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %2
  %51 = bitcast %class.sk_sp.49* %6 to i8*
  %52 = getelementptr inbounds %class.sk_sp.49, %class.sk_sp.49* %6, i64 0, i32 0
  br label %55

53:                                               ; preds = %71, %2
  store i32 0, i32* %1, align 4
  %54 = call %class.SkStreamAsset* @_ZN22SkDynamicMemoryWStream14detachAsStreamEv(%class.SkDynamicMemoryWStream* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  ret %class.SkStreamAsset* %54

55:                                               ; preds = %50, %71
  %56 = phi %class.SkPath* [ %47, %50 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %52, align 8
  call void @_ZNK6SkPath9serializeEv(%class.sk_sp.49* nonnull sret %6, %class.SkPath* %56) #14
  %57 = load %class.SkData*, %class.SkData** %52, align 8
  %58 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 3
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 4
  %61 = load i64, i64* %60, align 8
  %62 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* nonnull %4, i8* %59, i64 %61) #14
  %63 = load %class.SkData*, %class.SkData** %52, align 8
  %64 = icmp eq %class.SkData* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %63) #14
  %70 = bitcast %class.SkData* %63 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %70) #14
  br label %71

71:                                               ; preds = %55, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  %72 = getelementptr inbounds %class.SkPath, %class.SkPath* %56, i64 1
  %73 = icmp eq %class.SkPath* %72, %48
  br i1 %73, label %53, label %55
}

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #3

declare void @_ZNK6SkPath9serializeEv(%class.sk_sp.49* sret, %class.SkPath*) local_unnamed_addr #3

declare %class.SkStreamAsset* @_ZN22SkDynamicMemoryWStream14detachAsStreamEv(%class.SkDynamicMemoryWStream*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SkCustomTypefaceBuilder11DeserializeEP8SkStream(%class.sk_sp.21* noalias nocapture sret, %class.SkStream*) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca %struct.SkFontMetrics, align 16
  %5 = alloca %class.SkFontStyle, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.SkCustomTypefaceBuilder, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*)***
  %10 = load i64 (%class.SkStream*)**, i64 (%class.SkStream*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %10, i64 7
  %12 = load i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %11, align 8
  %13 = tail call i64 %12(%class.SkStream* %1) #14
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #14
  %15 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 16, i1 false)
  %16 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, i64 2
  %18 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %17, align 8
  %19 = call i64 %18(%class.SkStream* %1, i8* nonnull %14, i64 16) #14
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = call i32 @bcmp(i8* nonnull %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZL13gHeaderString, i64 0, i64 0), i64 16)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21, %2
  %25 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %25, align 8
  br label %245

26:                                               ; preds = %21
  %27 = bitcast %struct.SkFontMetrics* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #14
  %28 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %4, i64 0, i32 0
  store i32 -1431655766, i32* %28, align 16
  %29 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %4, i64 0, i32 1
  %30 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %4, i64 0, i32 4
  %31 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %4, i64 0, i32 8
  %32 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %4, i64 0, i32 12
  %33 = bitcast float* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 -1, i64 60, i1 false)
  %34 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %15, align 8
  %35 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %34, i64 2
  %36 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %35, align 8
  %37 = call i64 %36(%class.SkStream* %1, i8* nonnull %27, i64 64) #14
  %38 = icmp eq i64 %37, 64
  br i1 %38, label %41, label %39

39:                                               ; preds = %26
  %40 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %40, align 8
  br label %243

41:                                               ; preds = %26
  %42 = bitcast %class.SkFontStyle* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #14
  %43 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %5, i64 0, i32 0
  store i32 328080, i32* %43, align 4
  %44 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %15, align 8
  %45 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %44, i64 2
  %46 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %45, align 8
  %47 = call i64 %46(%class.SkStream* %1, i8* nonnull %42, i64 4) #14
  %48 = icmp eq i64 %47, 4
  br i1 %48, label %51, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %50, align 8
  br label %241

51:                                               ; preds = %41
  %52 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #14
  store i32 -1431655766, i32* %6, align 4
  %53 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %6) #14
  %54 = xor i1 %53, true
  %55 = load i32, i32* %6, align 4
  %56 = icmp ugt i32 %55, 65536
  %57 = or i1 %56, %54
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %59, align 8
  br label %239

60:                                               ; preds = %51
  %61 = bitcast %class.SkCustomTypefaceBuilder* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %61) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 bitcast (%class.SkCustomTypefaceBuilder* @__const._ZN23SkCustomTypefaceBuilder11DeserializeEP8SkStream.builder to i8*), i64 120, i1 false)
  %62 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 48, i1 false) #14
  %63 = bitcast %struct.SkFontMetrics* %4 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 16
  %65 = bitcast float* %30 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 16
  %67 = bitcast float* %31 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 16
  %69 = bitcast float* %32 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 16
  %71 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 2, i32 0
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %72, align 8
  %73 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 2, i32 4
  %74 = bitcast float* %73 to <4 x i32>*
  store <4 x i32> %66, <4 x i32>* %74, align 8
  %75 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 2, i32 8
  %76 = bitcast float* %75 to <4 x i32>*
  store <4 x i32> %68, <4 x i32>* %76, align 8
  %77 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 2, i32 12
  %78 = bitcast float* %77 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %78, align 8
  %79 = load i32, i32* %43, align 4
  store i32 %79, i32* %62, align 8
  %80 = sext i32 %55 to i64
  %81 = icmp eq i32 %55, 0
  br i1 %81, label %93, label %82

82:                                               ; preds = %60
  %83 = shl nsw i64 %80, 2
  %84 = call i8* @_Znwm(i64 %83) #15
  %85 = bitcast i8* %84 to float*
  %86 = ptrtoint i8* %84 to i64
  %87 = add nsw i64 %80, -1
  %88 = getelementptr float, float* %85, i64 %87
  %89 = ptrtoint float* %88 to i64
  %90 = sub i64 4, %86
  %91 = add i64 %90, %89
  %92 = and i64 %91, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 0, i64 %92, i1 false) #14
  br label %93

93:                                               ; preds = %60, %82
  %94 = phi i64 [ %83, %82 ], [ 0, %60 ]
  %95 = phi i8* [ %84, %82 ], [ null, %60 ]
  %96 = phi float* [ %85, %82 ], [ null, %60 ]
  %97 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %15, align 8
  %98 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %97, i64 2
  %99 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %98, align 8
  %100 = call i64 %99(%class.SkStream* %1, i8* %95, i64 %94) #14
  %101 = load i32, i32* %6, align 4
  %102 = sext i32 %101 to i64
  %103 = shl nsw i64 %102, 2
  %104 = icmp eq i64 %100, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %93
  %106 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %106, align 8
  br label %207

107:                                              ; preds = %93
  %108 = load i64 (%class.SkStream*)**, i64 (%class.SkStream*)*** %9, align 8
  %109 = getelementptr inbounds i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %108, i64 7
  %110 = load i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %109, align 8
  %111 = call i64 %110(%class.SkStream* %1) #14
  %112 = load i64 (%class.SkStream*)**, i64 (%class.SkStream*)*** %9, align 8
  %113 = getelementptr inbounds i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %112, i64 11
  %114 = load i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %113, align 8
  %115 = call i64 %114(%class.SkStream* %1) #14
  %116 = sub i64 %115, %111
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %107
  %119 = call i8* @_Z15sk_malloc_flagsmj(i64 %116, i32 2) #14
  br label %120

120:                                              ; preds = %107, %118
  %121 = phi i8* [ %119, %118 ], [ null, %107 ]
  %122 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %15, align 8
  %123 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %122, i64 2
  %124 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %123, align 8
  %125 = call i64 %124(%class.SkStream* %1, i8* %121, i64 %116) #14
  %126 = icmp eq i64 %125, %116
  br i1 %126, label %127, label %144

127:                                              ; preds = %120
  %128 = load i32, i32* %6, align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %195

130:                                              ; preds = %127
  %131 = bitcast %class.SkPath* %8 to i8*
  %132 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 0, i32 0, i32 1
  %133 = bitcast %class.SkPath** %132 to i64*
  %134 = bitcast %class.SkCustomTypefaceBuilder* %7 to i64*
  %135 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 0
  %136 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 1
  %137 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 1, i32 0, i32 1
  %138 = bitcast float** %137 to i64*
  %139 = bitcast %"class.std::__1::vector.14"* %136 to i64*
  %140 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 1, i32 0, i32 0
  %141 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  %143 = bitcast %class.SkPath* %8 to i8*
  br label %150

144:                                              ; preds = %120
  %145 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %145, align 8
  br label %203

146:                                              ; preds = %191
  %147 = load i32, i32* %6, align 4
  %148 = sext i32 %147 to i64
  %149 = icmp slt i64 %194, %148
  br i1 %149, label %150, label %195

150:                                              ; preds = %130, %146
  %151 = phi i64 [ 0, %130 ], [ %194, %146 ]
  %152 = phi i64 [ 0, %130 ], [ %193, %146 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #14
  %153 = getelementptr inbounds i8, i8* %121, i64 %152
  %154 = sub i64 %116, %152
  %155 = call i64 @_ZN6SkPath14readFromMemoryEPKvm(%class.SkPath* nonnull %8, i8* %153, i64 %154) #14
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %150
  store %class.SkTypeface* null, %class.SkTypeface** %142, align 8
  br label %191

158:                                              ; preds = %150
  %159 = getelementptr inbounds float, float* %96, i64 %151
  %160 = bitcast float* %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = and i64 %151, 65535
  %163 = load i64, i64* %133, align 8
  %164 = load i64, i64* %134, align 8
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 4
  %167 = icmp ugt i64 %166, %162
  br i1 %167, label %183, label %168

168:                                              ; preds = %158
  %169 = add nuw nsw i64 %162, 1
  %170 = sub nsw i64 %169, %166
  call void @_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector"* nonnull %135, i64 %170) #14
  %171 = load i64, i64* %138, align 8
  %172 = load i64, i64* %139, align 8
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 2
  %175 = icmp ugt i64 %174, %162
  %176 = inttoptr i64 %172 to float*
  br i1 %175, label %179, label %177

177:                                              ; preds = %168
  %178 = sub nsw i64 %169, %174
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.14"* %136, i64 %178) #14
  br label %183

179:                                              ; preds = %168
  %180 = icmp ult i64 %169, %174
  br i1 %180, label %181, label %183

181:                                              ; preds = %179
  %182 = getelementptr inbounds float, float* %176, i64 %169
  store float* %182, float** %137, align 8
  br label %183

183:                                              ; preds = %158, %177, %179, %181
  %184 = load float*, float** %140, align 8
  %185 = getelementptr inbounds float, float* %184, i64 %162
  %186 = bitcast float* %185 to i32*
  store i32 %161, i32* %186, align 4
  %187 = load %class.SkPath*, %class.SkPath** %141, align 8
  %188 = getelementptr inbounds %class.SkPath, %class.SkPath* %187, i64 %162
  %189 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %188, %class.SkPath* nonnull dereferenceable(16) %8) #14
  %190 = add i64 %155, %152
  br label %191

191:                                              ; preds = %183, %157
  %192 = phi i1 [ false, %157 ], [ true, %183 ]
  %193 = phi i64 [ %152, %157 ], [ %190, %183 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #14
  %194 = add nuw nsw i64 %151, 1
  br i1 %192, label %146, label %203

195:                                              ; preds = %146, %127
  %196 = phi i64 [ 0, %127 ], [ %193, %146 ]
  %197 = add i64 %196, %111
  %198 = bitcast %class.SkStream* %1 to i1 (%class.SkStream*, i64)***
  %199 = load i1 (%class.SkStream*, i64)**, i1 (%class.SkStream*, i64)*** %198, align 8
  %200 = getelementptr inbounds i1 (%class.SkStream*, i64)*, i1 (%class.SkStream*, i64)** %199, i64 8
  %201 = load i1 (%class.SkStream*, i64)*, i1 (%class.SkStream*, i64)** %200, align 8
  %202 = call zeroext i1 %201(%class.SkStream* %1, i64 %197) #14
  call void @_ZN23SkCustomTypefaceBuilder6detachEv(%class.sk_sp.21* sret %0, %class.SkCustomTypefaceBuilder* nonnull %7)
  br label %203

203:                                              ; preds = %191, %195, %144
  %204 = phi %class.SkStream* [ null, %195 ], [ %1, %144 ], [ %1, %191 ]
  %205 = icmp eq i8* %121, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  call void @_Z7sk_freePv(i8* nonnull %121) #14
  br label %207

207:                                              ; preds = %206, %203, %105
  %208 = phi %class.SkStream* [ %1, %105 ], [ %204, %203 ], [ %204, %206 ]
  %209 = icmp eq float* %96, null
  br i1 %209, label %211, label %210

210:                                              ; preds = %207
  call void @_ZdlPv(i8* %95) #15
  br label %211

211:                                              ; preds = %207, %210
  %212 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 1, i32 0, i32 0
  %213 = load float*, float** %212, align 8
  %214 = icmp eq float* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = ptrtoint float* %213 to i64
  %217 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 1, i32 0, i32 1
  %218 = bitcast float** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast float* %213 to i8*
  call void @_ZdlPv(i8* %219) #15
  br label %220

220:                                              ; preds = %215, %211
  %221 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 0, i32 0, i32 0
  %222 = load %class.SkPath*, %class.SkPath** %221, align 8
  %223 = icmp eq %class.SkPath* %222, null
  br i1 %223, label %238, label %224

224:                                              ; preds = %220
  %225 = bitcast %class.SkPath* %222 to i8*
  %226 = getelementptr inbounds %class.SkCustomTypefaceBuilder, %class.SkCustomTypefaceBuilder* %7, i64 0, i32 0, i32 0, i32 1
  %227 = load %class.SkPath*, %class.SkPath** %226, align 8
  %228 = icmp eq %class.SkPath* %227, %222
  br i1 %228, label %236, label %229

229:                                              ; preds = %224, %229
  %230 = phi %class.SkPath* [ %231, %229 ], [ %227, %224 ]
  %231 = getelementptr inbounds %class.SkPath, %class.SkPath* %230, i64 -1
  call void @_ZN6SkPathD1Ev(%class.SkPath* %231) #14
  %232 = icmp eq %class.SkPath* %231, %222
  br i1 %232, label %233, label %229

233:                                              ; preds = %229
  %234 = bitcast %class.SkCustomTypefaceBuilder* %7 to i8**
  %235 = load i8*, i8** %234, align 8
  br label %236

236:                                              ; preds = %233, %224
  %237 = phi i8* [ %235, %233 ], [ %225, %224 ]
  store %class.SkPath* %222, %class.SkPath** %226, align 8
  call void @_ZdlPv(i8* %237) #15
  br label %238

238:                                              ; preds = %220, %236
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %61) #14
  br label %239

239:                                              ; preds = %238, %58
  %240 = phi %class.SkStream* [ %1, %58 ], [ %208, %238 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #14
  br label %241

241:                                              ; preds = %239, %49
  %242 = phi %class.SkStream* [ %240, %239 ], [ %1, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #14
  br label %243

243:                                              ; preds = %241, %39
  %244 = phi %class.SkStream* [ %242, %241 ], [ %1, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #14
  br label %245

245:                                              ; preds = %243, %24
  %246 = phi %class.SkStream* [ %244, %243 ], [ %1, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #14
  %247 = icmp eq %class.SkStream* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %245
  %249 = bitcast %class.SkStream* %246 to i1 (%class.SkStream*, i64)***
  %250 = load i1 (%class.SkStream*, i64)**, i1 (%class.SkStream*, i64)*** %249, align 8
  %251 = getelementptr inbounds i1 (%class.SkStream*, i64)*, i1 (%class.SkStream*, i64)** %250, i64 8
  %252 = load i1 (%class.SkStream*, i64)*, i1 (%class.SkStream*, i64)** %251, align 8
  %253 = call zeroext i1 %252(%class.SkStream* nonnull %246, i64 %13) #14
  br label %254

254:                                              ; preds = %245, %248
  ret void
}

declare zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream*, i32*) local_unnamed_addr #3

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #3

declare i64 @_ZN6SkPath14readFromMemoryEPKvm(%class.SkPath*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkUserTypefaceD2Ev(%class.SkUserTypeface*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV14SkUserTypeface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %class.SkPath*, %class.SkPath** %13, align 8
  %15 = icmp eq %class.SkPath* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = bitcast %class.SkPath* %14 to i8*
  %18 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %class.SkPath*, %class.SkPath** %18, align 8
  %20 = icmp eq %class.SkPath* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %class.SkPath* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %22, i64 -1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %23) #14
  %24 = icmp eq %class.SkPath* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector"* %12 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %class.SkPath* %14, %class.SkPath** %18, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %11, %28
  %31 = bitcast %class.SkUserTypeface* %0 to %class.SkTypeface*
  tail call void @_ZN10SkTypefaceD2Ev(%class.SkTypeface* %31) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkUserTypefaceD0Ev(%class.SkUserTypeface*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV14SkUserTypeface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %class.SkPath*, %class.SkPath** %13, align 8
  %15 = icmp eq %class.SkPath* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = bitcast %class.SkPath* %14 to i8*
  %18 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %class.SkPath*, %class.SkPath** %18, align 8
  %20 = icmp eq %class.SkPath* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %class.SkPath* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %22, i64 -1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %23) #14
  %24 = icmp eq %class.SkPath* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector"* %12 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %class.SkPath* %14, %class.SkPath** %18, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %11, %28
  %31 = bitcast %class.SkUserTypeface* %0 to %class.SkTypeface*
  tail call void @_ZN10SkTypefaceD2Ev(%class.SkTypeface* %31) #14
  %32 = bitcast %class.SkUserTypeface* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt16internal_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkWeakRefCnt*)***
  %3 = load void (%class.SkWeakRefCnt*)**, void (%class.SkWeakRefCnt*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %3, i64 3
  %5 = load void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %4, align 8
  tail call void %5(%class.SkWeakRefCnt* %0) #14
  %6 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp ne i32 %7, 1
  %9 = icmp eq %class.SkWeakRefCnt* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = bitcast %class.SkWeakRefCnt* %0 to %class.SkRefCntBase*
  %13 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 1
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #14
  br label %17

17:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt12weak_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkUserTypeface11onMakeCloneERK15SkFontArguments(%class.sk_sp.21* noalias sret, %class.SkUserTypeface*, %struct.SkFontArguments* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %class.SkUserTypeface* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic, !noalias !5
  br label %8

8:                                                ; preds = %5, %3
  %9 = ptrtoint %class.SkUserTypeface* %1 to i64
  %10 = bitcast %class.sk_sp.21* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkUserTypeface23getPostScriptGlyphNamesEP8SkString(%class.SkUserTypeface*, %class.SkString*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkUserTypeface28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkUserTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkUserTypeface30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkUserTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkUserTypeface13onCountGlyphsEv(%class.SkUserTypeface*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %class.SkPath** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkUserTypeface9onGetUPEMEv(%class.SkUserTypeface*) unnamed_addr #0 comdat align 2 {
  ret i32 2048
}

declare zeroext i1 @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi(%class.SkTypeface*, i16*, i32, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkUserTypeface14onGetTableTagsEPj(%class.SkUserTypeface*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK14SkUserTypeface14onGetTableDataEjmmPv(%class.SkUserTypeface*, i32, i64, i64, i8*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZNK10SkTypeface15onCopyTableDataEj(%class.sk_sp.49* sret, %class.SkTypeface*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkUserTypeface15onComputeBoundsEP6SkRect(%class.SkUserTypeface*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 3, i32 8
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 3, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 3, i32 9
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %0, i64 0, i32 3, i32 4
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %struct.SkRect* %1 to i32*
  store i32 %5, i32* %15, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %17 = bitcast float* %16 to i32*
  store i32 %8, i32* %17, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %19 = bitcast float* %18 to i32*
  store i32 %11, i32* %19, align 4
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %21 = bitcast float* %20 to i32*
  store i32 %14, i32* %21, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK10SkTypeface14onGetCTFontRefEv(%class.SkTypeface*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN10SkTypefaceC2ERK11SkFontStyleb(%class.SkTypeface*, %class.SkFontStyle* dereferenceable(4), i1 zeroext) unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN10SkTypefaceD2Ev(%class.SkTypeface*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.SkPath** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.SkPath** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %class.SkPath*
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %class.SkPath* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %class.SkPath* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %19) #14
  %20 = getelementptr inbounds %class.SkPath, %class.SkPath* %19, i64 1
  %21 = icmp eq %class.SkPath* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %93

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = ashr exact i64 %27, 4
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 1152921504606846975
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #16
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = ashr exact i64 %34, 4
  %36 = icmp ult i64 %35, 576460752303423487
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = ashr exact i64 %34, 3
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 1152921504606846975
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #16
  unreachable

45:                                               ; preds = %33, %42
  %46 = phi i64 [ %40, %42 ], [ 1152921504606846975, %33 ]
  %47 = shl i64 %46, 4
  %48 = tail call i8* @_Znwm(i64 %47) #15
  %49 = bitcast i8* %48 to %class.SkPath*
  br label %50

50:                                               ; preds = %37, %45
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %class.SkPath* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %class.SkPath, %class.SkPath* %52, i64 %28
  %54 = getelementptr inbounds %class.SkPath, %class.SkPath* %52, i64 %51
  %55 = getelementptr inbounds %class.SkPath, %class.SkPath* %53, i64 %1
  br label %56

56:                                               ; preds = %50, %56
  %57 = phi %class.SkPath* [ %58, %56 ], [ %53, %50 ]
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %57) #14
  %58 = getelementptr inbounds %class.SkPath, %class.SkPath* %57, i64 1
  %59 = icmp eq %class.SkPath* %55, %58
  br i1 %59, label %60, label %56

60:                                               ; preds = %56
  %61 = ptrtoint %class.SkPath* %54 to i64
  %62 = ptrtoint %class.SkPath* %55 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %64 = load %class.SkPath*, %class.SkPath** %63, align 8
  %65 = load %class.SkPath*, %class.SkPath** %6, align 8
  %66 = icmp eq %class.SkPath* %65, %64
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = ptrtoint %class.SkPath* %64 to i64
  br label %78

69:                                               ; preds = %60, %69
  %70 = phi %class.SkPath* [ %72, %69 ], [ %53, %60 ]
  %71 = phi %class.SkPath* [ %73, %69 ], [ %65, %60 ]
  %72 = getelementptr inbounds %class.SkPath, %class.SkPath* %70, i64 -1
  %73 = getelementptr inbounds %class.SkPath, %class.SkPath* %71, i64 -1
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %72, %class.SkPath* dereferenceable(16) %73) #14
  %74 = icmp eq %class.SkPath* %73, %64
  br i1 %74, label %75, label %69

75:                                               ; preds = %69
  %76 = load i64, i64* %25, align 8
  %77 = load %class.SkPath*, %class.SkPath** %6, align 8
  br label %78

78:                                               ; preds = %67, %75
  %79 = phi %class.SkPath* [ %64, %67 ], [ %77, %75 ]
  %80 = phi %class.SkPath* [ %53, %67 ], [ %72, %75 ]
  %81 = phi i64 [ %68, %67 ], [ %76, %75 ]
  %82 = ptrtoint %class.SkPath* %80 to i64
  store i64 %82, i64* %25, align 8
  store i64 %62, i64* %7, align 8
  store i64 %61, i64* %4, align 8
  %83 = inttoptr i64 %81 to %class.SkPath*
  %84 = icmp eq %class.SkPath* %79, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %78, %85
  %86 = phi %class.SkPath* [ %87, %85 ], [ %79, %78 ]
  %87 = getelementptr inbounds %class.SkPath, %class.SkPath* %86, i64 -1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %87) #14
  %88 = icmp eq %class.SkPath* %87, %83
  br i1 %88, label %89, label %85

89:                                               ; preds = %85, %78
  %90 = icmp eq i64 %81, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %92) #15
  br label %93

93:                                               ; preds = %91, %89, %22
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.14"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #14
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare void @_ZN15SkScalerContextC2E5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkScalerContext*, %class.sk_sp.21*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #3

declare void @_ZNK18SkScalerContextRec15getSingleMatrixEP8SkMatrix(%struct.SkScalerContextRec*, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN15SkScalerContextD2Ev(%class.SkScalerContext*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkUserScalerContextD0Ev(%class.SkUserScalerContext*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 0
  tail call void @_ZN15SkScalerContextD2Ev(%class.SkScalerContext* %2) #14
  %3 = bitcast %class.SkUserScalerContext* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN19SkUserScalerContext15generateAdvanceEP7SkGlyph(%class.SkUserScalerContext*, %class.SkGlyph*) unnamed_addr #12 comdat align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 0, i32 2, i32 0
  %5 = bitcast %class.SkTypeface** %4 to %class.SkUserTypeface**
  %6 = load %class.SkUserTypeface*, %class.SkUserTypeface** %5, align 8
  %7 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 2
  %11 = and i32 %10, 65535
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %6, i64 0, i32 2, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = getelementptr inbounds float, float* %14, i64 %12
  %16 = load float, float* %15, align 4
  %17 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %19 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %19, align 8
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %20, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %7, float %16, float 0.000000e+00, %struct.SkPoint* nonnull %18) #14
  %21 = load <2 x float>, <2 x float>* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %22 = extractelement <2 x float> %21, i32 0
  %23 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 6
  store float %22, float* %23, align 8
  %24 = extractelement <2 x float> %21, i32 1
  %25 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 7
  store float %24, float* %25, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkUserScalerContext15generateMetricsEP7SkGlyph(%class.SkUserScalerContext*, %class.SkGlyph*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #14
  %3 = bitcast %class.SkUserScalerContext* %0 to i1 (%class.SkUserScalerContext*, %class.SkGlyph*)***
  %4 = load i1 (%class.SkUserScalerContext*, %class.SkGlyph*)**, i1 (%class.SkUserScalerContext*, %class.SkGlyph*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkUserScalerContext*, %class.SkGlyph*)*, i1 (%class.SkUserScalerContext*, %class.SkGlyph*)** %4, i64 2
  %6 = load i1 (%class.SkUserScalerContext*, %class.SkGlyph*)*, i1 (%class.SkUserScalerContext*, %class.SkGlyph*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkUserScalerContext* %0, %class.SkGlyph* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkUserScalerContext13generateImageERK7SkGlyph(%class.SkUserScalerContext*, %class.SkGlyph* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 219, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN19SkUserScalerContext12generatePathEtP6SkPath(%class.SkUserScalerContext*, i16 zeroext, %class.SkPath*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 0, i32 2, i32 0
  %5 = bitcast %class.SkTypeface** %4 to %class.SkUserTypeface**
  %6 = load %class.SkUserTypeface*, %class.SkUserTypeface** %5, align 8
  %7 = zext i16 %1 to i64
  %8 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %6, i64 0, i32 1, i32 0, i32 0
  %9 = load %class.SkPath*, %class.SkPath** %8, align 8
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %9, i64 %7
  %11 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 1
  tail call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %10, %class.SkMatrix* dereferenceable(40) %11, %class.SkPath* %2, i32 1) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkUserScalerContext19generateFontMetricsEP13SkFontMetrics(%class.SkUserScalerContext*, %struct.SkFontMetrics*) unnamed_addr #12 comdat align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 1
  %5 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %7 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %7, align 8
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %4, float 1.000000e+00, float 1.000000e+00, %struct.SkPoint* nonnull %6) #14
  %9 = load <2 x float>, <2 x float>* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  %10 = getelementptr inbounds %class.SkUserScalerContext, %class.SkUserScalerContext* %0, i64 0, i32 0, i32 2, i32 0
  %11 = bitcast %class.SkTypeface** %10 to %class.SkUserTypeface**
  %12 = load %class.SkUserTypeface*, %class.SkUserTypeface** %11, align 8
  %13 = shufflevector <2 x float> %9, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %14 = shufflevector <2 x float> %13, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 1>
  %15 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 1
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 4
  %20 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 5
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 4
  %23 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 9
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 4
  %26 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 13
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 14
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %class.SkUserTypeface, %class.SkUserTypeface* %12, i64 0, i32 3, i32 15
  %31 = load float, float* %30, align 4
  %32 = extractelement <2 x float> %9, i32 1
  %33 = shufflevector <2 x float> %9, <2 x float> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %34 = fmul <4 x float> %33, %19
  %35 = fmul <4 x float> %14, %22
  %36 = shufflevector <2 x float> %9, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 1>
  %37 = fmul <4 x float> %36, %25
  %38 = fmul float %32, %27
  %39 = fmul float %32, %29
  %40 = fmul float %32, %31
  %41 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 0
  store i32 %16, i32* %41, align 4
  %42 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 1
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %34, <4 x float>* %43, align 4
  %44 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 5
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> %35, <4 x float>* %45, align 4
  %46 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 9
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %37, <4 x float>* %47, align 4
  %48 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 13
  store float %38, float* %48, align 4
  %49 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 14
  store float %39, float* %49, align 4
  %50 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 15
  store float %40, float* %50, align 4
  ret void
}

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #3

declare void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI14SkUserTypefaceE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI14SkUserTypefaceE5sk_spIT_EPS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI14SkUserTypefaceE5sk_spIT_EPKS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI14SkUserTypefaceE5sk_spIT_EPKS2_"}
