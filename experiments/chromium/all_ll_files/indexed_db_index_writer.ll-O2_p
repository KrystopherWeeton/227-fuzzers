; ModuleID = '../../content/browser/indexed_db/indexed_db_index_writer.cc'
source_filename = "../../content/browser/indexed_db/indexed_db_index_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::IndexWriter" = type { %"struct.blink::IndexedDBIndexMetadata", %"class.std::__1::vector.6" }
%"struct.blink::IndexedDBIndexMetadata" = type <{ %"class.std::__1::basic_string", i64, %"class.blink::IndexedDBKeyPath", i8, i8, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.blink::IndexedDBKeyPath" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"*, %"class.std::__1::__compressed_pair.8" }
%"class.blink::IndexedDBKey" = type { i32, %"class.std::__1::vector.6", %"class.std::__1::basic_string.13", %"class.std::__1::basic_string", double, i64 }
%"class.std::__1::basic_string.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.16 }
%union.anon.16 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::IndexedDBKey"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.content::IndexedDBBackingStore" = type { i32 (...)**, i32, %"class.content::TransactionalLevelDBFactory"*, %"class.url::Origin", %"class.base::FilePath", %"class.storage::mojom::BlobStorageContext"*, %"class.storage::mojom::FileSystemAccessContext"*, %"class.std::__1::unique_ptr", %"class.std::__1::basic_string.13", %class.scoped_refptr.26, %"class.std::__1::map", i8, i32, %"class.base::OneShotTimer", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.45", %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.51", i64, %"class.base::WeakPtrFactory.57" }
%"class.content::TransactionalLevelDBFactory" = type opaque
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.13" }
%"class.storage::mojom::BlobStorageContext" = type { i32 (...)** }
%"class.storage::mojom::FileSystemAccessContext" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.storage::FilesystemProxy"* }
%"class.storage::FilesystemProxy" = type { %"class.base::FilePath", i64, %"class.mojo::SharedRemote" }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%class.scoped_refptr.26 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.26, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.37", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.38" }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.content::TransactionalLevelDBDatabase"* }
%"class.content::TransactionalLevelDBDatabase" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.content::IndexedDBActiveBlobRegistry"* }
%"class.content::IndexedDBActiveBlobRegistry" = type opaque
%"class.base::WeakPtrFactory.57" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::IndexedDBBackingStore::Transaction" = type { i32 (...)**, %"class.base::WeakPtr", %"class.content::TransactionalLevelDBFactory"*, %class.scoped_refptr.59, %"class.std::__1::map", %"class.std::__1::map", i64, %"class.std::__1::vector.60", %"class.std::__1::vector.60", %"class.absl::optional.67", i8, i32, i32, %"class.base::WeakPtrFactory.77" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.59 = type { %"class.content::TransactionalLevelDBTransaction"* }
%"class.content::TransactionalLevelDBTransaction" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.62" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::pair"* }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"struct.content::IndexedDBBackingStore::Transaction::BlobWriteState" }
%"struct.content::IndexedDBBackingStore::Transaction::BlobWriteState" = type { i32, %"class.base::OnceCallback.72" }
%"class.base::OnceCallback.72" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.77" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.leveldb::Status" = type { i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.content::IndexedDBBackingStore::RecordIdentifier" = type { %"class.std::__1::basic_string.13", i64 }
%"class.content::IndexedDBTransaction" = type { i32 (...)**, i64, %"class.std::__1::set", i32, i8, i32, %"struct.content::ScopesLocksHolder", i8, %"class.base::WeakPtr.101", %class.scoped_refptr.102, %"class.base::WeakPtr.173", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.174", i64, %"class.base::internal::CheckedNumeric", %"class.content::IndexedDBTransaction::TaskQueue", %"class.content::IndexedDBTransaction::TaskQueue", %"class.content::IndexedDBTransaction::TaskStack", %"class.std::__1::unique_ptr.178", i8, i32, i8, i8, i64, i64, %"class.std::__1::set.184", %"class.base::OneShotTimer", %"struct.content::IndexedDBTransaction::Diagnostics", %"class.base::WeakPtrFactory.195" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.content::ScopesLocksHolder" = type { %"class.std::__1::vector.92", %"class.base::WeakPtrFactory.100" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.content::ScopeLock"*, %"class.content::ScopeLock"*, %"class.std::__1::__compressed_pair.95" }
%"class.content::ScopeLock" = type { %"struct.content::ScopeLockRange", i32, %"class.base::OnceCallback.94" }
%"struct.content::ScopeLockRange" = type { %"class.std::__1::basic_string.13", %"class.std::__1::basic_string.13" }
%"class.base::OnceCallback.94" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.content::ScopeLock"* }
%"class.base::WeakPtrFactory.100" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr.101" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.102 = type { %"class.content::IndexedDBDatabaseCallbacks"* }
%"class.content::IndexedDBDatabaseCallbacks" = type { i32 (...)**, %"class.base::RefCounted", i8, %class.scoped_refptr.103, %"class.mojo::AssociatedRemote" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.103 = type { %"class.content::IndexedDBContextImpl"* }
%"class.content::IndexedDBContextImpl" = type opaque
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.167" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.104", i32 }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.107", %"class.absl::optional.108", %"class.absl::optional.113", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.120", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.142", %"class.std::__1::map.153", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.162", i8, %class.scoped_refptr.26, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.163" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.107" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { %"class.base::TimeDelta" }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"class.base::OneShotTimer" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.196", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.26, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.197", [4 x i8] }>
%"class.base::RefCountedThreadSafe.196" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.119 }
%class.scoped_refptr.119 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.123", %class.scoped_refptr.124 }
%"class.base::RepeatingCallback.123" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.124 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.125", [4 x i8] }>
%"class.base::RefCountedThreadSafe.125" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.141" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.141" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.base::OnceCallback.162" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.163" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::mojom::IDBDatabaseCallbacksProxy"* }
%"class.blink::mojom::IDBDatabaseCallbacksProxy" = type { %"class.blink::mojom::IDBDatabaseCallbacks", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::IDBDatabaseCallbacks" = type { i32 (...)** }
%"class.base::WeakPtr.173" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.174" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CheckedNumeric" = type { %"class.base::internal::CheckedNumericState" }
%"class.base::internal::CheckedNumericState" = type { i8, i64 }
%"class.content::IndexedDBTransaction::TaskQueue" = type { %"class.std::__1::queue" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback.175"*, i64 }
%"class.base::OnceCallback.175" = type { %"class.base::internal::CallbackBase" }
%"class.content::IndexedDBTransaction::TaskStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque.176" }
%"class.base::circular_deque.176" = type { %"class.base::internal::VectorBuffer.177", i64, i64 }
%"class.base::internal::VectorBuffer.177" = type { %"class.base::OnceCallback"*, i64 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.content::IndexedDBBackingStore::Transaction"* }
%"class.std::__1::set.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.content::IndexedDBTransaction::Diagnostics" = type { %"class.base::Time", %"class.base::Time", i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.194" }
%"class.base::time_internal::TimeBase.194" = type { i64 }
%"class.base::WeakPtrFactory.195" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::IndexedDBObjectStoreMetadata" = type { %"class.std::__1::basic_string", i64, %"class.blink::IndexedDBKeyPath", i8, i64, %"class.std::__1::map.202" }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.blink::IndexedDBIndexKeys"*, %"struct.blink::IndexedDBIndexKeys"*, %"class.std::__1::__compressed_pair.213" }
%"struct.blink::IndexedDBIndexKeys" = type { i64, %"class.std::__1::vector.6" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.blink::IndexedDBIndexKeys"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.content::IndexWriter"* }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::unique_ptr.220"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.232" }
%"struct.std::__1::pair.232" = type { i64, %"struct.blink::IndexedDBIndexMetadata" }

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN5blink12IndexedDBKeyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN7content11IndexWriterENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [29 x i16] [i16 85, i16 110, i16 97, i16 98, i16 108, i16 101, i16 32, i16 116, i16 111, i16 32, i16 97, i16 100, i16 100, i16 32, i16 107, i16 101, i16 121, i16 32, i16 116, i16 111, i16 32, i16 105, i16 110, i16 100, i16 101, i16 120, i16 32, i16 39, i16 0], align 2
@.str.1 = private unnamed_addr constant [66 x i16] [i16 39, i16 58, i16 32, i16 97, i16 116, i16 32, i16 108, i16 101, i16 97, i16 115, i16 116, i16 32, i16 111, i16 110, i16 101, i16 32, i16 107, i16 101, i16 121, i16 32, i16 100, i16 111, i16 101, i16 115, i16 32, i16 110, i16 111, i16 116, i16 32, i16 115, i16 97, i16 116, i16 105, i16 115, i16 102, i16 121, i16 32, i16 116, i16 104, i16 101, i16 32, i16 117, i16 110, i16 105, i16 113, i16 117, i16 101, i16 110, i16 101, i16 115, i16 115, i16 32, i16 114, i16 101, i16 113, i16 117, i16 105, i16 114, i16 101, i16 109, i16 101, i16 110, i16 116, i16 115, i16 46, i16 0], align 2

@_ZN7content11IndexWriterC1ERKN5blink22IndexedDBIndexMetadataE = hidden unnamed_addr alias void (%"class.content::IndexWriter"*, %"struct.blink::IndexedDBIndexMetadata"*), void (%"class.content::IndexWriter"*, %"struct.blink::IndexedDBIndexMetadata"*)* @_ZN7content11IndexWriterC2ERKN5blink22IndexedDBIndexMetadataE
@_ZN7content11IndexWriterC1ERKN5blink22IndexedDBIndexMetadataERKNSt3__16vectorINS1_12IndexedDBKeyENS5_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.content::IndexWriter"*, %"struct.blink::IndexedDBIndexMetadata"*, %"class.std::__1::vector.6"*), void (%"class.content::IndexWriter"*, %"struct.blink::IndexedDBIndexMetadata"*, %"class.std::__1::vector.6"*)* @_ZN7content11IndexWriterC2ERKN5blink22IndexedDBIndexMetadataERKNSt3__16vectorINS1_12IndexedDBKeyENS5_9allocatorIS7_EEEE
@_ZN7content11IndexWriterD1Ev = hidden unnamed_addr alias void (%"class.content::IndexWriter"*), void (%"class.content::IndexWriter"*)* @_ZN7content11IndexWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content11IndexWriterC2ERKN5blink22IndexedDBIndexMetadataE(%"class.content::IndexWriter"*, %"struct.blink::IndexedDBIndexMetadata"* dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink22IndexedDBIndexMetadataC1ERKS0_(%"struct.blink::IndexedDBIndexMetadata"* %3, %"struct.blink::IndexedDBIndexMetadata"* dereferenceable(96) %1) #9
  %4 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  ret void
}

declare void @_ZN5blink22IndexedDBIndexMetadataC1ERKS0_(%"struct.blink::IndexedDBIndexMetadata"*, %"struct.blink::IndexedDBIndexMetadata"* dereferenceable(96)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content11IndexWriterC2ERKN5blink22IndexedDBIndexMetadataERKNSt3__16vectorINS1_12IndexedDBKeyENS5_9allocatorIS7_EEEE(%"class.content::IndexWriter"*, %"struct.blink::IndexedDBIndexMetadata"* dereferenceable(96), %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink22IndexedDBIndexMetadataC1ERKS0_(%"struct.blink::IndexedDBIndexMetadata"* %4, %"struct.blink::IndexedDBIndexMetadata"* dereferenceable(96) %1) #9
  %5 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.6"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #9
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"class.blink::IndexedDBKey"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 96
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %43, label %15

15:                                               ; preds = %3
  %16 = icmp ugt i64 %13, 192153584101141162
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.6"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #10
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #11
  %21 = bitcast i8* %20 to %"class.blink::IndexedDBKey"*
  %22 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"class.blink::IndexedDBKey"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.std::__1::vector.6"* %5 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %21, i64 %13
  %26 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::IndexedDBKey"* %25, %"class.blink::IndexedDBKey"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %28 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %27, align 8
  %29 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %7, align 8
  %30 = bitcast %"class.blink::IndexedDBKey"** %22 to i64*
  %31 = ptrtoint i8* %20 to i64
  %32 = icmp eq %"class.blink::IndexedDBKey"* %28, %29
  br i1 %32, label %41, label %33

33:                                               ; preds = %19, %33
  %34 = phi %"class.blink::IndexedDBKey"* [ %37, %33 ], [ %21, %19 ]
  %35 = phi %"class.blink::IndexedDBKey"* [ %36, %33 ], [ %28, %19 ]
  tail call void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"* %34, %"class.blink::IndexedDBKey"* dereferenceable(96) %35) #9
  %36 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %35, i64 1
  %37 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %34, i64 1
  %38 = icmp eq %"class.blink::IndexedDBKey"* %36, %29
  br i1 %38, label %39, label %33

39:                                               ; preds = %33
  %40 = ptrtoint %"class.blink::IndexedDBKey"* %37 to i64
  br label %41

41:                                               ; preds = %39, %19
  %42 = phi i64 [ %31, %19 ], [ %40, %39 ]
  store i64 %42, i64* %30, align 8
  br label %43

43:                                               ; preds = %3, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content11IndexWriterD2Ev(%"class.content::IndexWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %3, align 8
  %5 = icmp eq %"class.blink::IndexedDBKey"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::IndexedDBKey"* %4 to i8*
  %8 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %8, align 8
  %10 = icmp eq %"class.blink::IndexedDBKey"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.blink::IndexedDBKey"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %12, i64 -1
  tail call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* %13) #9
  %14 = icmp eq %"class.blink::IndexedDBKey"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.6"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"class.blink::IndexedDBKey"* %4, %"class.blink::IndexedDBKey"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink22IndexedDBIndexMetadataD1Ev(%"struct.blink::IndexedDBIndexMetadata"* %21) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink22IndexedDBIndexMetadataD1Ev(%"struct.blink::IndexedDBIndexMetadata"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content11IndexWriter15VerifyIndexKeysEPNS_21IndexedDBBackingStoreEPNS1_11TransactionElllPbRKN5blink12IndexedDBKeyEPNSt3__112basic_stringIDsNSA_11char_traitsIDsEENSA_9allocatorIDsEEEE(%"class.content::IndexWriter"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, i8* nocapture, %"class.blink::IndexedDBKey"* dereferenceable(96), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %10 = alloca [15 x i8], align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  store i8 0, i8* %6, align 1
  %12 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %12, align 8
  %14 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %14, align 8
  %16 = icmp eq %"class.blink::IndexedDBKey"* %13, %15
  br i1 %16, label %161, label %19

17:                                               ; preds = %22
  %18 = icmp eq %"class.blink::IndexedDBKey"* %25, %15
  br i1 %18, label %161, label %19

19:                                               ; preds = %9, %17
  %20 = phi %"class.blink::IndexedDBKey"* [ %25, %17 ], [ %13, %9 ]
  %21 = tail call zeroext i1 @_ZNK7content11IndexWriter16AddingKeyAllowedEPNS_21IndexedDBBackingStoreEPNS1_11TransactionElllRKN5blink12IndexedDBKeyES8_Pb(%"class.content::IndexWriter"* %0, %"class.content::IndexedDBBackingStore"* %1, %"class.content::IndexedDBBackingStore::Transaction"* %2, i64 %3, i64 %4, i64 %5, %"class.blink::IndexedDBKey"* dereferenceable(96) %20, %"class.blink::IndexedDBKey"* dereferenceable(96) %7, i8* %6)
  br i1 %21, label %22, label %162

22:                                               ; preds = %19
  %23 = load i8, i8* %6, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %20, i64 1
  br i1 %24, label %26, label %17

26:                                               ; preds = %22
  %27 = icmp eq %"class.std::__1::basic_string"* %8, null
  br i1 %27, label %162, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds [15 x i8], [15 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %29)
  %30 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 0, i32 0
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %11, i16* getelementptr inbounds ([29 x i16], [29 x i16]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %31)
  %32 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1, !noalias !3
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = load i64, i64* %37, align 8, !noalias !3
  %39 = and i64 %38, 9223372036854775807
  %40 = add nsw i64 %39, -1
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !3
  br label %45

43:                                               ; preds = %28
  %44 = zext i8 %34 to i64
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i64 [ %40, %36 ], [ 10, %43 ]
  %47 = phi i64 [ %42, %36 ], [ %44, %43 ]
  %48 = sub i64 %46, %47
  %49 = icmp ult i64 %48, 65
  br i1 %49, label %127, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i16*, i16** %51, align 8, !noalias !3
  %53 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %54 = select i1 %35, i16* %52, i16* %53
  %55 = getelementptr inbounds i16, i16* %54, i64 %47
  store i16 39, i16* %55, align 2, !noalias !3
  %56 = add i64 %47, 1
  %57 = getelementptr i16, i16* %54, i64 %56
  %58 = add i64 %47, 65
  %59 = getelementptr i16, i16* %54, i64 %58
  %60 = icmp ult i16* %57, getelementptr inbounds ([66 x i16], [66 x i16]* @.str.1, i64 0, i64 65)
  %61 = icmp ugt i16* %59, getelementptr inbounds ([66 x i16], [66 x i16]* @.str.1, i64 0, i64 1)
  %62 = and i1 %60, %61
  br i1 %62, label %87, label %63

63:                                               ; preds = %50
  %64 = getelementptr i16, i16* %55, i64 1
  %65 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> <i16 58, i16 32, i16 97, i16 116, i16 32, i16 108, i16 101, i16 97>, <8 x i16>* %65, align 2, !alias.scope !6, !noalias !9
  %66 = getelementptr i16, i16* %55, i64 1
  %67 = getelementptr inbounds i16, i16* %66, i64 8
  %68 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> <i16 115, i16 116, i16 32, i16 111, i16 110, i16 101, i16 32, i16 107>, <8 x i16>* %68, align 2, !alias.scope !6, !noalias !9
  %69 = getelementptr i16, i16* %55, i64 1
  %70 = getelementptr inbounds i16, i16* %69, i64 16
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> <i16 101, i16 121, i16 32, i16 100, i16 111, i16 101, i16 115, i16 32>, <8 x i16>* %71, align 2, !alias.scope !6, !noalias !9
  %72 = getelementptr i16, i16* %55, i64 1
  %73 = getelementptr inbounds i16, i16* %72, i64 24
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> <i16 110, i16 111, i16 116, i16 32, i16 115, i16 97, i16 116, i16 105>, <8 x i16>* %74, align 2, !alias.scope !6, !noalias !9
  %75 = getelementptr i16, i16* %55, i64 1
  %76 = getelementptr inbounds i16, i16* %75, i64 32
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> <i16 115, i16 102, i16 121, i16 32, i16 116, i16 104, i16 101, i16 32>, <8 x i16>* %77, align 2, !alias.scope !6, !noalias !9
  %78 = getelementptr i16, i16* %55, i64 1
  %79 = getelementptr inbounds i16, i16* %78, i64 40
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> <i16 117, i16 110, i16 105, i16 113, i16 117, i16 101, i16 110, i16 101>, <8 x i16>* %80, align 2, !alias.scope !6, !noalias !9
  %81 = getelementptr i16, i16* %55, i64 1
  %82 = getelementptr inbounds i16, i16* %81, i64 48
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> <i16 115, i16 115, i16 32, i16 114, i16 101, i16 113, i16 117, i16 105>, <8 x i16>* %83, align 2, !alias.scope !6, !noalias !9
  %84 = getelementptr i16, i16* %55, i64 1
  %85 = getelementptr inbounds i16, i16* %84, i64 56
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> <i16 114, i16 101, i16 109, i16 101, i16 110, i16 116, i16 115, i16 46>, <8 x i16>* %86, align 2, !alias.scope !6, !noalias !9
  br label %117

87:                                               ; preds = %50, %87
  %88 = phi i16* [ %112, %87 ], [ getelementptr inbounds ([66 x i16], [66 x i16]* @.str.1, i64 0, i64 0), %50 ]
  %89 = phi i64 [ %115, %87 ], [ 64, %50 ]
  %90 = phi i16* [ %113, %87 ], [ %55, %50 ]
  %91 = getelementptr inbounds i16, i16* %88, i64 1
  %92 = getelementptr inbounds i16, i16* %90, i64 1
  %93 = load i16, i16* %91, align 2, !noalias !3
  store i16 %93, i16* %92, align 2, !noalias !3
  %94 = getelementptr inbounds i16, i16* %88, i64 2
  %95 = getelementptr inbounds i16, i16* %90, i64 2
  %96 = load i16, i16* %94, align 2, !noalias !3
  store i16 %96, i16* %95, align 2, !noalias !3
  %97 = getelementptr inbounds i16, i16* %88, i64 3
  %98 = getelementptr inbounds i16, i16* %90, i64 3
  %99 = load i16, i16* %97, align 2, !noalias !3
  store i16 %99, i16* %98, align 2, !noalias !3
  %100 = getelementptr inbounds i16, i16* %88, i64 4
  %101 = getelementptr inbounds i16, i16* %90, i64 4
  %102 = load i16, i16* %100, align 2, !noalias !3
  store i16 %102, i16* %101, align 2, !noalias !3
  %103 = getelementptr inbounds i16, i16* %88, i64 5
  %104 = getelementptr inbounds i16, i16* %90, i64 5
  %105 = load i16, i16* %103, align 2, !noalias !3
  store i16 %105, i16* %104, align 2, !noalias !3
  %106 = getelementptr inbounds i16, i16* %88, i64 6
  %107 = getelementptr inbounds i16, i16* %90, i64 6
  %108 = load i16, i16* %106, align 2, !noalias !3
  store i16 %108, i16* %107, align 2, !noalias !3
  %109 = getelementptr inbounds i16, i16* %88, i64 7
  %110 = getelementptr inbounds i16, i16* %90, i64 7
  %111 = load i16, i16* %109, align 2, !noalias !3
  store i16 %111, i16* %110, align 2, !noalias !3
  %112 = getelementptr inbounds i16, i16* %88, i64 8
  %113 = getelementptr inbounds i16, i16* %90, i64 8
  %114 = load i16, i16* %112, align 2, !noalias !3
  store i16 %114, i16* %113, align 2, !noalias !3
  %115 = add nsw i64 %89, -8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %87, !llvm.loop !11

117:                                              ; preds = %87, %63
  %118 = add i64 %47, 65
  %119 = load i8, i8* %33, align 1, !noalias !3
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %118, i64* %122, align 8, !noalias !3
  br label %125

123:                                              ; preds = %117
  %124 = trunc i64 %118 to i8
  store i8 %124, i8* %33, align 1, !noalias !3
  br label %125

125:                                              ; preds = %123, %121
  %126 = getelementptr inbounds i16, i16* %54, i64 %118
  store i16 0, i16* %126, align 2, !noalias !3
  br label %130

127:                                              ; preds = %45
  %128 = add i64 %47, 65
  %129 = sub i64 %128, %46
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %11, i64 %46, i64 %129, i64 %47, i64 %47, i64 0, i64 65, i16* getelementptr inbounds ([66 x i16], [66 x i16]* @.str.1, i64 0, i64 0)) #9, !noalias !3
  br label %130

130:                                              ; preds = %125, %127
  %131 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %132 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = bitcast i64* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %135, i64 15, i1 false)
  %136 = getelementptr inbounds i8, i8* %30, i64 23
  %137 = load i8, i8* %136, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #9, !noalias !3
  %138 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %138, i64 0, i32 1, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %130
  %143 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 %133, i64* %143, align 8
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = bitcast i64* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* nonnull align 8 %29, i64 15, i1 false)
  %146 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %147 = getelementptr inbounds i8, i8* %146, i64 23
  store i8 %137, i8* %147, align 1
  br label %160

148:                                              ; preds = %130
  %149 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #11
  %151 = load i8, i8* %33, align 1
  %152 = icmp slt i8 %151, 0
  %153 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 %133, i64* %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = bitcast i64* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* nonnull align 8 %29, i64 15, i1 false)
  %156 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 23
  store i8 %137, i8* %157, align 1
  br i1 %152, label %158, label %160

158:                                              ; preds = %148
  %159 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %159) #11
  br label %160

160:                                              ; preds = %142, %148, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %29)
  br label %162

161:                                              ; preds = %17, %9
  store i8 1, i8* %6, align 1
  br label %162

162:                                              ; preds = %19, %160, %26, %161
  %163 = phi i1 [ true, %161 ], [ true, %160 ], [ true, %26 ], [ false, %19 ]
  ret i1 %163
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content11IndexWriter16AddingKeyAllowedEPNS_21IndexedDBBackingStoreEPNS1_11TransactionElllRKN5blink12IndexedDBKeyES8_Pb(%"class.content::IndexWriter"* nocapture readonly, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"* dereferenceable(96), %"class.blink::IndexedDBKey"* dereferenceable(96), i8* nocapture) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.std::__1::unique_ptr.78", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.leveldb::Status", align 8
  store i8 0, i8* %8, align 1
  %13 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %0, i64 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  store i8 1, i8* %8, align 1
  br label %51

17:                                               ; preds = %9
  %18 = bitcast %"class.std::__1::unique_ptr.78"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %10, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.78"* %10 to i64*
  store i64 0, i64* %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #9
  store i8 0, i8* %11, align 1
  %21 = bitcast %"class.leveldb::Status"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %22, align 8
  %23 = bitcast %"class.content::IndexedDBBackingStore"* %1 to void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)***
  %24 = load void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)**, void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)*, void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)** %24, i64 15
  %26 = load void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)*, void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.std::__1::unique_ptr.78"*, i8*)** %25, align 8
  call void %26(%"class.leveldb::Status"* nonnull sret %12, %"class.content::IndexedDBBackingStore"* %1, %"class.content::IndexedDBBackingStore::Transaction"* %2, i64 %3, i64 %4, i64 %5, %"class.blink::IndexedDBKey"* dereferenceable(96) %6, %"class.std::__1::unique_ptr.78"* nonnull %10, i8* nonnull %11) #9
  %27 = load i8*, i8** %22, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %41

29:                                               ; preds = %17
  %30 = load i8, i8* %11, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = call zeroext i1 @_ZNK5blink12IndexedDBKey7IsValidEv(%"class.blink::IndexedDBKey"* %7) #9
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %19, align 8
  %36 = call zeroext i1 @_ZNK5blink12IndexedDBKey6EqualsERKS0_(%"class.blink::IndexedDBKey"* %35, %"class.blink::IndexedDBKey"* dereferenceable(96) %7) #9
  br i1 %36, label %37, label %38

37:                                               ; preds = %29, %34
  store i8 1, i8* %8, align 1
  br label %38

38:                                               ; preds = %32, %34, %37
  %39 = load i8*, i8** %22, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %17, %38
  %42 = phi i1 [ true, %38 ], [ false, %17 ]
  %43 = phi i8* [ %39, %38 ], [ %27, %17 ]
  call void @_ZdaPv(i8* nonnull %43) #11
  br label %44

44:                                               ; preds = %38, %41
  %45 = phi i1 [ true, %38 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #9
  %46 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %19, align 8
  store %"class.blink::IndexedDBKey"* null, %"class.blink::IndexedDBKey"** %19, align 8
  %47 = icmp eq %"class.blink::IndexedDBKey"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* nonnull %46) #9
  %49 = bitcast %"class.blink::IndexedDBKey"* %46 to i8*
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %51

51:                                               ; preds = %50, %16
  %52 = phi i1 [ %45, %50 ], [ true, %16 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* noalias sret, i16*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = load i16, i16* %1, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %3 ]
  %12 = phi i16* [ %14, %10 ], [ %1, %3 ]
  %13 = add i64 %11, 1
  %14 = getelementptr inbounds i16, i16* %12, i64 1
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10, %3
  %18 = phi i64 [ 0, %3 ], [ %13, %10 ]
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = add i64 %26, %18
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #10
  unreachable

31:                                               ; preds = %17
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %18 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %49

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #10
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  store i64 %48, i64* %6, align 8
  store i64 %18, i64* %5, align 8
  br label %49

49:                                               ; preds = %43, %33
  %50 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %51 = icmp eq i64 %18, 0
  br i1 %51, label %208, label %52

52:                                               ; preds = %49
  store i16 %8, i16* %50, align 2
  %53 = add i64 %18, -1
  %54 = getelementptr inbounds i16, i16* %1, i64 1
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %206, label %56

56:                                               ; preds = %52
  %57 = icmp ult i64 %53, 16
  br i1 %57, label %153, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %50, i64 1
  %60 = getelementptr i16, i16* %50, i64 %18
  %61 = getelementptr i16, i16* %1, i64 %18
  %62 = icmp ult i16* %59, %61
  %63 = icmp ult i16* %54, %60
  %64 = and i1 %62, %63
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  %66 = and i64 %53, -16
  %67 = getelementptr i16, i16* %54, i64 %66
  %68 = sub i64 %53, %66
  %69 = getelementptr i16, i16* %50, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %130, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  %77 = getelementptr i16, i16* %50, i64 1
  %78 = getelementptr i16, i16* %50, i64 1
  %79 = getelementptr i16, i16* %50, i64 1
  %80 = getelementptr i16, i16* %50, i64 1
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi i64 [ 0, %75 ], [ %127, %81 ]
  %83 = phi i64 [ %76, %75 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %54, i64 %82
  %85 = getelementptr inbounds i16, i16* %77, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !13
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !13
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !16, !noalias !13
  %92 = getelementptr inbounds i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !16, !noalias !13
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %54, i64 %94
  %96 = getelementptr inbounds i16, i16* %78, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !13
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !13
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !16, !noalias !13
  %103 = getelementptr inbounds i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !16, !noalias !13
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %54, i64 %105
  %107 = getelementptr inbounds i16, i16* %79, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !13
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !13
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !16, !noalias !13
  %114 = getelementptr inbounds i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !16, !noalias !13
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %54, i64 %116
  %118 = getelementptr inbounds i16, i16* %80, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !13
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !13
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !16, !noalias !13
  %125 = getelementptr inbounds i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !16, !noalias !13
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !18

130:                                              ; preds = %81, %65
  %131 = phi i64 [ 0, %65 ], [ %127, %81 ]
  %132 = icmp eq i64 %73, 0
  br i1 %132, label %151, label %133

133:                                              ; preds = %130
  %134 = getelementptr i16, i16* %50, i64 1
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %131, %133 ], [ %148, %135 ]
  %137 = phi i64 [ %73, %133 ], [ %149, %135 ]
  %138 = getelementptr i16, i16* %54, i64 %136
  %139 = getelementptr inbounds i16, i16* %134, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !13
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !13
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !16, !noalias !13
  %146 = getelementptr inbounds i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !16, !noalias !13
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !19

151:                                              ; preds = %135, %130
  %152 = icmp eq i64 %53, %66
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %58, %56
  %154 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %67, %151 ]
  %155 = phi i64 [ %53, %58 ], [ %53, %56 ], [ %68, %151 ]
  %156 = phi i16* [ %50, %58 ], [ %50, %56 ], [ %69, %151 ]
  %157 = add i64 %155, -1
  %158 = and i64 %155, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i16* [ %168, %160 ], [ %154, %153 ]
  %162 = phi i64 [ %167, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %165, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = load i16, i16* %161, align 2
  store i16 %166, i16* %165, align 2
  %167 = add i64 %162, -1
  %168 = getelementptr inbounds i16, i16* %161, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !21

171:                                              ; preds = %160, %153
  %172 = phi i16* [ %154, %153 ], [ %168, %160 ]
  %173 = phi i64 [ %155, %153 ], [ %167, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %165, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i16* [ %204, %176 ], [ %172, %171 ]
  %178 = phi i64 [ %203, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %201, %176 ], [ %174, %171 ]
  %180 = getelementptr inbounds i16, i16* %179, i64 1
  %181 = load i16, i16* %177, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 1
  %183 = getelementptr inbounds i16, i16* %179, i64 2
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %183, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 2
  %186 = getelementptr inbounds i16, i16* %179, i64 3
  %187 = load i16, i16* %185, align 2
  store i16 %187, i16* %186, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 3
  %189 = getelementptr inbounds i16, i16* %179, i64 4
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 4
  %192 = getelementptr inbounds i16, i16* %179, i64 5
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 5
  %195 = getelementptr inbounds i16, i16* %179, i64 6
  %196 = load i16, i16* %194, align 2
  store i16 %196, i16* %195, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 6
  %198 = getelementptr inbounds i16, i16* %179, i64 7
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %177, i64 7
  %201 = getelementptr inbounds i16, i16* %179, i64 8
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = add i64 %178, -8
  %204 = getelementptr inbounds i16, i16* %177, i64 8
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %206, label %176, !llvm.loop !22

206:                                              ; preds = %171, %176, %151, %52
  %207 = load i8, i8* %20, align 1
  br label %208

208:                                              ; preds = %206, %49
  %209 = phi i8 [ %207, %206 ], [ %21, %49 ]
  %210 = getelementptr inbounds i16, i16* %50, i64 %18
  store i16 0, i16* %210, align 2
  %211 = icmp slt i8 %209, 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i16*, i16** %212, align 8
  %214 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %215 = select i1 %211, i16* %213, i16* %214
  %216 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %216, i64 0, i32 1, i32 1
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %208
  %221 = load i64, i64* %6, align 8
  %222 = and i64 %221, 9223372036854775807
  %223 = add nsw i64 %222, -1
  %224 = load i64, i64* %5, align 8
  br label %227

225:                                              ; preds = %208
  %226 = zext i8 %218 to i64
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i64 [ %223, %220 ], [ 10, %225 ]
  %229 = phi i64 [ %224, %220 ], [ %226, %225 ]
  %230 = sub i64 %228, %229
  %231 = icmp ult i64 %230, %26
  br i1 %231, label %391, label %232

232:                                              ; preds = %227
  %233 = icmp eq i64 %26, 0
  br i1 %233, label %394, label %234

234:                                              ; preds = %232
  %235 = load i16*, i16** %4, align 8
  %236 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %237 = select i1 %219, i16* %235, i16* %236
  %238 = getelementptr inbounds i16, i16* %237, i64 %229
  %239 = icmp ult i64 %26, 16
  br i1 %239, label %329, label %240

240:                                              ; preds = %234
  %241 = add i64 %26, %229
  %242 = getelementptr i16, i16* %237, i64 %241
  %243 = getelementptr i16, i16* %215, i64 %26
  %244 = icmp ult i16* %238, %243
  %245 = icmp ult i16* %215, %242
  %246 = and i1 %244, %245
  br i1 %246, label %329, label %247

247:                                              ; preds = %240
  %248 = and i64 %26, -16
  %249 = sub i64 %26, %248
  %250 = getelementptr i16, i16* %215, i64 %248
  %251 = getelementptr i16, i16* %238, i64 %248
  %252 = add i64 %248, -16
  %253 = lshr exact i64 %252, 4
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 48
  br i1 %256, label %308, label %257

257:                                              ; preds = %247
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i16, i16* %215, i64 %260
  %263 = getelementptr i16, i16* %238, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !23
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !23
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !26, !noalias !23
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !26, !noalias !23
  %272 = or i64 %260, 16
  %273 = getelementptr i16, i16* %215, i64 %272
  %274 = getelementptr i16, i16* %238, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !23
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !23
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !26, !noalias !23
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !26, !noalias !23
  %283 = or i64 %260, 32
  %284 = getelementptr i16, i16* %215, i64 %283
  %285 = getelementptr i16, i16* %238, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !23
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !23
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !26, !noalias !23
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !26, !noalias !23
  %294 = or i64 %260, 48
  %295 = getelementptr i16, i16* %215, i64 %294
  %296 = getelementptr i16, i16* %238, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !23
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !23
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !26, !noalias !23
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !26, !noalias !23
  %305 = add i64 %260, 64
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !28

308:                                              ; preds = %259, %247
  %309 = phi i64 [ 0, %247 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i16, i16* %215, i64 %312
  %315 = getelementptr i16, i16* %238, i64 %312
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !23
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !23
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !26, !noalias !23
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !26, !noalias !23
  %324 = add i64 %312, 16
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !29

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %26, %248
  br i1 %328, label %382, label %329

329:                                              ; preds = %327, %240, %234
  %330 = phi i64 [ %26, %240 ], [ %26, %234 ], [ %249, %327 ]
  %331 = phi i16* [ %215, %240 ], [ %215, %234 ], [ %250, %327 ]
  %332 = phi i16* [ %238, %240 ], [ %238, %234 ], [ %251, %327 ]
  %333 = add i64 %330, -1
  %334 = and i64 %330, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %342, %336 ], [ %330, %329 ]
  %338 = phi i16* [ %344, %336 ], [ %331, %329 ]
  %339 = phi i16* [ %343, %336 ], [ %332, %329 ]
  %340 = phi i64 [ %345, %336 ], [ %334, %329 ]
  %341 = load i16, i16* %338, align 2
  store i16 %341, i16* %339, align 2
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = getelementptr inbounds i16, i16* %338, i64 1
  %345 = add i64 %340, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !30

347:                                              ; preds = %336, %329
  %348 = phi i64 [ %330, %329 ], [ %342, %336 ]
  %349 = phi i16* [ %331, %329 ], [ %344, %336 ]
  %350 = phi i16* [ %332, %329 ], [ %343, %336 ]
  %351 = icmp ult i64 %333, 7
  br i1 %351, label %382, label %352

352:                                              ; preds = %347, %352
  %353 = phi i64 [ %378, %352 ], [ %348, %347 ]
  %354 = phi i16* [ %380, %352 ], [ %349, %347 ]
  %355 = phi i16* [ %379, %352 ], [ %350, %347 ]
  %356 = load i16, i16* %354, align 2
  store i16 %356, i16* %355, align 2
  %357 = getelementptr inbounds i16, i16* %355, i64 1
  %358 = getelementptr inbounds i16, i16* %354, i64 1
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %355, i64 2
  %361 = getelementptr inbounds i16, i16* %354, i64 2
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %355, i64 3
  %364 = getelementptr inbounds i16, i16* %354, i64 3
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %355, i64 4
  %367 = getelementptr inbounds i16, i16* %354, i64 4
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %355, i64 5
  %370 = getelementptr inbounds i16, i16* %354, i64 5
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %355, i64 6
  %373 = getelementptr inbounds i16, i16* %354, i64 6
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %355, i64 7
  %376 = getelementptr inbounds i16, i16* %354, i64 7
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %353, -8
  %379 = getelementptr inbounds i16, i16* %355, i64 8
  %380 = getelementptr inbounds i16, i16* %354, i64 8
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %382, label %352, !llvm.loop !31

382:                                              ; preds = %347, %352, %327
  %383 = add i64 %229, %26
  %384 = load i8, i8* %217, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %382
  store i64 %383, i64* %5, align 8
  br label %389

387:                                              ; preds = %382
  %388 = trunc i64 %383 to i8
  store i8 %388, i8* %217, align 1
  br label %389

389:                                              ; preds = %387, %386
  %390 = getelementptr inbounds i16, i16* %237, i64 %383
  store i16 0, i16* %390, align 2
  br label %394

391:                                              ; preds = %227
  %392 = add i64 %229, %26
  %393 = sub i64 %392, %228
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %228, i64 %393, i64 %229, i64 %229, i64 0, i64 %26, i16* %215) #9
  br label %394

394:                                              ; preds = %232, %389, %391
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content11IndexWriter14WriteIndexKeysERKNS_21IndexedDBBackingStore16RecordIdentifierEPS1_PNS1_11TransactionEll(%"class.leveldb::Status"* noalias sret, %"class.content::IndexWriter"* nocapture readonly, %"class.content::IndexedDBBackingStore::RecordIdentifier"* dereferenceable(32), %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %10, align 8
  %12 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %12, align 8
  %14 = icmp eq %"class.blink::IndexedDBKey"* %11, %13
  %15 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  br i1 %14, label %28, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.content::IndexedDBBackingStore"* %3 to void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)***
  br label %20

18:                                               ; preds = %20
  %19 = icmp eq %"class.blink::IndexedDBKey"* %27, %13
  br i1 %19, label %28, label %20

20:                                               ; preds = %16, %18
  %21 = phi %"class.blink::IndexedDBKey"* [ %11, %16 ], [ %27, %18 ]
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %22 = load void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)**, void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)*** %17, align 8
  %23 = getelementptr inbounds void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)*, void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)** %22, i64 13
  %24 = load void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)*, void (%"class.leveldb::Status"*, %"class.content::IndexedDBBackingStore"*, %"class.content::IndexedDBBackingStore::Transaction"*, i64, i64, i64, %"class.blink::IndexedDBKey"*, %"class.content::IndexedDBBackingStore::RecordIdentifier"*)** %23, align 8
  tail call void %24(%"class.leveldb::Status"* sret %0, %"class.content::IndexedDBBackingStore"* %3, %"class.content::IndexedDBBackingStore::Transaction"* %4, i64 %5, i64 %6, i64 %9, %"class.blink::IndexedDBKey"* dereferenceable(96) %21, %"class.content::IndexedDBBackingStore::RecordIdentifier"* dereferenceable(32) %2) #9
  %25 = load i8*, i8** %15, align 8
  %26 = icmp eq i8* %25, null
  %27 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %21, i64 1
  br i1 %26, label %18, label %29

28:                                               ; preds = %18, %7
  store i8* null, i8** %15, align 8, !alias.scope !32
  br label %29

29:                                               ; preds = %20, %28
  ret void
}

declare zeroext i1 @_ZNK5blink12IndexedDBKey7IsValidEv(%"class.blink::IndexedDBKey"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12IndexedDBKey6EqualsERKS0_(%"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"* dereferenceable(96)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content16MakeIndexWritersEPNS_20IndexedDBTransactionEPNS_21IndexedDBBackingStoreElRKN5blink28IndexedDBObjectStoreMetadataERKNS4_12IndexedDBKeyEbRKNSt3__16vectorINS4_18IndexedDBIndexKeysENSB_9allocatorISD_EEEEPNSC_INSB_10unique_ptrINS_11IndexWriterENSB_14default_deleteISK_EEEENSE_ISN_EEEEPNSB_12basic_stringIDsNSB_11char_traitsIDsEENSE_IDsEEEEPb(%"class.content::IndexedDBTransaction"* nocapture readonly, %"class.content::IndexedDBBackingStore"*, i64, %"struct.blink::IndexedDBObjectStoreMetadata"* dereferenceable(128), %"class.blink::IndexedDBKey"* dereferenceable(96), i1 zeroext, %"class.std::__1::vector.211"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.218"*, %"class.std::__1::basic_string"*, i8* nocapture) local_unnamed_addr #0 {
  %11 = alloca %"class.std::__1::vector.6", align 8
  %12 = alloca %"class.blink::IndexedDBKey", align 8
  %13 = alloca %"class.std::__1::unique_ptr.220", align 8
  %14 = alloca i8, align 1
  store i8 0, i8* %9, align 1
  %15 = getelementptr inbounds %"class.std::__1::vector.211", %"class.std::__1::vector.211"* %6, i64 0, i32 0, i32 0
  %16 = load %"struct.blink::IndexedDBIndexKeys"*, %"struct.blink::IndexedDBIndexKeys"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.211", %"class.std::__1::vector.211"* %6, i64 0, i32 0, i32 1
  %18 = load %"struct.blink::IndexedDBIndexKeys"*, %"struct.blink::IndexedDBIndexKeys"** %17, align 8
  %19 = icmp eq %"struct.blink::IndexedDBIndexKeys"* %16, %18
  br i1 %19, label %257, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"struct.blink::IndexedDBObjectStoreMetadata", %"struct.blink::IndexedDBObjectStoreMetadata"* %3, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = bitcast %"class.std::__1::vector.6"* %11 to i8*
  %24 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.blink::IndexedDBKey"** %25 to i8**
  %28 = bitcast %"class.std::__1::vector.6"* %11 to i8**
  %29 = bitcast %"class.blink::IndexedDBKey"** %25 to i64*
  %30 = getelementptr inbounds %"struct.blink::IndexedDBObjectStoreMetadata", %"struct.blink::IndexedDBObjectStoreMetadata"* %3, i64 0, i32 2
  %31 = getelementptr inbounds %"class.blink::IndexedDBKeyPath", %"class.blink::IndexedDBKeyPath"* %30, i64 0, i32 0
  %32 = bitcast %"class.std::__1::vector.6"* %11 to i64*
  %33 = bitcast %"class.blink::IndexedDBKey"* %12 to i8*
  %34 = bitcast %"class.std::__1::unique_ptr.220"* %13 to i8*
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %13, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr.220"* %13 to i8**
  %37 = getelementptr inbounds %"class.content::IndexedDBTransaction", %"class.content::IndexedDBTransaction"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.blink::IndexedDBObjectStoreMetadata", %"struct.blink::IndexedDBObjectStoreMetadata"* %3, i64 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %7, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.220"* %13 to i64*
  %42 = bitcast %"class.std::__1::unique_ptr.220"** %39 to i64*
  %43 = xor i1 %5, true
  br label %44

44:                                               ; preds = %20, %253
  %45 = phi i1 [ undef, %20 ], [ %254, %253 ]
  %46 = phi %"struct.blink::IndexedDBIndexKeys"* [ %16, %20 ], [ %255, %253 ]
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %253, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::IndexedDBIndexKeys", %"struct.blink::IndexedDBIndexKeys"* %46, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %52, %49
  %53 = phi %"class.std::__1::__tree_end_node"* [ %21, %49 ], [ %63, %52 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %47, %49 ], [ %64, %52 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp slt i64 %56, %51
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::__tree_node_base"** %58 to %"class.std::__1::__tree_node"**
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_node"* %54 to %"class.std::__1::__tree_node"**
  %62 = select i1 %57, %"class.std::__1::__tree_node"** %59, %"class.std::__1::__tree_node"** %61
  %63 = select i1 %57, %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"* %60
  %64 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %65 = icmp eq %"class.std::__1::__tree_node"* %64, null
  br i1 %65, label %66, label %52

66:                                               ; preds = %52
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %63, %21
  br i1 %67, label %253, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 4
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp slt i64 %51, %71
  br i1 %72, label %253, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 5
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"struct.blink::IndexedDBIndexMetadata"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %76 = getelementptr inbounds %"struct.blink::IndexedDBIndexKeys", %"struct.blink::IndexedDBIndexKeys"* %46, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #9
  %77 = getelementptr inbounds %"struct.blink::IndexedDBIndexKeys", %"struct.blink::IndexedDBIndexKeys"* %46, i64 0, i32 1, i32 0, i32 1
  %78 = bitcast %"class.blink::IndexedDBKey"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.6"* %76 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = sdiv exact i64 %82, 96
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %108, label %85

85:                                               ; preds = %73
  %86 = icmp ugt i64 %83, 192153584101141162
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = bitcast %"class.std::__1::vector.6"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %88) #10
  unreachable

89:                                               ; preds = %85
  %90 = call i8* @_Znwm(i64 %82) #11
  %91 = bitcast i8* %90 to %"class.blink::IndexedDBKey"*
  store i8* %90, i8** %27, align 8
  store i8* %90, i8** %28, align 8
  %92 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %91, i64 %83
  store %"class.blink::IndexedDBKey"* %92, %"class.blink::IndexedDBKey"** %26, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %76, i64 0, i32 0, i32 0
  %94 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %93, align 8
  %95 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %77, align 8
  %96 = ptrtoint i8* %90 to i64
  %97 = icmp eq %"class.blink::IndexedDBKey"* %94, %95
  br i1 %97, label %106, label %98

98:                                               ; preds = %89, %98
  %99 = phi %"class.blink::IndexedDBKey"* [ %102, %98 ], [ %91, %89 ]
  %100 = phi %"class.blink::IndexedDBKey"* [ %101, %98 ], [ %94, %89 ]
  call void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"* %99, %"class.blink::IndexedDBKey"* dereferenceable(96) %100) #9
  %101 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %100, i64 1
  %102 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %99, i64 1
  %103 = icmp eq %"class.blink::IndexedDBKey"* %101, %95
  br i1 %103, label %104, label %98

104:                                              ; preds = %98
  %105 = ptrtoint %"class.blink::IndexedDBKey"* %102 to i64
  br label %106

106:                                              ; preds = %104, %89
  %107 = phi i64 [ %96, %89 ], [ %105, %104 ]
  store i64 %107, i64* %29, align 8
  br label %108

108:                                              ; preds = %73, %106
  %109 = load i32, i32* %31, align 8
  %110 = icmp eq i32 %109, 0
  %111 = or i1 %110, %43
  br i1 %111, label %151, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 9
  %114 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.blink::IndexedDBKeyPath"*
  %115 = call zeroext i1 @_ZNK5blink16IndexedDBKeyPatheqERKS0_(%"class.blink::IndexedDBKeyPath"* %114, %"class.blink::IndexedDBKeyPath"* dereferenceable(56) %30) #9
  br i1 %115, label %116, label %124

116:                                              ; preds = %112
  %117 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %25, align 8
  %118 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %26, align 8
  %119 = icmp eq %"class.blink::IndexedDBKey"* %117, %118
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  call void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"* %117, %"class.blink::IndexedDBKey"* dereferenceable(96) %4) #9
  %121 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %117, i64 1
  %122 = ptrtoint %"class.blink::IndexedDBKey"* %121 to i64
  store i64 %122, i64* %29, align 8
  br label %151

123:                                              ; preds = %116
  call void @_ZNSt3__16vectorIN5blink12IndexedDBKeyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.6"* nonnull %11, %"class.blink::IndexedDBKey"* dereferenceable(96) %4) #9
  br label %151

124:                                              ; preds = %112
  %125 = bitcast %"class.std::__1::__tree_end_node"* %113 to i32*
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 2
  br i1 %127, label %128, label %151

128:                                              ; preds = %124
  %129 = load i64, i64* %29, align 8
  %130 = load i64, i64* %32, align 8
  %131 = icmp eq i64 %129, %130
  br i1 %131, label %151, label %132

132:                                              ; preds = %128, %144
  %133 = phi i64 [ %147, %144 ], [ %130, %128 ]
  %134 = phi i64 [ %145, %144 ], [ 0, %128 ]
  %135 = inttoptr i64 %133 to %"class.blink::IndexedDBKey"*
  %136 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %135, i64 %134
  %137 = call zeroext i1 @_ZNK5blink12IndexedDBKey8HasHolesEv(%"class.blink::IndexedDBKey"* %136) #9
  br i1 %137, label %138, label %144

138:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %33) #9
  %139 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %24, align 8
  %140 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %139, i64 %134
  call void @_ZNK5blink12IndexedDBKey9FillHolesERKS0_(%"class.blink::IndexedDBKey"* nonnull sret %12, %"class.blink::IndexedDBKey"* %140, %"class.blink::IndexedDBKey"* dereferenceable(96) %4) #9
  %141 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %24, align 8
  %142 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %141, i64 %134
  %143 = call dereferenceable(96) %"class.blink::IndexedDBKey"* @_ZN5blink12IndexedDBKeyaSERKS0_(%"class.blink::IndexedDBKey"* %142, %"class.blink::IndexedDBKey"* nonnull dereferenceable(96) %12) #9
  call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %33) #9
  br label %144

144:                                              ; preds = %132, %138
  %145 = add nuw i64 %134, 1
  %146 = load i64, i64* %29, align 8
  %147 = load i64, i64* %32, align 8
  %148 = sub i64 %146, %147
  %149 = sdiv exact i64 %148, 96
  %150 = icmp ult i64 %145, %149
  br i1 %150, label %132, label %151

151:                                              ; preds = %144, %128, %108, %123, %120, %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  store %"class.content::IndexWriter"* inttoptr (i64 -6148914691236517206 to %"class.content::IndexWriter"*), %"class.content::IndexWriter"** %35, align 8
  %152 = call i8* @_Znwm(i64 120) #11
  %153 = bitcast i8* %152 to %"class.content::IndexWriter"*
  %154 = bitcast i8* %152 to %"struct.blink::IndexedDBIndexMetadata"*
  call void @_ZN5blink22IndexedDBIndexMetadataC1ERKS0_(%"struct.blink::IndexedDBIndexMetadata"* nonnull %154, %"struct.blink::IndexedDBIndexMetadata"* dereferenceable(96) %75) #9
  %155 = getelementptr inbounds i8, i8* %152, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #9
  %156 = load i64, i64* %29, align 8
  %157 = load i64, i64* %32, align 8
  %158 = sub i64 %156, %157
  %159 = sdiv exact i64 %158, 96
  %160 = icmp eq i64 %158, 0
  %161 = inttoptr i64 %157 to %"class.blink::IndexedDBKey"*
  %162 = inttoptr i64 %156 to %"class.blink::IndexedDBKey"*
  br i1 %160, label %189, label %163

163:                                              ; preds = %151
  %164 = icmp ugt i64 %159, 192153584101141162
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = bitcast i8* %155 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #10
  unreachable

167:                                              ; preds = %163
  %168 = call i8* @_Znwm(i64 %158) #11
  %169 = bitcast i8* %168 to %"class.blink::IndexedDBKey"*
  %170 = getelementptr inbounds i8, i8* %152, i64 104
  %171 = bitcast i8* %170 to i8**
  store i8* %168, i8** %171, align 8
  %172 = bitcast i8* %155 to i8**
  store i8* %168, i8** %172, align 8
  %173 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %169, i64 %159
  %174 = getelementptr inbounds i8, i8* %152, i64 112
  %175 = bitcast i8* %174 to %"class.blink::IndexedDBKey"**
  store %"class.blink::IndexedDBKey"* %173, %"class.blink::IndexedDBKey"** %175, align 8
  %176 = bitcast i8* %170 to i64*
  %177 = ptrtoint i8* %168 to i64
  %178 = icmp eq %"class.blink::IndexedDBKey"* %161, %162
  br i1 %178, label %187, label %179

179:                                              ; preds = %167, %179
  %180 = phi %"class.blink::IndexedDBKey"* [ %183, %179 ], [ %169, %167 ]
  %181 = phi %"class.blink::IndexedDBKey"* [ %182, %179 ], [ %161, %167 ]
  call void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"* %180, %"class.blink::IndexedDBKey"* dereferenceable(96) %181) #9
  %182 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %181, i64 1
  %183 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %180, i64 1
  %184 = icmp eq %"class.blink::IndexedDBKey"* %182, %162
  br i1 %184, label %185, label %179

185:                                              ; preds = %179
  %186 = ptrtoint %"class.blink::IndexedDBKey"* %183 to i64
  br label %187

187:                                              ; preds = %185, %167
  %188 = phi i64 [ %177, %167 ], [ %186, %185 ]
  store i64 %188, i64* %176, align 8
  br label %189

189:                                              ; preds = %151, %187
  store i8* %152, i8** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #9
  store i8 0, i8* %14, align 1
  %190 = load %"class.content::IndexedDBBackingStore::Transaction"*, %"class.content::IndexedDBBackingStore::Transaction"** %37, align 8
  %191 = load i64, i64* %38, align 8
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 8
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = call zeroext i1 @_ZNK7content11IndexWriter15VerifyIndexKeysEPNS_21IndexedDBBackingStoreEPNS1_11TransactionElllPbRKN5blink12IndexedDBKeyEPNSt3__112basic_stringIDsNSA_11char_traitsIDsEENSA_9allocatorIDsEEEE(%"class.content::IndexWriter"* nonnull %153, %"class.content::IndexedDBBackingStore"* %1, %"class.content::IndexedDBBackingStore::Transaction"* %190, i64 %2, i64 %191, i64 %194, i8* nonnull %14, %"class.blink::IndexedDBKey"* dereferenceable(96) %4, %"class.std::__1::basic_string"* %8)
  br i1 %195, label %196, label %209

196:                                              ; preds = %189
  %197 = load i8, i8* %14, align 1, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %209, label %199

199:                                              ; preds = %196
  %200 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %39, align 8
  %201 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %40, align 8
  %202 = icmp ult %"class.std::__1::unique_ptr.220"* %200, %201
  br i1 %202, label %203, label %208

203:                                              ; preds = %199
  %204 = load i64, i64* %41, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %35, align 8
  %205 = bitcast %"class.std::__1::unique_ptr.220"* %200 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %200, i64 1
  %207 = ptrtoint %"class.std::__1::unique_ptr.220"* %206 to i64
  store i64 %207, i64* %42, align 8
  br label %209

208:                                              ; preds = %199
  call void @_ZNSt3__16vectorINS_10unique_ptrIN7content11IndexWriterENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.218"* %7, %"class.std::__1::unique_ptr.220"* nonnull dereferenceable(8) %13) #9
  br label %209

209:                                              ; preds = %208, %203, %196, %189
  %210 = phi i32 [ 1, %189 ], [ 1, %196 ], [ 0, %203 ], [ 0, %208 ]
  %211 = phi i1 [ false, %189 ], [ true, %196 ], [ %45, %203 ], [ %45, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #9
  %212 = load %"class.content::IndexWriter"*, %"class.content::IndexWriter"** %35, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %35, align 8
  %213 = icmp eq %"class.content::IndexWriter"* %212, null
  br i1 %213, label %236, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %212, i64 0, i32 1
  %216 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %216, align 8
  %218 = icmp eq %"class.blink::IndexedDBKey"* %217, null
  br i1 %218, label %233, label %219

219:                                              ; preds = %214
  %220 = bitcast %"class.blink::IndexedDBKey"* %217 to i8*
  %221 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %212, i64 0, i32 1, i32 0, i32 1
  %222 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %221, align 8
  %223 = icmp eq %"class.blink::IndexedDBKey"* %222, %217
  br i1 %223, label %231, label %224

224:                                              ; preds = %219, %224
  %225 = phi %"class.blink::IndexedDBKey"* [ %226, %224 ], [ %222, %219 ]
  %226 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %225, i64 -1
  call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* %226) #9
  %227 = icmp eq %"class.blink::IndexedDBKey"* %226, %217
  br i1 %227, label %228, label %224

228:                                              ; preds = %224
  %229 = bitcast %"class.std::__1::vector.6"* %215 to i8**
  %230 = load i8*, i8** %229, align 8
  br label %231

231:                                              ; preds = %228, %219
  %232 = phi i8* [ %230, %228 ], [ %220, %219 ]
  store %"class.blink::IndexedDBKey"* %217, %"class.blink::IndexedDBKey"** %221, align 8
  call void @_ZdlPv(i8* %232) #11
  br label %233

233:                                              ; preds = %231, %214
  %234 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %212, i64 0, i32 0
  call void @_ZN5blink22IndexedDBIndexMetadataD1Ev(%"struct.blink::IndexedDBIndexMetadata"* %234) #9
  %235 = bitcast %"class.content::IndexWriter"* %212 to i8*
  call void @_ZdlPv(i8* %235) #11
  br label %236

236:                                              ; preds = %209, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %237 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %24, align 8
  %238 = icmp eq %"class.blink::IndexedDBKey"* %237, null
  br i1 %238, label %251, label %239

239:                                              ; preds = %236
  %240 = bitcast %"class.blink::IndexedDBKey"* %237 to i8*
  %241 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %25, align 8
  %242 = icmp eq %"class.blink::IndexedDBKey"* %241, %237
  br i1 %242, label %249, label %243

243:                                              ; preds = %239, %243
  %244 = phi %"class.blink::IndexedDBKey"* [ %245, %243 ], [ %241, %239 ]
  %245 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %244, i64 -1
  call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* %245) #9
  %246 = icmp eq %"class.blink::IndexedDBKey"* %245, %237
  br i1 %246, label %247, label %243

247:                                              ; preds = %243
  %248 = load i8*, i8** %28, align 8
  br label %249

249:                                              ; preds = %247, %239
  %250 = phi i8* [ %248, %247 ], [ %240, %239 ]
  store %"class.blink::IndexedDBKey"* %237, %"class.blink::IndexedDBKey"** %25, align 8
  call void @_ZdlPv(i8* %250) #11
  br label %251

251:                                              ; preds = %249, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  %252 = icmp eq i32 %210, 0
  br i1 %252, label %253, label %258

253:                                              ; preds = %251, %68, %66, %44
  %254 = phi i1 [ %211, %251 ], [ %45, %44 ], [ %45, %66 ], [ %45, %68 ]
  %255 = getelementptr inbounds %"struct.blink::IndexedDBIndexKeys", %"struct.blink::IndexedDBIndexKeys"* %46, i64 1
  %256 = icmp eq %"struct.blink::IndexedDBIndexKeys"* %255, %18
  br i1 %256, label %257, label %44

257:                                              ; preds = %253, %10
  store i8 1, i8* %9, align 1
  br label %258

258:                                              ; preds = %251, %257
  %259 = phi i1 [ true, %257 ], [ %211, %251 ]
  ret i1 %259
}

declare zeroext i1 @_ZNK5blink16IndexedDBKeyPatheqERKS0_(%"class.blink::IndexedDBKeyPath"*, %"class.blink::IndexedDBKeyPath"* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12IndexedDBKey8HasHolesEv(%"class.blink::IndexedDBKey"*) local_unnamed_addr #1

declare void @_ZNK5blink12IndexedDBKey9FillHolesERKS0_(%"class.blink::IndexedDBKey"* sret, %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"* dereferenceable(96)) local_unnamed_addr #1

declare dereferenceable(96) %"class.blink::IndexedDBKey"* @_ZN5blink12IndexedDBKeyaSERKS0_(%"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"* dereferenceable(96)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"* dereferenceable(96)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !35
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !35
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !38, !noalias !35
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !38, !noalias !35
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !35
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !35
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !38, !noalias !35
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !38, !noalias !35
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !35
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !35
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !38, !noalias !35
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !38, !noalias !35
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !35
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !35
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !38, !noalias !35
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !38, !noalias !35
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !40

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !35
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !35
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !38, !noalias !35
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !38, !noalias !35
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !41

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !42

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !43

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !44

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !45

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !46

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !48
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !48
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !51, !noalias !48
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !51, !noalias !48
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !48
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !48
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !51, !noalias !48
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !51, !noalias !48
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !48
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !48
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !51, !noalias !48
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !51, !noalias !48
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !48
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !48
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !51, !noalias !48
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !51, !noalias !48
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !53

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !48
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !48
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !51, !noalias !48
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !51, !noalias !48
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !54

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !55

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !56

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink12IndexedDBKeyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.6"*, %"class.blink::IndexedDBKey"* dereferenceable(96)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::IndexedDBKey"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 192153584101141162
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::IndexedDBKey"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 96
  %20 = icmp ult i64 %19, 96076792050570581
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 192153584101141162, %14 ]
  %28 = mul i64 %27, 96
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.blink::IndexedDBKey"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.blink::IndexedDBKey"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %33, i64 %9
  %35 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %33, i64 %32
  %36 = ptrtoint %"class.blink::IndexedDBKey"* %35 to i64
  tail call void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"* %34, %"class.blink::IndexedDBKey"* dereferenceable(96) %1) #9
  %37 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %34, i64 1
  %38 = ptrtoint %"class.blink::IndexedDBKey"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %39, align 8
  %41 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %3, align 8
  %42 = icmp eq %"class.blink::IndexedDBKey"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.blink::IndexedDBKey"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.blink::IndexedDBKey"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.blink::IndexedDBKey"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %46, i64 -1
  %49 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %47, i64 -1
  tail call void @_ZN5blink12IndexedDBKeyC1ERKS0_(%"class.blink::IndexedDBKey"* %48, %"class.blink::IndexedDBKey"* dereferenceable(96) %49) #9
  %50 = icmp eq %"class.blink::IndexedDBKey"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.blink::IndexedDBKey"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.blink::IndexedDBKey"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.blink::IndexedDBKey"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.blink::IndexedDBKey"*
  %60 = icmp eq %"class.blink::IndexedDBKey"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.blink::IndexedDBKey"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %62, i64 -1
  tail call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* %63) #9
  %64 = icmp eq %"class.blink::IndexedDBKey"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN7content11IndexWriterENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.218"*, %"class.std::__1::unique_ptr.220"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.220"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.218"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.218"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.220"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.220"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.220"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.220"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.220"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.220"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.220"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.220"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.220"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.content::IndexWriter"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.220"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.220"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.220"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.220"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !57

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.220"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.220"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.220"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.220"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.220"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.220"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.220"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.220"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.220"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.220"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.220"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.220"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.220"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.220"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.220"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.220"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.220"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.220"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.220"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.220"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.220"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.220"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.220"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.220"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.220"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.220"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.220"*
  %138 = icmp eq %"class.std::__1::unique_ptr.220"* %133, %137
  br i1 %138, label %169, label %139

139:                                              ; preds = %132, %167
  %140 = phi %"class.std::__1::unique_ptr.220"* [ %141, %167 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.content::IndexWriter"*, %"class.content::IndexWriter"** %142, align 8
  store %"class.content::IndexWriter"* null, %"class.content::IndexWriter"** %142, align 8
  %144 = icmp eq %"class.content::IndexWriter"* %143, null
  br i1 %144, label %167, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %143, i64 0, i32 1
  %147 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %147, align 8
  %149 = icmp eq %"class.blink::IndexedDBKey"* %148, null
  br i1 %149, label %164, label %150

150:                                              ; preds = %145
  %151 = bitcast %"class.blink::IndexedDBKey"* %148 to i8*
  %152 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %143, i64 0, i32 1, i32 0, i32 1
  %153 = load %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"** %152, align 8
  %154 = icmp eq %"class.blink::IndexedDBKey"* %153, %148
  br i1 %154, label %162, label %155

155:                                              ; preds = %150, %155
  %156 = phi %"class.blink::IndexedDBKey"* [ %157, %155 ], [ %153, %150 ]
  %157 = getelementptr inbounds %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKey"* %156, i64 -1
  tail call void @_ZN5blink12IndexedDBKeyD1Ev(%"class.blink::IndexedDBKey"* %157) #9
  %158 = icmp eq %"class.blink::IndexedDBKey"* %157, %148
  br i1 %158, label %159, label %155

159:                                              ; preds = %155
  %160 = bitcast %"class.std::__1::vector.6"* %146 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %150
  %163 = phi i8* [ %161, %159 ], [ %151, %150 ]
  store %"class.blink::IndexedDBKey"* %148, %"class.blink::IndexedDBKey"** %152, align 8
  tail call void @_ZdlPv(i8* %163) #11
  br label %164

164:                                              ; preds = %162, %145
  %165 = getelementptr inbounds %"class.content::IndexWriter", %"class.content::IndexWriter"* %143, i64 0, i32 0
  tail call void @_ZN5blink22IndexedDBIndexMetadataD1Ev(%"struct.blink::IndexedDBIndexMetadata"* %165) #9
  %166 = bitcast %"class.content::IndexWriter"* %143 to i8*
  tail call void @_ZdlPv(i8* %166) #11
  br label %167

167:                                              ; preds = %164, %139
  %168 = icmp eq %"class.std::__1::unique_ptr.220"* %141, %137
  br i1 %168, label %169, label %139

169:                                              ; preds = %167, %132
  %170 = icmp eq i64 %135, 0
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %172) #11
  br label %173

173:                                              ; preds = %169, %171
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!4, !10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = distinct !{!22, !12}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !20}
!30 = distinct !{!30, !20}
!31 = distinct !{!31, !12}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN7leveldb6Status2OKEv: argument 0"}
!34 = distinct !{!34, !"_ZN7leveldb6Status2OKEv"}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !12}
!41 = distinct !{!41, !20}
!42 = distinct !{!42, !20}
!43 = distinct !{!43, !12}
!44 = distinct !{!44, !12}
!45 = distinct !{!45, !20}
!46 = distinct !{!46, !47, !12}
!47 = !{!"llvm.loop.unroll.runtime.disable"}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !12}
!54 = distinct !{!54, !20}
!55 = distinct !{!55, !20}
!56 = distinct !{!56, !12}
!57 = distinct !{!57, !20}
