; ModuleID = '../../third_party/blink/renderer/core/style/shadow_data.cc'
source_filename = "../../third_party/blink/renderer/core/style/shadow_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10ShadowDataeqERKS0_(%"class.blink::ShadowData"* nocapture readonly, %"class.blink::ShadowData"* nocapture readonly dereferenceable(28)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp oeq float %4, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %10, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp oeq float %16, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %22, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 3, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 3, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 3, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %1, i64 0, i32 3, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br label %44

44:                                               ; preds = %2, %38, %32, %26, %20, %14, %8
  %45 = phi i1 [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %32 ], [ %43, %38 ], [ false, %2 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5blink10ShadowData12NeutralValueEv(%"class.blink::ShadowData"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ShadowData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink10ShadowData11RectOutsetsEv(%"class.blink::ShadowData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fmul float %3, 5.000000e-01
  %5 = fmul float %4, 3.000000e+00
  %6 = tail call float @llvm.ceil.f32(float %5) #5
  %7 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = fadd float %8, %6
  %10 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %9, %11
  %13 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = fadd float %14, %9
  %16 = fadd float %11, %9
  %17 = fsub float %9, %14
  %18 = insertelement <2 x float> undef, float %12, i32 0
  %19 = insertelement <2 x float> %18, float %15, i32 1
  %20 = insertelement <2 x float> undef, float %16, i32 0
  %21 = insertelement <2 x float> %20, float %17, i32 1
  %22 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %23 = insertvalue { <2 x float>, <2 x float> } %22, <2 x float> %21, 1
  ret { <2 x float>, <2 x float> } %23
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
