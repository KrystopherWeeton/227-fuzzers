; ModuleID = '../../third_party/dawn/src/dawn_native/opengl/PipelineGL.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/opengl/PipelineGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.dawn_native::opengl::PipelineGL" = type { i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.10", %class.Ref }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"class.std::__1::__compressed_pair" }
%"struct.dawn_native::opengl::PipelineGL::SamplerUnit" = type { i32, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::vector.0"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::vector.10"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::opengl::Sampler"* }
%"class.dawn_native::opengl::Sampler" = type { %"class.dawn_native::SamplerBase.base", i32, i32, [4 x i8] }
%"class.dawn_native::SamplerBase.base" = type <{ %"class.dawn_native::CachedObject.base", [3 x i8], i32, i32, i32, i32, i32, i32, float, float, i32, i16 }>
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref.26, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.28", %class.Ref.34, %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %class.Ref.48, %"class.std::__1::unique_ptr.50", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref.26 = type { %class.RefBase.27 }
%class.RefBase.27 = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.34 = type { %class.RefBase.35 }
%class.RefBase.35 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array.71" }
%"struct.std::__1::array.71" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair.74" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i64 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.48 = type { %class.RefBase.49 }
%class.RefBase.49 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.56" }
%"struct.std::__1::array.56" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.57" }
%"class.std::__1::bitset.57" = type { %"class.std::__1::__bitset.58" }
%"class.std::__1::__bitset.58" = type { i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.dawn_native::opengl::OpenGLFunctions" = type { %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLVersion", [4 x i8], %"class.std::__1::unordered_set" }
%"struct.dawn_native::opengl::OpenGLFunctionsBase" = type { void (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (float, float, float, float)*, void (float)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32*)*, i32 ()*, void (i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32)*, void ()*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i8**, i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, float, i32)*, i8* (i32, i32)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, i8 (%struct.__GLsync*)*, void (%struct.__GLsync*)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i64*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void ()*, void ()*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float, float)*, void (i32, i32, float, float, float)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i8, i8, i8, i8)*, i8 (i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32)*, void (float, float, float, float, float, float, float, float)*, i32 ()*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (float)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (float)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32)*, void (double)*, void (i32)*, void (i32, float)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (double, double)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i64, i64, i8*)*, i8* (i32, i32)*, void (i32, i32, double*)*, void (i32, double)*, void (i32, double*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, double*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, float*)*, void (i32, i32, double*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, i8 (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*, i32, i8*, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void ()*, void (i32, i8*, i32, i32*, i32*)*, void (i32, i8*, i64, i32, i32)*, void (i32, i32, i8*, i64, i32, i32)*, void (float, float, float)* }
%struct.__GLsync = type opaque
%"struct.dawn_native::opengl::OpenGLVersion" = type { i32, i32, i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.102", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { float }
%"class.dawn_native::opengl::PipelineLayout" = type { %"class.dawn_native::PipelineLayoutBase", %"class.ityp::array.109", i64, i64 }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array", %"class.ityp::bitset" }
%"class.ityp::array" = type { %"struct.std::__1::array.106" }
%"struct.std::__1::array.106" = type { [4 x %class.Ref.34] }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.107" }
%"class.std::__1::bitset.107" = type { %"class.std::__1::__bitset.108" }
%"class.std::__1::__bitset.108" = type { i64 }
%"class.ityp::array.109" = type { %"struct.std::__1::array.110" }
%"struct.std::__1::array.110" = type { [4 x %"class.ityp::vector.111"] }
%"class.ityp::vector.111" = type { %"class.std::__1::vector.10" }
%"class.dawn_native::PerStage.112" = type { %"struct.std::__1::array.113" }
%"struct.std::__1::array.113" = type { [3 x %"struct.dawn_native::ProgrammableStage"] }
%"struct.dawn_native::ProgrammableStage" = type { %class.Ref.114, %"class.std::__1::basic_string", %"struct.dawn_native::EntryPointMetadata"* }
%class.Ref.114 = type { %class.RefBase.115 }
%class.RefBase.115 = type { %"class.dawn_native::ShaderModuleBase"* }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.10", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", %"class.std::__1::vector.10", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.121" }
%"class.std::__1::__hash_table.121" = type <{ %"class.std::__1::unique_ptr.122", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.125"** }
%"struct.std::__1::__hash_node_base.125" = type { %"struct.std::__1::__hash_node_base.125"* }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::__bucket_list_deallocator.127" }
%"class.std::__1::__bucket_list_deallocator.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base.125" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.tint::Program"* }
%"class.tint::Program" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.157", %"class.std::__1::vector.164" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %struct.WGPUCompilationMessage* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.174", %"class.std::__1::bitset.185", %"class.ityp::array.187", %"class.ityp::bitset.189", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.174" = type { %"struct.std::__1::array.175" }
%"struct.std::__1::array.175" = type { [4 x %"class.std::__1::map.176"] }
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::bitset.185" = type { %"class.std::__1::__bitset.186" }
%"class.std::__1::__bitset.186" = type { i64 }
%"class.ityp::array.187" = type { %"struct.std::__1::array.188" }
%"struct.std::__1::array.188" = type { [4 x i32] }
%"class.ityp::bitset.189" = type { %"class.std::__1::bitset.107" }
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.dawn::LogMessage" = type { i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%class.BitSetIterator = type { %"class.std::__1::bitset.190" }
%"class.std::__1::bitset.190" = type { %"class.std::__1::__bitset.191" }
%"class.std::__1::__bitset.191" = type { i64 }
%"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator" = type { %"class.std::__1::bitset.190", i64, i64 }
%"class.dawn_native::PerStage.192" = type { %"struct.std::__1::array.193" }
%"struct.std::__1::array.193" = type { [3 x %"class.std::__1::vector.194"] }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"*, %"class.std::__1::__compressed_pair.196" }
%"struct.dawn_native::opengl::CombinedSampler" = type { %"struct.dawn_native::opengl::BindingLocation", %"struct.dawn_native::opengl::BindingLocation", i8 }
%"struct.dawn_native::opengl::BindingLocation" = type { i32, i32 }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.dawn_native::opengl::CombinedSampler"* }
%"struct.dawn_native::SamplerDescriptor" = type <{ %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16, [2 x i8] }>
%class.Result = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.dawn_native::opengl::ShaderModule" = type { %"class.dawn_native::ShaderModuleBase", %"class.std::__1::vector.10", %"class.std::__1::unordered_map" }
%"class.dawn_native::SamplerBase" = type <{ %"class.dawn_native::CachedObject.base", [3 x i8], i32, i32, i32, i32, i32, i32, float, float, i32, i16, [6 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.dawn_native::opengl::CombinedSampler" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS0_IN11dawn_native6opengl10PipelineGL11SamplerUnitENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS0_IjNS_9allocatorIjEEEENS1_IS3_EEE8__appendEm = comdat any

$_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask = comdat any

@.str = private unnamed_addr constant [22 x i8] c"Program link failed:\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"\0AProgram compilation failed:\0A\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 7 }, comdat, align 8
@switch.table._ZN11dawn_native6opengl10PipelineGL10InitializeERKNS0_15OpenGLFunctionsEPKNS0_14PipelineLayoutERKNS_8PerStageINS_17ProgrammableStageEEE = private unnamed_addr constant [3 x i32] [i32 35633, i32 35632, i32 37305], align 4

@_ZN11dawn_native6opengl10PipelineGLC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::opengl::PipelineGL"*), void (%"class.dawn_native::opengl::PipelineGL"*)* @_ZN11dawn_native6opengl10PipelineGLC2Ev
@_ZN11dawn_native6opengl10PipelineGLD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::opengl::PipelineGL"*), void (%"class.dawn_native::opengl::PipelineGL"*)* @_ZN11dawn_native6opengl10PipelineGLD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl10PipelineGLC2Ev(%"class.dawn_native::opengl::PipelineGL"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl10PipelineGLD2Ev(%"class.dawn_native::opengl::PipelineGL"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.dawn_native::opengl::Sampler"*, %"class.dawn_native::opengl::Sampler"** %2, align 8
  %4 = icmp eq %"class.dawn_native::opengl::Sampler"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dawn_native::opengl::Sampler", %"class.dawn_native::opengl::Sampler"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  store %"class.dawn_native::opengl::Sampler"* null, %"class.dawn_native::opengl::Sampler"** %2, align 8
  %8 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i32* %9 to i64
  %13 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast i32* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %7, %11
  %17 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %18, align 8
  %20 = icmp eq %"class.std::__1::vector.10"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::vector.10"* %19 to i8*
  %23 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.10"* %24, %19
  br i1 %25, label %42, label %26

26:                                               ; preds = %21, %37
  %27 = phi %"class.std::__1::vector.10"* [ %28, %37 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %27, i64 -1
  %29 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %28, i64 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = ptrtoint i32* %30 to i64
  %34 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %27, i64 -1, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i32* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %32, %26
  %38 = icmp eq %"class.std::__1::vector.10"* %28, %19
  br i1 %38, label %39, label %26

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.8"* %17 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %21
  %43 = phi i8* [ %41, %39 ], [ %22, %21 ]
  store %"class.std::__1::vector.10"* %19, %"class.std::__1::vector.10"** %23, align 8
  tail call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %16, %42
  %45 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %46, align 8
  %48 = icmp eq %"class.std::__1::vector.0"* %47, null
  br i1 %48, label %72, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.std::__1::vector.0"* %47 to i8*
  %51 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 1, i32 0, i32 1
  %52 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %51, align 8
  %53 = icmp eq %"class.std::__1::vector.0"* %52, %47
  br i1 %53, label %70, label %54

54:                                               ; preds = %49, %65
  %55 = phi %"class.std::__1::vector.0"* [ %56, %65 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 -1
  %57 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %56, i64 0, i32 0, i32 0
  %58 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %57, align 8
  %59 = icmp eq %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 -1, i32 0, i32 1
  %63 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %60, %54
  %66 = icmp eq %"class.std::__1::vector.0"* %56, %47
  br i1 %66, label %67, label %54

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::vector"* %45 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %49
  %71 = phi i8* [ %69, %67 ], [ %50, %49 ]
  store %"class.std::__1::vector.0"* %47, %"class.std::__1::vector.0"** %51, align 8
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %44, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl10PipelineGL10InitializeERKNS0_15OpenGLFunctionsEPKNS0_14PipelineLayoutERKNS_8PerStageINS_17ProgrammableStageEEE(%"class.dawn_native::opengl::PipelineGL"*, %"struct.dawn_native::opengl::OpenGLFunctions"* nocapture readonly dereferenceable(5664), %"class.dawn_native::opengl::PipelineLayout"*, %"class.dawn_native::PerStage.112"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca %"class.std::__1::__bit_iterator", align 8
  %13 = alloca %"class.std::__1::__bit_iterator", align 8
  %14 = alloca %"class.std::__1::__bit_iterator", align 8
  %15 = alloca %"class.std::__1::__bit_iterator", align 8
  %16 = alloca %"class.std::__1::__bit_iterator", align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.dawn::LogMessage", align 8
  %21 = alloca %"class.std::__1::__bit_iterator", align 8
  %22 = alloca %"class.std::__1::__bit_iterator", align 8
  %23 = alloca %"class.std::__1::__bit_iterator", align 8
  %24 = alloca %"class.std::__1::__bit_iterator", align 8
  %25 = alloca %"class.std::__1::__bit_iterator", align 8
  %26 = alloca %"class.std::__1::__bit_iterator", align 8
  %27 = alloca %"class.std::__1::__bit_iterator", align 8
  %28 = alloca %"class.std::__1::__bit_iterator", align 8
  %29 = alloca %"class.std::__1::__bit_iterator", align 8
  %30 = alloca %"class.std::__1::__bit_iterator", align 8
  %31 = alloca %"class.std::__1::__bit_iterator", align 8
  %32 = alloca %"class.std::__1::__bit_iterator", align 8
  %33 = alloca %class.BitSetIterator, align 8
  %34 = alloca %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", align 8
  %35 = alloca %"class.dawn_native::PerStage.192", align 8
  %36 = alloca i8, align 1
  %37 = alloca %class.BitSetIterator, align 8
  %38 = alloca %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"struct.dawn_native::SamplerDescriptor", align 8
  %41 = alloca %class.Result, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca %"class.dawn::LogMessage", align 8
  %45 = alloca %"class.std::__1::set", align 8
  %46 = alloca %class.BitSetIterator, align 8
  %47 = alloca %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", align 8
  %48 = alloca %"class.std::__1::basic_string", align 8
  %49 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 25
  %50 = load i32 ()*, i32 ()** %49, align 8
  %51 = tail call i32 %50() #10
  %52 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 0
  store i32 %51, i32* %52, align 8
  %53 = bitcast %class.BitSetIterator* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  call void @_ZN11dawn_native13IterateStagesEN4wgpu11ShaderStageE(%class.BitSetIterator* nonnull sret %33, i32 7) #10
  %54 = bitcast %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %34, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %34, i64 0, i32 1
  %57 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %34, i64 0, i32 2
  %58 = getelementptr inbounds %class.BitSetIterator, %class.BitSetIterator* %33, i64 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8, !noalias !2
  store i64 %59, i64* %55, align 8, !alias.scope !2
  %60 = bitcast i64* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10, !alias.scope !2
  %61 = and i64 %59, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %96, label %63

63:                                               ; preds = %4
  %64 = ptrtoint %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %34 to i64
  %65 = bitcast %"class.std::__1::__bit_iterator"* %32 to i8*
  %66 = bitcast %"class.std::__1::__bit_iterator"* %29 to i8*
  %67 = bitcast %"class.std::__1::__bit_iterator"* %30 to i8*
  %68 = bitcast %"class.std::__1::__bit_iterator"* %31 to i8*
  %69 = bitcast %"class.std::__1::__bit_iterator"* %29 to i64*
  %70 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %29, i64 0, i32 1
  %71 = bitcast %"class.std::__1::__bit_iterator"* %30 to i64*
  %72 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %30, i64 0, i32 1
  %73 = bitcast %"class.std::__1::__bit_iterator"* %31 to i64*
  %74 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %31, i64 0, i32 1
  br label %75

75:                                               ; preds = %87, %63
  %76 = phi i64 [ %59, %63 ], [ %89, %87 ]
  %77 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %78 = and i64 %77, %76
  %79 = and i64 %78, 4294967295
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %75
  %82 = trunc i64 %78 to i32
  %83 = call i32 @_Z11ScanForwardj(i32 %82) #10
  %84 = zext i32 %83 to i64
  %85 = load i64, i64* %57, align 8, !alias.scope !2
  %86 = add i64 %85, %84
  br label %93

87:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #10, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #10, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #10, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10, !noalias !2
  store i64 %64, i64* %69, align 8, !noalias !5
  store i32 3, i32* %70, align 8, !noalias !5
  store i64 %64, i64* %71, align 8, !noalias !5
  store i32 3, i32* %72, align 8, !noalias !5
  store i64 %64, i64* %73, align 8, !noalias !5
  store i32 0, i32* %74, align 8, !noalias !5
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %32, %"class.std::__1::__bit_iterator"* nonnull %29, %"class.std::__1::__bit_iterator"* nonnull %30, %"class.std::__1::__bit_iterator"* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #10, !noalias !2
  %88 = load i64, i64* %55, align 8, !alias.scope !2
  %89 = and i64 %88, -8
  store i64 %89, i64* %55, align 8, !alias.scope !2
  %90 = load i64, i64* %57, align 8, !alias.scope !2
  %91 = add i64 %90, 32
  store i64 %91, i64* %57, align 8, !alias.scope !2
  %92 = icmp ult i64 %91, 3
  br i1 %92, label %75, label %93

93:                                               ; preds = %87, %81
  %94 = phi i64 [ %85, %81 ], [ %91, %87 ]
  %95 = phi i64 [ %86, %81 ], [ 0, %87 ]
  store i64 %95, i64* %56, align 8, !alias.scope !2
  br label %98

96:                                               ; preds = %4
  store i64 32, i64* %57, align 8, !alias.scope !2
  %97 = ptrtoint %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %34 to i64
  br label %98

98:                                               ; preds = %93, %96
  %99 = phi i64 [ %64, %93 ], [ %97, %96 ]
  %100 = phi i64 [ %95, %93 ], [ 0, %96 ]
  %101 = phi i64 [ %94, %93 ], [ 32, %96 ]
  %102 = bitcast %"class.std::__1::__bit_iterator"* %24 to i8*
  %103 = bitcast %"class.std::__1::__bit_iterator"* %21 to i8*
  %104 = bitcast %"class.std::__1::__bit_iterator"* %22 to i8*
  %105 = bitcast %"class.std::__1::__bit_iterator"* %23 to i8*
  %106 = bitcast %"class.std::__1::__bit_iterator"* %21 to i64*
  %107 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %21, i64 0, i32 1
  %108 = bitcast %"class.std::__1::__bit_iterator"* %22 to i64*
  %109 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %22, i64 0, i32 1
  %110 = bitcast %"class.std::__1::__bit_iterator"* %23 to i64*
  %111 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %23, i64 0, i32 1
  br label %112

112:                                              ; preds = %241, %98
  %113 = phi i64 [ %101, %98 ], [ %242, %241 ]
  %114 = phi i64 [ %100, %98 ], [ %243, %241 ]
  %115 = phi i32 [ 0, %98 ], [ %213, %241 ]
  %116 = icmp eq i64 %113, 32
  br i1 %116, label %117, label %199

117:                                              ; preds = %112
  %118 = load i64, i64* %55, align 8
  %119 = and i64 %118, 7
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %199

121:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  %122 = bitcast %"class.dawn_native::PerStage.192"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %122) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 72, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #10
  store i8 0, i8* %36, align 1
  %123 = bitcast %class.BitSetIterator* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #10
  call void @_ZN11dawn_native13IterateStagesEN4wgpu11ShaderStageE(%class.BitSetIterator* nonnull sret %37, i32 %115) #10
  %124 = bitcast %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #10
  %125 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %38, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %38, i64 0, i32 1
  %127 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %38, i64 0, i32 2
  %128 = getelementptr inbounds %class.BitSetIterator, %class.BitSetIterator* %37, i64 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8, !noalias !8
  store i64 %129, i64* %125, align 8, !alias.scope !8
  %130 = bitcast i64* %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #10, !alias.scope !8
  %131 = and i64 %129, 7
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %166, label %133

133:                                              ; preds = %121
  %134 = ptrtoint %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %38 to i64
  %135 = bitcast %"class.std::__1::__bit_iterator"* %28 to i8*
  %136 = bitcast %"class.std::__1::__bit_iterator"* %25 to i8*
  %137 = bitcast %"class.std::__1::__bit_iterator"* %26 to i8*
  %138 = bitcast %"class.std::__1::__bit_iterator"* %27 to i8*
  %139 = bitcast %"class.std::__1::__bit_iterator"* %25 to i64*
  %140 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %25, i64 0, i32 1
  %141 = bitcast %"class.std::__1::__bit_iterator"* %26 to i64*
  %142 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %26, i64 0, i32 1
  %143 = bitcast %"class.std::__1::__bit_iterator"* %27 to i64*
  %144 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %27, i64 0, i32 1
  br label %145

145:                                              ; preds = %157, %133
  %146 = phi i64 [ %129, %133 ], [ %159, %157 ]
  %147 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %148 = and i64 %147, %146
  %149 = and i64 %148, 4294967295
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %145
  %152 = trunc i64 %148 to i32
  %153 = call i32 @_Z11ScanForwardj(i32 %152) #10
  %154 = zext i32 %153 to i64
  %155 = load i64, i64* %127, align 8, !alias.scope !8
  %156 = add i64 %155, %154
  br label %163

157:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #10, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #10, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #10, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #10, !noalias !8
  store i64 %134, i64* %139, align 8, !noalias !11
  store i32 3, i32* %140, align 8, !noalias !11
  store i64 %134, i64* %141, align 8, !noalias !11
  store i32 3, i32* %142, align 8, !noalias !11
  store i64 %134, i64* %143, align 8, !noalias !11
  store i32 0, i32* %144, align 8, !noalias !11
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %28, %"class.std::__1::__bit_iterator"* nonnull %25, %"class.std::__1::__bit_iterator"* nonnull %26, %"class.std::__1::__bit_iterator"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #10, !noalias !8
  %158 = load i64, i64* %125, align 8, !alias.scope !8
  %159 = and i64 %158, -8
  store i64 %159, i64* %125, align 8, !alias.scope !8
  %160 = load i64, i64* %127, align 8, !alias.scope !8
  %161 = add i64 %160, 32
  store i64 %161, i64* %127, align 8, !alias.scope !8
  %162 = icmp ult i64 %161, 3
  br i1 %162, label %145, label %163

163:                                              ; preds = %157, %151
  %164 = phi i64 [ %155, %151 ], [ %161, %157 ]
  %165 = phi i64 [ %156, %151 ], [ 0, %157 ]
  store i64 %165, i64* %126, align 8, !alias.scope !8
  br label %168

166:                                              ; preds = %121
  store i64 32, i64* %127, align 8, !alias.scope !8
  %167 = ptrtoint %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %38 to i64
  br label %168

168:                                              ; preds = %163, %166
  %169 = phi i64 [ %134, %163 ], [ %167, %166 ]
  %170 = phi i64 [ %165, %163 ], [ 0, %166 ]
  %171 = phi i64 [ %164, %163 ], [ 32, %166 ]
  %172 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %174, i64 0, i32 1, i32 0
  %176 = bitcast i8** %17 to i8*
  %177 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 26
  %178 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 98
  %179 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 20
  %180 = bitcast i32* %18 to i8*
  %181 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 67
  %182 = bitcast i32* %19 to i8*
  %183 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 68
  %184 = bitcast %"class.dawn::LogMessage"* %20 to i8*
  %185 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %20, i64 0, i32 1
  %186 = bitcast %"class.std::__1::basic_ostringstream"* %185 to %"class.std::__1::basic_ostream"*
  %187 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 1
  %188 = bitcast %"class.std::__1::__bit_iterator"* %16 to i8*
  %189 = bitcast %"class.std::__1::__bit_iterator"* %13 to i8*
  %190 = bitcast %"class.std::__1::__bit_iterator"* %14 to i8*
  %191 = bitcast %"class.std::__1::__bit_iterator"* %15 to i8*
  %192 = bitcast %"class.std::__1::__bit_iterator"* %13 to i64*
  %193 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %13, i64 0, i32 1
  %194 = bitcast %"class.std::__1::__bit_iterator"* %14 to i64*
  %195 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %14, i64 0, i32 1
  %196 = bitcast %"class.std::__1::__bit_iterator"* %15 to i64*
  %197 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %15, i64 0, i32 1
  %198 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  br label %244

199:                                              ; preds = %117, %112
  %200 = and i64 %114, 4294967295
  %201 = getelementptr inbounds %"class.dawn_native::PerStage.112", %"class.dawn_native::PerStage.112"* %3, i64 0, i32 0, i32 0, i64 %200, i32 0, i32 0, i32 0
  %202 = load %"class.dawn_native::ShaderModuleBase"*, %"class.dawn_native::ShaderModuleBase"** %201, align 8
  %203 = icmp eq %"class.dawn_native::ShaderModuleBase"* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %199
  %205 = trunc i64 %114 to i32
  %206 = call i32 @_ZN11dawn_native8StageBitENS_17SingleShaderStageE(i32 %205) #10
  %207 = or i32 %206, %115
  %208 = load i64, i64* %56, align 8
  %209 = load i64, i64* %57, align 8
  br label %210

210:                                              ; preds = %199, %204
  %211 = phi i64 [ %209, %204 ], [ %113, %199 ]
  %212 = phi i64 [ %208, %204 ], [ %114, %199 ]
  %213 = phi i32 [ %207, %204 ], [ %115, %199 ]
  %214 = sub i64 %212, %211
  %215 = icmp ugt i64 %214, 2
  br i1 %215, label %216, label %217

216:                                              ; preds = %210
  call void @abort() #12
  unreachable

217:                                              ; preds = %210
  %218 = shl i64 1, %214
  %219 = xor i64 %218, -1
  %220 = load i64, i64* %55, align 8
  %221 = and i64 %220, %219
  store i64 %221, i64* %55, align 8
  %222 = icmp ult i64 %211, 3
  br i1 %222, label %223, label %241

223:                                              ; preds = %217, %235
  %224 = phi i64 [ %237, %235 ], [ %221, %217 ]
  %225 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %226 = and i64 %225, %224
  %227 = and i64 %226, 4294967295
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %235, label %229

229:                                              ; preds = %223
  %230 = trunc i64 %226 to i32
  %231 = call i32 @_Z11ScanForwardj(i32 %230) #10
  %232 = zext i32 %231 to i64
  %233 = load i64, i64* %57, align 8
  %234 = add i64 %233, %232
  br label %241

235:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #10
  store i64 %99, i64* %106, align 8, !noalias !14
  store i32 3, i32* %107, align 8, !noalias !14
  store i64 %99, i64* %108, align 8, !noalias !14
  store i32 3, i32* %109, align 8, !noalias !14
  store i64 %99, i64* %110, align 8, !noalias !14
  store i32 0, i32* %111, align 8, !noalias !14
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %24, %"class.std::__1::__bit_iterator"* nonnull %21, %"class.std::__1::__bit_iterator"* nonnull %22, %"class.std::__1::__bit_iterator"* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #10
  %236 = load i64, i64* %55, align 8
  %237 = and i64 %236, -8
  store i64 %237, i64* %55, align 8
  %238 = load i64, i64* %57, align 8
  %239 = add i64 %238, 32
  store i64 %239, i64* %57, align 8
  %240 = icmp ult i64 %239, 3
  br i1 %240, label %223, label %241

241:                                              ; preds = %235, %217, %229
  %242 = phi i64 [ %233, %229 ], [ %211, %217 ], [ %239, %235 ]
  %243 = phi i64 [ %234, %229 ], [ 0, %217 ], [ 0, %235 ]
  store i64 %243, i64* %56, align 8
  br label %112

244:                                              ; preds = %345, %168
  %245 = phi i64 [ %347, %345 ], [ %170, %168 ]
  %246 = phi i64 [ %346, %345 ], [ %171, %168 ]
  %247 = icmp eq i64 %246, 32
  br i1 %247, label %248, label %255

248:                                              ; preds = %244
  %249 = load i64, i64* %125, align 8
  %250 = and i64 %249, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #10
  %253 = load i8, i8* %36, align 1, !range !17
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %381, label %348

255:                                              ; preds = %248, %244
  %256 = trunc i64 %245 to i32
  %257 = and i64 %245, 4294967295
  %258 = getelementptr inbounds %"class.dawn_native::PerStage.112", %"class.dawn_native::PerStage.112"* %3, i64 0, i32 0, i32 0, i64 %257
  %259 = bitcast %"struct.dawn_native::ProgrammableStage"* %258 to %"class.dawn_native::opengl::ShaderModule"**
  %260 = load %"class.dawn_native::opengl::ShaderModule"*, %"class.dawn_native::opengl::ShaderModule"** %259, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #10
  %261 = getelementptr inbounds %"class.dawn_native::PerStage.112", %"class.dawn_native::PerStage.112"* %3, i64 0, i32 0, i32 0, i64 %257, i32 1
  %262 = bitcast %"class.std::__1::basic_string"* %261 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 -86, i64 24, i1 false)
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %255
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  br label %271

269:                                              ; preds = %255
  %270 = bitcast %"class.std::__1::basic_string"* %261 to i8*
  br label %271

271:                                              ; preds = %266, %269
  %272 = phi i8* [ %268, %266 ], [ %270, %269 ]
  %273 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 %257
  call void @_ZNK11dawn_native6opengl12ShaderModule15TranslateToGLSLEPKcNS_17SingleShaderStageEPNSt3__16vectorINS0_15CombinedSamplerENS5_9allocatorIS7_EEEEPKNS0_14PipelineLayoutEPb(%"class.std::__1::basic_string"* nonnull sret %39, %"class.dawn_native::opengl::ShaderModule"* %260, i8* %272, i32 %256, %"class.std::__1::vector.194"* %273, %"class.dawn_native::opengl::PipelineLayout"* %2, i8* nonnull %36) #10
  %274 = shl i64 %245, 32
  %275 = ashr exact i64 %274, 32
  %276 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN11dawn_native6opengl10PipelineGL10InitializeERKNS0_15OpenGLFunctionsEPKNS0_14PipelineLayoutERKNS_8PerStageINS_17ProgrammableStageEEE, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = load i8, i8* %175, align 1
  %279 = icmp slt i8 %278, 0
  %280 = load i8*, i8** %173, align 8
  %281 = select i1 %279, i8* %280, i8* %172
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176)
  store i8* %281, i8** %17, align 8
  %282 = load i32 (i32)*, i32 (i32)** %177, align 8
  %283 = call i32 %282(i32 %277) #10
  %284 = load void (i32, i32, i8**, i32*)*, void (i32, i32, i8**, i32*)** %178, align 8
  call void %284(i32 %283, i32 1, i8** nonnull %17, i32* null) #10
  %285 = load void (i32)*, void (i32)** %179, align 8
  call void %285(i32 %283) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #10
  store i32 0, i32* %18, align 4
  %286 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %181, align 8
  call void %286(i32 %283, i32 35713, i32* nonnull %18) #10
  %287 = load i32, i32* %18, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %308

289:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #10
  store i32 0, i32* %19, align 4
  %290 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %181, align 8
  call void %290(i32 %283, i32 35716, i32* nonnull %19) #10
  %291 = load i32, i32* %19, align 4
  %292 = icmp sgt i32 %291, 1
  br i1 %292, label %293, label %307

293:                                              ; preds = %289
  %294 = sext i32 %291 to i64
  %295 = call i8* @_Znwm(i64 %294) #11
  %296 = ptrtoint i8* %295 to i64
  %297 = sub i64 %294, %296
  %298 = getelementptr i8, i8* %295, i64 %297
  %299 = ptrtoint i8* %298 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %295, i8 0, i64 %299, i1 false) #10
  %300 = load void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** %183, align 8
  call void %300(i32 %283, i32 %291, i32* null, i8* nonnull %295) #10
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %184) #10
  call void @_ZN4dawn8ErrorLogEv(%"class.dawn::LogMessage"* nonnull sret %20) #10
  %301 = load i8*, i8** %17, align 8
  %302 = call i64 @strlen(i8* %301) #10
  %303 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* %301, i64 %302) #10
  %304 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 29) #10
  %305 = call i64 @strlen(i8* nonnull %295) #10
  %306 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* nonnull %295, i64 %305) #10
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %184) #10
  call void @_ZdlPv(i8* nonnull %295) #11
  br label %307

307:                                              ; preds = %293, %289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #10
  br label %308

308:                                              ; preds = %271, %307
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176)
  %309 = load void (i32, i32)*, void (i32, i32)** %187, align 8
  %310 = load i32, i32* %52, align 8
  call void %309(i32 %310, i32 %283) #10
  %311 = load i8, i8* %175, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %308
  %314 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %314) #11
  br label %315

315:                                              ; preds = %308, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #10
  %316 = load i64, i64* %126, align 8
  %317 = load i64, i64* %127, align 8
  %318 = sub i64 %316, %317
  %319 = icmp ugt i64 %318, 2
  br i1 %319, label %320, label %321

320:                                              ; preds = %315
  call void @abort() #12
  unreachable

321:                                              ; preds = %315
  %322 = shl i64 1, %318
  %323 = xor i64 %322, -1
  %324 = load i64, i64* %125, align 8
  %325 = and i64 %324, %323
  store i64 %325, i64* %125, align 8
  %326 = icmp ult i64 %317, 3
  br i1 %326, label %327, label %345

327:                                              ; preds = %321, %339
  %328 = phi i64 [ %341, %339 ], [ %325, %321 ]
  %329 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %330 = and i64 %329, %328
  %331 = and i64 %330, 4294967295
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %339, label %333

333:                                              ; preds = %327
  %334 = trunc i64 %330 to i32
  %335 = call i32 @_Z11ScanForwardj(i32 %334) #10
  %336 = zext i32 %335 to i64
  %337 = load i64, i64* %127, align 8
  %338 = add i64 %337, %336
  br label %345

339:                                              ; preds = %327
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %189) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %190) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #10
  store i64 %169, i64* %192, align 8, !noalias !18
  store i32 3, i32* %193, align 8, !noalias !18
  store i64 %169, i64* %194, align 8, !noalias !18
  store i32 3, i32* %195, align 8, !noalias !18
  store i64 %169, i64* %196, align 8, !noalias !18
  store i32 0, i32* %197, align 8, !noalias !18
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %16, %"class.std::__1::__bit_iterator"* nonnull %13, %"class.std::__1::__bit_iterator"* nonnull %14, %"class.std::__1::__bit_iterator"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %189) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %190) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #10
  %340 = load i64, i64* %125, align 8
  %341 = and i64 %340, -8
  store i64 %341, i64* %125, align 8
  %342 = load i64, i64* %127, align 8
  %343 = add i64 %342, 32
  store i64 %343, i64* %127, align 8
  %344 = icmp ult i64 %343, 3
  br i1 %344, label %327, label %345

345:                                              ; preds = %339, %321, %333
  %346 = phi i64 [ %337, %333 ], [ %317, %321 ], [ %343, %339 ]
  %347 = phi i64 [ %338, %333 ], [ 0, %321 ], [ 0, %339 ]
  store i64 %347, i64* %126, align 8
  br label %244

348:                                              ; preds = %252
  %349 = bitcast %"struct.dawn_native::SamplerDescriptor"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %349) #10
  %350 = getelementptr inbounds %"struct.dawn_native::SamplerDescriptor", %"struct.dawn_native::SamplerDescriptor"* %40, i64 0, i32 2
  %351 = getelementptr inbounds %"struct.dawn_native::SamplerDescriptor", %"struct.dawn_native::SamplerDescriptor"* %40, i64 0, i32 3
  %352 = getelementptr inbounds %"struct.dawn_native::SamplerDescriptor", %"struct.dawn_native::SamplerDescriptor"* %40, i64 0, i32 4
  %353 = getelementptr inbounds %"struct.dawn_native::SamplerDescriptor", %"struct.dawn_native::SamplerDescriptor"* %40, i64 0, i32 5
  %354 = getelementptr inbounds %"struct.dawn_native::SamplerDescriptor", %"struct.dawn_native::SamplerDescriptor"* %40, i64 0, i32 9
  %355 = getelementptr inbounds %"struct.dawn_native::SamplerDescriptor", %"struct.dawn_native::SamplerDescriptor"* %40, i64 0, i32 10
  %356 = bitcast i32* %355 to i64*
  store i64 -6149102336926023680, i64* %356, align 8
  %357 = bitcast %"struct.dawn_native::SamplerDescriptor"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 0, i64 16, i1 false)
  store i32 2, i32* %350, align 8
  store i32 2, i32* %351, align 4
  store i32 2, i32* %352, align 8
  %358 = bitcast i32* %353 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %358, i8 0, i64 16, i1 false)
  store float 1.000000e+03, float* %354, align 4
  %359 = bitcast %class.Result* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359) #10
  %360 = getelementptr inbounds %"class.dawn_native::opengl::PipelineLayout", %"class.dawn_native::opengl::PipelineLayout"* %2, i64 0, i32 0, i32 0, i32 0
  %361 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %360) #10
  call void @_ZN11dawn_native10DeviceBase18GetOrCreateSamplerEPKNS_17SamplerDescriptorE(%class.Result* nonnull sret %41, %"class.dawn_native::DeviceBase"* %361, %"struct.dawn_native::SamplerDescriptor"* nonnull %40) #10
  %362 = getelementptr inbounds %class.Result, %class.Result* %41, i64 0, i32 0
  %363 = load i64, i64* %362, align 8, !noalias !21
  store i64 2, i64* %362, align 8, !noalias !21
  %364 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 4
  %365 = icmp eq i64 %363, 0
  br i1 %365, label %369, label %366

366:                                              ; preds = %348
  %367 = inttoptr i64 %363 to %"class.dawn_native::opengl::Sampler"*
  %368 = getelementptr inbounds %"class.dawn_native::opengl::Sampler", %"class.dawn_native::opengl::Sampler"* %367, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN10RefCounted9ReferenceEv(%class.RefCounted* %368) #10
  br label %369

369:                                              ; preds = %366, %348
  %370 = getelementptr inbounds %class.Ref, %class.Ref* %364, i64 0, i32 0, i32 0
  %371 = load %"class.dawn_native::opengl::Sampler"*, %"class.dawn_native::opengl::Sampler"** %370, align 8
  %372 = icmp eq %"class.dawn_native::opengl::Sampler"* %371, null
  br i1 %372, label %375, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.dawn_native::opengl::Sampler", %"class.dawn_native::opengl::Sampler"* %371, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* %374) #10
  br label %375

375:                                              ; preds = %373, %369
  %376 = bitcast %class.Ref* %364 to i64*
  store i64 %363, i64* %376, align 8
  br i1 %365, label %380, label %377

377:                                              ; preds = %375
  %378 = inttoptr i64 %363 to %"class.dawn_native::SamplerBase"*
  %379 = getelementptr inbounds %"class.dawn_native::SamplerBase", %"class.dawn_native::SamplerBase"* %378, i64 0, i32 0, i32 0, i32 0
  call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* %379) #10
  br label %380

380:                                              ; preds = %375, %377
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %349) #10
  br label %381

381:                                              ; preds = %252, %380
  %382 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 89
  %383 = load void (i32)*, void (i32)** %382, align 8
  %384 = load i32, i32* %52, align 8
  call void %383(i32 %384) #10
  %385 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %385) #10
  store i32 0, i32* %42, align 4
  %386 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 64
  %387 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %386, align 8
  %388 = load i32, i32* %52, align 8
  call void %387(i32 %388, i32 35714, i32* nonnull %42) #10
  %389 = load i32, i32* %42, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %414

391:                                              ; preds = %381
  %392 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %392) #10
  store i32 0, i32* %43, align 4
  %393 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %386, align 8
  %394 = load i32, i32* %52, align 8
  call void %393(i32 %394, i32 35716, i32* nonnull %43) #10
  %395 = load i32, i32* %43, align 4
  %396 = icmp sgt i32 %395, 1
  br i1 %396, label %397, label %413

397:                                              ; preds = %391
  %398 = sext i32 %395 to i64
  %399 = call i8* @_Znwm(i64 %398) #11
  %400 = ptrtoint i8* %399 to i64
  %401 = sub i64 %398, %400
  %402 = getelementptr i8, i8* %399, i64 %401
  %403 = ptrtoint i8* %402 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %399, i8 0, i64 %403, i1 false) #10
  %404 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 65
  %405 = load void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** %404, align 8
  %406 = load i32, i32* %52, align 8
  call void %405(i32 %406, i32 %395, i32* null, i8* nonnull %399) #10
  %407 = bitcast %"class.dawn::LogMessage"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %407) #10
  call void @_ZN4dawn8ErrorLogEv(%"class.dawn::LogMessage"* nonnull sret %44) #10
  %408 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %44, i64 0, i32 1
  %409 = bitcast %"class.std::__1::basic_ostringstream"* %408 to %"class.std::__1::basic_ostream"*
  %410 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %409, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 21) #10
  %411 = call i64 @strlen(i8* nonnull %399) #10
  %412 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %409, i8* nonnull %399, i64 %411) #10
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %407) #10
  call void @_ZdlPv(i8* nonnull %399) #11
  br label %413

413:                                              ; preds = %397, %391
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %392) #10
  br label %414

414:                                              ; preds = %413, %381
  %415 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 130
  %416 = load void (i32)*, void (i32)** %415, align 8
  %417 = load i32, i32* %52, align 8
  call void %416(i32 %417) #10
  %418 = call dereferenceable(96) %"class.ityp::array.109"* @_ZNK11dawn_native6opengl14PipelineLayout19GetBindingIndexInfoEv(%"class.dawn_native::opengl::PipelineLayout"* %2) #10
  %419 = bitcast %"class.std::__1::set"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #10
  %420 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %45, i64 0, i32 0, i32 0
  %421 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %45, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %422 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %45, i64 0, i32 0, i32 1, i32 0, i32 0
  %423 = bitcast %"class.std::__1::__tree_node_base"** %421 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %423, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %422, %"class.std::__1::__tree_end_node"** %420, align 8
  %424 = bitcast %class.BitSetIterator* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #10
  call void @_ZN11dawn_native13IterateStagesEN4wgpu11ShaderStageE(%class.BitSetIterator* nonnull sret %46, i32 %115) #10
  %425 = bitcast %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %425) #10
  %426 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %47, i64 0, i32 0, i32 0, i32 0
  %427 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %47, i64 0, i32 1
  %428 = getelementptr inbounds %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator", %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %47, i64 0, i32 2
  %429 = getelementptr inbounds %class.BitSetIterator, %class.BitSetIterator* %46, i64 0, i32 0, i32 0, i32 0
  %430 = load i64, i64* %429, align 8, !noalias !24
  store i64 %430, i64* %426, align 8, !alias.scope !24
  %431 = bitcast i64* %427 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %431, i8 0, i64 16, i1 false) #10, !alias.scope !24
  %432 = and i64 %430, 7
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %467, label %434

434:                                              ; preds = %414
  %435 = ptrtoint %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %47 to i64
  %436 = bitcast %"class.std::__1::__bit_iterator"* %12 to i8*
  %437 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %438 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %439 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %440 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %441 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %442 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %443 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  %444 = bitcast %"class.std::__1::__bit_iterator"* %11 to i64*
  %445 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %11, i64 0, i32 1
  br label %446

446:                                              ; preds = %458, %434
  %447 = phi i64 [ %430, %434 ], [ %460, %458 ]
  %448 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %449 = and i64 %448, %447
  %450 = and i64 %449, 4294967295
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %458, label %452

452:                                              ; preds = %446
  %453 = trunc i64 %449 to i32
  %454 = call i32 @_Z11ScanForwardj(i32 %453) #10
  %455 = zext i32 %454 to i64
  %456 = load i64, i64* %428, align 8, !alias.scope !24
  %457 = add i64 %456, %455
  br label %464

458:                                              ; preds = %446
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %436) #10, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %437) #10, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %438) #10, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %439) #10, !noalias !24
  store i64 %435, i64* %440, align 8, !noalias !27
  store i32 3, i32* %441, align 8, !noalias !27
  store i64 %435, i64* %442, align 8, !noalias !27
  store i32 3, i32* %443, align 8, !noalias !27
  store i64 %435, i64* %444, align 8, !noalias !27
  store i32 0, i32* %445, align 8, !noalias !27
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %12, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10, %"class.std::__1::__bit_iterator"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %437) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %438) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %439) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %436) #10, !noalias !24
  %459 = load i64, i64* %426, align 8, !alias.scope !24
  %460 = and i64 %459, -8
  store i64 %460, i64* %426, align 8, !alias.scope !24
  %461 = load i64, i64* %428, align 8, !alias.scope !24
  %462 = add i64 %461, 32
  store i64 %462, i64* %428, align 8, !alias.scope !24
  %463 = icmp ult i64 %462, 3
  br i1 %463, label %446, label %464

464:                                              ; preds = %458, %452
  %465 = phi i64 [ %456, %452 ], [ %462, %458 ]
  %466 = phi i64 [ %457, %452 ], [ 0, %458 ]
  store i64 %466, i64* %427, align 8, !alias.scope !24
  br label %469

467:                                              ; preds = %414
  store i64 32, i64* %428, align 8, !alias.scope !24
  %468 = ptrtoint %"class.BitSetIterator<3, dawn_native::SingleShaderStage>::Iterator"* %47 to i64
  br label %469

469:                                              ; preds = %464, %467
  %470 = phi i64 [ %435, %464 ], [ %468, %467 ]
  %471 = phi i64 [ %466, %464 ], [ 0, %467 ]
  %472 = phi i64 [ %465, %464 ], [ 32, %467 ]
  %473 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %45, i64 0, i32 0
  %474 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %475 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %476 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %477 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %478 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %479 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  %480 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %481 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  %482 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  %483 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  br label %484

484:                                              ; preds = %621, %469
  %485 = phi i64 [ %622, %621 ], [ %472, %469 ]
  %486 = phi i64 [ %623, %621 ], [ %471, %469 ]
  %487 = icmp eq i64 %485, 32
  br i1 %487, label %488, label %581

488:                                              ; preds = %484
  %489 = load i64, i64* %426, align 8
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %492, label %581

492:                                              ; preds = %488
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %425) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #10
  %493 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 1
  %494 = call i64 @_ZNK11dawn_native6opengl14PipelineLayout14GetNumSamplersEv(%"class.dawn_native::opengl::PipelineLayout"* %2) #10
  %495 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 1, i32 0, i32 1
  %496 = bitcast %"class.std::__1::vector.0"** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.std::__1::vector"* %493 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = sub i64 %497, %499
  %501 = sdiv exact i64 %500, 24
  %502 = icmp ugt i64 %494, %501
  %503 = inttoptr i64 %499 to %"class.std::__1::vector.0"*
  %504 = inttoptr i64 %497 to %"class.std::__1::vector.0"*
  br i1 %502, label %505, label %507

505:                                              ; preds = %492
  %506 = sub i64 %494, %501
  call void @_ZNSt3__16vectorINS0_IN11dawn_native6opengl10PipelineGL11SamplerUnitENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEm(%"class.std::__1::vector"* %493, i64 %506) #10
  br label %526

507:                                              ; preds = %492
  %508 = icmp ult i64 %494, %501
  br i1 %508, label %509, label %526

509:                                              ; preds = %507
  %510 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %503, i64 %494
  %511 = icmp eq %"class.std::__1::vector.0"* %510, %504
  br i1 %511, label %525, label %512

512:                                              ; preds = %509, %523
  %513 = phi %"class.std::__1::vector.0"* [ %514, %523 ], [ %504, %509 ]
  %514 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %513, i64 -1
  %515 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %514, i64 0, i32 0, i32 0
  %516 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %515, align 8
  %517 = icmp eq %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %516, null
  br i1 %517, label %523, label %518

518:                                              ; preds = %512
  %519 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %516 to i64
  %520 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %513, i64 -1, i32 0, i32 1
  %521 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %520 to i64*
  store i64 %519, i64* %521, align 8
  %522 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %516 to i8*
  call void @_ZdlPv(i8* %522) #11
  br label %523

523:                                              ; preds = %518, %512
  %524 = icmp eq %"class.std::__1::vector.0"* %514, %510
  br i1 %524, label %525, label %512

525:                                              ; preds = %523, %509
  store %"class.std::__1::vector.0"* %510, %"class.std::__1::vector.0"** %495, align 8
  br label %526

526:                                              ; preds = %505, %507, %525
  %527 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 2
  %528 = call i64 @_ZNK11dawn_native6opengl14PipelineLayout21GetNumSampledTexturesEv(%"class.dawn_native::opengl::PipelineLayout"* %2) #10
  %529 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 2, i32 0, i32 1
  %530 = bitcast %"class.std::__1::vector.10"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.std::__1::vector.8"* %527 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = sub i64 %531, %533
  %535 = sdiv exact i64 %534, 24
  %536 = icmp ugt i64 %528, %535
  %537 = inttoptr i64 %533 to %"class.std::__1::vector.10"*
  %538 = inttoptr i64 %531 to %"class.std::__1::vector.10"*
  br i1 %536, label %539, label %541

539:                                              ; preds = %526
  %540 = sub i64 %528, %535
  call void @_ZNSt3__16vectorINS0_IjNS_9allocatorIjEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %527, i64 %540) #10
  br label %560

541:                                              ; preds = %526
  %542 = icmp ult i64 %528, %535
  br i1 %542, label %543, label %560

543:                                              ; preds = %541
  %544 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %537, i64 %528
  %545 = icmp eq %"class.std::__1::vector.10"* %544, %538
  br i1 %545, label %559, label %546

546:                                              ; preds = %543, %557
  %547 = phi %"class.std::__1::vector.10"* [ %548, %557 ], [ %538, %543 ]
  %548 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %547, i64 -1
  %549 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %548, i64 0, i32 0, i32 0
  %550 = load i32*, i32** %549, align 8
  %551 = icmp eq i32* %550, null
  br i1 %551, label %557, label %552

552:                                              ; preds = %546
  %553 = ptrtoint i32* %550 to i64
  %554 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %547, i64 -1, i32 0, i32 1
  %555 = bitcast i32** %554 to i64*
  store i64 %553, i64* %555, align 8
  %556 = bitcast i32* %550 to i8*
  call void @_ZdlPv(i8* %556) #11
  br label %557

557:                                              ; preds = %552, %546
  %558 = icmp eq %"class.std::__1::vector.10"* %548, %544
  br i1 %558, label %559, label %546

559:                                              ; preds = %557, %543
  store %"class.std::__1::vector.10"* %544, %"class.std::__1::vector.10"** %529, align 8
  br label %560

560:                                              ; preds = %539, %541, %559
  %561 = call i32 @_ZNK11dawn_native6opengl14PipelineLayout19GetTextureUnitsUsedEv(%"class.dawn_native::opengl::PipelineLayout"* %2) #10
  %562 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %420, align 8
  %563 = icmp eq %"class.std::__1::__tree_end_node"* %562, %422
  br i1 %563, label %629, label %564

564:                                              ; preds = %560
  %565 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %566 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 76
  %567 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %568 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %567, i64 0, i32 1, i32 0
  %569 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %570 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 113
  %571 = getelementptr inbounds %"class.dawn_native::opengl::PipelineLayout", %"class.dawn_native::opengl::PipelineLayout"* %2, i64 0, i32 0
  %572 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %527, i64 0, i32 0, i32 0
  %573 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3
  %574 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3, i32 0, i32 1
  %575 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %576 = bitcast i32** %574 to i64*
  %577 = bitcast %"class.std::__1::vector.10"* %573 to i64*
  %578 = bitcast i32** %575 to i64*
  %579 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %573, i64 0, i32 0, i32 0
  %580 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %493, i64 0, i32 0, i32 0
  br label %659

581:                                              ; preds = %488, %484
  %582 = and i64 %486, 4294967295
  %583 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 %582, i32 0, i32 0
  %584 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %583, align 8
  %585 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 %582, i32 0, i32 1
  %586 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %585, align 8
  %587 = icmp eq %"struct.dawn_native::opengl::CombinedSampler"* %584, %586
  br i1 %587, label %591, label %624

588:                                              ; preds = %624
  %589 = load i64, i64* %427, align 8
  %590 = load i64, i64* %428, align 8
  br label %591

591:                                              ; preds = %588, %581
  %592 = phi i64 [ %590, %588 ], [ %485, %581 ]
  %593 = phi i64 [ %589, %588 ], [ %486, %581 ]
  %594 = sub i64 %593, %592
  %595 = icmp ugt i64 %594, 2
  br i1 %595, label %596, label %597

596:                                              ; preds = %591
  call void @abort() #12
  unreachable

597:                                              ; preds = %591
  %598 = shl i64 1, %594
  %599 = xor i64 %598, -1
  %600 = load i64, i64* %426, align 8
  %601 = and i64 %600, %599
  store i64 %601, i64* %426, align 8
  %602 = icmp ult i64 %592, 3
  br i1 %602, label %603, label %621

603:                                              ; preds = %597, %615
  %604 = phi i64 [ %617, %615 ], [ %601, %597 ]
  %605 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %606 = and i64 %605, %604
  %607 = and i64 %606, 4294967295
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %615, label %609

609:                                              ; preds = %603
  %610 = trunc i64 %606 to i32
  %611 = call i32 @_Z11ScanForwardj(i32 %610) #10
  %612 = zext i32 %611 to i64
  %613 = load i64, i64* %428, align 8
  %614 = add i64 %613, %612
  br label %621

615:                                              ; preds = %603
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %474) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %475) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %476) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %477) #10
  store i64 %470, i64* %478, align 8, !noalias !30
  store i32 3, i32* %479, align 8, !noalias !30
  store i64 %470, i64* %480, align 8, !noalias !30
  store i32 3, i32* %481, align 8, !noalias !30
  store i64 %470, i64* %482, align 8, !noalias !30
  store i32 0, i32* %483, align 8, !noalias !30
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %8, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6, %"class.std::__1::__bit_iterator"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %475) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %476) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %477) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %474) #10
  %616 = load i64, i64* %426, align 8
  %617 = and i64 %616, -8
  store i64 %617, i64* %426, align 8
  %618 = load i64, i64* %428, align 8
  %619 = add i64 %618, 32
  store i64 %619, i64* %428, align 8
  %620 = icmp ult i64 %619, 3
  br i1 %620, label %603, label %621

621:                                              ; preds = %615, %597, %609
  %622 = phi i64 [ %613, %609 ], [ %592, %597 ], [ %619, %615 ]
  %623 = phi i64 [ %614, %609 ], [ 0, %597 ], [ 0, %615 ]
  store i64 %623, i64* %427, align 8
  br label %484

624:                                              ; preds = %581, %624
  %625 = phi %"struct.dawn_native::opengl::CombinedSampler"* [ %627, %624 ], [ %584, %581 ]
  %626 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.207"* nonnull %473, %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20) %625, %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20) %625) #10
  %627 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %625, i64 1
  %628 = icmp eq %"struct.dawn_native::opengl::CombinedSampler"* %627, %586
  br i1 %628, label %588, label %624

629:                                              ; preds = %960, %560
  %630 = bitcast %"class.std::__1::__tree_end_node"* %422 to %"class.std::__1::__tree_node"**
  %631 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %630, align 8
  call void @_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.207"* nonnull %473, %"class.std::__1::__tree_node"* %631) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #10
  %632 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 2, i32 0, i32 0
  %633 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %632, align 8
  %634 = icmp eq %"struct.dawn_native::opengl::CombinedSampler"* %633, null
  br i1 %634, label %640, label %635

635:                                              ; preds = %629
  %636 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %633 to i64
  %637 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 2, i32 0, i32 1
  %638 = bitcast %"struct.dawn_native::opengl::CombinedSampler"** %637 to i64*
  store i64 %636, i64* %638, align 8
  %639 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %633 to i8*
  call void @_ZdlPv(i8* %639) #11
  br label %640

640:                                              ; preds = %635, %629
  %641 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0
  %642 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %641, align 8
  %643 = icmp eq %"struct.dawn_native::opengl::CombinedSampler"* %642, null
  br i1 %643, label %649, label %644

644:                                              ; preds = %640
  %645 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %642 to i64
  %646 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 1, i32 0, i32 1
  %647 = bitcast %"struct.dawn_native::opengl::CombinedSampler"** %646 to i64*
  store i64 %645, i64* %647, align 8
  %648 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %642 to i8*
  call void @_ZdlPv(i8* %648) #11
  br label %649

649:                                              ; preds = %644, %640
  %650 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %651 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %650, align 8
  %652 = icmp eq %"struct.dawn_native::opengl::CombinedSampler"* %651, null
  br i1 %652, label %658, label %653

653:                                              ; preds = %649
  %654 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %651 to i64
  %655 = getelementptr inbounds %"class.dawn_native::PerStage.192", %"class.dawn_native::PerStage.192"* %35, i64 0, i32 0, i32 0, i64 0, i32 0, i32 1
  %656 = bitcast %"struct.dawn_native::opengl::CombinedSampler"** %655 to i64*
  store i64 %654, i64* %656, align 8
  %657 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %651 to i8*
  call void @_ZdlPv(i8* %657) #11
  br label %658

658:                                              ; preds = %649, %653
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %122) #10
  ret void

659:                                              ; preds = %564, %960
  %660 = phi %"class.std::__1::__tree_end_node"* [ %562, %564 ], [ %961, %960 ]
  %661 = phi i32 [ %561, %564 ], [ %932, %960 ]
  %662 = bitcast %"class.std::__1::__tree_end_node"* %660 to %"class.std::__1::__tree_node"*
  %663 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %662, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %565) #10
  call void @_ZNK11dawn_native6opengl15CombinedSampler7GetNameEv(%"class.std::__1::basic_string"* nonnull sret %48, %"struct.dawn_native::opengl::CombinedSampler"* %663) #10
  %664 = load i32 (i32, i8*)*, i32 (i32, i8*)** %566, align 8
  %665 = load i32, i32* %52, align 8
  %666 = load i8, i8* %568, align 1
  %667 = icmp slt i8 %666, 0
  %668 = load i8*, i8** %569, align 8
  %669 = select i1 %667, i8* %668, i8* %565
  %670 = call i32 %664(i32 %665, i8* %669) #10
  %671 = icmp eq i32 %670, -1
  br i1 %671, label %926, label %672

672:                                              ; preds = %659
  %673 = load void (i32, i32)*, void (i32, i32)** %570, align 8
  call void %673(i32 %670, i32 %661) #10
  %674 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %662, i64 0, i32 1, i32 1, i32 0
  %675 = load i32, i32* %674, align 4
  %676 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZNK11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"* %571, i32 %675) #10
  %677 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %660, i64 5
  %678 = bitcast %"class.std::__1::__tree_end_node"* %677 to i32*
  %679 = load i32, i32* %678, align 4
  %680 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingIndexEj(%"class.dawn_native::BindGroupLayoutBase"* %676, i32 %679) #10
  %681 = load i32, i32* %674, align 4
  %682 = zext i32 %681 to i64
  %683 = zext i32 %680 to i64
  %684 = getelementptr inbounds %"class.ityp::array.109", %"class.ityp::array.109"* %418, i64 0, i32 0, i32 0, i64 %682, i32 0, i32 0, i32 0
  %685 = load i32*, i32** %684, align 8
  %686 = getelementptr inbounds i32, i32* %685, i64 %683
  %687 = load i32, i32* %686, align 4
  %688 = zext i32 %687 to i64
  %689 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %572, align 8
  %690 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %689, i64 %688
  %691 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %689, i64 %688, i32 0, i32 1
  %692 = load i32*, i32** %691, align 8
  %693 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %689, i64 %688, i32 0, i32 2, i32 0, i32 0
  %694 = load i32*, i32** %693, align 8
  %695 = icmp eq i32* %692, %694
  %696 = ptrtoint i32* %694 to i64
  br i1 %695, label %701, label %697

697:                                              ; preds = %672
  store i32 %661, i32* %692, align 4
  %698 = getelementptr inbounds i32, i32* %692, i64 1
  %699 = ptrtoint i32* %698 to i64
  %700 = bitcast i32** %691 to i64*
  store i64 %699, i64* %700, align 8
  br label %757

701:                                              ; preds = %672
  %702 = ptrtoint i32* %692 to i64
  %703 = bitcast i32** %691 to i64*
  %704 = bitcast %"class.std::__1::vector.10"* %690 to i64*
  %705 = load i64, i64* %704, align 8
  %706 = sub i64 %702, %705
  %707 = ashr exact i64 %706, 2
  %708 = add nsw i64 %707, 1
  %709 = icmp ugt i64 %708, 4611686018427387903
  br i1 %709, label %710, label %712

710:                                              ; preds = %701
  %711 = bitcast %"class.std::__1::vector.10"* %690 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %711) #12
  unreachable

712:                                              ; preds = %701
  %713 = bitcast i32** %693 to i64*
  %714 = sub i64 %696, %705
  %715 = ashr exact i64 %714, 2
  %716 = icmp ult i64 %715, 2305843009213693951
  br i1 %716, label %717, label %725

717:                                              ; preds = %712
  %718 = ashr exact i64 %714, 1
  %719 = icmp ult i64 %718, %708
  %720 = select i1 %719, i64 %708, i64 %718
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %730, label %722

722:                                              ; preds = %717
  %723 = icmp ugt i64 %720, 4611686018427387903
  br i1 %723, label %724, label %725

724:                                              ; preds = %722
  call void @abort() #12
  unreachable

725:                                              ; preds = %722, %712
  %726 = phi i64 [ %720, %722 ], [ 4611686018427387903, %712 ]
  %727 = shl i64 %726, 2
  %728 = call i8* @_Znwm(i64 %727) #11
  %729 = bitcast i8* %728 to i32*
  br label %730

730:                                              ; preds = %725, %717
  %731 = phi i64 [ %726, %725 ], [ 0, %717 ]
  %732 = phi i32* [ %729, %725 ], [ null, %717 ]
  %733 = getelementptr inbounds i32, i32* %732, i64 %707
  %734 = getelementptr inbounds i32, i32* %732, i64 %731
  %735 = ptrtoint i32* %734 to i64
  store i32 %661, i32* %733, align 4
  %736 = getelementptr inbounds i32, i32* %733, i64 1
  %737 = ptrtoint i32* %736 to i64
  %738 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %690, i64 0, i32 0, i32 0
  %739 = load i32*, i32** %738, align 8
  %740 = load i64, i64* %703, align 8
  %741 = ptrtoint i32* %739 to i64
  %742 = sub i64 %740, %741
  %743 = ashr exact i64 %742, 2
  %744 = sub nsw i64 0, %743
  %745 = getelementptr inbounds i32, i32* %733, i64 %744
  %746 = ptrtoint i32* %745 to i64
  %747 = icmp sgt i64 %742, 0
  br i1 %747, label %748, label %752

748:                                              ; preds = %730
  %749 = bitcast i32* %745 to i8*
  %750 = bitcast i32* %739 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %749, i8* align 4 %750, i64 %742, i1 false) #10
  %751 = load i32*, i32** %738, align 8
  br label %752

752:                                              ; preds = %748, %730
  %753 = phi i32* [ %739, %730 ], [ %751, %748 ]
  store i64 %746, i64* %704, align 8
  store i64 %737, i64* %703, align 8
  store i64 %735, i64* %713, align 8
  %754 = icmp eq i32* %753, null
  br i1 %754, label %757, label %755

755:                                              ; preds = %752
  %756 = bitcast i32* %753 to i8*
  call void @_ZdlPv(i8* %756) #11
  br label %757

757:                                              ; preds = %697, %752, %755
  %758 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %662, i64 0, i32 1, i32 2
  %759 = load i8, i8* %758, align 4, !range !17
  %760 = icmp eq i8 %759, 0
  br i1 %760, label %821, label %761

761:                                              ; preds = %757
  %762 = load i32*, i32** %574, align 8
  %763 = load i32*, i32** %575, align 8
  %764 = icmp eq i32* %762, %763
  %765 = ptrtoint i32* %763 to i64
  br i1 %764, label %769, label %766

766:                                              ; preds = %761
  store i32 %661, i32* %762, align 4
  %767 = getelementptr inbounds i32, i32* %762, i64 1
  %768 = ptrtoint i32* %767 to i64
  store i64 %768, i64* %576, align 8
  br label %920

769:                                              ; preds = %761
  %770 = ptrtoint i32* %762 to i64
  %771 = load i64, i64* %577, align 8
  %772 = sub i64 %770, %771
  %773 = ashr exact i64 %772, 2
  %774 = add nsw i64 %773, 1
  %775 = icmp ugt i64 %774, 4611686018427387903
  br i1 %775, label %776, label %778

776:                                              ; preds = %769
  %777 = bitcast %"class.std::__1::vector.10"* %573 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %777) #12
  unreachable

778:                                              ; preds = %769
  %779 = sub i64 %765, %771
  %780 = ashr exact i64 %779, 2
  %781 = icmp ult i64 %780, 2305843009213693951
  br i1 %781, label %782, label %790

782:                                              ; preds = %778
  %783 = ashr exact i64 %779, 1
  %784 = icmp ult i64 %783, %774
  %785 = select i1 %784, i64 %774, i64 %783
  %786 = icmp eq i64 %785, 0
  br i1 %786, label %795, label %787

787:                                              ; preds = %782
  %788 = icmp ugt i64 %785, 4611686018427387903
  br i1 %788, label %789, label %790

789:                                              ; preds = %787
  call void @abort() #12
  unreachable

790:                                              ; preds = %787, %778
  %791 = phi i64 [ %785, %787 ], [ 4611686018427387903, %778 ]
  %792 = shl i64 %791, 2
  %793 = call i8* @_Znwm(i64 %792) #11
  %794 = bitcast i8* %793 to i32*
  br label %795

795:                                              ; preds = %790, %782
  %796 = phi i64 [ %791, %790 ], [ 0, %782 ]
  %797 = phi i32* [ %794, %790 ], [ null, %782 ]
  %798 = getelementptr inbounds i32, i32* %797, i64 %773
  %799 = getelementptr inbounds i32, i32* %797, i64 %796
  %800 = ptrtoint i32* %799 to i64
  store i32 %661, i32* %798, align 4
  %801 = getelementptr inbounds i32, i32* %798, i64 1
  %802 = ptrtoint i32* %801 to i64
  %803 = load i32*, i32** %579, align 8
  %804 = load i64, i64* %576, align 8
  %805 = ptrtoint i32* %803 to i64
  %806 = sub i64 %804, %805
  %807 = ashr exact i64 %806, 2
  %808 = sub nsw i64 0, %807
  %809 = getelementptr inbounds i32, i32* %798, i64 %808
  %810 = ptrtoint i32* %809 to i64
  %811 = icmp sgt i64 %806, 0
  br i1 %811, label %812, label %816

812:                                              ; preds = %795
  %813 = bitcast i32* %809 to i8*
  %814 = bitcast i32* %803 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %813, i8* align 4 %814, i64 %806, i1 false) #10
  %815 = load i32*, i32** %579, align 8
  br label %816

816:                                              ; preds = %812, %795
  %817 = phi i32* [ %803, %795 ], [ %815, %812 ]
  store i64 %810, i64* %577, align 8
  store i64 %802, i64* %576, align 8
  store i64 %800, i64* %578, align 8
  %818 = icmp eq i32* %817, null
  br i1 %818, label %920, label %819

819:                                              ; preds = %816
  %820 = bitcast i32* %817 to i8*
  call void @_ZdlPv(i8* %820) #11
  br label %920

821:                                              ; preds = %757
  %822 = getelementptr inbounds %"class.dawn_native::BindGroupLayoutBase", %"class.dawn_native::BindGroupLayoutBase"* %676, i64 0, i32 2, i32 0, i32 0, i32 0
  %823 = load %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"** %822, align 8
  %824 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %823, i64 %683, i32 5, i32 1
  %825 = load i32, i32* %824, align 8
  %826 = icmp eq i32 %825, 1
  %827 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %663, i64 0, i32 0, i32 0
  %828 = load i32, i32* %827, align 4
  %829 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZNK11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"* %571, i32 %828) #10
  %830 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %660, i64 4
  %831 = bitcast %"class.std::__1::__tree_end_node"* %830 to i32*
  %832 = load i32, i32* %831, align 4
  %833 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingIndexEj(%"class.dawn_native::BindGroupLayoutBase"* %829, i32 %832) #10
  %834 = load i32, i32* %827, align 4
  %835 = zext i32 %834 to i64
  %836 = zext i32 %833 to i64
  %837 = getelementptr inbounds %"class.ityp::array.109", %"class.ityp::array.109"* %418, i64 0, i32 0, i32 0, i64 %835, i32 0, i32 0, i32 0
  %838 = load i32*, i32** %837, align 8
  %839 = getelementptr inbounds i32, i32* %838, i64 %836
  %840 = load i32, i32* %839, align 4
  %841 = zext i32 %840 to i64
  %842 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %580, align 8
  %843 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %842, i64 %841
  %844 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %842, i64 %841, i32 0, i32 1
  %845 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %844, align 8
  %846 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %842, i64 %841, i32 0, i32 2, i32 0, i32 0
  %847 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %846, align 8
  %848 = icmp ult %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %845, %847
  %849 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %847 to i64
  br i1 %848, label %850, label %859

850:                                              ; preds = %821
  %851 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %845 to i64*
  %852 = zext i1 %826 to i64
  %853 = shl nuw nsw i64 %852, 32
  %854 = zext i32 %661 to i64
  %855 = or i64 %853, %854
  store i64 %855, i64* %851, align 4
  %856 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %845, i64 1
  %857 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %856 to i64
  %858 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %844 to i64*
  store i64 %857, i64* %858, align 8
  br label %920

859:                                              ; preds = %821
  %860 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %845 to i64
  %861 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %844 to i64*
  %862 = bitcast %"class.std::__1::vector.0"* %843 to i64*
  %863 = load i64, i64* %862, align 8
  %864 = sub i64 %860, %863
  %865 = ashr exact i64 %864, 3
  %866 = add nsw i64 %865, 1
  %867 = icmp ugt i64 %866, 2305843009213693951
  br i1 %867, label %868, label %870

868:                                              ; preds = %859
  %869 = bitcast %"class.std::__1::vector.0"* %843 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %869) #12
  unreachable

870:                                              ; preds = %859
  %871 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %846 to i64*
  %872 = sub i64 %849, %863
  %873 = ashr exact i64 %872, 3
  %874 = icmp ult i64 %873, 1152921504606846975
  br i1 %874, label %875, label %883

875:                                              ; preds = %870
  %876 = ashr exact i64 %872, 2
  %877 = icmp ult i64 %876, %866
  %878 = select i1 %877, i64 %866, i64 %876
  %879 = icmp eq i64 %878, 0
  br i1 %879, label %888, label %880

880:                                              ; preds = %875
  %881 = icmp ugt i64 %878, 2305843009213693951
  br i1 %881, label %882, label %883

882:                                              ; preds = %880
  call void @abort() #12
  unreachable

883:                                              ; preds = %880, %870
  %884 = phi i64 [ %878, %880 ], [ 2305843009213693951, %870 ]
  %885 = shl i64 %884, 3
  %886 = call i8* @_Znwm(i64 %885) #11
  %887 = bitcast i8* %886 to %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*
  br label %888

888:                                              ; preds = %883, %875
  %889 = phi i64 [ %884, %883 ], [ 0, %875 ]
  %890 = phi %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* [ %887, %883 ], [ null, %875 ]
  %891 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %890, i64 %865
  %892 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %890, i64 %889
  %893 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %892 to i64
  %894 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %891 to i64*
  %895 = zext i1 %826 to i64
  %896 = shl nuw nsw i64 %895, 32
  %897 = zext i32 %661 to i64
  %898 = or i64 %896, %897
  store i64 %898, i64* %894, align 4
  %899 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %891, i64 1
  %900 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %899 to i64
  %901 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %843, i64 0, i32 0, i32 0
  %902 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %901, align 8
  %903 = load i64, i64* %861, align 8
  %904 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %902 to i64
  %905 = sub i64 %903, %904
  %906 = ashr exact i64 %905, 3
  %907 = sub nsw i64 0, %906
  %908 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %891, i64 %907
  %909 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %908 to i64
  %910 = icmp sgt i64 %905, 0
  br i1 %910, label %911, label %915

911:                                              ; preds = %888
  %912 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %908 to i8*
  %913 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %902 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %912, i8* align 4 %913, i64 %905, i1 false) #10
  %914 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %901, align 8
  br label %915

915:                                              ; preds = %911, %888
  %916 = phi %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* [ %902, %888 ], [ %914, %911 ]
  store i64 %909, i64* %862, align 8
  store i64 %900, i64* %861, align 8
  store i64 %893, i64* %871, align 8
  %917 = icmp eq %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %916, null
  br i1 %917, label %920, label %918

918:                                              ; preds = %915
  %919 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %916 to i8*
  call void @_ZdlPv(i8* %919) #11
  br label %920

920:                                              ; preds = %918, %915, %850, %819, %816, %766
  %921 = add i32 %661, 1
  %922 = load i8, i8* %568, align 1
  %923 = icmp slt i8 %922, 0
  br i1 %923, label %924, label %931

924:                                              ; preds = %920
  %925 = load i8*, i8** %569, align 8
  call void @_ZdlPv(i8* %925) #11
  br label %931

926:                                              ; preds = %659
  %927 = load i8, i8* %568, align 1
  %928 = icmp slt i8 %927, 0
  br i1 %928, label %929, label %931

929:                                              ; preds = %926
  %930 = load i8*, i8** %569, align 8
  call void @_ZdlPv(i8* %930) #11
  br label %931

931:                                              ; preds = %929, %926, %924, %920
  %932 = phi i32 [ %921, %920 ], [ %921, %924 ], [ %661, %926 ], [ %661, %929 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %565) #10
  %933 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %660, i64 1, i32 0
  %934 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %933, align 8
  %935 = icmp eq %"class.std::__1::__tree_node_base"* %934, null
  br i1 %935, label %936, label %944

936:                                              ; preds = %931
  %937 = bitcast %"class.std::__1::__tree_end_node"* %660 to %"class.std::__1::__tree_node_base"*
  %938 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %660, i64 2
  %939 = bitcast %"class.std::__1::__tree_end_node"* %938 to %"class.std::__1::__tree_end_node"**
  %940 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %939, align 8
  %941 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %940, i64 0, i32 0
  %942 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %941, align 8
  %943 = icmp eq %"class.std::__1::__tree_node_base"* %942, %937
  br i1 %943, label %960, label %951

944:                                              ; preds = %931, %944
  %945 = phi %"class.std::__1::__tree_node_base"* [ %947, %944 ], [ %934, %931 ]
  %946 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %945, i64 0, i32 0, i32 0
  %947 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %946, align 8
  %948 = icmp eq %"class.std::__1::__tree_node_base"* %947, null
  br i1 %948, label %949, label %944

949:                                              ; preds = %944
  %950 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %945, i64 0, i32 0
  br label %960

951:                                              ; preds = %936, %951
  %952 = phi %"class.std::__1::__tree_end_node"** [ %955, %951 ], [ %939, %936 ]
  %953 = bitcast %"class.std::__1::__tree_end_node"** %952 to %"class.std::__1::__tree_node_base"**
  %954 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %953, align 8
  %955 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %954, i64 0, i32 2
  %956 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %955, align 8
  %957 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %956, i64 0, i32 0
  %958 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %957, align 8
  %959 = icmp eq %"class.std::__1::__tree_node_base"* %958, %954
  br i1 %959, label %960, label %951

960:                                              ; preds = %951, %936, %949
  %961 = phi %"class.std::__1::__tree_end_node"* [ %950, %949 ], [ %940, %936 ], [ %956, %951 ]
  %962 = icmp eq %"class.std::__1::__tree_end_node"* %961, %422
  br i1 %962, label %629, label %659
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN11dawn_native13IterateStagesEN4wgpu11ShaderStageE(%class.BitSetIterator* sret, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN11dawn_native8StageBitENS_17SingleShaderStageE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK11dawn_native6opengl12ShaderModule15TranslateToGLSLEPKcNS_17SingleShaderStageEPNSt3__16vectorINS0_15CombinedSamplerENS5_9allocatorIS7_EEEEPKNS0_14PipelineLayoutEPb(%"class.std::__1::basic_string"* sret, %"class.dawn_native::opengl::ShaderModule"*, i8*, i32, %"class.std::__1::vector.194"*, %"class.dawn_native::opengl::PipelineLayout"*, i8*) local_unnamed_addr #2

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #2

declare void @_ZN11dawn_native10DeviceBase18GetOrCreateSamplerEPKNS_17SamplerDescriptorE(%class.Result* sret, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::SamplerDescriptor"*) local_unnamed_addr #2

declare void @_ZN4dawn8ErrorLogEv(%"class.dawn::LogMessage"* sret) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"*) unnamed_addr #3

declare dereferenceable(96) %"class.ityp::array.109"* @_ZNK11dawn_native6opengl14PipelineLayout19GetBindingIndexInfoEv(%"class.dawn_native::opengl::PipelineLayout"*) local_unnamed_addr #2

declare i64 @_ZNK11dawn_native6opengl14PipelineLayout14GetNumSamplersEv(%"class.dawn_native::opengl::PipelineLayout"*) local_unnamed_addr #2

declare i64 @_ZNK11dawn_native6opengl14PipelineLayout21GetNumSampledTexturesEv(%"class.dawn_native::opengl::PipelineLayout"*) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native6opengl14PipelineLayout19GetTextureUnitsUsedEv(%"class.dawn_native::opengl::PipelineLayout"*) local_unnamed_addr #2

declare void @_ZNK11dawn_native6opengl15CombinedSampler7GetNameEv(%"class.std::__1::basic_string"* sret, %"struct.dawn_native::opengl::CombinedSampler"*) local_unnamed_addr #2

declare %"class.dawn_native::BindGroupLayoutBase"* @_ZNK11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"*, i32) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingIndexEj(%"class.dawn_native::BindGroupLayoutBase"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.0"* @_ZNK11dawn_native6opengl10PipelineGL25GetTextureUnitsForSamplerEj(%"class.dawn_native::opengl::PipelineGL"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %5, i64 %3
  ret %"class.std::__1::vector.0"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.10"* @_ZNK11dawn_native6opengl10PipelineGL29GetTextureUnitsForTextureViewEj(%"class.dawn_native::opengl::PipelineGL"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %5, i64 %3
  ret %"class.std::__1::vector.10"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native6opengl10PipelineGL16GetProgramHandleEv(%"class.dawn_native::opengl::PipelineGL"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl10PipelineGL8ApplyNowERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::PipelineGL"* nocapture readonly, %"struct.dawn_native::opengl::OpenGLFunctions"* nocapture readonly dereferenceable(5664)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 130
  %4 = load void (i32)*, void (i32)** %3, align 8
  %5 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void %4(i32 %6) #10
  %7 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %8, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 224
  %14 = getelementptr inbounds %"class.dawn_native::opengl::PipelineGL", %"class.dawn_native::opengl::PipelineGL"* %0, i64 0, i32 4, i32 0, i32 0
  br label %16

15:                                               ; preds = %16, %2
  ret void

16:                                               ; preds = %12, %16
  %17 = phi i32* [ %8, %12 ], [ %22, %16 ]
  %18 = load i32, i32* %17, align 4
  %19 = load void (i32, i32)*, void (i32, i32)** %13, align 8
  %20 = load %"class.dawn_native::opengl::Sampler"*, %"class.dawn_native::opengl::Sampler"** %14, align 8
  %21 = tail call i32 @_ZNK11dawn_native6opengl7Sampler21GetNonFilteringHandleEv(%"class.dawn_native::opengl::Sampler"* %20) #10
  tail call void %19(i32 %18, i32 %21) #10
  %22 = getelementptr inbounds i32, i32* %17, i64 1
  %23 = icmp eq i32* %22, %10
  br i1 %23, label %15, label %16
}

declare i32 @_ZNK11dawn_native6opengl7Sampler21GetNonFilteringHandleEv(%"class.dawn_native::opengl::Sampler"*) local_unnamed_addr #2

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !17
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN10RefCounted9ReferenceEv(%class.RefCounted*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.207"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.207"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.207"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.207"*, %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20), %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.207", %"class.std::__1::__tree.207"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.207", %"class.std::__1::__tree.207"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZN11dawn_native6openglltERKNS0_15CombinedSamplerES3_(%"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20) %1, %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20) %13) #10
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN11dawn_native6openglltERKNS0_15CombinedSamplerES3_(%"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20) %13, %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20) %1) #10
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 48) #11, !noalias !33
  %45 = getelementptr inbounds i8, i8* %44, i64 28
  %46 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 20, i1 false) #10, !noalias !33
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.207", %"class.std::__1::__tree.207"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.207"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.207", %"class.std::__1::__tree.207"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #10
  %65 = getelementptr inbounds %"class.std::__1::__tree.207", %"class.std::__1::__tree.207"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

declare zeroext i1 @_ZN11dawn_native6openglltERKNS0_15CombinedSamplerES3_(%"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20), %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !17
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !17
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !17
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IN11dawn_native6opengl10PipelineGL11SamplerUnitENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.0"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::vector.0"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint %"class.std::__1::vector.0"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %124

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #12
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to %"class.std::__1::vector.0"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::vector.0"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::vector.0"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::vector.0"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #10
  %64 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::vector.0"* %64 to i64
  %66 = icmp eq %"class.std::__1::vector.0"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::vector.0"* %58 to i64
  %69 = ptrtoint %"class.std::__1::vector.0"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %70, align 8
  %72 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %6, align 8
  %73 = icmp eq %"class.std::__1::vector.0"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::vector.0"* %71 to i64
  br label %101

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::vector.0"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::vector.0"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1
  %81 = bitcast %"class.std::__1::vector.0"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #10
  %82 = bitcast %"class.std::__1::vector.0"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.0"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1, i32 0, i32 1
  %86 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1, i32 0, i32 1
  %89 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %78, i64 -1, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %77, i64 -1, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector.0"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #10
  %96 = icmp eq %"class.std::__1::vector.0"* %80, %71
  br i1 %96, label %97, label %76

97:                                               ; preds = %76
  %98 = ptrtoint %"class.std::__1::vector.0"* %79 to i64
  %99 = load i64, i64* %31, align 8
  %100 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %6, align 8
  br label %101

101:                                              ; preds = %74, %97
  %102 = phi %"class.std::__1::vector.0"* [ %71, %74 ], [ %100, %97 ]
  %103 = phi i64 [ %57, %74 ], [ %98, %97 ]
  %104 = phi i64 [ %75, %74 ], [ %99, %97 ]
  store i64 %103, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %105 = inttoptr i64 %104 to %"class.std::__1::vector.0"*
  %106 = icmp eq %"class.std::__1::vector.0"* %102, %105
  br i1 %106, label %120, label %107

107:                                              ; preds = %101, %118
  %108 = phi %"class.std::__1::vector.0"* [ %109, %118 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 -1
  %110 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %109, i64 0, i32 0, i32 0
  %111 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %110, align 8
  %112 = icmp eq %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = ptrtoint %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %111 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %108, i64 -1, i32 0, i32 1
  %116 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %111 to i8*
  tail call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.std::__1::vector.0"* %109, %105
  br i1 %119, label %120, label %107

120:                                              ; preds = %118, %101
  %121 = icmp eq i64 %104, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %122, %120, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IjNS_9allocatorIjEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.10"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.10"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::vector.10"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint %"class.std::__1::vector.10"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %124

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #12
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to %"class.std::__1::vector.10"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::vector.10"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::vector.10"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::vector.10"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #10
  %64 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::vector.10"* %64 to i64
  %66 = icmp eq %"class.std::__1::vector.10"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::vector.10"* %58 to i64
  %69 = ptrtoint %"class.std::__1::vector.10"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %70, align 8
  %72 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %6, align 8
  %73 = icmp eq %"class.std::__1::vector.10"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::vector.10"* %71 to i64
  br label %101

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::vector.10"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::vector.10"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %78, i64 -1
  %81 = bitcast %"class.std::__1::vector.10"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #10
  %82 = bitcast %"class.std::__1::vector.10"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.10"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %78, i64 -1, i32 0, i32 1
  %86 = bitcast i32** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %77, i64 -1, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %78, i64 -1, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i32** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %77, i64 -1, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast i32** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector.10"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #10
  %96 = icmp eq %"class.std::__1::vector.10"* %80, %71
  br i1 %96, label %97, label %76

97:                                               ; preds = %76
  %98 = ptrtoint %"class.std::__1::vector.10"* %79 to i64
  %99 = load i64, i64* %31, align 8
  %100 = load %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"** %6, align 8
  br label %101

101:                                              ; preds = %74, %97
  %102 = phi %"class.std::__1::vector.10"* [ %71, %74 ], [ %100, %97 ]
  %103 = phi i64 [ %57, %74 ], [ %98, %97 ]
  %104 = phi i64 [ %75, %74 ], [ %99, %97 ]
  store i64 %103, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %105 = inttoptr i64 %104 to %"class.std::__1::vector.10"*
  %106 = icmp eq %"class.std::__1::vector.10"* %102, %105
  br i1 %106, label %120, label %107

107:                                              ; preds = %101, %118
  %108 = phi %"class.std::__1::vector.10"* [ %109, %118 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %108, i64 -1
  %110 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %109, i64 0, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = ptrtoint i32* %111 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %108, i64 -1, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast i32* %111 to i8*
  tail call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.std::__1::vector.10"* %109, %105
  br i1 %119, label %120, label %107

120:                                              ; preds = %118, %101
  %121 = icmp eq i64 %104, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %122, %120, %28
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE5beginEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE5beginEv"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!17 = !{i8 0, i8 2}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6ResultI3RefIN11dawn_native11SamplerBaseEENS1_9ErrorDataEE14AcquireSuccessEv: argument 0"}
!23 = distinct !{!23, !"_ZN6ResultI3RefIN11dawn_native11SamplerBaseEENS1_9ErrorDataEE14AcquireSuccessEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE5beginEv: argument 0"}
!26 = distinct !{!26, !"_ZNK14BitSetIteratorILm3EN11dawn_native17SingleShaderStageEE5beginEv"}
!27 = !{!28, !25}
!28 = distinct !{!28, !29, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__14copyINS_8__bitsetILm1ELm3EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeIN11dawn_native6opengl15CombinedSamplerENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
