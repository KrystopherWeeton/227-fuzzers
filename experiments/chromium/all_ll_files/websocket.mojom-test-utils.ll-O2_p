; ModuleID = 'gen/services/network/public/mojom/websocket.mojom-test-utils.cc'
source_filename = "gen/services/network/public/mojom/websocket.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter" = type { %"class.network::mojom::WebSocketAuthenticationHandler"* }
%"class.network::mojom::WebSocketAuthenticationHandler" = type { i32 (...)** }
%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter" = type { %"class.network::mojom::WebSocketHandshakeClient"* }
%"class.network::mojom::WebSocketHandshakeClient" = type { i32 (...)** }
%"class.network::mojom::WebSocketClientAsyncWaiter" = type { %"class.network::mojom::WebSocketClient"* }
%"class.network::mojom::WebSocketClient" = type { i32 (...)** }
%"class.network::mojom::WebSocketAsyncWaiter" = type { %"class.network::mojom::WebSocket"* }
%"class.network::mojom::WebSocket" = type { i32 (...)** }
%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting" = type { %"class.network::mojom::WebSocketAuthenticationHandler" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.3" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.net::AuthCredentials" }
%"class.net::AuthCredentials" = type { %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15" }
%"class.std::__1::basic_string.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.38, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.33" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.38 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.39" }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.41", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting" = type { %"class.network::mojom::WebSocketHandshakeClient" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.network::mojom::WebSocketHandshakeRequest"* }
%"class.network::mojom::WebSocketHandshakeRequest" = type { %class.GURL, %"class.std::__1::vector.53", %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.49" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GURL* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.55" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::HttpHeader", i32, [4 x i8] }>
%"class.network::mojom::HttpHeader" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.mojo::InlinedStructPtr"* }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.64", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.65, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.66", [4 x i8] }>
%"class.base::RefCountedThreadSafe.64" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.65 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"struct.std::__1::atomic.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl.69" }
%"struct.std::__1::__cxx_atomic_impl.69" = type { %"struct.std::__1::__cxx_atomic_base_impl.70" }
%"struct.std::__1::__cxx_atomic_base_impl.70" = type { i32 }
%"class.mojo::StructPtr.71" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.network::mojom::WebSocketHandshakeResponse"* }
%"class.network::mojom::WebSocketHandshakeResponse" = type { %class.GURL, %"class.net::HttpVersion", i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", %"class.std::__1::vector.53", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::ScopedHandleBase.78" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::ScopedHandleBase.79" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.network::mojom::WebSocketClientInterceptorForTesting" = type { %"class.network::mojom::WebSocketClient" }
%"class.network::mojom::WebSocketInterceptorForTesting" = type { %"class.network::mojom::WebSocket" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.19 }
%struct.anon.19 = type { %"struct.std::__1::__padding.20", i8 }
%"struct.std::__1::__padding.20" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN7network5mojom30WebSocketAuthenticationHandlerD2Ev = comdat any

$_ZN7network5mojom51WebSocketAuthenticationHandlerInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom24WebSocketHandshakeClientD2Ev = comdat any

$_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom15WebSocketClientD2Ev = comdat any

$_ZN7network5mojom36WebSocketClientInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom9WebSocketD2Ev = comdat any

$_ZN7network5mojom30WebSocketInterceptorForTestingD0Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN3net15AuthCredentialsC2ERKS0_ = comdat any

@.str = private unnamed_addr constant [15 x i8] c"OnAuthRequired\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"gen/services/network/public/mojom/websocket.mojom-test-utils.cc\00", align 1
@_ZTVN7network5mojom51WebSocketAuthenticationHandlerInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::WebSocketAuthenticationHandler"*)* @_ZN7network5mojom30WebSocketAuthenticationHandlerD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)* @_ZN7network5mojom51WebSocketAuthenticationHandlerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)* @_ZN7network5mojom51WebSocketAuthenticationHandlerInterceptorForTesting14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS2_19HttpResponseHeadersEERKNS2_10IPEndPointEN4base12OnceCallbackIFvRKN4absl8optionalINS2_15AuthCredentialsEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom45WebSocketHandshakeClientInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::WebSocketHandshakeClient"*)* @_ZN7network5mojom24WebSocketHandshakeClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)* @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTesting25OnOpeningHandshakeStartedEN4mojo9StructPtrINS0_25WebSocketHandshakeRequestEEE to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*, %"class.std::__1::basic_string"*, i32, i32)* @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTesting9OnFailureERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)* @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTesting23OnConnectionEstablishedEN4mojo13PendingRemoteINS0_9WebSocketEEENS2_15PendingReceiverINS0_15WebSocketClientEEENS2_9StructPtrINS0_26WebSocketHandshakeResponseEEENS2_16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEENSC_INS2_22DataPipeProducerHandleEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom36WebSocketClientInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::WebSocketClient"*)* @_ZN7network5mojom15WebSocketClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)* @_ZN7network5mojom36WebSocketClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketClientInterceptorForTesting"*, i1, i32, i64)* @_ZN7network5mojom36WebSocketClientInterceptorForTesting11OnDataFrameEbNS0_20WebSocketMessageTypeEm to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketClientInterceptorForTesting"*, i1, i16, %"class.std::__1::basic_string"*)* @_ZN7network5mojom36WebSocketClientInterceptorForTesting13OnDropChannelEbtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)* @_ZN7network5mojom36WebSocketClientInterceptorForTesting18OnClosingHandshakeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom30WebSocketInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::WebSocket"*)* @_ZN7network5mojom9WebSocketD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketInterceptorForTesting"*)* @_ZN7network5mojom30WebSocketInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketInterceptorForTesting"*, i32, i64)* @_ZN7network5mojom30WebSocketInterceptorForTesting11SendMessageENS0_20WebSocketMessageTypeEm to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketInterceptorForTesting"*)* @_ZN7network5mojom30WebSocketInterceptorForTesting14StartReceivingEv to i8*), i8* bitcast (void (%"class.network::mojom::WebSocketInterceptorForTesting"*, i16, %"class.std::__1::basic_string"*)* @_ZN7network5mojom30WebSocketInterceptorForTesting21StartClosingHandshakeEtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiterC1EPNS0_30WebSocketAuthenticationHandlerE = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"*, %"class.network::mojom::WebSocketAuthenticationHandler"*), void (%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"*, %"class.network::mojom::WebSocketAuthenticationHandler"*)* @_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiterC2EPNS0_30WebSocketAuthenticationHandlerE
@_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"*), void (%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"*)* @_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiterD2Ev
@_ZN7network5mojom35WebSocketHandshakeClientAsyncWaiterC1EPNS0_24WebSocketHandshakeClientE = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"*, %"class.network::mojom::WebSocketHandshakeClient"*), void (%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"*, %"class.network::mojom::WebSocketHandshakeClient"*)* @_ZN7network5mojom35WebSocketHandshakeClientAsyncWaiterC2EPNS0_24WebSocketHandshakeClientE
@_ZN7network5mojom35WebSocketHandshakeClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"*), void (%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"*)* @_ZN7network5mojom35WebSocketHandshakeClientAsyncWaiterD2Ev
@_ZN7network5mojom26WebSocketClientAsyncWaiterC1EPNS0_15WebSocketClientE = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketClientAsyncWaiter"*, %"class.network::mojom::WebSocketClient"*), void (%"class.network::mojom::WebSocketClientAsyncWaiter"*, %"class.network::mojom::WebSocketClient"*)* @_ZN7network5mojom26WebSocketClientAsyncWaiterC2EPNS0_15WebSocketClientE
@_ZN7network5mojom26WebSocketClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketClientAsyncWaiter"*), void (%"class.network::mojom::WebSocketClientAsyncWaiter"*)* @_ZN7network5mojom26WebSocketClientAsyncWaiterD2Ev
@_ZN7network5mojom20WebSocketAsyncWaiterC1EPNS0_9WebSocketE = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketAsyncWaiter"*, %"class.network::mojom::WebSocket"*), void (%"class.network::mojom::WebSocketAsyncWaiter"*, %"class.network::mojom::WebSocket"*)* @_ZN7network5mojom20WebSocketAsyncWaiterC2EPNS0_9WebSocketE
@_ZN7network5mojom20WebSocketAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::WebSocketAsyncWaiter"*), void (%"class.network::mojom::WebSocketAsyncWaiter"*)* @_ZN7network5mojom20WebSocketAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom51WebSocketAuthenticationHandlerInterceptorForTesting14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS2_19HttpResponseHeadersEERKNS2_10IPEndPointEN4base12OnceCallbackIFvRKN4absl8optionalINS2_15AuthCredentialsEEEEEE(%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*, %"class.net::AuthChallengeInfo"* dereferenceable(184), %class.scoped_refptr* dereferenceable(8), %"class.net::IPEndPoint"* dereferenceable(20), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)***
  %8 = load %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)**, %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)*, %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)** %8, i64 3
  %10 = load %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)*, %"class.network::mojom::WebSocketAuthenticationHandler"* (%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.network::mojom::WebSocketAuthenticationHandler"* %10(%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"* %0) #12
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = bitcast %"class.network::mojom::WebSocketAuthenticationHandler"* %11 to void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)***
  %17 = load void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %17, i64 2
  %19 = load void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %18, align 8
  call void %19(%"class.network::mojom::WebSocketAuthenticationHandler"* %11, %"class.net::AuthChallengeInfo"* dereferenceable(184) %1, %class.scoped_refptr* dereferenceable(8) %2, %"class.net::IPEndPoint"* dereferenceable(20) %3, %"class.base::OnceCallback"* nonnull %6) #12
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiterC2EPNS0_30WebSocketAuthenticationHandlerE(%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"* nocapture, %"class.network::mojom::WebSocketAuthenticationHandler"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter", %"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::WebSocketAuthenticationHandler"* %1, %"class.network::mojom::WebSocketAuthenticationHandler"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiterD2Ev(%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS2_19HttpResponseHeadersEERKNS2_10IPEndPointEPN4absl8optionalINS2_15AuthCredentialsEEE(%"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"* nocapture readonly, %"class.net::AuthChallengeInfo"* dereferenceable(184), %class.scoped_refptr* dereferenceable(8), %"class.net::IPEndPoint"* dereferenceable(20), %"class.absl::optional.10"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint %"class.absl::optional.10"* %4 to i64
  %10 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #12
  %11 = getelementptr inbounds %"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter", %"class.network::mojom::WebSocketAuthenticationHandlerAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.network::mojom::WebSocketAuthenticationHandler"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %14 = call i8* @_Znwm(i64 56) #13, !noalias !2
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.10"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS6_19HttpResponseHeadersEERKNS6_10IPEndPointEPN4absl8optionalINS6_15AuthCredentialsEEEE3$_0JPNS_7RunLoopESM_EEEFvRKSL_EE7RunOnceEPNS0_13BindStateBaseESS_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS5_19HttpResponseHeadersEERKNS5_10IPEndPointEPN4absl8optionalINS5_15AuthCredentialsEEEE3$_0JPNS_7RunLoopESL_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !2
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8, !noalias !2
  %20 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %14, i8** %20, align 8, !alias.scope !2
  %21 = bitcast %"class.network::mojom::WebSocketAuthenticationHandler"* %12 to void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)***
  %22 = load void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %22, i64 2
  %24 = load void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::WebSocketAuthenticationHandler"*, %"class.net::AuthChallengeInfo"*, %class.scoped_refptr*, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %23, align 8
  call void %24(%"class.network::mojom::WebSocketAuthenticationHandler"* %12, %"class.net::AuthChallengeInfo"* dereferenceable(184) %1, %class.scoped_refptr* dereferenceable(8) %2, %"class.net::IPEndPoint"* dereferenceable(20) %3, %"class.base::OnceCallback"* nonnull %7) #12
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #12
  %26 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 55) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTesting25OnOpeningHandshakeStartedEN4mojo9StructPtrINS0_25WebSocketHandshakeRequestEEE(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)**, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::WebSocketHandshakeClient"* %7(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"* %0) #12
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.network::mojom::WebSocketHandshakeClient"* %8 to void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)**, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)*, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)*, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.network::mojom::WebSocketHandshakeClient"* %8, %"class.mojo::StructPtr"* nonnull %3) #12
  %17 = load %"class.network::mojom::WebSocketHandshakeRequest"*, %"class.network::mojom::WebSocketHandshakeRequest"** %10, align 8
  store %"class.network::mojom::WebSocketHandshakeRequest"* null, %"class.network::mojom::WebSocketHandshakeRequest"** %10, align 8
  %18 = icmp eq %"class.network::mojom::WebSocketHandshakeRequest"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN7network5mojom25WebSocketHandshakeRequestD1Ev(%"class.network::mojom::WebSocketHandshakeRequest"* nonnull %17) #12
  %20 = bitcast %"class.network::mojom::WebSocketHandshakeRequest"* %17 to i8*
  call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTesting9OnFailureERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)**, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::WebSocketHandshakeClient"* %8(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"* %0) #12
  %10 = bitcast %"class.network::mojom::WebSocketHandshakeClient"* %9 to void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)***
  %11 = load void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)**, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)*, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)** %11, i64 3
  %13 = load void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)*, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.std::__1::basic_string"*, i32, i32)** %12, align 8
  tail call void %13(%"class.network::mojom::WebSocketHandshakeClient"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2, i32 %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTesting23OnConnectionEstablishedEN4mojo13PendingRemoteINS0_9WebSocketEEENS2_15PendingReceiverINS0_15WebSocketClientEEENS2_9StructPtrINS0_26WebSocketHandshakeResponseEEENS2_16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEENSC_INS2_22DataPipeProducerHandleEEE(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"* nocapture, %"class.mojo::ScopedHandleBase.78"* nocapture, %"class.mojo::ScopedHandleBase.79"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::PendingRemote", align 4
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = alloca %"class.mojo::StructPtr.71", align 8
  %10 = alloca %"class.mojo::ScopedHandleBase.78", align 4
  %11 = alloca %"class.mojo::ScopedHandleBase.79", align 4
  %12 = bitcast %"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)***
  %13 = load %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)**, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)** %13, i64 5
  %15 = load %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketHandshakeClient"* (%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*)** %14, align 8
  %16 = tail call %"class.network::mojom::WebSocketHandshakeClient"* %15(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"* %0) #12
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %7, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %18) #12
  %19 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  %20 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %19, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %20) #12
  %21 = bitcast %"class.mojo::StructPtr.71"* %9 to i64*
  %22 = getelementptr inbounds %"class.mojo::StructPtr.71", %"class.mojo::StructPtr.71"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.mojo::StructPtr.71"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 0, i64* %23, align 8
  %25 = getelementptr inbounds %"class.mojo::ScopedHandleBase.78", %"class.mojo::ScopedHandleBase.78"* %10, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase.78", %"class.mojo::ScopedHandleBase.78"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4, !noalias !7
  store i32 %27, i32* %25, align 4, !alias.scope !7
  store i32 0, i32* %26, align 4, !noalias !7
  %28 = getelementptr inbounds %"class.mojo::ScopedHandleBase.79", %"class.mojo::ScopedHandleBase.79"* %11, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.mojo::ScopedHandleBase.79", %"class.mojo::ScopedHandleBase.79"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !10
  store i32 %30, i32* %28, align 4, !alias.scope !10
  store i32 0, i32* %29, align 4, !noalias !10
  %31 = bitcast %"class.network::mojom::WebSocketHandshakeClient"* %16 to void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)***
  %32 = load void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)**, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)*, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)** %32, i64 4
  %34 = load void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)*, void (%"class.network::mojom::WebSocketHandshakeClient"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*, %"class.mojo::StructPtr.71"*, %"class.mojo::ScopedHandleBase.78"*, %"class.mojo::ScopedHandleBase.79"*)** %33, align 8
  call void %34(%"class.network::mojom::WebSocketHandshakeClient"* %16, %"class.mojo::PendingRemote"* nonnull %7, %"class.mojo::PendingReceiver"* nonnull %8, %"class.mojo::StructPtr.71"* nonnull %9, %"class.mojo::ScopedHandleBase.78"* nonnull %10, %"class.mojo::ScopedHandleBase.79"* nonnull %11) #12
  %35 = load i32, i32* %28, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %6
  %38 = call i32 @MojoClose(i32 %35) #12
  br label %39

39:                                               ; preds = %6, %37
  %40 = load i32, i32* %25, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = call i32 @MojoClose(i32 %40) #12
  br label %44

44:                                               ; preds = %39, %42
  %45 = load %"class.network::mojom::WebSocketHandshakeResponse"*, %"class.network::mojom::WebSocketHandshakeResponse"** %22, align 8
  store %"class.network::mojom::WebSocketHandshakeResponse"* null, %"class.network::mojom::WebSocketHandshakeResponse"** %22, align 8
  %46 = icmp eq %"class.network::mojom::WebSocketHandshakeResponse"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  call void @_ZN7network5mojom26WebSocketHandshakeResponseD1Ev(%"class.network::mojom::WebSocketHandshakeResponse"* nonnull %45) #12
  %48 = bitcast %"class.network::mojom::WebSocketHandshakeResponse"* %45 to i8*
  call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %44, %47
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %19) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom35WebSocketHandshakeClientAsyncWaiterC2EPNS0_24WebSocketHandshakeClientE(%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"* nocapture, %"class.network::mojom::WebSocketHandshakeClient"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::WebSocketHandshakeClientAsyncWaiter", %"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::WebSocketHandshakeClient"* %1, %"class.network::mojom::WebSocketHandshakeClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom35WebSocketHandshakeClientAsyncWaiterD2Ev(%"class.network::mojom::WebSocketHandshakeClientAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom36WebSocketClientInterceptorForTesting11OnDataFrameEbNS0_20WebSocketMessageTypeEm(%"class.network::mojom::WebSocketClientInterceptorForTesting"*, i1 zeroext, i32, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::WebSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)**, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::WebSocketClient"* %8(%"class.network::mojom::WebSocketClientInterceptorForTesting"* %0) #12
  %10 = bitcast %"class.network::mojom::WebSocketClient"* %9 to void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)***
  %11 = load void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)**, void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)*, void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)** %11, i64 2
  %13 = load void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)*, void (%"class.network::mojom::WebSocketClient"*, i1, i32, i64)** %12, align 8
  tail call void %13(%"class.network::mojom::WebSocketClient"* %9, i1 zeroext %1, i32 %2, i64 %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom36WebSocketClientInterceptorForTesting13OnDropChannelEbtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.network::mojom::WebSocketClientInterceptorForTesting"*, i1 zeroext, i16 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::WebSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)**, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::WebSocketClient"* %8(%"class.network::mojom::WebSocketClientInterceptorForTesting"* %0) #12
  %10 = bitcast %"class.network::mojom::WebSocketClient"* %9 to void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)***
  %11 = load void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)**, void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)*, void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)** %11, i64 3
  %13 = load void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)*, void (%"class.network::mojom::WebSocketClient"*, i1, i16, %"class.std::__1::basic_string"*)** %12, align 8
  tail call void %13(%"class.network::mojom::WebSocketClient"* %9, i1 zeroext %1, i16 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom36WebSocketClientInterceptorForTesting18OnClosingHandshakeEv(%"class.network::mojom::WebSocketClientInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.network::mojom::WebSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)***
  %3 = load %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)**, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)*, %"class.network::mojom::WebSocketClient"* (%"class.network::mojom::WebSocketClientInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.network::mojom::WebSocketClient"* %5(%"class.network::mojom::WebSocketClientInterceptorForTesting"* %0) #12
  %7 = bitcast %"class.network::mojom::WebSocketClient"* %6 to void (%"class.network::mojom::WebSocketClient"*)***
  %8 = load void (%"class.network::mojom::WebSocketClient"*)**, void (%"class.network::mojom::WebSocketClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.network::mojom::WebSocketClient"*)*, void (%"class.network::mojom::WebSocketClient"*)** %8, i64 4
  %10 = load void (%"class.network::mojom::WebSocketClient"*)*, void (%"class.network::mojom::WebSocketClient"*)** %9, align 8
  tail call void %10(%"class.network::mojom::WebSocketClient"* %6) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom26WebSocketClientAsyncWaiterC2EPNS0_15WebSocketClientE(%"class.network::mojom::WebSocketClientAsyncWaiter"* nocapture, %"class.network::mojom::WebSocketClient"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::WebSocketClientAsyncWaiter", %"class.network::mojom::WebSocketClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::WebSocketClient"* %1, %"class.network::mojom::WebSocketClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom26WebSocketClientAsyncWaiterD2Ev(%"class.network::mojom::WebSocketClientAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom30WebSocketInterceptorForTesting11SendMessageENS0_20WebSocketMessageTypeEm(%"class.network::mojom::WebSocketInterceptorForTesting"*, i32, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.network::mojom::WebSocketInterceptorForTesting"* %0 to %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)**, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::WebSocket"* %7(%"class.network::mojom::WebSocketInterceptorForTesting"* %0) #12
  %9 = bitcast %"class.network::mojom::WebSocket"* %8 to void (%"class.network::mojom::WebSocket"*, i32, i64)***
  %10 = load void (%"class.network::mojom::WebSocket"*, i32, i64)**, void (%"class.network::mojom::WebSocket"*, i32, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.network::mojom::WebSocket"*, i32, i64)*, void (%"class.network::mojom::WebSocket"*, i32, i64)** %10, i64 2
  %12 = load void (%"class.network::mojom::WebSocket"*, i32, i64)*, void (%"class.network::mojom::WebSocket"*, i32, i64)** %11, align 8
  tail call void %12(%"class.network::mojom::WebSocket"* %8, i32 %1, i64 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom30WebSocketInterceptorForTesting14StartReceivingEv(%"class.network::mojom::WebSocketInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.network::mojom::WebSocketInterceptorForTesting"* %0 to %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)***
  %3 = load %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)**, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.network::mojom::WebSocket"* %5(%"class.network::mojom::WebSocketInterceptorForTesting"* %0) #12
  %7 = bitcast %"class.network::mojom::WebSocket"* %6 to void (%"class.network::mojom::WebSocket"*)***
  %8 = load void (%"class.network::mojom::WebSocket"*)**, void (%"class.network::mojom::WebSocket"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.network::mojom::WebSocket"*)*, void (%"class.network::mojom::WebSocket"*)** %8, i64 3
  %10 = load void (%"class.network::mojom::WebSocket"*)*, void (%"class.network::mojom::WebSocket"*)** %9, align 8
  tail call void %10(%"class.network::mojom::WebSocket"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom30WebSocketInterceptorForTesting21StartClosingHandshakeEtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.network::mojom::WebSocketInterceptorForTesting"*, i16 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.network::mojom::WebSocketInterceptorForTesting"* %0 to %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)**, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)*, %"class.network::mojom::WebSocket"* (%"class.network::mojom::WebSocketInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::WebSocket"* %7(%"class.network::mojom::WebSocketInterceptorForTesting"* %0) #12
  %9 = bitcast %"class.network::mojom::WebSocket"* %8 to void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)**, void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)*, void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)** %10, i64 4
  %12 = load void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)*, void (%"class.network::mojom::WebSocket"*, i16, %"class.std::__1::basic_string"*)** %11, align 8
  tail call void %12(%"class.network::mojom::WebSocket"* %8, i16 zeroext %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom20WebSocketAsyncWaiterC2EPNS0_9WebSocketE(%"class.network::mojom::WebSocketAsyncWaiter"* nocapture, %"class.network::mojom::WebSocket"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::WebSocketAsyncWaiter", %"class.network::mojom::WebSocketAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::WebSocket"* %1, %"class.network::mojom::WebSocket"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom20WebSocketAsyncWaiterD2Ev(%"class.network::mojom::WebSocketAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom30WebSocketAuthenticationHandlerD2Ev(%"class.network::mojom::WebSocketAuthenticationHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom51WebSocketAuthenticationHandlerInterceptorForTestingD0Ev(%"class.network::mojom::WebSocketAuthenticationHandlerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom24WebSocketHandshakeClientD2Ev(%"class.network::mojom::WebSocketHandshakeClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom45WebSocketHandshakeClientInterceptorForTestingD0Ev(%"class.network::mojom::WebSocketHandshakeClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom15WebSocketClientD2Ev(%"class.network::mojom::WebSocketClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom36WebSocketClientInterceptorForTestingD0Ev(%"class.network::mojom::WebSocketClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom9WebSocketD2Ev(%"class.network::mojom::WebSocket"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom30WebSocketInterceptorForTestingD0Ev(%"class.network::mojom::WebSocketInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom25WebSocketHandshakeRequestD1Ev(%"class.network::mojom::WebSocketHandshakeRequest"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom26WebSocketHandshakeResponseD1Ev(%"class.network::mojom::WebSocketHandshakeResponse"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS6_19HttpResponseHeadersEERKNS6_10IPEndPointEPN4absl8optionalINS6_15AuthCredentialsEEEE3$_0JPNS_7RunLoopESM_EEEFvRKSL_EE7RunOnceEPNS0_13BindStateBaseESS_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.absl::optional.10"* dereferenceable(56)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.absl::optional.10"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.absl::optional.10"*, %"class.absl::optional.10"** %6, align 8
  %9 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !13
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !13
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %16, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %13, i64 0, i32 0
  %21 = tail call dereferenceable(24) %"class.std::__1::basic_string.15"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.15"* %19, %"class.std::__1::basic_string.15"* dereferenceable(24) %20) #12
  %22 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string.15"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.15"* %22, %"class.std::__1::basic_string.15"* dereferenceable(24) %23) #12
  br label %32

25:                                               ; preds = %12
  tail call void @_ZN3net15AuthCredentialsC2ERKS0_(%"class.net::AuthCredentials"* %17, %"class.net::AuthCredentials"* dereferenceable(48) %13) #12
  store i8 1, i8* %14, align 8
  br label %32

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !13
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net15AuthCredentialsD1Ev(%"class.net::AuthCredentials"* %31) #12
  store i8 0, i8* %27, align 8
  br label %32

32:                                               ; preds = %18, %25, %26, %30
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.15"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.15"*, %"class.std::__1::basic_string.15"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.15"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.15"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.15"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.15"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.15"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.15"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.15"*
  %35 = icmp ugt %"class.std::__1::basic_string.15"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !14
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !14
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !17, !noalias !14
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !17, !noalias !14
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !14
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !14
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !17, !noalias !14
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !17, !noalias !14
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !14
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !14
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !17, !noalias !14
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !17, !noalias !14
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !14
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !14
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !17, !noalias !14
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !17, !noalias !14
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !19

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !14
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !14
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !17, !noalias !14
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !17, !noalias !14
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !21

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !23

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !24

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.15"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !25
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !25
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !28, !noalias !25
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !28, !noalias !25
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !25
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !25
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !28, !noalias !25
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !28, !noalias !25
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !25
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !25
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !28, !noalias !25
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !28, !noalias !25
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !25
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !25
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !28, !noalias !25
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !28, !noalias !25
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !30

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !25
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !25
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !28, !noalias !25
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !28, !noalias !25
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !31

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !32

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !33

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.15"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.15"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !34
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !34
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !37, !noalias !34
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !37, !noalias !34
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !34
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !34
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !37, !noalias !34
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !37, !noalias !34
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !34
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !34
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !37, !noalias !34
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !37, !noalias !34
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !34
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !34
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !37, !noalias !34
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !37, !noalias !34
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !39

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !34
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !34
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !37, !noalias !34
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !37, !noalias !34
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !40

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !41

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !42

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.15"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.15"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.15"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.15"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.15"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.15"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !43
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !43
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !46, !noalias !43
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !46, !noalias !43
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !43
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !43
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !46, !noalias !43
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !46, !noalias !43
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !43
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !43
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !46, !noalias !43
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !46, !noalias !43
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !43
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !43
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !46, !noalias !43
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !46, !noalias !43
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !48

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !43
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !43
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !46, !noalias !43
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !46, !noalias !43
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !49

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !50

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !51

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !52

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !53

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !54

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !56
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !56
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !59, !noalias !56
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !59, !noalias !56
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !56
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !56
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !59, !noalias !56
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !59, !noalias !56
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !56
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !56
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !59, !noalias !56
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !59, !noalias !56
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !56
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !56
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !59, !noalias !56
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !59, !noalias !56
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !61

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !56
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !56
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !59, !noalias !56
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !59, !noalias !56
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !62

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !63

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !64

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.15"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net15AuthCredentialsC2ERKS0_(%"class.net::AuthCredentials"*, %"class.net::AuthCredentials"* dereferenceable(48)) unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.net::AuthCredentials"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::AuthCredentials"* %0 to i8*
  %9 = bitcast %"class.net::AuthCredentials"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #12
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"class.net::AuthCredentials"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"class.net::AuthCredentials"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.net::AuthCredentials"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #14
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"class.net::AuthCredentials"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !65
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !65
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !68, !noalias !65
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !68, !noalias !65
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !65
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !65
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !68, !noalias !65
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !68, !noalias !65
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !65
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !65
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !68, !noalias !65
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !68, !noalias !65
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !65
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !65
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !68, !noalias !65
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !68, !noalias !65
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !70

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !65
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !65
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !68, !noalias !65
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !68, !noalias !65
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !71

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !72

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !73

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.15"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.15"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.15"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #12
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.15"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.15"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.15"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #14
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #14
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #13
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.15"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !74
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !74
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !77, !noalias !74
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !77, !noalias !74
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !74
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !74
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !77, !noalias !74
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !77, !noalias !74
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !74
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !74
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !77, !noalias !74
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !77, !noalias !74
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !74
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !74
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !77, !noalias !74
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !77, !noalias !74
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !79

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !74
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !74
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !77, !noalias !74
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !77, !noalias !74
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !80

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !81

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !82

370:                                              ; preds = %335, %340, %315, %192
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net15AuthCredentialsD1Ev(%"class.net::AuthCredentials"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS5_19HttpResponseHeadersEERKNS5_10IPEndPointEPN4absl8optionalINS5_15AuthCredentialsEEEE3$_0JPNS_7RunLoopESL_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

declare i32 @MojoClose(i32) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS6_19HttpResponseHeadersEERKNS6_10IPEndPointEPN4absl8optionalINS6_15AuthCredentialsEEEE3$_0JPNS_7RunLoopERSM_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS6_19HttpResponseHeadersEERKNS6_10IPEndPointEPN4absl8optionalINS6_15AuthCredentialsEEEE3$_0JPNS_7RunLoopERSM_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS4_19HttpResponseHeadersEERKNS4_10IPEndPointEPN4absl8optionalINS4_15AuthCredentialsEEEE3$_0JPNS_7RunLoopERSK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN7network5mojom41WebSocketAuthenticationHandlerAsyncWaiter14OnAuthRequiredERKN3net17AuthChallengeInfoERK13scoped_refptrINS4_19HttpResponseHeadersEERKNS4_10IPEndPointEPN4absl8optionalINS4_15AuthCredentialsEEEE3$_0JPNS_7RunLoopERSK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!9 = distinct !{!9, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !22}
!24 = distinct !{!24, !20}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !20}
!31 = distinct !{!31, !22}
!32 = distinct !{!32, !22}
!33 = distinct !{!33, !20}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !20}
!40 = distinct !{!40, !22}
!41 = distinct !{!41, !22}
!42 = distinct !{!42, !20}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !20}
!49 = distinct !{!49, !22}
!50 = distinct !{!50, !22}
!51 = distinct !{!51, !20}
!52 = distinct !{!52, !20}
!53 = distinct !{!53, !22}
!54 = distinct !{!54, !55, !20}
!55 = !{!"llvm.loop.unroll.runtime.disable"}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !20}
!62 = distinct !{!62, !22}
!63 = distinct !{!63, !22}
!64 = distinct !{!64, !20}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !20}
!71 = distinct !{!71, !22}
!72 = distinct !{!72, !22}
!73 = distinct !{!73, !20}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !20}
!80 = distinct !{!80, !22}
!81 = distinct !{!81, !22}
!82 = distinct !{!82, !20}
