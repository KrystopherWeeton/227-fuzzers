; ModuleID = '../../third_party/blink/renderer/core/svg/graphics/filters/svg_filter_builder.cc'
source_filename = "../../third_party/blink/renderer/core/svg/graphics/filters/svg_filter_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.188", i32, [4 x i8], %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.340", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.358", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.365", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.304", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { i64 }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.224" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.284", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286", %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { i64 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { float }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.307", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.332" }
%"class.WTF::VectorBuffer.332" = type { %"class.WTF::VectorBufferBase.333" }
%"class.WTF::VectorBufferBase.333" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.346" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.242"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.249"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.256"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.263"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.607" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.364 }
%class.scoped_refptr.364 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SVGFilterGraphNodeMap" = type { %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.17" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::Member", %"class.blink::Member.11" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.7", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.26", %"class.blink::Member" }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type { %"class.blink::FilterEffect", %"class.blink::IntRect" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.10, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::HeapHashSet"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.17" = type { %"class.WTF::HashMap.20" }
%"class.WTF::HashMap.20" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ %"struct.WTF::KeyValuePair.23"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.23" = type { %"class.blink::WeakMember.745", %"class.blink::Member" }
%"class.blink::WeakMember.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::SVGFilterPrimitiveStandardAttributes"* }
%"class.blink::SVGFilterPrimitiveStandardAttributes" = type { %"class.blink::SVGElement", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.76" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.61", %"class.blink::HeapHashMap.67", %"class.blink::Member.74", %"class.blink::Member.76" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.44" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.30", %"class.blink::Member.30" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.30", %"class.blink::Member.32", %"class.blink::Member.30", %"class.blink::Member.30", %"class.blink::Member.34" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.32", %"class.blink::Member.90", %"class.blink::Member.90", %"class.blink::Member.114", %"class.blink::Member.116", %"class.blink::Member.118", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.123", %"class.blink::HeapVector.125" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.141", %"class.WTF::Vector.141", i8, i32, %"class.blink::Member.147", %"class.blink::Member.149", %"class.blink::Member.151", %"class.blink::Member.153", %"class.blink::Member.155", %"class.blink::Member.157", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.160", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.166", %"class.blink::Member.168", %"class.blink::Member.131", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.171", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.107", %"class.blink::Member.105", %"class.blink::Member.381", %"class.blink::Member.105", %"class.blink::Member.105", %"class.blink::Member.105", %"class.blink::UserActionElementSet", %"class.blink::Member.390", double, double, i64, i64, %"class.blink::HeapHashSet.392", %"class.blink::HeapHashSet.399", i16, i8, %"class.blink::Member.406", %"class.blink::Member.408", %"class.blink::Member.410", %"class.blink::Member.412", %"class.blink::TextLinkColors", %"class.blink::Member.414", i8, [7 x i8], %"class.blink::HeapHashMap.416", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.105", %"class.WTF::Vector.423", %"class.blink::Member.428", %"class.blink::Member.430", i8, %"class.blink::Member.105", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.432", %"class.blink::HeapVector.434", %"class.std::__1::unique_ptr.442", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.448", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.461", %"class.WTF::Vector.463", i8, i8, %"class.std::__1::unique_ptr.468", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.107", %"class.blink::HeapVector.474", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.482", i8, i32, %"class.blink::Member.484", %"class.blink::Member.486", %"class.blink::Member.488", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.490", %"class.WTF::HashMap.492", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::Member.88", %"class.blink::Member.88", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.505", i8, i32, %"class.blink::Member.512", %"class.blink::Member.514", i32, %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.std::__1::unique_ptr.522", i64, %"class.std::__1::unique_ptr.528", i32, i32, %"class.blink::Member.543", %"class.blink::Member.545", %"class.blink::Member.547", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.549", %"class.WTF::Vector.551", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.556", %"class.blink::Member.563", %"class.std::__1::unique_ptr.565", %"class.blink::Member.571", i8, i8, %"class.WTF::String", %"class.blink::Member.573", i8, [7 x i8], %"class.blink::HeapHashMap.575", %"class.blink::HeapObserverSet", %"class.blink::Member.589", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.591", i32, i8, i8, %"class.blink::WeakMember.593", %"class.blink::Member.594" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.134" }
%"class.blink::HeapHashMap.134" = type { %"class.WTF::HashMap.137" }
%"class.WTF::HashMap.137" = type { %"class.WTF::HashTable.138" }
%"class.WTF::HashTable.138" = type <{ %"struct.WTF::KeyValuePair.140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.140" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.144 }
%class.scoped_refptr.144 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.612", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.653", i32, i8, [3 x i8], %"class.blink::HeapVector.655", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.663", %"class.blink::Member.665", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.674", %"class.blink::Member.680", %"class.blink::Member.682", i8, [7 x i8] }>
%"class.blink::Supplementable.612" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.613" }
%"class.blink::HeapHashMap.613" = type { %"class.WTF::HashMap.616" }
%"class.WTF::HashMap.616" = type { %"class.WTF::HashTable.617" }
%"class.WTF::HashTable.617" = type <{ %"struct.WTF::KeyValuePair.619"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.619" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.628" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.620" }
%"class.blink::HeapObserverSet.620" = type { i32, [4 x i8], %"class.blink::HeapHashSet.621" }
%"class.blink::HeapHashSet.621" = type { %"class.WTF::HashSet.624" }
%"class.WTF::HashSet.624" = type { %"class.WTF::HashTable.625" }
%"class.WTF::HashTable.625" = type <{ %"class.blink::WeakMember.627"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.627" = type opaque
%"class.blink::Supplementable.628" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.629" }
%"class.blink::HeapHashMap.629" = type { %"class.WTF::HashMap.632" }
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.635" = type { i8*, %"class.blink::Member.747" }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.749" }
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.636, %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.643", %"class.blink::Member.149", i32, [4 x i8], %"class.WTF::HashSet.649", i32, i32 }
%class.scoped_refptr.636 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.655" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"class.blink::Member.661"*, i32, i32 }
%"class.blink::Member.661" = type opaque
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.667", i32, i32 }
%"class.blink::HeapHashMap.667" = type { %"class.WTF::HashMap.670" }
%"class.WTF::HashMap.670" = type { %"class.WTF::HashTable.671" }
%"class.WTF::HashTable.671" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.171" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.174 }
%class.scoped_refptr.174 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.175", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.175" = type { %"class.base::RefCounted.176" }
%"class.base::RefCounted.176" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.179" }
%"class.blink::HeapHashMap.179" = type { %"class.WTF::HashMap.182" }
%"class.WTF::HashMap.182" = type { %"class.WTF::HashTable.183" }
%"class.WTF::HashTable.183" = type <{ %"struct.WTF::KeyValuePair.185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.185" = type { %"class.blink::WeakMember.186", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.383" }
%"class.blink::HeapHashMap.383" = type { %"class.WTF::HashMap.386" }
%"class.WTF::HashMap.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"struct.WTF::KeyValuePair.389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.389" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.392" = type { %"class.WTF::HashSet.395" }
%"class.WTF::HashSet.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"class.blink::WeakMember.398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.398" = type opaque
%"class.blink::HeapHashSet.399" = type { %"class.WTF::HashSet.402" }
%"class.WTF::HashSet.402" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ %"class.blink::WeakMember.405"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.405" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type opaque
%"class.WTF::Vector.423" = type { %"class.WTF::VectorBuffer.424" }
%"class.WTF::VectorBuffer.424" = type { %"class.WTF::VectorBufferBase.425" }
%"class.WTF::VectorBufferBase.425" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.434" = type { %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.blink::Member.440"*, i32, i32 }
%"class.blink::Member.440" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::WeakMember.454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.454" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.455", i32, [4 x i8] }>
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"struct.std::__1::pair.458"*, i32, i32 }
%"struct.std::__1::pair.458" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.107" = type { %"class.WTF::Vector.110" }
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.blink::Member.105"*, i32, i32 }
%"class.blink::HeapVector.474" = type { %"class.WTF::Vector.477" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.blink::Member.480"*, i32, i32 }
%"class.blink::Member.480" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.88" }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.380", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.371, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.371 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.372" }>
%"class.base::RefCountedThreadSafe.372" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.373 }
%class.scoped_refptr.373 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.374", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.374" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.375" }
%"struct.std::__1::atomic.375" = type { %"struct.std::__1::__atomic_base.376" }
%"struct.std::__1::__atomic_base.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__cxx_atomic_impl.378" }
%"struct.std::__1::__cxx_atomic_impl.378" = type { %"struct.std::__1::__cxx_atomic_base_impl.379" }
%"struct.std::__1::__cxx_atomic_base_impl.379" = type { i8 }
%"class.blink::WeakMember.380" = type { %"class.blink::MemberBase.89" }
%"class.blink::HeapHashSet.505" = type { %"class.WTF::HashSet.508" }
%"class.WTF::HashSet.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"class.blink::Member.511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.511" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", i32, [4 x i8], %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.551" = type { %"class.WTF::VectorBuffer.552" }
%"class.WTF::VectorBuffer.552" = type { %"class.WTF::VectorBufferBase.553" }
%"class.WTF::VectorBufferBase.553" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.556" = type { %"class.WTF::HashMap.559" }
%"class.WTF::HashMap.559" = type { %"class.WTF::HashTable.560" }
%"class.WTF::HashTable.560" = type <{ %"struct.WTF::KeyValuePair.562"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.562" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.582" }
%"class.blink::HeapHashSet.582" = type { %"class.WTF::HashSet.585" }
%"class.WTF::HashSet.585" = type { %"class.WTF::HashTable.586" }
%"class.WTF::HashTable.586" = type <{ %"class.blink::WeakMember.588"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.588" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.88", %"class.blink::HeapHashSet.598", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.605", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.598" = type { %"class.WTF::HashSet.601" }
%"class.WTF::HashSet.601" = type { %"class.WTF::HashTable.602" }
%"class.WTF::HashTable.602" = type <{ %"class.blink::Member.604"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.604" = type opaque
%"class.blink::HeapTaskRunnerTimer.605" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.606", { i64, i64 } }
%"class.blink::WeakMember.606" = type { %"class.blink::MemberBase.592" }
%"class.blink::WeakMember.593" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::Node"* }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.94" }
%"class.blink::HeapHashMap.94" = type { %"class.WTF::HashMap.97" }
%"class.WTF::HashMap.97" = type { %"class.WTF::HashTable.98" }
%"class.WTF::HashTable.98" = type <{ %"struct.WTF::KeyValuePair.100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.100" = type { %"class.WTF::AtomicString", %"class.blink::Member.101" }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.105", i32, %"class.blink::HeapVector.107" }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.120" }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::HeapHashMap.122"* }
%"class.blink::HeapHashMap.122" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.125" = type { %"class.WTF::Vector.128" }
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.blink::Member.131"*, i32, i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.48", %"class.blink::Member.50", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.48" = type { %"class.WTF::SingleThreadedBitField.49" }
%"class.WTF::SingleThreadedBitField.49" = type { i32 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.55", %"class.WTF::AtomicString", %"class.WTF::Vector.57" }
%"class.WTF::RefCounted.55" = type { %"class.base::RefCounted.56" }
%"class.base::RefCounted.56" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59", [32 x i8] }
%"class.WTF::VectorBufferBase.59" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet.61" = type { %"class.WTF::HashSet.64" }
%"class.WTF::HashSet.64" = type { %"class.WTF::HashTable.65" }
%"class.WTF::HashTable.65" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap.70" }
%"class.WTF::HashMap.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ %"struct.WTF::KeyValuePair.73"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.73" = type opaque
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.78", %"class.blink::QualifiedName"* }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::SVGString"* }
%"class.blink::SVGString" = type { %"class.blink::SVGPropertyBase", %"class.WTF::String" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::SVGFilterBuilder" = type { %"class.blink::HeapHashMap.686", %"class.blink::HeapHashMap.686", %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"* }
%"class.blink::HeapHashMap.686" = type { %"class.WTF::HashMap.689" }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.693, %class.sk_sp.694, %class.sk_sp.731, %class.sk_sp.732, %class.sk_sp.733, %class.sk_sp, i32, float, float, i32, %union.anon.734, [4 x i8] }>
%class.sk_sp.693 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.694 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.695", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.702, i32, %"class.absl::optional.711", %"class.std::__1::vector.716", %"class.std::__1::vector.723", %class.sk_sp.730, %class.sk_sp.700, i32, [4 x i8] }>
%"class.absl::optional.695" = type { %"class.absl::optional_internal::optional_data.696" }
%"class.absl::optional_internal::optional_data.696" = type { %"class.absl::optional_internal::optional_data_base.697" }
%"class.absl::optional_internal::optional_data_base.697" = type { %"class.absl::optional_internal::optional_data_dtor_base.698" }
%"class.absl::optional_internal::optional_data_dtor_base.698" = type { i8, %union.anon.699 }
%union.anon.699 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.700, %class.sk_sp.702, %"class.gfx::Rect", i32, %class.sk_sp.707, %class.sk_sp.708, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.700, %class.scoped_refptr.709 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.707 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.708 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.709 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.710", [4 x i8] }>
%"class.base::RefCountedThreadSafe.710" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.702 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.703", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { i8* }
%"class.absl::optional.711" = type { %"class.absl::optional_internal::optional_data.712" }
%"class.absl::optional_internal::optional_data.712" = type { %"class.absl::optional_internal::optional_data_base.713" }
%"class.absl::optional_internal::optional_data_base.713" = type { %"class.absl::optional_internal::optional_data_dtor_base.714" }
%"class.absl::optional_internal::optional_data_dtor_base.714" = type { i8, %union.anon.715 }
%union.anon.715 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.716" = type { %"class.std::__1::__vector_base.717" }
%"class.std::__1::__vector_base.717" = type { i32*, i32*, %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { i32* }
%"class.std::__1::vector.723" = type { %"class.std::__1::__vector_base.724" }
%"class.std::__1::__vector_base.724" = type { float*, float*, %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { float* }
%class.sk_sp.730 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.365", [7 x i8] }>
%class.sk_sp.700 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.701, i32, i32 }
%class.sk_sp.701 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.375" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.731 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.732 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.733 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.734 = type { i32 }
%"class.blink::SourceAlpha" = type { %"class.blink::FilterEffect" }
%"class.blink::PaintFilterEffect" = type { %"class.blink::FilterEffect", %"class.cc::PaintFlags" }
%"class.blink::SVGFilterElement" = type { %"class.blink::SVGElement", %"class.blink::SVGURIReference", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.739", %"class.blink::Member.739" }
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.737" }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::SVGAnimatedEnumeration"* }
%"class.blink::SVGAnimatedEnumeration" = type { %"class.blink::SVGAnimatedEnumerationBase" }
%"class.blink::SVGAnimatedEnumerationBase" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty.741" }
%"class.blink::SVGAnimatedProperty.741" = type { %"class.blink::SVGAnimatedPropertyCommon.742" }
%"class.blink::SVGAnimatedPropertyCommon.742" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.743", %"class.blink::Member.743" }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::SVGEnumeration"* }
%"class.blink::SVGEnumeration" = type { %"class.blink::SVGPropertyBase", i16, %"class.blink::SVGEnumerationMap"* }
%"class.blink::SVGEnumerationMap" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1393", %"class.blink::Member.1395", %"class.blink::Member.1397", %"class.blink::Member.1416", %"class.blink::Member.1418" }
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.768 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.768, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1249" }
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1252", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1258", %"class.std::__1::unique_ptr.1367", i8, %"class.absl::optional.1373", %class.scoped_refptr.1349, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1378" }
%"class.std::__1::unique_ptr.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1261, %class.scoped_refptr.1261, %class.scoped_refptr.1261, %class.scoped_refptr.1261, %class.scoped_refptr.1261, %class.scoped_refptr.1261, %class.scoped_refptr.1296, %class.scoped_refptr.1312, %class.scoped_refptr.1313, %class.scoped_refptr.1313, %class.scoped_refptr.1313, %class.scoped_refptr.1313, %class.scoped_refptr.1313, %class.scoped_refptr.1313, %class.scoped_refptr.1339, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1340, %class.scoped_refptr.1363 }
%class.scoped_refptr.1261 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1278" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1262", i8, i8, %class.scoped_refptr.1264, i32, i32 }
%"class.WTF::RefCounted.1262" = type { %"class.base::RefCounted.1263" }
%"class.base::RefCounted.1263" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1264 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1271, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1272", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1265" }
%"class.std::__1::unique_ptr.1265" = type { %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1271 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1297", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1297" = type { %"class.WTF::RefCounted.1298", i8, i8, %class.scoped_refptr.1271, i32, i32 }
%"class.WTF::RefCounted.1298" = type { %"class.base::RefCounted.1299" }
%"class.base::RefCounted.1299" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1300" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1300" = type { %"class.absl::optional_internal::optional_data.1301" }
%"class.absl::optional_internal::optional_data.1301" = type { %"class.absl::optional_internal::optional_data_base.1302" }
%"class.absl::optional_internal::optional_data_base.1302" = type { %"class.absl::optional_internal::optional_data_dtor_base.1303" }
%"class.absl::optional_internal::optional_data_dtor_base.1303" = type { i8, %union.anon.1304 }
%union.anon.1304 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1305", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1305" = type { %"class.std::__1::__vector_base.1306" }
%"class.std::__1::__vector_base.1306" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1307" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1278" = type { %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1281", %"class.std::__1::unique_ptr.1287", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1296 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1312 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1313 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1314" }
%"class.blink::PaintPropertyNode.1314" = type { %"class.WTF::RefCounted.1315", i8, i8, %class.scoped_refptr.1317, i32, i32 }
%"class.WTF::RefCounted.1315" = type { %"class.base::RefCounted.1316" }
%"class.base::RefCounted.1316" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1317 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1264, %class.scoped_refptr.1318, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1333", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1318 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1341" }
%"class.blink::PaintPropertyNode.1341" = type { %"class.WTF::RefCounted.1342", i8, i8, %class.scoped_refptr.1318, i32, i32 }
%"class.WTF::RefCounted.1342" = type { %"class.base::RefCounted.1343" }
%"class.base::RefCounted.1343" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1319" }
%"class.std::__1::vector.1319" = type { %"class.std::__1::__vector_base.1320" }
%"class.std::__1::__vector_base.1320" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1328" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1321", i32, [4 x i8] }>
%"class.std::__1::vector.1321" = type { %"class.std::__1::__vector_base.1322" }
%"class.std::__1::__vector_base.1322" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.716" }
%class.scoped_refptr.1339 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1340 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1352" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1264, %"class.absl::optional.1344", %class.scoped_refptr.1349, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1344" = type { %"class.absl::optional_internal::optional_data.1345" }
%"class.absl::optional_internal::optional_data.1345" = type { %"class.absl::optional_internal::optional_data_base.1346" }
%"class.absl::optional_internal::optional_data_base.1346" = type { %"class.absl::optional_internal::optional_data_dtor_base.1347" }
%"class.absl::optional_internal::optional_data_dtor_base.1347" = type { i8, [3 x i8], %union.anon.1348 }
%union.anon.1348 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1355", i32, [4 x i8] }>
%"class.WTF::Vector.1355" = type { %"class.WTF::VectorBuffer.1356" }
%"class.WTF::VectorBuffer.1356" = type { %"class.WTF::VectorBufferBase.1357" }
%"class.WTF::VectorBufferBase.1357" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1363 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1264, %class.scoped_refptr.1318, %class.scoped_refptr.1317 }
%"class.absl::optional.1373" = type { %"class.absl::optional_internal::optional_data.1374" }
%"class.absl::optional_internal::optional_data.1374" = type { %"class.absl::optional_internal::optional_data_base.1375" }
%"class.absl::optional_internal::optional_data_base.1375" = type { %"class.absl::optional_internal::optional_data_dtor_base.1376" }
%"class.absl::optional_internal::optional_data_dtor_base.1376" = type { i8, %union.anon.1377 }
%union.anon.1377 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1349 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1350", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1166, i32, %"struct.std::__1::atomic.375", %"struct.std::__1::atomic.375", i8, i8 }>
%class.sk_sp.1166 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.1167, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1168, %class.SkTDArray.1169, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.1167 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1168 = type { i8*, i32, i32 }
%class.SkTDArray.1169 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1170 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1170 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.365", [3 x i8] }
%"class.WTF::RefCounted.1350" = type { %"class.base::RefCounted.1351" }
%"class.base::RefCounted.1351" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.768 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1229", %"class.std::__1::unique_ptr.1231" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.840", %"class.blink::DataRef.935", %"class.blink::DataRef.939", %"class.blink::DataRef.1144", %"class.blink::DataRef.1212", %"class.blink::DataRef.1216", %"class.blink::DataRef.1220", %"class.blink::DataRef.1224", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.769 }
%class.scoped_refptr.769 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.770", %"class.blink::DataRef.772", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.770" = type { %"class.base::RefCounted.771" }
%"class.base::RefCounted.771" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.772" = type { %class.scoped_refptr.773 }
%class.scoped_refptr.773 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.774", %"class.blink::Font" }
%"class.WTF::RefCounted.774" = type { %"class.base::RefCounted.775" }
%"class.base::RefCounted.775" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.808 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.777, %class.scoped_refptr.785, %class.scoped_refptr.795, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.807 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1389", [4 x i8] }>
%"class.WTF::RefCounted.1389" = type { %"class.base::RefCounted.1390" }
%"class.base::RefCounted.1390" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.777 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.783", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.778" }
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.780" }
%"class.WTF::VectorBufferBase.780" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.785 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.786", %"class.WTF::RefCounted.793", [4 x i8] }>
%"class.blink::FontSettings.786" = type { %"class.WTF::Vector.787" }
%"class.WTF::Vector.787" = type { %"class.WTF::VectorBuffer.788" }
%"class.WTF::VectorBuffer.788" = type { %"class.WTF::VectorBufferBase.789" }
%"class.WTF::VectorBufferBase.789" = type { %"class.blink::FontTagValuePair.790"*, i32, i32 }
%"class.blink::FontTagValuePair.790" = type { i32, float }
%"class.WTF::RefCounted.793" = type { %"class.base::RefCounted.794" }
%"class.base::RefCounted.794" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.795 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.796", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.804, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.800 }
%union.anon.800 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.804 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.805", [4 x i8] }>
%"class.WTF::RefCounted.805" = type { %"class.base::RefCounted.806" }
%"class.base::RefCounted.806" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.807 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.808 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.809", %"class.WTF::Vector.811", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.811" = type { %"class.WTF::VectorBuffer.812" }
%"class.WTF::VectorBuffer.812" = type { %"class.WTF::VectorBufferBase.813", [8 x i8] }
%"class.WTF::VectorBufferBase.813" = type { %class.scoped_refptr.814*, i32, i32 }
%class.scoped_refptr.814 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.815", [4 x i8] }>
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.826", %class.scoped_refptr.833, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.815" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.819", %"class.absl::optional.819", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.824, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.825, i8, [7 x i8] }>
%class.sk_sp.824 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.825 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.824, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.829, %class.scoped_refptr.829 }
%class.scoped_refptr.829 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.833 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.834", [4 x i8] }>
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.836" }
%"class.blink::PersistentBase.836" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.837" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.837" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.838 }
%class.scoped_refptr.838 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.839, i8, i8, i8, i8 }>
%union.anon.839 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.840" = type { %class.scoped_refptr.841 }
%class.scoped_refptr.841 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.842", [4 x i8], %"class.blink::DataRef.844", %"class.blink::DataRef.900", %"class.WTF::Vector.904", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.908, %class.scoped_refptr.917, %"class.blink::Persistent.925", %"class.blink::Persistent.927", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.842" = type { %"class.base::RefCounted.843" }
%"class.base::RefCounted.843" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.844" = type { %class.scoped_refptr.845 }
%class.scoped_refptr.845 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.846", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.848, %class.scoped_refptr.855, %"class.blink::Persistent.887", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.846" = type { %"class.base::RefCounted.847" }
%"class.base::RefCounted.847" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.848 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.849", %"class.WTF::Vector.850" }
%"class.base::RefCountedThreadSafe.849" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::VectorBufferBase.852" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.855 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.856", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.858", %"class.blink::Persistent.878" }
%"class.WTF::HashMap.858" = type { %"class.WTF::HashTable.859" }
%"class.WTF::HashTable.859" = type <{ %"struct.WTF::KeyValuePair.862"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.862" = type { %"class.WTF::AtomicString", %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.864", %"class.WTF::Vector.866", %"class.WTF::Vector.871", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.866" = type { %"class.WTF::VectorBuffer.867" }
%"class.WTF::VectorBuffer.867" = type { %"class.WTF::VectorBufferBase.868" }
%"class.WTF::VectorBufferBase.868" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.871" = type { %"class.WTF::VectorBuffer.872" }
%"class.WTF::VectorBuffer.872" = type { %"class.WTF::VectorBufferBase.873" }
%"class.WTF::VectorBufferBase.873" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.874 }
%union.anon.874 = type { double }
%"class.blink::Persistent.878" = type { %"class.blink::PersistentBase.879" }
%"class.blink::PersistentBase.879" = type { %"class.blink::HeapHashMap.880"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.880" = type { %"class.WTF::HashMap.883" }
%"class.WTF::HashMap.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"struct.WTF::KeyValuePair.886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.886" = type opaque
%"class.blink::Persistent.887" = type { %"class.blink::PersistentBase.888" }
%"class.blink::PersistentBase.888" = type { %"class.blink::HeapVector.889"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.889" = type { %"class.WTF::Vector.892" }
%"class.WTF::Vector.892" = type { %"class.WTF::VectorBuffer.893" }
%"class.WTF::VectorBuffer.893" = type { %"class.WTF::VectorBufferBase.894" }
%"class.WTF::VectorBufferBase.894" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.895", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.900" = type { %class.scoped_refptr.901 }
%class.scoped_refptr.901 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.902", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.904" = type { %"class.WTF::VectorBuffer.905" }
%"class.WTF::VectorBuffer.905" = type { %"class.WTF::VectorBufferBase.59" }
%class.scoped_refptr.908 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.909", %"class.WTF::Vector.911" }
%"class.WTF::RefCounted.909" = type { %"class.base::RefCounted.910" }
%"class.base::RefCounted.910" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { %"struct.std::__1::pair.914"*, i32, i32 }
%"struct.std::__1::pair.914" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.917 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.918", [4 x i8], %"class.WTF::Vector.920" }
%"class.WTF::RefCounted.918" = type { %"class.base::RefCounted.919" }
%"class.base::RefCounted.919" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.922", [28 x i8] }>
%"class.WTF::VectorBufferBase.922" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.925" = type { %"class.blink::PersistentBase.926" }
%"class.blink::PersistentBase.926" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.927" = type { %"class.blink::PersistentBase.928" }
%"class.blink::PersistentBase.928" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.931", %"class.blink::Member.933" }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.935" = type { %class.scoped_refptr.936 }
%class.scoped_refptr.936 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.937", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.937" = type { %"class.base::RefCounted.938" }
%"class.base::RefCounted.938" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.939" = type { %class.scoped_refptr.940 }
%class.scoped_refptr.940 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.941", [4 x i8], %"class.blink::DataRef.943", %"class.blink::DataRef.1009", %"class.blink::TransformOperations", %class.scoped_refptr.917, %"class.blink::Persistent.1138", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.941" = type { %"class.base::RefCounted.942" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.943" = type { %class.scoped_refptr.944 }
%class.scoped_refptr.944 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.945", [4 x i8], %"class.blink::DataRef.947", %"class.blink::Persistent.985", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.945" = type { %"class.base::RefCounted.946" }
%"class.base::RefCounted.946" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.947" = type { %class.scoped_refptr.948 }
%class.scoped_refptr.948 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.949", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.967, %class.scoped_refptr.970, %class.scoped_refptr.973, %class.scoped_refptr.976, %class.scoped_refptr.977, %class.scoped_refptr.978, %"class.blink::Persistent.985", %"class.blink::Persistent.1000", %"class.absl::optional.1004", %"class.absl::optional.1004", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.949" = type { %"class.base::RefCounted.950" }
%"class.base::RefCounted.950" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.951", %"class.std::__1::unique_ptr.956" }
%"class.WTF::Vector.951" = type { %"class.WTF::VectorBuffer.952" }
%"class.WTF::VectorBuffer.952" = type { %"class.WTF::VectorBufferBase.953" }
%"class.WTF::VectorBufferBase.953" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.959", %"class.WTF::Vector.951", i32, i32 }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.967 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.968", [4 x i8] }>
%"class.WTF::RefCounted.968" = type { %"class.base::RefCounted.969" }
%"class.base::RefCounted.969" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.970 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.971", [4 x i8] }>
%"class.WTF::RefCounted.971" = type { %"class.base::RefCounted.972" }
%"class.base::RefCounted.972" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.973 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.974" }>
%"class.WTF::RefCounted.974" = type { %"class.base::RefCounted.975" }
%"class.base::RefCounted.975" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.976 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.977 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.978 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.979", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.981" }
%"class.blink::DataRef.981" = type { %class.scoped_refptr.982 }
%class.scoped_refptr.982 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.925", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.983" }
%"class.WTF::RefCounted.983" = type { %"class.base::RefCounted.984" }
%"class.base::RefCounted.984" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1000" = type { %"class.blink::PersistentBase.1001" }
%"class.blink::PersistentBase.1001" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.970, %"class.blink::Member.895", i32, [4 x i8] }>
%"class.absl::optional.1004" = type { %"class.absl::optional_internal::optional_data.1005" }
%"class.absl::optional_internal::optional_data.1005" = type { %"class.absl::optional_internal::optional_data_base.1006" }
%"class.absl::optional_internal::optional_data_base.1006" = type { %"class.absl::optional_internal::optional_data_dtor_base.1007" }
%"class.absl::optional_internal::optional_data_dtor_base.1007" = type { i8, [3 x i8], %union.anon.1008 }
%union.anon.1008 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.985" = type { %"class.blink::PersistentBase.986" }
%"class.blink::PersistentBase.986" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.989" }
%"class.blink::HeapVector.989" = type { %"class.WTF::Vector.992" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.blink::Member.995"*, i32, i32 }
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1009" = type { %class.scoped_refptr.1010 }
%class.scoped_refptr.1010 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1011", %"class.blink::DataRef.1013", %"class.blink::DataRef.1017", %"class.blink::DataRef.1026", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1050", %"class.std::__1::unique_ptr.1066", %"class.std::__1::unique_ptr.1104", %"class.std::__1::unique_ptr.1115", %"class.std::__1::unique_ptr.1126", %"class.WTF::Vector.866", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1011" = type { %"class.base::RefCounted.1012" }
%"class.base::RefCounted.1012" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1013" = type { %class.scoped_refptr.1014 }
%class.scoped_refptr.1014 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1015", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1017" = type { %class.scoped_refptr.1018 }
%class.scoped_refptr.1018 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1019", [4 x i8], %"class.WTF::Vector.1021", i8, [7 x i8] }>
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1021" = type { %"class.WTF::VectorBuffer.1022" }
%"class.WTF::VectorBuffer.1022" = type { %"class.WTF::VectorBufferBase.1023" }
%"class.WTF::VectorBufferBase.1023" = type { i32*, i32, i32 }
%"class.blink::DataRef.1026" = type { %class.scoped_refptr.1027 }
%class.scoped_refptr.1027 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1028", [4 x i8], %"class.WTF::HashMap.1030", %"class.WTF::HashMap.1030", %"class.WTF::HashMap.1030", %"class.WTF::HashMap.1030", %"class.WTF::HashMap.1030", %"class.WTF::HashMap.1030", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1045", %"class.WTF::Vector.951", %"class.WTF::Vector.951", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1028" = type { %"class.base::RefCounted.1029" }
%"class.base::RefCounted.1029" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1034"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1034" = type { %"class.WTF::String", %"class.WTF::Vector.1035" }
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037" }
%"class.WTF::VectorBufferBase.1037" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1040" = type { %"class.WTF::HashTable.1041" }
%"class.WTF::HashTable.1041" = type <{ %"struct.WTF::KeyValuePair.1044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1044" = type { i64, %"class.WTF::Vector.866" }
%"class.WTF::HashMap.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1058", %"class.absl::optional.1058", %"class.absl::optional.1058" }
%"class.absl::optional.1058" = type { %"class.absl::optional_internal::optional_data.1059" }
%"class.absl::optional_internal::optional_data.1059" = type { %"class.absl::optional_internal::optional_data_base.1060" }
%"class.absl::optional_internal::optional_data_base.1060" = type { %"class.absl::optional_internal::optional_data_dtor_base.1061" }
%"class.absl::optional_internal::optional_data_dtor_base.1061" = type { i8, %union.anon.1062 }
%union.anon.1062 = type { i32 }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.904", %"class.WTF::Vector.1081", %"class.WTF::Vector.1069", %"class.WTF::Vector.1086", %"class.WTF::Vector.1091", %"class.WTF::Vector.1096" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1069", %"class.WTF::Vector.1069", %"class.WTF::Vector.1074" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %class.scoped_refptr.1077*, i32, i32 }
%class.scoped_refptr.1077 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1078" }
%"class.base::RefCountedThreadSafe.1078" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1081" = type { %"class.WTF::VectorBuffer.1082" }
%"class.WTF::VectorBuffer.1082" = type { %"class.WTF::VectorBufferBase.1083" }
%"class.WTF::VectorBufferBase.1083" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { double*, i32, i32 }
%"class.WTF::Vector.1086" = type { %"class.WTF::VectorBuffer.1087" }
%"class.WTF::VectorBuffer.1087" = type { %"class.WTF::VectorBufferBase.1088" }
%"class.WTF::VectorBufferBase.1088" = type { i32*, i32, i32 }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { i32*, i32, i32 }
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1107" }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1118" }
%"class.WTF::Vector.1118" = type { %"class.WTF::VectorBuffer.1119" }
%"class.WTF::VectorBuffer.1119" = type { %"class.WTF::VectorBufferBase.1120" }
%"class.WTF::VectorBufferBase.1120" = type { %"class.blink::Persistent.925"*, i32, i32 }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.925", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1132" }
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %class.scoped_refptr.1135*, i32, i32 }
%class.scoped_refptr.1135 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.974", [4 x i8] }>
%"class.blink::Persistent.1138" = type { %"class.blink::PersistentBase.1139" }
%"class.blink::PersistentBase.1139" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1142" }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1144" = type { %class.scoped_refptr.1145 }
%class.scoped_refptr.1145 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1146", [4 x i8], %"class.blink::DataRef.1148", %"class.blink::DataRef.1152", %"class.blink::DataRef.1174", %"class.blink::DataRef.1192", %"class.blink::DataRef.1204", %"class.blink::DataRef.1208", %class.scoped_refptr.1178, i32, [4 x i8] }>
%"class.WTF::RefCounted.1146" = type { %"class.base::RefCounted.1147" }
%"class.base::RefCounted.1147" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1148" = type { %class.scoped_refptr.1149 }
%class.scoped_refptr.1149 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1150", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1150" = type { %"class.base::RefCounted.1151" }
%"class.base::RefCounted.1151" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1152" = type { %class.scoped_refptr.1153 }
%class.scoped_refptr.1153 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1154", %class.scoped_refptr.1156, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1154" = type { %"class.base::RefCounted.1155" }
%"class.base::RefCounted.1155" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1156 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1157", %"class.std::__1::unique_ptr.1163", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.971" }>
%"class.std::__1::unique_ptr.1157" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1174" = type { %class.scoped_refptr.1175 }
%class.scoped_refptr.1175 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1176", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1176" = type { %"class.base::RefCounted.1177" }
%"class.base::RefCounted.1177" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1178, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1192" = type { %class.scoped_refptr.1193 }
%class.scoped_refptr.1193 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1194", [4 x i8], %class.scoped_refptr.1196, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1194" = type { %"class.base::RefCounted.1195" }
%"class.base::RefCounted.1195" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1196 = type { %"class.base::RefCountedData.1197"* }
%"class.base::RefCountedData.1197" = type { %"class.base::RefCountedThreadSafe.1198", %"class.WTF::Vector.1199" }
%"class.base::RefCountedThreadSafe.1198" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1199" = type { %"class.WTF::VectorBuffer.1200" }
%"class.WTF::VectorBuffer.1200" = type { %"class.WTF::VectorBufferBase.1201" }
%"class.WTF::VectorBufferBase.1201" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1204" = type { %class.scoped_refptr.1205 }
%class.scoped_refptr.1205 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1206", %class.scoped_refptr.1178, %class.scoped_refptr.1178, %class.scoped_refptr.1178 }
%"class.WTF::RefCounted.1206" = type { %"class.base::RefCounted.1207" }
%"class.base::RefCounted.1207" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1208" = type { %class.scoped_refptr.1209 }
%class.scoped_refptr.1209 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1210", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1210" = type { %"class.base::RefCounted.1211" }
%"class.base::RefCounted.1211" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1178 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1179", %"class.blink::Persistent.1181", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1179" = type { %"class.base::RefCounted.1180" }
%"class.base::RefCounted.1180" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1181" = type { %"class.blink::PersistentBase.1182" }
%"class.blink::PersistentBase.1182" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.105", %"class.blink::HeapHashMap.1185" }
%"class.blink::HeapHashMap.1185" = type { %"class.WTF::HashMap.1188" }
%"class.WTF::HashMap.1188" = type { %"class.WTF::HashTable.1189" }
%"class.WTF::HashTable.1189" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%"class.blink::DataRef.1212" = type { %class.scoped_refptr.1213 }
%class.scoped_refptr.1213 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1214", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1214" = type { %"class.base::RefCounted.1215" }
%"class.base::RefCounted.1215" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1216" = type { %class.scoped_refptr.1217 }
%class.scoped_refptr.1217 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1218", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1218" = type { %"class.base::RefCounted.1219" }
%"class.base::RefCounted.1219" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1220" = type { %class.scoped_refptr.1221 }
%class.scoped_refptr.1221 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1222", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1222" = type { %"class.base::RefCounted.1223" }
%"class.base::RefCounted.1223" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1224" = type { %class.scoped_refptr.1225 }
%class.scoped_refptr.1225 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1226", %class.scoped_refptr.1228 }
%"class.WTF::RefCounted.1226" = type { %"class.base::RefCounted.1227" }
%"class.base::RefCounted.1227" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1228 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1387", %"class.blink::StyleVariables", %class.scoped_refptr.1228 }
%"class.WTF::RefCounted.1387" = type { %"class.base::RefCounted.1388" }
%"class.base::RefCounted.1388" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1229" = type { %"class.base::RefCounted.1230" }
%"class.base::RefCounted.1230" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1234" }
%"class.std::__1::unique_ptr.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.WTF::Vector.1237"* }
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239", [32 x i8] }
%"class.WTF::VectorBufferBase.1239" = type { %class.scoped_refptr.768*, i32, i32 }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1401", %"class.blink::HeapHashSet.1410" }
%"class.blink::HeapVector.1401" = type { %"class.WTF::Vector.1404" }
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %"class.blink::Member.1407"*, i32, i32 }
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1410" = type { %"class.WTF::HashSet.1413" }
%"class.WTF::HashSet.1413" = type { %"class.WTF::HashTable.1414" }
%"class.WTF::HashTable.1414" = type <{ %"class.blink::Member.1407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::HeapHashSet.1420"* }
%"class.blink::HeapHashSet.1420" = type opaque
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.840", %"class.blink::DataRef.935", %"class.blink::DataRef.939", %"class.blink::DataRef.1144", %"class.blink::DataRef.1212", %"class.blink::DataRef.1216", %"class.blink::DataRef.1220", %"class.blink::DataRef.1224", [20 x i8], [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.1456" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.1480" = type { i8 }
%"class.blink::HeapHashTableBacking.1491" = type { i8 }

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_S8_SI_EERPS3_PSB_EENS_18HashTableAddResultISJ_SD_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6ExpandEPSD_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE8RehashToEPSD_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS1_12KeyValuePairIS5_NS3_INS_11HeapHashSetIS5_NS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EEEEEEEENS1_24KeyValuePairKeyExtractorES9_NS1_18HashMapValueTraitsISB_NSA_ISD_EEEESB_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_12FilterEffectEEENS_12KeyValuePairIS6_NS4_INS3_11HeapHashSetIS6_NS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_12FilterEffectEEENS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_18HashMapValueTraitsISB_NSA_ISD_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EEPS3_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS_6MemberINS_12FilterEffectEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSC_IS9_EEEEEEvPT_ = comdat any

$_ZN5blink10TraceTraitINS_36SVGFilterPrimitiveStandardAttributesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS1_12KeyValuePairIS5_NS_6MemberINS_12FilterEffectEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS6_NS3_6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS9_j = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS5_NS2_6MemberINS2_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_12FilterEffectEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_12FilterEffectEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12FilterEffectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12FilterEffectEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_11SourceAlphaEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_17PaintFilterEffectEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index = comdat any

@_ZZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name = internal global i64 0, align 8
@.str = private unnamed_addr constant [14 x i8] c"SourceGraphic\00", align 1
@_ZZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"SourceAlpha\00", align 1
@_ZZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"FillPaint\00", align 1
@_ZZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"StrokePaint\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_12FilterEffectEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [195 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashSet<blink::Member<blink::FilterEffect>, WTF::MemberHash<blink::FilterEffect>, WTF::HashTraits<blink::Member<blink::FilterEffect> > >]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS6_NS4_INS1_11HeapHashSetIS6_NS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [757 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::FilterEffect>, WTF::KeyValuePair<blink::Member<blink::FilterEffect>, blink::Member<blink::HeapHashSet<blink::Member<blink::FilterEffect>, WTF::MemberHash<blink::FilterEffect>, WTF::HashTraits<blink::Member<blink::FilterEffect> > > > >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::FilterEffect>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::FilterEffect> >, WTF::HashTraits<blink::Member<blink::HeapHashSet<blink::Member<blink::FilterEffect>, WTF::MemberHash<blink::FilterEffect>, WTF::HashTraits<blink::Member<blink::FilterEffect> > > > > >, WTF::HashTraits<blink::Member<blink::FilterEffect> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_12FilterEffectEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [356 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::FilterEffect>, blink::Member<blink::FilterEffect>, WTF::IdentityExtractor, WTF::MemberHash<blink::FilterEffect>, WTF::HashTraits<blink::Member<blink::FilterEffect> >, WTF::HashTraits<blink::Member<blink::FilterEffect> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS6_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [635 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::SVGFilterPrimitiveStandardAttributes>, WTF::KeyValuePair<blink::WeakMember<blink::SVGFilterPrimitiveStandardAttributes>, blink::Member<blink::FilterEffect> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::SVGFilterPrimitiveStandardAttributes>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::SVGFilterPrimitiveStandardAttributes> >, WTF::HashTraits<blink::Member<blink::FilterEffect> > >, WTF::HashTraits<blink::WeakMember<blink::SVGFilterPrimitiveStandardAttributes> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_12FilterEffectEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [414 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::AtomicString, WTF::KeyValuePair<WTF::AtomicString, blink::Member<blink::FilterEffect> >, WTF::KeyValuePairKeyExtractor, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::Member<blink::FilterEffect> > >, WTF::HashTraits<WTF::AtomicString>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FilterEffectEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FilterEffect]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12FilterEffectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12FilterEffectEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink21SVGFilterGraphNodeMapC1Ev = hidden unnamed_addr alias void (%"class.blink::SVGFilterGraphNodeMap"*), void (%"class.blink::SVGFilterGraphNodeMap"*)* @_ZN5blink21SVGFilterGraphNodeMapC2Ev
@_ZN5blink16SVGFilterBuilderC1EPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapEPKN2cc10PaintFlagsES8_ = hidden unnamed_addr alias void (%"class.blink::SVGFilterBuilder"*, %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"*, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*), void (%"class.blink::SVGFilterBuilder"*, %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"*, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*)* @_ZN5blink16SVGFilterBuilderC2EPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapEPKN2cc10PaintFlagsES8_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SVGFilterGraphNodeMapC2Ev(%"class.blink::SVGFilterGraphNodeMap"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SVGFilterGraphNodeMap"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #9
  %3 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap.17"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SVGFilterGraphNodeMap16AddBuiltinEffectEPNS_12FilterEffectE(%"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::FilterEffect"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FilterEffect"*, align 8
  %4 = alloca %"class.blink::HeapHashSet"*, align 8
  store %"class.blink::FilterEffect"* %1, %"class.blink::FilterEffect"** %3, align 8
  %5 = bitcast %"class.blink::HeapHashSet"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #9
  %7 = getelementptr inbounds i8, i8* %6, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast %"class.blink::HeapHashSet"** %4 to i8**
  store i8* %6, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_S8_SI_EERPS3_PSB_EENS_18HashTableAddResultISJ_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %12, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %3, %"class.blink::HeapHashSet"** nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SVGFilterGraphNodeMap12AddPrimitiveERNS_36SVGFilterPrimitiveStandardAttributesEPNS_12FilterEffectE(%"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"* dereferenceable(208), %"class.blink::FilterEffect"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FilterEffect"*, align 8
  %5 = alloca %"class.blink::HeapHashSet"*, align 8
  %6 = alloca %"class.blink::SVGFilterPrimitiveStandardAttributes"*, align 8
  store %"class.blink::FilterEffect"* %2, %"class.blink::FilterEffect"** %4, align 8
  %7 = bitcast %"class.blink::HeapHashSet"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #9
  %9 = getelementptr inbounds i8, i8* %8, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = bitcast %"class.blink::HeapHashSet"** %5 to i8**
  store i8* %8, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_S8_SI_EERPS3_PSB_EENS_18HashTableAddResultISJ_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %14, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %4, %"class.blink::HeapHashSet"** nonnull dereferenceable(8) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %16 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %4, align 8
  %17 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %28, %3
  %25 = bitcast %"class.blink::SVGFilterPrimitiveStandardAttributes"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  store %"class.blink::SVGFilterPrimitiveStandardAttributes"* %1, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %6, align 8
  %26 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = call { %"struct.WTF::KeyValuePair.23"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EEPS3_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.21"* %26, %"class.blink::SVGFilterPrimitiveStandardAttributes"** nonnull dereferenceable(8) %6, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  ret void

28:                                               ; preds = %3, %28
  %29 = phi %"class.blink::Member"* [ %38, %28 ], [ %18, %3 ]
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %30, align 8
  %32 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %14, %"class.blink::FilterEffect"* %31) #9
  %33 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %32, 0
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %35, i64 0, i32 0, i32 0
  %37 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.15"* %36, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %4, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %4) #9
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %29, i64 1
  %39 = icmp eq %"class.blink::Member"* %38, %22
  br i1 %39, label %24, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SVGFilterGraphNodeMap26InvalidateDependentEffectsEPNS_12FilterEffectE(%"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::FilterEffect"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 7, i64 0, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 7, i64 1, i32 0
  %8 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %7, align 8
  %9 = icmp eq %"class.cc::PaintFilter"* %8, null
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 7, i64 2, i32 0
  %12 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %11, align 8
  %13 = icmp eq %"class.cc::PaintFilter"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 7, i64 3, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = icmp eq %"class.cc::PaintFilter"* %16, null
  br i1 %17, label %60, label %18

18:                                               ; preds = %14, %2, %6, %10
  tail call void @_ZN5blink12FilterEffect19DisposeImageFiltersEv(%"class.blink::FilterEffect"* %1) #9
  %19 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %19, %"class.blink::FilterEffect"* %1) #9
  %21 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %20, 0
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %23, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %23, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %23, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 %31
  br i1 %26, label %60, label %33

33:                                               ; preds = %18
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %33, %39
  %36 = phi %"class.blink::Member"* [ %40, %39 ], [ %28, %33 ]
  %37 = bitcast %"class.blink::Member"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 1
  %41 = icmp eq %"class.blink::Member"* %40, %32
  br i1 %41, label %60, label %35

42:                                               ; preds = %35, %33
  %43 = phi %"class.blink::Member"* [ %28, %33 ], [ %36, %35 ]
  %44 = icmp eq %"class.blink::Member"* %43, %32
  br i1 %44, label %60, label %45

45:                                               ; preds = %42, %58
  %46 = phi %"class.blink::Member"* [ %52, %58 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %47, align 8
  tail call void @_ZN5blink21SVGFilterGraphNodeMap26InvalidateDependentEffectsEPNS_12FilterEffectE(%"class.blink::SVGFilterGraphNodeMap"* %0, %"class.blink::FilterEffect"* %48)
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 1
  %50 = icmp eq %"class.blink::Member"* %49, %32
  br i1 %50, label %60, label %51

51:                                               ; preds = %45, %55
  %52 = phi %"class.blink::Member"* [ %56, %55 ], [ %49, %45 ]
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  switch i64 %54, label %58 [
    i64 -1, label %55
    i64 0, label %55
  ]

55:                                               ; preds = %51, %51
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %52, i64 1
  %57 = icmp eq %"class.blink::Member"* %56, %32
  br i1 %57, label %60, label %51

58:                                               ; preds = %51
  %59 = icmp eq %"class.blink::Member"* %52, %32
  br i1 %59, label %60, label %45

60:                                               ; preds = %39, %45, %58, %55, %18, %42, %14
  ret void
}

declare void @_ZN5blink12FilterEffect19DisposeImageFiltersEv(%"class.blink::FilterEffect"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21SVGFilterGraphNodeMap5TraceEPNS_7VisitorE(%"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapHashMap.17"* %4 to i8*
  %6 = bitcast %"class.blink::HeapHashMap.17"* %4 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = inttoptr i64 %7 to %"struct.WTF::KeyValuePair.23"*
  %9 = bitcast %"class.blink::HeapHashMap.17"* %4 to i8**
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %11 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, i64 11
  %13 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8** %9) #9
  %14 = inttoptr i64 %7 to i8*
  %15 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.23"**
  store %"struct.WTF::KeyValuePair.23"* %8, %"struct.WTF::KeyValuePair.23"** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv, void (%"class.blink::Visitor"*, i8*)** %17, align 8
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %19, i64 10
  %21 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8* %14, i8** %9, i8* %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS5_NS2_6MemberINS2_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  %22 = bitcast %"class.blink::SVGFilterGraphNodeMap"* %0 to i64*
  %23 = load atomic i64, i64* %22 monotonic, align 8
  %24 = bitcast %"class.blink::SVGFilterGraphNodeMap"* %0 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #9
  %28 = icmp eq i64 %23, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %2
  %30 = inttoptr i64 %23 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGFilterBuilderC2EPNS_12FilterEffectEPNS_21SVGFilterGraphNodeMapEPKN2cc10PaintFlagsES8_(%"class.blink::SVGFilterBuilder"*, %"class.blink::FilterEffect"*, %"class.blink::SVGFilterGraphNodeMap"*, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FilterEffect"*, align 8
  %7 = alloca %"class.blink::SourceAlpha"*, align 8
  %8 = alloca %"class.blink::PaintFilterEffect"*, align 8
  %9 = alloca %"class.blink::PaintFilterEffect"*, align 8
  store %"class.blink::FilterEffect"* %1, %"class.blink::FilterEffect"** %6, align 8
  %10 = bitcast %"class.blink::SVGFilterBuilder"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #9
  %11 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::HeapHashMap.686"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #9
  %13 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 2
  store %"class.blink::FilterEffect"* null, %"class.blink::FilterEffect"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 3
  store %"class.blink::SVGFilterGraphNodeMap"* %2, %"class.blink::SVGFilterGraphNodeMap"** %14, align 8
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21, !prof !2

17:                                               ; preds = %5
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name) #9
  br label %21

21:                                               ; preds = %5, %17, %20
  %22 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = call { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"* %22, %"class.WTF::AtomicString"* dereferenceable(8) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name to %"class.WTF::AtomicString"*), %"class.blink::FilterEffect"** nonnull dereferenceable(8) %6) #9
  %24 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name to i8*) acquire, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30, !prof !2

26:                                               ; preds = %21
  %27 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name) #9
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name) #9
  br label %30

30:                                               ; preds = %21, %26, %29
  %31 = bitcast %"class.blink::SourceAlpha"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 88) #9
  %33 = bitcast i8* %32 to %"class.blink::SourceAlpha"*
  %34 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %6, align 8
  call void @_ZN5blink11SourceAlphaC1EPNS_12FilterEffectE(%"class.blink::SourceAlpha"* %33, %"class.blink::FilterEffect"* %34) #9
  %35 = getelementptr inbounds i8, i8* %32, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = bitcast %"class.blink::SourceAlpha"** %7 to i8**
  store i8* %32, i8** %39, align 8
  %40 = call { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_11SourceAlphaEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"* %22, %"class.WTF::AtomicString"* dereferenceable(8) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords11SourceAlphaEvE19s_source_alpha_name to %"class.WTF::AtomicString"*), %"class.blink::SourceAlpha"** nonnull dereferenceable(8) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %41 = icmp eq %"class.cc::PaintFlags"* %3, null
  br i1 %41, label %62, label %42

42:                                               ; preds = %30
  %43 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name to i8*) acquire, align 8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49, !prof !2

45:                                               ; preds = %42
  %46 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name) #9
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name) #9
  br label %49

49:                                               ; preds = %42, %45, %48
  %50 = bitcast %"class.blink::PaintFilterEffect"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %6, align 8
  %52 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Filter"*, %"class.blink::Filter"** %52, align 8
  %54 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 160) #9
  %55 = bitcast i8* %54 to %"class.blink::PaintFilterEffect"*
  call void @_ZN5blink17PaintFilterEffectC1EPNS_6FilterERKN2cc10PaintFlagsE(%"class.blink::PaintFilterEffect"* %55, %"class.blink::Filter"* %53, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %3) #9
  %56 = getelementptr inbounds i8, i8* %54, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  %60 = bitcast %"class.blink::PaintFilterEffect"** %8 to i8**
  store i8* %54, i8** %60, align 8
  %61 = call { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_17PaintFilterEffectEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"* %22, %"class.WTF::AtomicString"* dereferenceable(8) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords9FillPaintEvE17s_fill_paint_name to %"class.WTF::AtomicString"*), %"class.blink::PaintFilterEffect"** nonnull dereferenceable(8) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  br label %62

62:                                               ; preds = %30, %49
  %63 = icmp eq %"class.cc::PaintFlags"* %4, null
  br i1 %63, label %84, label %64

64:                                               ; preds = %62
  %65 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name to i8*) acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %71, !prof !2

67:                                               ; preds = %64
  %68 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name) #9
  br label %71

71:                                               ; preds = %64, %67, %70
  %72 = bitcast %"class.blink::PaintFilterEffect"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %6, align 8
  %74 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Filter"*, %"class.blink::Filter"** %74, align 8
  %76 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64 160) #9
  %77 = bitcast i8* %76 to %"class.blink::PaintFilterEffect"*
  call void @_ZN5blink17PaintFilterEffectC1EPNS_6FilterERKN2cc10PaintFlagsE(%"class.blink::PaintFilterEffect"* %77, %"class.blink::Filter"* %75, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %4) #9
  %78 = getelementptr inbounds i8, i8* %76, i64 -4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = or i16 %80, 1
  store atomic i16 %81, i16* %79 release, align 2
  %82 = bitcast %"class.blink::PaintFilterEffect"** %9 to i8**
  store i8* %76, i8** %82, align 8
  %83 = call { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_17PaintFilterEffectEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"* %22, %"class.WTF::AtomicString"* dereferenceable(8) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords11StrokePaintEvE19s_stroke_paint_name to %"class.WTF::AtomicString"*), %"class.blink::PaintFilterEffect"** nonnull dereferenceable(8) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %84

84:                                               ; preds = %62, %71
  call void @_ZN5blink16SVGFilterBuilder17AddBuiltinEffectsEv(%"class.blink::SVGFilterBuilder"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGFilterBuilder17AddBuiltinEffectsEv(%"class.blink::SVGFilterBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::FilterEffect"*, align 8
  %3 = alloca %"class.blink::HeapHashSet"*, align 8
  %4 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 3
  %5 = load %"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::SVGFilterGraphNodeMap"** %4, align 8
  %6 = icmp eq %"class.blink::SVGFilterGraphNodeMap"* %5, null
  br i1 %6, label %71, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %12, i64 %15
  br i1 %10, label %71, label %17

17:                                               ; preds = %7
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"struct.WTF::KeyValuePair.692"* [ %24, %23 ], [ %12, %17 ]
  %21 = bitcast %"struct.WTF::KeyValuePair.692"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %20, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair.692"* %24, %16
  br i1 %25, label %71, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"struct.WTF::KeyValuePair.692"* [ %12, %17 ], [ %20, %19 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair.692"* %27, %16
  br i1 %28, label %71, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::FilterEffect"** %2 to i8*
  %31 = bitcast %"class.blink::FilterEffect"** %2 to i64*
  %32 = bitcast %"class.blink::HeapHashSet"** %3 to i8*
  %33 = bitcast %"class.blink::HeapHashSet"** %3 to i8**
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %27, i64 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.blink::FilterEffect"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  store i64 %36, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  %37 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 20, i1 false) #9
  %38 = getelementptr inbounds i8, i8* %37, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  store i8* %37, i8** %33, align 8
  %42 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %5, i64 0, i32 0, i32 0, i32 0
  %43 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_S8_SI_EERPS3_PSB_EENS_18HashTableAddResultISJ_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %42, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %2, %"class.blink::HeapHashSet"** nonnull dereferenceable(8) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %27, i64 1
  %45 = icmp eq %"struct.WTF::KeyValuePair.692"* %44, %16
  br i1 %45, label %71, label %46

46:                                               ; preds = %29, %53
  %47 = phi %"struct.WTF::KeyValuePair.692"* [ %54, %53 ], [ %44, %29 ]
  %48 = bitcast %"struct.WTF::KeyValuePair.692"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  switch i64 %49, label %55 [
    i64 -1, label %50
    i64 0, label %50
  ]

50:                                               ; preds = %46, %46
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %47, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.692"* %51, %16
  br i1 %52, label %71, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.692"* [ %51, %50 ], [ %69, %57 ]
  br label %46

55:                                               ; preds = %46
  %56 = icmp eq %"struct.WTF::KeyValuePair.692"* %47, %16
  br i1 %56, label %71, label %57

57:                                               ; preds = %55
  %58 = load %"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::SVGFilterGraphNodeMap"** %4, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %47, i64 0, i32 1, i32 0, i32 0
  %60 = bitcast %"class.blink::FilterEffect"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  store i64 %61, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 20, i1 false) #9
  %63 = getelementptr inbounds i8, i8* %62, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  store i8* %62, i8** %33, align 8
  %67 = getelementptr inbounds %"class.blink::SVGFilterGraphNodeMap", %"class.blink::SVGFilterGraphNodeMap"* %58, i64 0, i32 0, i32 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_S8_SI_EERPS3_PSB_EENS_18HashTableAddResultISJ_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %67, %"class.blink::FilterEffect"** nonnull dereferenceable(8) %2, %"class.blink::HeapHashSet"** nonnull dereferenceable(8) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %47, i64 1
  %70 = icmp eq %"struct.WTF::KeyValuePair.692"* %69, %16
  br i1 %70, label %71, label %53

71:                                               ; preds = %23, %55, %57, %50, %29, %7, %26, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink16SVGFilterBuilder25ResolveInterpolationSpaceENS_19EColorInterpolationE(i32) local_unnamed_addr #3 align 2 {
  %2 = icmp eq i32 %0, 2
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGFilterBuilder10BuildGraphEPNS_6FilterERNS_16SVGFilterElementERKNS_9FloatRectE(%"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*, %"class.blink::SVGFilterElement"* dereferenceable(232), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::SVGFilterElement", %"class.blink::SVGFilterElement"* %2, i64 0, i32 0
  %7 = tail call fastcc i32 @_ZN5blinkL28ColorInterpolationForElementERNS_10SVGElementENS_19EColorInterpolationE(%"class.blink::SVGElement"* dereferenceable(168) %6, i32 0)
  %8 = getelementptr inbounds %"class.blink::SVGFilterElement", %"class.blink::SVGFilterElement"* %2, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.blink::SVGAnimatedEnumeration"*, %"class.blink::SVGAnimatedEnumeration"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGAnimatedEnumeration", %"class.blink::SVGAnimatedEnumeration"* %9, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::SVGEnumeration"*, %"class.blink::SVGEnumeration"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGEnumeration", %"class.blink::SVGEnumeration"* %11, i64 0, i32 1
  %13 = load i16, i16* %12, align 8
  %14 = zext i16 %13 to i32
  %15 = getelementptr inbounds %"class.blink::SVGFilterElement", %"class.blink::SVGFilterElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %4, %24
  %19 = phi %"class.blink::Node"* [ %26, %24 ], [ %16, %4 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 32
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %33, label %18

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 3
  %30 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  %31 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  br label %34

33:                                               ; preds = %24, %123, %4
  ret void

34:                                               ; preds = %128, %28
  %35 = phi %"class.blink::Node"* [ %19, %28 ], [ %126, %128 ]
  %36 = bitcast %"class.blink::Node"* %35 to %"class.blink::SVGElement"*
  %37 = bitcast %"class.blink::Node"* %35 to i1 (%"class.blink::SVGElement"*)***
  %38 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %38, i64 158
  %40 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.blink::SVGElement"* nonnull %36) #9
  br i1 %41, label %42, label %122

42:                                               ; preds = %34
  %43 = bitcast %"class.blink::Node"* %35 to %"class.blink::SVGFilterPrimitiveStandardAttributes"*
  %44 = bitcast %"class.blink::Node"* %35 to %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)***
  %45 = load %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)**, %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)*, %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)** %45, i64 167
  %47 = load %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)*, %"class.blink::FilterEffect"* (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterBuilder"*, %"class.blink::Filter"*)** %46, align 8
  %48 = call %"class.blink::FilterEffect"* %47(%"class.blink::SVGFilterPrimitiveStandardAttributes"* nonnull %43, %"class.blink::SVGFilterBuilder"* %0, %"class.blink::Filter"* %1) #9
  %49 = icmp eq %"class.blink::FilterEffect"* %48, null
  br i1 %49, label %122, label %50

50:                                               ; preds = %42
  %51 = load %"class.blink::SVGFilterGraphNodeMap"*, %"class.blink::SVGFilterGraphNodeMap"** %29, align 8
  %52 = icmp eq %"class.blink::SVGFilterGraphNodeMap"* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_ZN5blink21SVGFilterGraphNodeMap12AddPrimitiveERNS_36SVGFilterPrimitiveStandardAttributesEPNS_12FilterEffectE(%"class.blink::SVGFilterGraphNodeMap"* nonnull %51, %"class.blink::SVGFilterPrimitiveStandardAttributes"* nonnull dereferenceable(208) %43, %"class.blink::FilterEffect"* nonnull %48)
  br label %54

54:                                               ; preds = %50, %53
  call void @_ZNK5blink36SVGFilterPrimitiveStandardAttributes21SetStandardAttributesEPNS_12FilterEffectENS_12SVGUnitTypes11SVGUnitTypeERKNS_9FloatRectE(%"class.blink::SVGFilterPrimitiveStandardAttributes"* nonnull %43, %"class.blink::FilterEffect"* nonnull %48, i32 %14, %"class.blink::FloatRect"* dereferenceable(16) %3) #9
  %55 = call fastcc i32 @_ZN5blinkL28ColorInterpolationForElementERNS_10SVGElementENS_19EColorInterpolationE(%"class.blink::SVGElement"* nonnull dereferenceable(168) %36, i32 %7)
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i32
  %58 = bitcast %"class.blink::FilterEffect"* %48 to void (%"class.blink::FilterEffect"*, i32)***
  %59 = load void (%"class.blink::FilterEffect"*, i32)**, void (%"class.blink::FilterEffect"*, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::FilterEffect"*, i32)*, void (%"class.blink::FilterEffect"*, i32)** %59, i64 7
  %61 = load void (%"class.blink::FilterEffect"*, i32)*, void (%"class.blink::FilterEffect"*, i32)** %60, align 8
  call void %61(%"class.blink::FilterEffect"* nonnull %48, i32 %57) #9
  %62 = call zeroext i1 @_ZNK5blink12FilterEffect17InputsTaintOriginEv(%"class.blink::FilterEffect"* nonnull %48) #9
  br i1 %62, label %69, label %63

63:                                               ; preds = %54
  %64 = bitcast %"class.blink::Node"* %35 to i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)***
  %65 = load i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)**, i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)*, i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)** %65, i64 169
  %67 = load i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)*, i1 (%"class.blink::SVGFilterPrimitiveStandardAttributes"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.blink::SVGFilterPrimitiveStandardAttributes"* nonnull %43) #9
  br i1 %68, label %69, label %71

69:                                               ; preds = %63, %54
  %70 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %48, i64 0, i32 5
  store i8 1, i8* %70, align 1
  br label %71

71:                                               ; preds = %69, %63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 3, i32 0, i32 0, i32 1
  %73 = bitcast %"class.blink::TraceWrapperV8Reference"* %72 to %"class.blink::SVGAnimatedString"**
  %74 = load %"class.blink::SVGAnimatedString"*, %"class.blink::SVGAnimatedString"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::SVGAnimatedString", %"class.blink::SVGAnimatedString"* %74, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::SVGString"*, %"class.blink::SVGString"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::SVGString", %"class.blink::SVGString"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %103, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 acquire, align 4
  %83 = and i32 %82, 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %80
  %86 = load atomic i32, i32* %81 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #9
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !3

98:                                               ; preds = %89
  call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %103

101:                                              ; preds = %80
  %102 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %78) #9
  br label %103

103:                                              ; preds = %71, %85, %99, %101
  %104 = phi %"class.WTF::StringImpl"* [ %102, %101 ], [ %78, %85 ], [ %78, %99 ], [ null, %71 ]
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  store i64 %105, i64* %31, align 8
  call void @_ZN5blink16SVGFilterBuilder3AddERKN3WTF12AtomicStringEPNS_12FilterEffectE(%"class.blink::SVGFilterBuilder"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::FilterEffect"* nonnull %48)
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %121

121:                                              ; preds = %103, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %122

122:                                              ; preds = %121, %42, %34
  br label %123

123:                                              ; preds = %122, %128
  %124 = phi %"class.blink::Node"* [ %126, %128 ], [ %35, %122 ]
  %125 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %124, i64 0, i32 5, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %33, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %126, i64 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 48
  %132 = icmp eq i32 %131, 32
  br i1 %132, label %34, label %123
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL28ColorInterpolationForElementERNS_10SVGElementENS_19EColorInterpolationE(%"class.blink::SVGElement"* dereferenceable(168), i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %8 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  %12 = select i1 %6, %"class.blink::NodeRenderingData"** %11, %"class.blink::NodeRenderingData"** %10
  %13 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %13, i64 0, i32 1
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %17, label %57

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %19, align 8
  %21 = icmp eq %"class.blink::ElementData"* %20, null
  br i1 %21, label %55, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 536870912
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  tail call void @_ZN5blink7Element32UpdatePresentationAttributeStyleEv(%"class.blink::Element"* %18) #9
  %28 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %19, align 8
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %27, %22
  %32 = phi i32 [ %24, %22 ], [ %30, %27 ]
  %33 = phi %"class.blink::ElementData"* [ %20, %22 ], [ %28, %27 ]
  %34 = and i32 %32, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 1
  %38 = bitcast %"class.blink::ElementData"* %37 to %"class.blink::CSSPropertyValueSet"**
  %39 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %38, align 8
  %40 = icmp eq %"class.blink::CSSPropertyValueSet"* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %36
  %42 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %39, i32 114) #9
  %43 = icmp eq %"class.blink::CSSValue"* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 0, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %55

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 1, i32 1
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 405
  %53 = add nsw i32 %51, -712
  %54 = select i1 %52, i32 0, i32 %53
  br label %55

55:                                               ; preds = %44, %41, %31, %17, %36, %48
  %56 = phi i32 [ %54, %48 ], [ %1, %36 ], [ %1, %17 ], [ %1, %31 ], [ %1, %44 ], [ %1, %41 ]
  ret i32 %56

57:                                               ; preds = %2
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %59 = bitcast %"class.blink::ComputedStyle"** %58 to %"class.blink::ComputedStyleBase"**
  %60 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %60, i64 0, i32 4, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %62, i64 0, i32 9
  %64 = load i32, i32* %63, align 8
  %65 = lshr i32 %64, 15
  %66 = and i32 %65, 3
  ret i32 %66
}

declare void @_ZNK5blink36SVGFilterPrimitiveStandardAttributes21SetStandardAttributesEPNS_12FilterEffectENS_12SVGUnitTypes11SVGUnitTypeERKNS_9FloatRectE(%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::FilterEffect"*, i32, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12FilterEffect17InputsTaintOriginEv(%"class.blink::FilterEffect"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGFilterBuilder3AddERKN3WTF12AtomicStringEPNS_12FilterEffectE(%"class.blink::SVGFilterBuilder"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FilterEffect"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 2
  store %"class.blink::FilterEffect"* %2, %"class.blink::FilterEffect"** %12, align 8
  br label %84

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair.692"* %15, null
  br i1 %16, label %66, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = lshr i32 %23, 8
  %25 = and i32 %24, %20
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %15, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %66, label %31

31:                                               ; preds = %17
  %32 = xor i32 %24, -1
  %33 = lshr i32 %23, 31
  %34 = add nsw i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %55, %31
  %46 = phi %"struct.WTF::KeyValuePair.692"* [ %27, %31 ], [ %60, %55 ]
  %47 = phi i64 [ %26, %31 ], [ %59, %55 ]
  %48 = phi i64 [ 0, %31 ], [ %57, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.692"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp ne i8* %50, inttoptr (i64 -1 to i8*)
  %52 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %53 = icmp eq %"class.WTF::StringImpl"* %5, %52
  %54 = and i1 %51, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %45
  %56 = icmp eq i64 %48, 0
  %57 = select i1 %56, i64 %44, i64 %48
  %58 = add i64 %57, %47
  %59 = and i64 %58, %21
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %15, i64 %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %66, label %45

64:                                               ; preds = %45
  %65 = icmp eq %"struct.WTF::KeyValuePair.692"* %46, null
  br i1 %65, label %66, label %84

66:                                               ; preds = %55, %64, %17, %13
  %67 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 2
  store %"class.blink::FilterEffect"* %2, %"class.blink::FilterEffect"** %67, align 8
  %68 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %69 = tail call { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"* %68, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FilterEffect"** dereferenceable(8) %67) #9
  %70 = extractvalue { %"struct.WTF::KeyValuePair.692"*, i8 } %69, 1
  %71 = and i8 %70, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %84

73:                                               ; preds = %66
  %74 = extractvalue { %"struct.WTF::KeyValuePair.692"*, i8 } %69, 0
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %74, i64 0, i32 1
  %76 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %67, align 8
  %77 = ptrtoint %"class.blink::FilterEffect"* %76 to i64
  %78 = bitcast %"class.blink::Member"* %75 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %73
  %82 = bitcast %"class.blink::FilterEffect"* %76 to i8*
  %83 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #9
  br label %84

84:                                               ; preds = %64, %81, %73, %66, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FilterEffect"* @_ZNK5blink16SVGFilterBuilder13GetEffectByIdERKN3WTF12AtomicStringE(%"class.blink::SVGFilterBuilder"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %124, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %124, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair.692"* %12, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = and i32 %21, %17
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %12, i64 %23
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %67, label %28

28:                                               ; preds = %14
  %29 = xor i32 %21, -1
  %30 = lshr i32 %20, 31
  %31 = add nsw i32 %30, %29
  %32 = shl i32 %31, 12
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 7
  %35 = xor i32 %34, %33
  %36 = shl i32 %35, 2
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 20
  %39 = xor i32 %38, %37
  %40 = or i32 %39, 1
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %52, %28
  %43 = phi %"struct.WTF::KeyValuePair.692"* [ %24, %28 ], [ %57, %52 ]
  %44 = phi i64 [ %23, %28 ], [ %56, %52 ]
  %45 = phi i64 [ 0, %28 ], [ %54, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.692"* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ne i8* %47, inttoptr (i64 -1 to i8*)
  %49 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %50 = icmp eq %"class.WTF::StringImpl"* %4, %49
  %51 = and i1 %48, %50
  br i1 %51, label %61, label %52

52:                                               ; preds = %42
  %53 = icmp eq i64 %45, 0
  %54 = select i1 %53, i64 %41, i64 %45
  %55 = add i64 %54, %44
  %56 = and i64 %55, %18
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %12, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %67, label %42

61:                                               ; preds = %42
  %62 = icmp eq %"struct.WTF::KeyValuePair.692"* %43, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %43, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %64, align 8
  %66 = icmp eq %"class.blink::FilterEffect"* %65, null
  br i1 %66, label %67, label %192

67:                                               ; preds = %52, %14, %10, %61, %63
  %68 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %68, align 8
  %70 = icmp eq %"struct.WTF::KeyValuePair.692"* %69, null
  br i1 %70, label %124, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, -1
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %77, 8
  %79 = and i32 %78, %74
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %69, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %124, label %85

85:                                               ; preds = %71
  %86 = xor i32 %78, -1
  %87 = lshr i32 %77, 31
  %88 = add nsw i32 %87, %86
  %89 = shl i32 %88, 12
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 7
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 2
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 20
  %96 = xor i32 %95, %94
  %97 = or i32 %96, 1
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %109, %85
  %100 = phi %"struct.WTF::KeyValuePair.692"* [ %81, %85 ], [ %114, %109 ]
  %101 = phi i64 [ %80, %85 ], [ %113, %109 ]
  %102 = phi i64 [ 0, %85 ], [ %111, %109 ]
  %103 = bitcast %"struct.WTF::KeyValuePair.692"* %100 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = icmp ne i8* %104, inttoptr (i64 -1 to i8*)
  %106 = bitcast i8* %104 to %"class.WTF::StringImpl"*
  %107 = icmp eq %"class.WTF::StringImpl"* %4, %106
  %108 = and i1 %105, %107
  br i1 %108, label %118, label %109

109:                                              ; preds = %99
  %110 = icmp eq i64 %102, 0
  %111 = select i1 %110, i64 %98, i64 %102
  %112 = add i64 %111, %101
  %113 = and i64 %112, %75
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %69, i64 %113
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %124, label %99

118:                                              ; preds = %99
  %119 = icmp eq %"struct.WTF::KeyValuePair.692"* %100, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %100, i64 0, i32 1, i32 0, i32 0
  %122 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %121, align 8
  %123 = icmp eq %"class.blink::FilterEffect"* %122, null
  br i1 %123, label %124, label %192

124:                                              ; preds = %109, %71, %67, %118, %2, %120, %6
  %125 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 2
  %126 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %125, align 8
  %127 = icmp eq %"class.blink::FilterEffect"* %126, null
  br i1 %127, label %128, label %192

128:                                              ; preds = %124
  %129 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name to i8*) acquire, align 8
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %135, !prof !2

131:                                              ; preds = %128
  %132 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name) #9
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name) #9
  br label %135

135:                                              ; preds = %128, %131, %134
  %136 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %136, align 8
  %138 = icmp eq %"struct.WTF::KeyValuePair.692"* %137, null
  br i1 %138, label %192, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::SVGFilterBuilder", %"class.blink::SVGFilterBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = add i32 %141, -1
  %143 = zext i32 %142 to i64
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119FilterInputKeywords16GetSourceGraphicEvE21s_source_graphic_name to %"class.WTF::StringImpl"**), align 8
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = lshr i32 %146, 8
  %148 = and i32 %147, %142
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %137, i64 %149
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %192, label %154

154:                                              ; preds = %139
  %155 = xor i32 %147, -1
  %156 = lshr i32 %146, 31
  %157 = add nsw i32 %156, %155
  %158 = shl i32 %157, 12
  %159 = xor i32 %158, %157
  %160 = lshr i32 %159, 7
  %161 = xor i32 %160, %159
  %162 = shl i32 %161, 2
  %163 = xor i32 %162, %161
  %164 = lshr i32 %163, 20
  %165 = xor i32 %164, %163
  %166 = or i32 %165, 1
  %167 = zext i32 %166 to i64
  br label %168

168:                                              ; preds = %178, %154
  %169 = phi %"struct.WTF::KeyValuePair.692"* [ %150, %154 ], [ %183, %178 ]
  %170 = phi i64 [ %149, %154 ], [ %182, %178 ]
  %171 = phi i64 [ 0, %154 ], [ %180, %178 ]
  %172 = bitcast %"struct.WTF::KeyValuePair.692"* %169 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = icmp ne i8* %173, inttoptr (i64 -1 to i8*)
  %175 = bitcast i8* %173 to %"class.WTF::StringImpl"*
  %176 = icmp eq %"class.WTF::StringImpl"* %144, %175
  %177 = and i1 %174, %176
  br i1 %177, label %187, label %178

178:                                              ; preds = %168
  %179 = icmp eq i64 %171, 0
  %180 = select i1 %179, i64 %167, i64 %171
  %181 = add i64 %180, %170
  %182 = and i64 %181, %143
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %137, i64 %182
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %183, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %192, label %168

187:                                              ; preds = %168
  %188 = icmp eq %"struct.WTF::KeyValuePair.692"* %169, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %169, i64 0, i32 1, i32 0, i32 0
  %191 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %190, align 8
  br label %192

192:                                              ; preds = %178, %189, %187, %139, %135, %124, %120, %63
  %193 = phi %"class.blink::FilterEffect"* [ %122, %120 ], [ %65, %63 ], [ %126, %124 ], [ %191, %189 ], [ null, %187 ], [ null, %135 ], [ null, %139 ], [ null, %178 ]
  ret %"class.blink::FilterEffect"* %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::FilterEffect"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::FilterEffect"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %34, align 8
  %36 = icmp eq %"class.blink::FilterEffect"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %54, align 8
  %56 = icmp eq %"class.blink::FilterEffect"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %63, align 8
  %65 = icmp eq %"class.blink::FilterEffect"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare void @_ZN5blink7Element32UpdatePresentationAttributeStyleEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.39"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.39"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([195 x i8], [195 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_12FilterEffectEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #9
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.39"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %33
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FilterEffect"*
  %4 = bitcast i8* %1 to void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)**, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FilterEffect"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_S8_SI_EERPS3_PSB_EENS_18HashTableAddResultISJ_SD_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::FilterEffect"** dereferenceable(8), %"class.blink::HeapHashSet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FilterEffect"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %40, align 8
  %42 = icmp eq %"class.blink::FilterEffect"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::FilterEffect"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::FilterEffect"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::FilterEffect"* %59, %43
  br i1 %64, label %119, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::FilterEffect"* %59, inttoptr (i64 -1 to %"class.blink::FilterEffect"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %73, align 8
  %75 = icmp eq %"class.blink::FilterEffect"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::FilterEffect"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::FilterEffect"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::FilterEffect"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #9
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %99 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %2, align 8
  %100 = ptrtoint %"class.blink::HeapHashSet"* %99 to i64
  %101 = bitcast %"class.blink::Member.11"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::HeapHashSet"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #9
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_12FilterEffectEEENS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_18HashMapValueTraitsISB_NSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %89) #9
  %108 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %119

119:                                              ; preds = %58, %107, %117
  %120 = phi i8 [ 1, %107 ], [ 1, %117 ], [ 0, %58 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %89, %107 ], [ %118, %117 ], [ %60, %58 ]
  %122 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %121, 0
  %123 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %122, i8 %120, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1456"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking.1456"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE8RehashToEPSD_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1456"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking.1456"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking.1456"**
  store %"class.blink::HeapHashTableBacking.1456"* %44, %"class.blink::HeapHashTableBacking.1456"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1456", %"class.blink::HeapHashTableBacking.1456"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE8RehashToEPSD_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.11"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.11"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE8RehashToEPSD_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #9
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #9
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %67) #9
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.11"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.11"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1456"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS1_12KeyValuePairIS5_NS3_INS_11HeapHashSetIS5_NS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EEEEEEEENS1_24KeyValuePairKeyExtractorES9_NS1_18HashMapValueTraitsISB_NSA_ISD_EEEESB_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1456"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1456"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS1_12KeyValuePairIS5_NS3_INS_11HeapHashSetIS5_NS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EEEEEEEENS1_24KeyValuePairKeyExtractorES9_NS1_18HashMapValueTraitsISB_NSA_ISD_EEEESB_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.39"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.39"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([757 x i8], [757 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS6_NS4_INS1_11HeapHashSetIS6_NS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_12FilterEffectEEENS_12KeyValuePairIS6_NS4_INS3_11HeapHashSetIS6_NS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_12FilterEffectEEENS_12KeyValuePairIS6_NS4_INS3_11HeapHashSetIS6_NS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISE_EEEESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %73, %20
  ret void

33:                                               ; preds = %73, %30
  %34 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %53

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %73
    i64 0, label %73
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.11"* %40 to i64*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  %46 = load atomic i64, i64* %41 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %73

53:                                               ; preds = %33
  %54 = load i64, i64* %36, align 8
  switch i64 %54, label %55 [
    i64 -1, label %73
    i64 0, label %73
  ]

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %57 = load atomic i64, i64* %36 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::Member.11"* %56 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %73

73:                                               ; preds = %53, %53, %37, %37, %68, %64, %39, %48
  %74 = add nuw nsw i64 %34, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetIS4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISC_EEEESA_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %34, align 8
  %36 = icmp eq %"class.blink::FilterEffect"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::FilterEffect"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::FilterEffect"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %67, align 8
  %69 = icmp eq %"class.blink::FilterEffect"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::FilterEffect"* %63, inttoptr (i64 -1 to %"class.blink::FilterEffect"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %79, align 8
  %81 = icmp eq %"class.blink::FilterEffect"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_12FilterEffectEEENS4_INS_11HeapHashSetIS6_NS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EEEEEEEENS2_18HashMapValueTraitsISB_NSA_ISD_EEEEEEvPT_(%"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %18, %29
  %36 = bitcast %"class.blink::Member.11"* %25 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_12FilterEffectEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %45

45:                                               ; preds = %35, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.15"*, %"class.blink::FilterEffect"** dereferenceable(8), %"class.blink::FilterEffect"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = icmp eq %"class.blink::Member"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.15"* %0, %"class.blink::Member"* null)
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FilterEffect"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %40, align 8
  %42 = icmp eq %"class.blink::FilterEffect"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::FilterEffect"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::FilterEffect"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::FilterEffect"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::FilterEffect"* %59, inttoptr (i64 -1 to %"class.blink::FilterEffect"*)
  %67 = select i1 %66, %"class.blink::Member"* %60, %"class.blink::Member"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %73, align 8
  %75 = icmp eq %"class.blink::FilterEffect"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %2, align 8
  %89 = ptrtoint %"class.blink::FilterEffect"* %88 to i64
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::FilterEffect"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #9
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #9
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.15"* %0, %"class.blink::Member"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member"*, i8 } undef, %"class.blink::Member"* %117, 0
  %119 = insertvalue { %"class.blink::Member"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.15"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.15"* %0, i32 %35, %"class.blink::Member"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member"*
  %44 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.15"* %0, %"class.blink::Member"* %43, i32 %40, %"class.blink::Member"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.15"*, i32, %"class.blink::Member"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %33 = icmp eq %"class.blink::Member"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member"* %61, %"class.blink::Member"* %55
  %63 = bitcast %"class.blink::Member"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.15"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #9
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.15"* %0, %"class.blink::Member"* %42, i32 %1, %"class.blink::Member"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member"* %87, %"class.blink::Member"* %82
  %89 = bitcast %"class.blink::Member"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member"* %99, %"class.blink::Member"* %88
  %101 = bitcast %"class.blink::Member"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12FilterEffectEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.15"*, %"class.blink::Member"*, i32, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #9
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.15"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #9
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.15", %"class.WTF::HashTable.15"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 %42
  %44 = bitcast %"class.blink::Member"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %70, align 8
  %72 = icmp eq %"class.blink::FilterEffect"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::FilterEffect"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member"* %93, null
  %95 = ptrtoint %"class.blink::Member"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::FilterEffect"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::FilterEffect"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::FilterEffect"* %99, inttoptr (i64 -1 to %"class.blink::FilterEffect"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %113, align 8
  %115 = icmp eq %"class.blink::FilterEffect"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member"* %121, %3
  %123 = select i1 %122, %"class.blink::Member"* %118, %"class.blink::Member"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.39"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.39"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([356 x i8], [356 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_12FilterEffectEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12FilterEffectEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.23"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EEPS3_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.21"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** dereferenceable(8), %"class.blink::FilterEffect"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.23"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.21"* %0, %"struct.WTF::KeyValuePair.23"* null)
  %9 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.23"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGFilterPrimitiveStandardAttributes"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %40, align 8
  %42 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGFilterPrimitiveStandardAttributes"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGFilterPrimitiveStandardAttributes"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.23"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.23"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %59, %43
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %59, inttoptr (i64 -1 to %"class.blink::SVGFilterPrimitiveStandardAttributes"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.23"* %60, %"struct.WTF::KeyValuePair.23"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %73, align 8
  %75 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.23"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.23"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::SVGFilterPrimitiveStandardAttributes"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.23"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::SVGFilterPrimitiveStandardAttributes"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.23"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::SVGFilterPrimitiveStandardAttributes"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #9
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %89, i64 0, i32 1
  %99 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %2, align 8
  %100 = ptrtoint %"class.blink::FilterEffect"* %99 to i64
  %101 = bitcast %"class.blink::Member"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::FilterEffect"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #9
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS_6MemberINS_12FilterEffectEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair.23"* %89) #9
  %108 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.21"* %0, %"struct.WTF::KeyValuePair.23"* %89)
  br label %153

119:                                              ; preds = %107
  %120 = mul i32 %110, 6
  %121 = icmp ult i32 %120, %115
  %122 = icmp ugt i32 %115, 8
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %153

124:                                              ; preds = %119
  %125 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %126 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %125, i64 0, i32 1
  %127 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %126) #9
  %128 = icmp eq i8* %127, null
  br i1 %128, label %129, label %131, !prof !3

129:                                              ; preds = %124
  %130 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %126, i8* %130) #9
  br label %131

131:                                              ; preds = %129, %124
  %132 = phi i8* [ %130, %129 ], [ %127, %124 ]
  %133 = bitcast i8* %132 to %"class.blink::ThreadState"**
  %134 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %134, i64 0, i32 6
  %136 = load i8, i8* %135, align 8, !range !4
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %134, i64 0, i32 16
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %153, label %142

142:                                              ; preds = %131, %138
  %143 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %134, i64 0, i32 13
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %142
  %147 = load i32, i32* %12, align 8
  %148 = lshr i32 %147, 1
  %149 = zext i32 %148 to i64
  %150 = tail call %"class.blink::HeapHashTableBacking.1480"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %149) #9
  %151 = bitcast %"class.blink::HeapHashTableBacking.1480"* %150 to %"struct.WTF::KeyValuePair.23"*
  %152 = tail call %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.21"* %0, %"struct.WTF::KeyValuePair.23"* %151, i32 %148, %"struct.WTF::KeyValuePair.23"* %89) #9
  br label %153

153:                                              ; preds = %58, %138, %119, %117, %146, %142
  %154 = phi i8 [ 1, %142 ], [ 1, %146 ], [ 1, %117 ], [ 1, %119 ], [ 1, %138 ], [ 0, %58 ]
  %155 = phi %"struct.WTF::KeyValuePair.23"* [ %89, %142 ], [ %152, %146 ], [ %118, %117 ], [ %89, %119 ], [ %89, %138 ], [ %60, %58 ]
  %156 = insertvalue { %"struct.WTF::KeyValuePair.23"*, i8 } undef, %"struct.WTF::KeyValuePair.23"* %155, 0
  %157 = insertvalue { %"struct.WTF::KeyValuePair.23"*, i8 } %156, i8 %154, 1
  ret { %"struct.WTF::KeyValuePair.23"*, i8 } %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.21"*, %"struct.WTF::KeyValuePair.23"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable.21"* %0, i32 %35, %"struct.WTF::KeyValuePair.23"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1480"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking.1480"* %42 to %"struct.WTF::KeyValuePair.23"*
  %44 = call %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.21"* %0, %"struct.WTF::KeyValuePair.23"* %43, i32 %40, %"struct.WTF::KeyValuePair.23"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.23"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.23"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS_6MemberINS_12FilterEffectEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair.23"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member"* %25 to i8*
  %27 = bitcast %"struct.WTF::KeyValuePair.23"* %0 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %18
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %24, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_36SVGFilterPrimitiveStandardAttributesEE5TraceEPNS_7VisitorEPKv) #9
  br label %36

36:                                               ; preds = %18, %30
  %37 = load atomic i64, i64* %27 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* %40, i8* %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %45

45:                                               ; preds = %36, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_36SVGFilterPrimitiveStandardAttributesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGFilterPrimitiveStandardAttributes"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGFilterPrimitiveStandardAttributes"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable.21"*, i32, %"struct.WTF::KeyValuePair.23"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.23"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.23"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1480"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking.1480"* %44 to %"struct.WTF::KeyValuePair.23"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.23"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.21"* %0 to %"class.blink::HeapHashTableBacking.1480"**
  store %"class.blink::HeapHashTableBacking.1480"* %44, %"class.blink::HeapHashTableBacking.1480"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1480", %"class.blink::HeapHashTableBacking.1480"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.23"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.21"* %0, %"struct.WTF::KeyValuePair.23"* %42, i32 %1, %"struct.WTF::KeyValuePair.23"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.23"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.23"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.23"* %64, %"struct.WTF::KeyValuePair.23"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.23"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.23"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.23"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.23"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.23"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.23"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.21"*, %"struct.WTF::KeyValuePair.23"*, i32, %"struct.WTF::KeyValuePair.23"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.21", align 8
  %6 = bitcast %"class.WTF::HashTable.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.21"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.23"* %1, %"struct.WTF::KeyValuePair.23"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.23"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.23"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.21"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.23"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.21"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #9
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.21"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.21"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.23"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS9_j(%"struct.WTF::KeyValuePair.23"* nonnull %52, i32 %41) #9
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.23"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.23"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.23"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.23"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.23"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.21"* nonnull %5, %"class.blink::WeakMember.745"* dereferenceable(8) %67) #9
  %69 = extractvalue { %"struct.WTF::KeyValuePair.23"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.23"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.23"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.23"* %69, %"struct.WTF::KeyValuePair.23"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.23"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.23"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1480"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS1_12KeyValuePairIS5_NS_6MemberINS_12FilterEffectEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1480"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1480"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS1_12KeyValuePairIS5_NS_6MemberINS_12FilterEffectEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.39"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.39"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([635 x i8], [635 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS6_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS6_NS3_6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS6_NS3_6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.23"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %69, %20
  ret void

33:                                               ; preds = %69, %30
  %34 = phi i64 [ 0, %30 ], [ %70, %69 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.23"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %69
    i64 0, label %69
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i8*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_36SVGFilterPrimitiveStandardAttributesEE5TraceEPNS_7VisitorEPKv) #9
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 9
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* %42, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %69

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %69
    i64 0, label %69
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i8*
  %54 = load atomic i64, i64* %36 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_36SVGFilterPrimitiveStandardAttributesEE5TraceEPNS_7VisitorEPKv) #9
  br label %61

61:                                               ; preds = %56, %51
  %62 = load atomic i64, i64* %36 monotonic, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = inttoptr i64 %62 to i8*
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 9
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %0, i8* %65, i8* %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %69

69:                                               ; preds = %49, %49, %37, %37, %64, %61, %39
  %70 = add nuw nsw i64 %34, 1
  %71 = icmp eq i64 %70, %23
  br i1 %71, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.23"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.21"*, %"class.blink::WeakMember.745"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.745"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.23"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %34, align 8
  %36 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::SVGFilterPrimitiveStandardAttributes"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.23"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.23"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.23"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.23"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.23"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::SVGFilterPrimitiveStandardAttributes"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %67, align 8
  %69 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %63, inttoptr (i64 -1 to %"class.blink::SVGFilterPrimitiveStandardAttributes"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.23"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %79, align 8
  %81 = icmp eq %"class.blink::SVGFilterPrimitiveStandardAttributes"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.23"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.23"*, i8 } undef, %"struct.WTF::KeyValuePair.23"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.23"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.23"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS9_j(%"struct.WTF::KeyValuePair.23"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !4
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %36, %21
  %24 = phi i64 [ 0, %21 ], [ %37, %36 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair.23"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %36
    i64 0, label %36
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #9
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %0, i64 %24, i32 1
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  br label %36

36:                                               ; preds = %23, %23, %33
  %37 = add nuw nsw i64 %24, 1
  %38 = icmp eq i64 %37, %22
  br i1 %38, label %39, label %23

39:                                               ; preds = %36, %12, %2
  %40 = bitcast %"struct.WTF::KeyValuePair.23"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %40) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_36SVGFilterPrimitiveStandardAttributesEEENS_12KeyValuePairIS5_NS2_6MemberINS2_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.23"**
  %4 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.23"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.23"* %12, %4
  br i1 %13, label %64, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %60
  %20 = phi %"struct.WTF::KeyValuePair.23"* [ %12, %14 ], [ %61, %60 ]
  %21 = phi %"struct.WTF::KeyValuePair.23"* [ %11, %14 ], [ %20, %60 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::SVGFilterPrimitiveStandardAttributes"*, %"class.blink::SVGFilterPrimitiveStandardAttributes"** %22, align 8
  %24 = ptrtoint %"class.blink::SVGFilterPrimitiveStandardAttributes"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %60
    i64 0, label %60
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #9
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #9
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %60, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::SVGFilterPrimitiveStandardAttributes", %"class.blink::SVGFilterPrimitiveStandardAttributes"* %23, i64 -1, i32 5
  %39 = bitcast %"class.blink::Member.76"* %38 to %"class.blink::HeapObjectHeader"*
  %40 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %37
  %45 = bitcast %"struct.WTF::KeyValuePair.23"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #9
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %21, i64 -1, i32 1
  %52 = bitcast %"class.blink::Member"* %51 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  %53 = load i32, i32* %16, align 8
  %54 = add i32 %53, 1
  %55 = and i32 %54, 2147483647
  %56 = and i32 %53, -2147483648
  %57 = or i32 %55, %56
  store i32 %57, i32* %16, align 8
  %58 = load i32, i32* %18, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %18, align 4
  br label %60

60:                                               ; preds = %19, %19, %32, %37, %50
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %20, i64 -1
  %62 = load %"struct.WTF::KeyValuePair.23"*, %"struct.WTF::KeyValuePair.23"** %3, align 8
  %63 = icmp ult %"struct.WTF::KeyValuePair.23"* %61, %62
  br i1 %63, label %64, label %19

64:                                               ; preds = %60, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_36SVGFilterPrimitiveStandardAttributesEEENS2_12KeyValuePairIS6_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.23"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %60, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %57, %30
  %33 = phi i64 [ 0, %30 ], [ %58, %57 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.23"* %34 to i64*
  br i1 %28, label %36, label %45

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %57
    i64 0, label %57
  ]

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %3, i64 %33, i32 1
  %40 = bitcast %"class.blink::Member"* %39 to i8*
  %41 = inttoptr i64 %37 to i8*
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %0, i8* %41, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %57

45:                                               ; preds = %32
  %46 = load i64, i64* %35, align 8
  switch i64 %46, label %47 [
    i64 -1, label %57
    i64 0, label %57
  ]

47:                                               ; preds = %45
  %48 = load atomic i64, i64* %35 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.23", %"struct.WTF::KeyValuePair.23"* %3, i64 %33, i32 1
  %52 = bitcast %"class.blink::Member"* %51 to i8*
  %53 = inttoptr i64 %48 to i8*
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 9
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %0, i8* %53, i8* %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_12FilterEffectEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %57

57:                                               ; preds = %50, %47, %45, %45, %38, %36, %36
  %58 = add nuw nsw i64 %33, 1
  %59 = icmp eq i64 %58, %23
  br i1 %59, label %60, label %32

60:                                               ; preds = %57, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FilterEffect"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.692"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* null)
  %9 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.692"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.692"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.692"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.692"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %171, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.692"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.692"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.692"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #9
  %66 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.692"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #9
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #9
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.692"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %94
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %75, i64 0, i32 1
  %115 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %2, align 8
  %116 = ptrtoint %"class.blink::FilterEffect"* %115 to i64
  %117 = bitcast %"class.blink::Member"* %114 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %113
  %121 = bitcast %"class.blink::FilterEffect"* %115 to i8*
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #9
  br label %123

123:                                              ; preds = %113, %120
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %159, label %126

126:                                              ; preds = %123
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #9
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !3

131:                                              ; preds = %126
  %132 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #9
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 9
  %138 = load i8, i8* %137, align 1, !range !4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %159, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 13
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %144, align 8
  %146 = load atomic i64, i64* %117 monotonic, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %145, i64 0, i32 0, i32 0
  %150 = inttoptr i64 %146 to i8*
  %151 = bitcast %"class.blink::MarkingVisitor"* %145 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %152 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %152, i64 5
  %154 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, align 8
  tail call void %154(%"class.blink::Visitor"* %149, i8* nonnull %150, i8* %150, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  %155 = load i64, i64* %141, align 8
  br label %156

156:                                              ; preds = %148, %140
  %157 = phi i64 [ %143, %140 ], [ %155, %148 ]
  %158 = add i64 %157, -1
  store i64 %158, i64* %141, align 8
  br label %159

159:                                              ; preds = %123, %133, %156
  %160 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %160, align 4
  %163 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %164, %162
  %166 = shl i32 %165, 1
  %167 = load i32, i32* %12, align 8
  %168 = icmp ult i32 %166, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %159
  %170 = tail call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* %75)
  br label %171

171:                                              ; preds = %49, %159, %169
  %172 = phi i8 [ 1, %159 ], [ 1, %169 ], [ 0, %49 ]
  %173 = phi %"struct.WTF::KeyValuePair.692"* [ %75, %159 ], [ %170, %169 ], [ %42, %49 ]
  %174 = insertvalue { %"struct.WTF::KeyValuePair.692"*, i8 } undef, %"struct.WTF::KeyValuePair.692"* %173, 0
  %175 = insertvalue { %"struct.WTF::KeyValuePair.692"*, i8 } %174, i8 %172, 1
  ret { %"struct.WTF::KeyValuePair.692"*, i8 } %175
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"*, %"struct.WTF::KeyValuePair.692"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.690"* %0, i32 %35, %"struct.WTF::KeyValuePair.692"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1491"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking.1491"* %42 to %"struct.WTF::KeyValuePair.692"*
  %44 = call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* %43, i32 %40, %"struct.WTF::KeyValuePair.692"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.692"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.692"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.690"*, i32, %"struct.WTF::KeyValuePair.692"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.692"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.692"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1491"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking.1491"* %44 to %"struct.WTF::KeyValuePair.692"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.692"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.690"* %0 to %"class.blink::HeapHashTableBacking.1491"**
  store %"class.blink::HeapHashTableBacking.1491"* %44, %"class.blink::HeapHashTableBacking.1491"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1491", %"class.blink::HeapHashTableBacking.1491"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.692"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* %42, i32 %1, %"struct.WTF::KeyValuePair.692"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.692"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.692"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.692"* %64, %"struct.WTF::KeyValuePair.692"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.692"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.692"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.692"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %96, i64 %59, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.692"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.692"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.690"*, %"struct.WTF::KeyValuePair.692"*, i32, %"struct.WTF::KeyValuePair.692"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.692"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %10, align 8
  br label %70

14:                                               ; preds = %169, %4
  %15 = phi i32 [ 0, %4 ], [ %170, %169 ]
  %16 = phi %"struct.WTF::KeyValuePair.692"* [ null, %4 ], [ %172, %169 ]
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.WTF::KeyValuePair.692"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %20) #9
  %21 = load i32, i32* %6, align 8
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %15, %14 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %24, align 8
  %26 = bitcast %"class.WTF::HashTable.690"* %0 to i64*
  store atomic i64 %5, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"struct.WTF::KeyValuePair.692"* %1 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #9
  br label %32

32:                                               ; preds = %22, %29
  store i32 %2, i32* %6, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.692"* %25, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %23, 0
  br i1 %35, label %64, label %36

36:                                               ; preds = %34
  %37 = zext i32 %23 to i64
  br label %38

38:                                               ; preds = %61, %36
  %39 = phi i64 [ 0, %36 ], [ %62, %61 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %25, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  switch i64 %43, label %44 [
    i64 -1, label %61
    i64 0, label %61
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %56, %53
  %58 = bitcast %"struct.WTF::KeyValuePair.692"* %40 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %25, i64 %39, i32 1
  %60 = bitcast %"class.blink::Member"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %57, %38, %38
  %62 = add nuw nsw i64 %39, 1
  %63 = icmp eq i64 %62, %37
  br i1 %63, label %64, label %38

64:                                               ; preds = %61, %34
  %65 = bitcast %"struct.WTF::KeyValuePair.692"* %25 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %65) #9
  br label %66

66:                                               ; preds = %32, %64
  %67 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, -2147483648
  store i32 %69, i32* %67, align 8
  ret %"struct.WTF::KeyValuePair.692"* %16

70:                                               ; preds = %9, %169
  %71 = phi i32 [ %7, %9 ], [ %170, %169 ]
  %72 = phi %"struct.WTF::KeyValuePair.692"* [ %13, %9 ], [ %171, %169 ]
  %73 = phi %"struct.WTF::KeyValuePair.692"* [ null, %9 ], [ %172, %169 ]
  %74 = phi i32 [ 0, %9 ], [ %173, %169 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %72, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"struct.WTF::KeyValuePair.692"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  switch i64 %79, label %81 [
    i64 -1, label %169
    i64 0, label %169
  ]

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, %11
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.692"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %81
  %93 = xor i32 %84, -1
  %94 = lshr i32 %83, 31
  %95 = add nsw i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %114

106:                                              ; preds = %126
  %107 = ptrtoint %"struct.WTF::KeyValuePair.692"* %132 to i64
  br label %108

108:                                              ; preds = %106, %81
  %109 = phi i64 [ %88, %81 ], [ %107, %106 ]
  %110 = phi %"struct.WTF::KeyValuePair.692"* [ null, %81 ], [ %127, %106 ]
  %111 = icmp eq %"struct.WTF::KeyValuePair.692"* %110, null
  %112 = ptrtoint %"struct.WTF::KeyValuePair.692"* %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  br label %137

114:                                              ; preds = %126, %92
  %115 = phi %"struct.WTF::KeyValuePair.692"* [ null, %92 ], [ %127, %126 ]
  %116 = phi i64 [ %88, %92 ], [ %133, %126 ]
  %117 = phi %"struct.WTF::KeyValuePair.692"* [ %87, %92 ], [ %132, %126 ]
  %118 = phi i64 [ %86, %92 ], [ %131, %126 ]
  %119 = phi i64 [ 0, %92 ], [ %129, %126 ]
  %120 = bitcast %"struct.WTF::KeyValuePair.692"* %117 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = bitcast i8* %121 to %"class.WTF::StringImpl"*
  %125 = icmp eq %"class.WTF::StringImpl"* %80, %124
  br i1 %125, label %137, label %126

126:                                              ; preds = %123, %114
  %127 = phi %"struct.WTF::KeyValuePair.692"* [ %115, %123 ], [ %117, %114 ]
  %128 = icmp eq i64 %119, 0
  %129 = select i1 %128, i64 %105, i64 %119
  %130 = add i64 %129, %118
  %131 = and i64 %130, %12
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %1, i64 %131
  %133 = ptrtoint %"struct.WTF::KeyValuePair.692"* %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %106, label %114

137:                                              ; preds = %123, %108
  %138 = phi i64 [ %113, %108 ], [ %116, %123 ]
  %139 = inttoptr i64 %138 to %"struct.WTF::KeyValuePair.692"*
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %156

156:                                              ; preds = %137, %152, %155
  %157 = load i64, i64* %78, align 8
  %158 = inttoptr i64 %138 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %139, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %72, i64 %75, i32 1
  %161 = bitcast %"class.blink::Member"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::Member"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %10, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %164, i64 %75
  %166 = icmp eq %"struct.WTF::KeyValuePair.692"* %165, %3
  %167 = select i1 %166, %"struct.WTF::KeyValuePair.692"* %139, %"struct.WTF::KeyValuePair.692"* %73
  %168 = load i32, i32* %6, align 8
  br label %169

169:                                              ; preds = %70, %70, %156
  %170 = phi i32 [ %71, %70 ], [ %168, %156 ], [ %71, %70 ]
  %171 = phi %"struct.WTF::KeyValuePair.692"* [ %72, %70 ], [ %164, %156 ], [ %72, %70 ]
  %172 = phi %"struct.WTF::KeyValuePair.692"* [ %73, %70 ], [ %167, %156 ], [ %73, %70 ]
  %173 = add i32 %74, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %14, label %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1491"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_12FilterEffectEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1491"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1491"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_12FilterEffectEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.39"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.39"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([414 x i8], [414 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #9
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_12FilterEffectEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.692"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_12FilterEffectEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.692"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.692"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

declare void @_ZN5blink11SourceAlphaC1EPNS_12FilterEffectE(%"class.blink::SourceAlpha"*, %"class.blink::FilterEffect"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12FilterEffectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.39"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FilterEffectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.39"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FilterEffectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12FilterEffectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FilterEffect"*
  %3 = bitcast i8* %0 to void (%"class.blink::FilterEffect"*)***
  %4 = load void (%"class.blink::FilterEffect"*)**, void (%"class.blink::FilterEffect"*)*** %3, align 8
  %5 = load void (%"class.blink::FilterEffect"*)*, void (%"class.blink::FilterEffect"*)** %4, align 8
  tail call void %5(%"class.blink::FilterEffect"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12FilterEffectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_11SourceAlphaEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::SourceAlpha"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.692"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* null)
  %9 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.692"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.692"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.692"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.692"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %171, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.692"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.692"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.692"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #9
  %66 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.692"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #9
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #9
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.692"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %94
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %75, i64 0, i32 1
  %115 = load %"class.blink::SourceAlpha"*, %"class.blink::SourceAlpha"** %2, align 8
  %116 = ptrtoint %"class.blink::SourceAlpha"* %115 to i64
  %117 = bitcast %"class.blink::Member"* %114 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %113
  %121 = bitcast %"class.blink::SourceAlpha"* %115 to i8*
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #9
  br label %123

123:                                              ; preds = %113, %120
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %159, label %126

126:                                              ; preds = %123
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #9
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !3

131:                                              ; preds = %126
  %132 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #9
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 9
  %138 = load i8, i8* %137, align 1, !range !4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %159, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 13
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %144, align 8
  %146 = load atomic i64, i64* %117 monotonic, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %145, i64 0, i32 0, i32 0
  %150 = inttoptr i64 %146 to i8*
  %151 = bitcast %"class.blink::MarkingVisitor"* %145 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %152 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %152, i64 5
  %154 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, align 8
  tail call void %154(%"class.blink::Visitor"* %149, i8* nonnull %150, i8* %150, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  %155 = load i64, i64* %141, align 8
  br label %156

156:                                              ; preds = %148, %140
  %157 = phi i64 [ %143, %140 ], [ %155, %148 ]
  %158 = add i64 %157, -1
  store i64 %158, i64* %141, align 8
  br label %159

159:                                              ; preds = %123, %133, %156
  %160 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %160, align 4
  %163 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %164, %162
  %166 = shl i32 %165, 1
  %167 = load i32, i32* %12, align 8
  %168 = icmp ult i32 %166, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %159
  %170 = tail call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* %75)
  br label %171

171:                                              ; preds = %49, %159, %169
  %172 = phi i8 [ 1, %159 ], [ 1, %169 ], [ 0, %49 ]
  %173 = phi %"struct.WTF::KeyValuePair.692"* [ %75, %159 ], [ %170, %169 ], [ %42, %49 ]
  %174 = insertvalue { %"struct.WTF::KeyValuePair.692"*, i8 } undef, %"struct.WTF::KeyValuePair.692"* %173, 0
  %175 = insertvalue { %"struct.WTF::KeyValuePair.692"*, i8 } %174, i8 %172, 1
  ret { %"struct.WTF::KeyValuePair.692"*, i8 } %175
}

declare void @_ZN5blink17PaintFilterEffectC1EPNS_6FilterERKN2cc10PaintFlagsE(%"class.blink::PaintFilterEffect"*, %"class.blink::Filter"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.692"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_PNS3_17PaintFilterEffectEEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.690"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PaintFilterEffect"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.692"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* null)
  %9 = load %"struct.WTF::KeyValuePair.692"*, %"struct.WTF::KeyValuePair.692"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.692"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.692"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.692"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.692"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %171, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.692"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.692"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.692"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #9
  %66 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.692"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #9
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #9
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.692"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %94
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.692", %"struct.WTF::KeyValuePair.692"* %75, i64 0, i32 1
  %115 = load %"class.blink::PaintFilterEffect"*, %"class.blink::PaintFilterEffect"** %2, align 8
  %116 = ptrtoint %"class.blink::PaintFilterEffect"* %115 to i64
  %117 = bitcast %"class.blink::Member"* %114 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %113
  %121 = bitcast %"class.blink::PaintFilterEffect"* %115 to i8*
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #9
  br label %123

123:                                              ; preds = %113, %120
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %159, label %126

126:                                              ; preds = %123
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #9
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !3

131:                                              ; preds = %126
  %132 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #9
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 9
  %138 = load i8, i8* %137, align 1, !range !4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %159, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 13
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %144, align 8
  %146 = load atomic i64, i64* %117 monotonic, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %145, i64 0, i32 0, i32 0
  %150 = inttoptr i64 %146 to i8*
  %151 = bitcast %"class.blink::MarkingVisitor"* %145 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %152 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %152, i64 5
  %154 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, align 8
  tail call void %154(%"class.blink::Visitor"* %149, i8* nonnull %150, i8* %150, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #9
  %155 = load i64, i64* %141, align 8
  br label %156

156:                                              ; preds = %148, %140
  %157 = phi i64 [ %143, %140 ], [ %155, %148 ]
  %158 = add i64 %157, -1
  store i64 %158, i64* %141, align 8
  br label %159

159:                                              ; preds = %123, %133, %156
  %160 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %160, align 4
  %163 = getelementptr inbounds %"class.WTF::HashTable.690", %"class.WTF::HashTable.690"* %0, i64 0, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %164, %162
  %166 = shl i32 %165, 1
  %167 = load i32, i32* %12, align 8
  %168 = icmp ult i32 %166, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %159
  %170 = tail call %"struct.WTF::KeyValuePair.692"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_12FilterEffectEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.690"* %0, %"struct.WTF::KeyValuePair.692"* %75)
  br label %171

171:                                              ; preds = %49, %159, %169
  %172 = phi i8 [ 1, %159 ], [ 1, %169 ], [ 0, %49 ]
  %173 = phi %"struct.WTF::KeyValuePair.692"* [ %75, %159 ], [ %170, %169 ], [ %42, %49 ]
  %174 = insertvalue { %"struct.WTF::KeyValuePair.692"*, i8 } undef, %"struct.WTF::KeyValuePair.692"* %173, 0
  %175 = insertvalue { %"struct.WTF::KeyValuePair.692"*, i8 } %174, i8 %172, 1
  ret { %"struct.WTF::KeyValuePair.692"*, i8 } %175
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
